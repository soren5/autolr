[{"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 0, 5, 4, 3, 2, 4, 1, 0, 2, 5, 6, 1, 6, 8, 6, 4, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 0, 1, 3, 1, 3, 4, 1, 2], [60, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.819428563117981, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [1.9701080968146625, 1.3920439122265136, 1.0229083232324767, 0.8842929519792636, 0.8143661438261497, 0.7584540262324321, 0.736307920458263, 0.6839808985588967, 0.6706801840516129, 0.6644201601075931, 0.6587038376406593, 0.619557084133124, 0.6038347502678078, 0.6231465841548917, 0.5960174179300735, 0.590030633353003, 0.5462683216928097, 0.552784885193111, 0.5544909116236478, 0.5244031248587375, 0.5444288034055527, 0.5252262619366468, 0.4981792778378984, 0.47963891072972986, 0.4959062321539395, 0.46615665888096663, 0.46914204817327765, 0.4805713911035105, 0.4533424393108193, 0.45794798638669176, 0.44568730190272315, 0.4299115100045167, 0.43021429277461487, 0.44154089780972383], "accuracy": [0.32743361592292786, 0.5068022608757019, 0.6263373494148254, 0.663848876953125, 0.6983225345611572, 0.7104741930961609, 0.7250033020973206, 0.7384757399559021, 0.7470611333847046, 0.7457403540611267, 0.7446836829185486, 0.7633073329925537, 0.7713643908500671, 0.7614582180976868, 0.770439863204956, 0.7701756954193115, 0.7940827012062073, 0.7985734939575195, 0.7909126877784729, 0.8014793395996094, 0.7972526550292969, 0.8010830879211426, 0.816008448600769, 0.8206313848495483, 0.8109893202781677, 0.8251221776008606, 0.8227446675300598, 0.8185180425643921, 0.8248580098152161, 0.8294808864593506, 0.8330471515655518, 0.8363492488861084, 0.8378021121025085, 0.8322546482086182], "val_loss": [1.5163378715515137, 0.8740053858075824, 0.7413415057318551, 0.6285724810191563, 0.6076250416891915, 0.6234046050480434, 0.5785958596638271, 0.5489821604319981, 0.5759387186595372, 0.5272731270108905, 0.4918574946267264, 0.5776787996292114, 0.5336961916514805, 0.5141693353652954, 0.48017544405800955, 0.4521824972970145, 0.45751358781542095, 0.4919923884528024, 0.47363236972263884, 0.43827569484710693, 0.4360253470284598, 0.43284971373421804, 0.41073134967259, 0.4154201831136431, 0.41074396882738384, 0.4095420837402344, 0.418582694871085, 0.4088818941797529, 0.3837611164365496, 0.3926898070744106, 0.3887952651296343, 0.3908595357622419, 0.4183361956051418, 0.3908119201660156], "val_accuracy": [0.39800000190734863, 0.6326666474342346, 0.6710000038146973, 0.7223333120346069, 0.7369999885559082, 0.703000009059906, 0.7393333315849304, 0.7559999823570251, 0.7553333044052124, 0.750333309173584, 0.7806666493415833, 0.70333331823349, 0.7559999823570251, 0.75, 0.7836666703224182, 0.8063333630561829, 0.8006666898727417, 0.7879999876022339, 0.7839999794960022, 0.8146666884422302, 0.8133333325386047, 0.8136666417121887, 0.8180000185966492, 0.824999988079071, 0.8273333311080933, 0.8106666803359985, 0.8116666674613953, 0.8176666498184204, 0.843999981880188, 0.8273333311080933, 0.8370000123977661, 0.8326666951179504, 0.8083333373069763, 0.8199999928474426]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 2, 0, 0, 2, 4, 6, 5, 0, 9, 5, 8, 1, 8, 9], [3, 0, 1, 3, 1, 3, 4, 1, 2], [60, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.8171428442001343, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.24525558877662, 2.1722280998680934, 2.1227751579015104, 1.9267048794186237, 1.3439328330870963, 0.9917805619747443, 0.8767617787383944, 0.759081409284861, 0.7172025950388619, 0.6680294882824487, 0.6493409922361972, 0.6437929151962305, 0.6085292974546239, 0.6028650051346702, 0.6048407386070733, 0.5662385299063756, 0.5265819162362603, 0.5284765488861133, 0.5235730453315995, 0.5023272258651853, 0.5160164313584964, 0.5072602576992814, 0.4692041414005409, 0.4670708078269583, 0.4700459844880903, 0.43436805982442345, 0.4756117172528409, 0.4541535482052657, 0.4383203535347, 0.432219806883896, 0.41536434470481404, 0.4242508249858493, 0.3942846992130466, 0.4128292905789923], "accuracy": [0.23840972781181335, 0.20723815262317657, 0.2805441915988922, 0.3541143834590912, 0.518161416053772, 0.6199973821640015, 0.6656980514526367, 0.7116629481315613, 0.7289658188819885, 0.7473253011703491, 0.7500990629196167, 0.7523444890975952, 0.7687227725982666, 0.7718927264213562, 0.7685906887054443, 0.7774402499198914, 0.8026680946350098, 0.8026680946350098, 0.8012151718139648, 0.8107251524925232, 0.8049134612083435, 0.8074230551719666, 0.826310932636261, 0.8260467648506165, 0.8267071843147278, 0.8366134166717529, 0.8186501264572144, 0.8264430165290833, 0.8304054737091064, 0.8342359066009521, 0.8465195894241333, 0.8428213000297546, 0.8477083444595337, 0.845859169960022], "val_loss": [1.9272660527910506, 1.9340674536568778, 1.770831721169608, 1.361572299684797, 0.8186286517551967, 0.7015181609562465, 0.6057592800685337, 0.5660780838557652, 0.5718264579772949, 0.5511780977249146, 0.5119523661477225, 0.515318785394941, 0.49467830998556955, 0.4761515515191214, 0.4372952325003488, 0.4259389638900757, 0.43910133838653564, 0.431594831602914, 0.46721655981881277, 0.3929447020803179, 0.4326279248510088, 0.4129872577530997, 0.3909601058278765, 0.39231964520045687, 0.38086001362119404, 0.3989341003554208, 0.3998549495424543, 0.404224021094186, 0.376261830329895, 0.3720788870538984, 0.375587488923754, 0.3734842964581081, 0.37474301031657625, 0.3847137008394514], "val_accuracy": [0.23366667330265045, 0.19499999284744263, 0.3686666786670685, 0.39800000190734863, 0.6290000081062317, 0.6840000152587891, 0.7263333201408386, 0.7446666955947876, 0.715666651725769, 0.7390000224113464, 0.7580000162124634, 0.7646666765213013, 0.7693333625793457, 0.7836666703224182, 0.8046666383743286, 0.8163333535194397, 0.8050000071525574, 0.8103333115577698, 0.781000018119812, 0.8320000171661377, 0.8193333148956299, 0.8163333535194397, 0.828000009059906, 0.8323333263397217, 0.8383333086967468, 0.8316666483879089, 0.8263333439826965, 0.8130000233650208, 0.8429999947547913, 0.8386666774749756, 0.8420000076293945, 0.8293333053588867, 0.8363333344459534, 0.8266666531562805]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 2, 0, 0, 2, 4, 3, 5, 0, 9, 5, 8, 1, 8, 9], [3, 1, 2, 3, 1, 3, 4, 1, 2], [60, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8108571171760559, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 9, 5, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(grad, tf.math.add(beta, tf.math.pow(alpha, tf.math.add(beta, beta)))))))), tf.math.multiply(tf.math.add(beta, tf.math.square(grad)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [1.9701085468844464, 1.3894361890365325, 1.0328987411945063, 0.876876862199315, 0.8254932947461757, 0.7547510944620777, 0.7393500556987999, 0.6870520026723801, 0.6614124098426835, 0.6836797255787002, 0.6483391352994741, 0.6220010592559262, 0.6068453966445454, 0.6089778673285113, 0.5991899757305896, 0.5900643770138286, 0.5486180449064303, 0.5412142598523503, 0.5567112829643958, 0.5365227701531393, 0.5396186250107337, 0.5323178045438848, 0.5027606696099055, 0.47836073227310383, 0.49292041732335623, 0.46732718940455725, 0.47018119310973705, 0.483778208750051, 0.45474048269234313, 0.45309695989983884, 0.44983924995591656, 0.4314402131443215, 0.4344325574192908, 0.44927704917236705], "accuracy": [0.32743361592292786, 0.5079910159111023, 0.6229031682014465, 0.6687359809875488, 0.6894729733467102, 0.7112666964530945, 0.7215691208839417, 0.7360982894897461, 0.7500990629196167, 0.7412495017051697, 0.7512878179550171, 0.7600052952766418, 0.7708360552787781, 0.763967752456665, 0.7700436115264893, 0.7746664881706238, 0.7931581139564514, 0.800818920135498, 0.7897239327430725, 0.7972526550292969, 0.7965922355651855, 0.7989697456359863, 0.8144234418869019, 0.8227446675300598, 0.8158763647079468, 0.8255184292793274, 0.822348415851593, 0.8170651197433472, 0.8272355198860168, 0.8321225643157959, 0.8308017253875732, 0.8366134166717529, 0.8368775844573975, 0.8286884427070618], "val_loss": [1.5163136209760393, 0.8663610901151385, 0.7704157829284668, 0.6602291549955096, 0.6161887645721436, 0.6332963534763881, 0.5923263856342861, 0.5399013246808734, 0.5710075071879795, 0.5256357533591134, 0.532346078327724, 0.5219019821711949, 0.5382954563413348, 0.5015039273670742, 0.4748479979378836, 0.4522375890186855, 0.4555382217679705, 0.4831890378679548, 0.490448066166469, 0.4294134889330183, 0.451508777482169, 0.42952464308057514, 0.41162003789629253, 0.41007810831069946, 0.411628110068185, 0.424943745136261, 0.41330920798437937, 0.4100354824747358, 0.38525751658848356, 0.3942426528249468, 0.3885395015989031, 0.38977554866245817, 0.40688698632376535, 0.3943881392478943], "val_accuracy": [0.398333340883255, 0.6313333511352539, 0.6666666865348816, 0.6916666626930237, 0.7329999804496765, 0.7020000219345093, 0.7260000109672546, 0.7586666941642761, 0.7566666603088379, 0.7613333463668823, 0.7480000257492065, 0.7633333206176758, 0.7613333463668823, 0.7599999904632568, 0.7833333611488342, 0.8043333292007446, 0.800000011920929, 0.7796666622161865, 0.7716666460037231, 0.8180000185966492, 0.8056666851043701, 0.8176666498184204, 0.8193333148956299, 0.8293333053588867, 0.8286666870117188, 0.7990000247955322, 0.8169999718666077, 0.8163333535194397, 0.8399999737739563, 0.8316666483879089, 0.8389999866485596, 0.8353333473205566, 0.8163333535194397, 0.8216666579246521]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 2, 0, 0, 2, 4, 6, 5, 0, 9, 5, 8, 1, 8, 9], [3, 0, 1, 3, 1, 3, 4, 1, 2], [60, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.8091428279876709, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.2452719788808926, 2.1870428096537955, 2.1016669624816346, 1.5358732684791332, 1.0416871910129226, 0.9267985091516764, 0.7754207065690857, 0.7258865176773248, 0.6652870479827985, 0.6511751252268725, 0.6194254270854517, 0.5767836385415042, 0.5734591210963876, 0.5857857525970611, 0.5876054179084268, 0.5570593084468345, 0.5069606071843636, 0.5073384386736404, 0.5251573994096401, 0.47495778764495605, 0.5033554221306494, 0.4867901775216886, 0.44725804667604474, 0.44413736409845606, 0.4731089824249936, 0.4216062248603401, 0.46661266113757266, 0.44030004308727894, 0.42842020777946827, 0.4359879417741272, 0.40458086726609127, 0.4108749192034359, 0.3889618288052002, 0.3941750771940156, 0.40726783850000614], "accuracy": [0.2382776439189911, 0.2008981704711914, 0.287280410528183, 0.4488178491592407, 0.6021661758422852, 0.6479989290237427, 0.7079645991325378, 0.7209087014198303, 0.7434949278831482, 0.7483819723129272, 0.7561748623847961, 0.7843085527420044, 0.7802139520645142, 0.774798572063446, 0.7749306559562683, 0.7852331399917603, 0.8062343001365662, 0.8096684813499451, 0.8025360107421875, 0.8189142942428589, 0.8115176558494568, 0.8138951063156128, 0.8335754871368408, 0.828292191028595, 0.819442629814148, 0.845859169960022, 0.8195747137069702, 0.8327829837799072, 0.837141752243042, 0.8354246616363525, 0.8474441766738892, 0.8449346423149109, 0.8492933511734009, 0.8518029451370239, 0.8445383906364441], "val_loss": [1.927609852382115, 1.9451919964381628, 1.5204874106815882, 0.8678440536771502, 0.8511406012943813, 0.6562235014779227, 0.5677774463381086, 0.5382426806858608, 0.5909478153501239, 0.5081182718276978, 0.46186823504311697, 0.5388278790882656, 0.5921827725001744, 0.4503547804696219, 0.4375391517366682, 0.4291058267865862, 0.4412874323981149, 0.42584904602595736, 0.4433251108442034, 0.3956524985177176, 0.4475548778261457, 0.4072954399245126, 0.3955464022500174, 0.38131209782191683, 0.3808757322175162, 0.3883313706942967, 0.40311712878090994, 0.43646362849644255, 0.3769095114299229, 0.3604536397116525, 0.38261685201099943, 0.36966455834252493, 0.3782945360456194, 0.43074238300323486, 0.3862067290714809], "val_accuracy": [0.23100000619888306, 0.1809999942779541, 0.4740000069141388, 0.5923333168029785, 0.6230000257492065, 0.6966666579246521, 0.7443333268165588, 0.7536666393280029, 0.7253333330154419, 0.7636666893959045, 0.7863333225250244, 0.734333336353302, 0.7286666631698608, 0.7983333468437195, 0.7993333339691162, 0.7993333339691162, 0.8006666898727417, 0.8116666674613953, 0.7983333468437195, 0.8363333344459534, 0.7996666431427002, 0.8180000185966492, 0.8246666789054871, 0.8326666951179504, 0.8383333086967468, 0.8389999866485596, 0.8223333358764648, 0.7950000166893005, 0.8413333296775818, 0.8483333587646484, 0.8349999785423279, 0.8353333473205566, 0.8343333601951599, 0.8050000071525574, 0.8353333473205566]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [9, 1, 0, 6, 2, 4, 3, 5, 0, 9, 5, 8, 1, 8, 9], [3, 1, 5, 3, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.8025714159011841, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2452668170603967, 2.1871737552089083, 2.11576471856525, 1.5701936317582912, 1.1047421190653968, 0.8809913512958496, 0.794596183262229, 0.6945419236889699, 0.6805798954904481, 0.6400034371352609, 0.6071304329287783, 0.5928226827929568, 0.5579584850500982, 0.5908286702426638, 0.5691860619553044, 0.5484351740537177, 0.49271223745357406, 0.5074320955047235, 0.5129403155619332, 0.48840248907136724, 0.4909182655466483, 0.4774341564672246, 0.4550262373223706, 0.44285270364655166, 0.4545601808738242, 0.44480535145511935, 0.4371323606097514, 0.40953821422889675, 0.4268487307688721, 0.4489871595183289, 0.39814216290577104, 0.4151800099876909, 0.3996258682940756, 0.40309560117452625, 0.40127799247926993], "accuracy": [0.2382776439189911, 0.20076608657836914, 0.2813366651535034, 0.4407607913017273, 0.5905428528785706, 0.6679434776306152, 0.6972658634185791, 0.7318716049194336, 0.7400607466697693, 0.7539294958114624, 0.7642319202423096, 0.774798572063446, 0.7890635132789612, 0.7738739848136902, 0.7836481332778931, 0.7844406366348267, 0.8140271902084351, 0.8099326491355896, 0.8061022162437439, 0.8121780753135681, 0.8173292875289917, 0.8133667707443237, 0.83119797706604, 0.8309338092803955, 0.8267071843147278, 0.8314621448516846, 0.8355567455291748, 0.8448025584220886, 0.8413683772087097, 0.829216718673706, 0.8529917001724243, 0.843481719493866, 0.8459912538528442, 0.8556333184242249, 0.846387505531311], "val_loss": [1.9275721141270228, 1.9460787091936385, 1.5311427116394043, 0.8764314140592303, 0.7097782748086112, 0.6050145626068115, 0.578167200088501, 0.555148754801069, 0.546835115977696, 0.5440716743469238, 0.4661346163068499, 0.5206669739314488, 0.4787478617259434, 0.4718457119805472, 0.4498112201690674, 0.43762615748814176, 0.45400997570582796, 0.4204465406281607, 0.4790694032396589, 0.3880953448159354, 0.4589154379708426, 0.43196127244404386, 0.3915311353547232, 0.3797306844166347, 0.3798617720603943, 0.4101209725652422, 0.37968828848430086, 0.39003304072788786, 0.3898762719971793, 0.360454797744751, 0.3744962641171047, 0.37674141781670706, 0.45262108530317036, 0.38583580936704365, 0.361819863319397], "val_accuracy": [0.23199999332427979, 0.18700000643730164, 0.46266666054725647, 0.6226666569709778, 0.6693333387374878, 0.7120000123977661, 0.7306666374206543, 0.7433333396911621, 0.7379999756813049, 0.7429999709129333, 0.7829999923706055, 0.7440000176429749, 0.7823333144187927, 0.7753333449363708, 0.7926666736602783, 0.8003333210945129, 0.7876666784286499, 0.8149999976158142, 0.7710000276565552, 0.8330000042915344, 0.7893333435058594, 0.8096666932106018, 0.8259999752044678, 0.8376666903495789, 0.8346666693687439, 0.8183333277702332, 0.8403333425521851, 0.8303333520889282, 0.8383333086967468, 0.8503333330154419, 0.847000002861023, 0.8349999785423279, 0.7910000085830688, 0.8289999961853027, 0.8483333587646484]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [3, 8, 4, 0, 3, 2, 2, 1, 0, 0, 5, 6, 1, 6, 3, 6, 1, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 5, 3, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [60, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 4, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 9, 5, 4, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.pow(alpha, sigma)), tf.math.sqrt(tf.math.divide_no_nan(beta, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 2, 0, 0, 2, 4, 6, 5, 0, 9, 5, 8, 1, 8, 9], [3, 0, 1, 3, 1, 3, 4, 1, 2], [60, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [1, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 4, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07938185334205627, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 2, 0, 0, 2, 4, 3, 5, 0, 9, 5, 8, 1, 8, 9], [3, 0, 1, 3, 1, 3, 4, 1, 2], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 6, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 9, 5, 1, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.square(grad))))))))))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(alpha, sigma), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [6, 5, 5, 0, 3, 2, 0, 1, 0, 4, 5, 6, 1, 6, 3, 6, 1, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [5, 3, 5, 3, 3, 3, 4, 1, 2, 0, 3, 5, 2, 4, 5, 3, 3, 0, 3, 3, 1, 0, 3, 4, 0, 1, 0, 0, 0, 0, 3, 4, 2, 3, 1, 2, 4, 5], [55, 42, 20, 7, 45, 13, 56], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [2, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 9, 5, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.negative(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad))))))), tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [4, 2, 0, 5, 2, 1, 9, 0, 0, 2, 5, 8, 1, 8, 9], [3, 0, 1, 3, 1, 3, 4, 1, 2], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 4, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 7, 4, 2, 1, 1, 0, 1, 0, 5, 2, 3, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.pow(sigma, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 0, 5, 4, 3, 2, 4, 1, 0, 2, 5, 6, 1, 6, 8, 6, 4, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 2, 3, 1, 0, 4, 1, 2, 3, 3, 0, 4, 1, 4, 4, 5, 0, 1, 1, 1, 1, 3, 0, 5], [55, 42, 20, 7, 45, 13, 56], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [68, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(alpha)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [4, 2, 0, 0, 3, 4, 3, 5, 0, 3, 5, 8, 1, 8, 9], [3, 0, 1, 3, 1, 2, 3, 1, 2], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 8, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [17, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 22, 22, 14, 8, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))))))))), grad), alpha))))))), tf.math.add(beta, beta))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(grad)), alpha))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.3406567434357015, 2.62019214496605, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0470215305685997, 0.01228371448814869, 0.09377889335155487, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.073645659855434, 3.704831395830427, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.004999999888241291, 0.06566666811704636, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [5, 0, 5, 4, 3, 2, 4, 1, 0, 2, 5, 6, 1, 6, 8, 6, 4, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 5, 1, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 2, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 0, 1, 0, 0, 0, 0, 5, 3, 2, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), alpha)), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), alpha)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.add(alpha, sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07938185334205627, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [3, 2, 0, 0, 2, 4, 3, 5, 0, 9, 5, 8, 1, 8, 9], [3, 0, 1, 3, 1, 3, 4, 1, 2], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [3, 3, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 10, 5, 2, 1, 0, 0, 0, 0, 10, 6, 4, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(alpha)))), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))))))))), tf.math.add(beta, grad))), alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)), tf.math.divide_no_nan(tf.math.add(sigma, beta), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [5, 9, 5, 4, 3, 2, 4, 1, 8, 2, 5, 6, 1, 6, 8, 6, 1, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 3, 5, 3, 2, 3, 4, 1, 2, 0, 3, 5, 2, 4, 5, 3, 3, 0, 3, 3, 1, 0, 3, 4, 0, 1, 0, 0, 0, 0, 3, 4, 2, 3, 1, 2, 4, 5], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [1, 0, 0, 1, 1, 0, 0, 1, 1], [0, 2, 0, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07938185334205627, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [3, 2, 0, 0, 2, 4, 6, 5, 0, 9, 5, 8, 1, 8, 9], [2, 0, 2, 3, 1, 0, 4, 1, 2, 3, 3, 0, 4, 1, 4, 4, 5, 0, 1, 1, 1, 1, 3, 0, 5], [55, 42, 20, 7, 45, 13, 56], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [2, 4, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(beta, tf.math.add(beta, tf.math.add(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.pow(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), alpha), sigma)", "other_info": {"loss": [2.3039038624383705, 2.3052104367493103, 2.306783154026203, 2.3060407199564863, 2.3092242247078003, 2.3093384191769775], "accuracy": [0.09272222965955734, 0.09932637959718704, 0.09496764093637466, 0.09615638852119446, 0.09840179979801178, 0.10038304328918457], "val_loss": [1.9737694604056222, 1.9743351255144392, 1.974496909550258, 1.975053310394287, 1.9761054856436593, 1.9759303501674108], "val_accuracy": [0.10233332961797714, 0.09833333641290665, 0.10133333504199982, 0.10000000149011612, 0.09666666388511658, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1], [0, 0, 1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 5, 5, 0, 3, 2, 4, 1, 0, 2, 5, 6, 1, 6, 3, 6, 1, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [5, 3, 5, 3, 2, 3, 4, 1, 2, 0, 3, 5, 2, 4, 5, 3, 3, 0, 3, 3, 1, 0, 3, 4, 0, 1, 0, 0, 0, 0, 3, 4, 2, 3, 1, 2, 4, 5], [55, 42, 20, 7, 45, 13, 56], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.0820000022649765, "mapping_values": [1, 3, 3, 2, 1, 1, 4, 4, 3, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [4.095989109775281e+25, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09034473448991776, 0.09351472556591034, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [5.403343704271601e+27, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.11933333426713943, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 2, 0, 0, 2, 4, 1, 5, 0, 9, 5, 8, 1, 8, 9], [3, 0, 1, 1, 1, 3, 4, 1, 2], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [2, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(beta), sigma)", "other_info": {"loss": [2.3030475272384097, 2.3043366192417247, 2.3035888501508532, 2.30259665509477, 2.3035963761603373, 2.3040175169938593], "accuracy": [0.09285431355237961, 0.09298639744520187, 0.08942015469074249, 0.09153348207473755, 0.08730682730674744, 0.08691058307886124], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [5, 2, 6, 0, 2, 4, 4, 5, 4, 9, 5, 8, 1, 8, 9], [3, 3, 2, 3, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [60, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.3030475272384097, 2.3043366192417247, 2.3035888501508532, 2.30259665509477, 2.3035963761603373, 2.3040175169938593], "accuracy": [0.09285431355237961, 0.09298639744520187, 0.08942015469074249, 0.09153348207473755, 0.08730682730674744, 0.08691058307886124], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 2, 0, 0, 2, 4, 6, 5, 0, 9, 5, 8, 1, 8, 9], [3, 0, 1, 3, 1, 3, 4, 1, 2], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(sigma))", "other_info": {"loss": [2.3030475272384097, 2.3043366192417247, 2.3035888501508532, 2.30259665509477, 2.3035963761603373, 2.3040175169938593], "accuracy": [0.09285431355237961, 0.09298639744520187, 0.08942015469074249, 0.09153348207473755, 0.08730682730674744, 0.08691058307886124], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]