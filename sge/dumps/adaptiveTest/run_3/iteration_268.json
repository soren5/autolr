[{"genotype": [[0], [1, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 0, 1, 0, 0, 2, 5, 3, 6, 2, 5, 6, 2, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 2, 3, 3, 1, 3, 3, 3, 3, 3, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8151428699493408, "mapping_values": [1, 1, 1, 0, 1, 0, 22, 22, 13, 9, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(grad)), alpha))))), tf.math.add(beta, grad))))), tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.square(tf.math.divide_no_nan(tf.math.add(beta, grad), grad)))), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), grad)))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.022930393538943, 1.5413897765106324, 1.0290337930250288, 0.940126941204386, 0.827936754242745, 0.7588501921844457, 0.7403016546619346, 0.6914601384168445, 0.7108010673929184, 0.6809161318338873, 0.6569814897799111, 0.6329902621812006, 0.6173971041617786, 0.5986091773098392, 0.5803445320733392, 0.6016484271533705, 0.5707078744250046, 0.5518910227954317, 0.5561616007819734, 0.5231775526656545, 0.5449540030135926, 0.5288982375926817, 0.5091312048284369, 0.5067659437798112, 0.49368427800322884, 0.47931703457097335, 0.5012006779325447, 0.4530817891242655, 0.48565652118997016, 0.4654324033028571, 0.4810814802412974, 0.4431669809098383, 0.4493569072841291, 0.4198609042153493, 0.4326370421960889, 0.40704603928773947, 0.42650311626321713, 0.40775115886589225, 0.42705377050678034, 0.4023335618924597, 0.38792513757491426, 0.4018679333912493, 0.39185055064141017, 0.38466650140110714, 0.37618261554442406], "accuracy": [0.33284902572631836, 0.46070531010627747, 0.6222427487373352, 0.6481310129165649, 0.6882842183113098, 0.7106062769889832, 0.7137762308120728, 0.7354378700256348, 0.7305507659912109, 0.7346453666687012, 0.7491744756698608, 0.7565711140632629, 0.7651565074920654, 0.7720248103141785, 0.7794214487075806, 0.7736098170280457, 0.7816668748855591, 0.7924976944923401, 0.7901201844215393, 0.8014793395996094, 0.793950617313385, 0.8010830879211426, 0.8127063512802124, 0.8128384351730347, 0.8131026029586792, 0.8240655064582825, 0.8117818236351013, 0.830669641494751, 0.8182538747787476, 0.8261788487434387, 0.8195747137069702, 0.8342359066009521, 0.8330471515655518, 0.8453308939933777, 0.8378021121025085, 0.8488970994949341, 0.8405758738517761, 0.8487650156021118, 0.8364813327789307, 0.845859169960022, 0.8577466607093811, 0.8455950617790222, 0.8529917001724243, 0.8511425256729126, 0.8569541573524475], "val_loss": [1.6969192709241594, 0.7887341124670846, 0.6650688818522862, 0.6834360871996198, 0.6001499891281128, 0.5746385369982038, 0.5622151238577706, 0.5433110509599958, 0.5832298653466361, 0.5706733465194702, 0.5125841583524432, 0.5090829133987427, 0.479880690574646, 0.4757695198059082, 0.5111616339002337, 0.496855412210737, 0.450536847114563, 0.48912676743098665, 0.45801234245300293, 0.44349937779562815, 0.47142437526157926, 0.44296356609889437, 0.43464904172079905, 0.417118353503091, 0.41973133598055157, 0.44641021319798063, 0.40251125608171734, 0.4187103509902954, 0.41561261245182585, 0.4555377108710153, 0.39223313331604004, 0.3898252844810486, 0.4085280384336199, 0.38225265060152325, 0.36930558511189054, 0.4167251076017107, 0.3707907795906067, 0.3694709283964975, 0.37916266918182373, 0.3718236003603254, 0.38396160091672626, 0.392611563205719, 0.37093991892678396, 0.3861256071499416, 0.40020923103605], "val_accuracy": [0.21133333444595337, 0.6713333129882812, 0.7043333053588867, 0.6913333535194397, 0.7260000109672546, 0.7350000143051147, 0.753333330154419, 0.75, 0.718666672706604, 0.7519999742507935, 0.765333354473114, 0.7723333239555359, 0.7919999957084656, 0.7846666574478149, 0.7730000019073486, 0.7663333415985107, 0.7983333468437195, 0.7826666831970215, 0.79666668176651, 0.7983333468437195, 0.7929999828338623, 0.8083333373069763, 0.809333324432373, 0.8183333277702332, 0.8183333277702332, 0.7926666736602783, 0.8243333101272583, 0.8259999752044678, 0.8159999847412109, 0.7979999780654907, 0.8376666903495789, 0.8353333473205566, 0.8240000009536743, 0.8450000286102295, 0.8453333377838135, 0.8136666417121887, 0.8429999947547913, 0.8476666808128357, 0.8416666388511658, 0.8486666679382324, 0.8373333215713501, 0.8386666774749756, 0.8483333587646484, 0.8396666646003723, 0.8223333358764648]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [9, 0, 1, 4, 0, 2, 6, 3, 6, 1, 5, 0, 4, 6, 8, 6, 4, 8, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 2, 3, 1, 3, 3, 3, 3, 1, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8145714402198792, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.022890377731182, 1.5408943530952988, 1.034847753529126, 0.9316994507535417, 0.8223464962450773, 0.7623330044267735, 0.7087754430378496, 0.7072608280789662, 0.6943512863061684, 0.6963784420148588, 0.6568539258338173, 0.6283994366180754, 0.6156567011243553, 0.6047392264884366, 0.5925481839816741, 0.5823509520260004, 0.5741891280346071, 0.5542863258643472, 0.5583326487635042, 0.521578274178168, 0.5308648145839664, 0.5391856544502124, 0.5096374337329305, 0.5200376888355007, 0.48416047861248257], "accuracy": [0.3329811096191406, 0.46110156178474426, 0.618280291557312, 0.6577730774879456, 0.6897371411323547, 0.711530864238739, 0.7327961921691895, 0.7346453666687012, 0.7359662055969238, 0.7275128960609436, 0.7479857206344604, 0.7567031979560852, 0.7652885913848877, 0.7647602558135986, 0.7725531458854675, 0.7755910754203796, 0.7808743715286255, 0.7906485199928284, 0.7889314293861389, 0.8039889335632324, 0.8004226684570312, 0.7940827012062073, 0.8096684813499451, 0.8021397590637207, 0.8197067975997925], "val_loss": [1.6968679087502616, 0.7880781888961792, 0.705936210496085, 0.6889412743704659, 0.6093233483178275, 0.5662022318158831, 0.5624608823231289, 0.6106692552566528, 0.5773079224995205, 0.5578043801443917, 0.5148037501743862, 0.5008142335074288, 0.4830105645315988, 0.4825537545340402, 0.49496207918439594, 0.4946636813027518, 0.4544230188642229, 0.4772818258830479, 0.45488929748535156, 0.4295809864997864, 0.5108196224485125, 0.41982631172452656, 0.4273448586463928, 0.4192173310688564, 0.4308553508349827], "val_accuracy": [0.210999995470047, 0.6656666398048401, 0.6959999799728394, 0.6830000281333923, 0.7256666421890259, 0.7519999742507935, 0.7483333349227905, 0.7146666646003723, 0.7273333072662354, 0.7446666955947876, 0.7643333077430725, 0.7789999842643738, 0.7863333225250244, 0.781333327293396, 0.777999997138977, 0.7699999809265137, 0.8009999990463257, 0.7883333563804626, 0.7996666431427002, 0.8246666789054871, 0.7583333253860474, 0.8233333230018616, 0.8203333616256714, 0.8226666450500488, 0.8146666884422302]}}, {"genotype": [[0], [1, 1, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [9, 0, 1, 4, 0, 2, 6, 3, 6, 1, 5, 0, 4, 6, 8, 6, 4, 8, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 2, 3, 1, 3, 3, 3, 3, 1, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8140000104904175, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.023014552242736, 1.540713350880872, 1.0342574617598492, 0.916350734610174, 0.840439206762494, 0.754434159733852, 0.7476244229351477, 0.7014767886814173, 0.6853132188170578, 0.6965794731061913, 0.6553720410678523, 0.6323332985898271, 0.6153004113567535, 0.5925726407334128, 0.591675191035187, 0.5864801928194333, 0.5664336226478056, 0.5488078242767882, 0.5557373259297734, 0.5213240224136385, 0.5322794512183895, 0.5295995276294853, 0.5105747592809761, 0.5141192719669012, 0.48299933155734603, 0.48550239255352423, 0.4926158700912321, 0.4565949235861847, 0.5003613826384902, 0.46037985036685214, 0.46793160526240113, 0.4440823713581497, 0.4409270245109992, 0.42210923830248254, 0.43459205531551226, 0.4008709412673839, 0.41791695356762654, 0.41154113847660495, 0.41585107704888025, 0.3895248306260495], "accuracy": [0.33284902572631836, 0.46070531010627747, 0.6161669492721558, 0.6596222519874573, 0.6870955228805542, 0.7141724824905396, 0.7199841737747192, 0.7301545143127441, 0.7395324110984802, 0.7300224304199219, 0.750759482383728, 0.7560427784919739, 0.7651565074920654, 0.7709681391716003, 0.7729493975639343, 0.7783648371696472, 0.7866860628128052, 0.7911768555641174, 0.7905164361000061, 0.8035926818847656, 0.8013472557067871, 0.8024039268493652, 0.8095363974571228, 0.8047813773155212, 0.8182538747787476, 0.8214238286018372, 0.8158763647079468, 0.8296129703521729, 0.8124422430992126, 0.8255184292793274, 0.824329674243927, 0.8342359066009521, 0.8366134166717529, 0.8449346423149109, 0.8356888294219971, 0.8510104417800903, 0.8426892161369324, 0.8454629778862, 0.8372738361358643, 0.8531237840652466], "val_loss": [1.6974774428776331, 0.7847468342099871, 0.7358353648866925, 0.7587751150131226, 0.6157459361212594, 0.5753477130617414, 0.5700679506574359, 0.5570031574794224, 0.6175890990665981, 0.5713763918195452, 0.5132732902254377, 0.5073197739464896, 0.481387768472944, 0.4782306126185826, 0.48914992809295654, 0.4843016692570278, 0.4544837645121983, 0.4899870327540806, 0.4512852941240583, 0.43532213142939974, 0.47066894599369596, 0.42974036931991577, 0.433063132422311, 0.41885197162628174, 0.4258413740566799, 0.4381806935582842, 0.40341893264225553, 0.4711454595838274, 0.40641845975603375, 0.43342380012784687, 0.3876637135233198, 0.38767434869493755, 0.42181088243212017, 0.3827598180089678, 0.3714690293584551, 0.3768476162637983, 0.37037869010652813, 0.37859013250895907, 0.3791091101510184, 0.37309070995875765], "val_accuracy": [0.210999995470047, 0.6740000247955322, 0.6753333210945129, 0.6679999828338623, 0.7170000076293945, 0.7316666841506958, 0.7480000257492065, 0.749666690826416, 0.7083333134651184, 0.7329999804496765, 0.7649999856948853, 0.7753333449363708, 0.7870000004768372, 0.7860000133514404, 0.7829999923706055, 0.777999997138977, 0.796999990940094, 0.7776666879653931, 0.8006666898727417, 0.8073333501815796, 0.7933333516120911, 0.8199999928474426, 0.8149999976158142, 0.8216666579246521, 0.8190000057220459, 0.7986666560173035, 0.824999988079071, 0.7973333597183228, 0.8206666707992554, 0.8113333582878113, 0.8353333473205566, 0.8363333344459534, 0.815666675567627, 0.8450000286102295, 0.8456666469573975, 0.8389999866485596, 0.8416666388511658, 0.8326666951179504, 0.8420000076293945, 0.8446666598320007]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 1, 4, 0, 2, 4, 3, 6, 2, 5, 6, 2, 6, 8, 6, 4, 1, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8054285645484924, "mapping_values": [1, 1, 1, 0, 1, 0, 39, 39, 23, 16, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(grad, alpha)), tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), alpha))))), grad)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(grad, grad)))))), tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad)))))))), tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))))))), tf.math.add(beta, beta))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.0229153915907117, 1.539962784300202, 1.0383003472242656, 0.9296364267000574, 0.8299216556983648, 0.758997353855897, 0.7311191179764631, 0.704362296936865, 0.6998925492543397, 0.6865854883127839, 0.6548360481694894, 0.6346384897412815, 0.6135149069938363, 0.5943614973950742, 0.5896473005778124, 0.5781772427271701, 0.5722129430910694, 0.5580485987704208, 0.5551935404503681, 0.5355022076476503, 0.5333676292376354, 0.5317032771686191, 0.5098009394727063, 0.5107398528889611, 0.48486238851082436, 0.4806235063471232, 0.49602430266097014, 0.45887473435796183, 0.4954510651693179], "accuracy": [0.33284902572631836, 0.46070531010627747, 0.6164311170578003, 0.6588297486305237, 0.6909258961677551, 0.7106062769889832, 0.7215691208839417, 0.7302865982055664, 0.7342491149902344, 0.733060359954834, 0.7516840696334839, 0.7557786107063293, 0.7646281719207764, 0.7709681391716003, 0.7755910754203796, 0.7817989587783813, 0.78113853931427, 0.7869502305984497, 0.7847048044204712, 0.7951393723487854, 0.7993659973144531, 0.7951393723487854, 0.8112534880638123, 0.8113855719566345, 0.8170651197433472, 0.8247259259223938, 0.8161405324935913, 0.8300092220306396, 0.8136309385299683], "val_loss": [1.6972788742610387, 0.7875172921589443, 0.6946547031402588, 0.7248398576463971, 0.6048247132982526, 0.5999981675829206, 0.5686429057802472, 0.5451030050005231, 0.6013393402099609, 0.5663494552884784, 0.5114712033952985, 0.4993267229625157, 0.47925988265446257, 0.4786766256604876, 0.4836044652121408, 0.4943356343678066, 0.45558498586927143, 0.46297126156943186, 0.47507732255118235, 0.4336836678641183, 0.5008883816855294, 0.42907133272715975, 0.4336501019341605, 0.41759478194372995, 0.4326690861157009, 0.4387745772089277, 0.404458795275007, 0.44283998012542725, 0.4078187346458435], "val_accuracy": [0.21033333241939545, 0.675000011920929, 0.7056666612625122, 0.6703333258628845, 0.7250000238418579, 0.7266666889190674, 0.75, 0.7563333511352539, 0.7183333039283752, 0.750333309173584, 0.7663333415985107, 0.7749999761581421, 0.7926666736602783, 0.7850000262260437, 0.7820000052452087, 0.7699999809265137, 0.8033333420753479, 0.7976666688919067, 0.7820000052452087, 0.812333345413208, 0.765666663646698, 0.8119999766349792, 0.8136666417121887, 0.828000009059906, 0.815666675567627, 0.7976666688919067, 0.8230000138282776, 0.8073333501815796, 0.8203333616256714]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [9, 0, 1, 4, 0, 2, 6, 3, 6, 1, 5, 0, 4, 6, 8, 6, 4, 8, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 2, 3, 1, 3, 3, 3, 3, 1, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.800000011920929, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.0229620135550044, 1.5405801441754174, 1.0403920397026631, 0.9288160044598054, 0.8286317203889166, 0.7588225513275478, 0.7196619269271899, 0.7037934221375526, 0.6806036258937346, 0.6954195597514721, 0.6552740603059495, 0.6282336823283059, 0.6151596489930118, 0.6115087891424872, 0.5863387207659937, 0.5734555661135093, 0.5727061875319012, 0.5442231161766646, 0.5612103543607803, 0.5212726020353219, 0.5425144432243213, 0.5286708239708531, 0.5076182782571267, 0.5066227607243033, 0.501027174212315, 0.4857017960467784, 0.4937583970048912, 0.4622380112368811, 0.4946129723838166, 0.46140030983763125, 0.4638562212885017, 0.4449649095661242, 0.4384829390908686, 0.4205513815358015, 0.4350931963522547, 0.40539942651676103, 0.41874041601084544, 0.4173999022436085, 0.41825107083643714, 0.39729828959553076], "accuracy": [0.3329811096191406, 0.46044114232063293, 0.615770697593689, 0.656980574131012, 0.6889446377754211, 0.7119271159172058, 0.7309470176696777, 0.7284374833106995, 0.7391361594200134, 0.7305507659912109, 0.750231146812439, 0.7592127919197083, 0.7642319202423096, 0.7625148296356201, 0.7753269076347351, 0.7825914621353149, 0.785101056098938, 0.7964601516723633, 0.7889314293861389, 0.8058380484580994, 0.7932901978492737, 0.7988376617431641, 0.8125742673873901, 0.811649739742279, 0.8095363974571228, 0.8231409192085266, 0.8170651197433472, 0.8265751004219055, 0.8145555257797241, 0.8273676037788391, 0.8267071843147278, 0.8347642421722412, 0.8397833704948425, 0.8466516733169556, 0.8318583965301514, 0.8462554216384888, 0.8425571322441101, 0.8416325449943542, 0.837141752243042, 0.8471800088882446], "val_loss": [1.6972148077828544, 0.7881088767732892, 0.7036643879754203, 0.7149710144315448, 0.6034200361796788, 0.6044520480292184, 0.5541441781180245, 0.5587408542633057, 0.6061941385269165, 0.5622939722878593, 0.5155214582170758, 0.5152894258499146, 0.48103128160749165, 0.4815824713025774, 0.4835962568010603, 0.5050180639539447, 0.45208447320120676, 0.4732311112540109, 0.4518979106630598, 0.44916086537497385, 0.4865342208317348, 0.44764297349112375, 0.440425055367606, 0.41541892290115356, 0.42263624497822355, 0.4463567393166678, 0.40812511103493826, 0.4461238043648856, 0.4037981118474688, 0.4471672092165266, 0.3872759597642081, 0.39037448167800903, 0.4271488530295236, 0.3816843714032854, 0.3720387816429138, 0.37514236143657137, 0.37230261734553743, 0.3802539195333208, 0.3784545234271458, 0.36959151710782734], "val_accuracy": [0.210999995470047, 0.6669999957084656, 0.6983333230018616, 0.6703333258628845, 0.7196666598320007, 0.7243333458900452, 0.7546666860580444, 0.7480000257492065, 0.7176666855812073, 0.7476666569709778, 0.765999972820282, 0.7710000276565552, 0.7910000085830688, 0.7816666960716248, 0.7856666445732117, 0.7670000195503235, 0.8023333549499512, 0.7926666736602783, 0.8033333420753479, 0.7963333129882812, 0.7853333353996277, 0.8076666593551636, 0.8080000281333923, 0.8220000267028809, 0.8183333277702332, 0.7946666479110718, 0.8176666498184204, 0.8090000152587891, 0.82833331823349, 0.8003333210945129, 0.8370000123977661, 0.8336666822433472, 0.8119999766349792, 0.8443333506584167, 0.8453333377838135, 0.8403333425521851, 0.8396666646003723, 0.831333339214325, 0.843999981880188, 0.843999981880188]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [76, 80, 61], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [9, 0, 1, 4, 0, 2, 6, 3, 6, 1, 5, 0, 4, 6, 8, 6, 4, 8, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 2, 3, 1, 1, 3, 2, 3, 0, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [68, 9, 76, 58]], "fitness": -0.30571427941322327, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.4195257063003943, 2.353897792693725, 2.383134896366934, 2.3119648621775424, 2.3045077443579483, 2.3033333328878403, 2.303015795523669], "accuracy": [0.19733192026615143, 0.16774533689022064, 0.228899747133255, 0.0944393053650856, 0.09985470771789551, 0.1002509593963623, 0.09998679161071777], "val_loss": [1.9713704245431083, 1.6778028692517961, 1.9871464456830705, 1.976059913635254, 1.9740281105041504, 1.9737539291381836, 1.9737560408455985], "val_accuracy": [0.109333336353302, 0.35100001096725464, 0.10233332961797714, 0.10233332961797714, 0.09866666793823242, 0.09866666793823242, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [2, 9, 1, 4, 0, 2, 4, 2, 6, 2, 5, 6, 2, 6, 8, 6, 4, 1, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 2, 3, 1, 3, 3, 3, 3, 1, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 12, 9, 1, 1, 1, 0, 1, 0, 5, 4, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, alpha))), grad))), tf.math.add(beta, tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(beta)), grad)), tf.math.add(beta, alpha))))), tf.math.divide_no_nan(tf.math.add(beta, grad), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 1, 8, 6, 4, 2, 2, 5, 0, 9, 5, 1, 1, 6, 3, 4, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 0, 3, 3, 3, 1, 2, 0, 3, 3, 1, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 1, 1, 0, 0, 1, 1], [7, 8, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [4, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 37, 37, 23, 14, 3, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(grad, alpha)), tf.math.add(beta, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.square(tf.math.negative(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.subtract(tf.math.add(beta, grad), grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), alpha)))))))), beta), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), grad)), tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.square(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad))))))))), tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.sqrt(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.3021524874856363, 2.3022850912323625, 2.303196914380867, 2.3069091567179436, 2.3289200404631605, 2.5835397203506147], "accuracy": [0.11055342853069305, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9737347194126673, 1.9740447998046875, 1.9754586219787598, 1.98311676297869, 2.035742623465402, 3.0845368249075755], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 0, 1, 4, 0, 2, 4, 9, 6, 2, 5, 6, 2, 6, 8, 6, 4, 1, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 1, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 8, 2, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 65, 65, 40, 25, 4, 1, 1, 1, 0, 1, 9, 5, 4, 0], "tree_depth": 44, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(beta, alpha)), tf.math.add(beta, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(grad, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), grad)))))), alpha), tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.add(beta, tf.math.negative(grad))), tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, alpha)))))))))), tf.math.add(beta, grad))), tf.math.add(beta, alpha)))), tf.math.add(beta, tf.math.multiply(tf.math.pow(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, alpha)))), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(grad, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), grad))))))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha))))))))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(tf.math.add(sigma, sigma)), tf.math.sqrt(tf.math.divide_no_nan(beta, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1], [0, 1, 1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [9, 0, 1, 4, 0, 2, 6, 3, 6, 1, 5, 0, 4, 6, 8, 6, 4, 8, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 2, 3, 1, 3, 3, 3, 3, 1, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [84, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.302642204695059, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [76, 80, 61], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [9, 0, 1, 4, 0, 2, 6, 3, 6, 1, 5, 0, 4, 6, 8, 6, 4, 8, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 2, 3, 1, 3, 3, 3, 3, 1, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [72, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 0, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [43, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 5, 3, 2, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.negative(sigma)), sigma)", "other_info": {"loss": [2.302642204695059, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 1, 4, 0, 2, 4, 3, 6, 2, 5, 6, 2, 6, 8, 6, 4, 1, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [5, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 11, 11, 6, 5, 0, 1, 1, 0, 1, 0, 3, 3, 0, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(alpha, grad))))), tf.math.add(beta, grad))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302642204695059, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 1, 4, 0, 2, 4, 1, 6, 6, 5, 6, 2, 6, 8, 6, 4, 1, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 1, 1, 3, 3, 3, 1, 1, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [1, 0, 0, 0, 1, 0, 0, 1, 1], [3, 5, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 29, 29, 16, 13, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), alpha)), tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), grad), alpha))), tf.math.add(beta, alpha))), grad)), grad))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(grad)), tf.math.add(beta, alpha))))))), tf.math.divide_no_nan(tf.math.add(beta, alpha), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08479725569486618, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 1, 8, 6, 4, 2, 2, 5, 0, 1, 5, 1, 1, 6, 8, 4, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 3, 3, 2, 3, 1, 1, 3, 2, 3, 0, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 2, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 9, 5, 4, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.add(sigma, sigma)), tf.math.sqrt(tf.math.divide_no_nan(beta, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 1, 2, 0, 2, 5, 3, 6, 2, 5, 6, 2, 6, 8, 5, 4, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 2, 3, 1, 3, 3, 3, 3, 1, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [1, 0, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08479725569486618, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [9, 0, 1, 4, 0, 2, 6, 3, 6, 1, 5, 0, 4, 6, 8, 6, 4, 8, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 2, 3, 1, 3, 3, 3, 3, 1, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(sigma), sigma)", "other_info": {"loss": [2.3018900242463993, 2.3027053684559102, 2.3066244137332803, 2.308767588761158, 2.309300677399389, 2.315616428828463, 2.3166884030049992, 2.324718325538973, 2.3317678603261864, 2.342448502609743, 2.3678121506309684, Infinity, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.0866464152932167, 0.08677849918603897, 0.08241976052522659, 0.08347642421722412, 0.07740060985088348, 0.08360850811004639, 0.07726852595806122, 0.07370228320360184, 0.07687227427959442, 0.08255184441804886, 0.0944393053650856, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9721627235412598, 1.973355838230678, 1.9750772203717912, 1.9768837520054408, 1.9790255001613073, 1.9816810062953405, 1.9846326964242118, 1.988109520503453, 1.993781430380685, 2.004620007106236, 2.039435727255685, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.028333334252238274, 0.024000000208616257, 0.023000000044703484, 0.01966666616499424, 0.020666666328907013, 0.03233333304524422, 0.04633333161473274, 0.061666667461395264, 0.07733333110809326, 0.09466666728258133, 0.09833333641290665, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [9, 0, 1, 4, 0, 2, 6, 3, 6, 1, 5, 0, 4, 6, 8, 6, 4, 8, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 3, 2, 3, 1, 1, 3, 2, 3, 0, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [1, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.301479457092638, 2.301089757091223, 2.303051762750293, 2.3031707579953213, 2.3012794185198056, 2.303419609520776], "accuracy": [0.09774138033390045, 0.09060890227556229, 0.09285431355237961, 0.09021265059709549, 0.09470347315073013, 0.08849557489156723], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [2, 1, 6, 6, 4, 2, 2, 5, 0, 1, 5, 1, 1, 6, 8, 4, 4, 6, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 2, 3, 2, 3, 1, 3, 3, 3, 1, 1, 3, 1, 3, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [1, 0], [0, 1, 1], [8], [4, 1], [52], [1, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 40, 40, 23, 17, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(alpha, beta)), grad))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.square(tf.math.add(beta, grad)))))))), alpha))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, grad))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(grad), tf.math.pow(tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(alpha), tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(alpha, grad)), tf.math.add(beta, tf.math.square(alpha))))))), grad), tf.math.add(beta, grad)))))))), alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301479457092638, 2.301089757091223, 2.303051762750293, 2.3031707579953213, 2.3012794185198056, 2.303419609520776], "accuracy": [0.09774138033390045, 0.09060890227556229, 0.09285431355237961, 0.09021265059709549, 0.09470347315073013, 0.08849557489156723], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [9, 0, 1, 4, 0, 2, 6, 3, 6, 1, 5, 0, 4, 6, 8, 6, 4, 8, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 2, 3, 1, 3, 3, 3, 3, 1, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(sigma))", "other_info": {"loss": [2.301479457092638, 2.301089757091223, 2.303051762750293, 2.3031707579953213, 2.3012794185198056, 2.303419609520776], "accuracy": [0.09774138033390045, 0.09060890227556229, 0.09285431355237961, 0.09021265059709549, 0.09470347315073013, 0.08849557489156723], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [9, 0, 1, 4, 0, 2, 6, 3, 6, 1, 5, 0, 4, 6, 8, 6, 4, 8, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 2, 3, 1, 3, 3, 3, 3, 1, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 6, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 9, 5, 4, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.divide_no_nan(sigma, sigma)), tf.math.sqrt(tf.math.divide_no_nan(beta, alpha)))", "other_info": {"loss": [2.301479457092638, 2.301089757091223, 2.303051762750293, 2.3031707579953213, 2.3012794185198056, 2.303419609520776], "accuracy": [0.09774138033390045, 0.09060890227556229, 0.09285431355237961, 0.09021265059709549, 0.09470347315073013, 0.08849557489156723], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]