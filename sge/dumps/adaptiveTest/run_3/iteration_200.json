[{"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [7, 8, 5, 8, 2, 4, 4, 5, 9, 2], [5, 1, 5, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [3, 3, 2, 2], [48, 9]], "fitness": -0.8148571252822876, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.091391613202844, 1.9887273054018375, 1.5386252319020775, 1.1511462846405045, 0.9910141615000981, 0.8029744473226066, 0.7133663611452357, 0.6766030175999848, 0.6771871934493204, 0.6404680439887691, 0.5937772550524313, 0.5920013963916377, 0.5897642593688622, 0.5625176835746624, 0.5320634091881367, 0.5214335551949666, 0.5078062951926936, 0.5070252123604582, 0.48833765665994516, 0.4838480068519052, 0.4635150015212447, 0.4728016191784732], "accuracy": [0.28556331992149353, 0.36481308937072754, 0.47668737173080444, 0.5894861817359924, 0.6416589617729187, 0.6940959095954895, 0.7280412316322327, 0.7436270117759705, 0.7429665923118591, 0.7617223858833313, 0.7778365015983582, 0.7783648371696472, 0.7750627398490906, 0.7837802171707153, 0.7987055778503418, 0.8033285140991211, 0.8063663840293884, 0.8094043135643005, 0.8156121969223022, 0.8162726163864136, 0.8236692547798157, 0.8236692547798157], "val_loss": [1.8205612727573939, 1.081519024712699, 0.9882259709494454, 0.8997454643249512, 0.6045597451073783, 0.5840155056544712, 0.5330080304827008, 0.5888991526194981, 0.5946134158543178, 0.48370053086962017, 0.49293858664376394, 0.4846347229821341, 0.44134877409253803, 0.4782679421561105, 0.4635465315410069, 0.4594950335366385, 0.40033990144729614, 0.43917373248509, 0.4211943575314113, 0.4272657207080296, 0.41660265411649433, 0.43156371797834125], "val_accuracy": [0.3720000088214874, 0.6256666779518127, 0.6226666569709778, 0.5879999995231628, 0.7289999723434448, 0.7356666922569275, 0.7563333511352539, 0.7196666598320007, 0.7303333282470703, 0.7796666622161865, 0.781333327293396, 0.7760000228881836, 0.8013333082199097, 0.7829999923706055, 0.7879999876022339, 0.7839999794960022, 0.8256666660308838, 0.7919999957084656, 0.8016666769981384, 0.8046666383743286, 0.8026666641235352, 0.8023333549499512]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [7, 8, 5, 8, 2, 4, 4, 5, 9, 2], [5, 5, 5, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [3, 3, 2, 2], [48, 9]], "fitness": -0.7948571443557739, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.0611583417385577, 1.4905602733110472, 1.3923606832564988, 1.1622344063037202, 0.827376223416644, 0.8270418615924401, 0.7351944349886262, 0.7036615684598964, 0.6654223801752422, 0.641862119831319, 0.6269088113438641, 0.5679061459654184, 0.5949019299774059, 0.5507800386031039, 0.5640444340344984, 0.5411820093701466, 0.5294359211499082, 0.5006606997263949, 0.4985215624191852], "accuracy": [0.29282790422439575, 0.4811781942844391, 0.5215955376625061, 0.5896182656288147, 0.6910579800605774, 0.6888125538825989, 0.720380425453186, 0.7296261787414551, 0.7429665923118591, 0.7543256878852844, 0.7625148296356201, 0.7862898111343384, 0.7725531458854675, 0.7972526550292969, 0.7886672616004944, 0.7972526550292969, 0.8042530417442322, 0.8140271902084351, 0.8148196935653687], "val_loss": [1.2256852558680944, 1.2757840497153146, 1.2343066760471888, 0.738114425114223, 0.7169815301895142, 0.5819085836410522, 0.5567377976008824, 0.564244304384504, 0.5178594929831368, 0.503410884312221, 0.49342075416019987, 0.46313795021602083, 0.45659942286355154, 0.4322418911116464, 0.4686221735818045, 0.4368078793798174, 0.4715602397918701, 0.4555537700653076, 0.44571471214294434], "val_accuracy": [0.4873333275318146, 0.4050000011920929, 0.5973333120346069, 0.6669999957084656, 0.6693333387374878, 0.7153333425521851, 0.7356666922569275, 0.7406666874885559, 0.7433333396911621, 0.7676666378974915, 0.7846666574478149, 0.8056666851043701, 0.8053333163261414, 0.8173333406448364, 0.7793333530426025, 0.8019999861717224, 0.7799999713897705, 0.7950000166893005, 0.7973333597183228]}}, {"genotype": [[0], [1, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [7, 7, 5, 8, 5, 4, 4, 5, 9, 2], [5, 1, 5, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [3, 3, 2, 2], [1, 9]], "fitness": -0.6648571491241455, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))), tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3031556824210644, 2.302510853598477, 2.3008527864381354, 2.2970655305809773, 2.2933112073489434, 2.2900817212868265, 2.2845258212691015, 2.277428794042577, 2.2700133529305853, 2.26261785609485, 2.252855828881909, 2.245510731800247, 2.235106834126438, 2.225043102640281, 2.2122397026948297, 2.1984429129866436, 2.1845454390589683, 2.1666358740039082, 2.1513773372790217, 2.1288141118788904, 2.1041643049864645, 2.075897267025066, 2.047063826097552, 2.0113885276872785, 1.9738591338633673, 1.930344578517883, 1.8837752392294858, 1.8313170615251526, 1.7800780013567736, 1.7264407044309809, 1.6655758179851166, 1.6253030444211838, 1.5680564758941686, 1.5213810675620656, 1.492507550962345, 1.4668080085745072, 1.4221567809542393, 1.4086204669447528, 1.3928750802843626, 1.385218885832648, 1.3741264821295536, 1.382080308891259, 1.3758177230733182, 1.3762656369024753, 1.3751208378795965, 1.3562181055616662, 1.415756631269116], "accuracy": [0.08532558381557465, 0.09113723784685135, 0.09576013684272766, 0.09932637959718704, 0.1154404953122139, 0.12402588874101639, 0.1398758441209793, 0.14780081808567047, 0.17817988991737366, 0.20221899449825287, 0.2262580841779709, 0.2514859437942505, 0.2661471366882324, 0.28318583965301514, 0.308149516582489, 0.3187161684036255, 0.32281073927879333, 0.3403777480125427, 0.35028398036956787, 0.3657376766204834, 0.3774930536746979, 0.38066306710243225, 0.38105931878089905, 0.4010038375854492, 0.40945714712142944, 0.413419634103775, 0.4299300014972687, 0.43270373344421387, 0.4427420496940613, 0.4473649561405182, 0.4663848876953125, 0.46229031682014465, 0.4721965491771698, 0.48606523871421814, 0.48685774207115173, 0.49108439683914185, 0.5115572810173035, 0.5131422281265259, 0.5229163765907288, 0.5274072289466858, 0.5379738211631775, 0.5383700728416443, 0.5363888740539551, 0.54655921459198, 0.5486725568771362, 0.5548804402351379, 0.5473517179489136], "val_loss": [1.9707059860229492, 1.9693636213030135, 1.9671837942940849, 1.9641682761056083, 1.9603404317583357, 1.9557221957615443, 1.9503560747419084, 1.944267954145159, 1.937504495893206, 1.930075032370431, 1.921952247619629, 1.9131402288164412, 1.903576101575579, 1.8931155885968889, 1.8815539223807198, 1.8686538423810686, 1.8541462080819267, 1.83770717893328, 1.8190595081874303, 1.797912325177874, 1.7738580022539412, 1.7465400695800781, 1.7155513082231795, 1.6804912771497453, 1.6410057885306222, 1.5969910281045097, 1.5483600412096297, 1.4954243728092738, 1.4387507779257638, 1.3793106419699532, 1.318429674421038, 1.257610252925328, 1.1985232489449638, 1.142474889755249, 1.0904112883976527, 1.0427498817443848, 0.9994125366210938, 0.9603182928902763, 0.9251912661961147, 0.8939445699964251, 0.8665307930537632, 0.843622122492109, 0.827357462474278, 0.8186455113547189, 0.814734867640904, 0.8092722722462246, 0.7967348269053868], "val_accuracy": [0.03966666758060455, 0.04399999976158142, 0.057999998331069946, 0.08566666394472122, 0.11900000274181366, 0.16866666078567505, 0.21433334052562714, 0.2653333246707916, 0.30933332443237305, 0.33666667342185974, 0.3543333411216736, 0.36666667461395264, 0.37700000405311584, 0.3930000066757202, 0.4009999930858612, 0.4073333442211151, 0.4166666567325592, 0.4216666519641876, 0.43299999833106995, 0.44466665387153625, 0.4546666741371155, 0.4633333384990692, 0.47099998593330383, 0.4790000021457672, 0.4846666753292084, 0.49433332681655884, 0.5043333172798157, 0.512333333492279, 0.5233333110809326, 0.5333333611488342, 0.5450000166893005, 0.5586666464805603, 0.5646666884422302, 0.5786666870117188, 0.5956666469573975, 0.612666666507721, 0.6293333172798157, 0.6430000066757202, 0.6566666960716248, 0.6679999828338623, 0.6693333387374878, 0.6743333339691162, 0.671999990940094, 0.6673333048820496, 0.6603333353996277, 0.6543333530426025, 0.6583333611488342]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 8, 5, 8, 2, 4, 4, 5, 9, 9], [2, 1, 5, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [1, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [3, 3, 2, 2], [48, 9]], "fitness": -0.3417142927646637, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.114928431262776, 2.3113696869291003, 2.3060970576589512, 2.294533961232722, 2.3036107906749175, 2.2424729230964124, 2.305519635918874, 2.303458160838242, 2.303191477013869, 2.303395970528073], "accuracy": [0.190859854221344, 0.1566503793001175, 0.09985470771789551, 0.11345925182104111, 0.09998679161071777, 0.16880200803279877, 0.09642054885625839, 0.10130762308835983, 0.09734513610601425, 0.0948355570435524], "val_loss": [1.9858184541974748, 1.9779253687177385, 1.9737982749938965, 1.977626051221575, 1.9656758308410645, 1.976531641823905, 1.974051066807338, 1.9739041328430176, 1.9736686434064592, 1.9740108762468611], "val_accuracy": [0.10233332961797714, 0.10133333504199982, 0.10133333504199982, 0.10000000149011612, 0.10266666859388351, 0.10000000149011612, 0.10000000149011612, 0.09833333641290665, 0.10000000149011612, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [7, 8, 5, 5, 2, 4, 4, 5, 4, 9], [5, 3, 5, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [3, 3, 2, 2], [86, 9]], "fitness": -0.22342857718467712, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 10, 5, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.sqrt(tf.math.square(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.pow(grad, grad)), tf.math.pow(tf.math.square(tf.math.pow(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.add(beta, alpha)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [3.118825759838569, 2.307609240046078, 2.2689897960218945, 2.30411750979632, 2.303199472239682, 2.3032235959108087, 2.302373948019761], "accuracy": [0.1904636174440384, 0.10434553027153015, 0.18240654468536377, 0.09919429570436478, 0.09708096832036972, 0.09628847241401672, 0.10540219396352768], "val_loss": [1.9867007391793388, 1.9161310195922852, 1.9748634610857283, 1.9735166685921806, 1.9735046795436315, 1.9732817241123743, 1.9718772343226842], "val_accuracy": [0.10233332961797714, 0.20033332705497742, 0.10133333504199982, 0.10233332961797714, 0.10133333504199982, 0.10133333504199982, 0.11299999803304672]}}, {"genotype": [[0], [1, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [7, 1, 5, 8, 3, 2, 4, 4, 9, 9], [5, 1, 5, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [1, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [3, 3, 2, 2], [43, 9]], "fitness": -0.1997142881155014, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [4.173716423864519, 2.3861122840210713, 7.168411783656513e+26, NaN, NaN, NaN, NaN], "accuracy": [0.17831197381019592, 0.13697001338005066, 0.11834631860256195, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0988736833844865, 3.3294621876307895, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10133333504199982, 0.20533333718776703, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [7, 8, 3, 8, 2, 4, 4, 5, 9, 2], [5, 3, 5, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [5, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [3, 3, 2, 2], [48, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 9, 5, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.square(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, alpha))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0664377212524414, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], [7, 4, 5, 8, 2, 4, 4, 5, 6, 2, 8, 2, 8, 0, 4, 0, 0, 8, 1, 9, 6, 1, 8, 1, 6, 5], [3, 1, 5, 3, 1, 3, 4, 1, 5, 4, 4, 4, 1, 3], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [3, 3, 2, 2], [35, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 40, 40, 26, 14, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 58, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))), tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, grad)))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.add(beta, grad)))), tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.subtract(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.divide_no_nan(alpha, tf.math.square(tf.math.add(beta, grad))))))))))))))))))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3593193555410434, 581.1842392261522, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.041606128215789795, 0.04530445113778114, 0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.144267899649484, 3276050724.571429, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.005333333276212215, 0.09833333641290665, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [7, 8, 5, 8, 2, 4, 4, 5, 9, 9], [5, 1, 5, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [79], [1, 0, 0, 0, 1, 0, 0, 1, 1], [3, 2, 9, 8, 4, 7, 4, 5, 6], [2, 3, 2, 2], [49, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.sqrt(tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [7, 8, 5, 8, 2, 4, 4, 5, 9, 9], [5, 1, 5, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [5, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [2, 3, 2, 2], [35, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3593190226493777, 578.2506402652687, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.041606128215789795, 0.04530445113778114, 0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.1442651748657227, 3226811904.0, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.005333333276212215, 0.09833333641290665, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [7, 8, 5, 8, 2, 4, 4, 5, 9, 2], [5, 1, 5, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [2, 3, 2, 2], [48, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], [7, 5, 8, 6, 2, 4, 8, 5, 9, 9], [3, 1, 3, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [6, 9, 9, 8, 4, 7, 4, 5, 6], [3, 3, 2, 2], [7, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(sigma, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [0, 0, 1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [7, 8, 5, 8, 2, 4, 4, 5, 9, 2], [5, 1, 5, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [1, 1], [79], [1, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [3, 3, 2, 2], [48, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 3, 3, 1, 2, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1260311312.0799422, 23468242526.609432, 110370189939.03262, 306714978659.1742, 642725418183.2275, 1199031208305.2405], "accuracy": [0.09576013684272766, 0.09708096832036972, 0.09694888442754745, 0.10117553919553757, 0.10355303436517715, 0.09972262382507324], "val_loss": [4651704320.0, 37202515675.42857, 125545297627.42857, 297576141385.1429, 581181149769.1428, 1004254115547.4286], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [7, 3, 5, 8, 2, 4, 4, 5, 9, 2], [1, 1, 5, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [2, 3, 2, 2], [48, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 10, 6, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(alpha, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, alpha)))))))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [7, 8, 5, 8, 2, 4, 4, 5, 9, 2], [2, 5, 5, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [79], [1, 0, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [3, 3, 2, 2], [48, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07687227427959442, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [7, 8, 5, 8, 2, 4, 4, 5, 9, 9], [5, 1, 5, 3, 1, 3, 4, 1], [76, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [1, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [43, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3024076595125007, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [7, 8, 5, 8, 2, 4, 4, 5, 9, 2], [5, 1, 3, 3, 1, 3, 4, 1], [4, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [1, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [3, 3, 2, 2], [55, 9]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 10, 5, 1, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.square(alpha))), tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)))))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303291017038317, 2.303539046679411, 2.3037210858934167, 2.3026067126995504, 2.30250358949988, 2.303708128374266], "accuracy": [0.08466517180204391, 0.08849557489156723, 0.08836349099874496, 0.08492933213710785, 0.09668471664190292, 0.08849557489156723], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [7, 8, 5, 6, 2, 4, 3, 5, 9, 9], [5, 3, 5, 2, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [1], [0, 1, 1], [9], [1, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [6, 9, 9, 8, 4, 7, 4, 5, 6], [3, 3, 2, 2], [48, 9]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 1, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(sigma, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303291017038317, 2.303539046679411, 2.3037210858934167, 2.3026067126995504, 2.30250358949988, 2.303708128374266], "accuracy": [0.08466517180204391, 0.08849557489156723, 0.08836349099874496, 0.08492933213710785, 0.09668471664190292, 0.08849557489156723], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [7, 7, 5, 8, 2, 4, 4, 5, 9, 2], [5, 1, 5, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [3, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [3, 3, 2, 2], [48, 9]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, sigma)", "other_info": {"loss": [2.303291017038317, 2.303539046679411, 2.3037210858934167, 2.3026067126995504, 2.30250358949988, 2.303708128374266], "accuracy": [0.08466517180204391, 0.08849557489156723, 0.08836349099874496, 0.08492933213710785, 0.09668471664190292, 0.08849557489156723], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [7, 7, 5, 8, 2, 4, 4, 5, 9, 2], [5, 1, 5, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [3, 3, 2, 2], [48, 9]], "fitness": -0.010285714641213417, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3801858964581704, 2.3182649859946243, 2.386296126096476, 2.21477958841441, 2.005859135416253, 2.0337619153563025, 2.107109839937328, 2.113564145185566, 2.191788361986095], "accuracy": [0.27103421092033386, 0.1542728841304779, 0.19984149932861328, 0.20631356537342072, 0.28463876247406006, 0.3181878328323364, 0.25676923990249634, 0.24474970996379852, 0.21621978282928467], "val_loss": [1.9248894963945662, 2.1042958668300082, 1.8103465352739607, 1.6243244579860143, 1.607278789792742, 1.6701714311327254, 1.7114147458757674, 1.619199548448835, 1.588857786996024], "val_accuracy": [0.12600000202655792, 0.2893333435058594, 0.25099998712539673, 0.3499999940395355, 0.3186666667461395, 0.32233333587646484, 0.2616666555404663, 0.33533334732055664, 0.32366666197776794]}}]