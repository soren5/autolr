[{"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [3, 6, 4, 2, 3, 0, 4, 9, 9, 4, 4, 2], [3, 0, 3, 1, 0, 0, 0, 2], [39, 35, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [45]], "fitness": -0.7988571524620056, "mapping_values": [1, 1, 1, 0, 1, 0, 20, 20, 12, 8, 6, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(grad, tf.math.negative(tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))), tf.math.pow(grad, alpha))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.0272928990424663, 1.7042714263532832, 1.1118208481540863, 0.9712930496547358, 0.8268596181433671, 0.7518860796785563, 0.7414936665861346, 0.7101713667031151, 0.6968493130087081, 0.6579792630230006, 0.6398673245872505, 0.6243830884074523, 0.5760887269692855, 0.5827419387508519, 0.5632059282362816, 0.5691170770384144, 0.5432858566062608, 0.5289497912174139, 0.5004559681163945], "accuracy": [0.3230748772621155, 0.4542332589626312, 0.6057323813438416, 0.6386210322380066, 0.6984546184539795, 0.7124554514884949, 0.7186633348464966, 0.7322678565979004, 0.7347774505615234, 0.7543256878852844, 0.7589486241340637, 0.76106196641922, 0.7845727205276489, 0.7840443849563599, 0.7936864495277405, 0.7802139520645142, 0.7948752045631409, 0.8034605979919434, 0.8175934553146362], "val_loss": [1.741037164415632, 0.8434850999287197, 1.0002311979021346, 0.7201764753886631, 0.6231569051742554, 0.629934583391462, 0.578059230531965, 0.6535650662013462, 0.5303620440619332, 0.5098032099860055, 0.5026568514960152, 0.4874662331172398, 0.4979381901877267, 0.484163693019322, 0.4883524179458618, 0.4652976989746094, 0.4700245346341814, 0.47086453437805176, 0.4632453918457031], "val_accuracy": [0.4126666784286499, 0.6426666378974915, 0.5373333096504211, 0.6859999895095825, 0.7239999771118164, 0.7059999704360962, 0.7206666469573975, 0.6813333630561829, 0.765666663646698, 0.7699999809265137, 0.7706666588783264, 0.7753333449363708, 0.7720000147819519, 0.7883333563804626, 0.781000018119812, 0.7856666445732117, 0.7826666831970215, 0.7863333225250244, 0.7850000262260437]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0], [1], [], [1, 0], [93], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [45]], "fitness": -0.7922857403755188, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.0272752951794706, 1.703654914515728, 1.1092895799702847, 0.9544034032238441, 0.8330075581075965, 0.7658827431197841, 0.7326938396101031, 0.7110032021897014, 0.7038195086287595, 0.6578080198784011, 0.6400849065839213, 0.611610189680536, 0.5728539762763363, 0.594242384617654, 0.5720944306901133, 0.5774786753771627, 0.5456083792941666, 0.53092333066654, 0.5116938042949298], "accuracy": [0.3230748772621155, 0.4551578462123871, 0.6059965491294861, 0.6465460062026978, 0.6959450244903564, 0.7046625018119812, 0.7190595865249634, 0.7308149337768555, 0.7296261787414551, 0.7557786107063293, 0.7565711140632629, 0.7717606425285339, 0.7885351777076721, 0.7753269076347351, 0.7878747582435608, 0.7794214487075806, 0.7950072884559631, 0.8012151718139648, 0.8104609847068787], "val_loss": [1.7410417284284319, 0.8434001207351685, 0.9612467629568917, 0.794214163507734, 0.6300458226885114, 0.665279916354588, 0.5626845189503261, 0.6721759353365216, 0.5342413697923932, 0.5138538735253471, 0.4966822862625122, 0.49092648710523334, 0.49953108174460276, 0.4693260533469064, 0.49653758321489605, 0.5057929413659232, 0.4527078696659633, 0.483187164579119, 0.4551736116409302], "val_accuracy": [0.4126666784286499, 0.6399999856948853, 0.5483333468437195, 0.6456666588783264, 0.7136666774749756, 0.6880000233650208, 0.7440000176429749, 0.6643333435058594, 0.7649999856948853, 0.765333354473114, 0.7673333287239075, 0.7713333368301392, 0.7730000019073486, 0.7986666560173035, 0.7770000100135803, 0.7519999742507935, 0.7963333129882812, 0.7786666750907898, 0.7929999828338623]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0], [2, 6, 0, 2, 3, 0, 4, 9, 9, 9], [3, 0, 3, 4, 0], [93, 10, 32, 23], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [45]], "fitness": -0.7802857160568237, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 10, 3, 4, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, tf.math.add(grad, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.math.pow(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.0220704755416525, 1.5029324650717228, 1.1529179704486892, 0.9359238651513329, 0.8486836178663967, 0.780172455831998, 0.7658116722450186, 0.7158881774541961, 0.690264949173802, 0.6713131515498899, 0.6279374476059191, 0.6304673504489303, 0.6332476583170837, 0.5920401179259873, 0.5877503620209932, 0.5609207690399809, 0.5523786542123067, 0.5585657453902283, 0.5557072460297123], "accuracy": [0.31898030638694763, 0.4939902126789093, 0.585391640663147, 0.6576409935951233, 0.6894729733467102, 0.7045304179191589, 0.7094175219535828, 0.7268524765968323, 0.735569953918457, 0.7483819723129272, 0.7585523724555969, 0.7508915662765503, 0.76106196641922, 0.7800818681716919, 0.7754589915275574, 0.7902522683143616, 0.7956677079200745, 0.7829877138137817, 0.7940827012062073], "val_loss": [1.317542552947998, 0.847416809626988, 0.7141697406768799, 0.6985659769603184, 0.6163251740591866, 0.5986062458583287, 0.5619673728942871, 0.5425233670643398, 0.5421056406838554, 0.5237124817711967, 0.5334974016462054, 0.5010919060025897, 0.49476724011557444, 0.46884742804936, 0.48734472479139057, 0.4740215710231236, 0.4648164340427944, 0.4757107836859567, 0.4755019119807652], "val_accuracy": [0.5106666684150696, 0.6206666827201843, 0.703000009059906, 0.6919999718666077, 0.7336666584014893, 0.7196666598320007, 0.7443333268165588, 0.7576666474342346, 0.7319999933242798, 0.7593333125114441, 0.7379999756813049, 0.7580000162124634, 0.7753333449363708, 0.7929999828338623, 0.7836666703224182, 0.7879999876022339, 0.7839999794960022, 0.7860000133514404, 0.7883333563804626]}}, {"genotype": [[0], [1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [4, 6, 3, 2, 3, 0, 4, 9, 9], [1, 0, 2, 0, 3], [93, 10, 32, 23], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [22, 3]], "fitness": -0.6697142720222473, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 9, 5, 4, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)), tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.pow(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))))), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.2953274150203957, 2.236952604445736, 2.095046521634505, 1.760335486704537, 1.43459541576256, 1.4074247242232607, 1.1362744038524786, 0.9452507645147603, 0.9520049334643083, 0.8712985532048545, 0.8344046731729549, 0.8576852239322952, 0.8345181778390189, 0.7771761677662269, 0.7415790734132361, 0.7728692597685363, 0.7308168444320463, 0.7213077314021864, 0.7211131905804, 0.698408467902515, 0.6758726634180635, 0.6460215013182442, 0.6329768760140388, 0.6402831498532011, 0.6162952009035911, 0.6050650282086256, 0.6047452455577188, 0.587755288375194, 0.5725374955149091, 0.5851117224662438, 0.5691003954846704, 0.5610493192063692, 0.5469346918513069, 0.5526227082133592, 0.5493124038740754, 0.5351050462012341, 0.5261120614342922, 0.5095427068051975, 0.5190346644791032, 0.49647611989368456, 0.5060986453878126, 0.4996923749331297, 0.49128093383394417, 0.4955530936896541, 0.4930961254549663, 0.473885412481341, 0.47241885021078966, 0.4751015197898513, 0.4671693817341978, 0.4591601118238737, 0.4477016198054092, 0.4540813746839356, 0.4491276501656649, 0.4413176753682829, 0.42880155484060084], "accuracy": [0.10989301651716232, 0.2545238435268402, 0.3774930536746979, 0.436930388212204, 0.5163122415542603, 0.5429930090904236, 0.6165632009506226, 0.6482630968093872, 0.6619997620582581, 0.6775855422019958, 0.6873596906661987, 0.6933034062385559, 0.6890767216682434, 0.6968696117401123, 0.7197200059890747, 0.7128516435623169, 0.7239466309547424, 0.733060359954834, 0.7363624572753906, 0.7253995537757874, 0.7297582626342773, 0.7564390301704407, 0.763439416885376, 0.752740740776062, 0.76106196641922, 0.7701756954193115, 0.7633073329925537, 0.7763835787773132, 0.7823272943496704, 0.7745344042778015, 0.7868181467056274, 0.7880068421363831, 0.7959318161010742, 0.7825914621353149, 0.7857614755630493, 0.7935543656349182, 0.7964601516723633, 0.8053097128868103, 0.8095363974571228, 0.8140271902084351, 0.8086118102073669, 0.8146876096725464, 0.8103289008140564, 0.8064984679222107, 0.8120459914207458, 0.81548011302948, 0.8166688680648804, 0.8165367841720581, 0.8228767514228821, 0.819970965385437, 0.8273676037788391, 0.824329674243927, 0.8286884427070618, 0.8265751004219055, 0.8318583965301514], "val_loss": [1.9393891607012068, 1.8550655501229423, 1.6291912623814173, 1.1670408248901367, 0.8452508790152413, 0.7402789763041905, 0.6769566195351737, 0.7325987304959979, 0.7118117638996669, 0.6233807802200317, 0.6253397975649152, 0.6307578427450997, 0.5977618864604405, 0.5806222472872052, 0.5939711332321167, 0.5878177540642875, 0.551175628389631, 0.5529334715434483, 0.5204114062445504, 0.5213319063186646, 0.5115373475211007, 0.49783752645765034, 0.5024003301348005, 0.4966707059315273, 0.47798335552215576, 0.4807436466217041, 0.4719872304371425, 0.4579075404575893, 0.4529917240142822, 0.4603015695299421, 0.45746053968157085, 0.44990787335804533, 0.4435331736292158, 0.44641332966940744, 0.437094441481999, 0.4292441265923636, 0.42454417262758526, 0.4246275084359305, 0.4238594259534563, 0.4173098972865513, 0.411838744367872, 0.4058658310345241, 0.4057808518409729, 0.4019025649343218, 0.40366277524403166, 0.405438346522195, 0.40897644417626516, 0.40645349877221243, 0.39942834206989836, 0.3945581998143877, 0.39837920665740967, 0.39685133525303434, 0.3944783551352365, 0.39537486008235384, 0.40481795583452496], "val_accuracy": [0.31166666746139526, 0.4286666810512543, 0.492333322763443, 0.5680000185966492, 0.6743333339691162, 0.6956666707992554, 0.7160000205039978, 0.6853333115577698, 0.7093333601951599, 0.7206666469573975, 0.7293333411216736, 0.7193333506584167, 0.734000027179718, 0.737666666507721, 0.7426666617393494, 0.7419999837875366, 0.75, 0.7553333044052124, 0.7620000243186951, 0.7603333592414856, 0.7673333287239075, 0.7726666927337646, 0.7793333530426025, 0.7823333144187927, 0.7873333096504211, 0.7836666703224182, 0.7879999876022339, 0.7960000038146973, 0.8036666512489319, 0.8040000200271606, 0.8080000281333923, 0.8073333501815796, 0.8109999895095825, 0.8023333549499512, 0.8053333163261414, 0.8109999895095825, 0.8176666498184204, 0.8226666450500488, 0.8209999799728394, 0.8233333230018616, 0.8193333148956299, 0.8236666917800903, 0.8146666884422302, 0.8213333487510681, 0.8273333311080933, 0.8309999704360962, 0.8289999961853027, 0.8263333439826965, 0.8349999785423279, 0.8423333168029785, 0.8410000205039978, 0.8396666646003723, 0.8376666903495789, 0.8360000252723694, 0.8416666388511658]}}, {"genotype": [[0], [1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0], [1], [], [3, 0], [93], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [93]], "fitness": -0.10599999874830246, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.3089592341560463, 2.7135380657200074, 2.718175947768514, NaN, NaN, NaN, NaN], "accuracy": [0.19918107986450195, 0.1888786107301712, 0.18623696267604828, 0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.8480430330548967, 3.1914710317339217, 10.127701078142438, NaN, NaN, NaN, NaN], "val_accuracy": [0.20866666734218597, 0.37966665625572205, 0.1469999998807907, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 0], [0, 0, 0, 1, 1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0], [1], [], [1, 0], [93], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [19]], "fitness": -0.10057143121957779, "mapping_values": [1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [73204.48616938955, 56794.0142015672, 124168.1472214122, 167787.21685143662, 169142.02524964194, 181159.83202905723], "accuracy": [0.09998679161071777, 0.09259014576673508, 0.08955223858356476, 0.08981640636920929, 0.09179764986038208, 0.08968432247638702], "val_loss": [17.726036071777344, 14.722026552472796, 237.85128348214286, 610.4844970703125, 976.5670689174107, 1294.0291573660713], "val_accuracy": [0.10700000077486038, 0.10533333569765091, 0.10566666722297668, 0.10533333569765091, 0.09933333098888397, 0.07433333247900009]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0], [6, 4, 9, 2, 3, 0, 2, 9, 9], [2, 0, 3], [7, 59], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [2, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [22, 3]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 2], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3024947322071534, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [2, 4, 4, 2, 6, 0, 1, 9, 9], [2, 0, 4, 0, 2, 2], [7, 59, 71], [0], [0, 1, 1], [9], [2, 1], [79], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [3, 2, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [46, 33]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 8, 6, 3, 1, 1, 1, 0, 1, 10, 6, 4, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.divide_no_nan(tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))))))), beta)), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(sigma, beta), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09219389408826828, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 0, 1, 0, 0], [1, 0, 0, 1, 0], [5, 7, 0, 9], [1, 0], [3, 35, 20, 7], [0], [1, 1, 1], [9], [1, 1], [79], [1, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 1, 2, 2], [75]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3024947322071534, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0], [0, 1, 1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1], [2, 1, 1, 2, 1, 0, 6, 9, 9], [3, 0, 3, 4, 0], [93, 10, 32, 69], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [22, 3]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 14, 14, 9, 5, 4, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [79436763218.81369, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.16193369030952454, 0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.9992034139613684e+25, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0833333358168602, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [3, 4, 6, 3, 3, 3, 4, 6, 7, 0, 6, 5, 0, 4, 4, 6, 4, 2, 0, 7, 2, 2, 1, 6, 9, 7, 6, 0, 5, 2, 0, 0], [1, 0, 4, 4, 4, 4, 1, 2, 0, 4, 2, 0, 0, 2, 3, 1, 4, 4, 0, 2, 1, 0, 3], [93, 51, 9, 15, 10, 86, 68], [1], [1, 1, 1], [9], [1, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [45, 99]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 55, 55, 32, 23, 7, 1, 0, 0, 0, 0, 3, 2, 1, 2], "tree_depth": 49, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, grad)), tf.math.add(beta, grad))), tf.math.divide_no_nan(grad, tf.math.square(tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.pow(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), beta))), tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))))))), tf.math.add(tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(beta, beta), tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.add(alpha, grad)))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.negative(grad)), tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, beta))))))), tf.math.negative(alpha))), tf.math.add(beta, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3024947322071534, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0], [1], [], [1, 0], [93], [0], [1, 1, 1], [9], [1, 1], [79], [1, 1, 1, 0, 1, 0, 0, 1, 1], [9, 9, 9, 8, 4, 7, 4, 5, 6], [0, 0, 2, 2], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3024947322071534, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0], [1], [6, 4, 9, 2, 3, 0, 2, 9, 9], [3, 0], [7, 59], [0], [0, 1, 1], [9], [1, 1], [79], [0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [3, 2, 2, 2], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [28477729.0538437, 561252380.0649848, 2588531605.8940697, 7199285270.451988, 15552107200.938316, 28473686255.938713], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.10117553919553757, 0.1002509593963623, 0.10196803510189056, 0.09589222073554993], "val_loss": [110344196.57142857, 881827766.8571428, 2975136475.428571, 7050936612.571428, 13769940699.428572, 23792800914.285713], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0, 1], [1], [], [1, 0], [93], [1], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [6, 9, 9, 8, 4, 7, 4, 5, 6], [0, 0, 2, 2], [45, 60]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 2], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3024947322071534, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0, 1], [0, 0, 1], [2, 9], [1, 0], [93], [0], [1, 1, 1], [9], [1, 1], [79], [1, 0, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [45, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3024947322071534, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [2, 9, 4, 2, 3, 0, 4, 9, 9], [1, 0, 3, 2, 0], [93, 10, 32, 23], [0], [1, 1, 1], [9], [1, 1], [79], [0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [45, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 8, 4, 3, 1, 1, 0, 1, 0, 3, 2, 1, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3024947322071534, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 1, 1], [2, 6, 4, 2, 3, 0, 4, 9, 9], [1, 0], [93, 10, 32, 23], [0], [0, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 1, 0, 1, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [7046240.705871169, 138715638.28292167, 639558323.8103288, 1778491879.8573503, 3841644169.2141066, 7033135779.858935], "accuracy": [0.09721305221319199, 0.09985470771789551, 0.10117553919553757, 0.1002509593963623, 0.10196803510189056, 0.09589222073554993], "val_loss": [27283648.0, 217901170.2857143, 735007396.5714285, 1741755757.7142856, 3401299163.428571, 5876793490.285714], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0], [0, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0, 0], [0, 1, 1], [2], [4, 0], [93], [0], [1, 1, 1], [9], [1, 1], [79], [1, 0, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3024947322071534, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0], [1], [], [1, 0], [93], [0], [1, 1, 1], [9], [3, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [8, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3024947322071534, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0], [1], [], [1, 0], [93], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [91, 18]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 2], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3024947322071534, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}]