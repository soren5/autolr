[{"genotype": [[0], [0, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [9, 0, 1, 4, 0, 2, 6, 3, 6, 1, 5, 0, 4, 6, 8, 6, 4, 8, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8231428861618042, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(sigma), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.9838512217789088, 1.500987348681223, 1.0342878549169194, 0.9009497755664356, 0.8386549622611662, 0.7693716197548572, 0.7162003459443569, 0.6962672873746922, 0.6685392160488709, 0.6670120401609811, 0.6398544456145987, 0.6010519512939478, 0.6235382997002411, 0.6056206006856406, 0.6073638731226267, 0.5677880261473731, 0.5515116718403966, 0.5466987151653067, 0.5681516897204435, 0.5241843411447256, 0.5289630504639204, 0.49985106465146056, 0.5062389637359208, 0.5092390772610167, 0.48257433336015076, 0.4728465114310905, 0.46276457727215214, 0.4813319342349892, 0.4507840128858816, 0.4491031794082912], "accuracy": [0.34447231888771057, 0.47893276810646057, 0.6185444593429565, 0.6641130447387695, 0.6753401160240173, 0.7020208835601807, 0.7298903465270996, 0.7341170310974121, 0.7478536367416382, 0.7427024245262146, 0.7585523724555969, 0.7737419009208679, 0.7609298825263977, 0.7700436115264893, 0.7687227725982666, 0.7884030938148499, 0.787082314491272, 0.7902522683143616, 0.7845727205276489, 0.8021397590637207, 0.7994980812072754, 0.8129705190658569, 0.807158887386322, 0.8075551390647888, 0.8201030492782593, 0.8232730031013489, 0.8249900937080383, 0.8197067975997925, 0.8308017253875732, 0.8276317715644836], "val_loss": [1.6491493838174003, 0.9021167073931012, 0.7089937244142804, 0.669718725340707, 0.591242892401559, 0.615735616002764, 0.5842870133263725, 0.5938791717801776, 0.5221515723637172, 0.5153966290610177, 0.4924299887248448, 0.5076511246817452, 0.4887808220727103, 0.5036449262074062, 0.47070937497275217, 0.46172215257372173, 0.4461700235094343, 0.5101560183933803, 0.4397442511149815, 0.438231246812003, 0.43431308439799715, 0.43070063420704435, 0.46045986243656706, 0.44402354104178293, 0.40167986495154245, 0.4367468016488211, 0.4643723283495222, 0.3941013387271336, 0.4176157202039446, 0.44288972445896696], "val_accuracy": [0.40533334016799927, 0.593666672706604, 0.7076666951179504, 0.6833333373069763, 0.7273333072662354, 0.7306666374206543, 0.7233333587646484, 0.7096666693687439, 0.7743333578109741, 0.7710000276565552, 0.781000018119812, 0.7663333415985107, 0.7846666574478149, 0.7860000133514404, 0.7913333177566528, 0.7946666479110718, 0.8029999732971191, 0.7760000228881836, 0.809333324432373, 0.8069999814033508, 0.8236666917800903, 0.8040000200271606, 0.7889999747276306, 0.7919999957084656, 0.8339999914169312, 0.8023333549499512, 0.8073333501815796, 0.8316666483879089, 0.8143333196640015, 0.7990000247955322]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 1, 4, 0, 2, 4, 3, 6, 2, 5, 6, 6, 4, 8, 6, 4, 1, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 2, 3, 2, 3, 3, 1, 3, 3, 3, 3, 3, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8119999766349792, "mapping_values": [1, 1, 1, 0, 1, 0, 38, 38, 22, 16, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.pow(tf.math.negative(tf.math.add(tf.math.add(beta, beta), grad)), tf.math.add(beta, beta)), tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.square(tf.math.divide_no_nan(grad, tf.math.add(beta, grad))), tf.math.divide_no_nan(alpha, grad))), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.pow(grad, grad))), tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(grad)))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), alpha)))), tf.math.add(beta, tf.math.add(beta, grad)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(sigma), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.983867757781118, 1.5010624492110167, 1.0252111520056775, 0.9088001787198013, 0.8179875074392139, 0.7837673787899997, 0.7179284512154288, 0.7030887452366644, 0.6663471567018268, 0.6751377052556033, 0.6488286573904821, 0.6068148576761391, 0.6038834204401055, 0.6020514419239116, 0.601895088556499, 0.5675015021639572, 0.547436154427199, 0.5409708632501424, 0.5633263631645463, 0.5202296763567987, 0.5239708428023246, 0.49616192978182017, 0.4960435827205745, 0.5146291920884001, 0.4754418286515454, 0.4734709410737644, 0.46530978284995667, 0.4757612405939975, 0.44950699603096245, 0.4486627832159406, 0.4574822331652618, 0.42308833863693945, 0.433927990552252, 0.43009462173210866, 0.4186797777753953, 0.43876351392295904, 0.3992236880554798, 0.40127644459679457, 0.40959172596973653, 0.3932235086118509, 0.3855913573480663, 0.3930616994236974, 0.3764340879422421, 0.3731717267773013, 0.3750429115102055, 0.3612976134642161, 0.38293325692797064], "accuracy": [0.34447231888771057, 0.4788006842136383, 0.6186765432357788, 0.6536785364151001, 0.687887966632843, 0.696209192276001, 0.7281733155250549, 0.7339849472045898, 0.743891179561615, 0.7441553473472595, 0.7541936039924622, 0.7745344042778015, 0.7693831920623779, 0.7675340175628662, 0.772288978099823, 0.7890635132789612, 0.7913089394569397, 0.7948752045631409, 0.7845727205276489, 0.8030643463134766, 0.802800178527832, 0.8128384351730347, 0.8117818236351013, 0.8062343001365662, 0.8252542614936829, 0.8203672170639038, 0.8257825970649719, 0.819442629814148, 0.8325188159942627, 0.8305375576019287, 0.829216718673706, 0.8424250483512878, 0.8392550349235535, 0.8412362933158875, 0.845859169960022, 0.8337075710296631, 0.848368763923645, 0.8486329317092896, 0.8482366800308228, 0.8496896028518677, 0.8601241707801819, 0.8533879518508911, 0.8597279191017151, 0.8590674996376038, 0.8552370667457581, 0.8638224601745605, 0.8519350290298462], "val_loss": [1.6489107268197196, 0.8991658857890538, 0.7752596991402763, 0.669721177646092, 0.6027396236147199, 0.5811775411878314, 0.6014171838760376, 0.6048684460776192, 0.6115754842758179, 0.5163048165185111, 0.4921083620616368, 0.49485414368765696, 0.4745571272713797, 0.5110036305018834, 0.4632268803460257, 0.46032285690307617, 0.4458029270172119, 0.5079617500305176, 0.4372738940375192, 0.4312219279153006, 0.43678191729954313, 0.4426591055733817, 0.4850458928516933, 0.4351661886487688, 0.40322997740336824, 0.42707922628947664, 0.4713050127029419, 0.39557976382119314, 0.39643343005861553, 0.40441763401031494, 0.3917033246585301, 0.39321193524769377, 0.39517068011420114, 0.42243718249457224, 0.37594716038022724, 0.3746364286967686, 0.37112490619931904, 0.4047483376094273, 0.3737326094082424, 0.36360096079962595, 0.35615359885352, 0.35516858100891113, 0.37333154678344727, 0.36036386660167147, 0.37253200156348093, 0.3859570963042123, 0.38342240027018953], "val_accuracy": [0.4050000011920929, 0.5943333506584167, 0.6556666493415833, 0.6880000233650208, 0.7276666760444641, 0.734333336353302, 0.7120000123977661, 0.703000009059906, 0.7160000205039978, 0.7710000276565552, 0.7796666622161865, 0.781333327293396, 0.7873333096504211, 0.7710000276565552, 0.79666668176651, 0.7976666688919067, 0.8043333292007446, 0.7789999842643738, 0.8109999895095825, 0.8140000104904175, 0.8233333230018616, 0.7913333177566528, 0.7789999842643738, 0.7973333597183228, 0.8306666612625122, 0.8086666464805603, 0.7913333177566528, 0.8276666402816772, 0.8316666483879089, 0.8213333487510681, 0.8223333358764648, 0.8346666693687439, 0.8176666498184204, 0.8056666851043701, 0.8420000076293945, 0.8360000252723694, 0.843999981880188, 0.8166666626930237, 0.8373333215713501, 0.8460000157356262, 0.8479999899864197, 0.8550000190734863, 0.8443333506584167, 0.8500000238418579, 0.8433333039283752, 0.8396666646003723, 0.828000009059906]}}, {"genotype": [[0], [1, 1, 1], [0, 0, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 0, 1, 6, 0, 0, 4, 0, 2, 2, 5, 8, 2, 5, 8, 6, 4, 1, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 2, 1, 3, 1, 3, 3, 3, 3, 3, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8054285645484924, "mapping_values": [1, 2, 2, 2, 0, 1, 18, 18, 11, 7, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.divide_no_nan(tf.math.negative(tf.math.negative(tf.math.add(beta, tf.math.pow(grad, alpha)))), tf.math.add(beta, grad)), tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), alpha)), tf.math.square(tf.math.add(beta, grad))))))))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [1.983857699798445, 1.4989577580783124, 1.0305990313242896, 0.9075797313334463, 0.8216524387804146, 0.7776127466908567, 0.7127970413698134, 0.6983414667472391, 0.6711548809771525, 0.673939604037127, 0.6438003192409596, 0.613385933477802, 0.6116585166793473, 0.6059012438296453, 0.6081095850541686, 0.5654388444141201, 0.552302616887388, 0.5505681309276773, 0.5616974105703958, 0.523700252933084, 0.5285107951004586, 0.4971690698936552, 0.4970544559954652, 0.5061498385504835, 0.48636498460365307, 0.4792261356454657, 0.4658558614588433, 0.48015816195010197, 0.4521673936901186, 0.4497570076583635], "accuracy": [0.34500065445899963, 0.47972527146339417, 0.6192048788070679, 0.6610751748085022, 0.6820763349533081, 0.6979262828826904, 0.7289658188819885, 0.7362303733825684, 0.7434949278831482, 0.7404569983482361, 0.7540615797042847, 0.7745344042778015, 0.7651565074920654, 0.7671377658843994, 0.7703077793121338, 0.7907806038856506, 0.7873464822769165, 0.7881389260292053, 0.7835160493850708, 0.8017435073852539, 0.7998943328857422, 0.8112534880638123, 0.81112140417099, 0.8101968169212341, 0.8191784620285034, 0.8208954930305481, 0.8247259259223938, 0.8197067975997925, 0.832650899887085, 0.830669641494751], "val_loss": [1.6517060824802943, 0.8983102696282523, 0.7262828860964093, 0.66870835849217, 0.6121354954583305, 0.6178007296153477, 0.562708854675293, 0.5449876955577305, 0.5331348351069859, 0.5365300008228847, 0.4920178140912737, 0.4961144072668893, 0.48160145963941303, 0.5080521277018956, 0.4668007067271641, 0.4605095897402082, 0.4489187002182007, 0.49764510563441683, 0.44076129368373324, 0.43195383889334543, 0.4324833495276315, 0.44342860153743197, 0.4625523941857474, 0.45669400691986084, 0.4068367140633719, 0.4260298098836626, 0.4676165921347482, 0.395807147026062, 0.40563286202294485, 0.4612349271774292], "val_accuracy": [0.40833333134651184, 0.593999981880188, 0.7073333263397217, 0.6850000023841858, 0.7043333053588867, 0.7326666712760925, 0.7390000224113464, 0.7463333606719971, 0.7676666378974915, 0.7543333172798157, 0.7766666412353516, 0.7743333578109741, 0.7870000004768372, 0.7799999713897705, 0.7993333339691162, 0.79666668176651, 0.8019999861717224, 0.781333327293396, 0.8080000281333923, 0.8119999766349792, 0.8259999752044678, 0.7923333048820496, 0.7919999957084656, 0.7770000100135803, 0.8289999961853027, 0.8119999766349792, 0.8036666512489319, 0.828000009059906, 0.8236666917800903, 0.7919999957084656]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 1, 0, 0, 2, 5, 3, 6, 2, 5, 6, 2, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 2, 3, 3, 1, 3, 3, 3, 3, 3, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8011428713798523, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.negative(tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, alpha))))), tf.math.add(beta, grad))))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9838551337204715, 1.5004627071178316, 1.0263910770983098, 0.9133469113237932, 0.8183319400944304, 0.7877894793881275, 0.7203203801938083, 0.7003641628538849, 0.6772857815708231, 0.6686088232284901, 0.634959965381388, 0.6252513426154155, 0.6139510256534617, 0.5948106555292525, 0.5979648620508224, 0.5670775582667245, 0.5508668475761358, 0.5435046892061588, 0.5600823854978105, 0.5241626858427824, 0.5280315057555242, 0.49777383484136256, 0.4966708580107028, 0.5116523709185072, 0.4770806868550894, 0.4743253049471312, 0.46022826570561376, 0.47860922301765035, 0.45140045124699396, 0.44553655903998496], "accuracy": [0.34486857056617737, 0.478140264749527, 0.6215823292732239, 0.6572447419166565, 0.6840575933456421, 0.6975300312042236, 0.7281733155250549, 0.7392682433128357, 0.739400327205658, 0.7483819723129272, 0.7609298825263977, 0.7652885913848877, 0.7640998363494873, 0.7718927264213562, 0.7755910754203796, 0.7869502305984497, 0.7893276810646057, 0.7910447716712952, 0.7841764688491821, 0.8017435073852539, 0.7980451583862305, 0.8125742673873901, 0.8109893202781677, 0.8061022162437439, 0.8231409192085266, 0.8220842480659485, 0.8272355198860168, 0.8198388814926147, 0.8317263126373291, 0.8318583965301514], "val_loss": [1.6516872474125452, 0.8982310976300921, 0.7593236480440412, 0.6540548801422119, 0.5994127307619367, 0.5729637656893048, 0.6130797863006592, 0.6090064559664045, 0.614189624786377, 0.5170938628060477, 0.49345806666782926, 0.48774709020342144, 0.5056799309594291, 0.4942096301487514, 0.46363699436187744, 0.46132842132023405, 0.4484703370503017, 0.5002897296633039, 0.43573178563799175, 0.4417488234383719, 0.438383868762425, 0.43254137890679495, 0.4781813451222011, 0.43671933242252897, 0.402338445186615, 0.43061006920678274, 0.452433705329895, 0.3987986615725926, 0.4024542399815151, 0.4337919865335737], "val_accuracy": [0.40799999237060547, 0.5933333039283752, 0.6729999780654907, 0.6926666498184204, 0.7306666374206543, 0.7400000095367432, 0.7076666951179504, 0.7036666870117188, 0.7233333587646484, 0.7716666460037231, 0.7786666750907898, 0.7826666831970215, 0.7766666412353516, 0.7900000214576721, 0.7973333597183228, 0.7946666479110718, 0.7986666560173035, 0.781000018119812, 0.812333345413208, 0.8080000281333923, 0.8213333487510681, 0.7983333468437195, 0.7806666493415833, 0.7956666946411133, 0.8323333263397217, 0.8059999942779541, 0.8100000023841858, 0.8230000138282776, 0.8236666917800903, 0.8033333420753479]}}, {"genotype": [[0], [1, 1, 1], [0, 0, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 1, 6, 0, 2, 4, 3, 8, 2, 5, 6, 2, 6, 8, 6, 4, 1, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 2, 1, 3, 3, 3, 2, 1, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.7911428809165955, "mapping_values": [1, 2, 2, 2, 0, 1, 38, 38, 23, 15, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.subtract(alpha, tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(grad)), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(grad, tf.math.square(tf.math.add(beta, beta)))))), alpha)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.pow(tf.math.subtract(tf.math.add(beta, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), tf.math.square(grad)), tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad)))))))))))), tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha)))), tf.math.add(beta, beta)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.032357600953648, 1.5577743830477415, 1.0580854076420265, 0.8944212874133652, 0.844667807703619, 0.7488987512041186, 0.7625997693562914, 0.712618469656608, 0.6715545685315538, 0.7104429877854578, 0.63479346824974, 0.6544539886631938, 0.6222087497551207, 0.5871666511130796, 0.6107801028277975, 0.5915123794324771, 0.5714396345081614, 0.5575068694347592, 0.5536639459569929, 0.5308661699893373, 0.5449128884995823, 0.5386219916011773, 0.4979027588101993, 0.5018298865907684], "accuracy": [0.31739532947540283, 0.46704530715942383, 0.6194690465927124, 0.6656980514526367, 0.6824725866317749, 0.7066437602043152, 0.7041342258453369, 0.7239466309547424, 0.7465327978134155, 0.722229540348053, 0.7598732113838196, 0.7473253011703491, 0.7578919529914856, 0.7810064554214478, 0.7646281719207764, 0.7733456492424011, 0.7829877138137817, 0.793422281742096, 0.7890635132789612, 0.8001585006713867, 0.7902522683143616, 0.7948752045631409, 0.8144234418869019, 0.8096684813499451], "val_loss": [1.6449281147548132, 0.8203616142272949, 0.7476325375693185, 0.6371674026761737, 0.5900402409689767, 0.6013063022068569, 0.6301471846444267, 0.5311542238507952, 0.5242044925689697, 0.5185532740184239, 0.5373524938310895, 0.49264771597726004, 0.4776106561933245, 0.5070665734154838, 0.4794194187436785, 0.4697864055633545, 0.49091642243521555, 0.4442012139729091, 0.44888700757707867, 0.44825543676103863, 0.4397745813642229, 0.4303408009665353, 0.4359247258731297, 0.421589195728302], "val_accuracy": [0.3700000047683716, 0.6973333358764648, 0.6476666927337646, 0.7103333473205566, 0.7263333201408386, 0.7146666646003723, 0.7110000252723694, 0.7536666393280029, 0.762666642665863, 0.7606666684150696, 0.7480000257492065, 0.7760000228881836, 0.7853333353996277, 0.7630000114440918, 0.781333327293396, 0.7866666913032532, 0.765666663646698, 0.8083333373069763, 0.812333345413208, 0.7986666560173035, 0.8050000071525574, 0.8056666851043701, 0.8016666769981384, 0.8103333115577698]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 1, 0, 0, 2, 5, 3, 1, 2, 5, 6, 2, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 3, 2, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.7908571362495422, "mapping_values": [1, 1, 1, 0, 1, 0, 20, 20, 12, 8, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.negative(tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), alpha))), tf.math.add(beta, grad))))), tf.math.multiply(tf.math.subtract(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.divide_no_nan(grad, tf.math.add(beta, grad))))), beta), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0318398467459304, 1.5556331025673933, 1.0557161212014705, 0.901962729862983, 0.8387054584880058, 0.753143845886492, 0.7412019867970093, 0.7160872064797539, 0.678867054960243, 0.6794098903080728, 0.6421164504336391, 0.6635456233685278, 0.6154702565279839, 0.5865693244762771, 0.5922454870246294, 0.5916547860924153, 0.5588819097140525, 0.5568939995583038, 0.5536269280400652, 0.5323052851279272, 0.5410398029222968, 0.5290317243636009, 0.5094323831227445, 0.5070279504581764], "accuracy": [0.31765949726104736, 0.469819039106369, 0.6221106648445129, 0.657508909702301, 0.6811517477035522, 0.7106062769889832, 0.7154933214187622, 0.7250033020973206, 0.7446836829185486, 0.7353057861328125, 0.7568352818489075, 0.7432307600975037, 0.7646281719207764, 0.7815347909927368, 0.7724210619926453, 0.7724210619926453, 0.7890635132789612, 0.7924976944923401, 0.7877426743507385, 0.798309326171875, 0.7930260300636292, 0.7992339134216309, 0.8105930685997009, 0.8062343001365662], "val_loss": [1.6425812244415283, 0.8195056063788277, 0.7303020443235125, 0.6247667244502476, 0.5904142686298915, 0.584048935345241, 0.5916695083890643, 0.5466841288975307, 0.5393177100590297, 0.5376333168574742, 0.5167184046336583, 0.49256956577301025, 0.47981745856148855, 0.5103920357567924, 0.4889012745448521, 0.4659932851791382, 0.486271824155535, 0.4396937234061105, 0.44517714636666433, 0.4489844867161342, 0.4455090079988752, 0.43252984966550556, 0.4787351063319615, 0.4285134843417576], "val_accuracy": [0.3720000088214874, 0.7009999752044678, 0.6570000052452087, 0.7013333439826965, 0.7276666760444641, 0.7126666903495789, 0.7429999709129333, 0.7519999742507935, 0.7476666569709778, 0.7563333511352539, 0.7646666765213013, 0.7786666750907898, 0.7860000133514404, 0.762666642665863, 0.7730000019073486, 0.7873333096504211, 0.7633333206176758, 0.8096666932106018, 0.8109999895095825, 0.8023333549499512, 0.8106666803359985, 0.8069999814033508, 0.7703333497047424, 0.8069999814033508]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 5, 0, 0, 2, 5, 3, 6, 2, 5, 6, 2, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 2, 3, 2, 3, 3, 1, 3, 3, 3, 3, 3, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 8, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.22142857313156128, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.0925225787048785, 2.4166729902122093, 2.3629674468105337, 2.377171083133392, 2.3550648716352303, 2.347041729277214, 2.3146158601188733], "accuracy": [0.1784440577030182, 0.1516312211751938, 0.16140536963939667, 0.11808215826749802, 0.109232597053051, 0.10077928751707077, 0.09628847241401672], "val_loss": [2.30897011075701, 1.6926702090672083, 2.016890730176653, 1.956460748400007, 1.9761546679905482, 1.989520686013358, 1.99981689453125], "val_accuracy": [0.09799999743700027, 0.3633333444595337, 0.10999999940395355, 0.13199999928474426, 0.09833333641290665, 0.09799999743700027, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 1, 2, 8, 2, 5, 3, 6, 2, 5, 6, 8, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 2, 3, 2, 3, 3, 1, 3, 3, 3, 3, 3, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 22, 22, 13, 9, 0, 1, 1, 1, 0, 1, 4, 2, 2, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(beta, grad)))), beta)), tf.math.add(beta, tf.math.square(tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.math.add(beta, grad), grad)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, alpha))))), grad)), tf.math.add(beta, grad))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(sigma))", "other_info": {"loss": [74036894.25897484, 1378290072.3286223, 6557777560.362435, 17820882486.03355, 38587855882.95549, 71508876597.86449], "accuracy": [0.09496764093637466, 0.1006472036242485, 0.1026284471154213, 0.10513802617788315, 0.10342095047235489, 0.09879804402589798], "val_loss": [276060818.28571427, 2206784877.714286, 7445998445.714286, 17647493705.142857, 34465285266.28571, 59552563200.0], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1], [0, 0, 1], [1, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [9, 0, 1, 4, 0, 2, 6, 3, 6, 1, 5, 0, 4, 6, 8, 6, 4, 8, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 2, 3, 3, 1, 3, 3, 3, 3, 3, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [4, 1], [52], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [3, 7, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 10, 6, 4, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(sigma)), tf.math.divide_no_nan(tf.math.add(sigma, beta), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1], [0, 0, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [57, 80, 61], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 0, 1, 6, 0, 2, 4, 3, 8, 2, 5, 6, 4, 6, 8, 6, 4, 1, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 3, 1, 3, 3, 1, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [9, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 39, 39, 24, 15, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1], "tree_depth": 55, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, grad)), tf.math.subtract(alpha, tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(grad)), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(grad, tf.math.square(tf.math.add(beta, grad))))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(alpha)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.subtract(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))))))))))), tf.math.add(beta, alpha)))), tf.math.add(beta, grad))), tf.math.add(beta, grad)))), tf.math.add(beta, beta)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302534064502134, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [9, 0, 1, 4, 0, 2, 6, 3, 6, 1, 5, 0, 4, 6, 8, 6, 4, 8, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 3, 2, 3, 1, 3, 3, 3, 3, 1, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.302534064502134, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1], [0, 0, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [8, 0, 1, 4, 0, 3, 4, 3, 8, 2, 5, 6, 2, 6, 8, 6, 4, 1, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 3, 3, 2, 1, 3, 2, 3, 2, 1, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [2, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 22, 22, 13, 9, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.pow(grad, grad)), grad)))), tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.square(tf.math.divide_no_nan(tf.math.add(beta, grad), beta)))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), grad)))), tf.math.add(beta, beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 5, 1, 5, 0, 2, 4, 3, 6, 2, 5, 6, 2, 6, 8, 6, 4, 1, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 2, 3, 3, 1, 3, 3, 3, 3, 3, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [4, 1], [52], [1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(grad), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [304966211.2014527, 5680151590.547088, 27029757817.829086, 73458733034.90054, 159067242074.01083, 294782368484.9156], "accuracy": [0.09496764093637466, 0.1006472036242485, 0.1026284471154213, 0.10513802617788315, 0.10342095047235489, 0.09879804402589798], "val_loss": [1137466148.5714285, 9095395620.571428, 30692058258.285713, 72746074112.0, 142075400777.14285, 245497743652.57144], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [9, 0, 1, 4, 0, 2, 6, 3, 6, 1, 5, 0, 4, 6, 8, 6, 4, 8, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 2, 3, 1, 3, 3, 3, 3, 1, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [1, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 3, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07977809756994247, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 1, 0, 0, 2, 5, 3, 6, 2, 5, 6, 2, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 2, 2, 3, 3, 1, 3, 3, 3, 3, 3, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [3, 8, 2, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 16, 9, 7, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(tf.math.add(tf.math.sqrt(sigma), tf.math.divide_no_nan(tf.math.add(sigma, beta), tf.math.pow(tf.math.square(alpha), tf.math.divide_no_nan(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))))), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 0, 1, 0, 0, 1, 5, 3, 6, 2, 5, 6, 2, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 2, 3, 3, 1, 3, 3, 3, 3, 3, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 6, 9, 8, 6, 7, 4, 5, 6], [3, 3, 0, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.07485714554786682, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, alpha))))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.divide_no_nan(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302272919886746, 2.299548536228104, 2.3003397797234477, 2.3000784171901407, 2.300094606066739, 2.301056363059545, 2.3016881113590233, 2.3006968560267307], "accuracy": [0.09430722147226334, 0.10130762308835983, 0.09866596013307571, 0.09589222073554993, 0.09826971590518951, 0.09285431355237961, 0.0874389111995697, 0.09087307006120682], "val_loss": [1.969629900796073, 1.9698139599391393, 1.9696640968322754, 1.9705991063799178, 1.9714931079319544, 1.9718333653041296, 1.97197539465768, 1.9720709664481026], "val_accuracy": [0.05999999865889549, 0.0689999982714653, 0.0806666687130928, 0.07400000095367432, 0.06733333319425583, 0.070333331823349, 0.06199999898672104, 0.06666667014360428]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 1, 0, 0, 2, 5, 3, 6, 2, 5, 6, 2, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 1, 3, 2, 3, 3, 1, 3, 3, 3, 3, 3, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [1, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.subtract(alpha, tf.math.negative(tf.math.negative(grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303345140638038, 2.301550299185079, 2.3034578598469886, 2.302834647127886, 2.3017502659583657, 2.302582356813577], "accuracy": [0.09140139818191528, 0.09879804402589798, 0.08757099509239197, 0.09074098616838455, 0.09509972482919693, 0.08875974267721176], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 1, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 1, 4, 0, 2, 4, 3, 6, 2, 5, 6, 6, 6, 8, 6, 4, 1, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [31, 9, 76, 58]], "fitness": -0.03342857211828232, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(sigma))", "other_info": {"loss": [2.3038301149206295, 2.303472115048454, 2.30754444246767, 2.309182549952642, 2.3103275777106083, 2.31503606658208], "accuracy": [0.09021265059709549, 0.09576013684272766, 0.08228767663240433, 0.08070268481969833, 0.08387266844511032, 0.07977809756994247], "val_loss": [1.9722371101379395, 1.9735582215445382, 1.9752006530761719, 1.9772300039018904, 1.979356016431536, 1.981912272317069], "val_accuracy": [0.028333334252238274, 0.02266666665673256, 0.020999999716877937, 0.01733333244919777, 0.01899999938905239, 0.022333333268761635]}}, {"genotype": [[0], [1, 1, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 1, 0, 3, 2, 5, 3, 6, 2, 5, 6, 2, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 3, 2, 3, 3, 1, 3, 3, 3, 3, 3, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 3, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.03342857211828232, "mapping_values": [1, 2, 2, 1, 1, 0, 21, 21, 12, 9, 1, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad))), tf.math.add(beta, beta)))), tf.math.add(beta, tf.math.square(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.divide_no_nan(grad, tf.math.add(beta, grad)))), alpha)), tf.math.add(beta, grad)), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(sigma))", "other_info": {"loss": [2.303830209393716, 2.30347204759467, 2.3075478612912126, 2.3091864456133426, 2.3103282347394334, 2.3150414554528935], "accuracy": [0.09021265059709549, 0.09589222073554993, 0.0820235088467598, 0.08070268481969833, 0.08387266844511032, 0.07977809756994247], "val_loss": [1.9722371101379395, 1.9735583577837263, 1.9752058301653181, 1.9772344316755022, 1.9793628283909388, 1.9819117273603166], "val_accuracy": [0.028333334252238274, 0.02266666665673256, 0.020999999716877937, 0.01733333244919777, 0.01899999938905239, 0.022333333268761635]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [9, 0, 1, 4, 0, 2, 6, 3, 6, 1, 5, 0, 4, 6, 8, 6, 4, 8, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 2, 3, 3, 1, 3, 3, 3, 3, 3, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [7, 1], [52], [0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [3, 9, 76, 58]], "fitness": -0.03342857211828232, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(sigma), sigma)", "other_info": {"loss": [2.3038301464116584, 2.303472151011209, 2.307545926923277, 2.3091873317394023, 2.3103336687054004, 2.315048356270982], "accuracy": [0.09021265059709549, 0.09576013684272766, 0.0820235088467598, 0.08070268481969833, 0.08387266844511032, 0.07991018146276474], "val_loss": [1.9722371101379395, 1.9735586983816964, 1.9752039909362793, 1.9772348403930664, 1.9793657575334822, 1.9819229670933314], "val_accuracy": [0.028333334252238274, 0.02266666665673256, 0.020999999716877937, 0.01733333244919777, 0.01899999938905239, 0.02266666665673256]}}]