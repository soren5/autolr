[{"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 2, 9, 2, 3, 2, 5, 1, 9, 9, 9], [2, 1, 3, 3, 0, 3, 4], [70, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [38, 9]], "fitness": -0.7997142672538757, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 10, 4, 3, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(beta, tf.math.add(beta, tf.math.add(alpha, tf.math.square(tf.math.subtract(grad, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.215465879963059, 1.672566201377932, 1.2339834216216992, 1.0394336219634426, 0.9136626375522974, 0.8752219718854504, 0.8272673308872953, 0.7854315729629976, 0.7806918922826016, 0.7569286682822717, 0.7211894997437522, 0.7083959956415389, 0.7016242374329598, 0.6953390102896, 0.6732477701933723, 0.6563078356126139, 0.635428869351105, 0.6379571642464399, 0.64378202448841, 0.633613345676866, 0.6239404519787396, 0.6227737766577505, 0.6060252789225419, 0.6131628191056993, 0.5855572407098573, 0.5836421603917792, 0.5736542715215097, 0.596699914416113, 0.5692922709372695, 0.5659401732948494, 0.5643617259339728, 0.5603166221706324, 0.5481998771960473, 0.5388098145520068, 0.5621834467068608, 0.543740110610848, 0.5314613324288033, 0.5304824525905937, 0.530277309384974, 0.5354448728604859, 0.5240182680791442, 0.520498858466833], "accuracy": [0.2518821954727173, 0.4768194556236267, 0.5629374980926514, 0.6267336010932922, 0.6745476126670837, 0.6775855422019958, 0.6975300312042236, 0.7106062769889832, 0.713379979133606, 0.7147008180618286, 0.7351737022399902, 0.7323999404907227, 0.7382115721702576, 0.7359662055969238, 0.746268630027771, 0.7508915662765503, 0.7600052952766418, 0.7582882046699524, 0.7557786107063293, 0.7577598690986633, 0.7658169269561768, 0.7652885913848877, 0.7734777331352234, 0.7692511081695557, 0.7795535326004028, 0.7808743715286255, 0.78113853931427, 0.7750627398490906, 0.7901201844215393, 0.789459764957428, 0.7835160493850708, 0.7874785661697388, 0.7952714562416077, 0.7975168228149414, 0.7923656105995178, 0.7924976944923401, 0.8062343001365662, 0.7977809906005859, 0.8025360107421875, 0.7985734939575195, 0.806630551815033, 0.8061022162437439], "val_loss": [1.6790402957371302, 0.9727527754647392, 0.8007198401859829, 0.7116796629769462, 0.6509114844458443, 0.6710153647831508, 0.6006003788539341, 0.5820509706224714, 0.5659326825823102, 0.5457993234906878, 0.5342817647116525, 0.5451235771179199, 0.5393544605800084, 0.5530927692140851, 0.5041977337428502, 0.5278871740613665, 0.5086640630449567, 0.5309434277670724, 0.4904062237058367, 0.517995936529977, 0.482050963810512, 0.4837047372545515, 0.49611583777836393, 0.4878461020333426, 0.4768246241978237, 0.4660525321960449, 0.5123375483921596, 0.458219051361084, 0.4659474917820522, 0.4521946225847517, 0.4614646775381906, 0.4468393325805664, 0.45024440969739643, 0.4546102115086147, 0.458438583782741, 0.4476754495075771, 0.4396911689213344, 0.4328574538230896, 0.4480821575437273, 0.4442042963845389, 0.4521702698298863, 0.4333401918411255], "val_accuracy": [0.5519999861717224, 0.6276666522026062, 0.6763333082199097, 0.6976666450500488, 0.7146666646003723, 0.6940000057220459, 0.734000027179718, 0.7406666874885559, 0.7463333606719971, 0.7593333125114441, 0.7590000033378601, 0.7516666650772095, 0.7609999775886536, 0.7356666922569275, 0.7793333530426025, 0.7566666603088379, 0.7583333253860474, 0.749666690826416, 0.7796666622161865, 0.7596666812896729, 0.7826666831970215, 0.781000018119812, 0.765333354473114, 0.7793333530426025, 0.7866666913032532, 0.7979999780654907, 0.7580000162124634, 0.8053333163261414, 0.7950000166893005, 0.8023333549499512, 0.8033333420753479, 0.8066666722297668, 0.8050000071525574, 0.7996666431427002, 0.7926666736602783, 0.8080000281333923, 0.8159999847412109, 0.812333345413208, 0.8050000071525574, 0.8063333630561829, 0.8043333292007446, 0.8069999814033508]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0], [3, 4, 4, 2, 3, 2, 5, 1, 9, 9], [2, 2, 1, 3, 0, 3, 4], [60, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [36, 9]], "fitness": -0.7874285578727722, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 10, 6, 3, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(beta, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), alpha)), tf.math.add(beta, tf.math.add(grad, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.2492568429907345, 1.9733409911350819, 1.4517109303064413, 1.1640771658917177, 1.0261133337112198, 0.9396982328089678, 0.8862766075238198, 0.8601548283201844, 0.8270765809949205, 0.8221451204450706, 0.7715015882325289, 0.7578251033631677, 0.7379344243257588, 0.7371860067873678, 0.7170614443041345, 0.6966468415255906, 0.6739404305585418, 0.6832409388888955, 0.6808104216304548, 0.6737273393872707, 0.662211395698752, 0.6610991503143386, 0.6373160161504089, 0.6415512534873266, 0.6220303112174762, 0.6225091319955839, 0.6088015206218191, 0.629701217522065, 0.6078923378779888, 0.5999922869605726, 0.6045419974664671, 0.5976462860495392, 0.5890171417565221, 0.5740318847228476, 0.5983843415278831, 0.5799405998116739, 0.5677930300009958, 0.5667024069867822, 0.565765985589474, 0.5702036774594629, 0.5626414241713303, 0.5584883158705443], "accuracy": [0.2110685557126999, 0.4119667112827301, 0.531369686126709, 0.589750349521637, 0.6392814517021179, 0.6609430909156799, 0.6789063811302185, 0.6897371411323547, 0.698190450668335, 0.6977941989898682, 0.7180029153823853, 0.7197200059890747, 0.7290979027748108, 0.7235503792762756, 0.7316074371337891, 0.737022876739502, 0.7511557340621948, 0.7437590956687927, 0.7466648817062378, 0.7420420050621033, 0.750759482383728, 0.7536653280258179, 0.7658169269561768, 0.7607977986335754, 0.7651565074920654, 0.7712323069572449, 0.7724210619926453, 0.7677981853485107, 0.7829877138137817, 0.7769119143486023, 0.7688548564910889, 0.7759873270988464, 0.7814027070999146, 0.7817989587783813, 0.7749306559562683, 0.7784969210624695, 0.7932901978492737, 0.7866860628128052, 0.7882710099220276, 0.7853652238845825, 0.7913089394569397, 0.7898560166358948], "val_loss": [1.8211768014090401, 1.3428152629307337, 0.9121724878038678, 0.7883964436394828, 0.7016139371054513, 0.6649068423679897, 0.6407761573791504, 0.6119343553270612, 0.5993908473423549, 0.5727701016834804, 0.5655508892876762, 0.5589696509497506, 0.5608546563557216, 0.5670734643936157, 0.5290946960449219, 0.5388272149222237, 0.5249572651726859, 0.5531078236443656, 0.5062370300292969, 0.5428742170333862, 0.5003824063709804, 0.4996814387185233, 0.5088730028697422, 0.5093634639467511, 0.4961749826158796, 0.4834084851401193, 0.5211509977068219, 0.48039424419403076, 0.47675158296312603, 0.4738440683909825, 0.4739906106676374, 0.46730259486607145, 0.4643651417323521, 0.4673257214682443, 0.4791891234261649, 0.4622750622885568, 0.4563436508178711, 0.45212682655879427, 0.4600614479609898, 0.45794384820120676, 0.46794036456516813, 0.4467867272240775], "val_accuracy": [0.4699999988079071, 0.5846666693687439, 0.6726666688919067, 0.6790000200271606, 0.7110000252723694, 0.718999981880188, 0.734333336353302, 0.7306666374206543, 0.7363333106040955, 0.749666690826416, 0.746666669845581, 0.75, 0.7509999871253967, 0.737666666507721, 0.7590000033378601, 0.7513333559036255, 0.7543333172798157, 0.7360000014305115, 0.7733333110809326, 0.746999979019165, 0.7793333530426025, 0.7726666927337646, 0.7663333415985107, 0.7639999985694885, 0.7760000228881836, 0.784333348274231, 0.7580000162124634, 0.7919999957084656, 0.7910000085830688, 0.793666660785675, 0.7950000166893005, 0.7943333387374878, 0.7993333339691162, 0.796999990940094, 0.7896666526794434, 0.8016666769981384, 0.8069999814033508, 0.8050000071525574, 0.8059999942779541, 0.8059999942779541, 0.800000011920929, 0.8046666383743286]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [9, 6, 9, 8, 3, 2, 4, 4, 9, 9], [4, 2, 3, 3, 0, 3, 4], [60, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [3, 0, 2, 2], [35, 9]], "fitness": -0.7828571200370789, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.2599363674687325, 2.073833472960818, 1.6490954156281563, 1.2865359784589703, 1.1095849221266965, 0.9988849688089597, 0.9388272607047812, 0.8971566591815799, 0.8571923690984719, 0.8474942236418391, 0.8072379027076165, 0.7867831643766746, 0.764465713545064, 0.7631327605455338, 0.7435237676979859, 0.7256918024188571, 0.7006239431519409, 0.7113538896324234, 0.7046184959885247, 0.698257326686135, 0.6851885999985784, 0.6840927244224695, 0.6572603350617173, 0.6603733318561513, 0.6435387634078447, 0.6457062197903034, 0.6329212511818658, 0.6538253129748872, 0.6307694960059333, 0.6204330040447747, 0.6213673295960246, 0.6183838228570976, 0.610325101887498, 0.5960991968174557, 0.6188533660789538, 0.5996231997427199, 0.5870455356794279, 0.5865402277497536, 0.5869501448893166, 0.5899645112855417, 0.5832064914082996, 0.5778507714525993], "accuracy": [0.19191652536392212, 0.3789459764957428, 0.4881785809993744, 0.5596354603767395, 0.6126006841659546, 0.6428477168083191, 0.6647734642028809, 0.6798309087753296, 0.6911900639533997, 0.6884163022041321, 0.707040011882782, 0.71100252866745, 0.7199841737747192, 0.7165499925613403, 0.724739134311676, 0.7316074371337891, 0.7412495017051697, 0.7375511527061462, 0.7407211661338806, 0.7362303733825684, 0.7454761862754822, 0.7481178045272827, 0.7594769597053528, 0.7540615797042847, 0.7577598690986633, 0.7656848430633545, 0.763967752456665, 0.7584202885627747, 0.7757231593132019, 0.7720248103141785, 0.7648923397064209, 0.7733456492424011, 0.774798572063446, 0.7758552432060242, 0.7693831920623779, 0.774270236492157, 0.7829877138137817, 0.7779685854911804, 0.7821952104568481, 0.778232753276825, 0.7825914621353149, 0.7845727205276489], "val_loss": [1.8590037482125419, 1.5423076152801514, 1.0711194787706648, 0.8585430724280221, 0.7549764939716884, 0.6924092258725848, 0.6605899504252842, 0.6301952259881156, 0.6145132950374058, 0.5927578551428658, 0.580878666469029, 0.5722158295767648, 0.5731038876942226, 0.5789746216365269, 0.5412351574216571, 0.551791957446507, 0.5349213395799909, 0.5624149015971592, 0.5236747946058001, 0.5438881431307111, 0.5110843522208077, 0.5096837622778756, 0.5162001507622855, 0.5111757857458932, 0.5050476619175502, 0.49301416533333914, 0.5427634205136981, 0.4914899894169399, 0.484821081161499, 0.4808851310185024, 0.4815034866333008, 0.4806760719844273, 0.4741905927658081, 0.4770663465772356, 0.48487872736794607, 0.46786086899893625, 0.467105541910444, 0.462571382522583, 0.4684581926890782, 0.4652423688343593, 0.4732450076511928, 0.4573403596878052], "val_accuracy": [0.445333331823349, 0.5683333277702332, 0.6489999890327454, 0.6850000023841858, 0.6986666917800903, 0.7163333296775818, 0.7283333539962769, 0.7289999723434448, 0.7379999756813049, 0.7446666955947876, 0.7463333606719971, 0.7473333477973938, 0.7459999918937683, 0.737666666507721, 0.7540000081062317, 0.7443333268165588, 0.765333354473114, 0.7310000061988831, 0.7606666684150696, 0.75, 0.7749999761581421, 0.7720000147819519, 0.7716666460037231, 0.7673333287239075, 0.7753333449363708, 0.7816666960716248, 0.7446666955947876, 0.7829999923706055, 0.7829999923706055, 0.7860000133514404, 0.7903333306312561, 0.7856666445732117, 0.7916666865348816, 0.7879999876022339, 0.7839999794960022, 0.796999990940094, 0.8026666641235352, 0.79666668176651, 0.8003333210945129, 0.8013333082199097, 0.7919999957084656, 0.7990000247955322]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0], [5, 2, 9, 2, 3, 2, 4, 1, 9, 9], [2, 2, 1, 3, 0, 3, 4], [60, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [38, 9]], "fitness": -0.7785714268684387, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 1, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.215464413583302, 1.6725703350793195, 1.234243696013997, 1.0392150848359951, 0.9115094161855546, 0.8717105064992309, 0.8238302076402956, 0.8213352029270988, 0.7692113627201499, 0.7671893548184476, 0.7189302647417688, 0.7113831229906481, 0.6925945128936022, 0.698761305229901, 0.6710478327513969, 0.6552339433647496, 0.6363357496362368, 0.6385650275531713, 0.642171572031299, 0.6330612468886385], "accuracy": [0.2518821954727173, 0.47708359360694885, 0.5635979175567627, 0.6259410977363586, 0.6765288710594177, 0.6807554960250854, 0.6950204968452454, 0.6963412761688232, 0.7129837274551392, 0.7123233675956726, 0.7354378700256348, 0.7342491149902344, 0.741909921169281, 0.7343811988830566, 0.746268630027771, 0.7506273984909058, 0.7604015469551086, 0.7593448758125305, 0.7580240368843079, 0.7574957013130188], "val_loss": [1.6790375028337752, 0.9725573744092669, 0.80202659538814, 0.7099346944264003, 0.6470658949443272, 0.6463532107216972, 0.6471050807407924, 0.5807138170514788, 0.5894007342202323, 0.5435363905770438, 0.5398701769965035, 0.5377967187336513, 0.5389196872711182, 0.5455177000590733, 0.5075049911226545, 0.5342954056603568, 0.5020239353179932, 0.5149751731327602, 0.491638115474156, 0.5292779718126569], "val_accuracy": [0.5523333549499512, 0.628333330154419, 0.6763333082199097, 0.7003333568572998, 0.7176666855812073, 0.7036666870117188, 0.7200000286102295, 0.7446666955947876, 0.7310000061988831, 0.7566666603088379, 0.7556666731834412, 0.7573333382606506, 0.7573333382606506, 0.750333309173584, 0.7766666412353516, 0.7536666393280029, 0.7743333578109741, 0.7673333287239075, 0.7736666798591614, 0.753000020980835]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1], [3, 2, 9, 2, 0, 2, 5, 1, 9, 9, 9], [2, 2, 3, 2, 0, 3, 4], [60, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [2, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [75, 9]], "fitness": -0.23000000417232513, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 1, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(beta)), tf.math.add(beta, beta)))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.9369308305784947, 2.8190103135860323, 3.2932048672776983, 7.988398742020768, 44.59534000471803, 346.15530852203307], "accuracy": [0.1900673657655716, 0.11517632752656937, 0.10394927859306335, 0.09998679161071777, 0.10236428678035736, 0.1022322028875351], "val_loss": [2.0972843170166016, 2.4975550515311107, 4.018101419721331, 15.591329847063337, 108.42345319475446, 857.7984793526786], "val_accuracy": [0.2593333423137665, 0.09666666388511658, 0.09866666793823242, 0.09866666793823242, 0.10133333504199982, 0.11500000208616257]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [3, 4, 4, 2, 2, 2, 5, 1, 9, 9], [2, 2, 1, 3, 0, 3, 4], [60, 47, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [75, 9]], "fitness": -0.14971429109573364, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 10, 6, 3, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(beta, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.add(tf.math.add(beta, tf.math.add(alpha, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.math.subtract(tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.8043558661491486, 2.4124172844544787, 2.3050087490857725, 2.3031834366614117, 2.303200273088035, 2.3024701938621592], "accuracy": [0.1912561058998108, 0.15110288560390472, 0.09655263274908066, 0.09932637959718704, 0.09655263274908066, 0.10394927859306335], "val_loss": [1.967212472643171, 1.9763100487845284, 1.9740001133510046, 1.9736982073102678, 1.9735266821725028, 1.9720608847481864], "val_accuracy": [0.17399999499320984, 0.10133333504199982, 0.09799999743700027, 0.09799999743700027, 0.09666666388511658, 0.14733333885669708]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0], [7, 6, 9, 2, 3, 2, 4, 4, 9, 9], [0, 2, 3, 3, 0, 3, 4], [36, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [35, 9]], "fitness": -0.11028571426868439, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 3, 2, 1, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302334973588832, 2.3007781197287547, 2.301169553563233, 2.3012768232496486, 2.3017250918409906, 2.3021623043100106, 2.3023794856856856, 2.302520569651559, 2.302583213810435, 2.302581683409417, 2.302588197580654], "accuracy": [0.08915598690509796, 0.09325055778026581, 0.1006472036242485, 0.10500594228506088, 0.10038304328918457, 0.10394927859306335, 0.10527011007070541, 0.10117553919553757, 0.10130762308835983, 0.1010434553027153, 0.09985470771789551], "val_loss": [1.9705910001482283, 1.97145448412214, 1.9725285257611955, 1.97304105758667, 1.9734010015215193, 1.9735864230564661, 1.9736350604466029, 1.973644460950579, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.07466666400432587, 0.09600000083446503, 0.09300000220537186, 0.0833333358168602, 0.10599999874830246, 0.11433333158493042, 0.10599999874830246, 0.1003333330154419, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [7, 5, 9, 2, 3, 2, 4, 4, 9, 9], [2, 2, 3, 3, 0, 3, 4], [36, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 0, 2, 2], [35, 9]], "fitness": -0.11028571426868439, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 1, 1, 1, 0, 1, 0, 3, 2, 1, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302334973588832, 2.3007781197287547, 2.301169553563233, 2.3012768232496486, 2.3017250918409906, 2.3021623043100106, 2.3023794856856856, 2.302520569651559, 2.302583213810435, 2.302581683409417, 2.302588197580654], "accuracy": [0.08915598690509796, 0.09325055778026581, 0.1006472036242485, 0.10500594228506088, 0.10038304328918457, 0.10394927859306335, 0.10527011007070541, 0.10117553919553757, 0.10130762308835983, 0.1010434553027153, 0.09985470771789551], "val_loss": [1.9705910001482283, 1.97145448412214, 1.9725285257611955, 1.97304105758667, 1.9734010015215193, 1.9735864230564661, 1.9736350604466029, 1.973644460950579, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.07466666400432587, 0.09600000083446503, 0.09300000220537186, 0.0833333358168602, 0.10599999874830246, 0.11433333158493042, 0.10599999874830246, 0.1003333330154419, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0], [3, 2, 9, 2, 3, 2, 4, 1, 9, 9], [2, 2, 1, 3, 0, 3, 4], [61, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [36, 9]], "fitness": -0.10999999940395355, "mapping_values": [1, 6, 6, 4, 2, 2, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 3, 2, 1, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.square(grad), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(beta, tf.math.add(tf.math.add(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3022287609932715, 2.3007341615276062, 2.301357429828374, 2.3017095073717084, 2.3021295999003724, 2.3024389164055092, 2.3025352937859345, 2.3025706263423644, 2.3025866860112716, 2.3025849225136583], "accuracy": [0.08981640636920929, 0.09351472556591034, 0.09708096832036972, 0.1006472036242485, 0.10460969805717468, 0.10302469879388809, 0.10434553027153015, 0.1010434553027153, 0.1002509593963623, 0.10011887550354004], "val_loss": [1.9706880024501257, 1.9719642230442591, 1.9728861536298479, 1.9733548845563615, 1.973590510232108, 1.9736401694161552, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.07900000363588333, 0.0989999994635582, 0.08266666531562805, 0.10000000149011612, 0.11133333295583725, 0.10499999672174454, 0.1003333330154419, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1], [3, 4, 4, 2, 3, 2, 5, 1, 9, 9, 2, 8, 5, 4, 4], [2, 2, 3, 3, 0, 3, 4, 0, 5], [60, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 0, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [36, 9]], "fitness": -0.10999999940395355, "mapping_values": [1, 1, 1, 0, 1, 0, 24, 24, 15, 9, 4, 1, 1, 0, 1, 0, 3, 3, 0, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, beta), tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.math.multiply(grad, tf.math.add(tf.math.square(grad), tf.math.subtract(tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), grad)), tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3022287609932715, 2.3007341615276062, 2.301357429828374, 2.3017095073717084, 2.3021295999003724, 2.3024389164055092, 2.3025352937859345, 2.3025706263423644, 2.3025866860112716, 2.3025849225136583], "accuracy": [0.08981640636920929, 0.09351472556591034, 0.09708096832036972, 0.1006472036242485, 0.10460969805717468, 0.10302469879388809, 0.10434553027153015, 0.1010434553027153, 0.1002509593963623, 0.10011887550354004], "val_loss": [1.9706880024501257, 1.9719642230442591, 1.9728861536298479, 1.9733548845563615, 1.973590510232108, 1.9736401694161552, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.07900000363588333, 0.0989999994635582, 0.08266666531562805, 0.10000000149011612, 0.11133333295583725, 0.10499999672174454, 0.1003333330154419, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0], [3, 1, 4, 2, 3, 2, 5, 1, 9, 9], [1, 2, 1, 3, 0, 3, 4], [60, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [79, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 7, 7, 3, 4, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(alpha, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), alpha)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.3032242848715367, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 2, 9, 2, 3, 2, 5, 1, 9, 9, 9], [0, 2, 2, 3, 3, 3, 4], [60, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [2, 3, 2, 2], [38, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 10, 4, 4, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.add(beta, tf.math.square(tf.math.subtract(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.363101142036318, 92817960.2131552, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.03790780529379845, 0.0540219247341156, 0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.1168506486075267, 1.5979916678958623e+23, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.011666666716337204, 0.09666666388511658, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 2, 9, 2, 3, 2, 4, 1, 9, 9], [2, 2, 3, 3, 0, 3, 4], [60, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [0, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [38, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 9, 6, 3, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), beta))), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.add(tf.math.pow(grad, tf.math.subtract(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [894107.7547356698, 17100021.9210144, 78169616.18491612, 215712529.44340247, 467176459.48804647, 857946139.0336812], "accuracy": [0.09721305221319199, 0.10117553919553757, 0.10408136248588562, 0.09972262382507324, 0.1006472036242485, 0.09787346422672272], "val_loss": [3349879.0714285714, 26706060.57142857, 90030514.28571428, 213285138.2857143, 416432009.14285713, 719436196.5714285], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [1, 5, 9, 2, 3, 2, 4, 4, 9, 9], [2, 0, 1, 3, 0, 3, 4], [33, 0, 20, 7, 45, 13], [0], [0, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [19, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 10, 4, 4, 1, 1, 1, 0, 1, 3, 1, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.square(tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.pow(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [29.52595467794809, 315.46680780666975, 1212.2251212609174, 3139.5382732269927, 6593.865060242207, 11894.172239388992], "accuracy": [0.09734513610601425, 0.10077928751707077, 0.10447761416435242, 0.09972262382507324, 0.10117553919553757, 0.09774138033390045], "val_loss": [78.4786616734096, 439.54762486049106, 1340.4038783482142, 3043.90576171875, 5812.327985491072, 9906.051060267857], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [7, 5, 9, 2, 3, 2, 4, 4, 9, 9], [2, 2, 3, 3, 0, 3, 4], [36, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [7, 1], [79], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [3, 9, 2, 8, 4, 7, 4, 5, 6], [2, 3, 2, 2], [35, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 10, 6, 4, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(beta), tf.math.pow(tf.math.add(sigma, beta), beta)))", "other_info": {"loss": [2.3032242848715367, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [0, 0, 1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [8, 6, 9, 0, 3, 2, 4, 4, 9, 9], [4, 2, 3, 3, 0, 3, 4], [60, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [7, 9, 9, 8, 4, 7, 4, 5, 6], [3, 3, 2, 2], [35, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08625016361474991, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1], [7, 6, 9, 2, 3, 2, 4, 4, 9, 9], [3, 2, 3, 3, 3, 3, 4], [60, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [36, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 15, 15, 10, 5, 3, 1, 1, 1, 0, 1, 3, 1, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.divide_no_nan(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, grad), beta)), tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.pow(tf.math.pow(grad, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [290439.8078275974, 5538065.971998415, 25295078.96816801, 69777125.61828028, 151088660.89869237, 277430318.1127988], "accuracy": [0.09708096832036972, 0.1010434553027153, 0.10408136248588562, 0.09972262382507324, 0.1006472036242485, 0.09787346422672272], "val_loss": [1086153.3214285714, 8644463.714285715, 29126286.85714286, 68982950.85714285, 134666180.57142857, 232627090.2857143], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 2, 9, 2, 3, 2, 5, 1, 9, 9, 9], [2, 2, 3, 3, 0, 3, 4], [60, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [1, 9, 9, 8, 4, 7, 4, 5, 6], [3, 1, 2, 2], [32, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 9, 5, 3, 1, 1, 1, 0, 1, 3, 1, 2, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), beta))), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(tf.math.square(grad), tf.math.subtract(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, alpha)", "other_info": {"loss": [23316275.78408719, 2.3134752487887513, 2.3056072937168417, 2.303393158505165, 2.3032008822190053, 2.3030064408301425, 2.302943546915917, 2.3029409925526063], "accuracy": [0.09536388516426086, 0.08968432247638702, 0.09589222073554993, 0.09668471664190292, 0.09430722147226334, 0.09747721254825592, 0.0952318087220192, 0.09681680053472519], "val_loss": [1.9871322768075126, 1.9767341613769531, 1.974134853907994, 1.973757266998291, 1.9737503187997, 1.9737443242754256, 1.9736320631844657, 1.973597799028669], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.10566666722297668, 0.10566666722297668, 0.09666666388511658, 0.09833333641290665, 0.09833333641290665, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 4, 3, 6, 3, 2, 5, 1, 2, 9, 7, 1, 4, 8, 3, 3], [2, 2, 1, 3, 0, 2, 4, 0, 2, 3, 2, 5, 2], [60, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [69, 9]], "fitness": -0.09857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 29, 29, 16, 13, 3, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), alpha)), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.multiply(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), beta))), tf.math.add(beta, grad))), beta))))))))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, beta)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [3.470845490587764, 2.3973712455705174, 2.338558688533462, 2.3317595020717934, 2.3407531962056503, 2.3306697296066496, 2.3320585576975588, 2.3340431147121783, 2.3434571359828635, 2.3454568633282458, 2.3417767329915735, 2.344023641798679, 2.360838744996514], "accuracy": [0.1698586642742157, 0.09959053993225098, 0.10738343745470047, 0.10196803510189056, 0.09642054885625839, 0.10342095047235489, 0.09879804402589798, 0.09893012791872025, 0.09879804402589798, 0.09840179979801178, 0.10632677376270294, 0.10091137140989304, 0.09681680053472519], "val_loss": [1.996007033756801, 1.9870647021702357, 1.9895505223955428, 1.9861038752964564, 1.994821548461914, 2.0087564332144603, 2.014052595411028, 1.9879027775355749, 1.9831648554120744, 2.02070529120309, 2.0352750505719865, 2.0252764565604076, 1.9897509983607702], "val_accuracy": [0.09833333641290665, 0.09866666793823242, 0.10066666454076767, 0.09666666388511658, 0.10133333504199982, 0.10066666454076767, 0.09666666388511658, 0.10566666722297668, 0.09799999743700027, 0.10233332961797714, 0.10066666454076767, 0.09799999743700027, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0], [3, 4, 4, 2, 3, 2, 5, 1, 9, 9], [2, 2, 1, 1, 0, 3, 4], [60, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [36, 9]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 10, 6, 3, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), alpha)), tf.math.add(beta, tf.math.add(alpha, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.3031515305178623, 2.3029280886311874, 2.3034050662393786, 2.3022980188350353, 2.3028392810642666, 2.301095425413427], "accuracy": [0.08677849918603897, 0.08572183549404144, 0.09034473448991776, 0.08955223858356476, 0.08796724677085876, 0.09470347315073013], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]