[{"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 8, 7, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 0, 2, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [0], [0, 1, 1], [9], [6, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8019999861717224, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9814396250627422, 1.5336957838808967, 1.0985001988178547, 0.8860672803650034, 0.8142303321749196, 0.7814068305352266, 0.7280454141762058, 0.7002773886941852, 0.6853024757864169, 0.6440598231265101, 0.6432328982722285, 0.6245948667413507, 0.6208797733639808, 0.6074159371460811, 0.6014385144188734, 0.5656188379315306, 0.5788007485805139, 0.5565278305589815, 0.5449046062802784, 0.5217996406958261, 0.5162138348998111, 0.5037042566609184, 0.5080233910505436, 0.512910462641335, 0.48592998684357974, 0.48704625122724443, 0.4736775975059824, 0.45137885678571843, 0.45246444943479935, 0.45646482889898826, 0.43819213952717134, 0.4477492426293889], "accuracy": [0.33364152908325195, 0.486989825963974, 0.6078457236289978, 0.6617355942726135, 0.6914542317390442, 0.700171709060669, 0.7189275026321411, 0.7343811988830566, 0.7290979027748108, 0.759609043598175, 0.7528728246688843, 0.7637035846710205, 0.7672698497772217, 0.7692511081695557, 0.7687227725982666, 0.7815347909927368, 0.7814027070999146, 0.7854973077774048, 0.7889314293861389, 0.8013472557067871, 0.8045172095298767, 0.8039889335632324, 0.8075551390647888, 0.804649293422699, 0.8157442808151245, 0.8165367841720581, 0.8186501264572144, 0.830669641494751, 0.8294808864593506, 0.8256505131721497, 0.8379341959953308, 0.828292191028595], "val_loss": [1.6548728942871094, 0.7791614702769688, 0.7295491525105068, 0.707098228590829, 0.6401918956211635, 0.5685406582696098, 0.5630987712315151, 0.5578491687774658, 0.5354350464684623, 0.5793956858771188, 0.5130329642977033, 0.4948805570602417, 0.4879872798919678, 0.48739143780299593, 0.4951105458395822, 0.5525073664528983, 0.46883950914655415, 0.4614861692701067, 0.4362866197313581, 0.4527653626033238, 0.44908441816057476, 0.4318115711212158, 0.42456625189099995, 0.45242059230804443, 0.44271191528865267, 0.4230437959943499, 0.40024090664727346, 0.42590618985039846, 0.43893396854400635, 0.40815429176603046, 0.438835825238909, 0.40635816540036884], "val_accuracy": [0.4490000009536743, 0.6323333382606506, 0.6556666493415833, 0.6783333420753479, 0.6959999799728394, 0.7423333525657654, 0.7329999804496765, 0.7360000014305115, 0.7593333125114441, 0.7223333120346069, 0.7720000147819519, 0.7799999713897705, 0.7806666493415833, 0.7796666622161865, 0.777999997138977, 0.7416666746139526, 0.7923333048820496, 0.8033333420753479, 0.8090000152587891, 0.8036666512489319, 0.8003333210945129, 0.8143333196640015, 0.8140000104904175, 0.7960000038146973, 0.8066666722297668, 0.8190000057220459, 0.8353333473205566, 0.8036666512489319, 0.8029999732971191, 0.8270000219345093, 0.7833333611488342, 0.82833331823349]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [94, 80, 61], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 8, 7, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [5, 0, 2, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 18, 20, 7, 45, 13], [0], [0, 1, 1], [9], [6, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.7934285998344421, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 1, 0, 1, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9402040236693143, 1.5652047492068726, 1.0766653571902265, 0.8718991555620919, 0.8863766312662165, 0.7522960918108076, 0.764826104302747, 0.7304971717871758, 0.7061053726887581, 0.6626739037302994, 0.6439286144559787, 0.6395427928687623, 0.6381820547204401, 0.5985388057957142, 0.6012182519294488, 0.5599647016336953, 0.5778227025460195, 0.5342680675368409, 0.5499618744113268, 0.5258268054922606, 0.5307445430311591, 0.5123614218445691, 0.5068950034749822, 0.49486371335131757, 0.5110731316973205, 0.49746465142912255], "accuracy": [0.3567560315132141, 0.4733852744102478, 0.6172236204147339, 0.669792652130127, 0.6654338836669922, 0.7168141603469849, 0.7083608508110046, 0.7220974564552307, 0.7302865982055664, 0.7429665923118591, 0.7567031979560852, 0.7552502751350403, 0.7560427784919739, 0.7689869403839111, 0.7681944370269775, 0.791969358921051, 0.7781006693840027, 0.7924976944923401, 0.7928939461708069, 0.8035926818847656, 0.7975168228149414, 0.809140145778656, 0.807158887386322, 0.8153480291366577, 0.8113855719566345, 0.8133667707443237], "val_loss": [1.6829173564910889, 0.9801890168871198, 0.7346757650375366, 0.6916671821049282, 0.5903302260807582, 0.580846735409328, 0.6116336243493217, 0.5963521003723145, 0.5810411146708897, 0.5063796894890922, 0.5323084252221244, 0.5123225109917777, 0.49044319561549593, 0.5108304364340646, 0.4673248529434204, 0.47593697479793, 0.4455364942550659, 0.5310089928763253, 0.4438108205795288, 0.5051393679210118, 0.4362495371273586, 0.4334117259298052, 0.4271240064076015, 0.43535687242235455, 0.43270300115857807, 0.4320165089198521], "val_accuracy": [0.3173333406448364, 0.6333333253860474, 0.6510000228881836, 0.6923333406448364, 0.7353333234786987, 0.7383333444595337, 0.690666675567627, 0.7233333587646484, 0.7223333120346069, 0.7713333368301392, 0.7559999823570251, 0.7536666393280029, 0.7749999761581421, 0.7699999809265137, 0.7956666946411133, 0.7873333096504211, 0.8043333292007446, 0.7423333525657654, 0.8003333210945129, 0.7580000162124634, 0.809333324432373, 0.8066666722297668, 0.809333324432373, 0.8086666464805603, 0.8059999942779541, 0.8026666641235352]}}, {"genotype": [[0], [1, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [94, 80, 61], [1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 8, 0, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 0, 2, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [86], [0, 1, 0, 0, 0, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [32, 9, 76, 58]], "fitness": -0.7891428470611572, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 6, 2, 3, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.sqrt(tf.math.negative(tf.math.add(tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.280203669031204, 2.210390144886515, 2.0852667055330287, 1.8619205180317924, 1.5947879557564841, 1.3639982294145119, 1.2169766870109933, 1.133680217742542, 1.0597002082859222, 1.0087874308395788, 0.9621870533633683, 0.9205481604090016, 0.9065264204489698, 0.8719659792890386, 0.8496757573408142, 0.8347439151225293, 0.8304231025759791, 0.798312276015271, 0.7963752855698446, 0.7768000816672218, 0.764896587460442, 0.7680412764483754, 0.7514607122529846, 0.74570857984137, 0.7307125999549313, 0.7290144141292559, 0.721466905302958, 0.7095645585899041, 0.7173740148323874, 0.707419027009613, 0.7035863485003758, 0.6920695541998052, 0.6787358987931295, 0.6882850737336164, 0.676069506871749, 0.6721561420170102, 0.6656793003320978, 0.660648482153838, 0.6533772212135447, 0.6606009738430482, 0.6573921633103678, 0.6479870825159614, 0.637190675470949, 0.6520731928893021, 0.6392788069280635, 0.6362839374465398, 0.6337790835047001, 0.6291833952937254, 0.6323873032951682, 0.6187282823190524, 0.6160165552040526, 0.6251325523061303, 0.6150171243046977, 0.6112559906653189, 0.611659656142861, 0.6058031195158877, 0.601615990189167], "accuracy": [0.15532954037189484, 0.28741249442100525, 0.3913617730140686, 0.445779949426651, 0.5003302097320557, 0.5494650602340698, 0.581429123878479, 0.6034870147705078, 0.6330735683441162, 0.6415268778800964, 0.6629242897033691, 0.6719059348106384, 0.6785101294517517, 0.6919825673103333, 0.695813000202179, 0.7030775547027588, 0.6983225345611572, 0.7061154246330261, 0.7099458575248718, 0.7145687341690063, 0.7217012047767639, 0.7166820764541626, 0.7272487282752991, 0.7322678565979004, 0.7320036888122559, 0.7346453666687012, 0.7300224304199219, 0.7390040755271912, 0.7368907928466797, 0.7434949278831482, 0.7392682433128357, 0.7474573850631714, 0.7504953145980835, 0.7450799345970154, 0.7526086568832397, 0.7535332441329956, 0.7568352818489075, 0.7568352818489075, 0.759609043598175, 0.7536653280258179, 0.7576277852058411, 0.7601373791694641, 0.7640998363494873, 0.7544577717781067, 0.7640998363494873, 0.7650244235992432, 0.7658169269561768, 0.7621186375617981, 0.7667415142059326, 0.7741381525993347, 0.7753269076347351, 0.7697794437408447, 0.7724210619926453, 0.7754589915275574, 0.7745344042778015, 0.7737419009208679, 0.7736098170280457], "val_loss": [1.9158814293997628, 1.829326970236642, 1.6593847615378243, 1.388749258858817, 1.1253323554992676, 0.9479258060455322, 0.8465869086129325, 0.7824499266488212, 0.7372287171227592, 0.7043842077255249, 0.6773981537137713, 0.6556942462921143, 0.6413145916802543, 0.6219276530402047, 0.6142915998186383, 0.6040260451180595, 0.5921921730041504, 0.5922555412564959, 0.5786364419119698, 0.572742053440639, 0.5645913396562848, 0.5586087874003819, 0.5507713556289673, 0.5512633493968419, 0.5433932542800903, 0.5408392633710589, 0.5326334238052368, 0.528156076158796, 0.5255317347390311, 0.5228621108191354, 0.5192912476403373, 0.5170761857713971, 0.5139299631118774, 0.5098181792667934, 0.5160843133926392, 0.5040991136005947, 0.5001692261014666, 0.5005074739456177, 0.4987832137516567, 0.49417238576071604, 0.4918581247329712, 0.4915259735924857, 0.4910885606493269, 0.4921248470033918, 0.48636531829833984, 0.4870884248188564, 0.48216354846954346, 0.4801781347819737, 0.49142817088535856, 0.47505438327789307, 0.47993673597063335, 0.4756333657673427, 0.47061952522822786, 0.47084951400756836, 0.46697587626320974, 0.467478803225926, 0.47495877742767334], "val_accuracy": [0.3933333456516266, 0.4860000014305115, 0.5320000052452087, 0.5616666674613953, 0.609666645526886, 0.6579999923706055, 0.6806666851043701, 0.6966666579246521, 0.703000009059906, 0.7143333554267883, 0.7149999737739563, 0.7316666841506958, 0.7289999723434448, 0.737333357334137, 0.737333357334137, 0.7443333268165588, 0.7476666569709778, 0.734333336353302, 0.7393333315849304, 0.7543333172798157, 0.7559999823570251, 0.7586666941642761, 0.7583333253860474, 0.753000020980835, 0.7643333077430725, 0.7616666555404663, 0.762333333492279, 0.768666684627533, 0.7633333206176758, 0.7706666588783264, 0.7723333239555359, 0.7733333110809326, 0.765999972820282, 0.7753333449363708, 0.7680000066757202, 0.7760000228881836, 0.7826666831970215, 0.7770000100135803, 0.7753333449363708, 0.7770000100135803, 0.7789999842643738, 0.7839999794960022, 0.7836666703224182, 0.7766666412353516, 0.7829999923706055, 0.7803333401679993, 0.7876666784286499, 0.7893333435058594, 0.7789999842643738, 0.7903333306312561, 0.7913333177566528, 0.7963333129882812, 0.7910000085830688, 0.7946666479110718, 0.7960000038146973, 0.7946666479110718, 0.7910000085830688]}}, {"genotype": [[0], [1, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 8, 7, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [86], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.6811428666114807, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0262975340994234, 1.715906475403085, 1.0280293330005006, 1.003119098811086, 1.0661077100713223, 1.2338598596421466, 1.7040975421505709, 1.305946553513957], "accuracy": [0.3591335415840149, 0.43970412015914917, 0.6357152462005615, 0.6559239029884338, 0.6077136397361755, 0.6453573107719421, 0.5276713967323303, 0.563730001449585], "val_loss": [1.7989403860909599, 0.847327641078404, 0.6091294118336269, 0.7850568635123116, 0.6742937905447823, 0.8668141194752285, 0.8757107768739972, 0.8425897359848022], "val_accuracy": [0.40033334493637085, 0.6336666941642761, 0.737666666507721, 0.6603333353996277, 0.7176666855812073, 0.6433333158493042, 0.6460000276565552, 0.6439999938011169]}}, {"genotype": [[0], [1, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 8, 7, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 0, 2, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [0], [0, 1, 1], [9], [6, 1], [19], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 0, 2, 1, 0, 0, 2, 2], [2, 9, 76, 58]], "fitness": -0.6679999828338623, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3036331308201365, 2.3010528622018724, 2.2985572629774156, 2.296132396067674, 2.292508644025402, 2.286644041168219, 2.279645029390965, 2.2729130567828535, 2.263844613275665, 2.2553038759915554, 2.2440956576373425, 2.232642038639085, 2.2212400304139046, 2.205615856360608, 2.1887016762453944, 2.1738508976745, 2.1537215576164317, 2.1293529777667937, 2.1027525361849255, 2.0728077964067237, 2.039232844012745, 2.000064022363752, 1.956321918402271, 1.905924475865357, 1.8495381797356707, 1.7993868035316594, 1.7353151588392075, 1.6703233911439712, 1.622566628008943, 1.5662114406227199, 1.525689995457326, 1.4826947359313833, 1.4503023155991113, 1.4228476281840614, 1.3951845399581713, 1.3915255067528294, 1.384375182896746, 1.3830595762344509, 1.3712841695593554, 1.372964787413935, 1.3793041452267514, 1.3859551867725763, 1.3694995540307262], "accuracy": [0.09074098616838455, 0.09576013684272766, 0.09893012791872025, 0.10130762308835983, 0.12098798155784607, 0.13036586344242096, 0.1526878923177719, 0.1694624274969101, 0.1954827606678009, 0.2215031087398529, 0.24474970996379852, 0.2673358917236328, 0.28543123602867126, 0.30880993604660034, 0.32465988397598267, 0.3335094451904297, 0.3485668897628784, 0.36864352226257324, 0.3703605830669403, 0.38885220885276794, 0.39426758885383606, 0.402588814496994, 0.4130233824253082, 0.42226919531822205, 0.4315149784088135, 0.43349623680114746, 0.4481574296951294, 0.45951658487319946, 0.4583278298377991, 0.47166821360588074, 0.4826310873031616, 0.4877823293209076, 0.4950468838214874, 0.5171047449111938, 0.5173689126968384, 0.5248976349830627, 0.5292563438415527, 0.5326905250549316, 0.5407475829124451, 0.5451063513755798, 0.5439175963401794, 0.5534275770187378, 0.5612204670906067], "val_loss": [1.9705939292907715, 1.9689521108354842, 1.9662815502711706, 1.9625820432390486, 1.9578804969787598, 1.952228273664202, 1.9456851141793388, 1.9383042199271066, 1.9301152229309082, 1.9211138997759138, 1.9112999779837472, 1.9005711419241769, 1.8886871337890625, 1.875356674194336, 1.860208375113351, 1.8428324971880232, 1.8228718893868583, 1.7998919486999512, 1.7733706065586634, 1.7427693094526018, 1.7075096198490687, 1.6671216147286552, 1.6212303979056222, 1.5696800095694405, 1.5126465388706751, 1.450794288090297, 1.3852959019797189, 1.3178839342934745, 1.2506820133754186, 1.1859346798488073, 1.125406265258789, 1.0700930867876326, 1.020257098334176, 0.9754393781934466, 0.9355728626251221, 0.900017499923706, 0.8687660694122314, 0.8426096098763602, 0.8242967128753662, 0.8153462750571114, 0.8116485221045358, 0.803524204662868, 0.78561384337289], "val_accuracy": [0.03999999910593033, 0.047333333641290665, 0.06466666609048843, 0.09833333641290665, 0.1433333307504654, 0.2006666660308838, 0.2553333342075348, 0.3063333332538605, 0.3383333384990692, 0.35766667127609253, 0.3713333308696747, 0.38366666436195374, 0.39800000190734863, 0.406333327293396, 0.4143333435058594, 0.421999990940094, 0.43033334612846375, 0.44200000166893005, 0.4543333351612091, 0.4646666646003723, 0.4726666808128357, 0.47866666316986084, 0.4883333444595337, 0.4983333349227905, 0.512666642665863, 0.5239999890327454, 0.5346666574478149, 0.54666668176651, 0.5566666722297668, 0.5683333277702332, 0.5830000042915344, 0.6050000190734863, 0.6223333477973938, 0.6413333415985107, 0.6589999794960022, 0.6646666526794434, 0.6706666946411133, 0.6710000038146973, 0.6696666479110718, 0.6669999957084656, 0.6570000052452087, 0.6526666879653931, 0.6669999957084656]}}, {"genotype": [[0], [1, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [94, 80, 61], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 7, 0, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 1, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [1], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [30, 9, 76, 58]], "fitness": -0.5771428346633911, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.259635232521826, 1.8245030235951336, 1.3373525023318678, 0.9830158741136252, 0.8836129776490851, 0.8500428961693508, 0.8130501697658942, 0.7690095813629287, 0.7510498899667806, 0.6940465565481049, 0.6603791755282757, 0.6551265565317068, 0.6251787364270315, 0.5923555513430329, 0.5797121997963499, 0.5544932784815002, 0.5384583508239336, 0.5117657998643925, 0.5166919239523735, 0.5136297340988877, 0.4956117494546222, 0.5076805629577178, 0.4790145531857664, 0.4696535196491378, 0.47086624499041846, 0.46437290346680726, 0.450892674896963, 0.44327333079841175, 0.4543536395964259, 0.4236582828519083, 0.4370602750586103, 0.42296601649855486, 0.41758600217460595, 0.4218644673845409, 0.4082983201048582, 0.41161537913992075, 0.4233457636264778, 0.4145793860866535], "accuracy": [0.20063400268554688, 0.4290054142475128, 0.5587108731269836, 0.6355831623077393, 0.6757363677024841, 0.6708492636680603, 0.6977941989898682, 0.7058512568473816, 0.7223616242408752, 0.7250033020973206, 0.7617223858833313, 0.7552502751350403, 0.7606657147407532, 0.7728173136711121, 0.7837802171707153, 0.7938185334205627, 0.7972526550292969, 0.8061022162437439, 0.8092722296714783, 0.8078193068504333, 0.8119139075279236, 0.8084797263145447, 0.816008448600769, 0.81548011302948, 0.8247259259223938, 0.8252542614936829, 0.8317263126373291, 0.8318583965301514, 0.8232730031013489, 0.835160493850708, 0.8329150676727295, 0.8436138033866882, 0.8409721255302429, 0.8502179384231567, 0.8455950617790222, 0.8396512866020203, 0.8374059200286865, 0.8397833704948425], "val_loss": [1.8088172503880091, 0.9718920503343854, 0.7567222799573626, 0.7265828847885132, 0.620865021433149, 0.6238699299948556, 0.6351056609834943, 0.5667528424944196, 0.511839474950518, 0.5191035440989903, 0.519886681011745, 0.4901900121143886, 0.4848860502243042, 0.46890079975128174, 0.4458105393818447, 0.43507214954921175, 0.4218447634152004, 0.43258343424115864, 0.4189341494015285, 0.4110340731484549, 0.4187301737921579, 0.41972271885190693, 0.41173828499657766, 0.41368970700672697, 0.3905978117670332, 0.38940135070255827, 0.3848670891353062, 0.37747015271868023, 0.3736618331500462, 0.3768455130713327, 0.3953821999686105, 0.3825372116906302, 0.39166304894856047, 0.3885493448802403, 0.37854452644075665, 0.3847276398113796, 0.3970198801585606, 0.38339476925986155], "val_accuracy": [0.4583333432674408, 0.6366666555404663, 0.7096666693687439, 0.6966666579246521, 0.7200000286102295, 0.7203333377838135, 0.7350000143051147, 0.746666669845581, 0.7586666941642761, 0.762666642665863, 0.7703333497047424, 0.7896666526794434, 0.7806666493415833, 0.7883333563804626, 0.8116666674613953, 0.8153333067893982, 0.8143333196640015, 0.8113333582878113, 0.8173333406448364, 0.8246666789054871, 0.828000009059906, 0.8303333520889282, 0.8223333358764648, 0.8320000171661377, 0.8370000123977661, 0.840666651725769, 0.8413333296775818, 0.840666651725769, 0.8463333249092102, 0.847000002861023, 0.8493333458900452, 0.8503333330154419, 0.8510000109672546, 0.8500000238418579, 0.843999981880188, 0.8486666679382324, 0.847000002861023, 0.8483333587646484]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 8, 7, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 0, 2, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [44, 73, 20, 7, 45, 13], [0], [0, 1, 1], [9], [6, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [2, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302628789516787, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 8, 7, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [1, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(alpha, tf.math.sqrt(tf.math.add(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07528728246688843, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [9, 8, 0, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 1, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 4, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [32, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 14, 8, 6, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.pow(tf.math.sqrt(alpha), tf.math.divide_no_nan(tf.math.add(sigma, beta), alpha))), tf.math.pow(tf.math.square(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 8, 0, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 0, 2, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [0], [0, 1, 1], [9], [6, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [9, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 2, 1, 1, 1, 0, 1, 1, 1, 0, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302628789516787, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [94, 80, 61], [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 9, 7, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 0, 2, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [84, 73, 20, 7, 45, 13], [1], [1, 1, 1], [9], [6, 1], [13], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 1, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 5, 2, 3, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.subtract(sigma, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08308017253875732, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 8, 7, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 2, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [1], [0, 1, 1], [9], [6, 1], [45], [1, 1, 0, 0, 0, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3153188881416207, 2.395095225732088, 2.658552209572974, 3.148620494116472, 3.911160851671176, 4.87222461986378, 6.129962240810392, 7.643701486331818, 9.201927905951225], "accuracy": [0.09074098616838455, 0.09893012791872025, 0.09681680053472519, 0.09774138033390045, 0.09774138033390045, 0.10328886657953262, 0.1010434553027153, 0.0952318087220192, 0.09866596013307571], "val_loss": [1.9862884793962752, 2.0616074970790317, 2.2400125776018416, 2.561208656855992, 3.049433026994978, 3.7087339673723494, 4.5309891019548685, 5.507714680262974, 6.63498592376709], "val_accuracy": [0.09433333575725555, 0.09966666996479034, 0.09966666996479034, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 8, 0, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [0], [0, 1, 1], [9], [6, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [4, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [30, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 1, 1, 1, 0, 1, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.sqrt(tf.math.add(beta, beta)), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 8, 7, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 0, 2, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [0, 0, 1], [0, 1, 1], [7], [6, 1], [79], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [3, 4, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [32, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 10, 6, 4, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.pow(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(sigma, beta), alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 8, 7, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 4, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [1, 1, 0, 0, 1, 0, 0, 1, 1], [9, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07528728246688843, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 8, 0, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 1, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [1], [1, 1, 1], [9], [6, 1], [45], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], [3, 7, 7, 8, 6, 7, 4, 5, 6, 1, 5, 4, 4], [1, 3, 2, 1, 0, 0, 2, 2, 3, 2, 0], [30, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 24, 13, 11, 3], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.add(tf.math.add(sigma, tf.math.sqrt(tf.math.divide_no_nan(beta, alpha))), tf.math.add(tf.math.pow(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.divide_no_nan(beta, tf.math.subtract(tf.math.square(tf.math.pow(beta, sigma)), tf.math.pow(beta, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 1, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [1], [0, 1, 1], [9], [6, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [1, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302505497037459, 2.379036046038088, 8.288471622237786, 55.31974440284802, 159.65364408663095, 321.9689343348785], "accuracy": [0.10527011007070541, 0.10434553027153015, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9767511231558663, 2.5133564131600514, 22.94351087297712, 92.09708295549665, 210.72464861188615, 378.64430454799106], "val_accuracy": [0.10066666454076767, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 8, 7, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 1, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [0], [0, 1, 1], [9], [6, 1], [52], [0, 0, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 5, 4, 1, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [137.02041717476897, 1907.6756536816058, 8424.143846456669, 22839.369276061618, 48903.81947975829, 88691.20976216815], "accuracy": [0.10051512718200684, 0.10579843819141388, 0.10051512718200684, 0.09985470771789551, 0.09747721254825592, 0.1018359512090683], "val_loss": [423.9593244280134, 2927.2015206473216, 9519.33705357143, 22198.434709821428, 42959.65959821428, 73799.97544642857], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [5, 8, 0, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 3, 2, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [86], [0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(sigma))", "other_info": {"loss": [2.305446173174506, 2.323229119762249, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0886276587843895, 0.07515519857406616, 0.09245806187391281, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9771037782941545, 2.016634668622698, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.01733333244919777, 0.09099999815225601, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 8, 7, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 0, 2, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [0], [0, 1, 1], [9], [6, 1], [52], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1], [3, 3, 9, 8, 6, 7, 4, 5, 6, 5, 9, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 18, 12, 6, 4], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)), tf.math.divide_no_nan(tf.math.add(sigma, beta), tf.math.pow(tf.math.square(tf.math.divide_no_nan(tf.math.square(alpha), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.3038013683664738, 2.302321232950777, 2.3020850668619843, 2.303074742383835, 2.3038465034188595, 2.3034573975271946], "accuracy": [0.09074098616838455, 0.09311848133802414, 0.09074098616838455, 0.08374059200286865, 0.0936468094587326, 0.08955223858356476], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]