[{"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [2, 3, 2, 3, 4, 9, 3, 5, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8], [1, 1, 2, 0, 2, 0, 1, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [20, 48, 98, 30, 42, 68], [1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 3, 3, 8, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [7, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [42, 74, 76, 58]], "fitness": -0.8108571171760559, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.0216532976179233, 1.3683707283440991, 1.0239699027085143, 0.904040804463229, 0.7935324598297137, 0.80743342347511, 0.7417896192040127, 0.6961451260688645, 0.6870173492593504, 0.6940836388563136, 0.6598960442345266, 0.6300066923814883, 0.6312350482279993, 0.617260220193781, 0.6226094167671183, 0.5898246820639657, 0.5617902893683756, 0.5844677552854411, 0.5674144166682012, 0.5555393509876774, 0.5495549222780902, 0.546409435819216, 0.5390368157594495, 0.5385171398825539, 0.5108472970750401, 0.5268082447165999, 0.49918876306303045, 0.5039456189111743], "accuracy": [0.3353586196899414, 0.5168405771255493, 0.635451078414917, 0.6598864197731018, 0.7057191729545593, 0.6972658634185791, 0.7205125093460083, 0.7374191284179688, 0.7383436560630798, 0.7325320243835449, 0.7506273984909058, 0.7572315335273743, 0.7584202885627747, 0.7652885913848877, 0.7611940503120422, 0.7750627398490906, 0.785101056098938, 0.7781006693840027, 0.7814027070999146, 0.7891955971717834, 0.7893276810646057, 0.7918372750282288, 0.7961959838867188, 0.7947431206703186, 0.8055738806724548, 0.8001585006713867, 0.8088759779930115, 0.8078193068504333], "val_loss": [1.1608614240373885, 0.9294871602739606, 0.7178828375680106, 0.6574808529445103, 0.6314965827124459, 0.6117956468037197, 0.5727366719927106, 0.5461880990437099, 0.5632679121834892, 0.5681205647332328, 0.5300875220979963, 0.5320690699986049, 0.559459958757673, 0.5011840888432094, 0.5081961495535714, 0.47042970997946604, 0.4659966230392456, 0.47462434428078787, 0.49016712393079487, 0.4528942619051252, 0.44829104627881733, 0.4503032650266375, 0.42995788369859966, 0.45933376039777485, 0.4492509365081787, 0.44627208369118826, 0.4283434067453657, 0.4212223291397095], "val_accuracy": [0.5199999809265137, 0.6159999966621399, 0.7006666660308838, 0.7133333086967468, 0.706333339214325, 0.7206666469573975, 0.7423333525657654, 0.7456666827201843, 0.7480000257492065, 0.7480000257492065, 0.7563333511352539, 0.7396666407585144, 0.7353333234786987, 0.7786666750907898, 0.7773333191871643, 0.7950000166893005, 0.7933333516120911, 0.7850000262260437, 0.7676666378974915, 0.7990000247955322, 0.8140000104904175, 0.8059999942779541, 0.8149999976158142, 0.8033333420753479, 0.79666668176651, 0.8069999814033508, 0.8083333373069763, 0.8140000104904175]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [2, 3, 2, 3, 4, 9, 3, 5, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8], [3, 1, 2, 0, 2, 0, 1, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [81, 48, 59, 88, 4, 68, 88, 25, 71, 77], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 3, 3, 8, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [41, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 1, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [40, 74, 76, 58]], "fitness": -0.7825714349746704, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), sigma), beta)", "other_info": {"loss": [2.1539812373006506, 1.4635707731370393, 1.1245080856300065, 0.9817200754659051, 0.8703959737282545, 0.8426568079870201, 0.82150649792955, 0.7363666606506793, 0.7633012838257208, 0.74891078879159, 0.7034913778399526, 0.7187033001898837, 0.7210952378204234, 0.6936187097472348, 0.6724332733523372, 0.6665112514537418, 0.6756803328334978, 0.6474439459643139, 0.6504344556782271, 0.6648111435652504, 0.6529765374719381], "accuracy": [0.2958658039569855, 0.5020473003387451, 0.5972790718078613, 0.6382247805595398, 0.6884163022041321, 0.693831741809845, 0.6970016956329346, 0.7263241410255432, 0.713379979133606, 0.7206445932388306, 0.7401928305625916, 0.7364945411682129, 0.7329282760620117, 0.7474573850631714, 0.7526086568832397, 0.7539294958114624, 0.7464007139205933, 0.7626469135284424, 0.763967752456665, 0.7589486241340637, 0.7652885913848877], "val_loss": [1.4278064795902796, 0.9307503359658378, 0.7728958640779767, 0.6896499906267438, 0.6662065642220634, 0.6580239704677037, 0.5831478152956281, 0.5631956713540214, 0.6438577175140381, 0.5588387591498238, 0.5783427783421108, 0.5606521027428764, 0.5835280929292951, 0.5555070298058646, 0.5052048649106707, 0.5115060806274414, 0.5186001062393188, 0.5217056104115078, 0.5249819414956229, 0.504224249294826, 0.5447557823998588], "val_accuracy": [0.5306666493415833, 0.5846666693687439, 0.6520000100135803, 0.7046666741371155, 0.7103333473205566, 0.7086666822433472, 0.7446666955947876, 0.7516666650772095, 0.703000009059906, 0.75, 0.7316666841506958, 0.7633333206176758, 0.734666645526886, 0.7593333125114441, 0.778333306312561, 0.7850000262260437, 0.7676666378974915, 0.7666666507720947, 0.7736666798591614, 0.7706666588783264, 0.7643333077430725]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [2, 3, 2, 3, 4, 9, 3, 5, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8], [3, 1, 2, 0, 2, 0, 1, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [20, 48, 98, 30, 42, 68], [1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 3, 3, 8, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [7, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [3, 74, 76, 58]], "fitness": -0.7645714282989502, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.2933173167344965, 2.2771897292990553, 2.256548111323179, 2.2341437622887064, 2.2092165176374974, 2.174619954795318, 2.1353170335757308, 2.084307327781922, 2.02073888710351, 1.9462624007306788, 1.858436342621555, 1.7672498326622152, 1.6709411767621507, 1.5922119529759644, 1.4983066119034183, 1.426817639691876, 1.3699364402526877, 1.3154967369388957, 1.2700790645518496, 1.241997070221806, 1.1925334690930647, 1.1669798104864748, 1.1387241416209881, 1.1030473394511067, 1.0808189704260411, 1.0626354289013933, 1.037590058976318, 1.0289840417657121, 1.0093905182090086, 0.9994656868724775, 0.9811814841089185, 0.9633719209178627, 0.9467418797815071, 0.9430537835686608, 0.9260820598099069, 0.91875624518904, 0.9024481653316917, 0.9040136861448448, 0.8822982408162421, 0.8850065691989757, 0.8814675405654988, 0.8726276386730455, 0.864514032808104, 0.8555130725759699, 0.8459062752958617, 0.8483135350911593, 0.837463052840265, 0.8280322185329175, 0.8271238040363532, 0.8122931951781179, 0.8158676362214008, 0.8159286549786976, 0.8132111409935165, 0.8022049370616292, 0.7859206533214719, 0.8014634702152438, 0.7947653477076353, 0.7871322655218026, 0.7813530400476089, 0.7776216770191517, 0.7805281779501873, 0.7716124811901188, 0.7652645392062689, 0.7599132798681989, 0.7569594610053881, 0.7642127446778115, 0.7586123447108971, 0.7446183860498791, 0.7468759909423744, 0.7444675743871156, 0.745560987230935, 0.7447236520644774, 0.736248217002512, 0.7421769382081027, 0.7355741426819083, 0.7339832508694684, 0.7252063762793656, 0.7267005598666315, 0.7132173573509452, 0.7179513724016208, 0.713667885880224, 0.7163564668764858, 0.7085323702500181], "accuracy": [0.1142517477273941, 0.15480121970176697, 0.21014396846294403, 0.25703340768814087, 0.2868841588497162, 0.33139610290527344, 0.3572843670845032, 0.37987056374549866, 0.4095892310142517, 0.4313828945159912, 0.44908201694488525, 0.47193238139152527, 0.48487651348114014, 0.495839387178421, 0.5215955376625061, 0.5425967574119568, 0.5495971441268921, 0.5542200207710266, 0.5715228915214539, 0.5684850215911865, 0.5868445634841919, 0.5934486985206604, 0.5983357429504395, 0.613789439201355, 0.6211860775947571, 0.6326773166656494, 0.6391493678092957, 0.6473385095596313, 0.6446968913078308, 0.64667809009552, 0.6510368585586548, 0.6602826714515686, 0.6671509742736816, 0.6619997620582581, 0.6730946898460388, 0.6715096831321716, 0.6790384650230408, 0.6802271604537964, 0.6877558827400208, 0.6839255094528198, 0.6826046705245972, 0.6901333928108215, 0.6935675740242004, 0.698190450668335, 0.6936996579170227, 0.6996433734893799, 0.7004358768463135, 0.6999075412750244, 0.7061154246330261, 0.7040021419525146, 0.7067758440971375, 0.7099458575248718, 0.7003037929534912, 0.7058512568473816, 0.715889573097229, 0.7059833407402039, 0.7190595865249634, 0.7119271159172058, 0.7149649858474731, 0.717870831489563, 0.7206445932388306, 0.7209087014198303, 0.719852089881897, 0.7284374833106995, 0.726192057132721, 0.7239466309547424, 0.7255316376686096, 0.7283053994178772, 0.7279091477394104, 0.7309470176696777, 0.7309470176696777, 0.7284374833106995, 0.7314753532409668, 0.7285695672035217, 0.7359662055969238, 0.7351737022399902, 0.7337207794189453, 0.7320036888122559, 0.7384757399559021, 0.7407211661338806, 0.7363624572753906, 0.7368907928466797, 0.741909921169281], "val_loss": [1.9538356917245048, 1.9362951687404089, 1.9168383734566825, 1.8935908590044295, 1.865419524056571, 1.8298207010541643, 1.7851922852652413, 1.7304603031703405, 1.6635173048291887, 1.584482261112758, 1.4959329196384974, 1.4016777106693812, 1.3070099013192313, 1.2197584424700056, 1.1395414897373743, 1.0699615137917655, 1.0117260728563582, 0.9628192016056606, 0.9214329719543457, 0.8880131244659424, 0.857621567589896, 0.8311749867030552, 0.8084267888750348, 0.7875795194080898, 0.7693463734218052, 0.7527239152363369, 0.73928473676954, 0.7271489926746914, 0.7156185592923846, 0.7056992735181536, 0.6958370549338204, 0.6878703832626343, 0.6782053368432182, 0.6706229278019497, 0.6643070152827671, 0.6577026503426688, 0.6509259939193726, 0.6459921428135463, 0.6389557123184204, 0.6333292722702026, 0.6300898960658482, 0.6251464741570609, 0.6220016990389142, 0.6157065800258091, 0.6129956926618304, 0.6087444680077689, 0.6049309287752423, 0.6020010198865619, 0.5988459587097168, 0.5947610139846802, 0.5919955628258842, 0.5886064427239555, 0.5872655425752912, 0.586342419896807, 0.5810132026672363, 0.5789113385336739, 0.5770798921585083, 0.5752080508640834, 0.5730397871562413, 0.569811293057033, 0.566078611782619, 0.5641350746154785, 0.5621328864778791, 0.5612549611500331, 0.5581426790782383, 0.5566667318344116, 0.5536640541894096, 0.551796453339713, 0.550020524433681, 0.5478512389319283, 0.546059250831604, 0.5452236448015485, 0.5436058385031564, 0.5416886295591082, 0.5402941192899432, 0.5383237089429583, 0.5383169991629464, 0.5368624074118478, 0.5337831633431571, 0.533804212297712, 0.5332967724118914, 0.5315269231796265, 0.5310971736907959], "val_accuracy": [0.18700000643730164, 0.3149999976158142, 0.3709999918937683, 0.4153333306312561, 0.43833333253860474, 0.4650000035762787, 0.492333322763443, 0.5143333077430725, 0.5289999842643738, 0.5416666865348816, 0.5523333549499512, 0.562333345413208, 0.5843333601951599, 0.5983333587646484, 0.6200000047683716, 0.6516666412353516, 0.656000018119812, 0.6606666445732117, 0.6693333387374878, 0.6756666898727417, 0.6833333373069763, 0.6893333196640015, 0.6909999847412109, 0.6946666836738586, 0.6983333230018616, 0.7026666402816772, 0.7073333263397217, 0.7076666951179504, 0.7120000123977661, 0.7160000205039978, 0.7179999947547913, 0.722000002861023, 0.7196666598320007, 0.7233333587646484, 0.7283333539962769, 0.7303333282470703, 0.7316666841506958, 0.7283333539962769, 0.7329999804496765, 0.737666666507721, 0.7336666584014893, 0.7393333315849304, 0.737666666507721, 0.7416666746139526, 0.7379999756813049, 0.7393333315849304, 0.7423333525657654, 0.7423333525657654, 0.7413333058357239, 0.7456666827201843, 0.746999979019165, 0.7453333139419556, 0.7463333606719971, 0.746666669845581, 0.75, 0.7493333220481873, 0.7513333559036255, 0.75, 0.750333309173584, 0.7540000081062317, 0.7540000081062317, 0.7543333172798157, 0.7566666603088379, 0.7549999952316284, 0.7563333511352539, 0.7563333511352539, 0.7599999904632568, 0.7599999904632568, 0.7580000162124634, 0.7573333382606506, 0.7576666474342346, 0.7606666684150696, 0.7596666812896729, 0.7613333463668823, 0.7596666812896729, 0.7620000243186951, 0.7633333206176758, 0.765333354473114, 0.7603333592414856, 0.7636666893959045, 0.762333333492279, 0.7620000243186951, 0.762333333492279]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [2, 3, 2, 3, 4, 9, 3, 5, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8], [1, 1, 2, 0, 2, 0, 1, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [20, 48, 98, 30, 42, 68], [1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 3, 3, 8, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [32, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [42, 74, 76, 58]], "fitness": -0.7588571310043335, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.035204708977713, 1.4825956682566213, 1.0509422163937496, 0.8892874721806237, 0.8485464424804186, 0.7709797710207837, 0.7228885047849237, 0.7838796856160555, 0.7081953160215788, 0.6611330062091909, 0.6732531468850306, 0.6324253302004044, 0.6289651998675589, 0.6474115300833542], "accuracy": [0.3259807229042053, 0.49385812878608704, 0.6096948981285095, 0.6785101294517517, 0.6803592443466187, 0.7099458575248718, 0.7277770638465881, 0.7058512568473816, 0.7300224304199219, 0.7508915662765503, 0.7466648817062378, 0.7605336308479309, 0.7581561207771301, 0.7532690763473511], "val_loss": [1.3011200087411063, 0.9395202568599156, 0.6923221179417202, 0.7031369549887521, 0.6095040696007865, 0.5819386925016131, 0.6406600475311279, 0.629971810749599, 0.5246156113488334, 0.587740455354963, 0.5334645850317818, 0.5475881610597882, 0.5356634855270386, 0.5427821023123605], "val_accuracy": [0.4463333189487457, 0.6003333330154419, 0.7009999752044678, 0.67166668176651, 0.7250000238418579, 0.7333333492279053, 0.7096666693687439, 0.7036666870117188, 0.753333330154419, 0.7260000109672546, 0.75, 0.7473333477973938, 0.7446666955947876, 0.7260000109672546]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [2, 3, 2, 3, 4, 9, 3, 5, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8], [1, 1, 2, 0, 2, 0, 1, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [20, 48, 98, 30, 42, 68], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 3, 8, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [41, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [53, 74, 76, 58]], "fitness": -0.3668571412563324, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.500187343562898, 2.4557742019134854, 2.312543768845592, 2.305154115737091, 2.3035054014752867, 2.3031149249680842], "accuracy": [0.2094835489988327, 0.19680359959602356, 0.19059570133686066, 0.10117553919553757, 0.10381719470024109, 0.09985470771789551], "val_loss": [1.4655909538269043, 1.964125088282994, 1.9767659051077706, 1.9738702774047852, 1.9735992976597376, 1.9735428946358817], "val_accuracy": [0.3463333249092102, 0.1599999964237213, 0.10233332961797714, 0.09833333641290665, 0.10566666722297668, 0.10566666722297668]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [2, 3, 2, 3, 4, 9, 3, 5, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8], [2, 1, 0, 3, 2, 2, 2, 1, 2, 2, 0, 1, 2, 0, 2, 1, 2, 2, 0, 0, 2, 1], [81, 48, 98, 30, 42, 68], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 3, 3, 8, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [29, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [42, 74, 76, 58]], "fitness": -0.16914285719394684, "mapping_values": [1, 7, 7, 3, 4, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.math.sqrt(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))), sigma)", "other_info": {"loss": [2.3022281392658894, 2.378902301528844, 2.1892481406666207, 2.1735455056128643, 2.224374251831099, 2.3064244096116338], "accuracy": [0.20803064107894897, 0.1224408894777298, 0.24593845009803772, 0.22216351330280304, 0.20076608657836914, 0.10593052208423615], "val_loss": [1.872629029410226, 1.956411702292306, 2.0081102507455006, 1.9714571407863073, 1.9783225059509277, 1.974604266030448], "val_accuracy": [0.19499999284744263, 0.09866666793823242, 0.10133333504199982, 0.09799999743700027, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1], [2, 3, 9, 3, 2, 4, 3, 3, 3, 6, 5, 7, 1, 1, 2, 5, 0, 2, 0, 0, 4, 4, 3, 1, 3, 1, 4, 2, 5, 0, 5, 2, 6, 9, 2, 1, 6, 3, 8, 7, 5, 5, 8, 2, 9], [3, 2, 2, 0, 2, 0, 2, 2, 2, 0, 2, 0, 2, 2, 2, 1, 1, 1, 2, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [20, 48, 98, 30, 42, 68, 63, 27], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 3, 3, 8, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [7, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [3, 74, 76, 58]], "fitness": -0.1599999964237213, "mapping_values": [1, 57, 57, 34, 23, 8, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.multiply(grad, grad))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.square(grad), tf.math.add(alpha, grad)), tf.math.negative(grad))), tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))))))))), tf.math.add(alpha, grad))))), tf.math.negative(tf.math.pow(tf.math.pow(tf.math.multiply(tf.math.subtract(grad, grad), alpha), tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.pow(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.negative(grad))), tf.math.square(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(alpha, alpha)))))), tf.math.add(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.3009212191519626, 2.30293586745065, 2.301943573103353, 2.3019206690167895, 2.3033669998522655, 2.301405263787893, 2.3030251196708975, 2.302224252454168, 2.301908669801137, 2.3007273395945447, 2.3005827676508295, 2.3010441628996374, 2.300181461441802, 2.301779007442466, 2.300718144403079, 2.298742202042809, 2.3001241808664434, 2.3003199704492316, 2.30041452175937, 2.300729682558579, 2.298173204373375, 2.2995840962757255, 2.3005012999814123, 2.2989215143226662, 2.2981379202186565, 2.297994721094851, 2.2979039152646976, 2.297613082041027, 2.299117614029106, 2.2999818501077574, 2.2980060759410725, 2.297185013653533, 2.2983024563409584, 2.297350397104947, 2.2977792650811533, 2.2961328387370656, 2.2973058016198484, 2.2953397031977287, 2.2972361479988344, 2.295704146134398, 2.2960845835535455, 2.2947172131977376, 2.294933605817614, 2.2956085392134837, 2.2934245007338228, 2.2937718077012024, 2.2950863397321397, 2.2954912823047366, 2.2947184122186592, 2.2954582718652805, 2.2930476654789875, 2.294730236501647, 2.2935544539121446, 2.2932258245573696, 2.291495788335139, 2.2933315900433033, 2.2941835031785263, 2.292112996061449, 2.2932431245004463, 2.292432064047075, 2.2929541954133237, 2.2927444772540206, 2.2923700291136426, 2.2924420547964015, 2.2916919174227086, 2.2905344871119926, 2.2909817050366494, 2.2896719740334914, 2.2910471360256106, 2.289112592716542, 2.290434541451602, 2.2903465749155876, 2.2896993663159533, 2.2900402249283465, 2.2907616974985943, 2.2900038132373415, 2.290830026827374, 2.290047144137196, 2.288783293138201, 2.2885860371126743, 2.2895638097814204, 2.288155031525432, 2.288484191000186, 2.2888037339335088, 2.2887078439397364, 2.287330768899108, 2.287722719721806, 2.288276669843999, 2.2876929645729795, 2.2877034195315615, 2.2872771364964546, 2.286965535411651, 2.2855729214062763, 2.286689139155664, 2.2878212953649886, 2.287291951293502, 2.287797511356098, 2.2849915726089427, 2.286347878717743, 2.2858080887255996], "accuracy": [0.09417514503002167, 0.0886276587843895, 0.09008057415485382, 0.09457138925790787, 0.08809932321310043, 0.09100515395402908, 0.09021265059709549, 0.09338264167308807, 0.09708096832036972, 0.09853387624025345, 0.09589222073554993, 0.09272222965955734, 0.1002509593963623, 0.09906221181154251, 0.09298639744520187, 0.09998679161071777, 0.09642054885625839, 0.09734513610601425, 0.09734513610601425, 0.09100515395402908, 0.10553427785634995, 0.09694888442754745, 0.09813763201236725, 0.1010434553027153, 0.10460969805717468, 0.09945846349000931, 0.09919429570436478, 0.10170386731624603, 0.10566636174917221, 0.10011887550354004, 0.10355303436517715, 0.10659094154834747, 0.10645885765552521, 0.10408136248588562, 0.10381719470024109, 0.10315678268671036, 0.10302469879388809, 0.1022322028875351, 0.10408136248588562, 0.10857218503952026, 0.10936468094587326, 0.11015717685222626, 0.1088363528251648, 0.1072513535618782, 0.11742173880338669, 0.11253467202186584, 0.11517632752656937, 0.10711926966905594, 0.10711926966905594, 0.10672302544116974, 0.11174217611551285, 0.11266675591468811, 0.11028926074504852, 0.11187426000833511, 0.11279883980751038, 0.11610091477632523, 0.11728965491056442, 0.11306300014257431, 0.11266675591468811, 0.1162329912185669, 0.11491216719150543, 0.1142517477273941, 0.11768590658903122, 0.11834631860256195, 0.10857218503952026, 0.12098798155784607, 0.11491216719150543, 0.12323339283466339, 0.11781799048185349, 0.1282525360584259, 0.11847840249538422, 0.11808215826749802, 0.12495046854019165, 0.1274600476026535, 0.12217672914266586, 0.1220446452498436, 0.12336547672748566, 0.120459645986557, 0.12019548565149307, 0.12296922504901886, 0.12455421686172485, 0.12613920867443085, 0.12468630075454712, 0.11979923397302628, 0.12151630967855453, 0.13181878626346588, 0.12812046706676483, 0.12930920720100403, 0.12917712330818176, 0.12891295552253723, 0.12640337646007538, 0.13221503794193268, 0.13419628143310547, 0.13221503794193268, 0.12336547672748566, 0.1282525360584259, 0.1302337795495987, 0.13049794733524323, 0.13419628143310547, 0.13380002975463867], "val_loss": [1.9710266249520438, 1.9708664757864816, 1.9707044192722865, 1.9705419540405273, 1.9703809193202428, 1.9702208382742745, 1.9700591904776437, 1.969897747039795, 1.9697375978742326, 1.969576358795166, 1.9694149153573173, 1.969254629952567, 1.9690935271126884, 1.9689339910234724, 1.9687707083565849, 1.968611172267369, 1.9684534754071916, 1.9682939393179757, 1.9681339263916016, 1.967975071498326, 1.9678143092564173, 1.967653819492885, 1.9674948964800154, 1.9673341342381068, 1.9671733038766044, 1.9670147214617049, 1.966855866568429, 1.9666972160339355, 1.96653870173863, 1.966379165649414, 1.9662188121250697, 1.9660609109061105, 1.9659006255013602, 1.9657412256513322, 1.9655819620404924, 1.9654226984296526, 1.9652622086661202, 1.9651034900120325, 1.9649457931518555, 1.9647869382585799, 1.9646295138767786, 1.9644720894949776, 1.9643145288739885, 1.9641575813293457, 1.9639989989144462, 1.9638384410313197, 1.9636797904968262, 1.9635217530386788, 1.9633618763514928, 1.9632041794913155, 1.963043212890625, 1.9628852435520716, 1.9627278872898646, 1.962569304874965, 1.962409428187779, 1.962249755859375, 1.962089947291783, 1.961932591029576, 1.9617733274187361, 1.9616154261997767, 1.9614594323294503, 1.9613022804260254, 1.9611438342503138, 1.9609860011509486, 1.9608285086495536, 1.9606701987130302, 1.960512638092041, 1.9603541919163294, 1.9601975168500627, 1.9600394793919154, 1.9598791258675712, 1.9597202709742956, 1.9595629147120885, 1.95940705708095, 1.959249428340367, 1.959089756011963, 1.9589298112051827, 1.9587725230625697, 1.9586138044084822, 1.95845365524292, 1.9582950047084264, 1.9581381934029716, 1.9579806327819824, 1.9578230721609933, 1.9576662608555384, 1.9575074059622628, 1.9573509352547782, 1.9571943964276994, 1.957036018371582, 1.9568800245012556, 1.956724030630929, 1.9565670830862862, 1.9564097268240792, 1.9562520299639021, 1.9560952186584473, 1.9559367724827357, 1.955780369894845, 1.9556234904697962, 1.955465589250837, 1.9553087779453822], "val_accuracy": [0.03733333200216293, 0.03866666555404663, 0.03933333232998848, 0.03999999910593033, 0.04100000113248825, 0.041333332657814026, 0.041999999433755875, 0.041999999433755875, 0.043666668236255646, 0.043666668236255646, 0.043666668236255646, 0.04399999976158142, 0.04533333331346512, 0.047333333641290665, 0.04833333194255829, 0.05000000074505806, 0.050999999046325684, 0.052666667848825455, 0.05366666615009308, 0.05400000140070915, 0.054666668176651, 0.05533333495259285, 0.056333333253860474, 0.05666666850447655, 0.05766666680574417, 0.058666665107011795, 0.05900000035762787, 0.06066666543483734, 0.06266666948795319, 0.06400000303983688, 0.06566666811704636, 0.06599999964237213, 0.0676666647195816, 0.06866666674613953, 0.07199999690055847, 0.07266666740179062, 0.07333333045244217, 0.07533333450555801, 0.07733333110809326, 0.07800000160932541, 0.07999999821186066, 0.0820000022649765, 0.0846666693687439, 0.0860000029206276, 0.08699999749660492, 0.08733333647251129, 0.08833333104848862, 0.08933333307504654, 0.09033333510160446, 0.09133332967758179, 0.09399999678134918, 0.0949999988079071, 0.09533333033323288, 0.09833333641290665, 0.09966666996479034, 0.10133333504199982, 0.10266666859388351, 0.10400000214576721, 0.10466666519641876, 0.10566666722297668, 0.10700000077486038, 0.10899999737739563, 0.1106666699051857, 0.11166666448116302, 0.11266666650772095, 0.11500000208616257, 0.11699999868869781, 0.11733333021402359, 0.11900000274181366, 0.12133333086967468, 0.1223333328962326, 0.12333333492279053, 0.12533333897590637, 0.12566666305065155, 0.12866666913032532, 0.13099999725818634, 0.1313333362340927, 0.13333334028720856, 0.13333334028720856, 0.1366666704416275, 0.1379999965429306, 0.1393333375453949, 0.14133332669734955, 0.14399999380111694, 0.14666666090488434, 0.14766666293144226, 0.14900000393390656, 0.14933332800865173, 0.15133333206176758, 0.15166667103767395, 0.15299999713897705, 0.15533334016799927, 0.15800000727176666, 0.1599999964237213, 0.1613333374261856, 0.16233333945274353, 0.16500000655651093, 0.1666666716337204, 0.16866666078567505, 0.1706666648387909]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [2, 8, 2, 3, 4, 9, 3, 5, 8, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8], [3, 1, 2, 0, 2, 0, 2, 2, 0, 0, 1, 2, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [20, 48, 98, 30, 59, 68], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 3, 3, 8, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [7, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [3, 74, 76, 58]], "fitness": -0.1599999964237213, "mapping_values": [1, 23, 23, 14, 9, 4, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.multiply(grad, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.square(grad)))))), tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(grad)))))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.subtract(grad, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), alpha)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.3009212191519626, 2.30293586745065, 2.301943573103353, 2.3019206690167895, 2.3033669998522655, 2.301405263787893, 2.3030251196708975, 2.3022242839451965, 2.301908669801137, 2.300727321613167, 2.3005827676508295, 2.3010441628996374, 2.300181461441802, 2.301779007442466, 2.300718144403079, 2.298742202042809, 2.3001241493754145, 2.3003199704492316, 2.3004145847414272, 2.300729682558579, 2.298173204373375, 2.2995840468033193, 2.3005012999814123, 2.2989214828316373, 2.2981378887276276, 2.29799475258588, 2.2979039152646976, 2.297613019058969, 2.299117614029106, 2.299981863617409, 2.2980060759410725, 2.297185013653533, 2.2983024563409584, 2.297350365613918, 2.297779296572182, 2.2961328072460367, 2.2973058646019062, 2.2953397346887576, 2.297236085016777, 2.295704146134398, 2.2960846465356033, 2.2947172267073888, 2.2949336237989915, 2.295608557194861, 2.2934245007338228, 2.293771776210174, 2.2950863037693847, 2.2954912823047366, 2.294718475200717, 2.2954582403742516, 2.29304760249693, 2.294730236501647, 2.2935544224211157, 2.2932258245573696, 2.2914958198261677, 2.2933316035529545, 2.2941835346695547, 2.29211296457042, 2.293243155991475, 2.2924320325560466, 2.2929542583953815, 2.2927445087450495, 2.2923700291136426, 2.2924420233053726, 2.2916918679503024, 2.2905344871119926, 2.290981642054592, 2.2896719740334914, 2.2910471360256106, 2.289112592716542, 2.2904345594329794, 2.2903465749155876, 2.2896993348249244, 2.2900402249283465, 2.2907616974985943, 2.290003831218719, 2.2908300583184027, 2.290047144137196, 2.288783261647172, 2.288586068603703, 2.2895638097814204, 2.288155031525432, 2.2884842224912147, 2.2888037339335088, 2.2887078439397364, 2.287330768899108, 2.287722719721806, 2.288276669843999, 2.2876929510633284, 2.2877034195315615, 2.287277073514397, 2.286965535411651, 2.285572903424899, 2.286689107664635, 2.2878212638739597, 2.287291919802473, 2.287797511356098, 2.2849916355910005, 2.286347910208772, 2.285808057234571], "accuracy": [0.09417514503002167, 0.0886276587843895, 0.09008057415485382, 0.09457138925790787, 0.08809932321310043, 0.09100515395402908, 0.09021265059709549, 0.09338264167308807, 0.09708096832036972, 0.09853387624025345, 0.09589222073554993, 0.09272222965955734, 0.1002509593963623, 0.09906221181154251, 0.09298639744520187, 0.09998679161071777, 0.09642054885625839, 0.09734513610601425, 0.09734513610601425, 0.09100515395402908, 0.10553427785634995, 0.09694888442754745, 0.09813763201236725, 0.1010434553027153, 0.10460969805717468, 0.09945846349000931, 0.09919429570436478, 0.10170386731624603, 0.10566636174917221, 0.10011887550354004, 0.10355303436517715, 0.10659094154834747, 0.10645885765552521, 0.10408136248588562, 0.10381719470024109, 0.10315678268671036, 0.10302469879388809, 0.1022322028875351, 0.10408136248588562, 0.10857218503952026, 0.10936468094587326, 0.11015717685222626, 0.1088363528251648, 0.10738343745470047, 0.11742173880338669, 0.11253467202186584, 0.11517632752656937, 0.10711926966905594, 0.10711926966905594, 0.10672302544116974, 0.11174217611551285, 0.11266675591468811, 0.11028926074504852, 0.11187426000833511, 0.11279883980751038, 0.11610091477632523, 0.11728965491056442, 0.11306300014257431, 0.11266675591468811, 0.1162329912185669, 0.11491216719150543, 0.1142517477273941, 0.11768590658903122, 0.11834631860256195, 0.10857218503952026, 0.12098798155784607, 0.11491216719150543, 0.12323339283466339, 0.11781799048185349, 0.1282525360584259, 0.11847840249538422, 0.11808215826749802, 0.12495046854019165, 0.1274600476026535, 0.12217672914266586, 0.1220446452498436, 0.12336547672748566, 0.120459645986557, 0.12019548565149307, 0.12296922504901886, 0.12455421686172485, 0.12613920867443085, 0.12468630075454712, 0.11979923397302628, 0.12151630967855453, 0.13181878626346588, 0.12812046706676483, 0.12930920720100403, 0.12917712330818176, 0.12891295552253723, 0.12640337646007538, 0.13221503794193268, 0.13419628143310547, 0.13221503794193268, 0.12336547672748566, 0.1282525360584259, 0.1302337795495987, 0.13049794733524323, 0.13419628143310547, 0.13380002975463867], "val_loss": [1.9710266249520438, 1.9708664757864816, 1.9707044192722865, 1.9705420221601213, 1.9703809193202428, 1.9702208382742745, 1.9700591904776437, 1.969897747039795, 1.9697375978742326, 1.969576358795166, 1.9694149153573173, 1.969254629952567, 1.9690935271126884, 1.9689339229038783, 1.9687707083565849, 1.968611172267369, 1.9684534754071916, 1.9682939393179757, 1.9681339263916016, 1.9679750033787318, 1.9678143092564173, 1.9676538876124792, 1.9674948964800154, 1.9673340661185128, 1.9671733038766044, 1.9670147214617049, 1.966855798448835, 1.9666972160339355, 1.966538633619036, 1.966379165649414, 1.9662188802446638, 1.9660609109061105, 1.9659006255013602, 1.9657412256513322, 1.9655819620404924, 1.9654226984296526, 1.9652622086661202, 1.9651034900120325, 1.9649457931518555, 1.9647869382585799, 1.9646294457571847, 1.9644721576145716, 1.9643145969935827, 1.9641575813293457, 1.9639989989144462, 1.9638384410313197, 1.9636797904968262, 1.9635217530386788, 1.9633618082318987, 1.9632041794913155, 1.9630430766514368, 1.9628851754324776, 1.9627278872898646, 1.9625693729945592, 1.962409428187779, 1.962249755859375, 1.9620898791721888, 1.961932591029576, 1.9617733274187361, 1.9616156305585588, 1.9614594323294503, 1.9613022804260254, 1.9611438342503138, 1.9609860011509486, 1.9608285767691476, 1.9606701987130302, 1.960512706211635, 1.9603541919163294, 1.9601973806108748, 1.9600394793919154, 1.9598791258675712, 1.9597202709742956, 1.9595629828316825, 1.95940705708095, 1.959249428340367, 1.959089756011963, 1.9589298112051827, 1.9587725230625697, 1.958613668169294, 1.95845365524292, 1.9582950047084264, 1.9581381252833776, 1.9579806327819824, 1.9578230721609933, 1.9576662608555384, 1.9575074059622628, 1.95735079901559, 1.9571943964276994, 1.957036018371582, 1.9568800245012556, 1.956724030630929, 1.9565670149666923, 1.9564097268240792, 1.956251961844308, 1.9560952186584473, 1.9559367724827357, 1.955780369894845, 1.9556234904697962, 1.955465521131243, 1.9553087779453822], "val_accuracy": [0.03733333200216293, 0.03866666555404663, 0.03933333232998848, 0.03999999910593033, 0.04100000113248825, 0.041333332657814026, 0.041999999433755875, 0.041999999433755875, 0.043666668236255646, 0.043666668236255646, 0.043666668236255646, 0.04399999976158142, 0.04533333331346512, 0.047333333641290665, 0.04833333194255829, 0.05000000074505806, 0.050999999046325684, 0.052666667848825455, 0.05366666615009308, 0.05400000140070915, 0.054666668176651, 0.05533333495259285, 0.056333333253860474, 0.05666666850447655, 0.05766666680574417, 0.058666665107011795, 0.05900000035762787, 0.06066666543483734, 0.06266666948795319, 0.06400000303983688, 0.06566666811704636, 0.06599999964237213, 0.0676666647195816, 0.06866666674613953, 0.07199999690055847, 0.07266666740179062, 0.07333333045244217, 0.07533333450555801, 0.07733333110809326, 0.07800000160932541, 0.07999999821186066, 0.0820000022649765, 0.0846666693687439, 0.0860000029206276, 0.08699999749660492, 0.08733333647251129, 0.08833333104848862, 0.08933333307504654, 0.09033333510160446, 0.09133332967758179, 0.09399999678134918, 0.0949999988079071, 0.09533333033323288, 0.09833333641290665, 0.09966666996479034, 0.10133333504199982, 0.10266666859388351, 0.10400000214576721, 0.10466666519641876, 0.10566666722297668, 0.10700000077486038, 0.10899999737739563, 0.1106666699051857, 0.11166666448116302, 0.11266666650772095, 0.11500000208616257, 0.11699999868869781, 0.11733333021402359, 0.11900000274181366, 0.12133333086967468, 0.1223333328962326, 0.12333333492279053, 0.12533333897590637, 0.12566666305065155, 0.12866666913032532, 0.13099999725818634, 0.1313333362340927, 0.13333334028720856, 0.13333334028720856, 0.1366666704416275, 0.1379999965429306, 0.1393333375453949, 0.14133332669734955, 0.14399999380111694, 0.14666666090488434, 0.14766666293144226, 0.14900000393390656, 0.14933332800865173, 0.15133333206176758, 0.15166667103767395, 0.15299999713897705, 0.15533334016799927, 0.15800000727176666, 0.1599999964237213, 0.1613333374261856, 0.16233333945274353, 0.16500000655651093, 0.1666666716337204, 0.16866666078567505, 0.1706666648387909]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [2, 3, 2, 3, 4, 9, 3, 5, 1, 6, 2, 2, 3, 1, 8, 0, 2, 2, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8], [1, 1, 2, 0, 2, 0, 1, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [20, 48, 49, 30, 42, 68], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 3, 3, 8, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [7, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [3, 74, 76, 58]], "fitness": -0.1599999964237213, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.3009212191519626, 2.30293586745065, 2.301943573103353, 2.3019206690167895, 2.3033669998522655, 2.301405263787893, 2.3030251196708975, 2.302224252454168, 2.301908669801137, 2.300727321613167, 2.3005827676508295, 2.3010441628996374, 2.300181429950773, 2.301778975951437, 2.300718144403079, 2.298742202042809, 2.3001241493754145, 2.3003199704492316, 2.3004145847414272, 2.300729714049608, 2.298173204373375, 2.2995840962757255, 2.3005012684903834, 2.2989215143226662, 2.2981378887276276, 2.29799475258588, 2.2979039467557265, 2.297613050549998, 2.299117614029106, 2.299981818616729, 2.2980060759410725, 2.297185013653533, 2.2983024563409584, 2.297350397104947, 2.297779296572182, 2.2961328072460367, 2.2973058331108773, 2.2953397031977287, 2.297236085016777, 2.295704146134398, 2.2960845970631967, 2.2947172761797954, 2.2949336237989915, 2.295608557194861, 2.293424532224851, 2.2937718391922313, 2.2950863397321397, 2.2954912823047366, 2.294718443709688, 2.2954582403742516, 2.29304760249693, 2.294730236501647, 2.2935544539121446, 2.2932258245573696, 2.2914958198261677, 2.2933315900433033, 2.2941835526509324, 2.292112960098694, 2.2932431245004463, 2.292432064047075, 2.2929541954133237, 2.2927444772540206, 2.2923700606046715, 2.2924420233053726, 2.2916918679503024, 2.2905344556209637, 2.290981723018027, 2.2896719425424625, 2.2910471360256106, 2.289112624207571, 2.2904345279419505, 2.2903465749155876, 2.2896993348249244, 2.2900402249283465, 2.2907616345165365, 2.2900038447283704, 2.2908300583184027, 2.290047144137196, 2.2887833246292297, 2.2885860056216454, 2.2895637467993626, 2.288155031525432, 2.288484191000186, 2.2888037339335088, 2.2887078439397364, 2.287330737408079, 2.287722638758371, 2.2882767328260565, 2.2876930140453857, 2.2877033880405326, 2.287277073514397, 2.286965535411651, 2.285572903424899, 2.286689139155664, 2.2878213268560175, 2.287291951293502, 2.2877974798650693, 2.2849916040999716, 2.286347910208772, 2.285808057234571], "accuracy": [0.09417514503002167, 0.0886276587843895, 0.09008057415485382, 0.09457138925790787, 0.08809932321310043, 0.09100515395402908, 0.09021265059709549, 0.09338264167308807, 0.09708096832036972, 0.09853387624025345, 0.09589222073554993, 0.09272222965955734, 0.1002509593963623, 0.09906221181154251, 0.09298639744520187, 0.09998679161071777, 0.09642054885625839, 0.09734513610601425, 0.09734513610601425, 0.09100515395402908, 0.10553427785634995, 0.09694888442754745, 0.09813763201236725, 0.1010434553027153, 0.10460969805717468, 0.09945846349000931, 0.09919429570436478, 0.10170386731624603, 0.10566636174917221, 0.10011887550354004, 0.10355303436517715, 0.10659094154834747, 0.10645885765552521, 0.10408136248588562, 0.10381719470024109, 0.10315678268671036, 0.10302469879388809, 0.1022322028875351, 0.10408136248588562, 0.10857218503952026, 0.10936468094587326, 0.11015717685222626, 0.1088363528251648, 0.1072513535618782, 0.11742173880338669, 0.11253467202186584, 0.11517632752656937, 0.10711926966905594, 0.10711926966905594, 0.10672302544116974, 0.11174217611551285, 0.11266675591468811, 0.11028926074504852, 0.11187426000833511, 0.11279883980751038, 0.11610091477632523, 0.11728965491056442, 0.11306300014257431, 0.11266675591468811, 0.1162329912185669, 0.11491216719150543, 0.1142517477273941, 0.11768590658903122, 0.11834631860256195, 0.10857218503952026, 0.12098798155784607, 0.11491216719150543, 0.12323339283466339, 0.11781799048185349, 0.1282525360584259, 0.11847840249538422, 0.11808215826749802, 0.12495046854019165, 0.1274600476026535, 0.12217672914266586, 0.1220446452498436, 0.12336547672748566, 0.120459645986557, 0.12019548565149307, 0.12296922504901886, 0.12455421686172485, 0.12613920867443085, 0.12468630075454712, 0.11979923397302628, 0.12151630967855453, 0.13181878626346588, 0.12812046706676483, 0.12930920720100403, 0.12917712330818176, 0.12891295552253723, 0.12640337646007538, 0.13221503794193268, 0.13419628143310547, 0.13221503794193268, 0.12336547672748566, 0.1282525360584259, 0.1302337795495987, 0.13049794733524323, 0.13419628143310547, 0.13380002975463867], "val_loss": [1.9710266249520438, 1.9708664757864816, 1.9707044192722865, 1.9705419540405273, 1.9703809193202428, 1.9702208382742745, 1.9700591904776437, 1.969897747039795, 1.9697375978742326, 1.969576358795166, 1.9694149834769112, 1.969254629952567, 1.9690935271126884, 1.9689339910234724, 1.9687707083565849, 1.968611172267369, 1.9684534754071916, 1.9682939393179757, 1.9681339263916016, 1.9679750033787318, 1.9678143092564173, 1.967653751373291, 1.9674948964800154, 1.9673340661185128, 1.9671733038766044, 1.9670147214617049, 1.966855866568429, 1.9666972160339355, 1.96653870173863, 1.9663793018886022, 1.9662188802446638, 1.9660609109061105, 1.9659006255013602, 1.9657412937709264, 1.9655819620404924, 1.9654227665492467, 1.9652622767857142, 1.9651034900120325, 1.9649457931518555, 1.9647869382585799, 1.9646295138767786, 1.9644721576145716, 1.9643145969935827, 1.9641575813293457, 1.9639989989144462, 1.9638384410313197, 1.9636797904968262, 1.9635217530386788, 1.9633618763514928, 1.9632042476109095, 1.963043212890625, 1.9628852435520716, 1.9627278191702706, 1.9625693729945592, 1.962409428187779, 1.962249755859375, 1.962089947291783, 1.961932591029576, 1.9617733274187361, 1.9616154261997767, 1.9614594323294503, 1.9613022804260254, 1.9611437661307198, 1.9609860011509486, 1.9608285086495536, 1.9606701987130302, 1.960512706211635, 1.9603541919163294, 1.9601974487304688, 1.9600394793919154, 1.9598791258675712, 1.9597202709742956, 1.9595629828316825, 1.9594069889613561, 1.959249428340367, 1.959089756011963, 1.9589298112051827, 1.9587725230625697, 1.9586138044084822, 1.95845365524292, 1.9582950047084264, 1.9581381934029716, 1.9579806327819824, 1.9578230721609933, 1.9576662608555384, 1.9575074059622628, 1.9573509352547782, 1.9571944645472936, 1.957036018371582, 1.9568799563816615, 1.956724030630929, 1.9565670830862862, 1.9564096587044852, 1.956251961844308, 1.9560952186584473, 1.9559367724827357, 1.955780369894845, 1.9556234904697962, 1.955465521131243, 1.9553088460649763], "val_accuracy": [0.03733333200216293, 0.03866666555404663, 0.03933333232998848, 0.03999999910593033, 0.04100000113248825, 0.041333332657814026, 0.041999999433755875, 0.041999999433755875, 0.043666668236255646, 0.043666668236255646, 0.043666668236255646, 0.04399999976158142, 0.04533333331346512, 0.047333333641290665, 0.04833333194255829, 0.05000000074505806, 0.050999999046325684, 0.052666667848825455, 0.05366666615009308, 0.05400000140070915, 0.054666668176651, 0.05533333495259285, 0.056333333253860474, 0.05666666850447655, 0.05766666680574417, 0.058666665107011795, 0.05900000035762787, 0.06066666543483734, 0.06266666948795319, 0.06400000303983688, 0.06566666811704636, 0.06599999964237213, 0.0676666647195816, 0.06866666674613953, 0.07199999690055847, 0.07266666740179062, 0.07333333045244217, 0.07533333450555801, 0.07733333110809326, 0.07800000160932541, 0.07999999821186066, 0.0820000022649765, 0.0846666693687439, 0.0860000029206276, 0.08699999749660492, 0.08733333647251129, 0.08833333104848862, 0.08933333307504654, 0.09033333510160446, 0.09133332967758179, 0.09399999678134918, 0.0949999988079071, 0.09533333033323288, 0.09833333641290665, 0.09966666996479034, 0.10133333504199982, 0.10266666859388351, 0.10400000214576721, 0.10466666519641876, 0.10566666722297668, 0.10700000077486038, 0.10899999737739563, 0.1106666699051857, 0.11166666448116302, 0.11266666650772095, 0.11500000208616257, 0.11699999868869781, 0.11733333021402359, 0.11900000274181366, 0.12133333086967468, 0.1223333328962326, 0.12333333492279053, 0.12533333897590637, 0.12566666305065155, 0.12866666913032532, 0.13099999725818634, 0.1313333362340927, 0.13333334028720856, 0.13333334028720856, 0.1366666704416275, 0.1379999965429306, 0.1393333375453949, 0.14133332669734955, 0.14399999380111694, 0.14666666090488434, 0.14766666293144226, 0.14900000393390656, 0.14933332800865173, 0.15133333206176758, 0.15166667103767395, 0.15299999713897705, 0.15533334016799927, 0.15800000727176666, 0.1599999964237213, 0.1613333374261856, 0.16233333945274353, 0.16500000655651093, 0.1666666716337204, 0.16866666078567505, 0.1706666648387909]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0], [2, 2, 2, 3, 4, 9, 3, 5, 4, 6, 5, 7, 2, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 7, 1, 3, 2, 9], [3, 1, 2, 2, 2, 2, 1, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [20, 48, 98, 30, 42, 68], [1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [4, 3, 3, 8, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [7, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [3, 74, 76, 58]], "fitness": -0.1599999964237213, "mapping_values": [1, 54, 54, 35, 19, 5, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 52, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.multiply(grad, tf.math.pow(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.pow(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.square(grad))))))), tf.math.add(alpha, grad)), tf.math.negative(alpha))))))))), tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.sqrt(tf.math.add(alpha, grad))), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.multiply(tf.math.negative(tf.math.add(alpha, alpha)), alpha), grad), tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, grad))))), tf.math.sqrt(grad)))), tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha))), tf.math.multiply(alpha, tf.math.add(alpha, tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.3009212191519626, 2.3029358359596213, 2.301943573103353, 2.3019206690167895, 2.3033669998522655, 2.3014052322968643, 2.3030251196708975, 2.302224252454168, 2.301908669801137, 2.300727321613167, 2.3005827676508295, 2.3010441628996374, 2.300181429950773, 2.301778975951437, 2.300718144403079, 2.29874217055178, 2.3001241808664434, 2.3003199704492316, 2.30041452175937, 2.300729682558579, 2.298173204373375, 2.299584033293668, 2.3005012999814123, 2.2989214828316373, 2.2981379517096854, 2.2979947031134738, 2.2979038837736687, 2.297613050549998, 2.299117582538077, 2.29998183212638, 2.2980060759410725, 2.297185013653533, 2.2983024563409584, 2.297350397104947, 2.2977792650811533, 2.296132901719123, 2.2973058331108773, 2.2953397031977287, 2.297236085016777, 2.295704146134398, 2.2960845835535455, 2.2947172761797954, 2.2949336237989915, 2.295608557194861, 2.293424469242794, 2.2937718077012024, 2.2950863217507624, 2.2954912823047366, 2.294718443709688, 2.2954582403742516, 2.2930476204783075, 2.294730205010618, 2.2935544224211157, 2.2932258245573696, 2.291495788335139, 2.2933316215343322, 2.2941835346695547, 2.292112928607665, 2.293243093009418, 2.292432064047075, 2.2929541954133237, 2.2927445087450495, 2.2923700291136426, 2.2924420547964015, 2.2916919309323602, 2.2905344556209637, 2.2909817680187072, 2.2896719740334914, 2.2910471360256106, 2.2891126556985997, 2.2904345594329794, 2.2903465434245587, 2.2896993663159533, 2.2900401934373176, 2.2907616974985943, 2.2900038447283704, 2.2908300583184027, 2.290047144137196, 2.288783261647172, 2.288586068603703, 2.2895637782903915, 2.288155031525432, 2.288484191000186, 2.2888037339335088, 2.2887078439397364, 2.287330737408079, 2.287722719721806, 2.288276669843999, 2.287692982554357, 2.2877034825136193, 2.2872771050054257, 2.2869655983937083, 2.2855729214062763, 2.286689139155664, 2.2878212953649886, 2.287291951293502, 2.2877974798650693, 2.2849916040999716, 2.286347878717743, 2.2858080887255996], "accuracy": [0.09417514503002167, 0.0886276587843895, 0.09008057415485382, 0.09457138925790787, 0.08809932321310043, 0.09100515395402908, 0.09021265059709549, 0.09338264167308807, 0.09708096832036972, 0.09853387624025345, 0.09589222073554993, 0.09272222965955734, 0.1002509593963623, 0.09906221181154251, 0.09298639744520187, 0.09998679161071777, 0.09642054885625839, 0.09734513610601425, 0.09734513610601425, 0.09100515395402908, 0.10553427785634995, 0.09694888442754745, 0.09813763201236725, 0.1010434553027153, 0.10460969805717468, 0.09945846349000931, 0.09919429570436478, 0.10170386731624603, 0.10566636174917221, 0.10011887550354004, 0.10355303436517715, 0.10659094154834747, 0.10645885765552521, 0.10408136248588562, 0.10381719470024109, 0.10315678268671036, 0.10302469879388809, 0.1022322028875351, 0.10408136248588562, 0.10857218503952026, 0.10936468094587326, 0.11015717685222626, 0.1088363528251648, 0.1072513535618782, 0.11742173880338669, 0.11253467202186584, 0.11517632752656937, 0.10711926966905594, 0.10711926966905594, 0.10672302544116974, 0.11174217611551285, 0.11266675591468811, 0.11028926074504852, 0.11187426000833511, 0.11279883980751038, 0.11610091477632523, 0.11728965491056442, 0.11306300014257431, 0.11266675591468811, 0.1162329912185669, 0.11491216719150543, 0.1142517477273941, 0.11768590658903122, 0.11834631860256195, 0.10857218503952026, 0.12098798155784607, 0.11491216719150543, 0.12323339283466339, 0.11781799048185349, 0.1282525360584259, 0.11847840249538422, 0.11808215826749802, 0.12495046854019165, 0.1274600476026535, 0.12217672914266586, 0.1220446452498436, 0.12336547672748566, 0.120459645986557, 0.12019548565149307, 0.12296922504901886, 0.12455421686172485, 0.12613920867443085, 0.12468630075454712, 0.11979923397302628, 0.12151630967855453, 0.13181878626346588, 0.12812046706676483, 0.12930920720100403, 0.12917712330818176, 0.12891295552253723, 0.12640337646007538, 0.13221503794193268, 0.13419628143310547, 0.13221503794193268, 0.12336547672748566, 0.1282525360584259, 0.1302337795495987, 0.13049794733524323, 0.13419628143310547, 0.13380002975463867], "val_loss": [1.9710266249520438, 1.9708664757864816, 1.9707044192722865, 1.9705419540405273, 1.9703809193202428, 1.9702208382742745, 1.9700591904776437, 1.969897883278983, 1.9697375978742326, 1.969576358795166, 1.9694149153573173, 1.969254629952567, 1.9690935271126884, 1.9689339910234724, 1.9687707083565849, 1.968611172267369, 1.9684534754071916, 1.9682939393179757, 1.9681339263916016, 1.967975071498326, 1.9678143092564173, 1.9676539557320731, 1.9674948964800154, 1.9673341342381068, 1.9671733038766044, 1.9670147214617049, 1.966855866568429, 1.9666972841535295, 1.966538633619036, 1.96637909752982, 1.9662188802446638, 1.9660609109061105, 1.9659006255013602, 1.9657412256513322, 1.9655820301600866, 1.9654227665492467, 1.9652622086661202, 1.9651034900120325, 1.9649457931518555, 1.9647868701389857, 1.9646295138767786, 1.9644721576145716, 1.9643145969935827, 1.9641575813293457, 1.9639989989144462, 1.9638383729117257, 1.9636797904968262, 1.9635217530386788, 1.9633618763514928, 1.9632041794913155, 1.963043212890625, 1.9628851754324776, 1.9627278872898646, 1.9625693729945592, 1.962409496307373, 1.962249755859375, 1.9620898791721888, 1.961932591029576, 1.9617733274187361, 1.9616154261997767, 1.9614594323294503, 1.9613022123064314, 1.9611438342503138, 1.9609860011509486, 1.9608285086495536, 1.9606702668326241, 1.960512638092041, 1.9603542600359236, 1.9601974487304688, 1.9600394793919154, 1.9598791258675712, 1.9597202709742956, 1.9595629147120885, 1.9594069889613561, 1.959249428340367, 1.959089756011963, 1.9589297430855888, 1.9587725230625697, 1.9586138044084822, 1.95845365524292, 1.9582950047084264, 1.9581381934029716, 1.9579806327819824, 1.9578230721609933, 1.9576662608555384, 1.9575074059622628, 1.9573508671351842, 1.9571943964276994, 1.957036018371582, 1.9568799563816615, 1.956724030630929, 1.9565670149666923, 1.9564097268240792, 1.9562520299639021, 1.9560952186584473, 1.9559367724827357, 1.955780369894845, 1.9556234904697962, 1.955465589250837, 1.9553087779453822], "val_accuracy": [0.03733333200216293, 0.03866666555404663, 0.03933333232998848, 0.03999999910593033, 0.04100000113248825, 0.041333332657814026, 0.041999999433755875, 0.041999999433755875, 0.043666668236255646, 0.043666668236255646, 0.043666668236255646, 0.04399999976158142, 0.04533333331346512, 0.047333333641290665, 0.04833333194255829, 0.05000000074505806, 0.050999999046325684, 0.052666667848825455, 0.05366666615009308, 0.05400000140070915, 0.054666668176651, 0.05533333495259285, 0.056333333253860474, 0.05666666850447655, 0.05766666680574417, 0.058666665107011795, 0.05900000035762787, 0.06066666543483734, 0.06266666948795319, 0.06400000303983688, 0.06566666811704636, 0.06599999964237213, 0.0676666647195816, 0.06866666674613953, 0.07199999690055847, 0.07266666740179062, 0.07333333045244217, 0.07533333450555801, 0.07733333110809326, 0.07800000160932541, 0.07999999821186066, 0.0820000022649765, 0.0846666693687439, 0.0860000029206276, 0.08699999749660492, 0.08733333647251129, 0.08833333104848862, 0.08933333307504654, 0.09033333510160446, 0.09133332967758179, 0.09399999678134918, 0.0949999988079071, 0.09533333033323288, 0.09833333641290665, 0.09966666996479034, 0.10133333504199982, 0.10266666859388351, 0.10400000214576721, 0.10466666519641876, 0.10566666722297668, 0.10700000077486038, 0.10899999737739563, 0.1106666699051857, 0.11166666448116302, 0.11266666650772095, 0.11500000208616257, 0.11699999868869781, 0.11733333021402359, 0.11900000274181366, 0.12133333086967468, 0.1223333328962326, 0.12333333492279053, 0.12533333897590637, 0.12566666305065155, 0.12866666913032532, 0.13099999725818634, 0.1313333362340927, 0.13333334028720856, 0.13333334028720856, 0.1366666704416275, 0.1379999965429306, 0.1393333375453949, 0.14133332669734955, 0.14399999380111694, 0.14666666090488434, 0.14766666293144226, 0.14900000393390656, 0.14933332800865173, 0.15133333206176758, 0.15166667103767395, 0.15299999713897705, 0.15533334016799927, 0.15800000727176666, 0.1599999964237213, 0.1613333374261856, 0.16233333945274353, 0.16500000655651093, 0.1666666716337204, 0.16866666078567505, 0.1706666648387909]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [2, 3, 2, 3, 2, 9, 3, 5, 1, 8, 5, 3, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8], [1, 1, 2, 0, 2, 0, 2, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [32, 48, 98, 30, 42, 68], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 3, 3, 8, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 0, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [41, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [3, 74, 76, 58]], "fitness": -0.1599999964237213, "mapping_values": [1, 32, 32, 21, 11, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(tf.math.add(alpha, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(grad)))))), tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(grad))))), tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.3009212191519626, 2.3029358359596213, 2.301943573103353, 2.3019206690167895, 2.303367031343294, 2.301405263787893, 2.3030250881798686, 2.302224252454168, 2.301908669801137, 2.300727321613167, 2.3005827676508295, 2.3010441628996374, 2.3001814479321503, 2.301778975951437, 2.300718144403079, 2.298742202042809, 2.3001241808664434, 2.3003198759761454, 2.300414553250399, 2.300729682558579, 2.298173235864404, 2.299584078294348, 2.3005012999814123, 2.2989214828316373, 2.2981378887276276, 2.29799475258588, 2.297903901755046, 2.297613050549998, 2.299117614029106, 2.299981863617409, 2.2980060759410725, 2.297185013653533, 2.2983024563409584, 2.297350397104947, 2.297779328063211, 2.2961328387370656, 2.2973058331108773, 2.2953397031977287, 2.297236085016777, 2.295704146134398, 2.2960845835535455, 2.2947172267073888, 2.294933637308643, 2.295608557194861, 2.2934245007338228, 2.2937718077012024, 2.2950863037693847, 2.2954912823047366, 2.294718443709688, 2.2954582403742516, 2.2930477149513937, 2.294730236501647, 2.2935544539121446, 2.2932258245573696, 2.2914958198261677, 2.2933315585522744, 2.2941835706323097, 2.29211296457042, 2.293243155991475, 2.292432064047075, 2.2929541954133237, 2.2927444772540206, 2.2923700606046715, 2.2924420547964015, 2.2916919309323602, 2.2905344556209637, 2.2909816735456205, 2.2896719740334914, 2.2910471675166395, 2.2891125612255134, 2.2904345594329794, 2.29034651193353, 2.2896993663159533, 2.2900402249283465, 2.2907616974985943, 2.2900038132373415, 2.290830026827374, 2.290047112646167, 2.2887833246292297, 2.288586068603703, 2.2895638097814204, 2.288155031525432, 2.288484191000186, 2.2888037339335088, 2.2887078439397364, 2.287330737408079, 2.287722719721806, 2.2882766068619413, 2.287692982554357, 2.2877034195315615, 2.287277073514397, 2.28696556690268, 2.285572903424899, 2.286689139155664, 2.2878212953649886, 2.287291951293502, 2.287797497846447, 2.2849916040999716, 2.2863478472267142, 2.285808057234571], "accuracy": [0.09417514503002167, 0.0886276587843895, 0.09008057415485382, 0.09457138925790787, 0.08809932321310043, 0.09100515395402908, 0.09021265059709549, 0.09338264167308807, 0.09708096832036972, 0.09853387624025345, 0.09589222073554993, 0.09272222965955734, 0.1002509593963623, 0.09906221181154251, 0.09298639744520187, 0.09998679161071777, 0.09642054885625839, 0.09734513610601425, 0.09734513610601425, 0.09100515395402908, 0.10553427785634995, 0.09694888442754745, 0.09813763201236725, 0.1010434553027153, 0.10460969805717468, 0.09945846349000931, 0.09919429570436478, 0.10170386731624603, 0.10566636174917221, 0.10011887550354004, 0.10355303436517715, 0.10659094154834747, 0.10645885765552521, 0.10408136248588562, 0.10381719470024109, 0.10315678268671036, 0.10302469879388809, 0.1022322028875351, 0.10408136248588562, 0.10857218503952026, 0.10936468094587326, 0.11015717685222626, 0.1088363528251648, 0.10738343745470047, 0.11742173880338669, 0.11253467202186584, 0.11517632752656937, 0.10711926966905594, 0.10711926966905594, 0.10672302544116974, 0.11174217611551285, 0.11266675591468811, 0.11028926074504852, 0.11187426000833511, 0.11279883980751038, 0.11610091477632523, 0.11728965491056442, 0.11306300014257431, 0.11266675591468811, 0.1162329912185669, 0.11491216719150543, 0.1142517477273941, 0.11768590658903122, 0.11834631860256195, 0.10857218503952026, 0.12098798155784607, 0.11491216719150543, 0.12323339283466339, 0.11781799048185349, 0.1282525360584259, 0.11847840249538422, 0.11808215826749802, 0.12495046854019165, 0.1274600476026535, 0.12217672914266586, 0.1220446452498436, 0.12336547672748566, 0.120459645986557, 0.12019548565149307, 0.12296922504901886, 0.12455421686172485, 0.12613920867443085, 0.12468630075454712, 0.11979923397302628, 0.12151630967855453, 0.13181878626346588, 0.12812046706676483, 0.12930920720100403, 0.12917712330818176, 0.12891295552253723, 0.12640337646007538, 0.13221503794193268, 0.13419628143310547, 0.13221503794193268, 0.12336547672748566, 0.1282525360584259, 0.1302337795495987, 0.13049794733524323, 0.13419628143310547, 0.13380002975463867], "val_loss": [1.9710266249520438, 1.9708664757864816, 1.9707044192722865, 1.9705419540405273, 1.9703809193202428, 1.9702208382742745, 1.9700592585972376, 1.969897883278983, 1.9697375978742326, 1.969576358795166, 1.9694149153573173, 1.969254629952567, 1.9690935271126884, 1.9689339910234724, 1.9687707083565849, 1.968611172267369, 1.9684534754071916, 1.9682939393179757, 1.9681339263916016, 1.967975071498326, 1.9678143773760115, 1.9676538876124792, 1.9674948283604212, 1.9673341342381068, 1.9671733038766044, 1.9670147214617049, 1.966855866568429, 1.9666972841535295, 1.966538633619036, 1.96637909752982, 1.9662188802446638, 1.9660609109061105, 1.9659006255013602, 1.9657412256513322, 1.9655820301600866, 1.9654226984296526, 1.9652622086661202, 1.9651034900120325, 1.9649457931518555, 1.9647869382585799, 1.9646294457571847, 1.9644721576145716, 1.9643145288739885, 1.9641575813293457, 1.9639989989144462, 1.9638384410313197, 1.9636797904968262, 1.9635217530386788, 1.9633618763514928, 1.9632041794913155, 1.9630430766514368, 1.9628852435520716, 1.9627278191702706, 1.9625693729945592, 1.962409496307373, 1.962249755859375, 1.9620898791721888, 1.96193265914917, 1.9617733274187361, 1.9616154261997767, 1.9614595004490443, 1.9613022804260254, 1.9611438342503138, 1.9609860011509486, 1.9608285086495536, 1.9606702668326241, 1.960512638092041, 1.9603542600359236, 1.9601974487304688, 1.9600394793919154, 1.9598791258675712, 1.9597202709742956, 1.9595629828316825, 1.9594069889613561, 1.959249428340367, 1.959089756011963, 1.9589298112051827, 1.9587725230625697, 1.958613736288888, 1.95845365524292, 1.9582950047084264, 1.9581381934029716, 1.9579806327819824, 1.9578230721609933, 1.9576662608555384, 1.9575074740818568, 1.95735079901559, 1.9571943964276994, 1.957036018371582, 1.9568799563816615, 1.956724030630929, 1.9565670149666923, 1.9564097268240792, 1.956251893724714, 1.9560952186584473, 1.9559367724827357, 1.955780369894845, 1.9556234904697962, 1.955465521131243, 1.9553089141845703], "val_accuracy": [0.03733333200216293, 0.03866666555404663, 0.03933333232998848, 0.03999999910593033, 0.04100000113248825, 0.041333332657814026, 0.041999999433755875, 0.041999999433755875, 0.043666668236255646, 0.043666668236255646, 0.043666668236255646, 0.04399999976158142, 0.04533333331346512, 0.047333333641290665, 0.04833333194255829, 0.05000000074505806, 0.050999999046325684, 0.052666667848825455, 0.05366666615009308, 0.05400000140070915, 0.054666668176651, 0.05533333495259285, 0.056333333253860474, 0.05666666850447655, 0.05766666680574417, 0.058666665107011795, 0.05900000035762787, 0.06066666543483734, 0.06266666948795319, 0.06400000303983688, 0.06566666811704636, 0.06599999964237213, 0.0676666647195816, 0.06866666674613953, 0.07199999690055847, 0.07266666740179062, 0.07333333045244217, 0.07533333450555801, 0.07733333110809326, 0.07800000160932541, 0.07999999821186066, 0.0820000022649765, 0.0846666693687439, 0.0860000029206276, 0.08699999749660492, 0.08733333647251129, 0.08833333104848862, 0.08933333307504654, 0.09033333510160446, 0.09133332967758179, 0.09399999678134918, 0.0949999988079071, 0.09533333033323288, 0.09833333641290665, 0.09966666996479034, 0.10133333504199982, 0.10266666859388351, 0.10400000214576721, 0.10466666519641876, 0.10566666722297668, 0.10700000077486038, 0.10899999737739563, 0.1106666699051857, 0.11166666448116302, 0.11266666650772095, 0.11500000208616257, 0.11699999868869781, 0.11733333021402359, 0.11900000274181366, 0.12133333086967468, 0.1223333328962326, 0.12333333492279053, 0.12533333897590637, 0.12566666305065155, 0.12866666913032532, 0.13099999725818634, 0.1313333362340927, 0.13333334028720856, 0.13333334028720856, 0.1366666704416275, 0.1379999965429306, 0.1393333375453949, 0.14133332669734955, 0.14399999380111694, 0.14666666090488434, 0.14766666293144226, 0.14900000393390656, 0.14933332800865173, 0.15133333206176758, 0.15166667103767395, 0.15299999713897705, 0.15533334016799927, 0.15800000727176666, 0.1599999964237213, 0.1613333374261856, 0.16233333945274353, 0.16500000655651093, 0.1666666716337204, 0.16866666078567505, 0.1706666648387909]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [2, 3, 2, 3, 4, 9, 3, 5, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8], [2, 1, 0, 0, 2, 2, 2, 1, 2, 2, 0, 1, 2, 0, 2, 1, 2, 2, 0, 0, 2, 1], [20, 48, 98, 30, 42, 68], [1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 3, 3, 8, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [51, 19, 41, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [0, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [64, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 5, 4, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.sqrt(tf.math.sqrt(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.3022590983482383, 2.3025851564605113, 2.3025852059329175, 2.3025852374239464, 2.3025850799688024, 2.3025850619874246], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [2, 3, 9, 3, 4, 9, 3, 3, 1, 6, 5, 7, 1, 1, 2, 1, 0, 2, 0, 0, 4, 4, 3, 1, 3, 1, 0, 2, 5, 0, 5, 2, 6, 9, 2, 1, 6, 3, 8, 7, 5, 5, 8, 2, 9], [1, 1, 2, 0, 2, 0, 1, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [20, 48, 98, 30, 42, 68], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 3, 3, 8, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [7, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [8, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [42, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302259116329616, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [2, 3, 2, 3, 4, 9, 3, 3, 1, 6, 5, 7, 2, 1, 2, 1, 0, 0, 0, 2, 0, 8, 3, 1, 3, 0, 0, 8, 5, 8], [2, 1, 2, 1, 1, 0, 2, 2, 0, 0, 0, 1, 1, 2, 2, 2, 1, 1, 0, 0, 2, 1], [81, 48, 98, 30, 42, 68], [1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 3, 3, 8, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [41, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 6, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [42, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 3, 4, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, grad), alpha)), lambda shape,  alpha, beta, grad: tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(sigma, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07515519857406616, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [2, 3, 2, 3, 4, 9, 3, 5, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8], [3, 1, 2, 0, 2, 0, 1, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [20, 48, 98, 30, 42, 68], [1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 3, 3, 8, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [7, 19, 41, 7, 45, 13], [1], [1, 1, 1], [9], [5, 1], [52], [1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [42, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 32, 32, 20, 12, 5, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(grad))))))), tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(grad))), tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.add(alpha, alpha))))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), alpha)))))))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302259116329616, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [3, 3, 2, 3, 4, 9, 3, 3, 1, 6, 5, 7, 2, 1, 2, 1, 0, 0, 0, 2, 0, 8, 3, 1, 3, 0, 0, 8, 5, 8], [2, 1, 2, 1, 1, 0, 2, 2, 0, 0, 0, 1, 1, 2, 2, 2, 1, 1, 0, 0, 2, 1], [81, 48, 98, 30, 42, 68], [1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 3, 3, 8, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [41, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [0, 1], [52], [1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 2, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [98, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 6, 5, 1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, grad))), tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), alpha))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302259116329616, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [2, 3, 2, 3, 4, 5, 4, 5, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 6, 8, 8], [1, 1, 2, 0, 2, 0, 1, 2, 2, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [20, 48, 98, 30, 42, 68], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 3, 3, 8, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [7, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 2, 2, 1, 0, 0, 2, 2], [77, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 51, 51, 33, 18, 3, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 50, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))))))))), tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.math.negative(alpha)), alpha), grad)), tf.math.sqrt(tf.math.square(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.sqrt(grad))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))), tf.math.add(alpha, alpha)))))))), tf.math.sqrt(alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [2, 3, 2, 3, 4, 9, 3, 5, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8], [2, 1, 0, 0, 2, 2, 2, 1, 2, 2, 0, 1, 2, 0, 2, 1, 2, 2, 0, 0, 2, 1], [20, 48, 98, 30, 42, 68], [1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 3, 3, 8, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [7, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [9, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [2, 3, 2, 1, 0, 0, 2, 2], [42, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302259116329616, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], [2, 9, 2, 3, 6, 9, 3, 3, 1, 8, 5, 8, 2, 6, 2, 1, 0, 0, 0, 2, 0, 4, 8, 1, 3, 0, 0, 8, 5, 0], [3, 1, 2, 0, 2, 2, 1, 2, 0, 0, 2, 2, 1, 2, 2, 1, 2, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [81, 48, 98, 30, 42, 68], [1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 3, 3, 8, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [41, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [3, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.sqrt(sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [2, 3, 2, 3, 4, 9, 3, 5, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8], [1, 1, 2, 0, 2, 0, 1, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [20, 48, 98, 30, 42, 68], [1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [4, 3, 3, 8, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [86, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 1, 2, 1, 0, 0, 2, 2], [53, 74, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.3009923398455356, 2.30317745220077, 2.302361984325989, 2.302515297360534, 2.3041360452584208, 2.302341246160896], "accuracy": [0.09391097724437714, 0.08809932321310043, 0.08875974267721176, 0.09377889335155487, 0.08717474341392517, 0.08889182657003403], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]