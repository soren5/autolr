[{"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 8, 2, 3, 4, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [3, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [76, 48, 22, 41, 42, 68], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 3, 2, 9, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.8128571510314941, "mapping_values": [1, 26, 26, 17, 9, 6, 6, 6, 4, 2, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))), grad))), tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(grad)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))), tf.math.negative(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.math.add(beta, tf.math.add(alpha, alpha)), tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.2673574202190756, 2.0617293309636358, 1.6699655853667517, 1.4333518249578228, 1.0422151496051058, 0.9185427237479694, 0.8815002655466518, 0.7835290787982399, 0.7320891193363566, 0.7304370354557428, 0.6650033703790034, 0.6464920383024965, 0.6330884379119354, 0.6000295791722339, 0.6113944922487388, 0.5807573640618925, 0.550992808928028, 0.5534623074273328, 0.5347157783669535, 0.5383841487725555, 0.4944807476198133, 0.5080622737638514, 0.49907075245587296, 0.47514661562409716, 0.4832462391455286, 0.4781421102222246, 0.4698851883230334, 0.4550745402147993, 0.44996176620106637], "accuracy": [0.25756174325942993, 0.2981112003326416, 0.4235900044441223, 0.4888390004634857, 0.5989961624145508, 0.6567164063453674, 0.6605468392372131, 0.694360077381134, 0.7181349992752075, 0.7129837274551392, 0.7454761862754822, 0.7477215528488159, 0.76106196641922, 0.7681944370269775, 0.7643640041351318, 0.7810064554214478, 0.7889314293861389, 0.7911768555641174, 0.7927618622779846, 0.7980451583862305, 0.8121780753135681, 0.8034605979919434, 0.8124422430992126, 0.8210275769233704, 0.8132346868515015, 0.819970965385437, 0.8267071843147278, 0.8330471515655518, 0.8308017253875732], "val_loss": [1.9646143913269043, 1.6426803043910436, 0.8086871079036168, 0.8053994349070958, 0.7581430843898228, 0.6304480348314557, 0.6071582010814122, 0.6044861418860299, 0.5783696515219552, 0.5353858641215733, 0.5146429368427822, 0.5256576367786953, 0.5011739219938006, 0.4678740842001779, 0.4721649544579642, 0.4681672028132847, 0.4784648929323469, 0.44537229197365896, 0.48318757329668316, 0.43779538358960834, 0.4478901284081595, 0.41934927872249056, 0.4377478872026716, 0.4005251441683088, 0.4144339987209865, 0.39373302459716797, 0.40393287794930594, 0.39360073634556364, 0.3979430283818926], "val_accuracy": [0.16300000250339508, 0.3153333365917206, 0.6676666736602783, 0.6203333139419556, 0.6779999732971191, 0.7233333587646484, 0.7269999980926514, 0.7229999899864197, 0.734666645526886, 0.7480000257492065, 0.7666666507720947, 0.7596666812896729, 0.7599999904632568, 0.7879999876022339, 0.7796666622161865, 0.7943333387374878, 0.793666660785675, 0.8113333582878113, 0.7699999809265137, 0.8176666498184204, 0.7929999828338623, 0.8203333616256714, 0.8069999814033508, 0.8323333263397217, 0.8203333616256714, 0.82833331823349, 0.8199999928474426, 0.8320000171661377, 0.824999988079071]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [5, 8, 2, 4, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [3, 1, 2, 2, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [76, 48, 22, 41, 42, 68], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 4, 5, 5, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.7919999957084656, "mapping_values": [1, 7, 7, 5, 2, 1, 7, 7, 4, 3, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.pow(grad, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(alpha, tf.math.add(beta, tf.math.pow(tf.math.square(alpha), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.031944718138574, 1.5006112499228244, 1.0896439505542952, 0.9357701916153626, 0.841424453937146, 0.7660740557253526, 0.7356299211037016, 0.7373650497008372, 0.7037858551582404, 0.6489376260651385, 0.6533268184914424, 0.6283578020454696, 0.5967994289879376, 0.6039639155878257, 0.5868185590664787, 0.5498275401538405, 0.5720444576079898, 0.5516226075470582, 0.5220274236129496, 0.5226776918100879], "accuracy": [0.3209615647792816, 0.5013868808746338, 0.6133931875228882, 0.6503764390945435, 0.6841896772384644, 0.711530864238739, 0.7189275026321411, 0.7201162576675415, 0.7292299270629883, 0.752212405204773, 0.7494386434555054, 0.7592127919197083, 0.7728173136711121, 0.7708360552787781, 0.7794214487075806, 0.793950617313385, 0.7837802171707153, 0.793950617313385, 0.7996301651000977, 0.8049134612083435], "val_loss": [1.216738564627511, 0.7890776736395699, 0.7964147669928414, 0.6444922004427228, 0.6030654907226562, 0.5881077562059674, 0.5803329944610596, 0.5644298962184361, 0.5108368737357003, 0.5611063241958618, 0.5142548935753959, 0.48678738730294363, 0.46892620835985455, 0.4659945453916277, 0.47172238145555767, 0.46868101188114714, 0.44876316615513395, 0.4546404906681606, 0.45281268869127544, 0.4426941190447126], "val_accuracy": [0.5613333582878113, 0.640333354473114, 0.6423333287239075, 0.7036666870117188, 0.7260000109672546, 0.7170000076293945, 0.7263333201408386, 0.7443333268165588, 0.7703333497047424, 0.7329999804496765, 0.7596666812896729, 0.796999990940094, 0.7960000038146973, 0.7913333177566528, 0.8019999861717224, 0.7850000262260437, 0.7943333387374878, 0.7923333048820496, 0.8003333210945129, 0.7979999780654907]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 9, 2, 2, 6, 9, 3, 1, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [3, 1, 1, 0, 2, 2, 1, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [76, 48, 22, 41, 42, 68], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 3, 5, 8, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.7825714349746704, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.1800199081522678, 1.5132646253946325, 1.197232563379749, 0.9601123474529469, 0.9028927340420592, 0.8474108892708344, 0.8170278218475552, 0.7753266630202961, 0.7562291310794318, 0.7135961087955193, 0.7108172339974865, 0.6902669235117258, 0.665093420062319, 0.6685866879875224, 0.6397668842264155, 0.6410662867153452, 0.6552980687356565, 0.6338271505371958, 0.6059126693102441, 0.6157690122174455], "accuracy": [0.27261921763420105, 0.5064060091972351, 0.5856558084487915, 0.6633205413818359, 0.6684718132019043, 0.6926429867744446, 0.694360077381134, 0.7125874757766724, 0.7177387475967407, 0.7326641082763672, 0.735041618347168, 0.739400327205658, 0.7540615797042847, 0.7534011602401733, 0.7621186375617981, 0.76542067527771, 0.7540615797042847, 0.7655527591705322, 0.7716285586357117, 0.7680623531341553], "val_loss": [1.5309039184025355, 1.0434233461107527, 0.7237546954836164, 0.7896621227264404, 0.6451360327856881, 0.6366620574678693, 0.5945318937301636, 0.5861093146460397, 0.5488507747650146, 0.5857793092727661, 0.5306750365665981, 0.5254891429628644, 0.5246876307896206, 0.5122190202985492, 0.5021613495690482, 0.531549198286874, 0.49844203676496235, 0.4894628013883318, 0.493387051991054, 0.49785397733960834], "val_accuracy": [0.578000009059906, 0.5360000133514404, 0.7046666741371155, 0.637666642665863, 0.7110000252723694, 0.7163333296775818, 0.734000027179718, 0.734333336353302, 0.7643333077430725, 0.7456666827201843, 0.7506666779518127, 0.7699999809265137, 0.765333354473114, 0.7710000276565552, 0.7853333353996277, 0.7506666779518127, 0.7713333368301392, 0.7786666750907898, 0.7820000052452087, 0.7720000147819519]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 4, 3, 3, 1, 9, 5, 9, 1, 2, 5, 7, 3, 2, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8], [3, 1, 1, 0, 2, 2, 1, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [81, 48, 98, 81, 42, 68], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 3, 2, 9, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [29, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 4, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.7808571457862854, "mapping_values": [1, 11, 11, 6, 5, 2, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), alpha)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), grad))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, alpha))), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.1800199620964, 1.5130266880456877, 1.1977086851562506, 0.9561965977747238, 0.9047534254721175, 0.8542625796935026, 0.8179491181116, 0.7775893036353354, 0.7575709983468324, 0.7138697491849749, 0.7141124388608225, 0.6919436959810323, 0.6667224311274371, 0.6705777401842886, 0.6376916535573629, 0.645619789197728, 0.6518606715403245, 0.6441656657969553, 0.6101689540935215, 0.6106991855585816], "accuracy": [0.27261921763420105, 0.5066701769828796, 0.587372899055481, 0.6609430909156799, 0.6740192770957947, 0.6964733600616455, 0.6947563290596008, 0.7145687341690063, 0.7177387475967407, 0.7292299270629883, 0.733060359954834, 0.7388719916343689, 0.7515519857406616, 0.7518161535263062, 0.7626469135284424, 0.7598732113838196, 0.7594769597053528, 0.7569673657417297, 0.7691190242767334, 0.7736098170280457], "val_loss": [1.530904701777867, 1.044811419078282, 0.7233064004353115, 0.7787996871130807, 0.6417308705193656, 0.624622140611921, 0.5911292178290231, 0.5841404710497174, 0.5540578705923898, 0.5896737234933036, 0.5345841646194458, 0.5262689079557147, 0.519905584199088, 0.5104093211037772, 0.5006705352238247, 0.5160761220114571, 0.49867308139801025, 0.4948979105268206, 0.4991542952401297, 0.5062082324709211], "val_accuracy": [0.578000009059906, 0.5360000133514404, 0.703000009059906, 0.6473333239555359, 0.7210000157356262, 0.7183333039283752, 0.734333336353302, 0.7423333525657654, 0.7536666393280029, 0.7426666617393494, 0.7526666522026062, 0.7663333415985107, 0.765666663646698, 0.7666666507720947, 0.7803333401679993, 0.768666684627533, 0.7696666717529297, 0.7789999842643738, 0.7793333530426025, 0.7603333592414856]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 8, 2, 8, 5, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [3, 2, 1, 0, 2, 2, 1, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [80, 48, 98, 81, 42, 68], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 3, 2, 9, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 2, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [4, 74, 76, 58]], "fitness": -0.7734285593032837, "mapping_values": [1, 10, 10, 8, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.sqrt(tf.math.square(grad)), tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.294450575885614, 2.274174009158611, 2.2521816648433646, 2.2254463945791123, 2.1966019806655925, 2.1547355592022512, 2.102276624548059, 2.0335274734013367, 1.954116145727767, 1.8601449390270801, 1.758734145641264, 1.6658040536093974, 1.5604111778737688, 1.4711299596634586, 1.3991658981087942, 1.3317500811683787, 1.2796689896866347, 1.241147313324562, 1.1928093329617186, 1.167352029723325, 1.1326188964299586, 1.1004524823618194, 1.0820209949149777, 1.0485950841123968, 1.0289284398983718, 1.0137889629829955, 0.9934604542917658, 0.9823256694661187, 0.9723289928668053, 0.951182527848207, 0.9360409655575392, 0.9406343643471015, 0.9118469876226512, 0.9055282178886845, 0.9038615337436572, 0.8847965401366181, 0.8777514955843476, 0.869320353457421, 0.8576084819404975, 0.8600162496073623, 0.8401121265852629, 0.8454413814331169, 0.8362128546429726, 0.8314538830385673, 0.8203985720908307, 0.8246646466476885, 0.8121563666107129, 0.8037081801770086, 0.814743524623695, 0.7999892658514038, 0.7977062863066621, 0.7889051213083077, 0.7903592388281308, 0.7753194893954247, 0.7750436043254357, 0.7816123545461122, 0.7741833098922597, 0.7628933536756024, 0.7579869293439122, 0.7626131195921892, 0.7581363856013047, 0.7481199186460107, 0.7466935687659675, 0.7382165730715963, 0.7379893448059632, 0.7446752868906665, 0.7478651944294488, 0.737890322627865, 0.7307621565209624, 0.7224021386775862, 0.7226023290135589, 0.7192863044784746, 0.7256673382903449, 0.714605765800277, 0.7144999435045275, 0.7061528523899482, 0.7030036494228361, 0.7035492812133878, 0.7152693120165114, 0.697105660816115, 0.7046352192206453, 0.701319589268152, 0.690827050284309, 0.6880841942479692, 0.6955139192654992, 0.6899390999651415, 0.6790823964489417, 0.6889275760304864, 0.6860320158858797, 0.6786017942863165, 0.6777950168096819, 0.678368181623976, 0.6756935868643027, 0.6727982020066352, 0.6734125081023142, 0.6668425461619585, 0.6807651630387629, 0.6741769273976105, 0.6693042691404857, 0.6639281255127243], "accuracy": [0.108440101146698, 0.16523577272891998, 0.218465194106102, 0.2712983787059784, 0.3086778521537781, 0.34566107392311096, 0.38409721851348877, 0.40285298228263855, 0.4262316823005676, 0.4493461847305298, 0.474970281124115, 0.4826310873031616, 0.5049530863761902, 0.5287280678749084, 0.5444459319114685, 0.5538238286972046, 0.5645225048065186, 0.5775987505912781, 0.5852595567703247, 0.588297426700592, 0.6103553175926208, 0.617751955986023, 0.6172236204147339, 0.6324131488800049, 0.6408664584159851, 0.6436402201652527, 0.6510368585586548, 0.6518293619155884, 0.6588297486305237, 0.663848876953125, 0.6682076454162598, 0.6651697158813477, 0.6749438643455505, 0.6778497099876404, 0.6803592443466187, 0.6859067678451538, 0.6848500967025757, 0.6877558827400208, 0.698190450668335, 0.6870955228805542, 0.6960771083831787, 0.6960771083831787, 0.7009642124176025, 0.7029454708099365, 0.7047945857048035, 0.7003037929534912, 0.7028133869171143, 0.7113987803459167, 0.7091533541679382, 0.711530864238739, 0.7100779414176941, 0.711530864238739, 0.7177387475967407, 0.718399167060852, 0.7160216569900513, 0.7149649858474731, 0.7228899598121643, 0.7244749665260315, 0.7252674698829651, 0.7259278893470764, 0.719852089881897, 0.7272487282752991, 0.7239466309547424, 0.7326641082763672, 0.7271166443824768, 0.7281733155250549, 0.7312111854553223, 0.7283053994178772, 0.7321357727050781, 0.7296261787414551, 0.733588695526123, 0.7292299270629883, 0.7341170310974121, 0.7374191284179688, 0.7396644949913025, 0.7400607466697693, 0.7452120184898376, 0.7405890822410583, 0.737022876739502, 0.7450799345970154, 0.7362303733825684, 0.7432307600975037, 0.7452120184898376, 0.7494386434555054, 0.7397965788841248, 0.752212405204773, 0.7486461400985718, 0.7481178045272827, 0.7470611333847046, 0.7498348951339722, 0.748249888420105, 0.7510236501693726, 0.7515519857406616, 0.7493065595626831, 0.752212405204773, 0.7573636174201965, 0.7498348951339722, 0.7531369924545288, 0.7504953145980835, 0.7543256878852844], "val_loss": [1.9520582471575056, 1.9324470928737096, 1.9099183763776506, 1.882631438119071, 1.8487358093261719, 1.8048417908804757, 1.7486238479614258, 1.677445684160505, 1.591350487300328, 1.4928132465907507, 1.3890701362064906, 1.2881386280059814, 1.1923722539629256, 1.1077165263039725, 1.0374782085418701, 0.9799690587180001, 0.9311002663203648, 0.8919410705566406, 0.8574951546532767, 0.8294720990317208, 0.804576073374067, 0.7827367612293789, 0.7640346799577985, 0.7459312507084438, 0.7320274625505719, 0.7186591795512608, 0.706456048148019, 0.6955783878053937, 0.6866272347314017, 0.6768488883972168, 0.6713447741099766, 0.6615411213466099, 0.6549588101250785, 0.6471091168267387, 0.6417736155646188, 0.6364677803856986, 0.63176919732775, 0.6263820103236607, 0.6196040425981794, 0.6158633061817714, 0.6117976563317435, 0.6073057992117745, 0.6040657929011753, 0.6003338779721942, 0.5976643221718925, 0.5944510868617466, 0.5910808188574654, 0.5867803607668195, 0.5847233193261283, 0.5810071400233677, 0.5774529831750053, 0.5758002144949776, 0.5720428568976266, 0.5694018091474261, 0.5668809073311942, 0.5648608037403652, 0.5615154334477016, 0.5587754760469709, 0.5578415393829346, 0.5571615525654384, 0.554292116846357, 0.5521810906273978, 0.5509139980588641, 0.5483389581952777, 0.5457058293478829, 0.547562803540911, 0.5446299314498901, 0.5414394310542515, 0.5416181938988822, 0.5381886959075928, 0.5356506449835641, 0.5335610253470284, 0.5338210378374372, 0.5312194994517735, 0.5289394174303327, 0.5287742444447109, 0.5267485720770699, 0.5250024284635272, 0.5245193924222674, 0.5223235062190464, 0.5213171584265572, 0.5215321608952114, 0.5188534940992083, 0.5169158152171544, 0.5174857718603951, 0.5138934850692749, 0.5132852281842913, 0.5128499950681414, 0.5120184762137276, 0.5103325162615094, 0.5097067356109619, 0.5075178827558245, 0.5071014165878296, 0.5052340030670166, 0.5045253208705357, 0.5037440572466169, 0.503611513546535, 0.501685346875872, 0.5002074922834124, 0.49886458260672434], "val_accuracy": [0.20100000500679016, 0.3233333230018616, 0.3813333213329315, 0.42233332991600037, 0.45366665720939636, 0.4816666543483734, 0.5043333172798157, 0.5263333320617676, 0.5396666526794434, 0.5519999861717224, 0.5659999847412109, 0.578000009059906, 0.5979999899864197, 0.6259999871253967, 0.6370000243186951, 0.6579999923706055, 0.67166668176651, 0.6746666431427002, 0.6866666674613953, 0.6869999766349792, 0.6933333277702332, 0.6973333358764648, 0.6976666450500488, 0.7036666870117188, 0.7120000123977661, 0.7120000123977661, 0.7136666774749756, 0.7170000076293945, 0.7173333168029785, 0.721666693687439, 0.7223333120346069, 0.7279999852180481, 0.7310000061988831, 0.7329999804496765, 0.734666645526886, 0.7353333234786987, 0.7329999804496765, 0.7383333444595337, 0.7409999966621399, 0.7400000095367432, 0.7386666536331177, 0.7419999837875366, 0.7433333396911621, 0.7419999837875366, 0.7426666617393494, 0.7436666488647461, 0.7463333606719971, 0.7459999918937683, 0.746666669845581, 0.7509999871253967, 0.7519999742507935, 0.7546666860580444, 0.753000020980835, 0.7509999871253967, 0.7513333559036255, 0.7523333430290222, 0.7549999952316284, 0.7576666474342346, 0.7563333511352539, 0.7580000162124634, 0.7576666474342346, 0.7549999952316284, 0.7586666941642761, 0.7593333125114441, 0.7596666812896729, 0.7599999904632568, 0.7630000114440918, 0.7580000162124634, 0.7609999775886536, 0.7586666941642761, 0.7649999856948853, 0.7609999775886536, 0.7633333206176758, 0.7673333287239075, 0.765666663646698, 0.7583333253860474, 0.7649999856948853, 0.7646666765213013, 0.7689999938011169, 0.7666666507720947, 0.7666666507720947, 0.7649999856948853, 0.7710000276565552, 0.768666684627533, 0.7683333158493042, 0.7716666460037231, 0.7696666717529297, 0.7696666717529297, 0.7696666717529297, 0.7703333497047424, 0.7733333110809326, 0.7733333110809326, 0.7736666798591614, 0.7716666460037231, 0.7710000276565552, 0.7756666541099548, 0.7723333239555359, 0.7736666798591614, 0.7763333320617676, 0.7749999761581421]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 8, 2, 3, 4, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [3, 1, 2, 0, 0, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [76, 48, 22, 41, 95, 68, 6, 88], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 3, 2, 9, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.7645714282989502, "mapping_values": [1, 31, 31, 21, 10, 8, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.multiply(grad, tf.math.pow(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))), grad))), tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.negative(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), tf.math.square(grad)))))), tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.negative(tf.math.add(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(alpha, tf.math.add(beta, tf.math.multiply(tf.math.add(alpha, tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.182148964193125, 1.4966111890297555, 1.171741245948974, 1.0265305532188527, 0.885228319946549, 0.8531244041708403, 0.7986000456735679, 0.7779630918339684, 0.7400829141811688, 0.7212793675270126, 0.715170610110049, 0.6858835473682241, 0.6816493101470176, 0.6755680355570965, 0.666359011121729, 0.6552742470241321], "accuracy": [0.2759212851524353, 0.5178972482681274, 0.5812970399856567, 0.6250165104866028, 0.6833971738815308, 0.6848500967025757, 0.7022850513458252, 0.7116629481315613, 0.7207766771316528, 0.7248712182044983, 0.7235503792762756, 0.7400607466697693, 0.7380794882774353, 0.7415136694908142, 0.7490423917770386, 0.752740740776062], "val_loss": [1.5400472709110804, 0.9774976457868304, 0.7815791368484497, 0.697597895349775, 0.6175272464752197, 0.6002339976174491, 0.6299050365175519, 0.5986830847603934, 0.5883605480194092, 0.5632937295096261, 0.5422417095729283, 0.5309159074510846, 0.5478274311338153, 0.5464837551116943, 0.5287887709481376, 0.5227188042231968], "val_accuracy": [0.5699999928474426, 0.659333348274231, 0.6493333578109741, 0.6990000009536743, 0.7319999933242798, 0.7323333621025085, 0.7089999914169312, 0.7160000205039978, 0.7323333621025085, 0.7443333268165588, 0.7670000195503235, 0.7643333077430725, 0.7473333477973938, 0.7419999837875366, 0.7636666893959045, 0.7596666812896729]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 5, 3, 3, 4, 9, 5, 9, 1, 2, 5, 7, 3, 2, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8], [3, 1, 1, 0, 2, 2, 1, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [76, 48, 98, 81, 42, 68], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 3, 2, 3, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 2, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 2, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.7622857093811035, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, beta)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.1836322526638265, 1.5053067108139686, 1.177338602599246, 1.0162728308702362, 0.8848942310078552, 0.846143832154451, 0.7995875507786038, 0.7780489144607416, 0.7412924292364361, 0.7149589431284283, 0.7217061390273402, 0.685593818881335, 0.6794671441869115, 0.678990170239552, 0.665949230944523, 0.660148562913904], "accuracy": [0.27605336904525757, 0.5182934999465942, 0.5749570727348328, 0.6336019039154053, 0.6847180128097534, 0.6876237988471985, 0.6997754573822021, 0.7116629481315613, 0.7205125093460083, 0.7306828498840332, 0.7217012047767639, 0.7430986762046814, 0.7408532500267029, 0.7395324110984802, 0.7499669790267944, 0.7515519857406616], "val_loss": [1.5523592403956823, 0.8913093635014125, 0.8026999746050153, 0.7094283614839826, 0.6333232607160296, 0.5975221395492554, 0.6254177604402814, 0.6081967013222831, 0.5890524727957589, 0.5778752735682896, 0.5443089859826225, 0.5333750929151263, 0.5479401690619332, 0.5463802644184658, 0.5338939258030483, 0.5201859985079084], "val_accuracy": [0.5669999718666077, 0.6263333559036255, 0.6453333497047424, 0.6970000267028809, 0.7256666421890259, 0.734666645526886, 0.7076666951179504, 0.7120000123977661, 0.731333315372467, 0.7226666808128357, 0.7683333158493042, 0.7609999775886536, 0.7413333058357239, 0.7406666874885559, 0.7609999775886536, 0.765666663646698]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 8, 8, 8, 4, 8, 3, 8, 1, 6, 5, 7, 3, 1, 8, 9, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [3, 2, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [76, 41, 22, 5, 42, 68], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 3, 2, 9, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 2, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [3, 74, 76, 58]], "fitness": -0.758571445941925, "mapping_values": [1, 24, 24, 16, 8, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(grad)))), tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.subtract(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), grad)), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.2952559878561303, 2.276973244347482, 2.2575615142330503, 2.234515063247157, 2.2107831802602456, 2.176999148124591, 2.135763420735557, 2.0819272425007496, 2.0202025743822585, 1.945311986255356, 1.8601874149612478, 1.7763292673414788, 1.6760151939400907, 1.5844525183196616, 1.505117080907906, 1.428981876896042, 1.368269887503978, 1.321498720668893, 1.266586692798344, 1.236715774809475, 1.1970249887439222, 1.1611780845541066, 1.1391501783962499, 1.1032932658063863, 1.0802879347824512, 1.0625300914257776, 1.039770499117827, 1.0269545033591818, 1.0151237330936154, 0.9931518123165932, 0.974946382094242, 0.9787493537461454, 0.9486558900265536, 0.9409881337774492, 0.938629603727603, 0.9183121512689139, 0.9097530021486092, 0.9000201011141766, 0.8872381976063005, 0.8897569108365188, 0.8685344573198418, 0.8727269027573542, 0.8634769162875376, 0.8577028042636197, 0.8465372403425988, 0.850944860697013, 0.8374915438368493, 0.8282002502381447, 0.8392455318600447, 0.8236228988753522, 0.8209445328917785, 0.8119214744206354, 0.8128302342163306, 0.7973716440154829, 0.797955787326713, 0.803320680256958, 0.7952834008911802, 0.7847972436115616, 0.7786370794833879, 0.7832088931251463, 0.7790217236158729, 0.7686323772615461, 0.7671342259463602, 0.7588659364549538, 0.7579720984549492, 0.7646314624026309, 0.7678180709412352, 0.7573201353240401, 0.7492933503278667, 0.7412885751360206, 0.7424545465616612, 0.7381016278090557, 0.744306594153059, 0.7328614841961133, 0.7329143564998041, 0.7251405261290654], "accuracy": [0.1080438494682312, 0.15797120332717896, 0.2071060687303543, 0.2546559274196625, 0.29401662945747375, 0.32518821954727173, 0.36481308937072754, 0.3831726312637329, 0.4091929793357849, 0.4278166592121124, 0.45806366205215454, 0.46189406514167786, 0.4819706678390503, 0.5056135058403015, 0.524501383304596, 0.5324263572692871, 0.5462950468063354, 0.5551446080207825, 0.5653150081634521, 0.5709945559501648, 0.5926561951637268, 0.5996565818786621, 0.5999207496643066, 0.6166952848434448, 0.6272619366645813, 0.62660151720047, 0.6371681690216064, 0.637432336807251, 0.6448289752006531, 0.6518293619155884, 0.6540747880935669, 0.6556597352027893, 0.6637167930603027, 0.6659622192382812, 0.6707172393798828, 0.6745476126670837, 0.6740192770957947, 0.6814159154891968, 0.689869225025177, 0.6765288710594177, 0.6881521344184875, 0.6865671873092651, 0.6893408894538879, 0.6952846646308899, 0.6964733600616455, 0.6940959095954895, 0.6972658634185791, 0.7030775547027588, 0.7021529674530029, 0.7024171352386475, 0.7028133869171143, 0.7053229212760925, 0.7103421092033386, 0.7123233675956726, 0.7099458575248718, 0.7077004313468933, 0.715889573097229, 0.7180029153823853, 0.7186633348464966, 0.7174745798110962, 0.7149649858474731, 0.7199841737747192, 0.719852089881897, 0.7263241410255432, 0.7199841737747192, 0.7220974564552307, 0.7253995537757874, 0.7230220437049866, 0.7265883088111877, 0.7239466309547424, 0.7269845604896545, 0.7220974564552307, 0.7290979027748108, 0.7331924438476562, 0.7349095344543457, 0.7363624572753906], "val_loss": [1.9538966587611608, 1.9363340650285994, 1.9167332649230957, 1.893710000174386, 1.8661939076014928, 1.8315113612583704, 1.7878460202898299, 1.7328550474984306, 1.6658810547419958, 1.5867313316890173, 1.4982872009277344, 1.4061145101274763, 1.3125298363821847, 1.222484792981829, 1.1422978809901647, 1.0735253947121757, 1.0142293316977364, 0.9654007298605782, 0.9235310554504395, 0.8890141759599958, 0.8584533418927874, 0.8317802803856986, 0.8087265832083566, 0.7869543518338885, 0.7697598252977643, 0.753711427961077, 0.739273054259164, 0.7265149014336723, 0.7157003709248134, 0.7044611147471836, 0.6968999249594552, 0.6865518944604057, 0.6790583644594465, 0.6706173590251377, 0.6640554325921195, 0.6578410352979388, 0.6522162130900792, 0.6463066850389753, 0.6387737648827689, 0.6342050518308368, 0.6296104192733765, 0.6248740979603359, 0.6210395778928485, 0.6168860026768276, 0.6137802600860596, 0.6103259835924421, 0.6064737354006086, 0.6020747593470982, 0.5999399764197213, 0.5960711070469448, 0.5924028328486851, 0.5900178807122367, 0.5863953828811646, 0.5832644530705043, 0.5806704589298793, 0.5786566734313965, 0.575264402798244, 0.5721747704914638, 0.571151614189148, 0.5700010061264038, 0.5671675034931728, 0.5648895161492484, 0.56339202608381, 0.5607625927243914, 0.5580634219305856, 0.5593018191201347, 0.5566652161734444, 0.5535440104348319, 0.5534154517310006, 0.5502652781350272, 0.5477443592888969, 0.5453079257692609, 0.5452625751495361, 0.542575546673366, 0.540524056979588, 0.5399632624217442], "val_accuracy": [0.18833333253860474, 0.312333345413208, 0.3700000047683716, 0.40833333134651184, 0.44200000166893005, 0.4636666774749756, 0.4880000054836273, 0.512333333492279, 0.5316666960716248, 0.5419999957084656, 0.5529999732971191, 0.5609999895095825, 0.5759999752044678, 0.5946666598320007, 0.6029999852180481, 0.6296666860580444, 0.6543333530426025, 0.6610000133514404, 0.6713333129882812, 0.6759999990463257, 0.6823333501815796, 0.6880000233650208, 0.6930000185966492, 0.6966666579246521, 0.7003333568572998, 0.7036666870117188, 0.7070000171661377, 0.7096666693687439, 0.7129999995231628, 0.7149999737739563, 0.7143333554267883, 0.7200000286102295, 0.7223333120346069, 0.7260000109672546, 0.7286666631698608, 0.7266666889190674, 0.7300000190734863, 0.7319999933242798, 0.7326666712760925, 0.7353333234786987, 0.7356666922569275, 0.737333357334137, 0.7403333187103271, 0.7403333187103271, 0.7403333187103271, 0.7423333525657654, 0.7423333525657654, 0.7409999966621399, 0.7433333396911621, 0.7443333268165588, 0.7453333139419556, 0.746666669845581, 0.7463333606719971, 0.7459999918937683, 0.7473333477973938, 0.746666669845581, 0.75, 0.753000020980835, 0.7543333172798157, 0.7546666860580444, 0.7536666393280029, 0.7513333559036255, 0.7573333382606506, 0.753000020980835, 0.7576666474342346, 0.7580000162124634, 0.7609999775886536, 0.7563333511352539, 0.7599999904632568, 0.7566666603088379, 0.7620000243186951, 0.7593333125114441, 0.7599999904632568, 0.7590000033378601, 0.7590000033378601, 0.7566666603088379]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [5, 8, 2, 3, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [3, 1, 2, 2, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [81, 48, 98, 25, 93, 68, 38], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 5, 2, 9, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.492000013589859, "mapping_values": [1, 7, 7, 6, 1, 2, 6, 6, 4, 2, 1, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.add(alpha, grad), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(alpha, tf.math.add(beta, tf.math.square(tf.math.add(alpha, tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), sigma)", "other_info": {"loss": [2.6826361895016926, 2.164741847698069, 2.2002264254790065, 2.3043286772042597, 2.3034611323947023, 2.3029635286664982, 2.26893809042933], "accuracy": [0.18121780455112457, 0.2339189052581787, 0.2024831622838974, 0.10302469879388809, 0.09813763201236725, 0.10130762308835983, 0.16351869702339172], "val_loss": [1.9504937444414412, 1.521686622074672, 1.9749110085623605, 1.9739988871983118, 1.9736193248203822, 1.9728236879621233, 1.5351836681365967], "val_accuracy": [0.10766666382551193, 0.4896666705608368, 0.10566666722297668, 0.09833333641290665, 0.09666666388511658, 0.09666666388511658, 0.41333332657814026]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 8, 2, 0, 5, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [1, 1, 1, 1, 2, 2, 1, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [76, 48, 22, 41, 42, 68], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 3, 2, 9, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 2, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [3, 74, 76, 58]], "fitness": -0.16028571128845215, "mapping_values": [1, 8, 8, 6, 2, 1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(alpha)), tf.math.add(tf.math.add(alpha, alpha), tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.add(alpha, beta)), tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.3028591701682406, 2.30271926840708, 2.3028216433484148, 2.3021284041545176, 2.3037877091957104, 2.3029748725853323, 2.302414520211019, 2.301339129289348, 2.301569354627048, 2.3008022076575636, 2.3011631615771875, 2.3015738124341034, 2.2996001703990148, 2.2993681524030096, 2.2994026295686236, 2.300569319879343, 2.3005424347284085, 2.301371346595753, 2.2997746065134983, 2.2997792559119734, 2.299239687616673, 2.299210196772051, 2.298939422294527, 2.2979701021958054, 2.298072380774592, 2.298730374894138, 2.2977981120210202, 2.2982098748261635, 2.2973537885312942, 2.2996254034046135, 2.296358124140058, 2.298488495356497, 2.297533588166313, 2.2967516649762922, 2.2969397074195923, 2.2971962105092625, 2.296936850458986, 2.2959352328777, 2.2963604284646, 2.2962818275809904, 2.295629020096871, 2.2951989801190456, 2.2959166062175793, 2.2942308221652508, 2.29672367918241, 2.296659619060915, 2.2950873436661383, 2.2947623377006288, 2.294599147536389, 2.2941272932036743, 2.29398469344862, 2.2939962015931696, 2.2931214521715684, 2.29379453836667, 2.2935666467976246, 2.293120903660829, 2.2919888366026067, 2.293319237214888, 2.2923783847542802, 2.292941259811929, 2.2924771942183515, 2.292284713964799, 2.292167406009094, 2.2915128028435303, 2.2909144354754623, 2.2911483796202448, 2.292027554507615, 2.2907140176876615, 2.291237327448208, 2.2896168259361307, 2.2897103787917095, 2.289925214935996, 2.2914254434230603, 2.289963114924513, 2.2908278894997576, 2.2900952097447225, 2.290342024524907, 2.289695393596705, 2.2898626547007117, 2.2890278390212506, 2.289811054508621, 2.2893892190459852, 2.287730300966554, 2.2881434856861214, 2.2890777040261634, 2.2874795076097905, 2.287440805135386, 2.287882358170362, 2.2884632925142654, 2.288480823286583, 2.2882680890739966, 2.286736180706425, 2.286592829008585, 2.2863361115594816, 2.2859367709889815, 2.286526950280176, 2.2869229598241225, 2.287025742416825, 2.2861478338781964, 2.2852264772930857], "accuracy": [0.08849557489156723, 0.09021265059709549, 0.09417514503002167, 0.0944393053650856, 0.09549596905708313, 0.09800554811954498, 0.09166556596755981, 0.09509972482919693, 0.09668471664190292, 0.09021265059709549, 0.09259014576673508, 0.0944393053650856, 0.1022322028875351, 0.0886276587843895, 0.0944393053650856, 0.10011887550354004, 0.09140139818191528, 0.09325055778026581, 0.1018359512090683, 0.10130762308835983, 0.09906221181154251, 0.09681680053472519, 0.09721305221319199, 0.09879804402589798, 0.09774138033390045, 0.09800554811954498, 0.09879804402589798, 0.10091137140989304, 0.10236428678035736, 0.10051512718200684, 0.10540219396352768, 0.10011887550354004, 0.10513802617788315, 0.09985470771789551, 0.09906221181154251, 0.09826971590518951, 0.10593052208423615, 0.10315678268671036, 0.10249637067317963, 0.10474177449941635, 0.11213842034339905, 0.1072513535618782, 0.1088363528251648, 0.10672302544116974, 0.10513802617788315, 0.10500594228506088, 0.10857218503952026, 0.10936468094587326, 0.11689341068267822, 0.1088363528251648, 0.10751552134752274, 0.11319508403539658, 0.1146479994058609, 0.11081759631633759, 0.10698718577623367, 0.11438383162021637, 0.11293092370033264, 0.11055342853069305, 0.11187426000833511, 0.11676132678985596, 0.11847840249538422, 0.11345925182104111, 0.11821424216032028, 0.11900673806667328, 0.11279883980751038, 0.11913882195949554, 0.11874257028102875, 0.12415797263383865, 0.11174217611551285, 0.11662924289703369, 0.1220446452498436, 0.11834631860256195, 0.12059172987937927, 0.12059172987937927, 0.12098798155784607, 0.12098798155784607, 0.11332716792821884, 0.12402588874101639, 0.1274600476026535, 0.12376172095537186, 0.1228371411561966, 0.12521463632583618, 0.1302337795495987, 0.13419628143310547, 0.12772421538829803, 0.12600713968276978, 0.12798838317394257, 0.12719587981700897, 0.12957337498664856, 0.12230881303548813, 0.12534672021865845, 0.13313961029052734, 0.12996962666511536, 0.13895125687122345, 0.13313961029052734, 0.12759213149547577, 0.1294412910938263, 0.13234710693359375, 0.1328754425048828, 0.12930920720100403], "val_loss": [1.971026829310826, 1.9708659989493233, 1.970705168587821, 1.970543384552002, 1.9703820092337472, 1.9702198845999581, 1.9700592585972376, 1.969897951398577, 1.9697378703526087, 1.9695769037519182, 1.969416550227574, 1.969257082257952, 1.9690967287336076, 1.9689349446977888, 1.9687750680106026, 1.9686142376491003, 1.9684538841247559, 1.9682950292314803, 1.9681350163051061, 1.9679759570530482, 1.9678152629307337, 1.9676556587219238, 1.9674959182739258, 1.9673363140651159, 1.9671784128461565, 1.9670182636805944, 1.9668592044285365, 1.9666987827845983, 1.9665398597717285, 1.9663818223135812, 1.9662247385297502, 1.9660662923540388, 1.9659063475472587, 1.96574980872018, 1.965590136391776, 1.965430668422154, 1.9652714048113142, 1.9651135035923548, 1.9649554661342077, 1.9647973605564661, 1.964637347630092, 1.9644774028233118, 1.9643169811793737, 1.9641575813293457, 1.963998453957694, 1.9638396671840124, 1.9636784281049455, 1.963520118168422, 1.963362421308245, 1.9632041794913155, 1.9630464826311385, 1.9628862653459822, 1.962728840964181, 1.9625699860709054, 1.9624102456229073, 1.9622528212411063, 1.9620934213910783, 1.9619345664978027, 1.9617773464747839, 1.961620535169329, 1.9614622252328056, 1.96130405153547, 1.9611459459577287, 1.9609866823468889, 1.9608281680515833, 1.9606708799089705, 1.96051481791905, 1.9603582790919714, 1.960200309753418, 1.960042953491211, 1.9598824637276786, 1.959724290030343, 1.959566525050572, 1.9594077382768904, 1.9592492239815849, 1.9590915952410017, 1.9589321953909737, 1.9587757246834892, 1.9586170060294015, 1.9584595135280065, 1.9583005223955428, 1.9581437792096819, 1.957986831665039, 1.9578272274562292, 1.9576703480311803, 1.957512310573033, 1.9573544093540736, 1.9571971893310547, 1.9570409229823522, 1.9568829536437988, 1.9567250524248396, 1.9565652438572474, 1.9564072745186942, 1.9562501907348633, 1.9560926301138741, 1.9559344564165388, 1.9557767595563615, 1.955618177141462, 1.9554599353245325, 1.9552997180393763], "val_accuracy": [0.03733333200216293, 0.03866666555404663, 0.03933333232998848, 0.0403333343565464, 0.04100000113248825, 0.041333332657814026, 0.0416666679084301, 0.041999999433755875, 0.043666668236255646, 0.043666668236255646, 0.043666668236255646, 0.04399999976158142, 0.04533333331346512, 0.047333333641290665, 0.04866666719317436, 0.05000000074505806, 0.05133333429694176, 0.052666667848825455, 0.05366666615009308, 0.05400000140070915, 0.054666668176651, 0.055666666477918625, 0.056333333253860474, 0.05700000002980232, 0.05833333358168602, 0.05833333358168602, 0.059333331882953644, 0.06199999898672104, 0.06300000101327896, 0.06400000303983688, 0.06533333659172058, 0.06599999964237213, 0.06733333319425583, 0.06933332979679108, 0.07199999690055847, 0.07266666740179062, 0.07333333045244217, 0.07533333450555801, 0.07733333110809326, 0.07800000160932541, 0.08033332973718643, 0.08299999684095383, 0.0846666693687439, 0.08533333241939545, 0.08666666597127914, 0.08766666799783707, 0.08833333104848862, 0.08900000154972076, 0.09000000357627869, 0.09233333170413971, 0.09333333373069763, 0.09433333575725555, 0.09600000083446503, 0.0976666659116745, 0.1003333330154419, 0.10133333504199982, 0.10233332961797714, 0.10466666519641876, 0.10533333569765091, 0.10599999874830246, 0.10766666382551193, 0.10866666585206985, 0.11100000143051147, 0.1120000034570694, 0.1120000034570694, 0.11433333158493042, 0.11666666716337204, 0.11766666918992996, 0.11833333224058151, 0.12033333629369736, 0.12266666442155838, 0.12399999797344208, 0.12466666847467422, 0.12533333897590637, 0.12666666507720947, 0.12966667115688324, 0.1313333362340927, 0.13233333826065063, 0.1340000033378601, 0.1366666704416275, 0.1379999965429306, 0.13966666162014008, 0.14166666567325592, 0.1433333307504654, 0.1469999998807907, 0.14733333885669708, 0.14766666293144226, 0.15000000596046448, 0.15000000596046448, 0.15166667103767395, 0.1536666601896286, 0.15566666424274445, 0.15833333134651184, 0.16033333539962769, 0.1616666615009308, 0.16300000250339508, 0.16500000655651093, 0.16633333265781403, 0.16899999976158142, 0.17100000381469727]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [5, 8, 2, 3, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [3, 1, 1, 0, 2, 2, 1, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [76, 48, 98, 81, 42, 68], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 3, 2, 9, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 2, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [57, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [3, 1], [52], [1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [3, 74, 76, 58]], "fitness": -0.11171428859233856, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.add(beta, alpha), beta), tf.math.add(tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3013730810271467, 2.3025381583358793, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09377889335155487, 0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973573957170759, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.11533333361148834, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 8, 2, 3, 2, 9, 3, 9, 1, 6, 5, 0, 3, 2, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [3, 1, 0, 2, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [37, 48, 22, 41, 42, 68, 95], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 3, 2, 9, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 8, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 7, 5, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.add(alpha, grad), alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))))), tf.math.multiply(grad, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [4.7480687935916595e+27, 3.403292566510302, 6.709323245174361, 10.804237426563324, 14.915636561943822, 19.035249139465567], "accuracy": [0.0734381154179573, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.319746426173619, 4.348883220127651, 7.820795604160854, 11.350734983171735, 14.88916506086077, 18.423564910888672], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [5, 8, 2, 3, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [3, 0, 2, 0, 2, 2, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [76, 48, 22, 41, 42, 68], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 3, 2, 9, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [8, 0, 3, 8, 6, 0, 4, 5, 6, 0, 9], [0, 2, 2, 1, 0, 0, 2, 2], [3, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 7, 7, 3, 4, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.add(alpha, alpha)), tf.math.add(beta, grad)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.negative(tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 4, 2, 8, 4, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 2, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5, 9, 6, 2, 9], [3, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [76, 48, 98, 5, 93, 68, 38, 8, 89], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 3, 2, 9, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [2, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 0, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 50, 50, 35, 15, 9, 6, 6, 4, 2, 1, 1, 1, 0, 1, 0, 3, 1, 2, 2], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), tf.math.subtract(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.negative(grad))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, grad)), tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(tf.math.subtract(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), tf.math.multiply(tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), alpha)))), tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, alpha)))))))), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), grad)), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.math.add(beta, tf.math.add(alpha, alpha)), tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3027215620876538, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [2, 8, 9, 8, 5, 9, 3, 1, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [1, 1, 1, 1, 2, 2, 1, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [76, 48, 22, 41, 42, 68], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 3, 2, 9, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 2, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 0, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 1, 7, 7, 3, 4, 0, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.add(alpha, beta)), tf.math.add(beta, grad)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [42452286.352577984, 819569112.4047022, 3777861170.584599, 10502782023.954563, 22932156926.44459, 41445193041.726585], "accuracy": [0.09826971590518951, 0.1010434553027153, 0.1014397069811821, 0.09985470771789551, 0.09391097724437714, 0.10210011899471283], "val_loss": [160954441.14285713, 1286444946.2857144, 4340423972.571428, 10286815817.142857, 20089569280.0, 34712669622.85714], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 6, 2, 4, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [3, 2, 1, 2, 2, 2, 1, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [76, 48, 22, 41, 42, 68], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 3, 2, 9, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [2, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [78, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 8, 3, 3, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), grad)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, grad)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07647603005170822, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [5, 8, 2, 3, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [3, 1, 2, 2, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [76, 48, 22, 41, 42, 68], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 3, 2, 9, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [86, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 6, 1, 2, 7, 7, 3, 4, 0, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(alpha, tf.math.multiply(tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 8, 5, 3, 4, 9, 3, 9, 2, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [3, 2, 1, 0, 2, 2, 1, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [76, 48, 22, 41, 42, 68], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 3, 2, 9, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [2, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 8, 3, 2, 6, 6, 4, 2, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.multiply(grad, tf.math.pow(tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))))))), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.multiply(tf.math.add(grad, tf.math.add(beta, alpha)), tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [2, 8, 2, 8, 4, 8, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 9, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [3, 1, 0, 1, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [76, 48, 98, 25, 93, 15, 38], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 3, 2, 9, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 2, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [1], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 10, 10, 6, 4, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(grad, alpha))), tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))), alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.302930417203821, 2.3029621852907, 2.303238485058175, 2.3027207700882792, 2.304553801404676, 2.303923819751913], "accuracy": [0.0882314071059227, 0.08942015469074249, 0.09311848133802414, 0.09311848133802414, 0.09338264167308807, 0.0956280529499054], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 9, 2, 2, 6, 9, 3, 1, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [3, 1, 1, 0, 2, 2, 1, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [76, 48, 98, 25, 93, 68, 38], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 3, 8, 9, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [5, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [7, 74, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3029274438208813, 2.3029529277784886, 2.303222509690752, 2.3026975627116175, 2.3045193720109522, 2.3038796592209048, 2.3034850813536014, 2.3025862868309903], "accuracy": [0.0882314071059227, 0.08981640636920929, 0.09298639744520187, 0.09325055778026581, 0.09338264167308807, 0.09602430462837219, 0.08915598690509796, 0.09192973375320435], "val_loss": [1.971184321812221, 1.9711811201913017, 1.9711777823311942, 1.9711744444710868, 1.9711711066109794, 1.971167768750872, 1.9711644308907645, 1.971161161150251], "val_accuracy": [0.036666665226221085, 0.036666665226221085, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716, 0.03700000047683716]}}]