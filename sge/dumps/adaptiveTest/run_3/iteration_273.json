[{"genotype": [[0], [1, 1, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 1, 4, 9, 9, 4, 4, 1, 1, 2, 6, 0, 4, 8, 6, 4, 1, 0, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8125714063644409, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(sigma), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.027501197208298, 1.7070341012292392, 1.1291257644515265, 0.95134648693677, 0.8165465474931745, 0.8150728169669722, 0.7526987381126934, 0.7175964043282436, 0.7106658232887549, 0.6748270881709768, 0.6501240657698824, 0.6327533352691516, 0.6335899608718752, 0.6185104443160628, 0.5920201735552575, 0.5963119162056408, 0.5869322144013701, 0.5427041220359515, 0.5519594840558765, 0.5244567374181061, 0.5258000753322974, 0.5259684853471266, 0.5155513560759346, 0.4896514208372542, 0.49684833315117577, 0.49601278988723946, 0.4937528950301112, 0.46985446745850834, 0.45744412254112554, 0.46516664978252065, 0.446609660477261, 0.4380971185125931, 0.4528840592611011, 0.4345019819745613], "accuracy": [0.32901862263679504, 0.4896314740180969, 0.6122044920921326, 0.6627922058105469, 0.7003037929534912, 0.6828688383102417, 0.7137762308120728, 0.7269845604896545, 0.7302865982055664, 0.7436270117759705, 0.7512878179550171, 0.7577598690986633, 0.759080708026886, 0.7626469135284424, 0.7795535326004028, 0.7763835787773132, 0.7730814814567566, 0.7972526550292969, 0.7873464822769165, 0.7989697456359863, 0.8053097128868103, 0.7989697456359863, 0.8088759779930115, 0.8201030492782593, 0.8108572363853455, 0.8150838613510132, 0.8158763647079468, 0.822348415851593, 0.8281601071357727, 0.824329674243927, 0.8284242749214172, 0.8367455005645752, 0.8313300609588623, 0.837537944316864], "val_loss": [1.623441253389631, 1.0337224006652832, 0.7183028289249965, 0.6606607777731759, 0.6620428221566337, 0.5863751002720424, 0.5999442338943481, 0.6122007199696132, 0.5448850393295288, 0.5150700807571411, 0.5226849487849644, 0.568098749433245, 0.5026567833764213, 0.48234602383204866, 0.5193674734660557, 0.4912334510258266, 0.458431567464556, 0.44960761070251465, 0.45793156964438303, 0.4877295664378575, 0.446905323437282, 0.43824187346867155, 0.42031547852924894, 0.42797516924994333, 0.40531102248600553, 0.5008528573172433, 0.41219036068235126, 0.41890136684690205, 0.3934162940297808, 0.4099686997277396, 0.4066191485949925, 0.39792868920734953, 0.40972080401011873, 0.3877277118819101], "val_accuracy": [0.5286666750907898, 0.6036666631698608, 0.6856666803359985, 0.7089999914169312, 0.7123333215713501, 0.7413333058357239, 0.7066666483879089, 0.7166666388511658, 0.7416666746139526, 0.762333333492279, 0.753333330154419, 0.7423333525657654, 0.7680000066757202, 0.7820000052452087, 0.7710000276565552, 0.7763333320617676, 0.7973333597183228, 0.8063333630561829, 0.7926666736602783, 0.793666660785675, 0.7983333468437195, 0.8029999732971191, 0.8233333230018616, 0.8146666884422302, 0.8320000171661377, 0.7726666927337646, 0.8176666498184204, 0.8166666626930237, 0.8366666436195374, 0.8133333325386047, 0.8143333196640015, 0.8346666693687439, 0.8116666674613953, 0.8276666402816772]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [9, 0, 1, 4, 0, 2, 6, 3, 6, 1, 5, 0, 4, 6, 8, 6, 4, 8, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8057143092155457, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.027544385327828, 1.7404945048012392, 1.1692275138437283, 0.9204616305015941, 0.8155626498350709, 0.8210685399025501, 0.7575745181463587, 0.7073391846787928, 0.6995989926864977, 0.6645760007538202, 0.6439877049782178, 0.6356852597186373, 0.6470458003760109, 0.6132251124545143, 0.584434447854092, 0.5979088008632089, 0.5810271676316348, 0.5397615277409759, 0.5456155403619901, 0.5260613689711066, 0.5263301742043808, 0.532030322264844, 0.5121325487631376, 0.4916525383147392, 0.493117699643892, 0.4892220985635932, 0.507587517367504, 0.47528687652075974, 0.4564555526850419, 0.4392875328614743, 0.445898733827432, 0.4338857511747562, 0.4533418789397708, 0.4369221178099086, 0.41056767251308585, 0.4247883078822402, 0.3983658513278379, 0.39522781792554273, 0.39170891518495843, 0.4140269124174099, 0.3868398660477268, 0.39990799769654867, 0.39207153924310434], "accuracy": [0.3292827904224396, 0.48210275173187256, 0.6038832664489746, 0.6627922058105469, 0.6948884129524231, 0.6963412761688232, 0.7108704447746277, 0.7351737022399902, 0.7374191284179688, 0.7446836829185486, 0.7536653280258179, 0.7565711140632629, 0.754589855670929, 0.7652885913848877, 0.7802139520645142, 0.7750627398490906, 0.7734777331352234, 0.798309326171875, 0.7895918488502502, 0.8021397590637207, 0.8064984679222107, 0.7977809906005859, 0.8053097128868103, 0.8185180425643921, 0.8137630224227905, 0.8185180425643921, 0.8117818236351013, 0.8186501264572144, 0.8305375576019287, 0.834632158279419, 0.8289526104927063, 0.8397833704948425, 0.8319904804229736, 0.8335754871368408, 0.8519350290298462, 0.8383304476737976, 0.8537842035293579, 0.852859616279602, 0.8533879518508911, 0.8391229510307312, 0.8548408150672913, 0.8477083444595337, 0.8498216867446899], "val_loss": [1.6234702042170934, 1.1117259774889265, 0.7112904787063599, 0.7253737109048026, 0.7112567254475185, 0.6057122605187553, 0.5899526562009539, 0.558968220438276, 0.5166022266660418, 0.53632880960192, 0.5218232018607003, 0.6122300454548427, 0.4987097978591919, 0.48283709798540386, 0.5130619832447597, 0.49176367691584993, 0.45853304862976074, 0.4424186774662563, 0.4523568664278303, 0.4848163298198155, 0.4744730166026524, 0.4341115014893668, 0.4186145407812936, 0.4322010449000767, 0.40623303822108675, 0.549710750579834, 0.4153782640184675, 0.4177177292960031, 0.3964880790029253, 0.40208254541669575, 0.4073140961783273, 0.39550767626081196, 0.42561683484486174, 0.3828230840819223, 0.3906912292752947, 0.366749678339277, 0.36820689269474577, 0.36988260064806255, 0.36606994697025846, 0.37735375336238314, 0.38117897510528564, 0.3786821109907968, 0.4084694640977042], "val_accuracy": [0.5286666750907898, 0.5976666808128357, 0.6893333196640015, 0.684333324432373, 0.6740000247955322, 0.7210000157356262, 0.7406666874885559, 0.746666669845581, 0.7620000243186951, 0.750333309173584, 0.7620000243186951, 0.7300000190734863, 0.7736666798591614, 0.7823333144187927, 0.7796666622161865, 0.7733333110809326, 0.7979999780654907, 0.8096666932106018, 0.7933333516120911, 0.7983333468437195, 0.7799999713897705, 0.8006666898727417, 0.824999988079071, 0.8106666803359985, 0.8316666483879089, 0.7633333206176758, 0.8216666579246521, 0.8153333067893982, 0.8326666951179504, 0.8213333487510681, 0.8133333325386047, 0.8316666483879089, 0.8036666512489319, 0.8339999914169312, 0.8333333134651184, 0.8463333249092102, 0.8483333587646484, 0.8503333330154419, 0.8423333168029785, 0.8299999833106995, 0.8316666483879089, 0.8323333263397217, 0.8073333501815796]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 8, 1, 3, 0, 2, 5, 3, 1, 2, 5, 6, 2, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 2, 3, 3, 3, 3, 1, 3, 2, 2, 2, 3, 0, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8042857050895691, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))), tf.math.add(beta, grad)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(sigma), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.0275887205710643, 1.7347585447019416, 1.1699342982108645, 0.9270481650209886, 0.8117346574428485, 0.7975735246009358, 0.7685485698008157, 0.7063179340707061, 0.6906945043629849, 0.676358452231861, 0.6499834827790407, 0.625617753276893, 0.6408018412339358, 0.6103069838547294, 0.5793784384352105, 0.6044528587949968, 0.5771934322362342, 0.5427745624918113, 0.5459345106309541, 0.5250676592359013, 0.5282629398527462, 0.5255515590052264, 0.5105290484663014, 0.4887170170504797, 0.4981049077936907, 0.4951494908713866, 0.4986862293079844, 0.47435501575265276], "accuracy": [0.3291507065296173, 0.4843481779098511, 0.6029586791992188, 0.657508909702301, 0.6935675740242004, 0.703209638595581, 0.7074362635612488, 0.7306828498840332, 0.7387399077415466, 0.7441553473472595, 0.7473253011703491, 0.7605336308479309, 0.7559106945991516, 0.7668735980987549, 0.7844406366348267, 0.7737419009208679, 0.7746664881706238, 0.796328067779541, 0.7911768555641174, 0.8033285140991211, 0.8039889335632324, 0.7988376617431641, 0.8084797263145447, 0.8175934553146362, 0.8117818236351013, 0.8120459914207458, 0.8132346868515015, 0.8189142942428589], "val_loss": [1.6238148553030831, 1.0984181335994176, 0.7111867666244507, 0.6849991253444127, 0.6884004047938755, 0.5798695598329816, 0.5859061990465436, 0.5571521009717669, 0.5374000413077218, 0.5085090739386422, 0.5179989337921143, 0.5214010987962995, 0.4919424227305821, 0.47323165621076313, 0.5175843920026507, 0.4713164397648403, 0.45970261096954346, 0.44154787063598633, 0.4516016926084246, 0.47217822074890137, 0.5048227821077619, 0.4350228565079825, 0.41699217898505075, 0.42289440972464426, 0.41158277647835867, 0.5211186408996582, 0.4138878073011126, 0.4186273898397173], "val_accuracy": [0.5289999842643738, 0.6023333072662354, 0.6893333196640015, 0.699999988079071, 0.7049999833106995, 0.737666666507721, 0.7326666712760925, 0.7486666440963745, 0.7513333559036255, 0.7639999985694885, 0.753333330154419, 0.7576666474342346, 0.777999997138977, 0.7916666865348816, 0.7806666493415833, 0.7866666913032532, 0.7986666560173035, 0.8163333535194397, 0.7976666688919067, 0.8019999861717224, 0.7703333497047424, 0.7993333339691162, 0.8259999752044678, 0.824999988079071, 0.8220000267028809, 0.7693333625793457, 0.8169999718666077, 0.8180000185966492]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [5, 8, 1, 0, 0, 2, 5, 3, 1, 2, 5, 6, 2, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.7480000257492065, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 7, 3, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.negative(tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), alpha)))), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.06768754964271, 1.5262696307490546, 1.1681276636352913, 0.8847097950746292, 0.861549003619276, 0.7985386364432594, 0.7603601937076089, 0.722818929623808, 0.6981421918476011, 0.6552370901845308, 0.6616021028961314], "accuracy": [0.3097345232963562, 0.4991414546966553, 0.5820895433425903, 0.6774534583091736, 0.6775855422019958, 0.6980583667755127, 0.7083608508110046, 0.7206445932388306, 0.7260599732398987, 0.7500990629196167, 0.7374191284179688], "val_loss": [1.6099283014025008, 0.8262069055012294, 0.8063111305236816, 0.6324142728533063, 0.603172745023455, 0.5662236213684082, 0.5822797332491193, 0.5639295067105975, 0.5653419835226876, 0.5462474312101092, 0.5472536597933088], "val_accuracy": [0.45766666531562805, 0.6393333077430725, 0.668666660785675, 0.7153333425521851, 0.7406666874885559, 0.7480000257492065, 0.7326666712760925, 0.7326666712760925, 0.7153333425521851, 0.7316666841506958, 0.7426666617393494]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [9, 0, 1, 4, 0, 2, 6, 3, 6, 1, 5, 0, 4, 6, 8, 6, 4, 8, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [88, 9, 76, 58]], "fitness": -0.328000009059906, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3.097964340370439, 2.27285623518924, 2.3756946789637343, 2.2945131617545957, 2.2074181655016654, 2.2200007159334243, 2.3113290555661994], "accuracy": [0.16563200950622559, 0.15863162279129028, 0.14515915513038635, 0.12917712330818176, 0.1884823739528656, 0.19336943328380585, 0.09232597798109055], "val_loss": [1.9751128469194685, 1.685666833605085, 1.972984450204032, 1.9696961811610632, 1.9762402943202428, 1.9860129356384277, 1.9743060384477888], "val_accuracy": [0.10233332961797714, 0.41866666078567505, 0.15933333337306976, 0.10133333504199982, 0.1003333330154419, 0.10000000149011612, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 1, 0, 0, 2, 5, 3, 6, 2, 5, 6, 2, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 2, 3, 2, 3, 3, 1, 3, 3, 3, 3, 3, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 0, 8, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.2711428701877594, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.421540711266474, 2.311197555107668, 2.302611480409821, 2.2961678534230505, 2.2828574984254084, 2.4094533418635997, 2.288875017624647, 2.3046725001616672, 2.303054854067136, 2.3033704249740135], "accuracy": [0.2098798006772995, 0.09760929644107819, 0.10196803510189056, 0.11927089840173721, 0.1624620258808136, 0.1958790123462677, 0.1344604343175888, 0.09589222073554993, 0.10117553919553757, 0.1006472036242485], "val_loss": [2.0099710055759976, 1.9736730030604772, 1.9724389484950475, 1.908475126538958, 1.66431839125497, 1.9647206578935896, 1.975536618913923, 1.97410706111363, 1.9736631257193429, 1.9734651701790946], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10066666454076767, 0.19699999690055847, 0.25966668128967285, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 1, 4, 0, 2, 6, 3, 6, 1, 5, 0, 4, 6, 8, 6, 4, 8, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [4, 1], [52], [0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 12, 9, 0, 1, 1, 1, 0, 1, 4, 3, 1, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), alpha)), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.multiply(tf.math.divide_no_nan(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.negative(grad)))), tf.math.add(beta, grad)), alpha))), tf.math.add(beta, grad))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(sigma), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.30328890446265, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [9, 0, 1, 4, 0, 2, 6, 3, 6, 1, 5, 0, 4, 6, 8, 6, 4, 8, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [56, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 3, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 9, 5, 4, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.math.multiply(sigma, tf.math.sqrt(tf.math.divide_no_nan(beta, alpha)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 1, 0, 0, 2, 5, 3, 4, 2, 5, 6, 2, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 1, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [0, 1], [48], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [45, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [9, 0, 1, 4, 0, 2, 6, 3, 6, 1, 5, 0, 4, 6, 8, 6, 4, 8, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 2, 3, 3, 3, 3, 1, 3, 2, 2, 2, 3, 0, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 4, 0, 2, 6, 3, 6, 1, 5, 0, 4, 6, 8, 6, 4, 8, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [4, 1], [52], [0, 0, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 20, 20, 12, 8, 0, 1, 1, 1, 0, 1, 5, 4, 1, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(grad, alpha)), tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.square(tf.math.negative(tf.math.add(beta, grad))))), grad), tf.math.add(beta, alpha)))), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 0, 1, 4, 0, 2, 6, 3, 6, 1, 5, 0, 4, 6, 8, 6, 4, 8, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 1, 0, 1, 0, 0, 1, 1], [7, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(sigma), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3037854735531025, 2.302964223925432, 2.3029584621693466, 2.3029266898626695, 2.3030654023021455, 2.3029223354091704, 2.302999793924219, 2.303011081568585, 2.303028752948346, 2.3029330082856716, 2.302962250414148], "accuracy": [0.0886276587843895, 0.09470347315073013, 0.09826971590518951, 0.09589222073554993, 0.09298639744520187, 0.09655263274908066, 0.09430722147226334, 0.09219389408826828, 0.09826971590518951, 0.09576013684272766, 0.09972262382507324], "val_loss": [1.9736767496381487, 1.973696231842041, 1.973787716456822, 1.9736932345799036, 1.9736631257193429, 1.9736181667872839, 1.9737185069492884, 1.9737097195216589, 1.9736512047903878, 1.973649365561349, 1.9736886024475098], "val_accuracy": [0.09799999743700027, 0.09833333641290665, 0.09833333641290665, 0.09866666793823242, 0.09866666793823242, 0.10566666722297668, 0.10066666454076767, 0.09833333641290665, 0.10233332961797714, 0.10066666454076767, 0.10566666722297668]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [9, 0, 1, 4, 0, 2, 6, 3, 6, 1, 5, 0, 4, 6, 8, 6, 4, 8, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [4, 1], [52], [0, 0, 1, 0, 1, 0, 0, 1, 1], [8, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 3, 2, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.negative(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [9, 0, 1, 4, 0, 2, 6, 3, 6, 1, 5, 0, 4, 6, 8, 6, 4, 8, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 9, 4, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [4484075.6368264835, 86940410.53070928, 407019805.96697927, 1138047252.5584466, 2419827626.2158237, 4454724476.196012], "accuracy": [0.10236428678035736, 0.09866596013307571, 0.09919429570436478, 0.09998679161071777, 0.09496764093637466, 0.09457138925790787], "val_loss": [17330394.285714287, 138370454.85714287, 466697380.5714286, 1105883026.2857144, 2159510747.428571, 3731149824.0], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 8, 1, 0, 0, 2, 5, 3, 1, 2, 5, 6, 2, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [5, 2, 3, 2, 3, 3, 1, 3, 3, 3, 3, 3, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 0, 1, 0, 0, 1, 1], [0, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 4, 1, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.sqrt(tf.math.sqrt(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.30328890446265, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 8, 1, 0, 0, 8, 5, 3, 0, 2, 5, 6, 2, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 2, 3, 1, 3, 2, 3, 3, 3, 3, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [4, 1], [52], [0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 10, 10, 7, 3, 0, 1, 1, 1, 0, 1, 4, 3, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(alpha), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))))))), grad))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(sigma), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.30328890446265, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [9, 0, 1, 4, 0, 2, 6, 3, 6, 1, 5, 0, 4, 6, 8, 6, 4, 8, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 6, 1, 3, 9, 9, 4, 4, 1, 1, 2, 6, 0, 4, 8, 6, 4, 1, 0, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 2, 1, 3, 3, 3, 1, 3, 2, 2, 2, 3, 0, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [97, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [1, 0, 1, 0, 1, 0, 0, 1, 1], [6, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 12, 9, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.divide_no_nan(tf.math.subtract(tf.math.multiply(tf.math.add(beta, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(grad, beta))), alpha), tf.math.add(beta, tf.math.pow(tf.math.subtract(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, grad)), alpha)), grad), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07634394615888596, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 8, 1, 0, 0, 2, 5, 3, 1, 2, 5, 6, 2, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.0965714305639267, "mapping_values": [1, 1, 1, 0, 1, 0, 18, 18, 11, 7, 0, 1, 1, 0, 1, 0, 4, 3, 1, 2], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.negative(tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), alpha))), tf.math.add(beta, grad))))), tf.math.multiply(tf.math.subtract(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(grad))), tf.math.add(beta, grad)), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.315707031415517, 2.4052961268492377, 2.6805946554537416, 3.1904096649370457, 3.94451366247455, 4.9875262590085105, 6.271804970237541], "accuracy": [0.08915598690509796, 0.09998679161071777, 0.09826971590518951, 0.09853387624025345, 0.0944393053650856, 0.0940430611371994, 0.09694888442754745], "val_loss": [1.9869770322527205, 2.066084589276995, 2.253718989236014, 2.5913193566458568, 3.1030571120125905, 3.791754722595215, 4.648372513907296], "val_accuracy": [0.09433333575725555, 0.10000000149011612, 0.09966666996479034, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 1, 4, 0, 2, 6, 3, 6, 0, 5, 2, 4, 6, 8, 6, 4, 8, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 2, 2, 3, 1, 3, 3, 3, 3, 3, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 8, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [1, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 18, 18, 10, 8, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.negative(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), grad), tf.math.add(beta, beta))))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, grad)), tf.math.negative(alpha))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.30373291310507, 2.302659370265916, 2.3030375016914966, 2.3028377073945747, 2.302471106409192, 2.3034014554465245], "accuracy": [0.08942015469074249, 0.08902391046285629, 0.09126931428909302, 0.0956280529499054, 0.08915598690509796, 0.08902391046285629], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]