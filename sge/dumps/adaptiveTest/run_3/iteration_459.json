[{"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [2, 6, 9, 2, 1, 5, 7, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2], [80, 67, 98, 79], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 3, 3, 8, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [19, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [29, 74, 76, 58]], "fitness": -0.8045714497566223, "mapping_values": [1, 28, 28, 17, 11, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.square(tf.math.add(alpha, tf.math.add(grad, tf.math.add(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.square(tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))), tf.math.add(alpha, alpha))))), alpha)))))), tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha))), tf.math.add(alpha, grad)), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.1446371355769718, 1.4167802952787958, 1.1328626724596997, 0.935468873241086, 0.844180692723871, 0.7930565249209769, 0.7806825302044288, 0.7572721199840681, 0.7189746323814009, 0.6948720045912268, 0.6783697381468025, 0.6677554728505855, 0.6535105201326042, 0.6317678139650936, 0.6372955629633812, 0.6401177382409344, 0.6146814859916411, 0.5933197354596478, 0.6064321035564757, 0.5947593606348129, 0.5644331544759708, 0.5612801646890264, 0.5670090896846155, 0.5706151052630415, 0.5642458930023122, 0.5664550718094742, 0.5517894497022905], "accuracy": [0.2937524616718292, 0.5243692994117737, 0.5908070206642151, 0.6538106203079224, 0.6936996579170227, 0.7054550051689148, 0.7099458575248718, 0.715889573097229, 0.7325320243835449, 0.7384757399559021, 0.7415136694908142, 0.7441553473472595, 0.7514199018478394, 0.7598732113838196, 0.7539294958114624, 0.754589855670929, 0.7689869403839111, 0.7738739848136902, 0.7693831920623779, 0.780610203742981, 0.7881389260292053, 0.7930260300636292, 0.7802139520645142, 0.7824593782424927, 0.7821952104568481, 0.7828556299209595, 0.7907806038856506], "val_loss": [1.3764592238834925, 0.89253112248012, 0.7251215662275042, 0.726507408278329, 0.674674527985709, 0.6080266237258911, 0.6012990304401943, 0.5724222660064697, 0.5801127127238682, 0.5469137600490025, 0.5514280285154071, 0.5175208875111171, 0.5152075460978917, 0.5256541286196027, 0.5101318189076015, 0.4978343759264265, 0.48473998478480745, 0.4949104104723249, 0.4851785046713693, 0.47633654730660574, 0.47555347851344515, 0.4611810956682478, 0.4730792386191232, 0.47729688031332834, 0.49412059783935547, 0.4598531552723476, 0.4654036249433245], "val_accuracy": [0.5910000205039978, 0.6010000109672546, 0.7006666660308838, 0.6830000281333923, 0.6893333196640015, 0.7390000224113464, 0.7350000143051147, 0.7403333187103271, 0.7310000061988831, 0.7603333592414856, 0.7386666536331177, 0.7699999809265137, 0.7716666460037231, 0.7483333349227905, 0.7716666460037231, 0.7796666622161865, 0.7860000133514404, 0.781333327293396, 0.7906666398048401, 0.8003333210945129, 0.7870000004768372, 0.8019999861717224, 0.7873333096504211, 0.7886666655540466, 0.765999972820282, 0.7933333516120911, 0.7879999876022339]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [2, 6, 9, 2, 1, 5, 7, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 2, 1, 2, 1, 1, 1, 1, 2, 2], [18, 67, 98, 79], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 3, 3, 8, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [5, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [21, 74, 76, 58]], "fitness": -0.797428548336029, "mapping_values": [1, 10, 10, 6, 4, 2, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, grad)))), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.2531014586231883, 2.0200764659436437, 1.540245726407401, 1.1981689561044755, 1.0644723649006698, 0.9864145230387243, 0.9159195151279914, 0.8808928649848431, 0.8438564813006366, 0.8139416489697497, 0.7877654057877364, 0.7750106267153768, 0.7543937092790388, 0.7348890791967828, 0.7223355161861863, 0.7106208603348415, 0.697902929387655, 0.6899206087085722, 0.6829288718392111, 0.6948871272130807, 0.6678730371668826, 0.6703428323982792, 0.6525407054279112, 0.6480645456287004, 0.653314346957594, 0.6295272221953846, 0.6240017565643594, 0.6300149217667187, 0.6170230068786978, 0.6081843864191887, 0.6110338465160682, 0.6051607364597983, 0.5896219082748444, 0.5967349747325986, 0.580419531406712, 0.5918542540714237, 0.5837393716310293, 0.5781268850214933, 0.5712160187280252, 0.5778073562512608, 0.5640802427667747, 0.5589172871609437, 0.5554334485944961, 0.5570034765532744, 0.5595099519603146], "accuracy": [0.20737022161483765, 0.39743760228157043, 0.5066701769828796, 0.5881653428077698, 0.6254127621650696, 0.6483951807022095, 0.6741513609886169, 0.684982180595398, 0.7010962963104248, 0.7042662501335144, 0.7092854380607605, 0.7104741930961609, 0.7235503792762756, 0.7313432693481445, 0.7310791015625, 0.7318716049194336, 0.7420420050621033, 0.7441553473472595, 0.7449478507041931, 0.741909921169281, 0.752740740776062, 0.7411174178123474, 0.7556465268135071, 0.7582882046699524, 0.7586844563484192, 0.7644960880279541, 0.765949010848999, 0.7663452625274658, 0.7695152759552002, 0.7695152759552002, 0.7754589915275574, 0.7741381525993347, 0.7795535326004028, 0.7799497842788696, 0.7898560166358948, 0.7795535326004028, 0.7836481332778931, 0.7841764688491821, 0.7862898111343384, 0.7839123010635376, 0.7902522683143616, 0.793422281742096, 0.7965922355651855, 0.7932901978492737, 0.7905164361000061], "val_loss": [1.8365240097045898, 1.4320714133126395, 0.9830463613782611, 0.8015470164162772, 0.7276615926197597, 0.667642525264195, 0.654529503413609, 0.6218640293393817, 0.6079938411712646, 0.5907867465700422, 0.595332418169294, 0.5712799004146031, 0.5471880095345634, 0.5506504774093628, 0.532167945589338, 0.5598111833844867, 0.523026602608817, 0.5217534473964146, 0.5291916131973267, 0.513461811201913, 0.5068564074380058, 0.5044397115707397, 0.49342003890446257, 0.5033173901694161, 0.49164511476244244, 0.4864971808024815, 0.4839996269771031, 0.47541608129228863, 0.4710845947265625, 0.4939477613994053, 0.48458067008427214, 0.46816020352499826, 0.4697292872837612, 0.4652245215007237, 0.4634232691356114, 0.4651573215212141, 0.4692481245313372, 0.4521538019180298, 0.4539648635046823, 0.45385541234697613, 0.45215228625706266, 0.4464493138449533, 0.4538113900593349, 0.4604851858956473, 0.44108305658612934], "val_accuracy": [0.492000013589859, 0.5486666560173035, 0.6103333234786987, 0.6880000233650208, 0.690666675567627, 0.7203333377838135, 0.7083333134651184, 0.7329999804496765, 0.7379999756813049, 0.7383333444595337, 0.7319999933242798, 0.7456666827201843, 0.762666642665863, 0.7490000128746033, 0.7603333592414856, 0.7453333139419556, 0.7683333158493042, 0.7716666460037231, 0.7576666474342346, 0.7736666798591614, 0.7666666507720947, 0.7749999761581421, 0.7823333144187927, 0.765666663646698, 0.7796666622161865, 0.7860000133514404, 0.7839999794960022, 0.7906666398048401, 0.7933333516120911, 0.778333306312561, 0.7789999842643738, 0.7913333177566528, 0.7919999957084656, 0.7993333339691162, 0.793666660785675, 0.7926666736602783, 0.7879999876022339, 0.8026666641235352, 0.7976666688919067, 0.8056666851043701, 0.8033333420753479, 0.8053333163261414, 0.8050000071525574, 0.7929999828338623, 0.8043333292007446]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [2, 6, 9, 2, 9, 5, 7, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2], [80, 64, 98, 79], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 3, 3, 8, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [5, 1], [52], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [21, 74, 76, 58]], "fitness": -0.7962856888771057, "mapping_values": [1, 7, 7, 5, 2, 3, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.math.sqrt(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))), sigma)", "other_info": {"loss": [1.9956975131538077, 1.5002297281573367, 1.0505536988017392, 0.875554297586332, 0.8426226615165723, 0.7867394551672184, 0.7361670586458523, 0.7022232902111426, 0.6834746950164904, 0.6665651231331045, 0.6441135461997078, 0.6531889136000364, 0.6267354879412653, 0.6048682718591258, 0.5808310537069953, 0.578254706524839, 0.5644385697913759, 0.5677070649088083, 0.5600001395118708], "accuracy": [0.3319244384765625, 0.4966318905353546, 0.6032228469848633, 0.6783780455589294, 0.6848500967025757, 0.7008321285247803, 0.7232862114906311, 0.7349095344543457, 0.7446836829185486, 0.7475894689559937, 0.7539294958114624, 0.7467969655990601, 0.7631752490997314, 0.7708360552787781, 0.7775723338127136, 0.7841764688491821, 0.7873464822769165, 0.7913089394569397, 0.7852331399917603], "val_loss": [1.2635492937905448, 0.7787349564688546, 0.8252407823290143, 0.6229606015341622, 0.6437101875032697, 0.5681057487215314, 0.6048711538314819, 0.5466499498912266, 0.5353928974696568, 0.5227481978280204, 0.5160575594220843, 0.5476258311952863, 0.5141823291778564, 0.471806458064488, 0.48915902205875944, 0.4810579674584525, 0.5007427249635968, 0.47580974442618235, 0.4581733090536935], "val_accuracy": [0.5379999876022339, 0.6476666927337646, 0.640333354473114, 0.7246666550636292, 0.6909999847412109, 0.7279999852180481, 0.7113333344459534, 0.7490000128746033, 0.7523333430290222, 0.7523333430290222, 0.7693333625793457, 0.7553333044052124, 0.7596666812896729, 0.7996666431427002, 0.7846666574478149, 0.7883333563804626, 0.765999972820282, 0.7870000004768372, 0.7919999957084656]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [2, 6, 9, 2, 9, 5, 7, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2], [80, 67, 98, 79], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 3, 3, 8, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [5, 1], [52], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [21, 74, 76, 58]], "fitness": -0.7805714011192322, "mapping_values": [1, 7, 7, 5, 2, 3, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.math.sqrt(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))), sigma)", "other_info": {"loss": [1.9804293455748179, 1.517158981878618, 1.0181128489516116, 0.9050343061135886, 0.8123716227351052, 0.7743290952719151, 0.7220048590532115, 0.7064870281572811, 0.7058788377059969, 0.6461756878509466, 0.6651449869054105, 0.6480686592781754, 0.6370725627541306, 0.6008756351178081, 0.5897424473518141, 0.6007221468671784], "accuracy": [0.34024566411972046, 0.48791441321372986, 0.6306960582733154, 0.672170102596283, 0.6951525807380676, 0.7099458575248718, 0.7256637215614319, 0.7333245277404785, 0.7268524765968323, 0.7477215528488159, 0.7483819723129272, 0.7564390301704407, 0.7560427784919739, 0.7720248103141785, 0.7759873270988464, 0.7736098170280457], "val_loss": [1.728213105882917, 0.8289744172777448, 0.7990187576838902, 0.6979806082589286, 0.7395602975572858, 0.6268685715539115, 0.5954563447407314, 0.5982162782124111, 0.5322718960898263, 0.5281937973839896, 0.4986636127744402, 0.5042718648910522, 0.5175440311431885, 0.49704383100782124, 0.5816450459616525, 0.4908909797668457], "val_accuracy": [0.3463333249092102, 0.6790000200271606, 0.6416666507720947, 0.6813333630561829, 0.6596666574478149, 0.7153333425521851, 0.7149999737739563, 0.7139999866485596, 0.7566666603088379, 0.7633333206176758, 0.781333327293396, 0.7743333578109741, 0.7616666555404663, 0.7633333206176758, 0.7223333120346069, 0.7806666493415833]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [2, 6, 9, 2, 1, 5, 7, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2], [34, 67, 98, 79], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 3, 3, 8, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [5, 1], [52], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [21, 74, 76, 58]], "fitness": -0.7148571610450745, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.2998578745880147, 2.2961448851577706, 2.2876763901517156, 2.2806985665778474, 2.2753748398069, 2.2668588344116474, 2.260468738583872, 2.2533018576108454, 2.247812323456254, 2.23806849273598, 2.2300329001477963, 2.222892026796695, 2.212590692065663, 2.200792265417018, 2.1885249843970267, 2.178562542639861, 2.162299812084113, 2.1489663354598805, 2.13451005426522, 2.123367848980145, 2.1013273479538257, 2.083288723467332, 2.0598111478581074, 2.0437062334910423, 2.0198615506151647, 1.9947887279291068, 1.9623183434933185, 1.9350567579489846, 1.9117033133149666, 1.8745226418857073, 1.8477041746221907, 1.8179540429778496, 1.7802941793495433, 1.747727334601705, 1.708242165051935, 1.6927159005278343, 1.6440781008187948, 1.6232742668064184, 1.5835775667099101, 1.5663156200472421, 1.5337979424158816, 1.500347511344157, 1.4825865960848597, 1.4572900353547462, 1.4341662687600927, 1.4109203412847402, 1.4000181145813517, 1.370572673173833, 1.348136375813578, 1.3323320925054676, 1.3151535742223979, 1.2941651645511008, 1.272214453186672, 1.2636819098525123, 1.250167904087833, 1.2376985290283224, 1.2249514712728073, 1.2024762793901087, 1.1993823803458405, 1.1812014329104359, 1.1806170705791006, 1.1599018315692005, 1.1627087692275353, 1.1497340124706157, 1.1375689085810616, 1.1320557863705067, 1.12487454567729, 1.10391976554333, 1.1016882373483317, 1.0922046223683144, 1.089722231237124, 1.0722519545239575, 1.080785704956488, 1.0600641827620472, 1.0505640241747378, 1.0377055886178803, 1.041730810465074, 1.0315492805189477, 1.0259550600129979, 1.0183246466997293, 1.0146758158004452, 1.0095888675085825, 0.9997610577250894, 1.007487838766783, 0.9935220183319718, 0.9944285013105387, 0.987061223231444, 0.9872903390221073, 0.9836804740984112, 0.961031927904669, 0.9660802964820302, 0.9655620621699604, 0.9534459642494171, 0.9423308000352326, 0.9387732658088955, 0.9444964271589371, 0.936843590603497, 0.9351975954503211, 0.9337771952097143, 0.9289037280897691], "accuracy": [0.09642054885625839, 0.10368511080741882, 0.12679962813854218, 0.15176330506801605, 0.15519747138023376, 0.18214239180088043, 0.20142649114131927, 0.2172764539718628, 0.2312772423028946, 0.24818386137485504, 0.26297715306282043, 0.2744683623313904, 0.2884691655635834, 0.304979532957077, 0.3159424066543579, 0.32122573256492615, 0.34288734197616577, 0.35820895433425903, 0.3533218801021576, 0.3583410382270813, 0.37524765729904175, 0.38053098320961, 0.39466384053230286, 0.3913617730140686, 0.4003434181213379, 0.40985339879989624, 0.41843879222869873, 0.4360058009624481, 0.4283449947834015, 0.4488178491592407, 0.44789329171180725, 0.4605732262134552, 0.46546030044555664, 0.46691322326660156, 0.48091402649879456, 0.4745740294456482, 0.4950468838214874, 0.49531105160713196, 0.5042926669120789, 0.5074626803398132, 0.5097081065177917, 0.5247655510902405, 0.5194822549819946, 0.5254259705543518, 0.535332202911377, 0.5341434478759766, 0.54220050573349, 0.5507858991622925, 0.5550125241279602, 0.5534275770187378, 0.5609562993049622, 0.5555408596992493, 0.5764099955558777, 0.5684850215911865, 0.5761458277702332, 0.5787875056266785, 0.5772024989128113, 0.5848633050918579, 0.590278685092926, 0.5978074073791504, 0.598599910736084, 0.6091665625572205, 0.5975432395935059, 0.6016378402709961, 0.6026945114135742, 0.6066569685935974, 0.6044115424156189, 0.6148461103439331, 0.6136573553085327, 0.6133931875228882, 0.6199973821640015, 0.6259410977363586, 0.6201294660568237, 0.6386210322380066, 0.6326773166656494, 0.6343944072723389, 0.637828528881073, 0.6445648074150085, 0.6396777033805847, 0.6454893946647644, 0.6433760523796082, 0.6465460062026978, 0.6449610590934753, 0.6476026773452759, 0.6462818384170532, 0.6474705934524536, 0.6536785364151001, 0.6540747880935669, 0.6542068123817444, 0.6557918190956116, 0.654999315738678, 0.657508909702301, 0.6629242897033691, 0.6613393425941467, 0.6732267737388611, 0.6684718132019043, 0.669792652130127, 0.6693964004516602, 0.6686038970947266, 0.6668868064880371], "val_loss": [1.9651686804635184, 1.9591729981558663, 1.953206947871617, 1.9472458703177316, 1.941164561680385, 1.934823717389788, 1.9282638686043876, 1.921422004699707, 1.9142540522984095, 1.906515666416713, 1.8983197893415178, 1.8896246637616838, 1.8802849905831474, 1.8700668471200126, 1.859048639025007, 1.8472605432782854, 1.8342270851135254, 1.8201618194580078, 1.8050096375601632, 1.788996764591762, 1.7715253148760115, 1.752617699759347, 1.7322760309491838, 1.7107574599129813, 1.6878307887486048, 1.663292578288487, 1.6368563515799386, 1.6090656008039201, 1.580486604145595, 1.5502087729317802, 1.5190952505384172, 1.4873387813568115, 1.454519544328962, 1.4215731961386544, 1.3882368632725306, 1.355900764465332, 1.323119810649327, 1.2912243093763078, 1.2593625954219274, 1.2292212758745467, 1.2001011712210519, 1.1720237391335624, 1.145663057054792, 1.1200897693634033, 1.096200363976615, 1.0735126222882951, 1.052612372807094, 1.0324644701821464, 1.0132217066628593, 0.9954693998609271, 0.9784553732190814, 0.96247969354902, 0.9469543865748814, 0.9325764860425677, 0.9190777369907924, 0.9060230595724923, 0.8940911293029785, 0.8822598116738456, 0.8713921308517456, 0.860836284501212, 0.8514357124056134, 0.8420074667249408, 0.8334079810551235, 0.8253200394766671, 0.8172972883496966, 0.8098420756203788, 0.8023416655404227, 0.7948838302067348, 0.7878439085824149, 0.7814610855919975, 0.7755487305777413, 0.7696396793637957, 0.7642759595598493, 0.7583530289786202, 0.7528653315135411, 0.7474605355943952, 0.7428278752735683, 0.7379970039640155, 0.7333606992449079, 0.7288798434393746, 0.7250793831689017, 0.7210470267704555, 0.7168921061924526, 0.71280837059021, 0.7091440643583026, 0.7062043292181832, 0.7025598628180367, 0.6992099966321673, 0.6961135864257812, 0.6929609434945243, 0.6897972651890346, 0.6866824456623623, 0.6829469885144915, 0.6798633677618844, 0.6771322659083775, 0.6744525262287685, 0.6718611887523106, 0.669243335723877, 0.6669491529464722, 0.6646379232406616], "val_accuracy": [0.07500000298023224, 0.12999999523162842, 0.19166666269302368, 0.23600000143051147, 0.28466665744781494, 0.32066667079925537, 0.3476666808128357, 0.3633333444595337, 0.3733333349227905, 0.3843333423137665, 0.3973333239555359, 0.4176666736602783, 0.42933332920074463, 0.43666666746139526, 0.4429999887943268, 0.4506666660308838, 0.46033334732055664, 0.46799999475479126, 0.47733333706855774, 0.48766666650772095, 0.49900001287460327, 0.5063333511352539, 0.5146666765213013, 0.5220000147819519, 0.527999997138977, 0.531000018119812, 0.5356666445732117, 0.5406666398048401, 0.5433333516120911, 0.5460000038146973, 0.5509999990463257, 0.5543333292007446, 0.5543333292007446, 0.559333324432373, 0.5653333067893982, 0.5669999718666077, 0.5763333439826965, 0.5789999961853027, 0.5866666436195374, 0.5920000076293945, 0.5960000157356262, 0.6026666760444641, 0.6116666793823242, 0.6183333396911621, 0.6276666522026062, 0.6349999904632568, 0.6433333158493042, 0.6480000019073486, 0.6520000100135803, 0.656333327293396, 0.6613333225250244, 0.6620000004768372, 0.6660000085830688, 0.6700000166893005, 0.6713333129882812, 0.6726666688919067, 0.6759999990463257, 0.6793333292007446, 0.6793333292007446, 0.6823333501815796, 0.6866666674613953, 0.6883333325386047, 0.6893333196640015, 0.6916666626930237, 0.6936666369438171, 0.6933333277702332, 0.6936666369438171, 0.6956666707992554, 0.6973333358764648, 0.6986666917800903, 0.6990000009536743, 0.6993333101272583, 0.7006666660308838, 0.7009999752044678, 0.7026666402816772, 0.7043333053588867, 0.7049999833106995, 0.7076666951179504, 0.7080000042915344, 0.7089999914169312, 0.7129999995231628, 0.7113333344459534, 0.7113333344459534, 0.7133333086967468, 0.7139999866485596, 0.7149999737739563, 0.7149999737739563, 0.7146666646003723, 0.7170000076293945, 0.718666672706604, 0.7183333039283752, 0.7183333039283752, 0.7196666598320007, 0.7223333120346069, 0.7226666808128357, 0.7239999771118164, 0.7236666679382324, 0.7253333330154419, 0.7256666421890259, 0.7286666631698608]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [9, 6, 9, 2, 9, 5, 7, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2], [7, 92, 98, 79], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 3, 3, 8, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [1], [0, 1, 1], [9], [1, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 7, 8, 6, 0, 4, 5, 6, 0, 9], [0, 2, 2, 1, 0, 0, 2, 2], [21, 74, 76, 58]], "fitness": -0.43142858147621155, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.add(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), beta)), beta)", "other_info": {"loss": [2.300202705006416, 2.2971314339038797, 2.287906506341509, 2.278869519348961, 2.2705750323368528, 2.256610585587955, 2.2440939019180135, 2.228757531210542, 2.214355743194316, 2.1912608643595917, 2.169770926626808, 2.1528790888926768, 2.1324158814195564, 2.119776039390579, 2.130786148091947, NaN], "accuracy": [0.09430722147226334, 0.10236428678035736, 0.12191256135702133, 0.14819706976413727, 0.14938580989837646, 0.18134988844394684, 0.2008981704711914, 0.2246730923652649, 0.23206974565982819, 0.2546559274196625, 0.2657508850097656, 0.270109623670578, 0.2755250334739685, 0.26020342111587524, 0.2355038970708847, 0.12640337646007538], "val_loss": [1.9656624112810408, 1.9594056265694755, 1.9518722806658064, 1.942906039101737, 1.9325226375034876, 1.9200235094342912, 1.9055382183619909, 1.8887970788138253, 1.8703010422842843, 1.84840304510934, 1.823735237121582, 1.8026531764439173, 1.7831602777753557, 1.7660267693655831, 1.802895954677037, NaN], "val_accuracy": [0.06566666811704636, 0.10833333432674408, 0.1706666648387909, 0.2173333317041397, 0.26100000739097595, 0.31833332777023315, 0.36133334040641785, 0.3916666805744171, 0.4143333435058594, 0.42399999499320984, 0.4313333332538605, 0.4233333468437195, 0.41100001335144043, 0.36399999260902405, 0.19766665995121002, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [9, 6, 9, 2, 9, 5, 7, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2], [80, 43, 98, 79], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 3, 3, 8, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 7, 8, 6, 0, 4, 5, 6, 0, 9], [0, 2, 2, 1, 0, 0, 2, 2], [21, 74, 76, 58]], "fitness": -0.4311428666114807, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.add(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), beta)), beta)", "other_info": {"loss": [2.300202705006416, 2.2971314339038797, 2.28790747790273, 2.2788708058204694, 2.2705771104613346, 2.2566165053345317, 2.2441045231492276, 2.228767027424752, 2.2143688745754364, 2.1912804877422647, 2.1697753127287913, 2.152850375530065, 2.132386258627524, 2.1197868467967553, 2.130662026642777, NaN], "accuracy": [0.09430722147226334, 0.10236428678035736, 0.12191256135702133, 0.14832915365695953, 0.14938580989837646, 0.18161405622959137, 0.2008981704711914, 0.22480517625808716, 0.23233389854431152, 0.25478801131248474, 0.2657508850097656, 0.270109623670578, 0.27565711736679077, 0.2604675590991974, 0.2359001487493515, 0.12442214041948318], "val_loss": [1.9656624112810408, 1.9594056946890694, 1.9518741880144392, 1.9429080145699638, 1.932527678353446, 1.9200308663504464, 1.9055442810058594, 1.8888076373508997, 1.870321341923305, 1.84841673714774, 1.823714324406215, 1.8026396887642997, 1.7831781251089913, 1.7660631452287947, 1.80234009878976, NaN], "val_accuracy": [0.06566666811704636, 0.10833333432674408, 0.1706666648387909, 0.2173333317041397, 0.26100000739097595, 0.3186666667461395, 0.36133334040641785, 0.3916666805744171, 0.414000004529953, 0.42366665601730347, 0.4313333332538605, 0.4233333468437195, 0.4113333225250244, 0.3646666705608368, 0.19766665995121002, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [2, 6, 9, 2, 9, 5, 7, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2], [34, 67, 98, 79], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 3, 3, 8, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [5, 1], [52], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [65, 74, 76, 58]], "fitness": -0.402571439743042, "mapping_values": [1, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [3.0870379237860357, 2.4089364055093916, 2.4642187614073103, 2.3033473437189222, 2.2952559817468705, 2.35470915568141], "accuracy": [0.2098798006772995, 0.18055738508701324, 0.12534672021865845, 0.1026284471154213, 0.12019548565149307, 0.12812046706676483], "val_loss": [2.33814879826137, 2.616267681121826, 1.9745279039655412, 1.972909927368164, 1.9363946233476912, 1.9751418658665247], "val_accuracy": [0.3720000088214874, 0.3023333251476288, 0.1003333330154419, 0.09833333641290665, 0.09700000286102295, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [2, 6, 9, 2, 9, 5, 7, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2], [80, 43, 98, 79], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 3, 3, 8, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [5, 1], [52], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 7, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [65, 74, 76, 58]], "fitness": -0.35914286971092224, "mapping_values": [1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [3.0859197036165997, 2.4632875214572816, 2.9174686337915534, 2.3031987398843157, 2.3039122029948054, 2.3032146057259406, 2.3030244562493936], "accuracy": [0.2110685557126999, 0.15968827903270721, 0.1200634017586708, 0.1026284471154213, 0.09893012791872025, 0.10011887550354004, 0.09893012791872025], "val_loss": [2.6686205182756697, 5.140149797712054, 1.9751479285103934, 1.9744668006896973, 1.9741292681012834, 1.9736882618495397, 1.9737072672162737], "val_accuracy": [0.26600000262260437, 0.35733333230018616, 0.09666666388511658, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [2, 6, 9, 2, 9, 5, 7, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2], [80, 67, 98, 79], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 3, 3, 8, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [66, 19, 41, 7, 45, 13], [0], [0, 1, 1], [9], [5, 1], [52], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 2, 2, 1, 0, 0, 2, 2], [25, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.3022310263319197, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [2, 6, 9, 2, 9, 5, 7, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 2, 1, 1, 1, 1, 2, 2], [75, 67, 98, 79], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 3, 3, 8, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [64, 19, 41, 7, 45, 13], [0], [0, 1, 1], [9], [5, 1], [52], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [21, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 6, 4, 2, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.math.sqrt(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))), sigma)", "other_info": {"loss": [2.3022310263319197, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [2, 6, 9, 2, 9, 5, 7, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2], [80, 67, 98, 79], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 3, 3, 8, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [0, 1, 1], [9], [5, 1], [52], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 2, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [21, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 10, 6, 4, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.math.add(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), sigma))), tf.math.divide_no_nan(tf.math.negative(beta), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [8, 6, 9, 2, 9, 5, 7, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2], [80, 43, 98, 79], [1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 3, 3, 8, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [5, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [46, 19, 41, 7, 45, 13], [1], [1, 1, 1], [9], [5, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [1, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [56, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 2, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.math.sqrt(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [872453700.5515658, 16563008792.920355, 77056857367.29732, 211857033883.879, 464244426285.9184, 843932322810.4546], "accuracy": [0.09576013684272766, 0.09734513610601425, 0.09972262382507324, 0.10130762308835983, 0.1014397069811821, 0.09721305221319199], "val_loss": [3279604809.142857, 26227977069.714287, 88509450532.57143, 209787631323.42856, 409727551780.5714, 707998365403.4286], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [2, 1, 9, 2, 0, 5, 7, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 2, 1, 2, 1, 1, 1, 1, 2, 2], [80, 43, 98, 79], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 3, 3, 8, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [4, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [2, 1, 2, 1, 0, 0, 2, 2], [21, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(beta, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [2, 6, 9, 2, 9, 5, 7, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 1, 0, 1, 2, 1, 1, 1, 1, 2, 2], [80, 67, 98, 79], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 3, 3, 8, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [5, 1], [52], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 6, 8, 6, 0, 4, 5, 6, 0, 9], [2, 0, 2, 1, 0, 0, 2, 2], [21, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09377889335155487, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [2, 6, 9, 2, 1, 1, 7, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 2, 1, 1, 1, 1, 2, 2], [47, 67, 13, 79], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 3, 3, 8, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [5, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [1, 3, 2, 1, 0, 0, 2, 2], [21, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(alpha)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [1, 6, 9, 2, 9, 5, 7, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 2, 2, 1, 2, 1, 1, 1, 1, 2, 2], [80, 67, 98, 79], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 3, 3, 8, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [0, 1, 1], [9], [5, 1], [52], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [21, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 3, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 6, 4, 2, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.math.sqrt(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))), sigma)", "other_info": {"loss": [2.3022310263319197, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [2, 6, 9, 2, 9, 5, 7, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2], [80, 67, 70, 79], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 3, 3, 8, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [1], [1, 1, 1], [9], [5, 1], [52], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 7, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 2, 2, 1, 0, 0, 2, 2], [21, 74, 76, 58]], "fitness": -0.07599999755620956, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 10, 6, 4, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.sqrt(tf.math.sqrt(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))), beta), tf.math.divide_no_nan(tf.math.negative(beta), alpha))", "other_info": {"loss": [2.439314976690814, 2.3295908501402987, 2.3251413527481026, 2.3213872683755223, 2.325451151254926, 2.3224636893372543, 2.3226006336499356], "accuracy": [0.08981640636920929, 0.08625016361474991, 0.08981640636920929, 0.09179764986038208, 0.09060890227556229, 0.09219389408826828, 0.08809932321310043], "val_loss": [1.9783111299787248, 1.9785172598702567, 1.978518077305385, 1.978517941066197, 1.978517941066197, 1.978517941066197, 1.978517941066197], "val_accuracy": [0.07533333450555801, 0.07666666805744171, 0.07666666805744171, 0.07666666805744171, 0.07666666805744171, 0.07666666805744171, 0.07666666805744171]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [2, 6, 9, 0, 9, 5, 7, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2], [69, 67, 98, 79], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 3, 3, 8, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [1], [1, 1, 1], [9], [1, 1], [52], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 6, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [21, 74, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 6, 6, 5, 1, 2, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 10, 6, 4, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.add(alpha, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.math.divide_no_nan(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), sigma))), tf.math.divide_no_nan(tf.math.negative(beta), alpha))", "other_info": {"loss": [2.302498230010196, 2.3053245709131676, 2.3032488997712224, 2.302496796821984, 2.303766495516083, 2.301968630451993], "accuracy": [0.08942015469074249, 0.08426892012357712, 0.0874389111995697, 0.0936468094587326, 0.08492933213710785, 0.09351472556591034], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [2, 7, 9, 2, 9, 5, 7, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2], [53, 92, 98, 79], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 3, 3, 8, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [1], [0, 1, 1], [9], [1, 1], [52], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [25, 74, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.302498230010196, 2.3053245709131676, 2.3032488997712224, 2.302496796821984, 2.303766495516083, 2.301968630451993], "accuracy": [0.08942015469074249, 0.08426892012357712, 0.0874389111995697, 0.0936468094587326, 0.08492933213710785, 0.09351472556591034], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]