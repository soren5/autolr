[{"genotype": [[0], [1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0], [1], [], [1, 0], [], [1], [1], [], [], [], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 5, 9, 8, 4, 7, 4, 5, 6], [2, 2, 2, 2], [47]], "fitness": -0.677142858505249, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.square(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9296446533062046, 1.3024968266912251, 0.9124737983571225, 0.798413126035027, 0.7089237801198237, 0.6521010171656973, 0.6164343700023486, 0.626240946416448, 0.5940989551605912, 0.5899295849004017, 0.5822140212859523, 0.5975328256204978, 0.6058666903219045, 0.6367287467641128, 0.6486085502384298, 0.6731691604607833], "accuracy": [0.3473781645298004, 0.5905428528785706, 0.6646413803100586, 0.6942279934883118, 0.7345132827758789, 0.752740740776062, 0.7658169269561768, 0.7717606425285339, 0.7774402499198914, 0.7721568942070007, 0.7812706232070923, 0.7804781198501587, 0.770439863204956, 0.7770439982414246, 0.7560427784919739, 0.7359662055969238], "val_loss": [1.219921691077096, 0.7519277504512242, 0.6330399683543614, 0.5508322545460292, 0.5236892870494297, 0.4710894823074341, 0.507510815347944, 0.4818480355398996, 0.4745411532265799, 0.47542522634778706, 0.44804848943437847, 0.4976926360811506, 0.4724067449569702, 0.48226116384778706, 0.5316108124596732, 0.5668311970574516], "val_accuracy": [0.6259999871253967, 0.6463333368301392, 0.7256666421890259, 0.7566666603088379, 0.7613333463668823, 0.7979999780654907, 0.7736666798591614, 0.7906666398048401, 0.8203333616256714, 0.800000011920929, 0.8206666707992554, 0.7876666784286499, 0.8143333196640015, 0.8159999847412109, 0.7833333611488342, 0.7666666507720947]}}, {"genotype": [[0], [0], [1], [], [2], [10], [0, 0, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 1, 1, 1, 1], [6, 6, 4, 4], [1], [47], [0], [1], [3], [3], [17], [1], [], [2], [3, 88, 51, 87, 40, 98]], "fitness": -0.26742857694625854, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.473654678736727, 2.2929842419801307, 2.634924203397544, 2.306892814668981, 2.3039562712570993, 2.303311549378046, 2.3030935523847247], "accuracy": [0.20552106201648712, 0.1418570876121521, 0.14700831472873688, 0.09351472556591034, 0.09932637959718704, 0.09166556596755981, 0.09576013684272766], "val_loss": [1.9761945179530553, 1.8704797199794225, 1.9780002321515764, 1.9742988858904158, 1.9737409864153181, 1.9738691193716866, 1.9737358774457658], "val_accuracy": [0.09866666793823242, 0.1886666715145111, 0.10566666722297668, 0.10066666454076767, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [4, 2, 8, 2, 4, 1, 8], [2, 3, 1, 3, 1, 0], [20, 80, 61], [0, 0], [1], [6, 6, 4, 4], [1, 0], [], [1], [1], [], [], [], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 5, 9, 8, 4, 7, 4, 5, 6], [0, 2, 2, 2], [9, 40]], "fitness": -0.10028571635484695, "mapping_values": [1, 13, 13, 7, 6, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(grad, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), alpha)))), tf.math.pow(tf.math.add(alpha, grad), tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3031856746028647, 2.3012418410624056, 2.3015364612397455, 2.3015630904001063, 2.299699679247345, 2.3007798790695517, 2.30125598144758, 2.300834123626314, 2.3013263636765275, 2.3010509127812253, 2.3017157254013103, 2.301662336455801], "accuracy": [0.0948355570435524, 0.09628847241401672, 0.08677849918603897, 0.09126931428909302, 0.10474177449941635, 0.09747721254825592, 0.0952318087220192, 0.09906221181154251, 0.09840179979801178, 0.09998679161071777, 0.10117553919553757, 0.09734513610601425], "val_loss": [1.9708306448800224, 1.970623561314174, 1.970583779471261, 1.9707414763314384, 1.9710219928196497, 1.971379348209926, 1.9717752592904227, 1.9721315928867884, 1.9724513462611608, 1.9726956912449427, 1.9728549548557825, 1.9729877199445451], "val_accuracy": [0.04399999976158142, 0.05666666850447655, 0.07233333587646484, 0.07966666668653488, 0.08866667002439499, 0.09366666525602341, 0.09933333098888397, 0.0989999994635582, 0.09533333033323288, 0.08733333647251129, 0.08233333379030228, 0.0806666687130928]}}, {"genotype": [[0], [1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3], [20, 80, 61], [1], [1], [], [1, 0], [34], [1], [], [], [2], [], [0, 1, 0, 0, 1, 0, 0, 1, 1], [8], [2, 2, 2, 2], [47]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0], [0, 1, 1], [4], [0, 2], [67], [0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 0, 1, 1], [3, 8, 1, 9, 5], [1, 0], [42, 7], [1], [1], [], [2], [67], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [4, 7, 3, 9, 9, 2, 5, 1, 6], [1, 0, 0, 3, 0, 3, 1], [63, 67, 91, 72]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 7, 7, 5, 2, 2, 1, 0, 0, 0, 0, 7, 5, 2, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.subtract(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.square(alpha)))), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1], [6, 9, 4, 5, 0, 5, 1, 2, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1], [4, 4, 2, 1, 3, 1, 3, 5, 7, 6, 8, 2, 4], [3, 1, 5, 0, 2, 2, 4, 2, 0, 1, 0, 1], [16, 70, 42], [0, 0, 0, 1, 1], [0, 0, 1], [2, 6], [4], [], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 5, 9, 8, 4, 7, 4, 5, 6], [2, 2, 2, 2], [47]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 7, 3, 3, 25, 25, 13, 12, 3, 5, 3, 2, 1, 0, 3, 1, 2, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))), tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, alpha))), tf.math.add(beta, tf.math.multiply(tf.math.subtract(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(beta), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.divide_no_nan(grad, beta)))))))), tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), alpha))))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0], [1], [], [2], [], [0, 1, 1, 0, 0, 1, 0, 1, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1], [4, 8, 2, 1, 8, 2, 8, 0, 2], [4, 3, 0, 1, 3], [47], [0, 1, 1], [0, 1, 1], [2], [1], [17], [0, 1, 0, 1], [4, 5], [3, 3], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 3, 1, 1, 0, 0, 4, 2, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(grad, tf.math.sqrt(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(sigma, tf.math.square(sigma))", "other_info": {"loss": [2.302106353348871, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1], [1], [], [0, 2, 2, 0, 0, 0], [99], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [6, 6, 4, 4, 0, 6, 4], [4, 3, 0, 1, 3, 3], [47, 33], [0, 0, 1, 1], [0, 0, 1], [5, 1], [1], [], [0, 0, 1, 1, 0, 1, 1, 0], [6, 7, 0, 4, 4, 7, 7, 7, 3], [1, 0, 2, 3, 0, 3, 1, 3], [86]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 12, 12, 6, 6, 1, 4, 2, 2, 0, 0, 6, 3, 3, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), grad)), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.subtract(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.negative(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [8, 8, 9, 5, 4, 4, 1, 7, 2, 6, 5, 7, 8, 0, 2, 2, 2, 1, 8, 5, 7], [2], [64, 4], [0, 1, 1, 0, 0, 1, 0, 1, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1], [8], [5], [], [0, 1, 1], [0], [7], [1], [], [0, 1, 1], [9], [3], [86]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 3, 0, 1, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1, 1, 0, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302106353348871, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [1], [], [2, 0, 0, 1, 2, 1, 1, 2, 1, 2, 2], [20, 76, 79], [0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1], [1], [6, 6, 4, 4], [5, 4], [], [0], [0], [9], [6], [17], [0, 1, 0, 0, 1, 0, 0, 1, 1], [6, 5, 5], [0, 0], [81, 85]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 5, 3, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.square(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.302106353348871, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1], [1], [6, 9, 5], [2], [81], [0, 1, 1, 0, 0, 1, 0, 1, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1], [6, 6, 4, 4], [4, 3, 0, 1, 3], [47], [0], [1], [], [0], [17], [0, 0, 0, 1, 1], [9], [2], [9]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3019159900797295, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10289261490106583, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1], [1], [], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [], [0, 0], [1], [], [1, 0], [47], [0, 0, 0], [0, 1, 1], [4], [0, 0], [17, 43], [0, 0, 1, 0, 1], [1, 5, 9, 8, 4, 7, 4, 5, 6], [2, 2, 2, 2], [72]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 2, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.square(beta), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [15641926012294.174, 2.4982881710403677, 2.600672347214023, 3.5003790944842237, 6.1295208766586065, 12.112382288323008, 23.328323874664406], "accuracy": [0.10038304328918457, 0.10117553919553757, 0.09589222073554993, 0.1026284471154213, 0.10593052208423615, 0.10447761416435242, 0.09800554811954498], "val_loss": [2.122264862060547, 2.147299153464181, 2.4857028552464078, 3.9852143696376254, 7.657611846923828, 15.037057604108538, 27.763025556291854], "val_accuracy": [0.09666666388511658, 0.10133333504199982, 0.09799999743700027, 0.09866666793823242, 0.09666666388511658, 0.09799999743700027, 0.09666666388511658]}}, {"genotype": [[0], [0, 1, 0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [54], [0, 0], [1], [3, 8, 1, 9, 5], [2, 4], [], [1], [1], [], [], [], [0, 1, 0, 0, 1, 0, 0, 1, 1], [4, 7, 3, 9, 7, 2, 5, 6, 6], [1, 0, 0, 2, 0, 3, 1], [19, 20, 88, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 9, 5, 4, 3], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, tf.math.add(tf.math.multiply(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1], [1], [4, 7, 8, 6, 5, 0], [2], [], [0, 1, 1, 0, 0, 1, 0, 1, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1], [4, 8, 2, 1, 8, 2, 8, 0, 2], [4, 3, 0, 1, 3], [47], [0, 0, 0], [0, 1, 1], [1], [0, 3], [44], [1], [], [3], []], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [813609441.9351585, 115776125940.5035, 2016594707888.4036, 14251282009218.79, 62442374527357.69, 204949244627313.25], "accuracy": [0.09985470771789551, 0.09787346422672272, 0.09919429570436478, 0.10540219396352768, 0.10196803510189056, 0.10077928751707077], "val_loss": [6488841947.428572, 349708606317.7143, 3753330680978.2856, 20461687369142.855, 76649117628123.42, 226098300022198.84], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0], [1], [], [3], [15], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0], [6, 6, 7, 4, 6, 8, 8, 1, 6, 8, 8, 1, 3, 0, 4, 2, 6, 5, 8, 1, 2, 8, 3, 9], [3, 1, 4, 3, 0, 3, 5, 0, 2, 5, 2, 3, 0, 4, 3, 2], [34, 46, 78, 45], [0, 1, 0, 0, 0], [0, 1, 0, 0], [7, 4, 9], [2], [79], [1], [0, 7, 3, 3, 7, 9, 7, 9], [0, 1, 1, 0], [94]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 3, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302106353348871, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1], [1, 3, 1, 1, 6, 0, 7, 3, 7, 6, 8, 7, 9, 3], [2, 2, 2, 1, 2, 0, 2, 1, 2, 3, 3, 3], [51, 63, 88], [0, 0, 0], [0, 1, 1], [4, 8, 2, 1, 8, 2, 8, 0, 2], [5, 5], [], [0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 1], [1, 4, 3], [2, 5], [17], [0, 1, 1], [8], [3, 0], [70]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 21, 11, 10, 1, 3, 3, 1, 2, 0, 7, 5, 3, 2, 0, 2, 1, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.add(alpha, tf.math.multiply(grad, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(grad, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), alpha))), tf.math.add(alpha, grad))))), grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [4, 0, 5, 1, 5, 1, 5, 1, 1, 9, 5, 1, 4, 2, 4, 6, 5, 0], [3, 0, 0, 1, 3, 3, 0, 3, 3, 3], [4, 80, 92, 6, 81, 88], [0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0], [3, 8, 1, 9, 5, 9], [1, 4], [49, 30, 78, 45], [0], [1], [7, 4, 9], [2], [], [1], [6, 7, 0, 4, 4, 7, 7, 7, 3], [1, 0, 2, 3, 0, 3, 1, 3], [9]], "fitness": -0.10000000149011612, "mapping_values": [1, 28, 28, 18, 10, 4, 7, 7, 6, 1, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.math.add(alpha, tf.math.square(grad))), tf.math.subtract(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.subtract(tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.square(tf.math.subtract(tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), grad)), tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.negative(grad)))))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, alpha)), tf.math.subtract(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 2, 2, 0, 0, 0], [87, 80, 61], [0, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 1], [3, 8, 1, 9, 1], [1, 4], [54], [0], [1], [], [7], [], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1], [3, 5, 9, 8, 4, 7, 4, 5, 6], [0, 0, 2, 3, 0, 3, 1, 3], [13, 11, 90]], "fitness": -0.042571429163217545, "mapping_values": [1, 6, 6, 4, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3035574602397393, 2.302184188433642, 2.3024887318435425, 2.3034281425503784, 2.3010735643727194, 2.3019997530357634, 2.3036768765828044, 2.3028436251887086, 2.303228575618685, 2.3022710333536835, 2.3029648021637033], "accuracy": [0.09391097724437714, 0.09509972482919693, 0.08625016361474991, 0.0870426595211029, 0.09642054885625839, 0.09192973375320435, 0.0874389111995697, 0.09060890227556229, 0.09470347315073013, 0.09192973375320435, 0.0882314071059227], "val_loss": [1.9711626597813197, 1.971137591770717, 1.9711127962384904, 1.971088477543422, 1.9710651806422643, 1.9710426330566406, 1.9710197448730469, 1.9709981509617396, 1.9709761483328683, 1.9709550312587194, 1.9709352084568568], "val_accuracy": [0.03700000047683716, 0.03766666725277901, 0.038333334028720856, 0.03933333232998848, 0.03966666758060455, 0.041333332657814026, 0.041333332657814026, 0.04100000113248825, 0.04100000113248825, 0.04066666588187218, 0.04100000113248825]}}, {"genotype": [[0], [1], [1], [], [1], [20, 80, 61], [0, 1, 1, 0, 0, 1, 0, 1, 0], [1, 1, 0, 1, 1, 0, 1, 0, 1], [6, 6, 4, 4], [1, 3, 0, 1, 3], [47], [0], [1], [], [4], [17], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 6, 9, 8, 4, 7, 4, 5, 6], [1, 3, 3], [47]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.divide_no_nan(sigma, sigma))", "other_info": {"loss": [2.303583386992703, 2.3022519204405874, 2.3025749675381406, 2.303602517288847, 2.301276017677641, 2.302170337104621], "accuracy": [0.09338264167308807, 0.09549596905708313, 0.08598599582910538, 0.08717474341392517, 0.09576013684272766, 0.09126931428909302], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0], [1], [6, 9, 9, 5, 4, 4, 1, 7, 2, 6, 5, 7, 8, 0, 2, 2, 2, 1, 8, 5, 7], [1, 0, 0, 0, 1, 1, 1, 2, 1, 2, 2, 0, 3, 1], [10], [0, 0, 1, 0, 0, 0, 0, 1, 0], [1, 0, 0, 1, 1, 1, 1, 1, 1], [8], [5], [], [0, 1, 0, 1], [0, 0], [6, 0], [7], [], [0, 1, 1], [4], [3, 0], [9]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0, 0, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(sigma, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303583386992703, 2.3022519204405874, 2.3025749675381406, 2.303602517288847, 2.301276017677641, 2.302170337104621], "accuracy": [0.09338264167308807, 0.09549596905708313, 0.08598599582910538, 0.08717474341392517, 0.09576013684272766, 0.09126931428909302], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]