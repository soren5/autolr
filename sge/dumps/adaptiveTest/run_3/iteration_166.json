[{"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [1, 6, 9, 8, 3, 2, 4, 4, 9, 9], [5, 0, 3, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [43, 9]], "fitness": -0.8188571333885193, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [1.9880605692782218, 1.3514529149829277, 1.0616312014381128, 0.8921753780764045, 0.8249196387663053, 0.7617768807544086, 0.7206773785410493, 0.6900762193207066, 0.6889829689469776, 0.6890361282756504, 0.6604645408895652, 0.6378632894265827, 0.6060519016587329, 0.6192993847071424, 0.6131180589303932, 0.5767072591689033, 0.5748392653629024, 0.551872238625058, 0.5544300632957989, 0.5492015696275724, 0.5321966412123782, 0.5282183575781345, 0.5292373523932911, 0.5109723892902828, 0.5135025940141689, 0.4862213650155675, 0.5062680468386379, 0.46615134121924184, 0.47680866601381794, 0.47664119757287743, 0.46351890353526043, 0.4602213522478133, 0.456565552340554, 0.44956860069459564, 0.44499306247108694, 0.42194002775421013, 0.4373429986889242, 0.41329428324484, 0.4102281774307491, 0.4045196794806974, 0.41367697241819296, 0.39642938385786336, 0.3886676635669443, 0.4000521418661285, 0.4154692257258398, 0.3873677327727062, 0.3997537882974229], "accuracy": [0.33284902572631836, 0.5283318161964417, 0.6152423620223999, 0.6601505875587463, 0.6939638257026672, 0.715889573097229, 0.7283053994178772, 0.7371549606323242, 0.7371549606323242, 0.7354378700256348, 0.7454761862754822, 0.7594769597053528, 0.7758552432060242, 0.7605336308479309, 0.7618544697761536, 0.7812706232070923, 0.7800818681716919, 0.7893276810646057, 0.7864218950271606, 0.7917051911354065, 0.7955356240272522, 0.800290584564209, 0.7989697456359863, 0.805177628993988, 0.8029322624206543, 0.8153480291366577, 0.8092722296714783, 0.8231409192085266, 0.8181217908859253, 0.817461371421814, 0.8269713521003723, 0.8230088353157043, 0.8294808864593506, 0.828820526599884, 0.8359529972076416, 0.8364813327789307, 0.8354246616363525, 0.8473120927810669, 0.8437458872795105, 0.8490291833877563, 0.8466516733169556, 0.8535200357437134, 0.8557654023170471, 0.8518029451370239, 0.8417646288871765, 0.8570862412452698, 0.8502179384231567], "val_loss": [1.4199937071119035, 0.7767417430877686, 0.6725709949220929, 0.7429259163992745, 0.6916895253317696, 0.6006271498543876, 0.5531044176646641, 0.5569722311837333, 0.544810380254473, 0.5417258739471436, 0.5171594108854022, 0.510086110660008, 0.5289484773363385, 0.5406680277415684, 0.4833852563585554, 0.5001829011099679, 0.486880966595241, 0.45431884697505404, 0.46032391275678364, 0.447743364742824, 0.4814617463520595, 0.46745545523507254, 0.43900740146636963, 0.4223511219024658, 0.4263970341001238, 0.42538465772356304, 0.421351500919887, 0.4127677253314427, 0.43081711871283396, 0.4016622134617397, 0.40779300246919903, 0.4107458846909659, 0.3992199982915606, 0.407125038760049, 0.3813122000013079, 0.38066311393465313, 0.3790516512734549, 0.39533358812332153, 0.3725605010986328, 0.36591821908950806, 0.37858409540993826, 0.3599702034677778, 0.3793495382581438, 0.38553134884153095, 0.35551776204790386, 0.35826271772384644, 0.35578616176332745], "val_accuracy": [0.38600000739097595, 0.6656666398048401, 0.7183333039283752, 0.6740000247955322, 0.6949999928474426, 0.7289999723434448, 0.7549999952316284, 0.7473333477973938, 0.7583333253860474, 0.7486666440963745, 0.762666642665863, 0.7726666927337646, 0.765333354473114, 0.7419999837875366, 0.7876666784286499, 0.7710000276565552, 0.7763333320617676, 0.7983333468437195, 0.8083333373069763, 0.8056666851043701, 0.7770000100135803, 0.7839999794960022, 0.8053333163261414, 0.8159999847412109, 0.8086666464805603, 0.8233333230018616, 0.8146666884422302, 0.8133333325386047, 0.8203333616256714, 0.8253333568572998, 0.8266666531562805, 0.8226666450500488, 0.8263333439826965, 0.824999988079071, 0.8393333554267883, 0.8399999737739563, 0.8373333215713501, 0.82833331823349, 0.8420000076293945, 0.8460000157356262, 0.8363333344459534, 0.8523333072662354, 0.8339999914169312, 0.8253333568572998, 0.8493333458900452, 0.8516666889190674, 0.8486666679382324]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [1, 6, 9, 8, 3, 2, 4, 4, 9, 9], [0, 1, 3, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [43, 9]], "fitness": -0.798285722732544, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [1.980586239422758, 1.4250780172540747, 1.0529047389780573, 0.9223444023073751, 0.8172790228320685, 0.7762612635197184, 0.7320898729639125, 0.7352252063135886, 0.7021862315841875, 0.6854497754830474, 0.6657347777862559, 0.6376340568120753, 0.6269686412360957, 0.6152297275539685, 0.5912681575527501, 0.5839495415606314, 0.5856871406998317, 0.5915615711434485, 0.5481590933220939, 0.5468709809810667, 0.5463175876360087, 0.5250805893027473, 0.5258193144299461, 0.530287234483378], "accuracy": [0.3366794288158417, 0.5175009965896606, 0.6112799048423767, 0.6584334969520569, 0.7005679607391357, 0.7125874757766724, 0.7230220437049866, 0.7250033020973206, 0.7283053994178772, 0.739400327205658, 0.7441553473472595, 0.7614582180976868, 0.7598732113838196, 0.76542067527771, 0.7771760821342468, 0.7745344042778015, 0.7759873270988464, 0.7732135653495789, 0.796328067779541, 0.796328067779541, 0.7961959838867188, 0.8031964302062988, 0.8049134612083435, 0.8024039268493652], "val_loss": [1.5189687183925085, 0.8228622674942017, 0.7898670094353812, 0.643276538167681, 0.6675771815436227, 0.5703424385615757, 0.5779791729790824, 0.5750524146216256, 0.5377448286328997, 0.5848150423594883, 0.504215053149632, 0.4971935238157, 0.4829373700278146, 0.4727485179901123, 0.4708789416721889, 0.5240248271397182, 0.5614563226699829, 0.4632413387298584, 0.45427426270076204, 0.46369058745247976, 0.44729181698390413, 0.4563803161893572, 0.4634553704942976, 0.4415968826838902], "val_accuracy": [0.44333332777023315, 0.625333309173584, 0.6793333292007446, 0.7183333039283752, 0.6963333487510681, 0.7383333444595337, 0.7513333559036255, 0.7206666469573975, 0.7553333044052124, 0.7459999918937683, 0.7763333320617676, 0.781000018119812, 0.7839999794960022, 0.7956666946411133, 0.7926666736602783, 0.7576666474342346, 0.746666669845581, 0.8006666898727417, 0.8090000152587891, 0.79666668176651, 0.7983333468437195, 0.7993333339691162, 0.7889999747276306, 0.8006666898727417]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1], [1, 6, 1, 8, 3, 2, 0, 4, 9, 9], [5, 0, 3, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [73, 9]], "fitness": -0.38914287090301514, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 10, 5, 3, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), grad)), grad))), tf.math.negative(tf.math.pow(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.304343484821352, 2.2598516237246065, 2.3076511872931085, 2.5534092549870846, 2.3077080553044986, 2.3037165014609338], "accuracy": [0.22044643759727478, 0.1698586642742157, 0.10289261490106583, 0.1830669641494751, 0.09536388516426086, 0.10051512718200684], "val_loss": [1.7148548194340296, 1.983658926827567, 1.9649425915309362, 1.981076785496303, 1.9746266092572893, 1.973724297114781], "val_accuracy": [0.3786666691303253, 0.10133333504199982, 0.10966666787862778, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [4, 6, 1, 8, 3, 2, 4, 0, 9, 6, 1, 9], [3, 3, 3, 3, 1, 3, 4, 1], [85, 42, 20, 7, 45, 13], [1], [0, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [5, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [19, 80]], "fitness": -0.10114285349845886, "mapping_values": [1, 1, 1, 0, 1, 0, 19, 19, 12, 7, 2, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(grad, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.pow(tf.math.negative(grad), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, alpha)))))), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3029118284274084, 2.3013390388786044, 2.3011112133147553, 2.300861386732576, 2.3004345734830167, 2.301278937872233, 2.300932878421959, 2.3010335342680315, 2.30087031374644, 2.3014871678284967, 2.3014953697299316, 2.301287422122232, 2.301448488122106], "accuracy": [0.09192973375320435, 0.09945846349000931, 0.09813763201236725, 0.09787346422672272, 0.10289261490106583, 0.09774138033390045, 0.1018359512090683, 0.09153348207473755, 0.09589222073554993, 0.09972262382507324, 0.09694888442754745, 0.10157178342342377, 0.09668471664190292], "val_loss": [1.970838955470494, 1.970632893698556, 1.9705770356314523, 1.9707131385803223, 1.970973287309919, 1.9713043485369002, 1.9716827528817313, 1.9720465796334403, 1.9723647662571497, 1.9726221902029855, 1.9728050913129533, 1.9729320662362235, 1.9730675561087472], "val_accuracy": [0.04333333298563957, 0.0560000017285347, 0.07066666334867477, 0.07866666465997696, 0.08699999749660492, 0.0949999988079071, 0.09833333641290665, 0.09966666996479034, 0.09533333033323288, 0.09000000357627869, 0.0846666693687439, 0.08233333379030228, 0.08299999684095383]}}, {"genotype": [[0], [1, 0, 1], [0, 1, 1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [1, 6, 2, 4, 3, 2, 4, 4, 9, 9], [5, 0, 3, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [8, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [73, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303016821973753, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [1, 6, 9, 8, 3, 2, 4, 4, 9, 9], [0, 1, 3, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [0, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [3, 1, 2, 2], [38, 80]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [869582.290210209, 16873466.44987452, 78347646.10011888, 217457369.00911373, 460823317.2008982, 854718007.8594637], "accuracy": [0.09813763201236725, 0.09576013684272766, 0.10685510188341141, 0.1014397069811821, 0.10698718577623367, 0.09747721254825592], "val_loss": [3324136.0714285714, 26500548.57142857, 89337581.71428572, 211643392.0, 413226633.14285713, 713895606.8571428], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1], [0, 0, 1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [1, 6, 1, 8, 3, 2, 6, 4, 9, 9], [3, 1, 3, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [3, 1, 2, 2], [38, 80]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 16, 16, 10, 6, 2, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.subtract(tf.math.sqrt(tf.math.add(beta, grad)), alpha), tf.math.multiply(grad, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha))), tf.math.add(beta, grad))))), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10593052208423615, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [1, 6, 1, 8, 3, 2, 4, 4, 9, 9], [3, 5, 3, 3, 1, 3, 4, 1], [85, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [1, 1], [79], [1, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [1, 1, 2, 2], [43, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07251353561878204, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0], [9, 6, 1, 8, 3, 2, 4, 4, 9, 9], [0, 1, 0, 3, 1, 3, 4, 1], [2, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [1, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [43, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303016821973753, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [1, 6, 9, 8, 3, 2, 4, 4, 9, 9], [0, 1, 3, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [1, 3, 2, 2], [43, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 30, 30, 19, 11, 3, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.square(tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.negative(tf.math.add(alpha, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha))))))), tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), grad))))), tf.math.add(alpha, alpha))), grad))))), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1], [0, 0, 1], [2, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [1, 6, 1, 8, 3, 2, 6, 4, 9, 9], [0, 1, 3, 3, 3, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [1, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [3, 0, 2, 2], [38, 80]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 16, 16, 10, 6, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(beta, tf.math.sqrt(alpha)), tf.math.multiply(grad, tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(grad, tf.math.pow(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.add(beta, grad))))), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3034903055893166, 2.302933764133345, 2.303175552063583, 2.3030579831417226, 2.3031269820327567, 2.3028804322495797, 2.302921738181809], "accuracy": [0.09192973375320435, 0.09998679161071777, 0.09509972482919693, 0.09536388516426086, 0.09747721254825592, 0.09628847241401672, 0.09576013684272766], "val_loss": [1.9736999103001185, 1.9735536575317383, 1.973595414842878, 1.9737003871372767, 1.973646913255964, 1.9736586979457311, 1.9736643518720354], "val_accuracy": [0.09666666388511658, 0.10566666722297668, 0.10233332961797714, 0.09866666793823242, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [8, 7, 9, 7, 3, 2, 4, 4, 9, 9], [3, 1, 3, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [38, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 7, 4, 3, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 3, 1, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.square(grad), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.subtract(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [869582.290210209, 16873466.44987452, 78347646.10011888, 217457369.00911373, 460823317.2008982, 854718007.8594637], "accuracy": [0.09813763201236725, 0.09576013684272766, 0.10685510188341141, 0.1014397069811821, 0.10698718577623367, 0.09747721254825592], "val_loss": [3324136.0714285714, 26500548.57142857, 89337581.71428572, 211643392.0, 413226633.14285713, 713895606.8571428], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [1, 6, 9, 8, 3, 2, 4, 4, 9, 9], [3, 5, 3, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [79], [1, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [38, 80]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303016821973753, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [1, 6, 9, 8, 3, 2, 4, 4, 9, 9], [3, 2, 3, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [1, 1], [79], [1, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [1, 1, 2, 2], [18, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.divide_no_nan(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))), beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07119271159172058, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [0, 0, 1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [1, 6, 1, 8, 3, 2, 4, 4, 9, 9], [2, 0, 3, 3, 1, 2, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [1, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [18, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303016821973753, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1], [0, 1, 1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [8, 7, 2, 7, 3, 2, 4, 4, 9, 9], [3, 1, 3, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [1, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [43, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 16, 16, 9, 7, 1, 1, 0, 0, 0, 0, 3, 2, 1, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(tf.math.pow(grad, tf.math.pow(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha))), tf.math.add(beta, grad))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.301626953639689, 2.302051584246042, 2.3025867175023, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09642054885625839, 0.10196803510189056, 0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9731165340968542, 1.973644460950579, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.0846666693687439, 0.1003333330154419, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0], [1, 6, 2, 4, 3, 2, 4, 4, 9, 9], [5, 0, 3, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [5, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [3, 0, 2, 2], [73, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 2, 17, 17, 10, 7, 3, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.divide_no_nan(tf.math.add(tf.math.pow(tf.math.add(beta, grad), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(tf.math.pow(grad, tf.math.pow(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha))), tf.math.add(beta, grad))))), tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07251353561878204, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1], [0, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [1, 6, 2, 4, 3, 2, 4, 4, 9, 9], [5, 0, 3, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [73, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.79900555125505e+22, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [7.163572085073567e+18, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [1, 6, 9, 8, 3, 2, 4, 4, 9, 9], [3, 1, 3, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [4, 9, 9, 8, 4, 7, 4, 5, 6], [3, 0, 2, 2], [62, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(sigma, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0], [1, 6, 9, 8, 3, 2, 4, 4, 9, 9], [3, 5, 3, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [1, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [3, 1, 2, 2], [62, 9]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 1, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303217389501396, 2.302129558174759, 2.302444593072835, 2.3024538805330153, 2.302025239071779, 2.303182801140959], "accuracy": [0.09113723784685135, 0.09655263274908066, 0.09734513610601425, 0.09457138925790787, 0.09232597798109055, 0.09232597798109055], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]