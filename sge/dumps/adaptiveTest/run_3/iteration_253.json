[{"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [14, 80, 61], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 2, 0, 0, 2, 4, 6, 5, 0, 9, 5, 8, 1, 8, 9], [3, 1, 3, 3, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [7, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8122857213020325, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.0128296888137553, 1.4407964433897535, 1.0903840272213412, 0.8969044798810201, 0.8425841615845924, 0.7916051704555124, 0.7270343915629838, 0.699005254090281, 0.6686394880822841, 0.638703191725963, 0.6386548244028893, 0.6123794140816995, 0.6045454112120812, 0.6020218083304563, 0.5629032769176103, 0.5767969551449832, 0.5477193156725947, 0.5256978521934669, 0.5483296456716127, 0.5225167539865743, 0.5155611988922167, 0.4909426710428012, 0.5205200948278744, 0.4916626624600636, 0.46432628872183257, 0.4723393284153425, 0.46219639094939335, 0.44533776094601407, 0.45081967398034206, 0.4620433035716877, 0.450454092788627, 0.4417234187971064, 0.41940071544690044, 0.45331161980458284, 0.41775609810102604, 0.4245113149106211, 0.39757975848942007, 0.3890515357598401, 0.4149034459475025, 0.3847976529941488, 0.40007678015183906, 0.37355834239383556], "accuracy": [0.32267865538597107, 0.48791441321372986, 0.6229031682014465, 0.6795667409896851, 0.6884163022041321, 0.6999075412750244, 0.7276449799537659, 0.7354378700256348, 0.7454761862754822, 0.7548540234565735, 0.7589486241340637, 0.770439863204956, 0.7693831920623779, 0.7808743715286255, 0.789459764957428, 0.7832518815994263, 0.7924976944923401, 0.7991018295288086, 0.7902522683143616, 0.800818920135498, 0.7996301651000977, 0.8129705190658569, 0.8059701323509216, 0.8162726163864136, 0.82683926820755, 0.8277638554573059, 0.8301413059234619, 0.8364813327789307, 0.833179235458374, 0.8249900937080383, 0.8297450542449951, 0.8355567455291748, 0.841500461101532, 0.82683926820755, 0.8426892161369324, 0.839519202709198, 0.8527275323867798, 0.8553691506385803, 0.8433496356010437, 0.8569541573524475, 0.8519350290298462, 0.8622375130653381], "val_loss": [1.5506516184125627, 1.1234863826206751, 0.8802751983915057, 0.637907590184893, 0.626493079321725, 0.569691504750933, 0.5926386628832135, 0.5246572664805821, 0.5343468700136457, 0.5407547950744629, 0.5476876326969692, 0.5262716838291713, 0.5988695621490479, 0.48343426840645926, 0.47577525888170513, 0.4815534864153181, 0.44752977575574604, 0.4388194595064436, 0.44817982401166645, 0.4372032199587141, 0.42535124506269184, 0.46246891362326487, 0.4112598385129656, 0.4074362686702183, 0.408954918384552, 0.39813477652413504, 0.4240812233516148, 0.40814082963126047, 0.39114586796079365, 0.39883317266191753, 0.38042729241507395, 0.4104075176375253, 0.40694741691861835, 0.38241495404924664, 0.37203556299209595, 0.39046970435551237, 0.36610754898616243, 0.3719725353377206, 0.36471670866012573, 0.3983318975993565, 0.3729974031448364, 0.38781421525137766], "val_accuracy": [0.43833333253860474, 0.578000009059906, 0.6546666622161865, 0.7096666693687439, 0.7160000205039978, 0.7403333187103271, 0.7433333396911621, 0.7586666941642761, 0.7613333463668823, 0.7566666603088379, 0.7363333106040955, 0.7726666927337646, 0.718666672706604, 0.7829999923706055, 0.7900000214576721, 0.7910000085830688, 0.7979999780654907, 0.8109999895095825, 0.8026666641235352, 0.7996666431427002, 0.8206666707992554, 0.7960000038146973, 0.8220000267028809, 0.8270000219345093, 0.8276666402816772, 0.8253333568572998, 0.8116666674613953, 0.828000009059906, 0.8336666822433472, 0.8256666660308838, 0.8363333344459534, 0.8119999766349792, 0.8190000057220459, 0.831333339214325, 0.8463333249092102, 0.8333333134651184, 0.8529999852180481, 0.8476666808128357, 0.8443333506584167, 0.8253333568572998, 0.8363333344459534, 0.8323333263397217]}}, {"genotype": [[0], [1, 0, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], [5, 0, 1, 4, 0, 2, 4, 3, 0, 2, 5, 6, 1, 6, 8, 6, 4, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 5, 3, 1, 1, 4, 3, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8100000023841858, "mapping_values": [1, 2, 2, 1, 1, 0, 22, 22, 13, 9, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.square(grad)))))), tf.math.add(beta, grad))), alpha))), tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), grad)), beta)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.013033147343807, 1.4401139227028583, 1.0758903926043322, 0.9319410292526923, 0.8148451590219965, 0.8244679757963318, 0.7387880067295638, 0.7008276456193744, 0.6635592718795779, 0.649129370963805, 0.6228800886547434, 0.620110977862757, 0.609815799596366, 0.5960987346000077, 0.5655492904903929, 0.5751186237280411, 0.5470930305233941, 0.5288458977944154, 0.5461786110182921, 0.5174569657702, 0.51972364625517, 0.4906740811451819, 0.5162618604231946, 0.4810833749266002, 0.4626254139598712, 0.4690726916425657, 0.4644546960645962, 0.45348296136652017, 0.4475250516538024, 0.46325447881824827, 0.449031249615715, 0.4390999765845495, 0.4202465681572474, 0.4487425060934158, 0.4167907064530387, 0.4210419297934744, 0.39605505931977314, 0.3901439196579114, 0.41330905310418925, 0.38849804850459774, 0.39717911281653084, 0.36907380424108266], "accuracy": [0.32267865538597107, 0.48910316824913025, 0.6222427487373352, 0.6572447419166565, 0.7036058902740479, 0.6885483860969543, 0.7206445932388306, 0.7376832365989685, 0.7473253011703491, 0.7506273984909058, 0.7652885913848877, 0.7630431652069092, 0.7627789974212646, 0.7808743715286255, 0.7893276810646057, 0.7792893648147583, 0.7960638999938965, 0.7993659973144531, 0.7932901978492737, 0.8037247657775879, 0.8000264167785645, 0.8158763647079468, 0.809140145778656, 0.8165367841720581, 0.8296129703521729, 0.8302733898162842, 0.8278959393501282, 0.8294808864593506, 0.8363492488861084, 0.8256505131721497, 0.8294808864593506, 0.8368775844573975, 0.841500461101532, 0.8300092220306396, 0.8433496356010437, 0.8397833704948425, 0.8562937378883362, 0.8553691506385803, 0.8449346423149109, 0.8545766472816467, 0.8537842035293579, 0.8656716346740723], "val_loss": [1.5537691456930978, 1.1146433353424072, 0.784511855670384, 0.7420327152524676, 0.7205172777175903, 0.5729079927716937, 0.5855598960603986, 0.5285244839532035, 0.5193454708371844, 0.5296912022999355, 0.5323212317058018, 0.5402294567653111, 0.578509875706264, 0.48241504601069857, 0.4816645724432809, 0.48298713139125277, 0.4527687685830252, 0.4376163142068045, 0.43817693846566336, 0.442129237311227, 0.4215710759162903, 0.4562302827835083, 0.4105484570775713, 0.40798291989735197, 0.41001375232424053, 0.4004118357385908, 0.4182628222874233, 0.413264947278159, 0.3962592227118356, 0.39048021180289133, 0.381284236907959, 0.4117585676056998, 0.4102048788751875, 0.37767159938812256, 0.369928206716265, 0.38541827883039204, 0.36530594314847675, 0.37492758887154715, 0.3868790183748518, 0.39395999908447266, 0.3651137522288731, 0.394880405494145], "val_accuracy": [0.43833333253860474, 0.5796666741371155, 0.6276666522026062, 0.6600000262260437, 0.6620000004768372, 0.7310000061988831, 0.7426666617393494, 0.7586666941642761, 0.7606666684150696, 0.7609999775886536, 0.753000020980835, 0.7580000162124634, 0.7223333120346069, 0.7803333401679993, 0.7833333611488342, 0.7873333096504211, 0.7956666946411133, 0.8143333196640015, 0.8050000071525574, 0.8003333210945129, 0.8233333230018616, 0.8003333210945129, 0.8240000009536743, 0.8226666450500488, 0.828000009059906, 0.8216666579246521, 0.8119999766349792, 0.8199999928474426, 0.8236666917800903, 0.8296666741371155, 0.8356666564941406, 0.8073333501815796, 0.8190000057220459, 0.8363333344459534, 0.8460000157356262, 0.8366666436195374, 0.8510000109672546, 0.8483333587646484, 0.8253333568572998, 0.8263333439826965, 0.8426666855812073, 0.828000009059906]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [43, 80, 61], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 2, 0, 0, 2, 4, 6, 5, 0, 9, 5, 8, 1, 8, 9], [3, 1, 5, 3, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8094285726547241, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.0128296977572075, 1.4403814292618502, 1.0883959250096804, 0.906853737068718, 0.8282909260812044, 0.7878457586274974, 0.727792761722938, 0.6884961671848748, 0.6783688711357974, 0.6338242050080708, 0.6341826569182195, 0.6221400809609233, 0.6057657573862697, 0.6000922158204994, 0.5651173782764315, 0.580925173873458, 0.5421234513585593, 0.5256924389879607, 0.5458177897467542, 0.5261917821034591, 0.5117337687683773, 0.4907939745064787, 0.5170390694613124, 0.48308635058734933, 0.4602009657509118, 0.47193676036866333, 0.46764067473145143, 0.45894434027006725, 0.44542962312698364, 0.46369728586929126, 0.45237398775829035, 0.43739600260936984, 0.41889184829880455, 0.449732331091371, 0.4208452281124005, 0.4230728780612371, 0.3952534563978193, 0.38531576014544433, 0.418302895740637, 0.38722924399826236, 0.4011555648853026, 0.37245422425350067], "accuracy": [0.32267865538597107, 0.4880464971065521, 0.6247523427009583, 0.67666095495224, 0.6847180128097534, 0.7049266695976257, 0.7275128960609436, 0.7413815855979919, 0.7425703406333923, 0.7617223858833313, 0.7602694630622864, 0.7652885913848877, 0.7680623531341553, 0.7795535326004028, 0.7887993454933167, 0.7794214487075806, 0.7959318161010742, 0.7975168228149414, 0.7915731072425842, 0.7992339134216309, 0.802800178527832, 0.8132346868515015, 0.8063663840293884, 0.8186501264572144, 0.8304054737091064, 0.8252542614936829, 0.8260467648506165, 0.8302733898162842, 0.8342359066009521, 0.8261788487434387, 0.8304054737091064, 0.837537944316864, 0.8409721255302429, 0.829216718673706, 0.8401796221733093, 0.8374059200286865, 0.8549728989601135, 0.8595958352088928, 0.8408400416374207, 0.8561616539955139, 0.8507462739944458, 0.8615770936012268], "val_loss": [1.5506528445652552, 1.1270596981048584, 0.890392644064767, 0.6665303536823818, 0.6242998327527728, 0.5598266465323312, 0.5744808571679252, 0.5251332180840629, 0.5316645928791591, 0.5422916242054531, 0.5737135921205793, 0.5246609108788627, 0.5930524894169399, 0.48707495416913715, 0.4857762370790754, 0.46891190324510845, 0.44810259342193604, 0.4421295097896031, 0.4515073129108974, 0.4375355413981846, 0.41963378872190205, 0.45062078748430523, 0.4110429457255772, 0.40520421096256803, 0.414638306413378, 0.4016908662659781, 0.41983517578669954, 0.4139214413506644, 0.38617449147360666, 0.3966857876096453, 0.3772692254611424, 0.40159791707992554, 0.4200696774891445, 0.37736864600862774, 0.3764213579041617, 0.38310578891209196, 0.36439967155456543, 0.3914615937641689, 0.36845849241529194, 0.4039072905267988, 0.37437063455581665, 0.3894659791673933], "val_accuracy": [0.43833333253860474, 0.5773333311080933, 0.6493333578109741, 0.7003333568572998, 0.7176666855812073, 0.7523333430290222, 0.7483333349227905, 0.7639999985694885, 0.765333354473114, 0.753333330154419, 0.7283333539962769, 0.7753333449363708, 0.7213333249092102, 0.7763333320617676, 0.7806666493415833, 0.7950000166893005, 0.7990000247955322, 0.812666654586792, 0.7976666688919067, 0.8050000071525574, 0.8226666450500488, 0.8036666512489319, 0.8199999928474426, 0.824999988079071, 0.8259999752044678, 0.8230000138282776, 0.8163333535194397, 0.8196666836738586, 0.8330000042915344, 0.8270000219345093, 0.840666651725769, 0.8159999847412109, 0.8133333325386047, 0.8339999914169312, 0.8413333296775818, 0.8363333344459534, 0.8496666550636292, 0.8276666402816772, 0.8363333344459534, 0.8190000057220459, 0.8379999995231628, 0.8299999833106995]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 2, 0, 0, 2, 4, 6, 5, 0, 9, 5, 8, 1, 8, 9], [3, 1, 3, 3, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8057143092155457, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.012887295352753, 1.441413272924553, 1.0885272080698947, 0.9024239391730116, 0.8249533189648351, 0.7979936548794706, 0.720606967088427, 0.7002091962017986, 0.658070558806326, 0.6428718957225833, 0.6222068869662937, 0.6369096539543604, 0.6005593894132927, 0.6050457787268103, 0.5706420961923414, 0.5798933617175295, 0.5451551945359715, 0.5300969704031047, 0.5491029359503602, 0.5198390921975139, 0.5086455617039478, 0.49257000136872986, 0.5199444578969641, 0.47962904856614685, 0.46092393908911944, 0.4733568999737702, 0.46094622234185895, 0.45487538368600217, 0.44851251489938826, 0.4611936394352057, 0.44702852195862686, 0.4392540198566891, 0.4212459030758829, 0.4514600671576849, 0.41737287656789474, 0.4199790995331362, 0.39866800717847095, 0.3855592412695735, 0.4155876248338833, 0.3856064002031443, 0.4033342903993385, 0.369292314179963], "accuracy": [0.32241448760032654, 0.48751816153526306, 0.6206578016281128, 0.6756042838096619, 0.6848500967025757, 0.6984546184539795, 0.7293620109558105, 0.7318716049194336, 0.7473253011703491, 0.7549861073493958, 0.7683265209197998, 0.7581561207771301, 0.7683265209197998, 0.7746664881706238, 0.7844406366348267, 0.7798177003860474, 0.7968564033508301, 0.7959318161010742, 0.7932901978492737, 0.7997622489929199, 0.8038568496704102, 0.8153480291366577, 0.806630551815033, 0.8230088353157043, 0.8325188159942627, 0.8261788487434387, 0.8329150676727295, 0.8310658931732178, 0.8370096683502197, 0.8253863453865051, 0.8329150676727295, 0.8358209133148193, 0.8397833704948425, 0.8269713521003723, 0.8413683772087097, 0.8403117060661316, 0.8521991968154907, 0.8590674996376038, 0.8429533839225769, 0.8574824929237366, 0.8495575189590454, 0.8644828796386719], "val_loss": [1.5515916688101632, 1.1099706717899867, 0.878238354410444, 0.645363586289542, 0.6593283585139683, 0.565152474812099, 0.5806084190096173, 0.5189851692744664, 0.5289671421051025, 0.5300894635064262, 0.573744569505964, 0.5267621619360787, 0.5388165882655552, 0.4899412563868931, 0.4812219313212803, 0.4751767601285662, 0.4494473934173584, 0.4374529463904245, 0.4482971600123814, 0.43821070875440327, 0.4243747591972351, 0.4548277514321463, 0.41103477137429373, 0.40460197414670673, 0.42562014716012136, 0.3941854238510132, 0.41049916403634207, 0.4228379300662449, 0.39008683817727224, 0.39272390944617136, 0.37699409893580843, 0.40865342957632883, 0.40680408477783203, 0.37844871623175486, 0.37241528715406147, 0.3812715326036726, 0.3631150041307722, 0.37078578983034405, 0.36718350648880005, 0.4040518743651254, 0.3655460476875305, 0.3890320999281747], "val_accuracy": [0.43833333253860474, 0.5793333053588867, 0.6556666493415833, 0.7139999866485596, 0.6883333325386047, 0.75, 0.7486666440963745, 0.762666642665863, 0.7599999904632568, 0.7593333125114441, 0.7316666841506958, 0.7636666893959045, 0.7559999823570251, 0.7796666622161865, 0.7850000262260437, 0.7929999828338623, 0.7986666560173035, 0.8146666884422302, 0.8003333210945129, 0.8016666769981384, 0.8213333487510681, 0.8029999732971191, 0.8216666579246521, 0.824999988079071, 0.8240000009536743, 0.8306666612625122, 0.8136666417121887, 0.8083333373069763, 0.8276666402816772, 0.8293333053588867, 0.8410000205039978, 0.8113333582878113, 0.8213333487510681, 0.8299999833106995, 0.843666672706604, 0.8349999785423279, 0.8519999980926514, 0.847000002861023, 0.8363333344459534, 0.8213333487510681, 0.8423333168029785, 0.8286666870117188]}}, {"genotype": [[0], [0, 1, 1], [0, 1, 1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [63, 80, 61], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 1, 4, 0, 2, 9, 9, 0, 4, 5, 6, 1, 6, 8, 6, 4, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 0, 3, 0, 3, 3, 1, 2], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.7917143106460571, "mapping_values": [1, 3, 3, 1, 2, 1, 11, 11, 8, 3, 3, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [1.994895690499264, 1.3888923647601796, 1.0772018739733447, 0.9000565389978447, 0.8030004949617568, 0.769459143156987, 0.7277475995252853, 0.720836878468442, 0.6976610945121661, 0.6525629487224716, 0.6912688530352704, 0.6233594787512883, 0.6027002903086525, 0.6010066241620318, 0.6023277323228052, 0.5595731290418711, 0.5730395693867797, 0.5517789363514682, 0.5392930773050557], "accuracy": [0.3339056968688965, 0.5262184739112854, 0.6180161237716675, 0.6613393425941467, 0.7029454708099365, 0.7054550051689148, 0.7189275026321411, 0.7235503792762756, 0.7329282760620117, 0.7452120184898376, 0.7304186820983887, 0.7650244235992432, 0.7755910754203796, 0.7707040309906006, 0.7714964747428894, 0.7931581139564514, 0.7783648371696472, 0.7928939461708069, 0.7926297783851624], "val_loss": [1.4830518450055803, 1.0523248400006975, 0.7465478011540004, 0.6670490673610142, 0.6094763960157122, 0.5539329903466361, 0.5634128366197858, 0.6019215754100254, 0.5461093187332153, 0.543460590498788, 0.49814518860408236, 0.48693690981183735, 0.5103062902178083, 0.46384452070508686, 0.4671907935823713, 0.5203978845051357, 0.4723172528403146, 0.4504584755216326, 0.4526470558983939], "val_accuracy": [0.4946666657924652, 0.5423333048820496, 0.656000018119812, 0.7043333053588867, 0.7076666951179504, 0.7433333396911621, 0.7300000190734863, 0.7153333425521851, 0.7440000176429749, 0.7393333315849304, 0.7680000066757202, 0.778333306312561, 0.7526666522026062, 0.8046666383743286, 0.7893333435058594, 0.7486666440963745, 0.7816666960716248, 0.8006666898727417, 0.7926666736602783]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [7, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], [5, 2, 0, 0, 2, 4, 9, 5, 0, 9, 0, 8, 1, 8, 9], [4, 0, 3, 3, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [7, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [99, 9, 76, 58]], "fitness": -0.31228572130203247, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.908204166912179, 5.192878249613931, 2.2106670141692457, 2.3052325633853545, 2.3030295919953176, 2.3003161193168458], "accuracy": [0.19310526549816132, 0.18201030790805817, 0.20512482523918152, 0.1006472036242485, 0.0948355570435524, 0.11068551242351532], "val_loss": [3.517354828970773, 1.964390686580113, 1.9767167908804757, 1.9744667325701033, 1.9726946013314384, 1.9659594808306013], "val_accuracy": [0.2540000081062317, 0.1080000028014183, 0.09666666388511658, 0.09666666388511658, 0.12833333015441895, 0.15733332931995392]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 2, 0, 0, 2, 4, 6, 5, 0, 9, 5, 8, 1, 8, 9], [2, 1, 5, 3, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 7, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [83, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.add(alpha, sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07792893797159195, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [43, 80, 61], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 2, 0, 0, 2, 4, 6, 5, 0, 9, 5, 8, 1, 8, 9], [3, 1, 5, 3, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11055342853069305, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 0, 1, 4, 0, 2, 4, 3, 0, 2, 5, 6, 1, 6, 8, 6, 4, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 5, 3, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [7, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 4, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 9, 5, 4, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.pow(alpha, sigma)), tf.math.sqrt(tf.math.divide_no_nan(beta, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1], [0, 1, 1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [58, 80, 61], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 1, 4, 2, 2, 3, 9, 0, 1, 5, 6, 1, 6, 8, 6, 4, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 5, 3, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [1, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [40, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 2, 15, 15, 9, 6, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha))), tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.add(beta, grad)), tf.math.add(beta, alpha))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [757954412.4066937, 14438708270.93277, 66512619177.26905, 185620798707.86105, 399807108353.65686, 740013593009.3505], "accuracy": [0.09826971590518951, 0.10038304328918457, 0.10091137140989304, 0.09800554811954498, 0.10434553027153015, 0.10342095047235489], "val_loss": [2858796032.0, 22853306660.57143, 77110902784.0, 182759021421.7143, 356924148004.5714, 616729786075.4286], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [43, 80, 61], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [2, 2, 0, 0, 2, 4, 6, 5, 0, 2, 5, 8, 1, 8, 9], [3, 1, 3, 3, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 17, 17, 10, 7, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.negative(tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(grad)))), tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.add(alpha, alpha)))))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11055342853069305, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1], [0, 1, 0], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [43, 80, 61], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 2, 1, 6, 0, 2, 2, 9, 0, 1, 5, 6, 1, 6, 8, 6, 4, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 5, 0, 0, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 15, 15, 9, 6, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(alpha)), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.math.negative(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07792893797159195, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 2, 0, 1, 1, 1, 1, 2, 1, 2, 2], [43, 80, 61], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 2, 0, 0, 2, 4, 6, 5, 0, 9, 5, 8, 1, 8, 9], [1, 1, 5, 3, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [2, 2, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), alpha), sigma)", "other_info": {"loss": [2.30171130295868, 2.3101506921294312, 2.470115142617448, 6.714215799109213, 20.405750459321595, 34.80846598207864], "accuracy": [0.10672302544116974, 0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9749953406197684, 2.0030706269400462, 2.626928056989397, 12.387435640607562, 24.723920549665177, 37.048958914620535], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 2, 0, 0, 2, 4, 6, 5, 0, 9, 5, 8, 1, 8, 9], [3, 1, 3, 3, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [2, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [3, 3, 4, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [99, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 10, 5, 5, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.pow(sigma, sigma), tf.math.sqrt(tf.math.divide_no_nan(beta, alpha))), tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [43, 80, 61], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 2, 0, 0, 5, 4, 6, 5, 0, 9, 5, 8, 1, 8, 9], [3, 1, 5, 3, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 2, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 5, 2, 3, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(sigma, sigma), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 0, 1, 4, 0, 2, 4, 3, 0, 2, 5, 6, 1, 6, 8, 6, 4, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 5, 3, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [4, 1], [52], [0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 10, 7, 0, 1, 1, 1, 0, 1, 4, 2, 2, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha))), grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), alpha)))), alpha))), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), sigma)", "other_info": {"loss": [Infinity, 4.4263003719260805, 8.619732342313041, 13.105697243236643, 17.59588040185721, 22.087134084272], "accuracy": [0.07713644206523895, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.69144834790911, 5.818918636866978, 9.664674758911133, 13.52088029044015, 17.378326960972377, 21.23260498046875], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [3, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 3, 0, 1, 1, 1, 1, 2, 1, 2, 2], [34, 80, 61], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 2, 0, 0, 2, 4, 6, 5, 0, 9, 5, 8, 1, 8, 9], [3, 1, 5, 3, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [1, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 10, 4, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha))))), grad)), tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))))))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07792893797159195, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [43, 80, 61], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 2, 0, 0, 2, 4, 6, 5, 0, 9, 5, 8, 1, 8, 9], [3, 1, 5, 3, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [9, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.302914585907855, 2.3035485728415894, 2.3024777303581554, 2.3021966301297403, 2.3029782013130413, 2.3036587282714116], "accuracy": [0.09325055778026581, 0.08915598690509796, 0.09615638852119446, 0.0944393053650856, 0.08981640636920929, 0.09008057415485382], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [43, 80, 61], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 1, 4, 0, 2, 3, 9, 0, 1, 5, 6, 1, 6, 8, 6, 4, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 5, 3, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1], [3, 7, 9, 8, 6, 7, 4, 5, 6, 9, 2], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 17, 11, 6, 4], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(alpha)), tf.math.divide_no_nan(tf.math.add(sigma, beta), tf.math.pow(alpha, tf.math.square(tf.math.divide_no_nan(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))))))", "other_info": {"loss": [2.302914585907855, 2.3035485728415894, 2.3024777303581554, 2.3021966301297403, 2.3029782013130413, 2.3036587282714116], "accuracy": [0.09325055778026581, 0.08915598690509796, 0.09615638852119446, 0.0944393053650856, 0.08981640636920929, 0.09008057415485382], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [79, 80, 61], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [5, 2, 0, 0, 2, 4, 6, 5, 0, 9, 5, 8, 1, 8, 9], [3, 1, 3, 3, 1, 1, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [7, 1], [52], [0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.03285714238882065, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(sigma), sigma)", "other_info": {"loss": [2.3034475394180816, 2.305686020375621, 2.306437889629934, 2.3077510831976737, 2.3114040109223506, 2.315385012751982], "accuracy": [0.09219389408826828, 0.08585391938686371, 0.09100515395402908, 0.08492933213710785, 0.080042265355587, 0.080042265355587], "val_loss": [1.9723284585135323, 1.9737260682242257, 1.9753565107073103, 1.9769398825509208, 1.9790084702628, 1.9813034193856376], "val_accuracy": [0.027666667476296425, 0.022333333268761635, 0.020666666328907013, 0.01966666616499424, 0.01899999938905239, 0.024666666984558105]}}]