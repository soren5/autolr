[{"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 3, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8142856955528259, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 5, 2, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0691749936223363, 1.706026173018981, 1.194309727760779, 0.913316980518008, 0.8721819348291808, 0.7736467145626429, 0.748810585621184, 0.7294869646498903, 0.6761783951734271, 0.6879654497738764, 0.6420770958823739, 0.6392303904396212, 0.6184456534767352, 0.6089656629251876, 0.604019773996832, 0.5820794585689247, 0.5696737882034764, 0.5713236178578387, 0.5455924724354767, 0.5219379066240046, 0.5222871891692676, 0.5141515685440984, 0.5123929159909885, 0.5053963573176422, 0.49559534459286647, 0.49425893079618877, 0.4715340216760355, 0.5154416753733714, 0.4751050933524366, 0.45047380478705523, 0.456267296823103, 0.44697836991692297, 0.449655063081301, 0.4326151196848935, 0.44203202159350274, 0.42356876177306596, 0.4134902788261932, 0.4112829277465341, 0.41866154883909595, 0.3910744871445745, 0.40158531426785093, 0.3858476542620343, 0.4018529985504002, 0.3862605055427791, 0.3933490749678324, 0.3648052789263989, 0.37490237678330196, 0.3915810244289041, 0.37440090203219084, 0.3606730318300917, 0.35915856348950204, 0.3565890989275562, 0.36189942760017835, 0.345503302908309, 0.3471756543087811, 0.345557172552564], "accuracy": [0.3144895136356354, 0.46691322326660156, 0.577070415019989, 0.6596222519874573, 0.6675472259521484, 0.7104741930961609, 0.7209087014198303, 0.7201162576675415, 0.743891179561615, 0.7392682433128357, 0.7556465268135071, 0.7564390301704407, 0.7656848430633545, 0.7675340175628662, 0.7689869403839111, 0.7769119143486023, 0.780610203742981, 0.7802139520645142, 0.7915731072425842, 0.7991018295288086, 0.8012151718139648, 0.8080834746360779, 0.8063663840293884, 0.811649739742279, 0.8128384351730347, 0.8076872229576111, 0.8241975903511047, 0.806630551815033, 0.8215559124946594, 0.8317263126373291, 0.8285563588142395, 0.8329150676727295, 0.8280280232429504, 0.834632158279419, 0.8359529972076416, 0.843481719493866, 0.8454629778862, 0.8519350290298462, 0.8396512866020203, 0.8544445633888245, 0.8504821062088013, 0.857218325138092, 0.8465195894241333, 0.8565579056739807, 0.8515387773513794, 0.8679170608520508, 0.859199583530426, 0.8508783578872681, 0.8605204224586487, 0.8652753829956055, 0.8696341514587402, 0.8646149635314941, 0.8659358024597168, 0.8692378997802734, 0.8644828796386719, 0.8725399374961853], "val_loss": [1.8185411861964635, 1.1291913305010115, 0.6848678248269218, 0.6587426832744053, 0.6381015607288906, 0.6510237114770072, 0.5475577626909528, 0.6176680156162807, 0.5319161074502128, 0.5429788657597133, 0.5185216324669975, 0.5136874573571342, 0.5030054535184588, 0.4768556867327009, 0.5218796219144549, 0.47859695979527067, 0.48348242895943777, 0.45442497730255127, 0.4381519981792995, 0.44781465189797537, 0.4435873542513166, 0.43129616124289377, 0.43274669136319843, 0.42180525405066355, 0.4193035789898464, 0.43078173058373587, 0.4118291905948094, 0.42759227752685547, 0.40992651666913715, 0.4129630582673209, 0.4177881564412798, 0.393544145992824, 0.3843091811452593, 0.43120752913611277, 0.38410143341336933, 0.3680477738380432, 0.3946511915751866, 0.3959500193595886, 0.3695799538067409, 0.3665409002985273, 0.3743685909679958, 0.3975260428019932, 0.3597634860447475, 0.37344930853162495, 0.354153505393437, 0.3908659134592329, 0.3689141018050058, 0.3695453405380249, 0.3549097180366516, 0.3448387214115688, 0.3480942504746573, 0.3486957039151873, 0.3519689696175711, 0.3650915282113211, 0.4036815251622881, 0.3454060043607439], "val_accuracy": [0.42399999499320984, 0.5483333468437195, 0.7070000171661377, 0.6946666836738586, 0.7183333039283752, 0.6983333230018616, 0.7519999742507935, 0.7196666598320007, 0.7559999823570251, 0.7506666779518127, 0.7676666378974915, 0.7590000033378601, 0.7649999856948853, 0.7870000004768372, 0.762333333492279, 0.7789999842643738, 0.7799999713897705, 0.7956666946411133, 0.8066666722297668, 0.8053333163261414, 0.8076666593551636, 0.8130000233650208, 0.8036666512489319, 0.812333345413208, 0.8106666803359985, 0.7990000247955322, 0.8263333439826965, 0.809333324432373, 0.812333345413208, 0.812666654586792, 0.8196666836738586, 0.8273333311080933, 0.8299999833106995, 0.800000011920929, 0.8420000076293945, 0.8443333506584167, 0.8330000042915344, 0.8373333215713501, 0.840666651725769, 0.8463333249092102, 0.8423333168029785, 0.824999988079071, 0.843999981880188, 0.828000009059906, 0.8473333120346069, 0.8323333263397217, 0.8500000238418579, 0.8453333377838135, 0.8513333201408386, 0.8523333072662354, 0.856333315372467, 0.8546666502952576, 0.8450000286102295, 0.8433333039283752, 0.8240000009536743, 0.8536666631698608]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [53, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8114285469055176, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 5, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0693495671636692, 1.7092094306759373, 1.2054370034325157, 0.9254560495616423, 0.864979104744744, 0.7727829820491603, 0.7592788226553131, 0.7134315492753828, 0.6714072909494984, 0.6617107102427232, 0.6796434187476567, 0.6246210871953943, 0.6389251428981892, 0.5927286881654805, 0.6067213495456941, 0.5858408402710102, 0.5695243208061325, 0.5721268262514868, 0.5400917328753413, 0.517029629627853, 0.5279237919432564, 0.5232971039162871, 0.5103618695027068, 0.5063155723199112, 0.5017090089616207, 0.4930964586143055, 0.47599226561881897, 0.5214743415055384, 0.47591196597134194, 0.44584458704637797, 0.4531366359863173, 0.44427738808417255, 0.44980113388383236, 0.43347524775883717, 0.4520564891005299, 0.4255883881578419, 0.40818700079022935, 0.40956842306503893, 0.41688571931931323, 0.390478647895981, 0.410958024122932], "accuracy": [0.31422534584999084, 0.46691322326660156, 0.5720512270927429, 0.6546030640602112, 0.6750759482383728, 0.709549605846405, 0.715889573097229, 0.7284374833106995, 0.752740740776062, 0.7461365461349487, 0.7374191284179688, 0.7637035846710205, 0.7547219395637512, 0.7745344042778015, 0.770439863204956, 0.7744023203849792, 0.7829877138137817, 0.7804781198501587, 0.7957997918128967, 0.8038568496704102, 0.8009510040283203, 0.8043851256370544, 0.8057059645652771, 0.8145555257797241, 0.8098005652427673, 0.8099326491355896, 0.8236692547798157, 0.8037247657775879, 0.8202351331710815, 0.8356888294219971, 0.8308017253875732, 0.8341038227081299, 0.8305375576019287, 0.8363492488861084, 0.8309338092803955, 0.841500461101532, 0.8495575189590454, 0.8514066934585571, 0.8407079577445984, 0.854708731174469, 0.8462554216384888], "val_loss": [1.8189358030046736, 1.1429318019321986, 0.6793058259146554, 0.6719090257372174, 0.645705120904105, 0.6423517635890416, 0.556059752191816, 0.6058601651872907, 0.5282190527234759, 0.5875459398542132, 0.5119217463902065, 0.5207593270710537, 0.48256562437329975, 0.502519028527396, 0.5404378005436489, 0.4761105946132115, 0.47559681960514616, 0.45135613850184847, 0.4418926920209612, 0.44053852558135986, 0.45017639228275846, 0.4341333338192531, 0.42448753118515015, 0.4257735865456717, 0.4190920335905893, 0.42966222763061523, 0.42160811594554354, 0.42805472442082, 0.40491650785718647, 0.4111649308885847, 0.4164173517908369, 0.39070400169917513, 0.3828165020261492, 0.44951764174870085, 0.3814966678619385, 0.3672032185963222, 0.3833951609475272, 0.3911725538117545, 0.3718422140393938, 0.3784664443561009, 0.36655907120023457], "val_accuracy": [0.42366665601730347, 0.5513333082199097, 0.7166666388511658, 0.6990000009536743, 0.7056666612625122, 0.6976666450500488, 0.7556666731834412, 0.7333333492279053, 0.7573333382606506, 0.7153333425521851, 0.765666663646698, 0.7553333044052124, 0.7950000166893005, 0.7676666378974915, 0.753333330154419, 0.7829999923706055, 0.784333348274231, 0.800000011920929, 0.8016666769981384, 0.8113333582878113, 0.8073333501815796, 0.8103333115577698, 0.8086666464805603, 0.8103333115577698, 0.812333345413208, 0.8053333163261414, 0.8209999799728394, 0.8090000152587891, 0.812333345413208, 0.8146666884422302, 0.8180000185966492, 0.8309999704360962, 0.8296666741371155, 0.7900000214576721, 0.840666651725769, 0.8453333377838135, 0.8426666855812073, 0.8423333168029785, 0.8410000205039978, 0.843999981880188, 0.8453333377838135]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8008571267127991, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.069304965159928, 1.7077426340885136, 1.192200233325069, 0.9196982666202556, 0.8393506590543154, 0.7965390017444841, 0.7669030728278426, 0.7084881853213353, 0.6904799776810382, 0.6635915054825902, 0.6570551888801953, 0.6158217879853874, 0.6250878563174136, 0.5884626329834781, 0.6067545924046887, 0.5875484971653091, 0.5638477636909346, 0.5694753183050714, 0.5447165697258005, 0.5206051487035251, 0.5190649745156027, 0.5263300904067532, 0.5091418810193691, 0.5055724859332144, 0.4961640821149116, 0.48685154016101995, 0.47254604111415616, 0.5214108485768358, 0.4757954415360525, 0.4455144269245018, 0.4483926039700337, 0.4453720410880065], "accuracy": [0.3143574297428131, 0.46651697158813477, 0.5769383311271667, 0.6581693291664124, 0.6840575933456421, 0.6966054439544678, 0.7099458575248718, 0.7298903465270996, 0.7401928305625916, 0.7448157668113708, 0.743891179561615, 0.7705719470977783, 0.7578919529914856, 0.7820631265640259, 0.7688548564910889, 0.7753269076347351, 0.7827235460281372, 0.7803460359573364, 0.7947431206703186, 0.8000264167785645, 0.805177628993988, 0.8034605979919434, 0.8072909712791443, 0.8128384351730347, 0.8120459914207458, 0.8125742673873901, 0.8228767514228821, 0.8063663840293884, 0.8186501264572144, 0.8341038227081299, 0.833179235458374, 0.8359529972076416], "val_loss": [1.819251469203404, 1.1361097267695837, 0.7094749552862984, 0.6463638714381627, 0.7684692655290876, 0.6530427421842303, 0.5503270285470145, 0.6173264980316162, 0.5713968106678554, 0.5300558464867728, 0.5080805846623012, 0.5099421058382306, 0.5096557991845267, 0.47690343856811523, 0.5378772701535907, 0.4828539916447231, 0.48392774377550396, 0.45547752720969065, 0.4377510803086417, 0.44650677272251676, 0.46334498269217356, 0.43196105105536325, 0.4313447730881827, 0.42806785447256906, 0.41599076986312866, 0.4271771226610456, 0.4209059647151402, 0.4328256164278303, 0.4023244721548898, 0.4075814996446882, 0.42888511078698294, 0.4016604082924979], "val_accuracy": [0.4243333339691162, 0.5576666593551636, 0.6919999718666077, 0.6990000009536743, 0.6356666684150696, 0.6930000185966492, 0.7536666393280029, 0.7279999852180481, 0.7133333086967468, 0.7699999809265137, 0.7730000019073486, 0.7609999775886536, 0.7720000147819519, 0.7850000262260437, 0.7546666860580444, 0.7773333191871643, 0.7776666879653931, 0.7910000085830688, 0.809333324432373, 0.8050000071525574, 0.7990000247955322, 0.8113333582878113, 0.8036666512489319, 0.809333324432373, 0.812666654586792, 0.8063333630561829, 0.8243333101272583, 0.8056666851043701, 0.8199999928474426, 0.8180000185966492, 0.8116666674613953, 0.8176666498184204]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 2, 1, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [43, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.7665714025497437, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.069349769430547, 1.7073725906298256, 1.1982472637987345, 0.9146340770523672, 0.8407398018193298, 0.8014192234145621, 0.7603065512514449, 0.7026207820614331, 0.6965038548953749, 0.654774222242015, 0.649130750940051, 0.6336776649380372, 0.6171602749112827, 0.6088814094806344, 0.5932781665615827], "accuracy": [0.31422534584999084, 0.46770572662353516, 0.575089156627655, 0.6586976647377014, 0.6837934255599976, 0.7010962963104248, 0.7096816897392273, 0.7353057861328125, 0.7384757399559021, 0.7518161535263062, 0.7516840696334839, 0.7592127919197083, 0.7623828053474426, 0.7765156626701355, 0.7795535326004028], "val_loss": [1.8189430918012346, 1.1388188770839147, 0.6817379168101719, 0.6529458931514195, 0.6638020277023315, 0.6404066937310355, 0.5497627258300781, 0.613742300442287, 0.5568435021809169, 0.5149958985192435, 0.5431476490838187, 0.5125267675944737, 0.5078666380473545, 0.5311298881258283, 0.5903583254132952], "val_accuracy": [0.42366665601730347, 0.5516666769981384, 0.7110000252723694, 0.7089999914169312, 0.7026666402816772, 0.6980000138282776, 0.7556666731834412, 0.7283333539962769, 0.734666645526886, 0.7770000100135803, 0.753333330154419, 0.7590000033378601, 0.7680000066757202, 0.7720000147819519, 0.7436666488647461]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [53, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.7645714282989502, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 5, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.math.negative(tf.math.add(tf.math.add(beta, grad), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0693837985732944, 1.7083314984403093, 1.199106017667163, 0.9130294019472739, 0.8427518406375335, 0.7900947407724489, 0.7607145821807281, 0.7244495535255848, 0.6913242148228798, 0.6669467512123054, 0.6631665437323243, 0.6156959582896139, 0.6222448019209225, 0.5997598754211801, 0.620624845093425, 0.5859226244961219], "accuracy": [0.31422534584999084, 0.4674415588378906, 0.5748249888420105, 0.6588297486305237, 0.6811517477035522, 0.7061154246330261, 0.7219653725624084, 0.724210798740387, 0.7383436560630798, 0.7478536367416382, 0.743891179561615, 0.7705719470977783, 0.763439416885376, 0.7750627398490906, 0.7638356685638428, 0.7769119143486023], "val_loss": [1.8190711566380091, 1.1391019821166992, 0.6901590142931256, 0.6547353267669678, 0.6441104412078857, 0.5737601688929966, 0.5573078904833112, 0.597651754106794, 0.5580195699419294, 0.5311598437173026, 0.5061126947402954, 0.524915371622358, 0.5245594297136579, 0.5100947277886527, 0.542783260345459, 0.48585946219308035], "val_accuracy": [0.4233333468437195, 0.5509999990463257, 0.7076666951179504, 0.7120000123977661, 0.7043333053588867, 0.7433333396911621, 0.746999979019165, 0.7289999723434448, 0.7203333377838135, 0.7720000147819519, 0.7736666798591614, 0.7549999952316284, 0.7556666731834412, 0.7643333077430725, 0.7459999918937683, 0.7736666798591614]}}, {"genotype": [[0], [0, 1, 1], [0, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 2, 1, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [43, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [2, 9, 76, 58]], "fitness": -0.12942856550216675, "mapping_values": [1, 2, 2, 1, 1, 0, 4, 4, 3, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3033237592686815, 2.3003863201574672, 2.3027684618028212, 2.304291709570632, 2.301814752342427, 2.3027533900074877, 2.3019078089623735, 2.30208797553086, 2.301152068578871, 2.300667831942138, 2.3009693057325142, 2.300661548316723, 2.2997473379907794, 2.3002709508209875, 2.299776483851181, 2.299883020709865, 2.301365382100424, 2.3022317726693022, 2.3010394086045456, 2.301145050708628, 2.298708072601135, 2.302266338671109, 2.300442803852342, 2.2995852365973697, 2.298735618969201, 2.2985747338537967, 2.299455891605287, 2.2988434810963416, 2.300143880079514, 2.299152764441425, 2.2981564073105374, 2.2980859266721247, 2.2992776959658205, 2.2964836073557873, 2.2971384124733185, 2.298914870124971, 2.297460999329486, 2.297822054965133, 2.299017823430541, 2.298061928146346, 2.2969560794795054, 2.2971605040598475, 2.2974328456254383, 2.2963725202953684, 2.2960120615091903, 2.2958354396338887, 2.2966480433366177, 2.296074235601479, 2.295488714809667, 2.2966293941919025, 2.2960592145696843, 2.2949542950141573, 2.295953848452978, 2.295309681004978, 2.294453991843473, 2.2938126732628845, 2.2953266922383024, 2.2956936377355404, 2.294783150342005, 2.2939262440522366, 2.295298701405856, 2.2944932119989, 2.29293511471555, 2.2948619671281083, 2.295080731998676, 2.295188069989133, 2.294501037834469, 2.293777753018495, 2.2915406807491476, 2.2930515232559805, 2.293923115859399, 2.293140797142056, 2.292803691693458, 2.2926191176405797, 2.290671211711766, 2.2912632304569356, 2.292080456349891, 2.2908329602481983, 2.2922714070841748, 2.2916824261525903, 2.2917393590984814, 2.291097187079522, 2.2910053835191024, 2.2914604803102208, 2.2904369921149548, 2.291196905059774, 2.2920654445134763, 2.2898443304174503, 2.2902801492824816, 2.2899923744675283, 2.2907429194296074, 2.28971681470774, 2.289890599934149, 2.2901900547401954, 2.2901866953402243, 2.2896974305939035, 2.2895502907142444, 2.287901993456644, 2.2897778550600094, 2.288433334941106], "accuracy": [0.08955223858356476, 0.09536388516426086, 0.08836349099874496, 0.0886276587843895, 0.09034473448991776, 0.08981640636920929, 0.0870426595211029, 0.08955223858356476, 0.09206181764602661, 0.09298639744520187, 0.09351472556591034, 0.09668471664190292, 0.10011887550354004, 0.09708096832036972, 0.09457138925790787, 0.0940430611371994, 0.09589222073554993, 0.09166556596755981, 0.09311848133802414, 0.0956280529499054, 0.09959053993225098, 0.0944393053650856, 0.09708096832036972, 0.09549596905708313, 0.0936468094587326, 0.09893012791872025, 0.10342095047235489, 0.09945846349000931, 0.09272222965955734, 0.09576013684272766, 0.09945846349000931, 0.10236428678035736, 0.09959053993225098, 0.10328886657953262, 0.10368511080741882, 0.0944393053650856, 0.10500594228506088, 0.10249637067317963, 0.09787346422672272, 0.1010434553027153, 0.10355303436517715, 0.10553427785634995, 0.10685510188341141, 0.10579843819141388, 0.108440101146698, 0.1002509593963623, 0.10394927859306335, 0.10738343745470047, 0.10645885765552521, 0.10342095047235489, 0.10196803510189056, 0.10540219396352768, 0.10817593336105347, 0.10460969805717468, 0.11253467202186584, 0.11028926074504852, 0.10791176557540894, 0.10698718577623367, 0.1080438494682312, 0.11557257920503616, 0.10632677376270294, 0.10989301651716232, 0.11227050423622131, 0.10870426893234253, 0.11094967275857925, 0.10342095047235489, 0.11451591551303864, 0.11610091477632523, 0.11332716792821884, 0.11227050423622131, 0.10910051316022873, 0.11108175665140152, 0.11108175665140152, 0.10989301651716232, 0.11993131786584854, 0.1216483935713768, 0.11649715900421143, 0.11900673806667328, 0.11411966383457184, 0.11530841141939163, 0.11742173880338669, 0.12112006545066833, 0.11821424216032028, 0.12178047746419907, 0.12732796370983124, 0.12059172987937927, 0.11411966383457184, 0.12270505726337433, 0.11993131786584854, 0.12151630967855453, 0.11821424216032028, 0.12376172095537186, 0.1228371411561966, 0.12270505726337433, 0.11900673806667328, 0.12389380484819412, 0.1274600476026535, 0.12257297337055206, 0.12561088800430298, 0.12349755316972733], "val_loss": [1.9710559844970703, 1.970923968723842, 1.9707929747445243, 1.9706604821341378, 1.9705289431980677, 1.9703961099897112, 1.9702645710536413, 1.9701337814331055, 1.9700017656598772, 1.969869886125837, 1.9697371210370744, 1.9696060589381628, 1.9694732938494002, 1.9693424361092704, 1.969212600163051, 1.9690797669546944, 1.9689482280186243, 1.9688188007899694, 1.968688896724156, 1.9685578346252441, 1.9684256144932337, 1.9682965278625488, 1.9681655338832311, 1.9680351529802596, 1.9679052489144462, 1.9677759579249792, 1.9676455089024134, 1.9675147192818778, 1.9673834528241838, 1.9672539574759347, 1.9671248027256556, 1.9669959885733468, 1.9668662207467216, 1.966735567365374, 1.9666054589407784, 1.9664763723100935, 1.966346332005092, 1.9662156786237444, 1.9660844802856445, 1.9659542356218611, 1.9658235141209193, 1.9656944274902344, 1.965566635131836, 1.9654363223484583, 1.9653074400765556, 1.9651775360107422, 1.9650487218584334, 1.9649190221514021, 1.9647890499659948, 1.9646613257271903, 1.9645320347377233, 1.9644028118678503, 1.964273180280413, 1.9641436849321638, 1.9640141214643205, 1.963883536202567, 1.9637529509408134, 1.963622978755406, 1.9634936877659388, 1.96336487361363, 1.9632344927106584, 1.9631052017211914, 1.9629764556884766, 1.9628468922206335, 1.9627183505467005, 1.962590558188302, 1.9624627658299036, 1.9623323849269323, 1.962202480861119, 1.962073871067592, 1.9619433539254325, 1.9618159702845983, 1.9616879735674178, 1.9615590912955148, 1.9614311626979284, 1.961301394871303, 1.9611714908054896, 1.9610421998160226, 1.9609131813049316, 1.9607842990330286, 1.9606552805219377, 1.9605248314993722, 1.9603945187159948, 1.9602648871285575, 1.9601358686174666, 1.9600077356610979, 1.959878717150007, 1.9597504479544503, 1.9596209526062012, 1.959491389138358, 1.959364346095494, 1.9592358044215612, 1.959106717790876, 1.958979538508824, 1.958850588117327, 1.9587224551609583, 1.958594526563372, 1.9584645543779646, 1.958334309714181, 1.9582043375287737], "val_accuracy": [0.03733333200216293, 0.03733333200216293, 0.039000000804662704, 0.03999999910593033, 0.0403333343565464, 0.04100000113248825, 0.041333332657814026, 0.041333332657814026, 0.041999999433755875, 0.04266666620969772, 0.043666668236255646, 0.043666668236255646, 0.043666668236255646, 0.04399999976158142, 0.044333335012197495, 0.04600000008940697, 0.047333333641290665, 0.04800000041723251, 0.04933333396911621, 0.050333332270383835, 0.05133333429694176, 0.052666667848825455, 0.05366666615009308, 0.05433333292603493, 0.05433333292603493, 0.054666668176651, 0.055666666477918625, 0.056333333253860474, 0.05666666850447655, 0.0573333315551281, 0.057999998331069946, 0.058666665107011795, 0.05900000035762787, 0.060333333909511566, 0.06233333423733711, 0.06366666406393051, 0.06466666609048843, 0.06566666811704636, 0.06599999964237213, 0.06733333319425583, 0.06833333522081375, 0.07000000029802322, 0.07199999690055847, 0.07266666740179062, 0.0729999989271164, 0.07433333247900009, 0.07733333110809326, 0.07733333110809326, 0.07800000160932541, 0.0793333351612091, 0.08166666328907013, 0.08299999684095383, 0.0846666693687439, 0.08566666394472122, 0.08666666597127914, 0.08766666799783707, 0.08799999952316284, 0.08866667002439499, 0.08933333307504654, 0.09033333510160446, 0.09133332967758179, 0.09333333373069763, 0.09433333575725555, 0.09533333033323288, 0.09600000083446503, 0.09799999743700027, 0.09933333098888397, 0.10100000351667404, 0.10166666656732559, 0.10333333164453506, 0.10433333367109299, 0.10466666519641876, 0.10499999672174454, 0.1066666692495346, 0.10733333230018616, 0.10866666585206985, 0.1106666699051857, 0.11166666448116302, 0.11166666448116302, 0.11366666853427887, 0.11533333361148834, 0.11699999868869781, 0.11800000071525574, 0.11866666376590729, 0.12033333629369736, 0.12066666781902313, 0.12266666442155838, 0.1236666664481163, 0.12466666847467422, 0.12566666305065155, 0.1263333261013031, 0.1289999932050705, 0.13066667318344116, 0.1316666603088379, 0.1316666603088379, 0.13300000131130219, 0.13433332741260529, 0.13633333146572113, 0.13766667246818542, 0.13833333551883698]}}, {"genotype": [[0], [1, 0, 1], [0, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 2, 9, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [53, 73, 20, 7, 45, 13], [0], [0, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 0, 3, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 5, 1, 1, 1, 1, 1, 0, 1, 7, 4, 3, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.multiply(sigma, tf.math.sqrt(beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [7, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [3, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.math.sqrt(sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1], [0, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 2, 0, 2, 4, 8, 1, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [43, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [1, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [2, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 23, 23, 14, 9, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.sqrt(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad))))), grad)), grad)))))), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), beta))), tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(beta, grad)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.math.negative(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07687227427959442, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [53, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [1, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [85, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 5, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07858935743570328, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 5, 0, 2, 0, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [43, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [1, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 6, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.negative(tf.math.sqrt(tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07858935743570328, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 6, 1, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 12, 5, 1, 1, 1, 0, 1, 0, 5, 4, 1, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad))))), grad)), grad)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [0, 0, 1], [4, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [33, 80, 61], [0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 0, 4, 8, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 0, 3, 0, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [23, 73, 20, 7, 45, 13], [1], [1, 1, 1], [0], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 7, 9, 8, 6, 7, 4, 5, 6], [0, 1, 2, 1, 0, 0, 2, 2], [18, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 5, 3, 2, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.negative(alpha), tf.math.negative(tf.math.add(beta, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 6, 2, 3, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [43, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 3, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.0917142853140831, "mapping_values": [1, 2, 2, 1, 1, 0, 8, 8, 5, 3, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [Infinity, Infinity, 2.5835684949947684, 3.021502432554248, 4.0512937412380365, 5.618343899640834], "accuracy": [0.05864482745528221, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [Infinity, 2.1400368554251537, 2.3767224039350237, 3.0192415373665944, 4.227812085832868, 5.697525433131626], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1], [0, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 4, 0, 2, 1, 8, 9, 5, 3, 2, 1, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [43, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 0, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.09142857044935226, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [Infinity, Infinity, 2.5835638572479738, 3.0214894457799315, 4.051268514152752, 5.618312653297321], "accuracy": [0.05864482745528221, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [Infinity, 2.1400344031197682, 2.376715523856027, 3.019223758152553, 4.227786472865513, 5.697498049054827], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [2, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 1, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [29, 9, 76, 58]], "fitness": -0.07114285975694656, "mapping_values": [1, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, sigma)", "other_info": {"loss": [2.3029771958674736, 2.299498684166004, 2.3014644708899206, 2.302535617828621, 2.3003892676862727, 2.301121105717599, 2.300297976358928, 2.300255661926501, 2.2993866542326917, 2.299175604790146, 2.2997594733736406, 2.299791157851838, 2.2993156689820338, 2.2999073753991794, 2.2995849073271724, 2.300296195950632, 2.3006988433310855, 2.302107962949826, 2.3013582698515678], "accuracy": [0.09074098616838455, 0.09655263274908066, 0.08981640636920929, 0.08902391046285629, 0.09417514503002167, 0.09628847241401672, 0.09140139818191528, 0.09536388516426086, 0.1006472036242485, 0.10315678268671036, 0.10038304328918457, 0.1002509593963623, 0.10157178342342377, 0.09549596905708313, 0.09642054885625839, 0.0956280529499054, 0.09192973375320435, 0.08968432247638702, 0.09060890227556229], "val_loss": [1.9704349381583077, 1.9700759478977747, 1.9698717253548759, 1.9696758134024483, 1.969710009438651, 1.9696807180132185, 1.969566890171596, 1.9694606917245048, 1.969400337764195, 1.9694879395621163, 1.9696494511195592, 1.9698837825230189, 1.9700896399361747, 1.9703600066048759, 1.9705657277788435, 1.9707927022661482, 1.9709219251360213, 1.9710703577314104, 1.97123806817191], "val_accuracy": [0.04066666588187218, 0.047333333641290665, 0.052666667848825455, 0.05833333358168602, 0.061666667461395264, 0.06400000303983688, 0.07066666334867477, 0.07466666400432587, 0.07699999958276749, 0.07699999958276749, 0.07533333450555801, 0.07566666603088379, 0.07666666805744171, 0.07733333110809326, 0.07466666400432587, 0.0689999982714653, 0.07000000029802322, 0.07266666740179062, 0.06733333319425583]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 1], [9, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 4, 0, 4, 5, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [31, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.06714285910129547, "mapping_values": [1, 1, 1, 1, 0, 1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.math.negative(grad), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, sigma)", "other_info": {"loss": [2.3029771958674736, 2.2994988325832226, 2.3014664366544118, 2.3025404805788163, 2.300394944542545, 2.301123467450286, 2.300299433700759, 2.3002545778163435, 2.299382052448652, 2.2991668598889015, 2.2997489470878785, 2.2997798263089786, 2.2993102079022907, 2.29989427588698, 2.299568869166638], "accuracy": [0.09074098616838455, 0.09655263274908066, 0.08981640636920929, 0.08889182657003403, 0.09430722147226334, 0.09628847241401672, 0.09153348207473755, 0.09536388516426086, 0.1006472036242485, 0.10302469879388809, 0.09985470771789551, 0.10038304328918457, 0.1014397069811821, 0.09549596905708313, 0.09668471664190292], "val_loss": [1.9704348700387138, 1.9700769015720911, 1.9698735645839147, 1.969681739807129, 1.9697143009730749, 1.969681876046317, 1.969569410596575, 1.969458716256278, 1.969393185206822, 1.969479969569615, 1.969639505658831, 1.9698749950953893, 1.970083372933524, 1.970339230128697, 1.9705591882978166], "val_accuracy": [0.04066666588187218, 0.047333333641290665, 0.05233333259820938, 0.057999998331069946, 0.061666667461395264, 0.06400000303983688, 0.07066666334867477, 0.07466666400432587, 0.07699999958276749, 0.07733333110809326, 0.07566666603088379, 0.07599999755620956, 0.07666666805744171, 0.07733333110809326, 0.07500000298023224]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 4, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(sigma))", "other_info": {"loss": [2.3033819072644284, 2.300586938952505, 2.3031085770694792, 2.304778394886783, 2.3024393103897705, 2.303525622589178], "accuracy": [0.08955223858356476, 0.09457138925790787, 0.08796724677085876, 0.08796724677085876, 0.08889182657003403, 0.08889182657003403], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 2, 3, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [60, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 7, 2, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3033819072644284, 2.300586938952505, 2.3031085770694792, 2.304778394886783, 2.3024393103897705, 2.303525622589178], "accuracy": [0.08955223858356476, 0.09457138925790787, 0.08796724677085876, 0.08796724677085876, 0.08889182657003403, 0.08889182657003403], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]