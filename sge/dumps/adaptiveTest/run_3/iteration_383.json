[{"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [2, 8, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [77, 80, 61], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 6, 6, 0, 4, 6, 2, 1, 9, 4, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 3, 3, 0, 3, 3, 1, 3, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [94, 41, 37, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [3, 0, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.8265714049339294, "mapping_values": [1, 22, 22, 14, 8, 0, 16, 16, 9, 7, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.square(alpha), alpha)))), tf.math.add(alpha, alpha))), alpha))))), tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.negative(grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))))))))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2101209481095343, 1.937136851517815, 1.5043593112582527, 1.376645768598842, 1.0076287016892524, 0.9223286432439562, 0.8237370959346667, 0.7593446279860065, 0.7321391540857873, 0.6984096943285046, 0.6805936190446197, 0.6425616150251264, 0.6175473591733712, 0.6112591621347029, 0.586591537271776, 0.5696448521796093, 0.5637258263886675, 0.5497629160595104, 0.5363946155455638, 0.5243454342662477, 0.5236444863519176, 0.5228524246133629, 0.49949775112460965, 0.4837873386763594, 0.47304694075641723, 0.46264450326650497, 0.46126855978907816, 0.45881045614141025, 0.4304188051283273, 0.4407158319929005], "accuracy": [0.2620525658130646, 0.38383305072784424, 0.4683661460876465, 0.5086514353752136, 0.6108836531639099, 0.6560559868812561, 0.6890767216682434, 0.7055870890617371, 0.7251353859901428, 0.735569953918457, 0.7380794882774353, 0.7552502751350403, 0.7664773464202881, 0.7693831920623779, 0.7773081660270691, 0.7860256433486938, 0.7862898111343384, 0.7932901978492737, 0.7943468689918518, 0.8026680946350098, 0.8001585006713867, 0.8014793395996094, 0.8140271902084351, 0.8164047002792358, 0.8203672170639038, 0.8297450542449951, 0.8276317715644836, 0.8286884427070618, 0.8391229510307312, 0.8343679904937744], "val_loss": [1.4776344980512346, 1.5118404456547327, 1.3997925690242223, 0.8254318748201642, 0.7044409513473511, 0.6172870227268764, 0.5828811952045986, 0.609583922794887, 0.5697891541889736, 0.5351641348430088, 0.5200931855610439, 0.5330135481698173, 0.5288563455854144, 0.5307953868593488, 0.4718418632234846, 0.4969058036804199, 0.4487254449299404, 0.46643103872026714, 0.43406593799591064, 0.44574385029929026, 0.42499551602772306, 0.40481873069490704, 0.4204770496913365, 0.4049003635134016, 0.400012697492327, 0.4255817447389875, 0.4119369557925633, 0.38647582701274324, 0.4047168663569859, 0.41464041812079294], "val_accuracy": [0.3916666805744171, 0.46933332085609436, 0.43033334612846375, 0.5996666550636292, 0.643666684627533, 0.7210000157356262, 0.7419999837875366, 0.7026666402816772, 0.7316666841506958, 0.7553333044052124, 0.7643333077430725, 0.7596666812896729, 0.7706666588783264, 0.7590000033378601, 0.7839999794960022, 0.781000018119812, 0.7896666526794434, 0.8056666851043701, 0.8140000104904175, 0.7946666479110718, 0.8196666836738586, 0.8323333263397217, 0.8299999833106995, 0.8263333439826965, 0.8353333473205566, 0.8149999976158142, 0.8146666884422302, 0.8286666870117188, 0.8223333358764648, 0.8146666884422302]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1], [2, 8, 9, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [89, 80, 61], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 9, 7, 1, 4, 6, 2, 1, 9, 2, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 3, 3, 0, 1, 3, 1, 3, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [81, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.8234285712242126, "mapping_values": [1, 4, 4, 3, 1, 2, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.210400764763615, 1.9399805644940644, 1.5751823401485752, 1.2586260021260354, 1.1170902827144724, 0.8991699124828006, 0.8059984903057821, 0.7407108261254265, 0.7329580742039653, 0.7008329938352699, 0.6616274033161501, 0.6458710448585402, 0.6128221558006669, 0.5983530213615252, 0.5611125146078317, 0.6061101263430078, 0.5573739036041843, 0.5372417407296574, 0.5269263398141877, 0.5401153426050054, 0.5326623593606749, 0.5083341944597148, 0.4972223619885055, 0.4804920611159834, 0.4745504489042315, 0.4704347246075193, 0.45814723019681164, 0.46629909508342615, 0.4272190283050532, 0.46626394451758835, 0.4395917949029688, 0.4330129316966012, 0.4257143672470561, 0.4215101319029504, 0.43119644389302425, 0.4114881521202806, 0.40531701118781377, 0.3981184242754533, 0.3749102965054369, 0.3712570866290148, 0.38125329650766293, 0.37337500802466994, 0.38458127043959234], "accuracy": [0.2616563141345978, 0.3727380931377411, 0.433760404586792, 0.5355963706970215, 0.5772024989128113, 0.6633205413818359, 0.6964733600616455, 0.7226257920265198, 0.7259278893470764, 0.7320036888122559, 0.7452120184898376, 0.7528728246688843, 0.7667415142059326, 0.7745344042778015, 0.7909126877784729, 0.7663452625274658, 0.7918372750282288, 0.791969358921051, 0.7992339134216309, 0.7927618622779846, 0.8014793395996094, 0.8061022162437439, 0.8142913579940796, 0.8190463781356812, 0.8181217908859253, 0.8276317715644836, 0.8269713521003723, 0.8236692547798157, 0.8405758738517761, 0.8204993009567261, 0.834632158279419, 0.8352925777435303, 0.845859169960022, 0.8426892161369324, 0.8387266993522644, 0.8454629778862, 0.8500858545303345, 0.8506141901016235, 0.8576145768165588, 0.8577466607093811, 0.860652506351471, 0.8644828796386719, 0.8561616539955139], "val_loss": [1.4811930997031075, 1.8489988190787179, 1.0854147161756242, 0.8778094053268433, 0.6778846297945295, 0.6235343047550747, 0.5636527368000576, 0.6038436038153512, 0.638719882283892, 0.5275553124291557, 0.513211727142334, 0.5404183523995536, 0.5087289980479649, 0.48031987462724957, 0.539094158581325, 0.49408258710588726, 0.45049117292676655, 0.4556523561477661, 0.43618068524769377, 0.45412072113582064, 0.4161707418305533, 0.4059446709496634, 0.41046494245529175, 0.39228168555668425, 0.39920123134340557, 0.43603176730019705, 0.39089194365910124, 0.38153916597366333, 0.4303452713148935, 0.39829574312482563, 0.3945475220680237, 0.40304659945624216, 0.3878105367933001, 0.38125933919634136, 0.41641087191445486, 0.3621304375784738, 0.373466500214168, 0.36387518474033903, 0.3521514024053301, 0.4369310736656189, 0.3576628565788269, 0.38419237307139803, 0.4174077681132725], "val_accuracy": [0.3933333456516266, 0.3356666564941406, 0.5736666917800903, 0.5646666884422302, 0.6863333582878113, 0.7096666693687439, 0.7443333268165588, 0.7229999899864197, 0.6973333358764648, 0.7536666393280029, 0.7699999809265137, 0.7450000047683716, 0.784333348274231, 0.7993333339691162, 0.746999979019165, 0.7760000228881836, 0.7873333096504211, 0.8013333082199097, 0.8176666498184204, 0.8063333630561829, 0.8273333311080933, 0.8316666483879089, 0.831333339214325, 0.8306666612625122, 0.8360000252723694, 0.8103333115577698, 0.8220000267028809, 0.8333333134651184, 0.7926666736602783, 0.8389999866485596, 0.8293333053588867, 0.8370000123977661, 0.8416666388511658, 0.8240000009536743, 0.8050000071525574, 0.8456666469573975, 0.8446666598320007, 0.8483333587646484, 0.8476666808128357, 0.8146666884422302, 0.8476666808128357, 0.8356666564941406, 0.8246666789054871]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [2, 8, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [77, 80, 61], [1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 9, 7, 1, 4, 6, 2, 1, 9, 2, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 3, 3, 0, 1, 3, 1, 3, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [78, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.8128571510314941, "mapping_values": [1, 4, 4, 2, 2, 1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(alpha, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.2102812006961337, 1.9125644879460162, 1.591922621118583, 1.1936664031780375, 1.0662703163052878, 0.9039234873751262, 0.8308098039307756, 0.7552085826189416, 0.7342775695280801, 0.6890628207172338, 0.6867126179503538, 0.6393407067964736, 0.6156336688220682, 0.6188552788361709, 0.5900086516071824, 0.5791067750761616, 0.5666939453945782, 0.5394525019216532, 0.5391581283899236, 0.5352241611751536, 0.5229962998692386, 0.5098937607168946, 0.49066987580957666, 0.478239793445078, 0.4702064717182819, 0.464518166807869, 0.4585521926914208, 0.44253527358018835], "accuracy": [0.26139214634895325, 0.39241844415664673, 0.45489367842674255, 0.5498613119125366, 0.5987319946289062, 0.6616035103797913, 0.6785101294517517, 0.7071720957756042, 0.7199841737747192, 0.7378153204917908, 0.7326641082763672, 0.7523444890975952, 0.7675340175628662, 0.7617223858833313, 0.7769119143486023, 0.7790252566337585, 0.7865539789199829, 0.7890635132789612, 0.7944789528846741, 0.7976489067077637, 0.8041210174560547, 0.804649293422699, 0.8153480291366577, 0.8178576231002808, 0.8197067975997925, 0.821820080280304, 0.8234050869941711, 0.8362171649932861], "val_loss": [1.4786860602242606, 1.7062562193189348, 1.0737148693629675, 0.745661769594465, 0.6620818717139108, 0.6678210496902466, 0.5929361922400338, 0.6345130375453404, 0.5675767319543021, 0.5396201099668231, 0.5141694034848895, 0.5343124866485596, 0.5097633940832955, 0.553401027406965, 0.5244057859693255, 0.5026136807032994, 0.4503237860543387, 0.46760427951812744, 0.4348977974482945, 0.47158428600856234, 0.44745165961129324, 0.4002251625061035, 0.40399391310555594, 0.4099446449960981, 0.4140088217599051, 0.42454069001334055, 0.3961171678134373, 0.3910919172423227], "val_accuracy": [0.39233332872390747, 0.5253333449363708, 0.5506666898727417, 0.6943333148956299, 0.7073333263397217, 0.6903333067893982, 0.7363333106040955, 0.6946666836738586, 0.7263333201408386, 0.753333330154419, 0.765666663646698, 0.7603333592414856, 0.778333306312561, 0.749666690826416, 0.7513333559036255, 0.7746666669845581, 0.7796666622161865, 0.7883333563804626, 0.8203333616256714, 0.7879999876022339, 0.7976666688919067, 0.8363333344459534, 0.8389999866485596, 0.8243333101272583, 0.8263333439826965, 0.8136666417121887, 0.8246666789054871, 0.8316666483879089]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [2, 8, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [49, 80, 61], [1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 9, 7, 1, 4, 6, 2, 1, 9, 2, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 3, 3, 0, 1, 3, 1, 3, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [81, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.8097142577171326, "mapping_values": [1, 7, 7, 4, 3, 1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.210247882652308, 1.8465826821412235, 1.425055582179149, 1.26813252345997, 1.0359245794733611, 0.9089918435052905, 0.8158742968180491, 0.7495589873589513, 0.7392651411079696, 0.7282480645598579, 0.6816076269601362, 0.642152269652428, 0.6285867628136709, 0.5926025370329032, 0.5794620206012482, 0.5778147951880498, 0.5534269742332099, 0.5424176648922443, 0.5336222174444439, 0.5210438789614061, 0.5205495512055651, 0.507307380843298, 0.5072112606776593, 0.46843173440185126, 0.4787509691847503, 0.45861893714757535, 0.460764221562654, 0.43725717102752276, 0.4491005705576279, 0.4476381885007136, 0.4280252334912849, 0.41966784784916983, 0.4330554385155955, 0.41599860596870936], "accuracy": [0.2615242302417755, 0.3928146958351135, 0.4885748326778412, 0.5272751450538635, 0.599128246307373, 0.6519614458084106, 0.6828688383102417, 0.7152291536331177, 0.7131158113479614, 0.7284374833106995, 0.7363624572753906, 0.7518161535263062, 0.763439416885376, 0.7781006693840027, 0.7790252566337585, 0.7757231593132019, 0.7886672616004944, 0.7923656105995178, 0.7948752045631409, 0.8038568496704102, 0.802271842956543, 0.8096684813499451, 0.8107251524925232, 0.8211596608161926, 0.8186501264572144, 0.8281601071357727, 0.8224804997444153, 0.8387266993522644, 0.8319904804229736, 0.8276317715644836, 0.8411042094230652, 0.8430854678153992, 0.8379341959953308, 0.8405758738517761], "val_loss": [1.4792332989828927, 1.101513351712908, 1.2471085275922502, 0.8215537922722953, 0.759394645690918, 0.6687652724129813, 0.5802119629723685, 0.6172670125961304, 0.5691307783126831, 0.5506835154124669, 0.5213907105582101, 0.5789206198283604, 0.48596513271331787, 0.501663259097508, 0.4876324789864676, 0.4832124710083008, 0.44370262963431223, 0.5196238245282855, 0.43013322353363037, 0.4943855490003313, 0.43046425921576364, 0.40408929756709505, 0.41034010478428434, 0.4062303049223764, 0.39638853073120117, 0.4228201763970511, 0.3914042626108442, 0.42005435058048796, 0.379692656653268, 0.40781183753694805, 0.37864541155951364, 0.4304934654917036, 0.42442403520856586, 0.3817357335771833], "val_accuracy": [0.39633333683013916, 0.543666660785675, 0.4483333230018616, 0.6146666407585144, 0.6523333191871643, 0.6713333129882812, 0.7326666712760925, 0.7223333120346069, 0.7413333058357239, 0.7446666955947876, 0.7636666893959045, 0.7400000095367432, 0.7906666398048401, 0.7839999794960022, 0.778333306312561, 0.7879999876022339, 0.7973333597183228, 0.7776666879653931, 0.8180000185966492, 0.7643333077430725, 0.8166666626930237, 0.831333339214325, 0.8233333230018616, 0.8190000057220459, 0.8353333473205566, 0.815666675567627, 0.824999988079071, 0.8136666417121887, 0.8393333554267883, 0.8333333134651184, 0.8370000123977661, 0.8230000138282776, 0.8080000281333923, 0.8220000267028809]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 8, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [77, 80, 61], [1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 9, 7, 1, 4, 6, 2, 1, 9, 2, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 3, 3, 0, 1, 3, 1, 3, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [81, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.808571457862854, "mapping_values": [1, 10, 10, 6, 4, 1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, grad))))))))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.210158250776217, 1.8959809039262905, 1.5248074851661484, 1.1860029612077525, 1.0489104229146464, 0.9261487527624838, 0.8471513861725595, 0.7798937690445398, 0.7424118530244843, 0.7019108065115289, 0.6924918376931802, 0.6508676239354909, 0.6271199973393834, 0.5989676767320775, 0.5906588329835544, 0.57291476514125, 0.5614962720395457, 0.5512227357622654, 0.5442161250344325, 0.5196260961606408, 0.5285976292308863, 0.5161876686733192, 0.4914358546390289, 0.48181845707317716, 0.4750225318854338, 0.4688016396542865, 0.46634538904503586], "accuracy": [0.2616563141345978, 0.39162594079971313, 0.4753665328025818, 0.5457667708396912, 0.6089023947715759, 0.640338122844696, 0.6785101294517517, 0.7036058902740479, 0.7113987803459167, 0.7363624572753906, 0.7347774505615234, 0.7518161535263062, 0.7586844563484192, 0.7724210619926453, 0.7769119143486023, 0.7847048044204712, 0.7895918488502502, 0.7872143983840942, 0.7872143983840942, 0.8018755912780762, 0.8006868362426758, 0.8020076751708984, 0.813498854637146, 0.8185180425643921, 0.8191784620285034, 0.82683926820755, 0.8241975903511047], "val_loss": [1.4785707678113664, 1.6239690440041679, 1.079972573689052, 0.808758088520595, 0.6631934472492763, 0.7633156435830253, 0.5735207114900861, 0.608077849660601, 0.5757569926125663, 0.5393838882446289, 0.5145879302706037, 0.5514841590608869, 0.4900637183870588, 0.5373494795390538, 0.5329628161021641, 0.49243385451180594, 0.46331759861537386, 0.46070722171238493, 0.4382938827787127, 0.49929302079336985, 0.43650064298084806, 0.4057834489004953, 0.42153037445885794, 0.41393681934901644, 0.42719588960920063, 0.4264117564473833, 0.41114528690065655], "val_accuracy": [0.3959999978542328, 0.5289999842643738, 0.5586666464805603, 0.6293333172798157, 0.7149999737739563, 0.671999990940094, 0.7323333621025085, 0.7056666612625122, 0.7296666502952576, 0.75, 0.7726666927337646, 0.7433333396911621, 0.7770000100135803, 0.7476666569709778, 0.7486666440963745, 0.7789999842643738, 0.7703333497047424, 0.7919999957084656, 0.812333345413208, 0.7633333206176758, 0.8180000185966492, 0.8306666612625122, 0.8169999718666077, 0.815666675567627, 0.8166666626930237, 0.8076666593551636, 0.8153333067893982]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [2, 8, 6, 6, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2], [77, 80, 61], [1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 9, 7, 1, 4, 6, 2, 1, 9, 2, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 4, 3, 1, 3, 0, 1, 1, 1, 3, 3, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [29, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.8042857050895691, "mapping_values": [1, 15, 15, 8, 7, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, alpha)))), tf.math.add(alpha, alpha)))))), tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.2102891333492725, 1.928149335671882, 1.6846535404234546, 1.2064358027320512, 0.9738500834440338, 0.8817136005214681, 0.7990460106410433, 0.7566206228967671, 0.7262613986225303, 0.7084717871789777, 0.6889213816427741, 0.652175088915071, 0.6232083783472817, 0.6156249462243446, 0.5893090470135409, 0.5887025727603445, 0.5613542960115537, 0.5472191365923093, 0.5250533265901233, 0.5226500351525663, 0.5222630069917455, 0.5159666341852597, 0.497786297695496, 0.4851502274572574, 0.4755187102785011, 0.46609439525181007, 0.46304829615281323, 0.45261080915177454, 0.44850940447536364, 0.44844234107413294], "accuracy": [0.26178839802742004, 0.39347511529922485, 0.41843879222869873, 0.5386342406272888, 0.6263373494148254, 0.6623960137367249, 0.6926429867744446, 0.7103421092033386, 0.7248712182044983, 0.7283053994178772, 0.728701651096344, 0.7519482374191284, 0.7635715007781982, 0.765949010848999, 0.7777044177055359, 0.7803460359573364, 0.7921014428138733, 0.7940827012062073, 0.800290584564209, 0.8031964302062988, 0.802271842956543, 0.8029322624206543, 0.813498854637146, 0.8144234418869019, 0.8191784620285034, 0.8236692547798157, 0.8241975903511047, 0.8317263126373291, 0.8308017253875732, 0.8318583965301514], "val_loss": [1.478747776576451, 1.589864867074149, 0.9833029678889683, 0.805544376373291, 0.6634244067328317, 0.6226424830300468, 0.5639652694974627, 0.6433725357055664, 0.5861520426613944, 0.5400936773845127, 0.5140943697520665, 0.5494806936808995, 0.5189029148646763, 0.5062285321099418, 0.4737203461783273, 0.4917364631380354, 0.45666028772081646, 0.45265112604413715, 0.44355145522526335, 0.4722151075090681, 0.4216052974973406, 0.40262328726904734, 0.409172671181815, 0.4048645240919931, 0.39909195048468454, 0.4404455508504595, 0.40838184526988436, 0.38867304154804777, 0.4026035581316267, 0.42304294449942453], "val_accuracy": [0.39233332872390747, 0.5246666669845581, 0.5559999942779541, 0.6306666731834412, 0.7096666693687439, 0.7236666679382324, 0.7419999837875366, 0.6663333177566528, 0.731333315372467, 0.7476666569709778, 0.7696666717529297, 0.7509999871253967, 0.777999997138977, 0.7726666927337646, 0.7853333353996277, 0.781000018119812, 0.8016666769981384, 0.8053333163261414, 0.8116666674613953, 0.7726666927337646, 0.8270000219345093, 0.8309999704360962, 0.8303333520889282, 0.82833331823349, 0.8373333215713501, 0.8043333292007446, 0.8159999847412109, 0.8323333263397217, 0.8256666660308838, 0.828000009059906]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1], [2, 8, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [99, 80, 61], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 9, 7, 1, 4, 6, 2, 1, 9, 2, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [5, 3, 0, 3, 3, 3, 2, 3, 3, 3, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [81, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.801714301109314, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.2103538612380333, 1.9308362707186684, 1.5762527039526255, 1.159672424935268, 1.0083233221032915, 0.900244205209951, 0.8055310219175953, 0.7489708549610108, 0.731925857278098, 0.6981863575273927, 0.6760607406274596, 0.6395110177593838, 0.6182908166149241, 0.606547423176494, 0.5886442121371711, 0.5793798275989643, 0.5582088564939943, 0.5349387658853194, 0.5251182999671994, 0.5343555098810625, 0.5268147040304648, 0.517894813901382, 0.49259646008389735, 0.4853041177695973, 0.4734430085075939, 0.46488368146691295, 0.4658674794126102, 0.4670711854358847, 0.4328622765206327, 0.4593582638282156], "accuracy": [0.2619204819202423, 0.38343679904937744, 0.4434024691581726, 0.5604279637336731, 0.6240919232368469, 0.6498481035232544, 0.6889446377754211, 0.7140403985977173, 0.7226257920265198, 0.7309470176696777, 0.7364945411682129, 0.7552502751350403, 0.7646281719207764, 0.7683265209197998, 0.7779685854911804, 0.7754589915275574, 0.7880068421363831, 0.793950617313385, 0.7985734939575195, 0.7971205711364746, 0.800290584564209, 0.7997622489929199, 0.8164047002792358, 0.817461371421814, 0.819970965385437, 0.8273676037788391, 0.822348415851593, 0.8252542614936829, 0.8381983637809753, 0.8284242749214172], "val_loss": [1.4789436885288783, 1.8351168632507324, 0.8463714293071202, 0.7400166477475848, 0.6406352179391044, 0.6332600968224662, 0.5926420348031181, 0.6213213375636509, 0.5685947281973702, 0.5337767430714199, 0.5128306831632342, 0.5547288826533726, 0.5094419717788696, 0.5148647853306362, 0.5070108004978725, 0.4889418738228934, 0.4436249222074236, 0.45684450013296946, 0.44464875970567974, 0.4515519993645804, 0.4444239139556885, 0.4068290761538914, 0.4068561281476702, 0.3976160543305533, 0.39667084387370516, 0.4456850290298462, 0.40591077293668476, 0.3752226063183376, 0.4165271350315639, 0.43658341680254253], "val_accuracy": [0.39366665482521057, 0.351666659116745, 0.6650000214576721, 0.6783333420753479, 0.7256666421890259, 0.7236666679382324, 0.7319999933242798, 0.7126666903495789, 0.7319999933242798, 0.7536666393280029, 0.765333354473114, 0.746999979019165, 0.7833333611488342, 0.7689999938011169, 0.765666663646698, 0.7799999713897705, 0.7960000038146973, 0.7960000038146973, 0.815666675567627, 0.8009999990463257, 0.8016666769981384, 0.8320000171661377, 0.8289999961853027, 0.8226666450500488, 0.8433333039283752, 0.8053333163261414, 0.8176666498184204, 0.8366666436195374, 0.8183333277702332, 0.8333333134651184]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 6, 5, 5, 0, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [77, 80, 61], [0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 9, 7, 1, 4, 6, 2, 1, 9, 2, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 2, 3, 3, 0, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [67, 13, 9, 80, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.8011428713798523, "mapping_values": [1, 9, 9, 6, 3, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))))), tf.math.square(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.2103499821416137, 1.9285359177307886, 1.5690383442388849, 1.1309995548584364, 1.0360791140842778, 0.883783357136474, 0.820661512072753, 0.7855840685061807, 0.7328516704972237, 0.709998594149465, 0.6745833198880287, 0.6491795259066199, 0.618443385673914, 0.6127729802367206, 0.5901127846218008, 0.57069187712408, 0.5649769113379037, 0.5352482491433266, 0.533896389882704, 0.5409137465619707, 0.5186445750045172, 0.5212598463854754, 0.49257405476405747, 0.4842018351862223, 0.47220528763062636, 0.4678051332598585, 0.4527987435651005], "accuracy": [0.2619204819202423, 0.3867388665676117, 0.4500066041946411, 0.5688812732696533, 0.6012415885925293, 0.6687359809875488, 0.6913221478462219, 0.6923788189888, 0.7223616242408752, 0.7298903465270996, 0.7360982894897461, 0.7511557340621948, 0.763439416885376, 0.7664773464202881, 0.7775723338127136, 0.7820631265640259, 0.7860256433486938, 0.7987055778503418, 0.7967243194580078, 0.7976489067077637, 0.8039889335632324, 0.7989697456359863, 0.8166688680648804, 0.8156121969223022, 0.8227446675300598, 0.8231409192085266, 0.8286884427070618], "val_loss": [1.4792883055550712, 1.691505023411342, 0.9154884474618095, 0.972487313406808, 0.6298835788454328, 0.6475818838391986, 0.571013263293675, 0.632736359323774, 0.594050509589059, 0.5288516283035278, 0.5264166082654681, 0.5377457823072161, 0.515980635370527, 0.5310564381735665, 0.47916453225272043, 0.4997961350849697, 0.4425259828567505, 0.49558937549591064, 0.4302795018468584, 0.47292566299438477, 0.43793790681021555, 0.40356653928756714, 0.42267249311719624, 0.3952094486781529, 0.4082109417234148, 0.42476086957114084, 0.4433363676071167], "val_accuracy": [0.3933333456516266, 0.550000011920929, 0.6129999756813049, 0.5446666479110718, 0.7229999899864197, 0.7200000286102295, 0.7286666631698608, 0.699999988079071, 0.7163333296775818, 0.7516666650772095, 0.765999972820282, 0.7566666603088379, 0.777999997138977, 0.7586666941642761, 0.7736666798591614, 0.7763333320617676, 0.7916666865348816, 0.7743333578109741, 0.8190000057220459, 0.7863333225250244, 0.8063333630561829, 0.8353333473205566, 0.8240000009536743, 0.8273333311080933, 0.8246666789054871, 0.8196666836738586, 0.7973333597183228]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 0], [6, 3, 5, 5, 9, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [77, 80, 61], [1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 7, 3, 4, 6, 9, 1, 4, 2, 2, 3, 5, 4, 8, 0, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 2, 3, 3, 0, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [29, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [42, 9, 76, 58]], "fitness": -0.800000011920929, "mapping_values": [1, 7, 7, 5, 2, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.0226593212979957, 1.3869560330598394, 1.0495880741280115, 0.9061589876123155, 0.8041130246078144, 0.7837262246445296, 0.7270388885133885, 0.719031640173595, 0.7074526210644336, 0.706057402294357, 0.6613837353085105, 0.6559982062913423, 0.6237086872178425, 0.6165127285467462, 0.5922351328924489, 0.5999377533004205, 0.5906394674966616, 0.5691290841898063, 0.5637596084252482, 0.5649459093096644, 0.5621642863682752, 0.528193588683382, 0.5308998180119086, 0.5329647003195116, 0.519486297634945, 0.5166272022515996, 0.5100609898142071, 0.4997868748262905], "accuracy": [0.3222824037075043, 0.5164443254470825, 0.6122044920921326, 0.6635847091674805, 0.6933034062385559, 0.7053229212760925, 0.7260599732398987, 0.7246070504188538, 0.7302865982055664, 0.7255316376686096, 0.7523444890975952, 0.7475894689559937, 0.7617223858833313, 0.7611940503120422, 0.7732135653495789, 0.7676661014556885, 0.7713643908500671, 0.783119797706604, 0.785101056098938, 0.7868181467056274, 0.785101056098938, 0.8029322624206543, 0.7991018295288086, 0.7942147850990295, 0.8049134612083435, 0.8062343001365662, 0.8059701323509216, 0.8109893202781677], "val_loss": [1.251943860735212, 0.8740260601043701, 0.7697734321866717, 0.6309111969811576, 0.6171077489852905, 0.5783848421914237, 0.5624796152114868, 0.6008935996464321, 0.5585381133215768, 0.5383384057453701, 0.5099729810442243, 0.5474624463490078, 0.5047902550016131, 0.49583785874503, 0.496422392981393, 0.5109192643846784, 0.4697176218032837, 0.49427318572998047, 0.4788138355527605, 0.4968542030879429, 0.4478966167994908, 0.4558110237121582, 0.441321781703404, 0.4450916903359549, 0.4373875004904611, 0.44993114471435547, 0.4222784638404846, 0.43317346061979023], "val_accuracy": [0.45233333110809326, 0.5979999899864197, 0.6633333563804626, 0.7193333506584167, 0.7099999785423279, 0.734333336353302, 0.734333336353302, 0.7080000042915344, 0.746999979019165, 0.7563333511352539, 0.7713333368301392, 0.7536666393280029, 0.7823333144187927, 0.7853333353996277, 0.7753333449363708, 0.7666666507720947, 0.7963333129882812, 0.7836666703224182, 0.7893333435058594, 0.7693333625793457, 0.8046666383743286, 0.7903333306312561, 0.8173333406448364, 0.7983333468437195, 0.8173333406448364, 0.8013333082199097, 0.8130000233650208, 0.8096666932106018]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1, 0], [6, 8, 5, 5, 9, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [77, 80, 61], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 6, 6, 1, 4, 6, 2, 1, 9, 4, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 2, 3, 3, 0, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [67, 13, 9, 80, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [3, 0, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.7860000133514404, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3410161982878814, 1.9368781803023025, 1.7005373906339747, 1.2100913216015603, 1.0661285619820113, 0.8967783336295522, 0.7978853577667492, 0.7796171405422154, 0.7591412678418017, 0.7264616847384671, 0.6782209969089645, 0.6648717932398167, 0.6518207861920232, 0.6356515844405808, 0.6252041690778801], "accuracy": [0.27816668152809143, 0.4107779562473297, 0.43204331398010254, 0.570730447769165, 0.6255448460578918, 0.6686038970947266, 0.6979262828826904, 0.7074362635612488, 0.7145687341690063, 0.7230220437049866, 0.7494386434555054, 0.7448157668113708, 0.7537974119186401, 0.7530049085617065, 0.7627789974212646], "val_loss": [1.851205553327288, 1.1854606696537562, 1.1443452835083008, 0.8003902094704765, 0.6303367785045079, 0.6396865844726562, 0.5617381504603794, 0.5929355451038906, 0.5373161349977765, 0.5265181916100639, 0.5725945745195661, 0.532184396471296, 0.5250799315316337, 0.5286328451974052, 0.5143035650253296], "val_accuracy": [0.4729999899864197, 0.5183333158493042, 0.49399998784065247, 0.675000011920929, 0.721666693687439, 0.7036666870117188, 0.7553333044052124, 0.7396666407585144, 0.7699999809265137, 0.7703333497047424, 0.749666690826416, 0.765666663646698, 0.7523333430290222, 0.7643333077430725, 0.768666684627533]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1], [6, 8, 5, 5, 9, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [77, 80, 61], [0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 6, 6, 1, 4, 6, 2, 1, 9, 4, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 3, 2, 3, 3, 0, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [94, 41, 37, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 2, 2, 1, 0, 0, 2, 2], [4, 9, 76, 58]], "fitness": -0.10428571701049805, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.divide_no_nan(alpha, grad), tf.math.add(beta, beta)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.300736285534517, 2.3025716332995017, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09734513610601425, 0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736390795026506, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10533333569765091, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 8, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [77, 80, 61], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 9, 7, 1, 4, 6, 2, 1, 9, 2, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 3, 3, 0, 1, 3, 1, 3, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [13, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 1, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, grad)))))))))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07475894689559937, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0], [2, 8, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [77, 80, 61], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 9, 7, 1, 4, 6, 2, 1, 9, 2, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 3, 3, 0, 1, 3, 1, 3, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [81, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [2, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 15, 15, 9, 6, 3, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.3026465572276056, 2.302930682169338, 2.3028959512175224, 2.3030724193851126, 2.3031139928651223, 2.3030439579192405, 2.3030656232746947, 2.3031253245969285, 2.3030924735335687, 2.3029897809107354, 2.303003460298739, 2.3030590260931056, 2.3029396035777987, 2.3031664686337785, 2.302937510180168, 2.303063274831221, 2.3029659590496285], "accuracy": [0.09351472556591034, 0.09972262382507324, 0.09734513610601425, 0.0944393053650856, 0.09417514503002167, 0.09391097724437714, 0.09734513610601425, 0.09628847241401672, 0.09457138925790787, 0.09549596905708313, 0.09391097724437714, 0.09866596013307571, 0.09496764093637466, 0.08928807079792023, 0.09325055778026581, 0.09087307006120682, 0.09549596905708313], "val_loss": [1.9737080846514021, 1.9736770221165247, 1.9736898967197962, 1.9736475944519043, 1.973646777016776, 1.9736037935529436, 1.9736531121390206, 1.973644733428955, 1.973696231842041, 1.973623275756836, 1.9736629213605608, 1.9735838345118932, 1.9736613546098982, 1.9737356730869837, 1.9737182344709123, 1.9737341063363212, 1.9736740248543876], "val_accuracy": [0.09866666793823242, 0.09833333641290665, 0.09833333641290665, 0.10000000149011612, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.10233332961797714, 0.09666666388511658, 0.10000000149011612, 0.09866666793823242, 0.10566666722297668, 0.10233332961797714, 0.10233332961797714, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [9, 2, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2], [86, 80, 61], [1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 9, 7, 1, 4, 6, 2, 1, 9, 2, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 3, 3, 3, 0, 1, 3, 1, 3, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [81, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [42, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.sqrt(sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [6, 8, 5, 5, 9, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [77, 80, 61], [1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 9, 7, 1, 4, 6, 2, 1, 9, 2, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 3, 3, 0, 1, 3, 1, 3, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [81, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [2, 0, 8, 8, 6, 7, 4, 5, 6], [0, 1, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 1], [2, 8, 5, 5, 9, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [77, 80, 61], [0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 9, 3, 1, 4, 6, 2, 1, 9, 4, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 2, 3, 3, 0, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [77, 41, 37, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [4, 4, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [81, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.math.pow(sigma, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [2, 8, 6, 5, 1, 8, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [77, 80, 61], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 9, 7, 1, 4, 6, 2, 1, 9, 2, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 3, 3, 0, 1, 3, 1, 3, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [6, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 1, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, beta))", "other_info": {"loss": [2.300380415495093, 2.3024012130784666, 2.302587630742136, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09932637959718704, 0.09826971590518951, 0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9732676233564104, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09099999815225601, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 1], [6, 8, 5, 5, 9, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [77, 80, 61], [1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 7, 3, 4, 6, 9, 1, 4, 2, 2, 3, 5, 4, 8, 0, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 2, 3, 3, 0, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [67, 13, 9, 80, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [6, 9, 8, 8, 6, 7, 4, 5, 6], [3, 0, 2, 1, 0, 0, 2, 2], [42, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(sigma, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1.2282188729201766e+29, 50.261222883694835, 90.2413712827647, 130.22173942673743, 170.21153798806841, 210.16506756062142], "accuracy": [0.09774138033390045, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [29.006519862583705, 63.343226841517854, 97.68003191266742, 132.0274396623884, 166.3463614327567, 200.59747314453125], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1], [2, 9, 6, 5, 9, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [77, 80, 61], [0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 9, 7, 1, 4, 6, 2, 1, 9, 2, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 2, 3, 3, 0, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [29, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 1, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07475894689559937, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 8, 5, 5, 9, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [37, 87, 61], [1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 9, 7, 1, 4, 6, 2, 1, 9, 2, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 2, 3, 3, 0, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [81, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [2, 3, 2, 1, 0, 0, 2, 2], [42, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 6, 1, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.negative(tf.math.sqrt(sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}]