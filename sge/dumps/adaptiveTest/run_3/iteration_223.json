[{"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [4, 8, 5, 8, 2, 4, 4, 5, 9, 2], [3, 0, 5, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 4, 7, 4, 5, 6], [1, 3, 2, 2, 0, 0, 2, 2], [48, 9]], "fitness": -0.7994285821914673, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.083127231771731, 2.143897041243459, 1.950562488606042, 1.389655513274372, 1.151321732451525, 0.9038063680428114, 0.8035003774122964, 0.7481078008272707, 0.6860505479154586, 0.6396389256032576, 0.702102573020914, 0.6076780801609192, 0.5907191923501989, 0.5709900048351905, 0.5673731660972009, 0.5654340516842273, 0.5241332588540942, 0.5292879008204473], "accuracy": [0.3148857355117798, 0.2339189052581787, 0.3800026476383209, 0.5198785066604614, 0.5851274728775024, 0.6680755615234375, 0.6955488324165344, 0.7124554514884949, 0.7368907928466797, 0.7506273984909058, 0.7367587089538574, 0.7644960880279541, 0.7771760821342468, 0.7827235460281372, 0.7843085527420044, 0.7839123010635376, 0.7992339134216309, 0.8017435073852539], "val_loss": [1.9683746610369002, 1.8397494043622697, 1.2457174573625838, 0.7313631091799054, 0.6774810382298061, 0.7202754872185844, 0.6090512616293771, 0.5329640763146537, 0.5127701078142438, 0.6017697368349347, 0.49655044078826904, 0.45565520014081684, 0.4510056291307722, 0.5238454341888428, 0.4450134464672634, 0.46255338191986084, 0.4523712226322719, 0.48156981808798655], "val_accuracy": [0.11933333426713943, 0.34033334255218506, 0.5403333306312561, 0.6819999814033508, 0.7106666564941406, 0.6653333306312561, 0.7099999785423279, 0.7536666393280029, 0.7599999904632568, 0.7226666808128357, 0.7666666507720947, 0.7923333048820496, 0.7979999780654907, 0.7643333077430725, 0.79666668176651, 0.7903333306312561, 0.7919999957084656, 0.7833333611488342]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [4, 8, 5, 8, 2, 4, 4, 5, 9, 2], [3, 0, 5, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 4, 7, 4, 5, 6], [1, 3, 2, 2, 0, 0, 2, 2], [48, 9]], "fitness": -0.7617142796516418, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.083225474869649, 2.1477222244233474, 2.245077504867324, 2.130219143269289, 2.0082496357096375, 1.4811070013701277, 1.0589078544169024, 0.8824953389536231, 0.7710293880338446, 0.7225900027635721, 0.6993040013716378, 0.6523306436306292, 0.6479872492530862, 0.6091052304641871, 0.586794854123689, 0.6125474903388597, 0.5649120252854505, 0.5665798384547155], "accuracy": [0.3147536516189575, 0.2324659824371338, 0.3159424066543579, 0.24356095492839813, 0.3637564480304718, 0.48249900341033936, 0.6131290197372437, 0.6676793098449707, 0.7160216569900513, 0.7251353859901428, 0.7362303733825684, 0.7519482374191284, 0.7470611333847046, 0.7676661014556885, 0.7757231593132019, 0.7648923397064209, 0.7857614755630493, 0.7862898111343384], "val_loss": [1.9684113774980818, 1.8609552383422852, 1.9138987404959542, 1.6996625832148962, 1.0679998738425118, 0.8534398078918457, 0.6816540445600238, 0.656096066747393, 0.590609107698713, 0.5256925991603306, 0.5343200649533953, 0.5429434776306152, 0.47897161756243023, 0.5139538219996861, 0.49501090390341623, 0.483674270766122, 0.49865964480808805, 0.49611670630318777], "val_accuracy": [0.12166666984558105, 0.28333333134651184, 0.28833332657814026, 0.5609999895095825, 0.5616666674613953, 0.6256666779518127, 0.6840000152587891, 0.715666651725769, 0.7163333296775818, 0.7566666603088379, 0.7513333559036255, 0.734666645526886, 0.7906666398048401, 0.7706666588783264, 0.781333327293396, 0.7860000133514404, 0.762666642665863, 0.7736666798591614]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [4, 8, 5, 8, 2, 4, 4, 5, 9, 2], [0, 2, 5, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 4, 7, 4, 5, 6], [1, 3, 2, 2, 0, 0, 2, 2], [89, 9]], "fitness": -0.5631428360939026, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.8077101030716287, 2.400942528646195, 2.245092149707289, 2.2873457442689107, 2.203596638571931, 2.144510391381722, 2.2019586771895874, 2.2905302342800433, 1.8411165935614358, 1.6680283166665946, 1.7714632338442113, 1.4537596908054646, 2.0670205148739225, 1.4639112639499614, 1.355884222763247, 1.70847734833721, 2.3683492454634116, 2.3203465111298787, 2.309396416834553, 1.9834382401922235], "accuracy": [0.16536785662174225, 0.20433232188224792, 0.16655659675598145, 0.13630960881710052, 0.3217540681362152, 0.27777042984962463, 0.2937524616718292, 0.15229164063930511, 0.38066306710243225, 0.4525161683559418, 0.41262713074684143, 0.5242372155189514, 0.29705455899238586, 0.4982168674468994, 0.5396909117698669, 0.4741777777671814, 0.09721305221319199, 0.10170386731624603, 0.10474177449941635, 0.26997753977775574], "val_loss": [1.9341968127659388, 1.9649261747087752, 1.9751459530421667, 1.6249058246612549, 1.5400138923100062, 1.3419045039585658, 1.889592238834926, 1.8819426809038435, 1.3650318554469518, 1.731339386531285, 1.2210487638201033, 1.5979065554482597, 1.1149309703281947, 1.0262597969600133, 1.0313389982495988, 2.0730419840131487, 1.9769038472856795, 1.9760939734322684, 1.9711129324776786, 1.0990637711116247], "val_accuracy": [0.21266666054725647, 0.10133333504199982, 0.09866666793823242, 0.2903333306312561, 0.4033333361148834, 0.46799999475479126, 0.15600000321865082, 0.2150000035762787, 0.48633334040641785, 0.32766667008399963, 0.5080000162124634, 0.26366665959358215, 0.5680000185966492, 0.6026666760444641, 0.6349999904632568, 0.09666666388511658, 0.10000000149011612, 0.10000000149011612, 0.1080000028014183, 0.5736666917800903]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [4, 8, 5, 8, 2, 4, 4, 5, 9, 2], [3, 4, 5, 3, 1, 3, 4, 1], [18, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 4, 7, 4, 5, 6], [1, 3, 2, 2, 0, 0, 2, 2], [89, 9]], "fitness": -0.40714284777641296, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.8073115163648668, 2.252615283178285, 2.1848087336613657, 2.249774979027176, 2.3055673233191447, 2.303928420276312, 2.3031511615059865, 2.302530483216374], "accuracy": [0.16483952105045319, 0.20935148000717163, 0.2118610441684723, 0.19852067530155182, 0.10117553919553757, 0.09932637959718704, 0.09747721254825592, 0.1026284471154213], "val_loss": [1.9368000711713518, 1.7364677020481654, 1.6255106585366386, 1.976884160723005, 1.9740134647914342, 1.9735728672572546, 1.9736195972987585, 1.9731090409415108], "val_accuracy": [0.20466665923595428, 0.3646666705608368, 0.3869999945163727, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.10066666454076767, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [4, 8, 5, 8, 2, 4, 4, 5, 9, 2], [1, 0, 5, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 4, 7, 4, 5, 6], [1, 3, 2, 2, 0, 0, 2, 2], [84, 9]], "fitness": -0.31200000643730164, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.8038275557706824, 2.2383860120872825, 2.241593191542126, 2.093792120290234, 2.0086066802542177, 2.403434144727873, 2.2998602442249503, 2.085779250620725], "accuracy": [0.16391493380069733, 0.22863557934761047, 0.16840575635433197, 0.2965262234210968, 0.3255844712257385, 0.13710209727287292, 0.12957337498664856, 0.2685246467590332], "val_loss": [1.9399427005222865, 1.9774928774152483, 1.7079618658338274, 1.862692083631243, 1.9850027901785714, 1.985661234174456, 1.8905416897365026, 1.982442992074149], "val_accuracy": [0.20866666734218597, 0.09799999743700027, 0.3019999861717224, 0.19433332979679108, 0.10566666722297668, 0.10000000149011612, 0.22100000083446503, 0.10766666382551193]}}, {"genotype": [[0], [1, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [4, 8, 5, 8, 2, 4, 4, 5, 9, 2], [2, 0, 5, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [3, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 4, 7, 4, 5, 6], [1, 3, 2, 2, 0, 0, 2, 2], [48, 9]], "fitness": -0.22942857444286346, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 1, 0, 1, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.147814281738477, 2.0558417422534325, 3.256232389983657, 2.257916785816963, 30615831.932914753, NaN, NaN], "accuracy": [0.2681283950805664, 0.31145158410072327, 0.17659489810466766, 0.18095363676548004, 0.19984149932861328, 0.09972262382507324, 0.09998679161071777], "val_loss": [1.6905428341456823, 1.4619652884347099, 1.970625877380371, 1.6873353208814348, 7.931786243812492e+22, NaN, NaN], "val_accuracy": [0.32366666197776794, 0.3903333246707916, 0.16033333539962769, 0.2603333294391632, 0.09833333641290665, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [2, 8, 5, 8, 2, 4, 4, 5, 9, 2], [3, 0, 5, 3, 1, 3, 4, 1], [90, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 8, 8, 8, 4, 7, 4, 5, 6], [2, 3, 2, 2, 0, 0, 2, 2], [89, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 5, 3, 2, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(tf.math.sqrt(beta)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1], [0, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [4, 8, 5, 8, 2, 4, 4, 5, 9, 2], [0, 2, 5, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [1], [0, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 4, 7, 4, 5, 6], [1, 3, 2, 2, 0, 0, 2, 2], [60, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.4693383220231352e+26, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [8.982172171069555e+18, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [4, 8, 5, 8, 2, 4, 4, 5, 9, 2], [3, 0, 5, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [3, 8, 0, 8, 4, 7, 4, 5, 6], [3, 3, 2, 2, 0, 0, 2, 2], [48, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 13, 8, 5, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(tf.math.negative(tf.math.sqrt(sigma))), tf.math.pow(tf.math.add(sigma, beta), tf.math.pow(beta, tf.math.square(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [4, 8, 5, 8, 2, 4, 4, 5, 9, 2], [3, 0, 5, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 2, 8, 4, 7, 4, 5, 6], [1, 3, 2, 2, 0, 0, 2, 2], [48, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 9, 5, 4, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.add(alpha, sigma)), tf.math.sqrt(tf.math.pow(beta, beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [4, 8, 5, 8, 2, 4, 4, 5, 9, 2], [5, 0, 5, 3, 1, 3, 4, 1], [38, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 4, 7, 4, 5, 6], [1, 3, 2, 2, 0, 0, 2, 2], [48, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 5, 4, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [4, 8, 5, 8, 2, 4, 4, 5, 9, 2], [3, 0, 5, 3, 1, 3, 4, 1], [57, 42, 20, 7, 45, 13], [0, 0], [0, 1, 1], [0], [3, 1], [79], [1, 1, 0, 1, 1, 0, 0, 1, 1], [3, 3, 9, 8, 4, 7, 4, 5, 6], [0, 0, 2, 2, 0, 0, 2, 2], [48, 3]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 2, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(grad, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302676687371603, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [4, 8, 5, 8, 2, 4, 4, 5, 9, 2], [3, 0, 5, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 4, 7, 4, 5, 6], [2, 3, 2, 2, 0, 0, 2, 2], [48, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(beta), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [4, 8, 5, 8, 2, 4, 4, 5, 9, 2], [3, 4, 5, 3, 1, 3, 4, 1], [18, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [1, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 4, 7, 4, 5, 6], [1, 3, 2, 2, 0, 0, 2, 2], [25, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0812310129404068, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [4, 8, 5, 8, 2, 4, 4, 5, 9, 2], [0, 2, 5, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 4, 7, 4, 5, 6], [1, 3, 2, 2, 0, 0, 2, 2], [89, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(sigma))", "other_info": {"loss": [2.303883100592024, 2.303599871066205, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09232597798109055, 0.08492933213710785, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9711878640311105, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03633333370089531, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [4, 8, 5, 8, 2, 4, 4, 5, 9, 2], [3, 4, 5, 3, 1, 3, 4, 1], [18, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [3, 1], [52], [1, 1, 0, 1, 1, 0, 0, 1, 1], [3, 3, 9, 8, 4, 7, 4, 5, 6], [1, 3, 2, 2, 0, 0, 2, 2], [25, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [46.128617401435434, 526.3844924783663, 2162.076490409024, 5654.609548165388, 11881.879496753649, 21605.934298536355], "accuracy": [0.10117553919553757, 0.09985470771789551, 0.09774138033390045, 0.10355303436517715, 0.10368511080741882, 0.10249637067317963], "val_loss": [127.11004202706474, 764.199462890625, 2394.5182059151784, 5499.070033482143, 10560.54966517857, 18057.11104910714], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [4, 8, 5, 8, 2, 4, 4, 5, 9, 2], [0, 0, 5, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 7, 9, 8, 4, 7, 4, 5, 6], [1, 3, 2, 2, 0, 0, 2, 2], [48, 9]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 2, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), alpha), sigma)", "other_info": {"loss": [2.303883100592024, 2.303599871066205, 2.303511230433228, 2.3001306313313292, 2.302121837204316, 2.302255710511868], "accuracy": [0.09232597798109055, 0.08492933213710785, 0.08453308790922165, 0.09681680053472519, 0.09245806187391281, 0.08796724677085876], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [4, 8, 5, 8, 2, 4, 4, 5, 9, 2], [3, 4, 5, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 6, 9, 8, 4, 7, 4, 5, 6], [1, 3, 2, 2, 0, 0, 2, 2], [86, 9]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(grad, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.divide_no_nan(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.303883100592024, 2.303599871066205, 2.303511230433228, 2.3001306313313292, 2.302121837204316, 2.302255710511868], "accuracy": [0.09232597798109055, 0.08492933213710785, 0.08453308790922165, 0.09681680053472519, 0.09245806187391281, 0.08796724677085876], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [4, 8, 5, 8, 2, 4, 4, 5, 9, 2], [2, 0, 5, 3, 1, 3, 4, 1], [19, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 1, 1, 1, 1, 0, 0, 1, 1], [3, 7, 9, 8, 4, 7, 4, 5, 6], [1, 3, 2, 2, 0, 0, 2, 2], [48, 9]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, sigma)", "other_info": {"loss": [2.303883100592024, 2.303599871066205, 2.303511230433228, 2.3001306313313292, 2.302121837204316, 2.302255710511868], "accuracy": [0.09232597798109055, 0.08492933213710785, 0.08453308790922165, 0.09681680053472519, 0.09245806187391281, 0.08796724677085876], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [4, 8, 5, 8, 2, 4, 4, 5, 9, 2], [3, 0, 5, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [6, 2, 9, 8, 4, 7, 4, 5, 6], [1, 3, 2, 2, 0, 0, 2, 2], [25, 9]], "fitness": -0.03828571364283562, "mapping_values": [1, 3, 3, 2, 1, 1, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), alpha), sigma)", "other_info": {"loss": [2.303883100592024, 2.303599871066205, 2.303511230433228, 2.3001306313313292, 2.302121837204316, 2.302255710511868], "accuracy": [0.09232597798109055, 0.08492933213710785, 0.08453308790922165, 0.09681680053472519, 0.09245806187391281, 0.08796724677085876], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]