[{"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [5, 9, 3, 0, 0, 2, 4, 1, 0, 2, 5, 2, 9, 6, 3, 6, 1, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 5, 3, 1, 0, 4, 0, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [55, 42, 20, 7, 45, 13, 56], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.8225714564323425, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 2, 0, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.3498748524660416, 2.038448428654195, 1.8307346849078752, 1.320496382541377, 1.2430929431920321, 1.0425620519442564, 0.9301208647376652, 0.8337840673048357, 0.8183147516768323, 0.7758368359045377, 0.7508938443375742, 0.7131378842603103, 0.7234114575474222, 0.6688415569762166, 0.6563278478307653, 0.6323169963691433, 0.6009861032692921, 0.5943901582700134, 0.5925696831589692, 0.5608068234758953, 0.5578347090024045, 0.5390396889694268, 0.5386873106474039, 0.5108068426366118, 0.5199355072884465, 0.5172931452736548, 0.4856124957869664, 0.4858747013508604, 0.47931470579364754, 0.45763554334593265, 0.4718555104400283, 0.4587998973687154, 0.4411994652615216, 0.45624674965897255, 0.43217840860422496, 0.44802141163988735, 0.4200613239516577, 0.4329600726781882, 0.43476227767841297, 0.43451018557651183, 0.4053305395645252, 0.38640690766636093, 0.38502732347960267, 0.3961027191457117, 0.37956074886727625, 0.3858624169178107, 0.37030848128180605, 0.36739451101726595], "accuracy": [0.2374851405620575, 0.3139611780643463, 0.3983621597290039, 0.5375775694847107, 0.5717870593070984, 0.6126006841659546, 0.657508909702301, 0.6859067678451538, 0.691850483417511, 0.7065116763114929, 0.7193237543106079, 0.7333245277404785, 0.7260599732398987, 0.7479857206344604, 0.7474573850631714, 0.763439416885376, 0.7713643908500671, 0.7783648371696472, 0.7734777331352234, 0.7909126877784729, 0.789459764957428, 0.7943468689918518, 0.7935543656349182, 0.8074230551719666, 0.8075551390647888, 0.8080834746360779, 0.8161405324935913, 0.8156121969223022, 0.8164047002792358, 0.8297450542449951, 0.8224804997444153, 0.8248580098152161, 0.8337075710296631, 0.8323867321014404, 0.8370096683502197, 0.8286884427070618, 0.8411042094230652, 0.8368775844573975, 0.8374059200286865, 0.8341038227081299, 0.8511425256729126, 0.8576145768165588, 0.8552370667457581, 0.8479725122451782, 0.8589354157447815, 0.8548408150672913, 0.8621054291725159, 0.8643507957458496], "val_loss": [1.8839575903756278, 1.6605583599635534, 1.2549734456198556, 1.0162900175367082, 0.7665024484906878, 0.6859644310814994, 0.6655516113553729, 0.6080151966639927, 0.6116383416312081, 0.6271540778023856, 0.6028628860201154, 0.6116468565804618, 0.5336780888693673, 0.5486522231783185, 0.5086805650166103, 0.4981661353792463, 0.47760634762900217, 0.4975133112498692, 0.477875862802778, 0.4736559050423758, 0.469680769102914, 0.45894054004124235, 0.4709635632378714, 0.4417519909994943, 0.45118747438703266, 0.43021105016980854, 0.4102468660899571, 0.4209014858518328, 0.3989009346280779, 0.39629799127578735, 0.4019673466682434, 0.39579526015690397, 0.39681254965918406, 0.40302954401288715, 0.3876930134637015, 0.4287622230393546, 0.39922591618129183, 0.4150201082229614, 0.4103785327502659, 0.37589792694364277, 0.3768191252435957, 0.37175949130739483, 0.37943243980407715, 0.37967169284820557, 0.36333058561597553, 0.38395326478140696, 0.35959839820861816, 0.3715423771313259], "val_accuracy": [0.19499999284744263, 0.36766666173934937, 0.47966668009757996, 0.565666675567627, 0.6840000152587891, 0.6790000200271606, 0.7123333215713501, 0.7296666502952576, 0.721666693687439, 0.718999981880188, 0.703000009059906, 0.7353333234786987, 0.7429999709129333, 0.7163333296775818, 0.7726666927337646, 0.7720000147819519, 0.7889999747276306, 0.7703333497047424, 0.7820000052452087, 0.8009999990463257, 0.7796666622161865, 0.7919999957084656, 0.7733333110809326, 0.8133333325386047, 0.7940000295639038, 0.8083333373069763, 0.8259999752044678, 0.8209999799728394, 0.8306666612625122, 0.8213333487510681, 0.8176666498184204, 0.831333339214325, 0.8349999785423279, 0.8226666450500488, 0.8416666388511658, 0.8199999928474426, 0.828000009059906, 0.8253333568572998, 0.8386666774749756, 0.846666693687439, 0.8363333344459534, 0.8373333215713501, 0.8479999899864197, 0.8429999947547913, 0.8429999947547913, 0.8386666774749756, 0.8379999995231628, 0.847000002861023]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [5, 8, 5, 0, 3, 2, 4, 1, 0, 2, 5, 6, 1, 6, 3, 6, 1, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 3, 5, 3, 2, 3, 4, 1, 2, 0, 3, 5, 2, 4, 5, 3, 3, 0, 3, 3, 1, 0, 3, 4, 0, 1, 0, 0, 0, 0, 3, 4, 2, 3, 1, 2, 4, 5], [98, 42, 20, 7, 45, 13, 66, 59, 38, 94], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.8105714321136475, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.3499038351399313, 2.051402975287593, 1.9139842725527552, 1.3703367892604037, 1.3533171881160022, 1.0431124079638405, 0.9048575340733158, 0.8359489026181119, 0.8118230120900474, 0.759761886644861, 0.6722905752508002, 0.6769485980559649, 0.6658729225763194, 0.6300963815476334, 0.6163398912317953, 0.5652284333026011, 0.5820227707964382, 0.5744592106148646, 0.5449857159832985, 0.5475308932506681, 0.5342477548785293, 0.5154556792331267, 0.5254255161545516, 0.49128535136003787], "accuracy": [0.23761722445487976, 0.3069607615470886, 0.3941355049610138, 0.5300488471984863, 0.5182934999465942, 0.6328094005584717, 0.6757363677024841, 0.6819442510604858, 0.6936996579170227, 0.7098137736320496, 0.7440232634544373, 0.743891179561615, 0.7452120184898376, 0.7600052952766418, 0.7640998363494873, 0.7864218950271606, 0.7808743715286255, 0.7791573405265808, 0.798309326171875, 0.7944789528846741, 0.7960638999938965, 0.8041210174560547, 0.7993659973144531, 0.8168009519577026], "val_loss": [1.8836373601640974, 1.4185263088771276, 1.136566264288766, 0.8173703977039882, 0.8316429512841361, 0.7664696659360614, 0.6384861469268799, 0.6553620100021362, 0.5713176046098981, 0.5509255613599505, 0.5183126245226178, 0.5345849479947772, 0.5134203263691494, 0.5021734407969883, 0.4708601236343384, 0.4905585391180856, 0.46672371455601286, 0.4500774996621268, 0.4365628276552473, 0.4478426660810198, 0.4396308149610247, 0.47225970881325857, 0.4380142518452236, 0.41492515802383423], "val_accuracy": [0.19499999284744263, 0.4906666576862335, 0.5493333339691162, 0.6136666536331177, 0.612666666507721, 0.6759999990463257, 0.7253333330154419, 0.6963333487510681, 0.7459999918937683, 0.7453333139419556, 0.7689999938011169, 0.7593333125114441, 0.7599999904632568, 0.7706666588783264, 0.7963333129882812, 0.7933333516120911, 0.7929999828338623, 0.8116666674613953, 0.8183333277702332, 0.8073333501815796, 0.7950000166893005, 0.768666684627533, 0.7879999876022339, 0.8180000185966492]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [4, 8, 0, 8, 2, 4, 3, 5, 0, 2, 5, 8, 1, 8, 9], [3, 0, 3, 3, 1, 3, 4, 1, 2], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8094285726547241, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 11, 6, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), alpha)))))))))))))), tf.math.square(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [1.9758343312088777, 1.425950316169778, 1.0655674748275228, 0.9127680080882656, 0.8075488583365483, 0.773849348476487, 0.734977306502134, 0.7038678748811382, 0.6708652433654998, 0.6826702234153309, 0.6383249071752548, 0.6386330527730858, 0.6124184452279715, 0.6177208465261388, 0.6060058179312315, 0.5657283838052539, 0.5726848609569349, 0.5685121748331217, 0.5503500861388471, 0.5260252440610282, 0.5371263410279528, 0.5019582769480584, 0.5148777198388419, 0.4947869390890882, 0.4959120420007626, 0.4807911197766967, 0.46986579003823414, 0.45311736632268884, 0.4659225689169753, 0.4517979075478493, 0.45106564154556916, 0.44541188970989537, 0.4301454601640856, 0.4241856730507034, 0.4257518726529824, 0.42603349064114765, 0.4020659594432852, 0.4013827545429344, 0.41671099239305154, 0.40914417688935706, 0.3970171539003445, 0.37152953938155553, 0.3773105779005599, 0.36789244650739483, 0.3822731269372689, 0.36197312540933047, 0.3741986479198361, 0.3525210525995516, 0.3498140136760381, 0.3485970947964789, 0.33903390752514984, 0.3456131791977157, 0.35538750807402264, 0.34020682376971917], "accuracy": [0.3397173285484314, 0.5119535326957703, 0.6111478209495544, 0.6487914323806763, 0.6925109028816223, 0.7030775547027588, 0.7177387475967407, 0.7288337349891663, 0.7457403540611267, 0.7400607466697693, 0.7581561207771301, 0.7544577717781067, 0.7713643908500671, 0.7646281719207764, 0.7656848430633545, 0.7835160493850708, 0.7844406366348267, 0.780610203742981, 0.7866860628128052, 0.7998943328857422, 0.7957997918128967, 0.8094043135643005, 0.8049134612083435, 0.8164047002792358, 0.8128384351730347, 0.8164047002792358, 0.8220842480659485, 0.8259146809577942, 0.8227446675300598, 0.8305375576019287, 0.8310658931732178, 0.8362171649932861, 0.8348963260650635, 0.8425571322441101, 0.8381983637809753, 0.8403117060661316, 0.8490291833877563, 0.8499537706375122, 0.8445383906364441, 0.8438779711723328, 0.8490291833877563, 0.863029956817627, 0.860652506351471, 0.8654074668884277, 0.8578787446022034, 0.8701624870300293, 0.856689989566803, 0.8676528930664062, 0.8668603897094727, 0.8712190985679626, 0.8770307898521423, 0.8733324408531189, 0.8669924736022949, 0.8712190985679626], "val_loss": [1.4694253376552038, 1.0414790085383825, 0.6723504407065255, 0.6622169698987689, 0.6495736496789115, 0.6081962926047189, 0.5693373850413731, 0.5366388218743461, 0.516704797744751, 0.5201377868652344, 0.5128638744354248, 0.5486783811024257, 0.5125453812735421, 0.4951657397406442, 0.4773639610835484, 0.4732266664505005, 0.47301106793539865, 0.4642020123345511, 0.44871197428022114, 0.4656218801225935, 0.43129416022981915, 0.49715169838496615, 0.46059473923274447, 0.42786972863333567, 0.4207292880330767, 0.42277711629867554, 0.4014752762658255, 0.4090298499379839, 0.3907559173447745, 0.38099437952041626, 0.4250932591302054, 0.387493976524898, 0.38513894592012676, 0.3810060109410967, 0.374792890889304, 0.3852968045643398, 0.3643003361565726, 0.3921171086175101, 0.40048807859420776, 0.3678863389151437, 0.36408988918576923, 0.3653660842350551, 0.35294183662959505, 0.41322735377720426, 0.3490718517984663, 0.3719457813671657, 0.3467497059277126, 0.36387946775981356, 0.3451763561793736, 0.34621030943734304, 0.3430938124656677, 0.3573822890009199, 0.36873975821903776, 0.3446797898837498], "val_accuracy": [0.4986666738986969, 0.5849999785423279, 0.6940000057220459, 0.6899999976158142, 0.7170000076293945, 0.7013333439826965, 0.7283333539962769, 0.7556666731834412, 0.7673333287239075, 0.7636666893959045, 0.7553333044052124, 0.7416666746139526, 0.765333354473114, 0.7803333401679993, 0.7846666574478149, 0.8003333210945129, 0.7979999780654907, 0.7963333129882812, 0.7963333129882812, 0.7919999957084656, 0.8086666464805603, 0.7586666941642761, 0.7796666622161865, 0.8076666593551636, 0.8253333568572998, 0.8036666512489319, 0.8240000009536743, 0.8276666402816772, 0.8326666951179504, 0.8370000123977661, 0.8116666674613953, 0.8293333053588867, 0.843666672706604, 0.8356666564941406, 0.8376666903495789, 0.8456666469573975, 0.8483333587646484, 0.8353333473205566, 0.8273333311080933, 0.8450000286102295, 0.8496666550636292, 0.8460000157356262, 0.8539999723434448, 0.8119999766349792, 0.8529999852180481, 0.8330000042915344, 0.8576666712760925, 0.8413333296775818, 0.8579999804496765, 0.8519999980926514, 0.8566666841506958, 0.8453333377838135, 0.8336666822433472, 0.8519999980926514]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [5, 8, 4, 0, 3, 2, 4, 1, 0, 2, 5, 6, 1, 6, 3, 6, 1, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 5, 3, 1, 3, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [55, 42, 20, 7, 45, 13, 56], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.8045714497566223, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 10, 7, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, alpha))), tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.subtract(tf.math.add(beta, grad), tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), alpha)))), tf.math.add(beta, grad))), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.349899487110602, 2.045105419123036, 1.6861176140760907, 1.396623235746476, 1.0777448717755191, 1.0254132331496202, 0.9064228364332021, 0.8964657829800113, 0.8412467314582601, 0.7633612267628731, 0.7322133078456728, 0.7022214396880713, 0.7095780694064305, 0.687918117513683, 0.6563526070853266, 0.6152708635212424, 0.6333800213857491, 0.603790394421566, 0.5823311443263356, 0.5717536141890985, 0.5547909577918516, 0.5308406409995589, 0.5505260084803079, 0.5172439605143281, 0.5228611489470294], "accuracy": [0.23761722445487976, 0.31026285886764526, 0.447761207818985, 0.5193501710891724, 0.6120724081993103, 0.6234315037727356, 0.6651697158813477, 0.6659622192382812, 0.6782459616661072, 0.7071720957756042, 0.726192057132721, 0.7306828498840332, 0.726192057132721, 0.7386078238487244, 0.7495707273483276, 0.7646281719207764, 0.7606657147407532, 0.7646281719207764, 0.7808743715286255, 0.7907806038856506, 0.7932901978492737, 0.7923656105995178, 0.7944789528846741, 0.8053097128868103, 0.8014793395996094], "val_loss": [1.8836207389831543, 1.5256131035940987, 1.2669990062713623, 0.8693674291883197, 0.8022383621760777, 0.7012424979891095, 0.7356518677302769, 0.6722869873046875, 0.5928566626140049, 0.5748012747083392, 0.5656924418040684, 0.5765480484281268, 0.5498686177389962, 0.539217506136213, 0.5165344136101859, 0.517615692956107, 0.49264826093401226, 0.4714377777917044, 0.4781061240604946, 0.45820607457842144, 0.4651271275111607, 0.4872288874217442, 0.4512894664491926, 0.4653446674346924, 0.44553959369659424], "val_accuracy": [0.19466666877269745, 0.42266666889190674, 0.5479999780654907, 0.6503333449363708, 0.6549999713897705, 0.715666651725769, 0.6723333597183228, 0.6940000057220459, 0.734000027179718, 0.7463333606719971, 0.7239999771118164, 0.7303333282470703, 0.7336666584014893, 0.734000027179718, 0.768666684627533, 0.7566666603088379, 0.7699999809265137, 0.7906666398048401, 0.7976666688919067, 0.8073333501815796, 0.7839999794960022, 0.765333354473114, 0.7876666784286499, 0.8066666722297668, 0.8056666851043701]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [6, 0, 1, 8, 0, 3, 4, 5, 9, 2, 1, 9, 6, 0, 1, 1, 5], [3, 0, 3, 3, 1, 3, 4, 1, 2], [98, 42, 20, 7, 45, 13, 66, 59, 38, 94], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.8042857050895691, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.subtract(tf.math.sqrt(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.3498297794194913, 2.042631239561026, 1.8339857586528236, 1.4696888088502935, 1.2567664686211064, 1.0477355228612262, 0.9248202759528976, 0.8575283183067104, 0.8244459218966915, 0.8205391393991399, 0.731396102815524, 0.7245540947033005, 0.7308383883659662, 0.6815081172615483, 0.6570530847205053, 0.618973344025154, 0.618442667292692, 0.5917209364152021, 0.5915214125947268, 0.5623195090109346, 0.5536237952731556, 0.533850662074683, 0.5379536783910934, 0.5290342568878831, 0.5136733746736466], "accuracy": [0.23735305666923523, 0.3121120035648346, 0.40589091181755066, 0.5147272348403931, 0.5411438345909119, 0.6151102781295776, 0.6584334969520569, 0.6753401160240173, 0.6950204968452454, 0.6909258961677551, 0.7217012047767639, 0.7293620109558105, 0.7180029153823853, 0.7425703406333923, 0.7495707273483276, 0.7638356685638428, 0.7663452625274658, 0.7778365015983582, 0.7807422876358032, 0.7917051911354065, 0.7907806038856506, 0.798309326171875, 0.796328067779541, 0.8024039268493652, 0.806630551815033], "val_loss": [1.8838891301836287, 1.6028053419930595, 0.9404205935341972, 0.8192882878439767, 0.9436876773834229, 0.7312806844711304, 0.6441608837672642, 0.6186906950814384, 0.682849815913609, 0.6174519232341221, 0.5441313641411918, 0.6341799667903355, 0.5689331804003034, 0.5488907439368111, 0.5323478153773716, 0.5240169422967094, 0.4725848776953561, 0.48331395217350553, 0.45532333850860596, 0.4589001110621861, 0.4855786902563913, 0.4511272396360125, 0.4761483498982021, 0.47081085613795687, 0.47657757146017893], "val_accuracy": [0.19499999284744263, 0.382999986410141, 0.6389999985694885, 0.6623333096504211, 0.5659999847412109, 0.6673333048820496, 0.7136666774749756, 0.7173333168029785, 0.7073333263397217, 0.7146666646003723, 0.7519999742507935, 0.7196666598320007, 0.7226666808128357, 0.7176666855812073, 0.7566666603088379, 0.7450000047683716, 0.8019999861717224, 0.7789999842643738, 0.8083333373069763, 0.815666675567627, 0.7720000147819519, 0.8003333210945129, 0.7720000147819519, 0.8069999814033508, 0.7786666750907898]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [4, 8, 5, 0, 5, 2, 4, 1, 0, 2, 1, 6, 1, 6, 2, 6, 1, 0, 9, 1, 6, 6, 0, 6, 1, 3, 3, 9, 7, 0, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 9, 1, 5, 5, 2, 3, 8, 0, 7, 3, 6, 2, 7, 7, 3, 5, 7, 2, 4, 6, 9], [2, 3, 5, 3, 2, 3, 4, 1, 2, 0, 3, 5, 2, 4, 5, 3, 3, 0, 3, 3, 1, 0, 3, 4, 0, 1, 0, 0, 0, 0, 3, 4, 2, 3, 1, 2, 4, 5], [98, 42, 20, 7, 45, 13, 66, 59, 38, 94], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.7879999876022339, "mapping_values": [1, 1, 1, 0, 1, 0, 24, 24, 14, 10, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta)))))))), tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.negative(tf.math.add(beta, grad)), tf.math.add(tf.math.add(beta, tf.math.subtract(grad, grad)), tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(grad, alpha))))))))), tf.math.add(beta, beta)), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.3499063013913437, 2.040096939153297, 1.8422009080172121, 1.345092047506304, 1.1310558735245742, 0.9444408027833842, 0.9368901386819637, 0.8243679820570129, 0.8148812928519087, 0.7734802251856608, 0.7153565141314198, 0.6955549747023395, 0.7113547428424852, 0.6723144742255639, 0.6536022889584189, 0.6246477558061415, 0.6097143896818633, 0.5873568130915647, 0.5750179807224357, 0.545572143370339, 0.5661247854125089, 0.5259166138519495, 0.5526047461792746], "accuracy": [0.23761722445487976, 0.31224408745765686, 0.40126800537109375, 0.5320301055908203, 0.5880332589149475, 0.6404702067375183, 0.653150200843811, 0.6919825673103333, 0.6946242451667786, 0.7013604640960693, 0.7326641082763672, 0.7395324110984802, 0.7349095344543457, 0.7456082701683044, 0.7506273984909058, 0.759080708026886, 0.7693831920623779, 0.7799497842788696, 0.785101056098938, 0.7980451583862305, 0.7885351777076721, 0.7991018295288086, 0.7942147850990295], "val_loss": [1.883852141244071, 1.6604064532688685, 1.0309765338897705, 0.8698935679027012, 0.876595003264291, 0.8773361955370221, 0.6871039186205182, 0.5891435827527728, 0.5980928795678275, 0.5659013135092599, 0.5953456844602313, 0.6233389207295009, 0.508304374558585, 0.5337873697280884, 0.5230246271405902, 0.48508392061506, 0.48464226722717285, 0.47086317198617117, 0.46765874113355366, 0.4788013696670532, 0.4684683084487915, 0.4891332047326224, 0.47640914576394217], "val_accuracy": [0.19466666877269745, 0.3766666650772095, 0.6169999837875366, 0.656000018119812, 0.5996666550636292, 0.6023333072662354, 0.7046666741371155, 0.7326666712760925, 0.7250000238418579, 0.7443333268165588, 0.7016666531562805, 0.7289999723434448, 0.7716666460037231, 0.734333336353302, 0.7633333206176758, 0.781000018119812, 0.7820000052452087, 0.800000011920929, 0.7879999876022339, 0.7763333320617676, 0.7736666798591614, 0.7620000243186951, 0.7696666717529297]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [4, 8, 5, 8, 2, 4, 8, 5, 3, 2, 5, 8, 1, 8, 9], [3, 1, 1, 1, 1, 3, 4, 1, 2], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [32, 9, 76, 58]], "fitness": -0.7765714526176453, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 11, 6, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))))))))))))), tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), alpha)), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.279437468052225, 2.211972934033625, 2.0882933968329995, 1.8657800553418453, 1.5895760615645713, 1.363771300526217, 1.2257679993088189, 1.1230694796698615, 1.0537354867566358, 1.0025611115862365, 0.9528452266697021, 0.9202717363228179, 0.898236668955428, 0.8762607732626583, 0.8594137868624888, 0.8373416884464122, 0.8129014208599907, 0.8102354372355444, 0.7970455043571909, 0.7855871283005037, 0.7636989835404198, 0.7707672435231827, 0.7532081641084593, 0.737241204506717, 0.7273038854184577, 0.7344438374207839, 0.7195639418746345, 0.7200091758408582, 0.7074843258228536, 0.7090174444300261, 0.7065819920077694, 0.6947832552748365, 0.6799285161559765, 0.6862372273246862, 0.6801128080728551, 0.6673827243046502, 0.6703133219268738, 0.6648503917083292, 0.6640412407843445, 0.656786857996288, 0.6439976431768899, 0.6417227221785472], "accuracy": [0.14555540680885315, 0.2871483266353607, 0.3800026476383209, 0.4418174624443054, 0.5008585453033447, 0.5498613119125366, 0.5778629183769226, 0.6026945114135742, 0.6349227428436279, 0.6498481035232544, 0.663848876953125, 0.67666095495224, 0.6798309087753296, 0.687887966632843, 0.6897371411323547, 0.7009642124176025, 0.7046625018119812, 0.7120591998100281, 0.7145687341690063, 0.7153612375259399, 0.7224937081336975, 0.7123233675956726, 0.7284374833106995, 0.7268524765968323, 0.7363624572753906, 0.7296261787414551, 0.7360982894897461, 0.737022876739502, 0.7371549606323242, 0.7400607466697693, 0.7433628439903259, 0.744419515132904, 0.7512878179550171, 0.7436270117759705, 0.7478536367416382, 0.7511557340621948, 0.750759482383728, 0.7555144429206848, 0.7548540234565735, 0.7569673657417297, 0.7623828053474426, 0.7606657147407532], "val_loss": [1.9162727083478654, 1.8295511518205916, 1.6617895875658308, 1.389871665409633, 1.1245558602469308, 0.9518720763070243, 0.8495545557567051, 0.7830437592097691, 0.7361922093800136, 0.6985161985669818, 0.6794404472623553, 0.6553947074072701, 0.637726902961731, 0.6255991458892822, 0.6097374813897269, 0.6056791203362601, 0.5911223036902291, 0.5823826789855957, 0.5796595811843872, 0.571029680115836, 0.5640738351004464, 0.5617033072880336, 0.5529408284596035, 0.547990049634661, 0.5410268647330148, 0.5382392236164638, 0.5348457098007202, 0.5303594555173602, 0.5305643081665039, 0.5249135494232178, 0.5188781363623483, 0.5186642748968942, 0.5106035130364555, 0.5139118773596627, 0.508265665599278, 0.5060424293790545, 0.5032275574547904, 0.5023882559367588, 0.49698170593806673, 0.502280626978193, 0.4919595548084804, 0.4901624747685024], "val_accuracy": [0.3656666576862335, 0.46700000762939453, 0.5410000085830688, 0.5676666498184204, 0.6389999985694885, 0.6629999876022339, 0.6660000085830688, 0.6846666932106018, 0.7020000219345093, 0.7123333215713501, 0.7153333425521851, 0.7233333587646484, 0.7310000061988831, 0.737666666507721, 0.7426666617393494, 0.7360000014305115, 0.7456666827201843, 0.749666690826416, 0.7463333606719971, 0.746666669845581, 0.7483333349227905, 0.7583333253860474, 0.7559999823570251, 0.7563333511352539, 0.7649999856948853, 0.7609999775886536, 0.7643333077430725, 0.7576666474342346, 0.762333333492279, 0.765666663646698, 0.7676666378974915, 0.7663333415985107, 0.7720000147819519, 0.765999972820282, 0.7733333110809326, 0.7693333625793457, 0.7796666622161865, 0.7793333530426025, 0.7789999842643738, 0.7756666541099548, 0.7766666412353516, 0.7786666750907898]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [2, 4, 5, 0, 3, 2, 4, 1, 0, 2, 5, 6, 1, 6, 3, 6, 1, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 5, 3, 1, 3, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [55, 42, 20, 7, 45, 13, 56], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.29828572273254395, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 0, 1, 1, 0, 1, 0, 4, 3, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha))))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.negative(alpha)))", "other_info": {"loss": [3.0117180816973868, 2.2761712994762555, 2.2766133584461, 2.3451625861197005, 2.3068821341401597, 2.280045416691772], "accuracy": [0.18755778670310974, 0.15414080023765564, 0.13459251821041107, 0.18121780455112457, 0.09760929644107819, 0.1500462293624878], "val_loss": [1.881387165614537, 1.9190846851893835, 1.9760962213788713, 1.9806341443743025, 1.9721386092049735, 1.9788767950875419], "val_accuracy": [0.24666666984558105, 0.1616666615009308, 0.09799999743700027, 0.09833333641290665, 0.09833333641290665, 0.09666666388511658]}}, {"genotype": [[0], [1, 0, 1], [0, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 8, 5, 8, 2, 4, 3, 5, 0, 2, 5, 8, 1, 8, 9], [5, 1, 5, 3, 1, 3, 4, 1, 2], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [7, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [66, 9, 76, 58]], "fitness": -0.10599999874830246, "mapping_values": [1, 3, 3, 2, 1, 2, 4, 4, 3, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.301246917321776, 2.302572546539337, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10368511080741882, 0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736332893371582, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10633333027362823, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [6, 8, 6, 2, 0, 3, 4, 5, 9, 2, 1, 9, 6, 0, 1, 1, 5], [3, 0, 3, 3, 1, 3, 4, 1, 2], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [1, 0, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 18, 18, 12, 6, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), alpha)))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1], [5, 8, 5, 0, 3, 2, 4, 1, 0, 2, 5, 6, 1, 6, 3, 6, 1, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 5, 3, 1, 3, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [55, 42, 20, 7, 45, 13, 56], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3374170139087522, 2.705034745415015, 3.7267641554482154, 5.504999752294086, 8.14861552709948, 11.373439722183342, 15.553850625405584], "accuracy": [0.08849557489156723, 0.09298639744520187, 0.09959053993225098, 0.10579843819141388, 0.09972262382507324, 0.10130762308835983, 0.09457138925790787], "val_loss": [2.0344836371285573, 2.378772054399763, 3.1926254544939314, 4.519745145525251, 6.320887156895229, 8.583845955984932, 11.325605937412806], "val_accuracy": [0.09799999743700027, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [5, 8, 5, 0, 3, 2, 4, 1, 0, 2, 5, 6, 1, 6, 3, 6, 1, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 5, 3, 1, 3, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 42, 20, 7, 45, 13, 66, 59, 38, 94], [1], [1, 1, 1], [9], [4, 1], [52], [1, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07040020823478699, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1], [6, 8, 3, 8, 0, 3, 4, 5, 9, 2, 1, 9, 6, 0, 1, 1, 5], [3, 1, 3, 3, 3, 3, 4, 1, 2], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 0, 1, 0, 0, 1, 1], [2, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(alpha), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3030192152919424, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [4, 8, 5, 8, 2, 4, 3, 5, 0, 2, 5, 8, 1, 8, 9], [3, 1, 5, 3, 1, 3, 4, 1, 2], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 6, 6, 4, 2, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.square(tf.math.sqrt(tf.math.add(beta, alpha)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [4, 8, 4, 8, 0, 3, 4, 5, 9, 2, 1, 9, 6, 0, 1, 1, 5], [3, 0, 3, 3, 1, 3, 4, 1, 2], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [1, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.pow(tf.math.sqrt(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07066437602043152, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [5, 8, 5, 5, 3, 2, 4, 1, 0, 2, 5, 6, 1, 6, 3, 6, 1, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 5, 3, 1, 3, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [55, 42, 20, 7, 45, 13, 56], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [3, 2, 2, 8, 6, 7, 4, 5, 6, 5, 3, 5, 3, 2, 1, 0, 0, 3, 7], [0, 3, 2, 1, 0, 0, 2, 2, 0, 3, 3, 0, 1, 0], [48, 9, 76, 58, 90, 75]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 5, 2, 0, 1, 0, 0, 0, 0, 33, 19, 14, 6], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, alpha))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), sigma), tf.math.sqrt(tf.math.divide_no_nan(beta, alpha))), tf.math.add(tf.math.pow(tf.math.square(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.multiply(tf.math.square(tf.math.multiply(tf.math.add(tf.math.subtract(beta, tf.math.negative(beta)), tf.math.negative(tf.math.multiply(tf.math.add(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), sigma), sigma))), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))), alpha)))), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [4, 8, 5, 8, 0, 3, 4, 5, 9, 2, 1, 9, 6, 0, 1, 1, 5], [3, 5, 2, 3, 3, 3, 4, 1, 2], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [2.3014028437653113, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [4, 8, 5, 8, 0, 3, 4, 5, 9, 2, 1, 9, 6, 0, 1, 1, 5], [3, 0, 3, 3, 1, 3, 4, 1, 2], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 5, 4, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(alpha))", "other_info": {"loss": [2.302722939820164, 2.3037896418001487, 2.3025471128099206, 2.3025056406995326, 2.3023615042137635, 2.303969446914606], "accuracy": [0.08981640636920929, 0.0882314071059227, 0.09074098616838455, 0.09153348207473755, 0.09470347315073013, 0.09087307006120682], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 0], [0, 1, 1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 2, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1], [4, 8, 5, 8, 2, 4, 3, 5, 0, 2, 5, 8, 1, 8, 9], [3, 3, 5, 3, 1, 3, 3, 1, 2], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [1, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 4, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302722939820164, 2.3037896418001487, 2.3025471128099206, 2.3025056406995326, 2.3023615042137635, 2.303969446914606], "accuracy": [0.08981640636920929, 0.0882314071059227, 0.09074098616838455, 0.09153348207473755, 0.09470347315073013, 0.09087307006120682], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 1], [1, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [4, 80, 61], [1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [5, 8, 2, 0, 3, 2, 4, 1, 0, 2, 5, 6, 1, 6, 3, 6, 1, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 5, 3, 1, 3, 4, 1, 2, 2, 3, 3, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [55, 42, 20, 7, 45, 13, 56], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.302722939820164, 2.3037896418001487, 2.3025471128099206, 2.3025056406995326, 2.3023615042137635, 2.303969446914606], "accuracy": [0.08981640636920929, 0.0882314071059227, 0.09074098616838455, 0.09153348207473755, 0.09470347315073013, 0.09087307006120682], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]