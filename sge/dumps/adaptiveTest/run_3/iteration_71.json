[{"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [2, 1, 2, 2, 3, 2, 4, 9, 9, 9], [2, 0, 3, 4, 0, 3, 4], [60, 3, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [45]], "fitness": -0.8248571157455444, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [1.9773181949891845, 1.3563230730019478, 0.9763440738233199, 0.8769299215360986, 0.7923715153721109, 0.7327158839837072, 0.7196524934667275, 0.6809677020150279, 0.665940554276465, 0.6340944520266081, 0.6303264073739199, 0.5850757653954762, 0.600923357236938, 0.5869118225195027, 0.5499414611509873, 0.5518727088727184, 0.5057064015017273, 0.5333266622669677, 0.5074175490269871, 0.49612722014943134, 0.4943028821322928, 0.47832954136954636, 0.4573582566614243, 0.4655026029979926, 0.43773125610599084, 0.45122694178358785, 0.425377136810565, 0.43509999435213437, 0.4369417302927494, 0.4144352291868253, 0.39821898188526134, 0.4276145994623875, 0.4039584372053372, 0.3856104825584093, 0.39395718005481034, 0.3845326073645853, 0.38576622404725935, 0.37467660885508414], "accuracy": [0.33443403244018555, 0.5276713967323303, 0.6383568644523621, 0.6671509742736816, 0.6997754573822021, 0.7177387475967407, 0.7235503792762756, 0.7427024245262146, 0.746268630027771, 0.7619865536689758, 0.7619865536689758, 0.780610203742981, 0.7677981853485107, 0.7755910754203796, 0.7887993454933167, 0.7868181467056274, 0.8136309385299683, 0.7980451583862305, 0.8087438941001892, 0.8095363974571228, 0.8145555257797241, 0.8169330358505249, 0.8314621448516846, 0.8255184292793274, 0.8347642421722412, 0.8315942287445068, 0.8403117060661316, 0.8384625315666199, 0.8363492488861084, 0.8421608805656433, 0.8532558679580688, 0.8383304476737976, 0.8486329317092896, 0.8580108284950256, 0.8536521196365356, 0.852859616279602, 0.8520671129226685, 0.8639545440673828], "val_loss": [1.320836169379098, 0.7167529889515468, 0.6751130308423724, 0.6815812076841082, 0.5893396479742867, 0.5893528120858329, 0.5454332317624774, 0.5421021325247628, 0.5543188026973179, 0.5428579705102103, 0.5333438260214669, 0.5052080154418945, 0.5141750744410923, 0.4517864840371268, 0.45999956130981445, 0.4423836980547224, 0.46585587092808317, 0.4409263474600656, 0.41697641781398226, 0.41694601093019756, 0.42297375202178955, 0.4250807080950056, 0.47083137716565815, 0.39151383297783987, 0.42969330719539095, 0.3930874126298087, 0.3872367739677429, 0.4247049518993923, 0.3900009649140494, 0.4038726942879813, 0.37785208225250244, 0.4087767260415213, 0.37413032565798077, 0.3872744526181902, 0.3961654646056039, 0.40169144528252737, 0.3644185321671622, 0.38377722672053743], "val_accuracy": [0.5433333516120911, 0.7023333311080933, 0.6993333101272583, 0.6840000152587891, 0.7390000224113464, 0.7256666421890259, 0.749666690826416, 0.7576666474342346, 0.75, 0.7563333511352539, 0.749666690826416, 0.765999972820282, 0.7680000066757202, 0.8006666898727417, 0.7950000166893005, 0.8073333501815796, 0.7896666526794434, 0.7979999780654907, 0.8240000009536743, 0.8163333535194397, 0.8230000138282776, 0.8086666464805603, 0.7833333611488342, 0.8330000042915344, 0.8216666579246521, 0.8356666564941406, 0.8349999785423279, 0.8216666579246521, 0.8349999785423279, 0.8323333263397217, 0.8379999995231628, 0.8226666450500488, 0.8503333330154419, 0.8360000252723694, 0.8209999799728394, 0.8163333535194397, 0.8423333168029785, 0.82833331823349]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1], [2, 1, 2, 2, 3, 0, 4, 9, 9, 9], [2, 0, 3, 3, 0, 3], [61, 3, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [45]], "fitness": -0.8231428861618042, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 8, 6, 3, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.math.pow(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [1.9773743720244203, 1.3574202503463328, 0.9847660174679683, 0.8969996469116261, 0.7562273275724665, 0.7491133935683596, 0.7265921661945429, 0.6716770759474064, 0.6781573922343462, 0.6466891980363298, 0.6241613370851676, 0.584530066536906, 0.5824623735526361, 0.6004015664540387, 0.5512526478741887, 0.5539413779529173, 0.5080851200879951, 0.5170719964849698, 0.50400151181073, 0.4979875468740122, 0.4817283868262198, 0.4845501615969323, 0.45569216968077614, 0.4448747687713896, 0.46782517091095205, 0.4508022927077471, 0.4352236998992873, 0.43182221405762156, 0.43165623271753445], "accuracy": [0.33443403244018555, 0.5283318161964417, 0.6308281421661377, 0.6565843224525452, 0.7172104120254517, 0.7147008180618286, 0.7230220437049866, 0.7491744756698608, 0.7427024245262146, 0.752740740776062, 0.7652885913848877, 0.7765156626701355, 0.7732135653495789, 0.7700436115264893, 0.7901201844215393, 0.7852331399917603, 0.8101968169212341, 0.804649293422699, 0.806630551815033, 0.8101968169212341, 0.8157442808151245, 0.8164047002792358, 0.826310932636261, 0.8352925777435303, 0.8190463781356812, 0.8310658931732178, 0.837141752243042, 0.8403117060661316, 0.8391229510307312], "val_loss": [1.3214130401611328, 0.7184646299907139, 0.6879511049815586, 0.6614893504551479, 0.6691642829350063, 0.6050637108939034, 0.5330113002232143, 0.5279633317674909, 0.5476052761077881, 0.5145584855760846, 0.4921540192195347, 0.4641006163188389, 0.579850469316755, 0.45372726236070904, 0.46281937190464567, 0.44335695675441195, 0.4593385287693569, 0.42428685086114065, 0.4410110371453421, 0.41742862122399466, 0.4447399377822876, 0.4213464856147766, 0.41702901465552195, 0.38892388343811035, 0.4190790482929775, 0.4255386335509164, 0.3919345736503601, 0.4042471647262573, 0.3950951099395752], "val_accuracy": [0.543666660785675, 0.703000009059906, 0.6826666593551636, 0.6970000267028809, 0.6769999861717224, 0.7200000286102295, 0.7583333253860474, 0.7593333125114441, 0.7519999742507935, 0.7763333320617676, 0.7766666412353516, 0.7986666560173035, 0.7289999723434448, 0.7986666560173035, 0.7889999747276306, 0.8080000281333923, 0.796999990940094, 0.8199999928474426, 0.8083333373069763, 0.824999988079071, 0.8069999814033508, 0.8183333277702332, 0.8159999847412109, 0.8413333296775818, 0.8256666660308838, 0.8199999928474426, 0.8320000171661377, 0.8383333086967468, 0.8323333263397217]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [2, 1, 2, 6, 3, 2, 4, 9, 9, 9], [2, 3, 3, 0, 0, 3, 4], [60, 43, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [45]], "fitness": -0.8220000267028809, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 3, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, grad))), grad), tf.math.add(beta, tf.math.divide_no_nan(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.pow(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [1.9773065362702806, 1.3535886028297606, 0.9654869775273907, 0.9297933843881856, 0.7755656261895043, 0.722892978731132, 0.7348553078947067, 0.6756852086918339, 0.6713366153737447, 0.6306064620293237, 0.62609687637675, 0.5866410685347654, 0.6001594251078575, 0.5795432164558504, 0.5495773969490483, 0.5454704442894643, 0.5041432946097691, 0.5353549250191575, 0.5025271142966649, 0.5063915416005895, 0.4685177365156795, 0.49211550139165305, 0.46208883098654696, 0.4645961676614159, 0.4350842280142878, 0.4473832684060161, 0.4321015112711186, 0.4298118649181232, 0.4299569018150695, 0.41564996848174407, 0.4035847387955, 0.4239012741330844], "accuracy": [0.33443403244018555, 0.5288601517677307, 0.6373002529144287, 0.6446968913078308, 0.7078325152397156, 0.7213049530982971, 0.7143045663833618, 0.7449478507041931, 0.7453441023826599, 0.7619865536689758, 0.7559106945991516, 0.780610203742981, 0.7681944370269775, 0.7791573405265808, 0.7910447716712952, 0.7890635132789612, 0.8101968169212341, 0.7975168228149414, 0.8125742673873901, 0.8088759779930115, 0.8259146809577942, 0.8128384351730347, 0.8255184292793274, 0.828292191028595, 0.8367455005645752, 0.8335754871368408, 0.8378021121025085, 0.8413683772087097, 0.8396512866020203, 0.8421608805656433, 0.848368763923645, 0.8400475382804871], "val_loss": [1.3201970372881209, 0.7098995276859829, 0.6526788984026227, 0.6326968329293388, 0.6042933123452323, 0.5646481513977051, 0.5353026730673653, 0.5525756052562169, 0.5693710701806205, 0.5360628707068307, 0.5326677901404244, 0.48482045105525423, 0.5020751271929059, 0.4542276348386492, 0.4548152685165405, 0.43958844457353863, 0.4657882111413138, 0.4358385460717337, 0.4165938411440168, 0.4110438483101981, 0.42585961307798115, 0.43997606209346224, 0.4792210374559675, 0.3877453548567636, 0.41179254225322176, 0.41820917810712543, 0.3810105153492519, 0.4144818527357919, 0.3843605007444109, 0.40613853931427, 0.3994524734360831, 0.4219040104321071], "val_accuracy": [0.5433333516120911, 0.718999981880188, 0.7076666951179504, 0.7099999785423279, 0.7266666889190674, 0.7329999804496765, 0.7580000162124634, 0.75, 0.7506666779518127, 0.7450000047683716, 0.750333309173584, 0.7889999747276306, 0.7760000228881836, 0.7953333258628845, 0.7950000166893005, 0.8103333115577698, 0.7886666655540466, 0.8029999732971191, 0.8233333230018616, 0.8253333568572998, 0.8159999847412109, 0.8006666898727417, 0.7723333239555359, 0.8343333601951599, 0.8320000171661377, 0.8243333101272583, 0.8393333554267883, 0.8330000042915344, 0.8360000252723694, 0.8303333520889282, 0.824999988079071, 0.815666675567627]}}, {"genotype": [[0], [1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [2, 1, 2, 2, 3, 0, 1, 9, 9, 9], [3, 0, 3, 4, 0], [61, 50, 20, 7, 45, 13], [0], [1, 1, 1], [9], [2, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [45]], "fitness": -0.5468571186065674, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.185035896653969, 2.1414492904801397, 1.394429951831413, 1.270652025634933, 1.4897589388776684, 1.3965845567801247, 1.86494881194171, 2.691324422136195], "accuracy": [0.33522653579711914, 0.2359001487493515, 0.524501383304596, 0.5918636918067932, 0.5223880410194397, 0.5362567901611328, 0.4873860776424408, 0.3183199167251587], "val_loss": [1.9240687234061105, 1.2976446492331368, 0.8157786130905151, 0.9197382245744977, 1.0959243774414062, 1.4162859916687012, 1.083841255732945, 2.018225737980434], "val_accuracy": [0.17733334004878998, 0.5886666774749756, 0.6616666913032532, 0.6079999804496765, 0.5149999856948853, 0.36666667461395264, 0.5659999847412109, 0.3213333189487457]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 1, 2, 2, 6, 4, 4, 9, 9, 9], [2, 0, 3, 4, 0, 3, 4, 5], [60, 3, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [7]], "fitness": -0.3160000145435333, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 7, 8, 2, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))), grad)), tf.math.add(beta, tf.math.add(grad, tf.math.divide_no_nan(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.302318015858765, 2.303579082295029, 2.302616520926874, 2.301451080935963, 2.302889061830677, 2.3007168761018937, 2.299444800779851, 2.300096245930573, 2.29963126955346, 2.2995150057457976, 2.2988064718945562, 2.2981850120920813, 2.2978302169044524, 2.2968177593237753, 2.2975008259706367, 2.2960226124209373, 2.2968844565670046, 2.2966301265472686, 2.296168023695043, 2.2937486611337174, 2.295001771393044, 2.2938411341304272, 2.293382486725811, 2.2941078532247525, 2.2929257186743026, 2.2954241674589744, 2.29226836070503, 2.2916825632645295, 2.292341509231912, 2.293125960553217, 2.2914895240137243, 2.2913612576208693, 2.2916738518697395, 2.290546890577982, 2.2893480364326253, 2.2892128288816735, 2.2893384562948236, 2.288115049161144, 2.2884307086522853, 2.2884648850470835, 2.288213908507005, 2.287242712109805, 2.2855771332998884, 2.285957369900745, 2.2842633657451668, 2.2851647475392136, 2.287086435139628, 2.284570493466346, 2.2848834942014165, 2.2827532269683544, 2.2840448477642648, 2.2840211391763883, 2.281998470522047, 2.2828632888698213, 2.2815541422771757, 2.28034800624079, 2.280485258976608, 2.2816604740977713, 2.2807015736876792, 2.280419354016172, 2.277780624507299, 2.278816589227741, 2.278372986473191, 2.277354408422119, 2.2788010862572414, 2.278345990694273, 2.2769944330232335, 2.276446550749926, 2.276031475655391, 2.2768306232730016, 2.2762400965727774, 2.27607362976699, 2.2747260450041447, 2.275690154565749, 2.2743590068603, 2.273797668061, 2.27216530416179, 2.273258119762503, 2.273297193484646, 2.272940426738176, 2.2707794560984285, 2.270227983658891, 2.2710436586186775, 2.271327432277983, 2.271153466419033, 2.2708454096495214, 2.2688465269565143, 2.268258534339378, 2.2695340707459235, 2.268420944187415, 2.267545526211272, 2.266770277859717, 2.2661671564169943, 2.2668315295797723, 2.2643112652904214, 2.2648853178997994, 2.2663946112684523, 2.264300450515344, 2.264792221443701, 2.26403816705839], "accuracy": [0.09351472556591034, 0.0874389111995697, 0.08915598690509796, 0.09153348207473755, 0.09153348207473755, 0.09047681838274002, 0.0944393053650856, 0.09034473448991776, 0.09470347315073013, 0.10196803510189056, 0.09853387624025345, 0.09853387624025345, 0.09959053993225098, 0.10830801725387573, 0.09774138033390045, 0.10289261490106583, 0.10302469879388809, 0.10381719470024109, 0.10487385839223862, 0.10421344637870789, 0.10976093262434006, 0.10698718577623367, 0.11530841141939163, 0.11187426000833511, 0.11398758739233017, 0.11094967275857925, 0.11279883980751038, 0.12032756209373474, 0.12534672021865845, 0.11755382269620895, 0.12217672914266586, 0.12019548565149307, 0.12349755316972733, 0.11781799048185349, 0.12032756209373474, 0.11900673806667328, 0.12455421686172485, 0.12996962666511536, 0.12851670384407043, 0.12561088800430298, 0.1286487877368927, 0.12957337498664856, 0.13868708908557892, 0.12970545887947083, 0.13142253458499908, 0.1356491893529892, 0.12640337646007538, 0.13617752492427826, 0.1320829540491104, 0.1414608359336853, 0.13829085230827332, 0.13697001338005066, 0.14317791163921356, 0.13697001338005066, 0.15057456493377686, 0.14912164211273193, 0.1488574892282486, 0.14132875204086304, 0.14978206157684326, 0.14793290197849274, 0.15519747138023376, 0.1476687341928482, 0.14978206157684326, 0.15902787446975708, 0.15493330359458923, 0.1558578759431839, 0.1592920422554016, 0.15995244681835175, 0.15678246319293976, 0.15863162279129028, 0.1620657742023468, 0.16219785809516907, 0.1674811840057373, 0.1624620258808136, 0.16655659675598145, 0.1644432693719864, 0.17461365461349487, 0.16893409192562103, 0.16602826118469238, 0.17223615944385529, 0.17078325152397156, 0.17236824333667755, 0.17580240964889526, 0.17434948682785034, 0.1740853190422058, 0.1764628142118454, 0.18359529972076416, 0.18293488025665283, 0.1810857206583023, 0.1795007288455963, 0.18240654468536377, 0.1842557191848755, 0.1814819723367691, 0.18399155139923096, 0.19099193811416626, 0.19244486093521118, 0.18557654321193695, 0.18584071099758148, 0.17791573703289032, 0.1888786107301712], "val_loss": [1.9708258083888464, 1.970466068812779, 1.9701080322265625, 1.969745704105922, 1.969381672995431, 1.9690186636788505, 1.968660490853446, 1.9682987076895577, 1.9679417610168457, 1.9675820895603724, 1.9672270502362932, 1.9668686049325126, 1.9665075029645647, 1.966149125780378, 1.9657929965427943, 1.9654387065342493, 1.965080738067627, 1.9647251537867956, 1.964372021811349, 1.9640145983014787, 1.9636564935956682, 1.9633023398263114, 1.9629466874258858, 1.9625945091247559, 1.962240150996617, 1.9618884495326452, 1.9615347726004464, 1.961176804133824, 1.9608231272016252, 1.9604730606079102, 1.9601185662405831, 1.9597663879394531, 1.959418637411935, 1.9590680939810616, 1.9587171418326241, 1.9583617619105749, 1.9580094473702567, 1.9576565197535925, 1.9573018891470773, 1.956944533756801, 1.956592287336077, 1.9562411308288574, 1.9558860915047782, 1.9555316652570451, 1.9551783289228166, 1.9548251969473702, 1.9544694083077567, 1.95411593573434, 1.9537608964102608, 1.9534036091395788, 1.9530484335763114, 1.9526928492954798, 1.9523356982639857, 1.951981476375035, 1.951625210898263, 1.9512671061924525, 1.9509097508021764, 1.950552259172712, 1.9501937457493372, 1.9498326437813895, 1.9494749477931432, 1.9491148676191057, 1.9487530844552177, 1.948392050606864, 1.9480363300868444, 1.947681086403983, 1.9473244122096471, 1.9469650813511439, 1.9466048649379186, 1.946249008178711, 1.9458891323634557, 1.9455304827008928, 1.9451687676565987, 1.9448116847446986, 1.9444452013288225, 1.9440830094473702, 1.9437202726091658, 1.9433581488473075, 1.9429950032915388, 1.9426297460283553, 1.9422667367117745, 1.9418995039803642, 1.9415369715009416, 1.9411708286830358, 1.9408035278320312, 1.940434115273612, 1.9400629997253418, 1.939694881439209, 1.9393303734915597, 1.9389604840959822, 1.9385903903416224, 1.938215664454869, 1.9378465924944197, 1.937472207205636, 1.9370925767081124, 1.9367132868085588, 1.9363300459725517, 1.9359516416277205, 1.9355717386518205, 1.9351912225995744], "val_accuracy": [0.03866666555404663, 0.0403333343565464, 0.0416666679084301, 0.043666668236255646, 0.04399999976158142, 0.046666666865348816, 0.049666665494441986, 0.052666667848825455, 0.05433333292603493, 0.055666666477918625, 0.05766666680574417, 0.05900000035762787, 0.06300000101327896, 0.06533333659172058, 0.06866666674613953, 0.07233333587646484, 0.07466666400432587, 0.07800000160932541, 0.08366666734218597, 0.08666666597127914, 0.08833333104848862, 0.09066666662693024, 0.09333333373069763, 0.09733333438634872, 0.10133333504199982, 0.10466666519641876, 0.10633333027362823, 0.10966666787862778, 0.1120000034570694, 0.11633333563804626, 0.12033333629369736, 0.12333333492279053, 0.12533333897590637, 0.13066667318344116, 0.13300000131130219, 0.1379999965429306, 0.140666663646698, 0.14633333683013916, 0.14866666495800018, 0.15066666901111603, 0.15466666221618652, 0.16033333539962769, 0.16466666758060455, 0.16833333671092987, 0.17299999296665192, 0.17533333599567413, 0.17866666615009308, 0.1823333352804184, 0.1860000044107437, 0.1889999955892563, 0.19033333659172058, 0.195333331823349, 0.19866666197776794, 0.20200000703334808, 0.2043333351612091, 0.20600000023841858, 0.20866666734218597, 0.21166667342185974, 0.21266666054725647, 0.21566666662693024, 0.21799999475479126, 0.22166666388511658, 0.22499999403953552, 0.2303333282470703, 0.23133333027362823, 0.23233333230018616, 0.2356666624546051, 0.2383333295583725, 0.23899999260902405, 0.24166665971279144, 0.24633333086967468, 0.24899999797344208, 0.2523333430290222, 0.25566667318344116, 0.25999999046325684, 0.2630000114440918, 0.265666663646698, 0.26899999380111694, 0.27266666293144226, 0.2746666669845581, 0.27666667103767395, 0.2773333191871643, 0.27933332324028015, 0.28166666626930237, 0.2849999964237213, 0.2876666784286499, 0.2906666696071625, 0.2933333218097687, 0.2966666519641876, 0.2993333339691162, 0.30033332109451294, 0.3023333251476288, 0.30399999022483826, 0.30433332920074463, 0.3059999942779541, 0.3070000112056732, 0.3086666762828827, 0.3109999895095825, 0.312333345413208, 0.3136666715145111]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1], [2, 1, 2, 0, 2, 0, 4, 9, 9, 9], [2, 0, 2, 4, 0, 3], [61, 50, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [99]], "fitness": -0.23314285278320312, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.3082784347687855, 2.309116402164883, 2.304200410150093, 2.302568989627633, 2.3767419566473293, 2.7719013951694205, 2.303748080412694, 2.3032735247480365, 2.303371930339664], "accuracy": [0.19297318160533905, 0.09774138033390045, 0.09747721254825592, 0.10553427785634995, 0.2016906589269638, 0.108440101146698, 0.09998679161071777, 0.09945846349000931, 0.09536388516426086], "val_loss": [1.991502353123256, 1.974938256399972, 1.9735760688781738, 1.969062192099435, 1.9496153422764368, 1.974311351776123, 1.9737260682242257, 1.9735684394836426, 1.9734787940979004], "val_accuracy": [0.10133333504199982, 0.10233332961797714, 0.109333336353302, 0.24633333086967468, 0.14233332872390747, 0.10066666454076767, 0.10066666454076767, 0.0989999994635582, 0.09833333641290665]}}, {"genotype": [[0], [1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1], [2, 1, 2, 2, 1, 0, 4, 9, 9, 9], [2, 0, 3, 3, 0, 3], [7, 3, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [1, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 14, 14, 9, 5, 4, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.negative(tf.math.pow(tf.math.add(beta, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303215561856557, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [2, 1, 2, 2, 3, 2, 4, 9, 9, 9], [2, 0, 3, 4, 0, 3, 4], [60, 3, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [2, 9, 9, 8, 4, 7, 4, 5, 6], [0, 0, 2, 2], [45, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 3, 1, 1, 0, 1, 0, 3, 1, 2, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), grad)), tf.math.add(beta, tf.math.add(grad, tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.pow(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), grad), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303215561856557, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 2, 2, 3, 2, 4, 2, 9, 9], [2, 0, 3, 4, 0, 3, 4], [60, 3, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 0, 2, 2], [45, 28]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 3, 1, 2, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303215561856557, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [4, 9, 6, 7, 3, 5, 5, 0, 6, 6, 1, 3, 6, 8, 4, 8, 4, 1, 4, 2], [1, 3, 3, 0, 2, 3, 0, 2, 3, 3, 3, 3, 3, 5, 5, 3], [39, 48, 95, 7, 45, 13], [1], [0, 1, 1], [9], [1, 1], [79], [0, 0, 1, 0, 1, 0, 0, 1, 1], [2, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [61, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 3, 2, 1, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303215561856557, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0], [2, 4, 2, 0, 3, 3, 4, 9, 9, 9], [3, 3, 2, 1, 1, 0, 1, 2, 1, 5, 1, 2, 2, 4, 4, 0], [61, 3, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [1, 3, 2, 2], [85, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 9, 5, 2, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.pow(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))))))), alpha)), tf.math.add(beta, alpha))), tf.math.add(beta, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, sigma)", "other_info": {"loss": [2.3107305782944407, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0874389111995697, 0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0304696219308034, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [2, 1, 2, 2, 3, 0, 4, 8, 9, 9], [2, 0, 3, 4, 0, 3], [61, 3, 20, 7, 45, 13], [1], [1, 1, 1], [9], [1, 1], [79], [1, 1, 1, 0, 1, 0, 0, 1, 1], [1, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 9, 6, 3, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(beta, tf.math.multiply(grad, tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))))), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303215561856557, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [2, 1, 2, 2, 3, 2, 9, 9, 9, 9], [2, 0, 3, 4, 0, 3, 4], [60, 94, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [2, 2, 2, 2], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 8, 5, 4, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(grad, grad)), tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))))))), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0], [2, 1, 2, 2, 3, 2, 4, 5, 9, 9], [2, 0, 3, 4, 0, 3, 4], [83, 3, 20, 7, 45, 13], [1], [1, 1, 1], [9], [1, 1], [79], [1, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 9, 7, 3, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))))), grad)), tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.square(tf.math.add(beta, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), grad)), tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303215561856557, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1], [2, 1, 1, 1, 3, 0, 4, 9, 8, 9], [2, 0, 3, 3, 0, 3], [39, 14, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 2, 2, 2], [78, 39]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 9, 6, 3, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), grad)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.math.pow(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1022322028875351, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 1, 2, 0, 2, 0, 4, 9, 9, 9], [3, 3, 3, 1, 0, 0, 0, 2], [61, 67, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 2, 2, 2], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), beta)", "other_info": {"loss": [5.730733640717999e+31, 9.372496754942695, 33.69826459500453, 74.66993663194803, 132.151626832796, 206.11024596829378], "accuracy": [0.06947562843561172, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [3.1067565509251187, 18.04388918195452, 47.367566789899556, 90.87863595145089, 148.57698713030135, 220.48146275111608], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [6, 6, 4, 2, 0, 0, 3, 4, 9, 0, 4, 2], [2, 0, 3, 3, 3, 3, 4], [61, 3, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [6, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [45, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 9, 6, 2, 1, 1, 0, 1, 0, 3, 2, 1, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(grad)))))), tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), grad))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303215561856557, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0], [2, 9, 8, 0, 0, 4, 7, 1, 4, 4, 5, 3, 7, 5, 2, 0, 2, 7, 6, 2, 1, 6, 7, 8, 6, 9, 6, 9], [3, 0, 1, 1, 2, 0, 3, 2, 1, 5, 2, 2, 2, 4, 4, 0, 5], [60, 3, 20, 7, 45, 13], [0], [1, 1, 1], [9], [2, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [2, 3, 2, 2], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, sigma)", "other_info": {"loss": [2.310730704164083, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0874389111995697, 0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.030475275857108, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0], [5, 9, 8, 8, 6, 4, 7, 2, 4, 4, 5, 3, 7, 5, 2, 0, 2, 7, 6, 2, 1, 6, 7, 8, 6, 9, 6, 9], [2, 0, 3, 4, 0, 3], [46, 3, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 0, 1, 0, 1, 0, 0, 1, 1], [8, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [18]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 2, 2, 0, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303215561856557, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [2, 5, 6, 2, 3, 9, 0, 3, 9, 9, 7, 8, 3, 3, 8, 6, 3, 7, 7, 5, 1, 2, 9, 8], [3, 0, 3, 4, 0, 3, 4], [60, 3, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [4, 9, 9, 8, 4, 7, 4, 5, 6], [0, 0, 2, 2], [45, 96]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 8, 5, 3, 1, 1, 0, 1, 0, 3, 1, 2, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), grad)), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))))), tf.math.negative(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303215561856557, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}]