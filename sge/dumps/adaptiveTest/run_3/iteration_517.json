[{"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [5, 8, 2, 4, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [3, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [76, 48, 22, 41, 42, 68], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 4, 5, 5, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 1, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.8111428618431091, "mapping_values": [1, 7, 7, 5, 2, 1, 7, 7, 4, 3, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.square(alpha)), alpha)), tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.013086567276489, 1.3717752149816453, 0.9768185572790479, 0.9274846889701549, 0.8330653687793156, 0.7548490340179692, 0.7033493422466798, 0.6717359553616612, 0.6778352703983285, 0.6337401222370209, 0.6079009486668145, 0.6395069042280004, 0.5665103608528069, 0.5614576301538807, 0.5601357882757544, 0.5434455187045792, 0.5225404853582098, 0.5425267287091714, 0.5024575897652507, 0.5004091685820627, 0.5000316290106867, 0.4689217706311412, 0.47637759611008584, 0.4789221767562964, 0.46096022946880855, 0.451240745151772, 0.45181736812977635, 0.43119250495184086, 0.42532468939564405], "accuracy": [0.32122573256492615, 0.5060097575187683, 0.6465460062026978, 0.6518293619155884, 0.6679434776306152, 0.7098137736320496, 0.7339849472045898, 0.7404569983482361, 0.7400607466697693, 0.7569673657417297, 0.7696473598480225, 0.7567031979560852, 0.7794214487075806, 0.7841764688491821, 0.7866860628128052, 0.7905164361000061, 0.7972526550292969, 0.7895918488502502, 0.8087438941001892, 0.8136309385299683, 0.8123101592063904, 0.8259146809577942, 0.8168009519577026, 0.821820080280304, 0.8253863453865051, 0.8271034359931946, 0.8358209133148193, 0.8413683772087097, 0.8401796221733093], "val_loss": [1.2712271554129464, 0.8439672333853585, 0.8069089821406773, 0.7102285282952445, 0.5924052851540702, 0.6183372054781232, 0.5527406420026507, 0.5589085987636021, 0.5062041112354824, 0.5279273305620465, 0.5700933762959072, 0.4972704308373587, 0.4756333827972412, 0.5168449538094657, 0.4706019333430699, 0.46299060753413607, 0.527337942804609, 0.4259839483669826, 0.4422494683946882, 0.4393830554825919, 0.40513964210237774, 0.4442270483289446, 0.40979524169649395, 0.38931495802743094, 0.4051996810095651, 0.40782212359564646, 0.4176234006881714, 0.3999788761138916, 0.3825821280479431], "val_accuracy": [0.4620000123977661, 0.6539999842643738, 0.6356666684150696, 0.6513333320617676, 0.7423333525657654, 0.7279999852180481, 0.7296666502952576, 0.7433333396911621, 0.7730000019073486, 0.7433333396911621, 0.7279999852180481, 0.7786666750907898, 0.7770000100135803, 0.7636666893959045, 0.7946666479110718, 0.7993333339691162, 0.7590000033378601, 0.8173333406448364, 0.8169999718666077, 0.8173333406448364, 0.82833331823349, 0.7946666479110718, 0.831333339214325, 0.8346666693687439, 0.8246666789054871, 0.8303333520889282, 0.8140000104904175, 0.8209999799728394, 0.8330000042915344]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 8, 5, 3, 2, 9, 3, 9, 2, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [2, 1, 1, 0, 1, 2, 1, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [76, 48, 22, 41, 42, 68], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 8, 4, 9, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 2, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [29, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.800000011920929, "mapping_values": [1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.181285511941926, 1.5216480592427362, 1.1503945757857466, 0.961206890871937, 0.9181240485439116, 0.8381823389332733, 0.7778999232943535, 0.7722649609313554, 0.736292814243235, 0.7166553317768353, 0.6824882266118684, 0.6896750902723343, 0.6569316443309272, 0.6705001649083777, 0.6420097702907738, 0.6260925677505703, 0.6205765290613644, 0.6320473275731315, 0.5952656015255794, 0.6144856781598017, 0.6093140581437956, 0.5804676392988175, 0.5793625667598726, 0.5919173250045948, 0.5740509258757619, 0.564864343293764, 0.5654205727759858, 0.5507136695829947, 0.5487356283535275, 0.5377569531940939, 0.5361838558677197, 0.5352326744362631, 0.5463362954485103, 0.5280694189742099, 0.5324793764904364, 0.5094917027461546, 0.5076764054884764, 0.5147433806845005, 0.5011292278113193, 0.5007342364707439, 0.493309285575845, 0.49092241522973284, 0.49902105402275715, 0.48236452324704376, 0.4818522555087111, 0.4766336858248934, 0.4745886046195846, 0.47800301177752663, 0.4759593811119867, 0.45886202159889655, 0.4635199051507318], "accuracy": [0.28582748770713806, 0.48329150676727295, 0.5915995240211487, 0.6544709801673889, 0.658961832523346, 0.685510516166687, 0.7100779414176941, 0.7113987803459167, 0.724739134311676, 0.7302865982055664, 0.7420420050621033, 0.7417778372764587, 0.752740740776062, 0.744419515132904, 0.7559106945991516, 0.7637035846710205, 0.7625148296356201, 0.7578919529914856, 0.77677983045578, 0.7668735980987549, 0.7684586048126221, 0.7774402499198914, 0.7810064554214478, 0.7795535326004028, 0.7807422876358032, 0.7841764688491821, 0.7869502305984497, 0.7861577272415161, 0.7954035401344299, 0.7972526550292969, 0.7987055778503418, 0.798309326171875, 0.7965922355651855, 0.7951393723487854, 0.7936864495277405, 0.8078193068504333, 0.8129705190658569, 0.8024039268493652, 0.8152159452438354, 0.8152159452438354, 0.817461371421814, 0.8144234418869019, 0.816008448600769, 0.8189142942428589, 0.8164047002792358, 0.8190463781356812, 0.821820080280304, 0.8215559124946594, 0.8214238286018372, 0.8300092220306396, 0.8315942287445068], "val_loss": [1.5278869015829903, 1.1124536309923445, 0.7612183434622628, 0.7270804303033012, 0.6531942571912494, 0.646439926964896, 0.6201387643814087, 0.6051723957061768, 0.5769172395978656, 0.5464325972965786, 0.5713788100651332, 0.5349494048527309, 0.5312156166349139, 0.5269898516791207, 0.49612934248788015, 0.5184461218970162, 0.5478028740201678, 0.48493664605276926, 0.4917890174048288, 0.4951980284282139, 0.5156095368521554, 0.48690296922411236, 0.47191587516239714, 0.4611754758017404, 0.4749149594988142, 0.4691075256892613, 0.4601647513253348, 0.466967054775783, 0.453184826033456, 0.45104595593043734, 0.45136877468654085, 0.44657695293426514, 0.44493768896375385, 0.45895133699689594, 0.43139260155814035, 0.43193284954343525, 0.4407485212598528, 0.4255614025252206, 0.43660945551736013, 0.420385548046657, 0.4208696058818272, 0.43573474884033203, 0.42082509824207853, 0.42305489097322735, 0.4117470809391567, 0.401862416948591, 0.42038406644548687, 0.4412833707673209, 0.4061477950641087, 0.4093741178512573, 0.3999950885772705], "val_accuracy": [0.5109999775886536, 0.5516666769981384, 0.67166668176651, 0.6850000023841858, 0.7236666679382324, 0.7193333506584167, 0.7149999737739563, 0.7326666712760925, 0.7490000128746033, 0.7523333430290222, 0.7293333411216736, 0.7680000066757202, 0.7546666860580444, 0.7633333206176758, 0.7756666541099548, 0.7553333044052124, 0.7390000224113464, 0.7816666960716248, 0.7833333611488342, 0.7816666960716248, 0.7526666522026062, 0.7756666541099548, 0.7963333129882812, 0.7946666479110718, 0.7870000004768372, 0.7923333048820496, 0.8003333210945129, 0.7956666946411133, 0.8069999814033508, 0.8033333420753479, 0.8090000152587891, 0.8033333420753479, 0.815666675567627, 0.7996666431427002, 0.8163333535194397, 0.8173333406448364, 0.8080000281333923, 0.8183333277702332, 0.8163333535194397, 0.828000009059906, 0.8226666450500488, 0.8176666498184204, 0.8226666450500488, 0.8253333568572998, 0.8286666870117188, 0.8360000252723694, 0.8183333277702332, 0.8006666898727417, 0.8303333520889282, 0.8216666579246521, 0.8339999914169312]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 3, 3, 3, 1, 5, 5, 9, 1, 2, 5, 7, 3, 2, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8], [2, 0, 1, 0, 1, 2, 1, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [81, 48, 98, 81, 42, 68], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 8, 4, 9, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 0, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [29, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 4, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.7977142930030823, "mapping_values": [1, 13, 13, 7, 6, 2, 6, 6, 4, 2, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), alpha)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.math.square(grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.1812844551817268, 1.5216371551591015, 1.1498400655641154, 0.9602747209997005, 0.9189651628070268, 0.8322040471402709, 0.7815507985439912, 0.7724134850542953, 0.7388523086391782, 0.7160137368231055, 0.6835275499686243, 0.6883639203889605, 0.6550890064951199, 0.6810738192636261, 0.6386796810985667, 0.6285934150100873, 0.618764310622527, 0.6327475626014243, 0.5953671155494233, 0.6100439724039172, 0.6123310883031655, 0.5797654300428196, 0.5816840692644091, 0.5890650442405195, 0.5716230401572707, 0.5627241508205884, 0.5676221711020569, 0.5488800565800599], "accuracy": [0.28582748770713806, 0.4831594228744507, 0.5930524468421936, 0.6534143686294556, 0.6598864197731018, 0.6892088055610657, 0.7079645991325378, 0.7094175219535828, 0.7214370369911194, 0.7321357727050781, 0.7429665923118591, 0.7430986762046814, 0.7539294958114624, 0.7416457533836365, 0.7555144429206848, 0.7600052952766418, 0.7627789974212646, 0.7559106945991516, 0.7774402499198914, 0.7696473598480225, 0.7670056819915771, 0.7795535326004028, 0.7808743715286255, 0.7802139520645142, 0.7828556299209595, 0.7836481332778931, 0.7839123010635376, 0.7873464822769165], "val_loss": [1.5279085295540946, 1.1133600643702917, 0.7589901515415737, 0.7227587188993182, 0.6507210561207363, 0.6528808729989188, 0.6314460209437779, 0.5985019207000732, 0.5727400779724121, 0.5490142617906842, 0.5770771844046456, 0.5334485598972866, 0.5209451913833618, 0.5227032048361642, 0.49758618218558176, 0.5117585488728115, 0.5397995029176984, 0.48468191283089773, 0.4929866109575544, 0.5008003881999424, 0.5186638491494315, 0.5037607806069511, 0.47058543137141634, 0.4603052820478167, 0.4710134949002947, 0.46853043351854595, 0.4639799083982195, 0.4737940345491682], "val_accuracy": [0.5113333463668823, 0.5506666898727417, 0.675000011920929, 0.6850000023841858, 0.7263333201408386, 0.7120000123977661, 0.7059999704360962, 0.7403333187103271, 0.7453333139419556, 0.7516666650772095, 0.7260000109672546, 0.7646666765213013, 0.7639999985694885, 0.7693333625793457, 0.7749999761581421, 0.7636666893959045, 0.7433333396911621, 0.7816666960716248, 0.781333327293396, 0.7763333320617676, 0.7493333220481873, 0.762666642665863, 0.7979999780654907, 0.7950000166893005, 0.7929999828338623, 0.7979999780654907, 0.7950000166893005, 0.7873333096504211]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 3, 3, 3, 1, 5, 5, 9, 1, 2, 5, 7, 3, 2, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8], [2, 1, 1, 0, 1, 2, 1, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [81, 48, 98, 81, 42, 68], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 8, 4, 9, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [29, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 4, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.7885714173316956, "mapping_values": [1, 13, 13, 7, 6, 1, 6, 6, 4, 2, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), alpha)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.math.square(tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, grad)))), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.178944548107551, 1.5348533903524277, 1.1416788360682366, 0.9898040384554104, 0.9195429419230445, 0.8502619791308005, 0.7861812322950004, 0.7643617177289853, 0.7417238855626463, 0.734095939697449, 0.7053782005572063, 0.7001498414855734, 0.6733413865663561, 0.6681806857811697, 0.6496007187082121, 0.6588273439125819, 0.6345529168619849, 0.6335050966745638, 0.6178706302744853, 0.6032516570485515, 0.6045886092434123, 0.5986239074038917, 0.5957764749986116, 0.5742372435790326, 0.5813129104643355, 0.5652586939926586], "accuracy": [0.2769779562950134, 0.48566898703575134, 0.5947695374488831, 0.641791045665741, 0.656980574131012, 0.6877558827400208, 0.7088891863822937, 0.7154933214187622, 0.7235503792762756, 0.7284374833106995, 0.7333245277404785, 0.7363624572753906, 0.7446836829185486, 0.7524765729904175, 0.755118191242218, 0.7471932172775269, 0.7600052952766418, 0.7577598690986633, 0.7716285586357117, 0.7697794437408447, 0.7680623531341553, 0.7717606425285339, 0.7708360552787781, 0.7878747582435608, 0.7775723338127136, 0.787082314491272], "val_loss": [1.5216178553445, 0.979222331728254, 0.7347406489508492, 0.6775255373546055, 0.6384664092745099, 0.6181861332484654, 0.5905362027032035, 0.5927310841424125, 0.5662843670163836, 0.5431762933731079, 0.5297402484076363, 0.5382052489689418, 0.5145822933741978, 0.5271722078323364, 0.5218525443758283, 0.5140939269747052, 0.5269549403871808, 0.49162672247205463, 0.5122428962162563, 0.48846164771488737, 0.47015087945120676, 0.4905503647668021, 0.46577130045209614, 0.45633138929094585, 0.4818810905729021, 0.4655114582606724], "val_accuracy": [0.5216666460037231, 0.5803333520889282, 0.6793333292007446, 0.7086666822433472, 0.7166666388511658, 0.7310000061988831, 0.7350000143051147, 0.7383333444595337, 0.7443333268165588, 0.7556666731834412, 0.7666666507720947, 0.7433333396911621, 0.7716666460037231, 0.7576666474342346, 0.7646666765213013, 0.762333333492279, 0.746666669845581, 0.7749999761581421, 0.7523333430290222, 0.777999997138977, 0.8016666769981384, 0.778333306312561, 0.7956666946411133, 0.796999990940094, 0.7850000262260437, 0.7923333048820496]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 8, 2, 3, 2, 9, 3, 9, 2, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [3, 2, 1, 0, 2, 2, 1, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [76, 48, 22, 41, 42, 68], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 3, 0, 9, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 1, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [80, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.7885714173316956, "mapping_values": [1, 12, 12, 8, 4, 3, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, alpha)))), tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.multiply(tf.math.negative(grad), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.1789413320232516, 1.5346376610438366, 1.1428495081597474, 0.9889587819962029, 0.9184356512268852, 0.8529367422966232, 0.7843379217242175, 0.7534610690410505, 0.7471484237610939, 0.7338839423591907, 0.700769702338933, 0.6983128262391227, 0.6732890065855369, 0.6690708649015193, 0.6530168475554903, 0.6583693437745716, 0.6339627885075293, 0.6322323400441131, 0.6163396730068385, 0.6036211535238146, 0.6077639420884964, 0.6016386261217472, 0.5955662200038679, 0.5746107722522246, 0.5794130931000085, 0.5652051631643189], "accuracy": [0.2769779562950134, 0.4858010709285736, 0.5943732857704163, 0.6407343745231628, 0.6605468392372131, 0.6860388517379761, 0.7069079279899597, 0.7193237543106079, 0.7211728692054749, 0.7259278893470764, 0.7351737022399902, 0.7354378700256348, 0.7454761862754822, 0.7530049085617065, 0.7564390301704407, 0.7516840696334839, 0.7601373791694641, 0.7594769597053528, 0.7714964747428894, 0.7689869403839111, 0.7664773464202881, 0.7714964747428894, 0.7714964747428894, 0.7876105904579163, 0.7788931727409363, 0.7858935594558716], "val_loss": [1.5216316495622908, 0.9785584041050502, 0.7339301449911935, 0.678057040487017, 0.6396642582757133, 0.6165206772940499, 0.5946851628167289, 0.5968928166798183, 0.5743504251752581, 0.5427130290440151, 0.5250661884035382, 0.5445451055254255, 0.5138598680496216, 0.5420597280774798, 0.5256756544113159, 0.5164336136409214, 0.5248320954186576, 0.48838761874607634, 0.5114772830690656, 0.4845508337020874, 0.47325401646750315, 0.49009980474199566, 0.4668853623526437, 0.45665739263807026, 0.4849584102630615, 0.4698337997709002], "val_accuracy": [0.5216666460037231, 0.5820000171661377, 0.6790000200271606, 0.706333339214325, 0.7179999947547913, 0.7300000190734863, 0.7296666502952576, 0.7366666793823242, 0.7360000014305115, 0.7563333511352539, 0.765333354473114, 0.7413333058357239, 0.7713333368301392, 0.7429999709129333, 0.7599999904632568, 0.7586666941642761, 0.7473333477973938, 0.7770000100135803, 0.7566666603088379, 0.7816666960716248, 0.7979999780654907, 0.7803333401679993, 0.7946666479110718, 0.7960000038146973, 0.7833333611488342, 0.7893333435058594]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 0, 0, 8, 1, 5, 8, 9, 1, 2, 5, 7, 3, 2, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8], [2, 1, 1, 1, 0, 1, 1, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [31, 48, 98, 81, 42, 68], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 8, 4, 2, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [29, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 4, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.7837142944335938, "mapping_values": [1, 5, 5, 3, 2, 0, 11, 11, 6, 5, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)))), tf.math.add(beta, grad)))), tf.math.negative(beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.1789396413958793, 1.5348620939216973, 1.1424670968750417, 0.9885247144260112, 0.918030558394844, 0.8496863646844847, 0.7821666792068562, 0.7618035065688478, 0.7440488115907613, 0.7349266502300132, 0.7007819204408542, 0.6909209828429675, 0.6739918614154983, 0.6763106789870458, 0.6536129345794348, 0.6543659039413483, 0.6366242633330713, 0.6329638716756014, 0.6188790042087654, 0.60290929710136, 0.6055873891051105, 0.5947161526916805, 0.5970385715457914, 0.5732581064197538, 0.5849201509414363, 0.5639737831713296, 0.559910502250814, 0.5757692077329618], "accuracy": [0.27684587240219116, 0.4854048490524292, 0.5937128663063049, 0.6429798007011414, 0.6580372452735901, 0.6911900639533997, 0.711530864238739, 0.7169462442398071, 0.7220974564552307, 0.7265883088111877, 0.735569953918457, 0.7408532500267029, 0.7456082701683044, 0.7497028112411499, 0.7537974119186401, 0.7516840696334839, 0.7582882046699524, 0.7580240368843079, 0.7707040309906006, 0.7724210619926453, 0.7692511081695557, 0.7729493975639343, 0.7714964747428894, 0.7890635132789612, 0.7770439982414246, 0.7891955971717834, 0.7903843522071838, 0.7815347909927368], "val_loss": [1.521592685154506, 0.9795188222612653, 0.7395110130310059, 0.6780328239713397, 0.637637904712132, 0.6165596076420375, 0.5914395366396222, 0.5880173444747925, 0.575525198663984, 0.5416570561272758, 0.5327106884547642, 0.5227653980255127, 0.5184583153043475, 0.5446286542075021, 0.5265945536749703, 0.5157612562179565, 0.5233445848737445, 0.49118811743600027, 0.5105798244476318, 0.48253469807761057, 0.4746229648590088, 0.4850960969924927, 0.4645564556121826, 0.4575023991721017, 0.48180833884647917, 0.46971191678728375, 0.47506024156297955, 0.4693725449698312], "val_accuracy": [0.5216666460037231, 0.5803333520889282, 0.6773333549499512, 0.7036666870117188, 0.7166666388511658, 0.7276666760444641, 0.734000027179718, 0.7403333187103271, 0.7353333234786987, 0.7556666731834412, 0.7586666941642761, 0.7536666393280029, 0.7730000019073486, 0.7369999885559082, 0.7586666941642761, 0.7580000162124634, 0.7450000047683716, 0.7786666750907898, 0.7553333044052124, 0.7836666703224182, 0.7943333387374878, 0.7753333449363708, 0.7956666946411133, 0.7953333258628845, 0.7836666703224182, 0.7929999828338623, 0.7903333306312561, 0.781000018119812]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 8, 2, 3, 4, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [3, 0, 1, 0, 2, 2, 1, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [76, 48, 22, 41, 42, 68], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 4, 5, 6, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [3, 74, 76, 58]], "fitness": -0.7668571472167969, "mapping_values": [1, 26, 26, 17, 9, 5, 8, 8, 4, 4, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, tf.math.multiply(grad, tf.math.pow(tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))))), alpha))), tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.negative(alpha)))), tf.math.add(alpha, grad)), tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.add(beta, tf.math.square(alpha)), tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.2941124096932017, 2.277219501138127, 2.257168371097019, 2.233314749209195, 2.2080136877497534, 2.1734223315398045, 2.1330801341291497, 2.0828211370822602, 2.017012989390339, 1.9434135940962654, 1.862485495320306, 1.7585033706906386, 1.6656397016781228, 1.5765253846136145, 1.4949041811891788, 1.4276487757233487, 1.3653393003525216, 1.3187950973922644, 1.2758036141445324, 1.2216350657513837, 1.1880516379248938, 1.1568794279145118, 1.1200473343518274, 1.0997646877306202, 1.077762178457676, 1.056359584596667, 1.0376286278185418, 1.0230495202432708, 1.0062778044244507, 0.9929512378924149, 0.9756872902740309, 0.9569608687787654, 0.9639740033613268, 0.9362279557753485, 0.927980284672907, 0.9231429105390097, 0.9094614911513983, 0.8997781528473656, 0.8887093563231621, 0.8861375960612797, 0.8729918863889548, 0.8734827579256565, 0.8744897478134751, 0.8596425642741748, 0.8511999875106327, 0.8368165351223117, 0.8394830282086221, 0.8362586399378668, 0.830576253400235, 0.8165186202332423, 0.8126564225925667, 0.8093768676604892, 0.8021771574946222, 0.7965614169564434, 0.8046451236247197, 0.7933732883773695, 0.7953025431539152, 0.7886660234834603, 0.7947459281663916, 0.773411212863703, 0.7745403029253896, 0.7621158955906833, 0.765226579345433, 0.7637659843729125, 0.7567608893476598, 0.7641653583553946, 0.7508600371593435, 0.7477183918108352, 0.7497084614402661, 0.7443246743887202, 0.7460999539216212, 0.7433692849606666, 0.7357693300302617, 0.7353009129275956, 0.7300183942934871, 0.7378865605757269, 0.7212790090488862, 0.7184017689047614, 0.7157659416799579, 0.7273341981868041, 0.7171416164404996, 0.7123316916901721, 0.712792319833264, 0.7029502998804765, 0.7089325551973468, 0.699415047462228, 0.7112196773869282, 0.7080383481618483, 0.7026633940289726, 0.6955851823063952, 0.6919975226124784], "accuracy": [0.10896842926740646, 0.1508387327194214, 0.20961563289165497, 0.2587504982948303, 0.29797911643981934, 0.337339848279953, 0.3567560315132141, 0.3829084634780884, 0.40668338537216187, 0.4267600178718567, 0.43811914324760437, 0.4815744161605835, 0.4859331548213959, 0.5056135058403015, 0.5209351181983948, 0.5332188606262207, 0.54655921459198, 0.5532954931259155, 0.5601637959480286, 0.5783912539482117, 0.59225994348526, 0.5971469879150391, 0.6089023947715759, 0.6186765432357788, 0.6284506916999817, 0.6332056522369385, 0.6429798007011414, 0.6514331102371216, 0.6406022906303406, 0.650640606880188, 0.6503764390945435, 0.6563201546669006, 0.6544709801673889, 0.6668868064880371, 0.6676793098449707, 0.6729626059532166, 0.6782459616661072, 0.6790384650230408, 0.6851142644882202, 0.6861709356307983, 0.6889446377754211, 0.6921146512031555, 0.6885483860969543, 0.6914542317390442, 0.7000396251678467, 0.6963412761688232, 0.7003037929534912, 0.7003037929534912, 0.7033417224884033, 0.7028133869171143, 0.7123233675956726, 0.7104741930961609, 0.7148329019546509, 0.71100252866745, 0.7096816897392273, 0.7099458575248718, 0.7112666964530945, 0.7117950320243835, 0.7049266695976257, 0.7214370369911194, 0.7181349992752075, 0.7206445932388306, 0.7230220437049866, 0.7236824631690979, 0.7244749665260315, 0.7257958054542542, 0.7288337349891663, 0.7252674698829651, 0.7265883088111877, 0.7272487282752991, 0.7243428826332092, 0.7272487282752991, 0.72672039270401, 0.7288337349891663, 0.7326641082763672, 0.7304186820983887, 0.737947404384613, 0.7362303733825684, 0.7347774505615234, 0.739400327205658, 0.7407211661338806, 0.7357020378112793, 0.7383436560630798, 0.7434949278831482, 0.7436270117759705, 0.7430986762046814, 0.7420420050621033, 0.7321357727050781, 0.7453441023826599, 0.7415136694908142, 0.7430986762046814], "val_loss": [1.9536422320774622, 1.9359051159449987, 1.916374751499721, 1.89309447152274, 1.8650424821036202, 1.8292805126735143, 1.7844935825892858, 1.729469163077218, 1.6621801853179932, 1.5828727313450404, 1.4953114645821708, 1.4000656264168876, 1.3041129452841622, 1.2149696350097656, 1.1345135143824987, 1.0668702466147286, 1.008467163358416, 0.9604665211268834, 0.9202658108302525, 0.8839376313345773, 0.8537985937935966, 0.8278840269361224, 0.8033884934016636, 0.7841768605368478, 0.7663777555738177, 0.7513559716088432, 0.7373092344829014, 0.7254837921687535, 0.7131849186761039, 0.702377472605024, 0.692510826247079, 0.6858533620834351, 0.6775827918733869, 0.6701106343950544, 0.6636708804539272, 0.6568688154220581, 0.6511432443346296, 0.6446622099195208, 0.6394729954855782, 0.6338348388671875, 0.6293338707515171, 0.6249875511441912, 0.6213315725326538, 0.6169628756386893, 0.6136929648263114, 0.6091268914086478, 0.605900662285941, 0.6020466770444598, 0.5990480695452008, 0.5945492471967425, 0.5907947335924421, 0.5890080758503505, 0.5850425958633423, 0.58349609375, 0.5815230778285435, 0.5792565516063145, 0.5765297753470284, 0.5744691746575492, 0.5721850054604667, 0.5690730128969465, 0.5667623792375837, 0.5649482352393014, 0.5632352999278477, 0.5591554641723633, 0.5570375408445086, 0.5565483910696847, 0.5547614097595215, 0.5523158822740827, 0.5515108449118478, 0.5488594940730503, 0.5483003854751587, 0.544561675616673, 0.5444297620228359, 0.5413827385221209, 0.5402449369430542, 0.5401744842529297, 0.5386857986450195, 0.5361741610935756, 0.5355226142065865, 0.5345056397574288, 0.5334762334823608, 0.5309545823505947, 0.5291035005024501, 0.5278583935328892, 0.5275739431381226, 0.5251882076263428, 0.524066720690046, 0.5217207670211792, 0.5221860749380929, 0.5199717964444842, 0.5192903280258179], "val_accuracy": [0.18666666746139526, 0.3083333373069763, 0.3659999966621399, 0.414000004529953, 0.4410000145435333, 0.4606666564941406, 0.4846666753292084, 0.5139999985694885, 0.5303333401679993, 0.5440000295639038, 0.5559999942779541, 0.5699999928474426, 0.5793333053588867, 0.5870000123977661, 0.6213333606719971, 0.6240000128746033, 0.6480000019073486, 0.6543333530426025, 0.6729999780654907, 0.6800000071525574, 0.6836666464805603, 0.6859999895095825, 0.6923333406448364, 0.6946666836738586, 0.6983333230018616, 0.7023333311080933, 0.7039999961853027, 0.706333339214325, 0.7093333601951599, 0.7149999737739563, 0.7179999947547913, 0.7196666598320007, 0.7239999771118164, 0.7263333201408386, 0.7266666889190674, 0.7266666889190674, 0.7303333282470703, 0.7300000190734863, 0.7306666374206543, 0.7336666584014893, 0.7363333106040955, 0.737333357334137, 0.7390000224113464, 0.737666666507721, 0.7369999885559082, 0.7406666874885559, 0.7406666874885559, 0.7426666617393494, 0.7433333396911621, 0.7436666488647461, 0.7459999918937683, 0.7453333139419556, 0.7456666827201843, 0.746666669845581, 0.746999979019165, 0.7509999871253967, 0.7483333349227905, 0.7526666522026062, 0.7516666650772095, 0.7523333430290222, 0.7546666860580444, 0.7526666522026062, 0.7566666603088379, 0.7543333172798157, 0.7553333044052124, 0.7576666474342346, 0.7580000162124634, 0.7549999952316284, 0.7573333382606506, 0.7596666812896729, 0.7593333125114441, 0.7609999775886536, 0.7613333463668823, 0.7593333125114441, 0.7609999775886536, 0.7643333077430725, 0.7636666893959045, 0.762666642665863, 0.762333333492279, 0.762666642665863, 0.765333354473114, 0.7663333415985107, 0.765333354473114, 0.7639999985694885, 0.7666666507720947, 0.7699999809265137, 0.765666663646698, 0.7680000066757202, 0.7649999856948853, 0.768666684627533, 0.7676666378974915]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 3, 3, 3, 1, 5, 5, 9, 1, 2, 5, 7, 3, 2, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8], [2, 0, 1, 0, 1, 2, 1, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [81, 48, 98, 81, 42, 68], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [9, 4, 5, 5, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [29, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 2, 4, 8, 6, 0, 4, 5, 6, 0, 9], [1, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.5740000009536743, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 5, 2, 3, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(alpha, sigma), beta)", "other_info": {"loss": [2.1920996210310895, 1.9458424290330922, 1.8243836841846517, 1.869562332105202, 3.8456507593239806, NaN, NaN], "accuracy": [0.24039097130298615, 0.3699643313884735, 0.41223087906837463, 0.33641526103019714, 0.3237352967262268, 0.10910051316022873, 0.09998679161071777], "val_loss": [1.3224140235355921, 1.2634901319231306, 1.5005913121359689, 1.2425823892865862, 6.548459597996303, NaN, NaN], "val_accuracy": [0.47200000286102295, 0.5606666803359985, 0.3893333375453949, 0.47600001096725464, 0.2173333317041397, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 8, 5, 3, 2, 9, 3, 9, 2, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [3, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [76, 48, 22, 41, 42, 68], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 3, 0, 9, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 2, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 7, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [9, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302431246293078, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09377889335155487, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [3, 0, 2, 4, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [3, 1, 1, 0, 2, 2, 1, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [76, 48, 22, 41, 42, 68], [1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 4, 2, 6, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 1, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 2, 2, 1, 0, 0, 2, 2], [3, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 6, 2, 2, 12, 12, 7, 5, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.pow(grad, tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)))), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.multiply(alpha, tf.math.add(beta, alpha)))), tf.math.add(beta, grad))), tf.math.negative(beta)), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09457138925790787, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [5, 0, 8, 4, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [3, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [76, 48, 22, 41, 42, 68], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 3, 2, 9, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [0, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(alpha, tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3026941648925914, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [5, 0, 2, 4, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [2, 1, 1, 0, 1, 2, 1, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [76, 48, 22, 41, 42, 68], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 4, 5, 5, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 1, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [5, 0, 4, 8, 6, 0, 4, 5, 6, 0, 9], [0, 2, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, alpha)), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3026941648925914, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 3, 3, 3, 1, 5, 5, 9, 1, 2, 5, 7, 3, 2, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8], [2, 1, 1, 0, 1, 2, 1, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [81, 48, 98, 81, 42, 68], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 3, 2, 9, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [0, 1, 1], [9], [6, 1], [52], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [1, 0, 4, 8, 6, 0, 4, 5, 6, 0, 9], [0, 1, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 7, 6, 1, 6, 6, 4, 2, 1, 1, 1, 1, 0, 1, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), alpha)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.math.square(tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad))), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [1509226.358275562, 29072490.39862634, 135530279.34803855, 374123090.08162725, 809229427.6243562, 1473584272.1627262], "accuracy": [0.09787346422672272, 0.09642054885625839, 0.10236428678035736, 0.1014397069811821, 0.09985470771789551, 0.1018359512090683], "val_loss": [5780476.0, 46111046.85714286, 155478070.85714287, 368368192.0, 719268004.5714285, 1242665362.2857144], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 8, 2, 8, 5, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [3, 1, 1, 0, 2, 2, 1, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [69, 48, 98, 81, 42, 68], [1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 3, 2, 9, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [2, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [3, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 8, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.square(grad)), tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.math.sqrt(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [5.790040931832732e+25, 7.567739797573772, 14.73682484609765, 21.93429298562113, 29.134691549534686, 36.33489913497036], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4.029392106192453, 10.08553831917899, 16.254499162946427, 22.42610113961356, 28.59769548688616, 34.770533970424104], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [5, 0, 2, 4, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [3, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [76, 48, 22, 41, 42, 68], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 4, 5, 5, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 1, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [5, 3, 3, 3, 1, 5, 5, 9, 1, 2, 5, 7, 3, 2, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8], [2, 1, 1, 0, 1, 2, 1, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [81, 48, 98, 81, 42, 68], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 8, 4, 9, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [29, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [3, 1], [52], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 4, 8, 6, 0, 4, 5, 6, 0, 9], [1, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), sigma)", "other_info": {"loss": [2.3018484847137186, 2.3036943559302725, 2.3033531975862673, 2.302506038210789, 2.3027995230420673, 2.3022702477784787], "accuracy": [0.09298639744520187, 0.08585391938686371, 0.09338264167308807, 0.09602430462837219, 0.08968432247638702, 0.09285431355237961], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 3, 5, 3, 2, 9, 3, 9, 2, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [3, 3, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [76, 48, 22, 41, 42, 68], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 3, 0, 9, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 4, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [80, 19, 41, 7, 45, 13], [1], [0, 1, 1], [9], [6, 1], [52], [0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [5, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [3, 2, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 5, 5, 2, 3, 0, 8, 8, 5, 3, 1, 1, 0, 0, 0, 0, 3, 2, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.negative(grad)), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.negative(sigma))", "other_info": {"loss": [2.3018484847137186, 2.3036943559302725, 2.3033531975862673, 2.302506038210789, 2.3027995230420673, 2.3022702477784787], "accuracy": [0.09298639744520187, 0.08585391938686371, 0.09338264167308807, 0.09602430462837219, 0.08968432247638702, 0.09285431355237961], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 8, 5, 3, 2, 9, 3, 9, 2, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [3, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [76, 48, 22, 41, 42, 68], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 3, 0, 9, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 1, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [1], [1, 1, 1], [9], [6, 1], [52], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.3018484847137186, 2.3036943559302725, 2.3033531975862673, 2.302506038210789, 2.3027995230420673, 2.3022702477784787], "accuracy": [0.09298639744520187, 0.08585391938686371, 0.09338264167308807, 0.09602430462837219, 0.08968432247638702, 0.09285431355237961], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 3, 3, 2, 1, 5, 5, 9, 1, 2, 5, 7, 3, 2, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8], [2, 1, 2, 0, 1, 0, 1, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [76, 48, 22, 41, 42, 68], [0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 8, 4, 9, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 2, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [80, 19, 41, 7, 45, 13], [1], [1, 1, 1], [9], [6, 1], [52], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 4, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 13, 13, 8, 5, 2, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.square(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))))), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.sqrt(grad), beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.3018484847137186, 2.3036943559302725, 2.3033531975862673, 2.302506038210789, 2.3027995230420673, 2.3022702477784787], "accuracy": [0.09298639744520187, 0.08585391938686371, 0.09338264167308807, 0.09602430462837219, 0.08968432247638702, 0.09285431355237961], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 8, 2, 3, 4, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [3, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [76, 48, 22, 41, 42, 68], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 7, 2, 9, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 2, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [52], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.3018484847137186, 2.3036943559302725, 2.3033531975862673, 2.302506038210789, 2.3027995230420673, 2.3022702477784787], "accuracy": [0.09298639744520187, 0.08585391938686371, 0.09338264167308807, 0.09602430462837219, 0.08968432247638702, 0.09285431355237961], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]