[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [4, 6, 9, 2, 9, 5, 5, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 2, 1, 2, 1, 1, 1, 1, 2, 2], [95, 67, 87], [1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 3, 2, 2, 3, 0, 0, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 1, 3, 1, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 9, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.8122857213020325, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.174561060840081, 2.266050248964194, 1.9125035449954986, 1.5447237984757176, 1.1155096985849455, 0.8256404686991281, 0.7000372732288692, 0.687785866135824, 0.6611570573249875, 0.6332908144023645, 0.6382704465664168, 0.5825410422679219, 0.583955328745723, 0.5721824386840673, 0.5433560015266881, 0.5364117518533821, 0.5416243447879239, 0.5225719333033536, 0.5218256128627894, 0.4878406321619795, 0.49077348554170586, 0.486929471750049, 0.47693457640928916, 0.4703117389964579, 0.4705434273561829, 0.45282059165512206], "accuracy": [0.2620525658130646, 0.2425042986869812, 0.3755118250846863, 0.4835556745529175, 0.5923920273780823, 0.6968696117401123, 0.7375511527061462, 0.7390040755271912, 0.7400607466697693, 0.7582882046699524, 0.7552502751350403, 0.7771760821342468, 0.7794214487075806, 0.7798177003860474, 0.7928939461708069, 0.7948752045631409, 0.7915731072425842, 0.7951393723487854, 0.8025360107421875, 0.8123101592063904, 0.8137630224227905, 0.8162726163864136, 0.8162726163864136, 0.8201030492782593, 0.8260467648506165, 0.8286884427070618], "val_loss": [1.9720207623073034, 1.682119267327445, 1.5907543046133858, 0.8619851384844098, 0.6179495198386056, 0.5640847342354911, 0.5342952013015747, 0.5203661067145211, 0.5251221656799316, 0.5099589654377529, 0.49923510210854666, 0.5137647390365601, 0.49966793400900705, 0.48712810448237825, 0.5388837882450649, 0.4474036863871983, 0.4502564328057425, 0.44956743717193604, 0.4199800661631993, 0.419747565473829, 0.42676559516361784, 0.41772966725485666, 0.4401894637516567, 0.49571560110364643, 0.43092491797038485, 0.43735488823481966], "val_accuracy": [0.20200000703334808, 0.43433332443237305, 0.3813333213329315, 0.6496666669845581, 0.7236666679382324, 0.753333330154419, 0.7630000114440918, 0.7590000033378601, 0.7636666893959045, 0.7546666860580444, 0.7663333415985107, 0.7710000276565552, 0.7706666588783264, 0.7756666541099548, 0.7459999918937683, 0.8023333549499512, 0.8036666512489319, 0.8043333292007446, 0.8166666626930237, 0.8069999814033508, 0.8246666789054871, 0.8166666626930237, 0.7923333048820496, 0.7816666960716248, 0.8073333501815796, 0.8009999990463257]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [4, 6, 9, 2, 9, 5, 5, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 2, 1, 2, 1, 1, 1, 1, 2, 2], [95, 67, 87], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 9, 2, 2, 3, 0, 0, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 1, 3, 1, 3, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.8040000200271606, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.1748706447040527, 2.2669362831329862, 1.833529511588896, 1.321139882096147, 0.903444966249903, 0.7885117637341159, 0.6911653473062003, 0.6568357492119896, 0.6520895498020302, 0.6104077929440207, 0.6245556351468076, 0.5723951085762278, 0.5529517623348763, 0.5398167734132892, 0.5328842362376913, 0.5242600324934563, 0.5062887203565851, 0.5029783132620743, 0.5140051940893217, 0.4506625831087803, 0.48298327767885185, 0.475877106847103, 0.4372039967406113, 0.46555210586788315, 0.4389886940317604, 0.43160173646872463, 0.4277369433374547], "accuracy": [0.26178839802742004, 0.24224013090133667, 0.3991546630859375, 0.5332188606262207, 0.6695284843444824, 0.7009642124176025, 0.7304186820983887, 0.7446836829185486, 0.7474573850631714, 0.7656848430633545, 0.7593448758125305, 0.7832518815994263, 0.7881389260292053, 0.7946110367774963, 0.7968564033508301, 0.8034605979919434, 0.8101968169212341, 0.8043851256370544, 0.8062343001365662, 0.8305375576019287, 0.8158763647079468, 0.8231409192085266, 0.8348963260650635, 0.8227446675300598, 0.8355567455291748, 0.8363492488861084, 0.8381983637809753], "val_loss": [1.9720666067940849, 1.692537443978446, 1.3641838346208846, 0.6867894615445819, 0.7228601489748273, 0.5395254237311227, 0.5557954481669835, 0.5243483441216605, 0.5240260192326137, 0.5016083036150251, 0.45945039817265104, 0.49558826855250765, 0.44605902263096403, 0.5015380212238857, 0.51927421774183, 0.4211834158216204, 0.45916918345860075, 0.4416074412209647, 0.40276116132736206, 0.42534105266843525, 0.4032266821180071, 0.4023970365524292, 0.40313431194850374, 0.4497904436928885, 0.44187756947108675, 0.3959630216870989, 0.3946537545749119], "val_accuracy": [0.2006666660308838, 0.4333333373069763, 0.4946666657924652, 0.7099999785423279, 0.668666660785675, 0.7570000290870667, 0.750333309173584, 0.762666642665863, 0.7549999952316284, 0.7509999871253967, 0.7863333225250244, 0.7733333110809326, 0.8023333549499512, 0.7710000276565552, 0.7573333382606506, 0.8149999976158142, 0.7900000214576721, 0.8143333196640015, 0.8289999961853027, 0.8019999861717224, 0.8259999752044678, 0.8316666483879089, 0.8163333535194397, 0.7943333387374878, 0.7993333339691162, 0.8240000009536743, 0.8256666660308838]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [7, 1, 9, 8, 9, 9, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 2, 1, 2, 1, 1, 1, 1, 2, 2], [11, 67, 98, 79], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 3, 2, 2, 3, 0, 0, 1, 9, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 1, 0, 3, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.8005714416503906, "mapping_values": [1, 6, 6, 5, 1, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.subtract(tf.math.add(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.1746639312927543, 2.2662952537345156, 1.8560727917208033, 1.269056830549788, 0.8993059076716194, 0.7985375595130563, 0.6999852452311518, 0.6622038141705845, 0.6551998287710956, 0.5975770655561353, 0.590700170021047, 0.5755456847805058, 0.5508322655532685, 0.5291191822092814, 0.5602819410927339, 0.516173214326524, 0.5177796949618811, 0.5065313067024946, 0.5158200549325136, 0.4519683058235734, 0.4723636033654355, 0.48707107662477545, 0.43986918546457204, 0.4400827089879869], "accuracy": [0.2620525658130646, 0.24435345828533173, 0.39968299865722656, 0.5498613119125366, 0.667811393737793, 0.6983225345611572, 0.7345132827758789, 0.7456082701683044, 0.746268630027771, 0.7709681391716003, 0.7746664881706238, 0.7825914621353149, 0.7895918488502502, 0.8001585006713867, 0.7841764688491821, 0.802800178527832, 0.8034605979919434, 0.8030643463134766, 0.8087438941001892, 0.8317263126373291, 0.8193105459213257, 0.8175934553146362, 0.8301413059234619, 0.8391229510307312], "val_loss": [1.9720447404044015, 1.6830950464521135, 1.4512933662959508, 0.8204760551452637, 0.5980714389256069, 0.5531985759735107, 0.5966247490474156, 0.5328351088932582, 0.4983945574079241, 0.4948129653930664, 0.4817807504108974, 0.48342994281223844, 0.44937615735190256, 0.5213955981390817, 0.47258031368255615, 0.41871107476098196, 0.45502752917153494, 0.46266416140965055, 0.3991053785596575, 0.4148079752922058, 0.4419387238366263, 0.4071325234004429, 0.3985625760895865, 0.460764970098223], "val_accuracy": [0.2016666680574417, 0.4336666762828827, 0.41999998688697815, 0.6433333158493042, 0.7363333106040955, 0.7536666393280029, 0.7143333554267883, 0.7733333110809326, 0.7749999761581421, 0.7630000114440918, 0.7770000100135803, 0.7773333191871643, 0.79666668176651, 0.7590000033378601, 0.7913333177566528, 0.8190000057220459, 0.7960000038146973, 0.793666660785675, 0.8326666951179504, 0.8183333277702332, 0.8106666803359985, 0.8276666402816772, 0.8240000009536743, 0.8006666898727417]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [4, 6, 9, 4, 9, 5, 5, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 2, 1, 2, 1, 1, 1, 1, 2, 2], [11, 67, 98, 79], [1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 3, 2, 2, 3, 0, 0, 1, 9, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 1, 3, 1, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 9, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.7960000038146973, "mapping_values": [1, 9, 9, 7, 2, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.132532085913866, 2.2237706270042805, 2.1578988836205566, 1.7406098613208705, 1.2606940076902573, 1.098501687083876, 0.8484815742440148, 0.8677304216175031, 0.8207004722382462, 0.685628878993129, 0.6859940072769313, 0.6373623852732316, 0.6399303610377449, 0.5933393120702704, 0.6042018765944059, 0.5610952018793973, 0.568004222566331, 0.5595170113514789], "accuracy": [0.2985074520111084, 0.33126401901245117, 0.27539294958114624, 0.413419634103775, 0.5472196340560913, 0.6236956715583801, 0.6906617283821106, 0.68101966381073, 0.696209192276001, 0.7427024245262146, 0.7372870445251465, 0.7589486241340637, 0.7626469135284424, 0.7751948237419128, 0.7728173136711121, 0.789459764957428, 0.785629391670227, 0.7895918488502502], "val_loss": [1.6049951825823103, 1.9644335338047572, 1.926279067993164, 0.859951308795384, 0.9345329489026751, 0.730218904359, 0.649396538734436, 0.7491111925670079, 0.6032895701272147, 0.6667476211275373, 0.5074458633150373, 0.491165178162711, 0.4751125063214983, 0.4725774015699114, 0.4662668023790632, 0.4743100915636335, 0.49273431301116943, 0.48944973945617676], "val_accuracy": [0.4259999990463257, 0.18733333051204681, 0.26866665482521057, 0.6413333415985107, 0.6523333191871643, 0.687333345413208, 0.6880000233650208, 0.6886666417121887, 0.7136666774749756, 0.6753333210945129, 0.7673333287239075, 0.7820000052452087, 0.7976666688919067, 0.7903333306312561, 0.7926666736602783, 0.7883333563804626, 0.7630000114440918, 0.7713333368301392]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [4, 3, 9, 2, 6, 5, 9, 8, 0, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 2, 2, 1, 2, 1, 1, 1, 1, 2, 2], [95, 21, 98, 79], [0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 3, 9, 2, 9, 2, 0, 1, 5, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 3, 3, 0, 0, 3, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.7902857065200806, "mapping_values": [1, 7, 7, 4, 3, 1, 7, 7, 5, 2, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), grad), tf.math.add(grad, tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.1371962651285625, 2.2636144161854186, 2.0411722937343204, 1.6100162780358886, 1.0302077491899697, 0.844392225711164, 0.7338333404484584, 0.7018724067918755, 0.6584895557463524, 0.649218403195598, 0.6230674511752408, 0.6081982144369756, 0.5702121714165718, 0.5837118051559413, 0.5592097169482839, 0.5400120984797843, 0.5434162744819496], "accuracy": [0.2751287817955017, 0.20063400268554688, 0.316470742225647, 0.4843481779098511, 0.6269977688789368, 0.6851142644882202, 0.724739134311676, 0.7362303733825684, 0.7524765729904175, 0.7573636174201965, 0.7614582180976868, 0.7714964747428894, 0.7844406366348267, 0.7847048044204712, 0.7907806038856506, 0.7971205711364746, 0.7943468689918518], "val_loss": [1.969623225075858, 1.5599549497876848, 1.4271492958068848, 0.8406831196376255, 0.7407235588346209, 0.5774264505931309, 0.5625179324831281, 0.5090097188949585, 0.5083229201180595, 0.49772121225084576, 0.5044994694846017, 0.45363753182547434, 0.5086769035884312, 0.5195000341960362, 0.4675537518092564, 0.4978948320661272, 0.4956103393009731], "val_accuracy": [0.10233332961797714, 0.4390000104904175, 0.3423333466053009, 0.637666642665863, 0.6786666512489319, 0.7423333525657654, 0.7443333268165588, 0.7599999904632568, 0.765333354473114, 0.7720000147819519, 0.7620000243186951, 0.7929999828338623, 0.7433333396911621, 0.7546666860580444, 0.7900000214576721, 0.7683333158493042, 0.7763333320617676]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [4, 6, 9, 2, 9, 5, 5, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 2, 1, 2, 1, 1, 1, 1, 2, 2], [95, 67, 87], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 3, 2, 2, 3, 0, 0, 1, 5, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 1, 0, 3, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.7817142605781555, "mapping_values": [1, 9, 9, 7, 2, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.1325325146957144, 2.228925810608456, 2.1625444471497564, 1.9896309247279542, 1.7552287244620404, 1.3796073404899631, 1.044310026243772, 1.010457141776331, 0.8585865042701201, 0.8124072508190947, 0.7221534110142208, 0.6871565905827824, 0.6889467732765576, 0.6461404502557143, 0.642385038985017, 0.6340038135319086, 0.5926262374764121, 0.614849872663745], "accuracy": [0.29837536811828613, 0.3329811096191406, 0.2775062620639801, 0.32743361592292786, 0.419759601354599, 0.5214634537696838, 0.6296393871307373, 0.6279223561286926, 0.6833971738815308, 0.6926429867744446, 0.7259278893470764, 0.7391361594200134, 0.7400607466697693, 0.7541936039924622, 0.7552502751350403, 0.7614582180976868, 0.7792893648147583, 0.767930269241333], "val_loss": [1.603935922895159, 1.9634604454040527, 1.9363642420087541, 1.4881699425833566, 1.1217738560267858, 0.944732666015625, 0.8512893915176392, 0.7998446566717965, 0.621813144002642, 0.60553320816585, 0.5474494865962437, 0.5307268926075527, 0.5005401713507516, 0.4974031278065273, 0.5479157992771694, 0.497332079069955, 0.5650398901530674, 0.5258661508560181], "val_accuracy": [0.42633333802223206, 0.164000004529953, 0.27933332324028015, 0.5360000133514404, 0.5429999828338623, 0.6233333349227905, 0.590666651725769, 0.6326666474342346, 0.7059999704360962, 0.7323333621025085, 0.7419999837875366, 0.7570000290870667, 0.778333306312561, 0.7673333287239075, 0.7566666603088379, 0.7743333578109741, 0.7356666922569275, 0.7643333077430725]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [0, 3, 9, 2, 6, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 2, 2, 1, 2, 1, 1, 1, 1, 2, 2], [74, 67, 87], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 3, 2, 2, 3, 0, 0, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 1, 3, 1, 3, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [26, 9, 76, 58]], "fitness": -0.7699999809265137, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.2932425124093196, 2.2768837318538817, 2.261804868705426, 2.239754675023859, 2.2162121516870013, 2.1869088734586586, 2.1517028092172845, 2.1036305049344013, 2.0504660448929135, 1.9879200473012484, 1.9205266440376048, 1.8293781585508193, 1.7480694471868652, 1.6512285163295173, 1.5754956925597094, 1.4916941915851432, 1.4238327788387102, 1.3551646117221852, 1.3041476916800778, 1.278522977282925, 1.2282888906002989, 1.2022299842118997, 1.1712074722706476, 1.138903204334442, 1.1197177905448124, 1.1012048355860087, 1.0706666084942549, 1.046919746956947, 1.0223751776033563, 1.0086446400441986, 1.002359205595396, 0.9879234780913819, 0.975876492957051, 0.9593318553018753, 0.9447908140113719, 0.9341652800598794, 0.9254993749426939, 0.9222535153642039, 0.9138227143559741, 0.894548629048541, 0.9023228031281136, 0.8809041097699186, 0.8812142411841535, 0.8732993264617763, 0.8681787790214192, 0.867794246831669, 0.8434539573571433, 0.852475788229256, 0.8303082769872207, 0.8373159763677922, 0.8274542505494544, 0.8270268163834077, 0.8199222992912275, 0.8238426064534855, 0.814630574750831, 0.815781897659929, 0.8072806575971903, 0.7967736210411787, 0.7899276330769889, 0.7934646635653242, 0.7769992911127565, 0.7883179020636023, 0.7769552895720798, 0.7853774177699026, 0.7772014163441394, 0.7723585610313501, 0.7654594286809807, 0.7690980791919629, 0.7618221533517355, 0.7535535748199212, 0.7496617426174412, 0.755630057776971, 0.75176143394312, 0.7571904418915962, 0.7460566815478439, 0.7457321524273655, 0.7325827734518549, 0.7410042286785192, 0.7264280658057337, 0.7303194245563411, 0.725771337042962, 0.7333406401726044, 0.7224965401849002, 0.7218276000277966, 0.7179223705496943, 0.7124703204816027, 0.7184310737712398, 0.7189118548343998, 0.711832699553999, 0.7065650276960777, 0.7074212920963331, 0.712915383813687, 0.7068562006213488, 0.7047073300708916, 0.7019700427899949, 0.6932550186667508, 0.6953410814230736, 0.6925470366170614, 0.6960481096567369, 0.6839179068414086], "accuracy": [0.11200633645057678, 0.1558578759431839, 0.19363360106945038, 0.24580636620521545, 0.2843745946884155, 0.31184783577919006, 0.3501518964767456, 0.37524765729904175, 0.39823007583618164, 0.4205521047115326, 0.4245145916938782, 0.45568618178367615, 0.4671773910522461, 0.49068814516067505, 0.5049530863761902, 0.5176330804824829, 0.5322942733764648, 0.5452384352684021, 0.5610883831977844, 0.5649187564849854, 0.5851274728775024, 0.5876370072364807, 0.5999207496643066, 0.6082419753074646, 0.6104874014854431, 0.6133931875228882, 0.6273940205574036, 0.6369040012359619, 0.639809787273407, 0.6485272645950317, 0.6440364718437195, 0.6523576974868774, 0.6612072587013245, 0.6588297486305237, 0.667811393737793, 0.6696605682373047, 0.6687359809875488, 0.6712455153465271, 0.670320987701416, 0.6837934255599976, 0.6757363677024841, 0.6872276067733765, 0.6929071545600891, 0.6843217611312866, 0.687491774559021, 0.6915863156318665, 0.6955488324165344, 0.6951525807380676, 0.7034738063812256, 0.7000396251678467, 0.7058512568473816, 0.7034738063812256, 0.7047945857048035, 0.7040021419525146, 0.7022850513458252, 0.7123233675956726, 0.7041342258453369, 0.7071720957756042, 0.7149649858474731, 0.7132478952407837, 0.7168141603469849, 0.7191916704177856, 0.720380425453186, 0.718399167060852, 0.7182670831680298, 0.7205125093460083, 0.7176066637039185, 0.7230220437049866, 0.7236824631690979, 0.7230220437049866, 0.7276449799537659, 0.7317395210266113, 0.7238145470619202, 0.7273808121681213, 0.7263241410255432, 0.722229540348053, 0.7337207794189453, 0.7334566116333008, 0.7316074371337891, 0.7316074371337891, 0.7342491149902344, 0.7345132827758789, 0.733060359954834, 0.7364945411682129, 0.7382115721702576, 0.7376832365989685, 0.7337207794189453, 0.7368907928466797, 0.7371549606323242, 0.7378153204917908, 0.7460044622421265, 0.7337207794189453, 0.7368907928466797, 0.7386078238487244, 0.7433628439903259, 0.748249888420105, 0.739928662776947, 0.7448157668113708, 0.7503632307052612, 0.7497028112411499], "val_loss": [1.9546678406851632, 1.9379512923104423, 1.92011935370309, 1.8992765290396554, 1.8740486417497908, 1.8432079723903112, 1.805443559374128, 1.757828848702567, 1.7006652014596122, 1.632181099482945, 1.5550435951777868, 1.469142232622419, 1.380708932876587, 1.2917326859065466, 1.2097973823547363, 1.1347643307277135, 1.0694422040666853, 1.0122959613800049, 0.9641685826437814, 0.9261831896645683, 0.8910953657967704, 0.8616558653967721, 0.8356210674558368, 0.8137016807283673, 0.7944559369768415, 0.7773057903562274, 0.7614261933735439, 0.7464593819209507, 0.7332420008523124, 0.7220243045261928, 0.711301156452724, 0.7021383558000837, 0.6931531769888741, 0.6843300036021641, 0.6756840603692191, 0.6695580312183925, 0.6619924477168492, 0.6562814371926444, 0.6510187217167446, 0.6445071697235107, 0.6398863451821464, 0.6353108372007098, 0.6306046758379255, 0.6267663240432739, 0.6221753869737897, 0.618524602481297, 0.6136069468089512, 0.610709684235709, 0.6070880038397652, 0.6048460177012852, 0.6008463757378715, 0.5977893045970372, 0.5944368668964931, 0.5924175977706909, 0.5898491825376239, 0.5871391466685704, 0.5840493100030082, 0.5813679013933454, 0.5801688943590436, 0.5764791284288678, 0.5747922999518258, 0.5732906035014561, 0.5718279566083636, 0.5689338105065482, 0.5665488924298968, 0.5645431109837123, 0.5619531869888306, 0.5603194577353341, 0.5575307948248727, 0.5571526799883161, 0.5549527066094535, 0.5525568553379604, 0.551656995500837, 0.5497613974979946, 0.5491546562739781, 0.5465326990400042, 0.5461392402648926, 0.5433122771126884, 0.5412947961262294, 0.5381883553096226, 0.5374299968991961, 0.5367028372628349, 0.5348894766398838, 0.533586995942252, 0.5315032516207013, 0.5312563010624477, 0.5316275017602103, 0.529882379940578, 0.5271117687225342, 0.5280160052435738, 0.525078432900565, 0.5238643714359829, 0.5219982692173549, 0.5228086539677211, 0.5215727942330497, 0.5182135105133057, 0.5178036689758301, 0.5186958142689296, 0.5154672861099243, 0.5154222249984741], "val_accuracy": [0.1783333271741867, 0.30266666412353516, 0.3583333194255829, 0.3883333206176758, 0.4283333420753479, 0.4573333263397217, 0.4806666672229767, 0.5080000162124634, 0.5249999761581421, 0.5360000133514404, 0.5526666641235352, 0.5586666464805603, 0.5663333535194397, 0.578000009059906, 0.5929999947547913, 0.6056666374206543, 0.6326666474342346, 0.6543333530426025, 0.6626666784286499, 0.6706666946411133, 0.6786666512489319, 0.6863333582878113, 0.6890000104904175, 0.6933333277702332, 0.6930000185966492, 0.6976666450500488, 0.6993333101272583, 0.7026666402816772, 0.706333339214325, 0.7093333601951599, 0.7136666774749756, 0.715666651725769, 0.7163333296775818, 0.7193333506584167, 0.7233333587646484, 0.7229999899864197, 0.7263333201408386, 0.7286666631698608, 0.7303333282470703, 0.731333315372467, 0.734333336353302, 0.734000027179718, 0.7360000014305115, 0.737666666507721, 0.737666666507721, 0.7383333444595337, 0.7406666874885559, 0.7413333058357239, 0.7409999966621399, 0.7413333058357239, 0.7426666617393494, 0.7426666617393494, 0.7463333606719971, 0.7443333268165588, 0.7419999837875366, 0.749666690826416, 0.7463333606719971, 0.7486666440963745, 0.7483333349227905, 0.7490000128746033, 0.7526666522026062, 0.7506666779518127, 0.7493333220481873, 0.7543333172798157, 0.7543333172798157, 0.7556666731834412, 0.7556666731834412, 0.7563333511352539, 0.7570000290870667, 0.7596666812896729, 0.7573333382606506, 0.7566666603088379, 0.7576666474342346, 0.7593333125114441, 0.7613333463668823, 0.7596666812896729, 0.7603333592414856, 0.762333333492279, 0.7606666684150696, 0.7603333592414856, 0.7590000033378601, 0.762666642665863, 0.7616666555404663, 0.7633333206176758, 0.7630000114440918, 0.765333354473114, 0.7643333077430725, 0.765666663646698, 0.7643333077430725, 0.765333354473114, 0.765666663646698, 0.765666663646698, 0.7663333415985107, 0.7689999938011169, 0.768666684627533, 0.7689999938011169, 0.7689999938011169, 0.7706666588783264, 0.7713333368301392, 0.7706666588783264]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [7, 6, 9, 2, 9, 5, 5, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 2, 1, 2, 1, 1, 1, 1, 2, 2], [80, 67, 87], [1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 9, 2, 2, 3, 0, 0, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 1, 3, 1, 3, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 9, 4, 5, 6, 0, 9], [0, 2, 2, 1, 0, 0, 2, 2], [47, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 7, 2, 3, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 10, 7, 3, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.sqrt(tf.math.sqrt(tf.math.divide_no_nan(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.pow(beta, beta))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [4, 3, 9, 2, 6, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 2, 2, 1, 2, 1, 1, 1, 1, 2, 2], [74, 67, 87], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 3, 2, 2, 3, 0, 0, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 1, 3, 1, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 9, 8, 8, 6, 9, 4, 5, 6, 0, 9], [0, 1, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 2], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3011799706695983, 2.3025908743181027, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.0936468094587326, 0.09945846349000931, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644460950579, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [4, 1, 9, 2, 9, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 2, 1, 2, 1, 1, 1, 1, 2, 2], [95, 67, 87], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 3, 2, 2, 3, 0, 0, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 0, 1, 0, 3, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [5, 0, 8, 8, 6, 9, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 10, 8, 2, 2], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.negative(tf.math.sqrt(tf.math.sqrt(tf.math.divide_no_nan(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.square(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), sigma))))))", "other_info": {"loss": [2.3159443382353375, 3.9764350073732135, 12.455780224793182, 23.108343392189358, 33.7734466283675, 44.44775811647459], "accuracy": [0.10513802617788315, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.117351804460798, 6.9079662050519675, 15.924610137939453, 25.008277893066406, 34.094778878348215, 43.19187600272043], "val_accuracy": [0.10566666722297668, 0.10566666722297668, 0.10566666722297668, 0.10566666722297668, 0.10566666722297668, 0.10566666722297668]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [8, 3, 9, 2, 6, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 2, 1, 2, 1, 1, 1, 1, 2, 2], [11, 67, 98, 79], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 3, 2, 2, 4, 0, 0, 1, 5, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 1, 0, 3, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6, 2, 7, 8, 4, 7, 4, 6, 1, 8, 3, 9, 8, 9], [0, 3, 2, 1, 0, 0, 2, 2, 3, 2, 0, 3], [82, 9, 76, 58, 20, 88]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 34, 22, 12, 6], "tree_depth": 33, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(grad, tf.math.add(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.sqrt(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.math.pow(sigma, beta), tf.math.square(alpha)), tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.pow(tf.math.add(tf.math.pow(tf.math.divide_no_nan(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.subtract(beta, tf.math.sqrt(beta))), sigma), tf.math.multiply(beta, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), sigma))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [4, 3, 9, 2, 9, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 2, 1, 2, 1, 1, 1, 1, 2, 2], [95, 29, 98], [1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 3, 2, 0, 4, 0, 2, 1, 9, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 1, 3, 2, 2, 3, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [0, 1], [52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 2, 17, 17, 11, 6, 2, 1, 1, 0, 1, 1, 4, 2, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(beta, tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), grad)))))))), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.3022225237541414, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [8, 3, 9, 2, 6, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 2, 1, 2, 1, 1, 1, 1, 2, 2], [96, 67, 98, 79], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 9, 2, 2, 3, 0, 0, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 1, 3, 1, 3, 3, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 7, 4, 5, 6], [2, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.negative(sigma))", "other_info": {"loss": [2.3008715602558336, 2.303685719925005, 2.3081841897089026, 2.3091521037961704, 2.3132236343034114, 2.3152602528851847, 2.319431288902707, 2.32264031744778, 2.330649364452793, 2.3439190143670356, 2.377094299219162, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09245806187391281, 0.08889182657003403, 0.0816272646188736, 0.08136309683322906, 0.07845727354288101, 0.08149518072605133, 0.07515519857406616, 0.07726852595806122, 0.08347642421722412, 0.07475894689559937, 0.07885351777076721, 0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.971949781690325, 1.9733195304870605, 1.9750103950500488, 1.9770937647138322, 1.9795374189104353, 1.9822090693882533, 1.9851456369672502, 1.9885889462062292, 1.994530200958252, 2.0071511268615723, 2.0521327427455356, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.029666665941476822, 0.024000000208616257, 0.021666666492819786, 0.022333333268761635, 0.023666666820645332, 0.03333333507180214, 0.04766666516661644, 0.06366666406393051, 0.07999999821186066, 0.09733333438634872, 0.09833333641290665, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [4, 3, 0, 2, 6, 5, 9, 8, 0, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 2, 2, 1, 2, 1, 1, 1, 1, 2, 2], [95, 67, 87], [1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 3, 2, 2, 4, 0, 0, 1, 5, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 0, 3, 1, 0, 3, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [4, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 11, 5, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.add(alpha, grad))), grad))), grad)), tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.square(grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.302029306956916, 2.302306704942529, 2.3024410635268353, 2.3028055384898813, 2.304311970772603, 2.3098495879492598, 2.3315669204801095, 2.418667096094039], "accuracy": [0.10593052208423615, 0.10487385839223862, 0.1018359512090683, 0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973635196685791, 1.9736016818455286, 1.97365631375994, 1.9741700717381068, 1.9763106618608748, 1.9854444776262556, 2.02232483455113, 2.1821137837001254], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.10566666722297668, 0.10566666722297668, 0.10566666722297668, 0.10566666722297668, 0.10566666722297668, 0.10566666722297668]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [4, 1, 9, 2, 9, 9, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 2, 1, 2, 1, 1, 1, 1, 2, 2], [74, 67, 87], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 3, 2, 2, 3, 0, 0, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 1, 0, 3, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6, 0, 2, 9], [0, 3, 2, 1, 0, 0, 2, 2], [81, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 18, 12, 6, 4], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.sqrt(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.math.pow(sigma, beta), tf.math.square(alpha)), tf.math.divide_no_nan(tf.math.negative(tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [4, 1, 4, 2, 9, 9, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 2, 1, 2, 1, 1, 1, 1, 2, 2], [95, 29, 41, 76], [1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 3, 2, 0, 1, 0, 5, 1, 9, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 2, 3, 3, 3, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6, 2, 0, 7, 6, 6, 2, 8, 5, 7], [0, 3, 2, 1, 0, 0, 2, 2, 0, 2, 3, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 6, 3, 4, 16, 16, 11, 5, 2, 1, 1, 0, 1, 0, 30, 18, 12, 4], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.subtract(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, grad), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.multiply(grad, tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))))), tf.math.add(beta, beta)))), tf.math.add(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.math.pow(sigma, beta), tf.math.square(alpha)), tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.divide_no_nan(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), beta), tf.math.divide_no_nan(beta, tf.math.add(tf.math.sqrt(tf.math.square(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))), beta)))), tf.math.add(sigma, beta)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [4, 6, 9, 2, 9, 5, 5, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 2, 2, 1, 2, 1, 1, 1, 1, 2, 2], [74, 67, 87], [1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 3, 2, 2, 3, 0, 0, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 1, 3, 1, 3, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 7, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [4, 6, 9, 2, 9, 5, 5, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 2, 1, 2, 1, 1, 1, 1, 2, 2], [95, 67, 87], [1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 9, 2, 2, 3, 0, 0, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 1, 3, 1, 3, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1], [3, 4, 8, 8, 6, 7, 4, 5, 6, 3, 0, 1, 5, 8, 8, 9], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 1, 1, 0, 0, 0, 0, 24, 16, 8, 4], "tree_depth": 30, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, grad), tf.math.negative(alpha)), grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.pow(tf.math.sqrt(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.math.pow(tf.math.square(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), sigma), tf.math.divide_no_nan(beta, tf.math.multiply(tf.math.negative(tf.math.subtract(alpha, tf.math.square(tf.math.sqrt(tf.math.sqrt(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))))), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), beta), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [4, 3, 9, 2, 6, 5, 9, 8, 0, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 2, 2, 1, 2, 1, 1, 1, 1, 2, 2], [95, 21, 98, 79], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 9, 2, 2, 3, 0, 0, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 3, 3, 1, 0, 3, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 5, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.06800000369548798, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.square(sigma))", "other_info": {"loss": [2.300437935150342, 2.301566048163496, 2.3035208867163375, 2.3017460396733536, 2.301822378619346, 2.3012898331383798, 2.301060614190979, 2.299788814824822, 2.2999387810558076, 2.3006762357955406, 2.302364317149912, 2.3006542685985756, 2.3016918704746234, 2.3000431313034158, 2.3008128688508935, 2.299965409554857, 2.300208161708906, 2.299285257087801, 2.2988570484077737, 2.3005800389531834, 2.2996894220209327, 2.29947822145294, 2.2992004802466037, 2.2994622474711224, 2.299300611515118, 2.300344667509011, 2.3001323093937813, 2.299346229324976, 2.2990191073827675, 2.299561945863955, 2.3000661654164367, 2.298863621813636], "accuracy": [0.09272222965955734, 0.08981640636920929, 0.09192973375320435, 0.09536388516426086, 0.09377889335155487, 0.09430722147226334, 0.09232597798109055, 0.09774138033390045, 0.10170386731624603, 0.09417514503002167, 0.09470347315073013, 0.09351472556591034, 0.09232597798109055, 0.09708096832036972, 0.09549596905708313, 0.08942015469074249, 0.09800554811954498, 0.09298639744520187, 0.10117553919553757, 0.09734513610601425, 0.09576013684272766, 0.10328886657953262, 0.10170386731624603, 0.09919429570436478, 0.10051512718200684, 0.10249637067317963, 0.09813763201236725, 0.10289261490106583, 0.09840179979801178, 0.10289261490106583, 0.09509972482919693, 0.10196803510189056], "val_loss": [1.9709593227931432, 1.9706359590802873, 1.9703661373683385, 1.970161301749093, 1.9699667521885462, 1.9698382105146135, 1.969737938472203, 1.969667911529541, 1.9696145738874162, 1.9695687294006348, 1.9695874622889928, 1.9695939336504256, 1.969569274357387, 1.9696163449968611, 1.9696087837219238, 1.9695871216910226, 1.9695469992501395, 1.9695164135524206, 1.9694975444248743, 1.9694510187421526, 1.96942595073155, 1.9694245202200753, 1.9694179807390486, 1.9694442749023438, 1.9694796289716447, 1.969517367226737, 1.969628197806222, 1.9697428430829729, 1.969893114907401, 1.9700184549604143, 1.970130375453404, 1.970257077898298], "val_accuracy": [0.03733333200216293, 0.039000000804662704, 0.04266666620969772, 0.04699999839067459, 0.05133333429694176, 0.05400000140070915, 0.05766666680574417, 0.059333331882953644, 0.06066666543483734, 0.06199999898672104, 0.06233333423733711, 0.06400000303983688, 0.06599999964237213, 0.06733333319425583, 0.06933332979679108, 0.07233333587646484, 0.07400000095367432, 0.07500000298023224, 0.07866666465997696, 0.0793333351612091, 0.07999999821186066, 0.08100000023841858, 0.0806666687130928, 0.08033332973718643, 0.0806666687130928, 0.08233333379030228, 0.08299999684095383, 0.0820000022649765, 0.0793333351612091, 0.0793333351612091, 0.07900000363588333, 0.07800000160932541]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [4, 1, 9, 2, 9, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 2, 1, 2, 1, 1, 1, 1, 2, 2], [95, 67, 98, 79], [1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 3, 2, 2, 3, 0, 0, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 1, 3, 1, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 9, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [77, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 7, 7, 5, 2, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.300546132279047, 2.302016976361167, 2.3044336865905914, 2.3029542708708672, 2.303469833649381, 2.3029552043909254], "accuracy": [0.09232597798109055, 0.09100515395402908, 0.08981640636920929, 0.08994849026203156, 0.08981640636920929, 0.09034473448991776], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]