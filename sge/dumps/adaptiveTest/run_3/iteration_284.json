[{"genotype": [[0], [0, 1, 1], [0, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 4, 1, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.817714273929596, "mapping_values": [1, 2, 2, 1, 1, 0, 9, 9, 7, 2, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(alpha)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.sqrt(tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [1.9778662409686047, 1.5087967299986762, 1.0651924642101334, 0.9166950645731456, 0.79221141931167, 0.7817104601384531, 0.7353578066592833, 0.7679614960446633, 0.6957614887124433, 0.6478786763576799, 0.6457284034959644, 0.6493714429195043, 0.6048297679592763, 0.5970327297395105, 0.5974407428527442, 0.571445189525643, 0.5442495146652396, 0.5651372683959913, 0.5463450117795191, 0.5256247020526695, 0.5346110358985817, 0.4987072109380938, 0.5025700476419624, 0.517312389897979, 0.48226012741223523, 0.4900099946806664, 0.4687185209495926, 0.4572450843910421, 0.4570656712769108, 0.43590460088841587, 0.4559600255658141, 0.43282397800527306, 0.44014591624188526, 0.4258667182975898, 0.4114118516602615, 0.4258880590395826, 0.4226538067157825, 0.403020402542305, 0.38639754760755035, 0.4001271736273881, 0.39457083949795835, 0.39820472161374026, 0.3845715209233558], "accuracy": [0.34064191579818726, 0.4873860776424408, 0.6164311170578003, 0.6586976647377014, 0.7017567157745361, 0.7078325152397156, 0.7253995537757874, 0.7086250185966492, 0.7364945411682129, 0.7576277852058411, 0.7564390301704407, 0.7518161535263062, 0.7635715007781982, 0.7707040309906006, 0.7650244235992432, 0.7841764688491821, 0.7915731072425842, 0.7873464822769165, 0.7905164361000061, 0.7947431206703186, 0.793422281742096, 0.8095363974571228, 0.809140145778656, 0.7994980812072754, 0.8190463781356812, 0.8138951063156128, 0.8240655064582825, 0.83119797706604, 0.8290846943855286, 0.8334434032440186, 0.8290846943855286, 0.8400475382804871, 0.8387266993522644, 0.8446704745292664, 0.847840428352356, 0.8413683772087097, 0.8441421389579773, 0.8496896028518677, 0.852859616279602, 0.8537842035293579, 0.8557654023170471, 0.8500858545303345, 0.8519350290298462], "val_loss": [1.6881475789206368, 0.7431492124285016, 0.7195061615535191, 0.6325787646429879, 0.681478602545602, 0.5912872041974749, 0.6817538057054792, 0.5466789177485875, 0.5485668863568988, 0.5465208802904401, 0.5164046457835606, 0.5174279894147601, 0.5014851093292236, 0.535991975239345, 0.5173145021711077, 0.4643862247467041, 0.4707497017724173, 0.4841350827898298, 0.4391932998384748, 0.4669944388525827, 0.4481637307575771, 0.44264537947518484, 0.4205754910196577, 0.40730673926217215, 0.40621129104069303, 0.4006489770753043, 0.40984217609678, 0.40419828040259226, 0.412415759904044, 0.38603716237204416, 0.3934105464390346, 0.3986246245247977, 0.37455718006406513, 0.37252182619912283, 0.4040072900908334, 0.42522170713969637, 0.3758425712585449, 0.3665314657347543, 0.3809486712728228, 0.40150658573423115, 0.38500607865197317, 0.3928729636328561, 0.3778517671993801], "val_accuracy": [0.39100000262260437, 0.6840000152587891, 0.6953333616256714, 0.7196666598320007, 0.6916666626930237, 0.7360000014305115, 0.6993333101272583, 0.7540000081062317, 0.7546666860580444, 0.7616666555404663, 0.7639999985694885, 0.7549999952316284, 0.765999972820282, 0.7400000095367432, 0.7749999761581421, 0.7976666688919067, 0.7956666946411133, 0.7833333611488342, 0.8149999976158142, 0.8016666769981384, 0.7983333468437195, 0.8003333210945129, 0.8203333616256714, 0.8270000219345093, 0.8243333101272583, 0.8266666531562805, 0.8220000267028809, 0.8223333358764648, 0.8286666870117188, 0.8383333086967468, 0.8360000252723694, 0.8366666436195374, 0.8423333168029785, 0.8399999737739563, 0.815666675567627, 0.8130000233650208, 0.8396666646003723, 0.846666693687439, 0.8289999961853027, 0.8326666951179504, 0.8276666402816772, 0.8196666836738586, 0.8349999785423279]}}, {"genotype": [[0], [0, 1, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 8, 4, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8125714063644409, "mapping_values": [1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(alpha)), lambda shape,  alpha, beta, grad: tf.math.sqrt(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [1.9778648743839187, 1.5081660695725334, 1.0528401083650842, 0.9103194706790467, 0.835021426357755, 0.7762948179666975, 0.7591425270735705, 0.7013370408090414, 0.6871093282326731, 0.6786852929381457, 0.6337046567569588, 0.6387110744894393, 0.6053948752742481, 0.6005350051066658, 0.5923620983594129, 0.5658565030405314, 0.5479260972855885, 0.5624208895049437, 0.5571552128398801, 0.5325171549590099, 0.5204238248082389, 0.49754038425547464, 0.49262558871870576, 0.5113132661477906, 0.485160244316583, 0.49017821438733566, 0.46624450244057714, 0.45641470129825906, 0.45914315934493605, 0.43582242022274253, 0.4571106256573916, 0.43765021797027004, 0.4352746387167913, 0.4210808866484731, 0.4169363306104357, 0.42000560933068887, 0.41995168724599813, 0.40403699299773016, 0.38304821707789516, 0.39652505649268244, 0.39600123409755067, 0.39966446717874077, 0.3811571848524749], "accuracy": [0.3407739996910095, 0.48831066489219666, 0.6161669492721558, 0.6585655808448792, 0.6902654767036438, 0.7104741930961609, 0.7111346125602722, 0.7358341217041016, 0.7450799345970154, 0.7498348951339722, 0.7621186375617981, 0.755118191242218, 0.7681944370269775, 0.7672698497772217, 0.7700436115264893, 0.7864218950271606, 0.785101056098938, 0.7873464822769165, 0.7874785661697388, 0.7967243194580078, 0.8001585006713867, 0.8103289008140564, 0.8161405324935913, 0.8045172095298767, 0.8170651197433472, 0.8141592741012573, 0.8272355198860168, 0.8302733898162842, 0.8265751004219055, 0.837537944316864, 0.8276317715644836, 0.8363492488861084, 0.8399154543876648, 0.843481719493866, 0.8486329317092896, 0.8430854678153992, 0.8453308939933777, 0.8508783578872681, 0.8532558679580688, 0.8532558679580688, 0.8555012345314026, 0.8494254350662231, 0.8548408150672913], "val_loss": [1.6874944482530867, 0.7342211008071899, 0.7711785520826068, 0.6344917161124093, 0.6053970030375889, 0.5966539212635585, 0.6123815774917603, 0.5628865957260132, 0.5431774514062064, 0.5416229622704642, 0.5141411849430629, 0.5003613914762225, 0.5027271849768502, 0.5268586703709194, 0.4889615603855678, 0.468354548726763, 0.47932382992335726, 0.46795620237077984, 0.4369635922568185, 0.44190759318215506, 0.453237669808524, 0.4258942093167986, 0.4191182255744934, 0.41339893851961407, 0.405803918838501, 0.4004568713051932, 0.40628875153405325, 0.4075367110116141, 0.4039335165705, 0.39295785767691477, 0.399843556540353, 0.39346197673252653, 0.3746386340686253, 0.37622709785188946, 0.3723943999835423, 0.4259158458028521, 0.3745947224753244, 0.36418804100581575, 0.3817132796560015, 0.39462982756750925, 0.37973473753247944, 0.3893482855388096, 0.3796905790056501], "val_accuracy": [0.39133334159851074, 0.6880000233650208, 0.6389999985694885, 0.7200000286102295, 0.7163333296775818, 0.7329999804496765, 0.7260000109672546, 0.7453333139419556, 0.7536666393280029, 0.7683333158493042, 0.7683333158493042, 0.7666666507720947, 0.7673333287239075, 0.7536666393280029, 0.7856666445732117, 0.7960000038146973, 0.7893333435058594, 0.7956666946411133, 0.812333345413208, 0.8056666851043701, 0.7866666913032532, 0.8109999895095825, 0.8226666450500488, 0.8216666579246521, 0.8230000138282776, 0.8273333311080933, 0.8209999799728394, 0.8220000267028809, 0.82833331823349, 0.8316666483879089, 0.8336666822433472, 0.840666651725769, 0.8420000076293945, 0.8410000205039978, 0.8446666598320007, 0.8083333373069763, 0.840666651725769, 0.8460000157356262, 0.8316666483879089, 0.8299999833106995, 0.8296666741371155, 0.8216666579246521, 0.8323333263397217]}}, {"genotype": [[0], [0, 1, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 4, 4, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8045714497566223, "mapping_values": [1, 2, 2, 1, 1, 0, 9, 9, 6, 3, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(alpha)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.sqrt(tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [1.9778907931696517, 1.505759858593823, 1.0527414492549299, 0.9099229976265202, 0.8198612301010482, 0.7838227123537745, 0.718044299239165, 0.7389639633962459, 0.6827065913495513, 0.6744470452714385, 0.6433709273248883, 0.6377922384541473, 0.6016233535553597, 0.6058519175338897, 0.5947685525433388, 0.5604051160711606, 0.552246725357692, 0.5568703667457157, 0.5575461867400101, 0.5252107079309983, 0.5213920568289333, 0.49957054973498877, 0.5104376807574662, 0.5101046887654607, 0.48758545818267135, 0.4793676223894703, 0.47407642727625005, 0.4615577858562845, 0.4632690738669602, 0.43338450144279145], "accuracy": [0.340509831905365, 0.48751816153526306, 0.617751955986023, 0.6509047746658325, 0.6852463483810425, 0.7010962963104248, 0.7341170310974121, 0.719852089881897, 0.7446836829185486, 0.7553823590278625, 0.7540615797042847, 0.7534011602401733, 0.7681944370269775, 0.7631752490997314, 0.7708360552787781, 0.7880068421363831, 0.7853652238845825, 0.787082314491272, 0.7887993454933167, 0.7985734939575195, 0.8016114234924316, 0.8082155585289001, 0.806630551815033, 0.8031964302062988, 0.8150838613510132, 0.8216879963874817, 0.822348415851593, 0.8284242749214172, 0.8219521641731262, 0.8362171649932861], "val_loss": [1.6868619918823242, 0.7493741852896554, 0.7609627076557705, 0.6774971314838955, 0.6321034601756504, 0.6027136359895978, 0.6673379966190883, 0.5528971127101353, 0.541250194822039, 0.5514936958040509, 0.5146358524050031, 0.4942103113446917, 0.5017679078238351, 0.5253770862306867, 0.48205442087990896, 0.46886936255863737, 0.4871258054460798, 0.4712125403540475, 0.43843936920166016, 0.43750122615269255, 0.44978553908211844, 0.4350204978670393, 0.4221091440745762, 0.4144453150885446, 0.4033909184592111, 0.4264504739216396, 0.4187754137175424, 0.40253848688943045, 0.41472344739096506, 0.38597941398620605], "val_accuracy": [0.39399999380111694, 0.6813333630561829, 0.656333327293396, 0.6813333630561829, 0.7166666388511658, 0.7160000205039978, 0.6949999928474426, 0.7473333477973938, 0.7580000162124634, 0.7563333511352539, 0.7706666588783264, 0.7746666669845581, 0.7713333368301392, 0.7580000162124634, 0.7860000133514404, 0.7983333468437195, 0.7816666960716248, 0.796999990940094, 0.8146666884422302, 0.8116666674613953, 0.7950000166893005, 0.8046666383743286, 0.8183333277702332, 0.8213333487510681, 0.8349999785423279, 0.8163333535194397, 0.812666654586792, 0.8223333358764648, 0.8289999961853027, 0.8346666693687439]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [9, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 5, 6, 0, 2, 8, 4, 5, 2, 2, 5, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 3, 3, 0, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 13, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [31, 9, 76, 58]], "fitness": -0.7820000052452087, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.282787182233148, 2.231592673289226, 2.147675284147735, 2.0007033498295703, 1.8025814791113677, 1.5670956569561287, 1.387985544197784, 1.250646549177491, 1.1650433308885177, 1.100373736556495, 1.055130556322218, 1.0016262077967157, 0.9727058772555179, 0.9424817653112345, 0.9100719744408718, 0.8922551646523582, 0.8754485906894575, 0.8480333718231972, 0.8420904997774104, 0.8308589544121174, 0.8163074307500915, 0.8039688217783207, 0.7968092309469718, 0.7877313451145964, 0.7737900130721351, 0.771217645450653, 0.7578082285017432, 0.7504287682441184, 0.7550370116054956, 0.7343203930917149, 0.7323977082097819, 0.7235870532166956, 0.7204213265761125, 0.7191207751684878, 0.7117194369043641, 0.6997285457083169, 0.7016556663929495, 0.7016215745279456, 0.6954657355351235, 0.6826321277494334, 0.6845285467357684, 0.6772692154710633, 0.6683549766747738, 0.670228693306076, 0.6790795552023586, 0.657850257811246, 0.6627139952110026, 0.6524842560897492, 0.6569122273247113, 0.6533719560316195, 0.6502348533742354, 0.6494002201695405, 0.6341417765085172, 0.6284209301742218, 0.6352066881132951, 0.6342438234550417, 0.6204468961940418, 0.6275205279164987, 0.6264927622869172, 0.6182130695475784, 0.625701495189047, 0.6221117420266443, 0.6198215722297681, 0.6143190566622082, 0.6134041418504595, 0.6102199130337929, 0.605199258514226, 0.6000865012773386], "accuracy": [0.14119666814804077, 0.25941091775894165, 0.3533218801021576, 0.4150046110153198, 0.45264825224876404, 0.4983489513397217, 0.5423325896263123, 0.5765420794487, 0.5987319946289062, 0.616299033164978, 0.6388852000236511, 0.6518293619155884, 0.6551313996315002, 0.665830135345459, 0.68101966381073, 0.6866992712020874, 0.6806234121322632, 0.6971337795257568, 0.6972658634185791, 0.7010962963104248, 0.7061154246330261, 0.7066437602043152, 0.7119271159172058, 0.7099458575248718, 0.719852089881897, 0.724210798740387, 0.7236824631690979, 0.726192057132721, 0.7263241410255432, 0.7296261787414551, 0.7288337349891663, 0.7341170310974121, 0.7302865982055664, 0.7407211661338806, 0.7415136694908142, 0.7483819723129272, 0.7448157668113708, 0.739928662776947, 0.7400607466697693, 0.7497028112411499, 0.7508915662765503, 0.7500990629196167, 0.7559106945991516, 0.7518161535263062, 0.7541936039924622, 0.7574957013130188, 0.7567031979560852, 0.759609043598175, 0.7552502751350403, 0.7614582180976868, 0.7580240368843079, 0.7588165402412415, 0.7670056819915771, 0.7670056819915771, 0.7605336308479309, 0.7572315335273743, 0.7684586048126221, 0.769911527633667, 0.7721568942070007, 0.7712323069572449, 0.7684586048126221, 0.7672698497772217, 0.7650244235992432, 0.7708360552787781, 0.7729493975639343, 0.78113853931427, 0.7751948237419128, 0.7749306559562683], "val_loss": [1.926400933946882, 1.8649745668683733, 1.7581561633518763, 1.5793423312050956, 1.347459350313459, 1.1294281142098563, 0.97901109286717, 0.8786311149597168, 0.8150237117494855, 0.7655388457434518, 0.7329564264842442, 0.7041855369295392, 0.6810246535709926, 0.6637542077473232, 0.647105302129473, 0.6362516539437431, 0.6252743005752563, 0.613730924470084, 0.606952292578561, 0.5959828410829816, 0.588854159627642, 0.5847415924072266, 0.5787435940333775, 0.5702272994177682, 0.5645385640008109, 0.5596744673592704, 0.5604174477713448, 0.5528749227523804, 0.5490072114127023, 0.5476855039596558, 0.5411057812826974, 0.5432608297892979, 0.531177248273577, 0.5322269201278687, 0.5238489253180367, 0.522501962525504, 0.5216458354677472, 0.5183028663907733, 0.5157290186200824, 0.5127252340316772, 0.5125977652413505, 0.5084183216094971, 0.5080053636005947, 0.5037059273038592, 0.5003076962062291, 0.4995372976575579, 0.49564874172210693, 0.4935354845864432, 0.4918361391339983, 0.49445693833487375, 0.4893418720790318, 0.4910462924412319, 0.48521900177001953, 0.4842040368488857, 0.4814791338784354, 0.48353716305324007, 0.4814261198043823, 0.4782846314566476, 0.4756616013390677, 0.4759796176637922, 0.47360689299447195, 0.47532195704323904, 0.4744723013469151, 0.4714160817010062, 0.47193031651633127, 0.46659745488848003, 0.4684734174183437, 0.4639885425567627], "val_accuracy": [0.36933332681655884, 0.4480000138282776, 0.5130000114440918, 0.5519999861717224, 0.5793333053588867, 0.6330000162124634, 0.6663333177566528, 0.6756666898727417, 0.687333345413208, 0.7039999961853027, 0.7076666951179504, 0.7120000123977661, 0.721666693687439, 0.7246666550636292, 0.7319999933242798, 0.7306666374206543, 0.7269999980926514, 0.7356666922569275, 0.7393333315849304, 0.7426666617393494, 0.7419999837875366, 0.7463333606719971, 0.7446666955947876, 0.7490000128746033, 0.7549999952316284, 0.7516666650772095, 0.7519999742507935, 0.753333330154419, 0.7590000033378601, 0.753333330154419, 0.7639999985694885, 0.7609999775886536, 0.7639999985694885, 0.7646666765213013, 0.7643333077430725, 0.7703333497047424, 0.7630000114440918, 0.7710000276565552, 0.7673333287239075, 0.7736666798591614, 0.7726666927337646, 0.7726666927337646, 0.768666684627533, 0.7739999890327454, 0.7796666622161865, 0.781333327293396, 0.7816666960716248, 0.777999997138977, 0.7760000228881836, 0.7753333449363708, 0.7846666574478149, 0.7816666960716248, 0.7860000133514404, 0.7866666913032532, 0.7870000004768372, 0.7889999747276306, 0.7900000214576721, 0.7886666655540466, 0.7926666736602783, 0.7906666398048401, 0.7910000085830688, 0.7919999957084656, 0.7960000038146973, 0.7943333387374878, 0.7919999957084656, 0.7943333387374878, 0.7913333177566528, 0.7953333258628845]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0], [0, 0, 1, 0, 0, 1, 1], [8, 4, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 9, 4, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 3, 0, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [31, 9, 76, 58]], "fitness": -0.776285707950592, "mapping_values": [1, 7, 7, 4, 3, 2, 4, 4, 4, 0, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.pow(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.282787213724177, 2.231592304434806, 2.1476797101173606, 2.0007254427544683, 1.8026209787339298, 1.5672133247598192, 1.3880613803265196, 1.2507267350675628, 1.1650587052024193, 1.1003420550384542, 1.0551236012135956, 1.0016747095943552, 0.9726259087243998, 0.9422400769871208, 0.9100261063481901, 0.8922890853793661, 0.8752781233499709, 0.8480202183117562, 0.8420802647049369, 0.8307934651726256, 0.8162067334854435, 0.8039696494097943, 0.7967495547939427, 0.7876060521440452, 0.7738736418370227, 0.7711834127498954, 0.7576472654775338, 0.7503486345189359, 0.7548396496756391, 0.7341085418245937, 0.7323387029180123, 0.7235883315477736, 0.7202255665082911, 0.7187697181942881, 0.7115584439636773, 0.6994458264788742, 0.7016410371174256, 0.7015152020917955, 0.6954428558147437, 0.6823273512901742, 0.6842421915127759, 0.6773055646366305, 0.6684433063574596, 0.6700349763919491, 0.6788325610335288, 0.6578872545976933, 0.6627793623361574, 0.6523697205491117, 0.656939266317194, 0.6533937332432079, 0.6499907345489], "accuracy": [0.14119666814804077, 0.2595430016517639, 0.35305771231651306, 0.414608359336853, 0.45291242003440857, 0.4983489513397217, 0.5424646735191345, 0.5762779116630554, 0.5989961624145508, 0.6159027814865112, 0.6390172839164734, 0.6514331102371216, 0.6556597352027893, 0.6655659675598145, 0.6812838315963745, 0.6868313550949097, 0.6804913282394409, 0.6970016956329346, 0.6971337795257568, 0.700700044631958, 0.705058753490448, 0.7073041796684265, 0.7123233675956726, 0.7096816897392273, 0.718399167060852, 0.7232862114906311, 0.7240787148475647, 0.7251353859901428, 0.7268524765968323, 0.7302865982055664, 0.7301545143127441, 0.7357020378112793, 0.7294940948486328, 0.7397965788841248, 0.7415136694908142, 0.748249888420105, 0.7454761862754822, 0.7409853339195251, 0.7411174178123474, 0.7494386434555054, 0.7518161535263062, 0.7508915662765503, 0.7565711140632629, 0.7512878179550171, 0.7539294958114624, 0.7561748623847961, 0.7557786107063293, 0.759080708026886, 0.7540615797042847, 0.7611940503120422, 0.7573636174201965], "val_loss": [1.926400933946882, 1.8649746349879675, 1.7581681524004256, 1.579376322882516, 1.3475281851632255, 1.1295343126569475, 0.9790330954960415, 0.8786736897059849, 0.8150698968342373, 0.7656099285398211, 0.7330141918999808, 0.7042262894766671, 0.681000999041966, 0.6636851004191807, 0.6470978260040283, 0.6361528294427055, 0.6250812666756767, 0.6136725459780011, 0.6067870344434466, 0.5958575861794608, 0.5888572420392718, 0.5846818174634661, 0.5788207394736153, 0.5702839919498989, 0.5646048273359027, 0.5594396591186523, 0.5603346313749041, 0.552953669003078, 0.5492677518299648, 0.5477201598031181, 0.5410278184073312, 0.543418288230896, 0.5312732287815639, 0.5319727488926479, 0.5235949073519025, 0.5221371820994786, 0.5216561385563442, 0.5182970932551793, 0.5156514304024833, 0.5131851094109672, 0.5119909388678414, 0.5080396618161883, 0.5079151562282017, 0.5036059277398246, 0.5003825766699654, 0.499346273286002, 0.4956414869853428, 0.4936576230185373, 0.4919100148337228, 0.4944718224661691, 0.4894073350088937], "val_accuracy": [0.36933332681655884, 0.4480000138282776, 0.5130000114440918, 0.5516666769981384, 0.5796666741371155, 0.6323333382606506, 0.6653333306312561, 0.6756666898727417, 0.687666654586792, 0.70333331823349, 0.7073333263397217, 0.7120000123977661, 0.721666693687439, 0.7250000238418579, 0.7326666712760925, 0.7303333282470703, 0.7269999980926514, 0.7369999885559082, 0.7386666536331177, 0.7429999709129333, 0.7419999837875366, 0.746666669845581, 0.7440000176429749, 0.7483333349227905, 0.7543333172798157, 0.7516666650772095, 0.753000020980835, 0.7536666393280029, 0.7573333382606506, 0.753333330154419, 0.762333333492279, 0.7613333463668823, 0.7646666765213013, 0.7649999856948853, 0.7636666893959045, 0.7693333625793457, 0.7636666893959045, 0.7720000147819519, 0.7683333158493042, 0.7749999761581421, 0.7726666927337646, 0.7746666669845581, 0.7676666378974915, 0.7739999890327454, 0.7799999713897705, 0.7833333611488342, 0.7820000052452087, 0.7770000100135803, 0.7753333449363708, 0.7760000228881836, 0.7829999923706055]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 4, 4, 5, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.7428571581840515, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 6, 3, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.square(tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.0144482768679404, 1.49569338296367, 1.0435119148857006, 0.9081067147350677, 0.839692594132419, 0.7744827703352003, 0.7470481921464162, 0.7117982924559239, 0.7014463245514408], "accuracy": [0.32479196786880493, 0.4916127324104309, 0.627129852771759, 0.6619997620582581, 0.6820763349533081, 0.7063795924186707, 0.7187954187393188, 0.7268524765968323, 0.7309470176696777], "val_loss": [1.6603647300175257, 0.9464917182922363, 0.716221843447004, 0.6016482966286796, 0.6454873085021973, 0.6084033080509731, 0.5735534429550171, 0.5821013110024589, 0.5992935214723859], "val_accuracy": [0.40033334493637085, 0.6420000195503235, 0.6856666803359985, 0.7350000143051147, 0.6883333325386047, 0.7099999785423279, 0.7263333201408386, 0.7173333168029785, 0.7229999899864197]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 6, 4, 4, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [70, 13, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 1, 0, 8, 6, 7, 4, 5, 6], [2, 3, 2, 1, 0, 0, 2, 2], [10, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 7, 3, 3, 1, 1, 0, 1, 0, 5, 2, 3, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(beta, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(beta, sigma), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 4, 4, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 3, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [31, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 6, 6, 4, 2, 0, 1, 1, 0, 1, 0, 5, 4, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09549596905708313, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 4, 4, 2, 9, 5, 2, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 3, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 13, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [1, 0, 0, 1, 1, 0, 0, 1, 1], [3, 7, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [53, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 18, 18, 13, 5, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(alpha), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.pow(tf.math.add(beta, tf.math.add(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad))))), grad)), grad))), tf.math.add(beta, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07317395508289337, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 5, 0, 4, 4, 8, 2, 5, 6, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 13, 20, 7, 45, 13], [0], [0, 1, 1], [9], [4, 1], [52], [1, 0, 0, 1, 1, 0, 0, 1, 1], [3, 7, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [53, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 17, 17, 11, 6, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(alpha), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.negative(grad), tf.math.add(beta, grad)), tf.math.add(beta, grad))))))), beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [305115646.6470927, 5791642120.453309, 26617754922.773743, 73661961136.0655, 160338525210.37433, 295314534594.2232], "accuracy": [0.09681680053472519, 0.09338264167308807, 0.1014397069811821, 0.09787346422672272, 0.10011887550354004, 0.09747721254825592], "val_loss": [1137466148.5714285, 9095395620.571428, 30692058258.285713, 72746074112.0, 142075400777.14285, 245497743652.57144], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 2, 6, 0, 2, 8, 4, 5, 2, 2, 5, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 3, 0, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 13, 20, 7, 45, 13], [0], [0, 1, 1], [9], [4, 1], [52], [1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [31, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 22, 22, 14, 8, 3, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(beta)), tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.square(grad), tf.math.add(beta, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), tf.math.multiply(grad, tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))))), beta)))), tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(beta, grad)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [305115646.6470927, 5791642120.453309, 26617754922.773743, 73661961136.0655, 160338525210.37433, 295314534594.2232], "accuracy": [0.09681680053472519, 0.09338264167308807, 0.1014397069811821, 0.09787346422672272, 0.10011887550354004, 0.09747721254825592], "val_loss": [1137466148.5714285, 9095395620.571428, 30692058258.285713, 72746074112.0, 142075400777.14285, 245497743652.57144], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1], [0, 0, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 6, 0, 4, 4, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 1, 1, 0, 0, 1, 1], [1, 9, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [53, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.math.negative(beta), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.303344940008693, 2.3030008743184354, 2.302923944159868, 2.3029720358419663, 2.3028914264290483, 2.3029178549915557, 2.3030221350141695, 2.3030099190772564, 2.3029676427489747, 2.302954734922668, 2.302902480252525, 2.302901373090934], "accuracy": [0.09272222965955734, 0.09272222965955734, 0.09721305221319199, 0.09734513610601425, 0.09470347315073013, 0.0956280529499054, 0.09259014576673508, 0.0956280529499054, 0.0952318087220192, 0.09615638852119446, 0.09642054885625839, 0.09642054885625839], "val_loss": [1.973721640450614, 1.9737636702401298, 1.973731245313372, 1.9737380572727747, 1.9736392838614327, 1.9735393524169922, 1.9735326085771834, 1.9736201422555106, 1.9737311090741838, 1.9736150332859583, 1.973710264478411, 1.973733629499163], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.10133333504199982, 0.09833333641290665, 0.10133333504199982, 0.10566666722297668, 0.10133333504199982, 0.10566666722297668, 0.10566666722297668, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 4, 4, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [1, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 4, 4, 3, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07317395508289337, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 4, 4, 8, 2, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 52, 20, 7, 45, 13], [0], [1, 1, 1], [9], [5, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [44, 87, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [19122019.331662048, 362517950.9940563, 1665460632.5315018, 4608202612.418967, 10029630287.630167, 18471634040.780876], "accuracy": [0.09681680053472519, 0.09338264167308807, 0.1014397069811821, 0.09787346422672272, 0.10011887550354004, 0.09747721254825592], "val_loss": [71233293.71428572, 569172699.4285715, 1920179492.5714285, 4550622208.0, 8886849536.0, 15355215872.0], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1], [0, 0, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 8, 0, 4, 4, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [7, 1], [52], [0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.negative(beta))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(sigma), sigma)", "other_info": {"loss": [2.302499263608744, 2.305460701592138, 2.3078478981774353, 2.3082280952255596, 2.3141108157533647, 2.314040019039496, 2.320603056134108, 2.3229789106900336, 2.3288833162866767, 2.3450925600857797, 2.375813268226419, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08796724677085876, 0.08466517180204391, 0.08400475233793259, 0.07792893797159195, 0.07449477910995483, 0.07938185334205627, 0.07357019931077957, 0.07264561951160431, 0.07898560166358948, 0.07264561951160431, 0.08241976052522659, 0.09179764986038208, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9722674914768763, 1.9737366267613001, 1.9753429549080985, 1.9771550042288644, 1.9796222278050013, 1.9819471495492118, 1.9849585805620467, 1.9886418751307897, 1.9943055425371443, 2.007019656045096, 2.052206584385463, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.029333332553505898, 0.02500000037252903, 0.023000000044703484, 0.023333333432674408, 0.02500000037252903, 0.03233333304524422, 0.04600000008940697, 0.06300000101327896, 0.07866666465997696, 0.0963333323597908, 0.09833333641290665, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 2, 4, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [1, 0, 1, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(alpha)), lambda shape,  alpha, beta, grad: tf.math.sqrt(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07317395508289337, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1], [0, 1, 1], [4, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 8, 0, 4, 2, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 3, 3, 0, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [30, 73, 20, 7, 45, 13], [0], [0, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [2, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [31, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 10, 10, 7, 3, 1, 1, 1, 1, 0, 1, 4, 3, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.negative(beta))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [340530696.5704846, 6464058988.4052305, 29708322678.312508, 82215025534.56294, 178956124895.776, 329605500716.4644], "accuracy": [0.09681680053472519, 0.09351472556591034, 0.1014397069811821, 0.09774138033390045, 0.10011887550354004, 0.09760929644107819], "val_loss": [1269517129.142857, 10151437458.285715, 34255877851.42857, 81193039579.42857, 158572806144.0, 274006081536.0], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [28, 80, 61], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 2, 4, 2, 8, 5, 3, 2, 0, 3, 2, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], [3, 4, 4, 8, 6, 7, 4, 5, 6, 4, 0, 9, 8, 0], [3, 3, 2, 1, 0, 0, 2, 2], [36, 87, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 23, 23, 14, 9, 1, 1, 1, 0, 1, 0, 20, 12, 8, 3], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, beta)), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.multiply(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), grad)), grad)))))), tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(beta, grad))))))), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.pow(tf.math.pow(tf.math.sqrt(sigma), tf.math.divide_no_nan(tf.math.add(sigma, beta), tf.math.pow(tf.math.square(alpha), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.pow(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))), beta)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09549596905708313, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [0, 0, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 4, 4, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 1, 1, 1, 0, 0, 1, 1], [3, 0, 4, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [69, 9, 76, 58]], "fitness": -0.07028571516275406, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, sigma)", "other_info": {"loss": [2.3014906253860046, 2.301919785787905, 2.3018273824178594, 2.300158155655675, 2.3016705956709083, 2.300174165820685, 2.3011260596028316, 2.2990965417756883, 2.2990971395383974, 2.299683198826802, 2.3007510606843593, 2.3002332206635883, 2.3000189206540673, 2.300116649755413, 2.2996081581614543, 2.2998551096756854, 2.300540255612197], "accuracy": [0.08994849026203156, 0.08955223858356476, 0.09166556596755981, 0.09549596905708313, 0.09245806187391281, 0.09893012791872025, 0.09457138925790787, 0.09272222965955734, 0.1022322028875351, 0.1006472036242485, 0.09866596013307571, 0.09945846349000931, 0.1014397069811821, 0.0952318087220192, 0.10434553027153015, 0.09391097724437714, 0.09826971590518951], "val_loss": [1.9703594616481237, 1.9698481559753418, 1.969625745500837, 1.9695542199271066, 1.9694316046578544, 1.9695214544023787, 1.9693853514535087, 1.9693317413330078, 1.969280174800328, 1.969226905277797, 1.9692388943263464, 1.9694766998291016, 1.9697363036019462, 1.9700054441179549, 1.9702119827270508, 1.9704539435250419, 1.970646858215332], "val_accuracy": [0.041999999433755875, 0.050999999046325684, 0.057999998331069946, 0.0573333315551281, 0.06133333221077919, 0.06466666609048843, 0.07266666740179062, 0.07466666400432587, 0.08166666328907013, 0.0833333358168602, 0.0846666693687439, 0.08633333444595337, 0.08366666734218597, 0.08166666328907013, 0.08166666328907013, 0.07766667008399963, 0.07533333450555801]}}, {"genotype": [[0], [0, 1, 1], [0, 1, 1], [9, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 0, 4, 4, 2, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [62, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 0, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [31, 9, 76, 58]], "fitness": -0.07000000029802322, "mapping_values": [1, 1, 1, 1, 0, 1, 6, 6, 4, 2, 1, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.negative(sigma)), sigma)", "other_info": {"loss": [2.3014906253860046, 2.301919722805847, 2.3018265503304054, 2.3001576831957697, 2.30167035268613, 2.3001760282631105, 2.301129856413193, 2.299099650255142, 2.2991005270598572, 2.29968969007257, 2.300756593689612, 2.3002401663878844, 2.3000225418389606, 2.3001210085546746, 2.299615854915296, 2.2998634812507834, 2.300548262804601], "accuracy": [0.08994849026203156, 0.08955223858356476, 0.09166556596755981, 0.09549596905708313, 0.09245806187391281, 0.09893012791872025, 0.09457138925790787, 0.09259014576673508, 0.1022322028875351, 0.10051512718200684, 0.09893012791872025, 0.09972262382507324, 0.1014397069811821, 0.09536388516426086, 0.10421344637870789, 0.0940430611371994, 0.09826971590518951], "val_loss": [1.9703595297677177, 1.9698480197361536, 1.9696243831089564, 1.969552448817662, 1.9694322858537947, 1.9695243835449219, 1.9693872588021415, 1.9693358966282435, 1.969285351889474, 1.9692320142473494, 1.9692459787641252, 1.9694805826459612, 1.969738483428955, 1.9700110980442591, 1.9702209745134627, 1.9704621178763253, 1.9706536020551408], "val_accuracy": [0.041999999433755875, 0.050999999046325684, 0.057999998331069946, 0.05766666680574417, 0.06133333221077919, 0.06466666609048843, 0.07266666740179062, 0.07500000298023224, 0.08100000023841858, 0.0833333358168602, 0.0846666693687439, 0.08633333444595337, 0.08366666734218597, 0.08166666328907013, 0.08166666328907013, 0.07833333313465118, 0.07500000298023224]}}]