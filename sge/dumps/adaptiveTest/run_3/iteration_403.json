[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [4, 6, 9, 2, 9, 5, 5, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 2, 1, 2, 1, 1, 1, 1, 2, 2], [95, 67, 87], [1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 3, 2, 2, 3, 0, 0, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 1, 3, 1, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 9, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.8277142643928528, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.0981650305241484, 2.3497854676055807, 1.8856772099503625, 1.4449074363601426, 1.1739525899375671, 0.9594601838501484, 0.8878982388395376, 0.7515799485224742, 0.7189883978422591, 0.6911370524908526, 0.6637882171620656, 0.6324151327046011, 0.6112210986447639, 0.6089038485942846, 0.5744065084139023, 0.5458583552461684, 0.5451849839391647, 0.5308297520198086, 0.5271713209859196, 0.5297260278243714, 0.5249670459027178, 0.4772170094561347, 0.5128856608227118, 0.47511728511604856, 0.477330485012679, 0.46395251617817723, 0.43437596340346973, 0.4395448455540039, 0.4511891792416021, 0.44272688525212106, 0.4353213493637578, 0.4198466046863244, 0.4217521504380558, 0.39919952043862217, 0.40901271365715797, 0.3976866065581965, 0.4013418514911824, 0.40812054927149755, 0.39038721268612553, 0.39113804751918807, 0.3700995812554952, 0.35540297616427174, 0.3598562105968565, 0.361013959907758, 0.369117380814262, 0.3551249776053753], "accuracy": [0.2925637364387512, 0.29322415590286255, 0.3683793544769287, 0.5062739253044128, 0.5868445634841919, 0.6493197679519653, 0.6692643165588379, 0.7147008180618286, 0.7297582626342773, 0.7428345084190369, 0.7450799345970154, 0.7648923397064209, 0.7633073329925537, 0.7614582180976868, 0.7812706232070923, 0.793950617313385, 0.7954035401344299, 0.7993659973144531, 0.8025360107421875, 0.802800178527832, 0.7984414100646973, 0.8224804997444153, 0.8045172095298767, 0.8236692547798157, 0.8219521641731262, 0.8210275769233704, 0.8364813327789307, 0.8343679904937744, 0.830669641494751, 0.8342359066009521, 0.8400475382804871, 0.8436138033866882, 0.8430854678153992, 0.8500858545303345, 0.8490291833877563, 0.8519350290298462, 0.8500858545303345, 0.8446704745292664, 0.8524633646011353, 0.8540483713150024, 0.8628978729248047, 0.8705587387084961, 0.8640866279602051, 0.8661999702453613, 0.859199583530426, 0.8667283058166504], "val_loss": [1.871171270098005, 1.5738889149257116, 1.737468651362828, 0.8982911109924316, 0.8062137365341187, 0.8105239868164062, 0.6103536231177193, 0.5448524951934814, 0.5871170588902065, 0.5470298528671265, 0.512418236051287, 0.4907858542033604, 0.5647802523204258, 0.5188001223972866, 0.4915646825517927, 0.46220496722630094, 0.47996486936296734, 0.4436988489968436, 0.4711262157985142, 0.43123786790030344, 0.43870859486716135, 0.43963491916656494, 0.4452689800943647, 0.3940341132027762, 0.4587340865816389, 0.3919787321771894, 0.4114133375031607, 0.4047668661390032, 0.390648433140346, 0.39428368636540007, 0.38241297006607056, 0.3897311346871512, 0.40647233383996145, 0.379661534513746, 0.3706486736025129, 0.3997353996549334, 0.40893252406801495, 0.36330915348870413, 0.3660349590437753, 0.36527558735438753, 0.35645848512649536, 0.3811859573636736, 0.3729823998042515, 0.40890107836042133, 0.3909810015133449, 0.38652156932013376], "val_accuracy": [0.4036666750907898, 0.39933332800865173, 0.4183333218097687, 0.6396666765213013, 0.6796666383743286, 0.6579999923706055, 0.7233333587646484, 0.7546666860580444, 0.718666672706604, 0.7400000095367432, 0.7570000290870667, 0.7770000100135803, 0.75, 0.7553333044052124, 0.7720000147819519, 0.7896666526794434, 0.7766666412353516, 0.8056666851043701, 0.7873333096504211, 0.8180000185966492, 0.8073333501815796, 0.7990000247955322, 0.8040000200271606, 0.8330000042915344, 0.7919999957084656, 0.82833331823349, 0.8133333325386047, 0.8306666612625122, 0.8413333296775818, 0.8259999752044678, 0.8393333554267883, 0.8343333601951599, 0.8299999833106995, 0.8429999947547913, 0.8473333120346069, 0.8166666626930237, 0.8233333230018616, 0.8503333330154419, 0.8486666679382324, 0.8506666421890259, 0.8539999723434448, 0.8333333134651184, 0.8506666421890259, 0.8203333616256714, 0.8273333311080933, 0.8453333377838135]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [4, 6, 9, 2, 9, 5, 5, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 2, 1, 2, 1, 1, 1, 1, 2, 2], [95, 67, 87], [1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 9, 2, 2, 3, 0, 0, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 1, 3, 1, 3, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.8237142562866211, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.0981569705212895, 2.412915426490329, 2.0655477771890034, 1.6999203690038995, 1.8061739829521548, 1.217850298283831, 0.8875724155873576, 0.8044793818053978, 0.7235458327275005, 0.6906262006993937, 0.6778335279524681, 0.6250681832576425, 0.6261788918877227, 0.6049371864801668, 0.59838838659777, 0.567103250710688, 0.550552626996701, 0.5513863477803271, 0.5327396441869543, 0.5265446013589309, 0.5297801562619011, 0.49549778512188347, 0.5125790059550752, 0.4917696910669082, 0.4883896219235968], "accuracy": [0.2926958203315735, 0.29837536811828613, 0.2915070652961731, 0.4349491596221924, 0.42742040753364563, 0.5665037631988525, 0.6812838315963745, 0.7077004313468933, 0.7236824631690979, 0.7416457533836365, 0.7432307600975037, 0.7697794437408447, 0.7663452625274658, 0.7733456492424011, 0.7718927264213562, 0.7832518815994263, 0.7911768555641174, 0.7902522683143616, 0.8010830879211426, 0.8006868362426758, 0.7968564033508301, 0.8198388814926147, 0.8042530417442322, 0.8173292875289917, 0.8161405324935913], "val_loss": [1.8714002881731306, 1.5358918394361223, 1.4321397372654505, 1.7359920229230608, 1.020580530166626, 0.7270568779536656, 0.6477198941367013, 0.5735016209738595, 0.5229427133287702, 0.5446928569248745, 0.4956708124705723, 0.5281595502580915, 0.49607804843357634, 0.5431819132396153, 0.47111082077026367, 0.4471691846847534, 0.46600091457366943, 0.443139340196337, 0.4729571172169277, 0.4159846987043108, 0.44376959119524273, 0.4135285105024065, 0.44896187101091656, 0.40463186161858694, 0.4537827968597412], "val_accuracy": [0.4033333361148834, 0.40033334493637085, 0.3610000014305115, 0.390666663646698, 0.6156666874885559, 0.6753333210945129, 0.7146666646003723, 0.7279999852180481, 0.7526666522026062, 0.7353333234786987, 0.7770000100135803, 0.7516666650772095, 0.7766666412353516, 0.7486666440963745, 0.7910000085830688, 0.7990000247955322, 0.7923333048820496, 0.7996666431427002, 0.7910000085830688, 0.8293333053588867, 0.7986666560173035, 0.8146666884422302, 0.8066666722297668, 0.8166666626930237, 0.7896666526794434]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [4, 1, 9, 2, 9, 9, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 2, 1, 2, 1, 1, 1, 1, 2, 2], [11, 67, 98, 79], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 3, 2, 2, 3, 0, 0, 1, 9, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 1, 0, 3, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.8208571672439575, "mapping_values": [1, 7, 7, 6, 1, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, tf.math.subtract(tf.math.add(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.0981699093347683, 2.375673589547706, 2.0847862275552758, 1.8675305246598275, 1.7243131718158784, 1.3732406958581402, 1.1066060285085795, 0.9068377695976704, 0.8536850003959354, 0.7382070815338041, 0.7012133007634664, 0.6807237823783225, 0.6396339712692778, 0.6217635339907116, 0.6079659814280982, 0.5657447345457404, 0.5594417804645714, 0.5395056310031928, 0.5544689929228669, 0.5387725252296474, 0.5248301451342563, 0.4913251605551587, 0.5369866852274723, 0.49394145986627924, 0.5038347472690745, 0.47671418996330234, 0.45826712591993557, 0.4762706020961364, 0.4590391844113458, 0.4614607852683989, 0.4487566840080238, 0.43421063249090075, 0.4472380390162198, 0.42224344084480453, 0.4259212501037075, 0.41664663601576646, 0.41645579696441637, 0.40623221330402737, 0.4209840697556313, 0.40529479978579286, 0.4086987891918034, 0.3704165599058333, 0.395437519016708, 0.3748762423391308, 0.379038194651302, 0.37989067598703025], "accuracy": [0.2922995686531067, 0.2957337200641632, 0.2814687490463257, 0.38026681542396545, 0.4221371114253998, 0.5209351181983948, 0.5975432395935059, 0.6646413803100586, 0.6804913282394409, 0.724210798740387, 0.7320036888122559, 0.739928662776947, 0.7586844563484192, 0.7693831920623779, 0.7718927264213562, 0.7790252566337585, 0.7862898111343384, 0.7893276810646057, 0.7886672616004944, 0.7959318161010742, 0.796328067779541, 0.816008448600769, 0.7928939461708069, 0.8148196935653687, 0.8104609847068787, 0.8203672170639038, 0.8273676037788391, 0.817989706993103, 0.8286884427070618, 0.8230088353157043, 0.8274996876716614, 0.8381983637809753, 0.8380662798881531, 0.8436138033866882, 0.8393871188163757, 0.8413683772087097, 0.8432175517082214, 0.845859169960022, 0.8446704745292664, 0.8481045961380005, 0.8426892161369324, 0.8602562546730042, 0.8459912538528442, 0.8577466607093811, 0.8594637513160706, 0.8525954484939575], "val_loss": [1.8713701793125697, 1.5522240570613317, 1.3747807230268205, 1.8844782284327917, 1.310703992843628, 0.8335389409746442, 1.0515171119144984, 0.6872332096099854, 0.6075858558927264, 0.53645578452519, 0.5495932613100324, 0.5258073125566755, 0.509792685508728, 0.4998535599027361, 0.45966635431562153, 0.4596943514687674, 0.4914299760546003, 0.4591165440423148, 0.4537367139543806, 0.44201325518744333, 0.44704886845179964, 0.44537038462502615, 0.4323522789137704, 0.3950343642915998, 0.4137594529560634, 0.4021075367927551, 0.43401757308415007, 0.4058019093104771, 0.39433216197150095, 0.4175953269004822, 0.3798803261348179, 0.4597054719924927, 0.3902846234185355, 0.3716541699000767, 0.37737915345600676, 0.38248791864940096, 0.39577053274427143, 0.37790789774485994, 0.36263892480305265, 0.3763861996786935, 0.35779344184058054, 0.3914083753313337, 0.3505789041519165, 0.3676788466317313, 0.3822707108088902, 0.361196688243321], "val_accuracy": [0.4023333191871643, 0.4000000059604645, 0.4490000009536743, 0.37533333897590637, 0.5189999938011169, 0.6370000243186951, 0.5433333516120911, 0.6729999780654907, 0.7200000286102295, 0.7546666860580444, 0.7463333606719971, 0.7586666941642761, 0.7760000228881836, 0.7633333206176758, 0.7950000166893005, 0.7940000295639038, 0.7603333592414856, 0.7923333048820496, 0.7940000295639038, 0.8103333115577698, 0.7953333258628845, 0.7953333258628845, 0.8069999814033508, 0.8266666531562805, 0.8153333067893982, 0.8270000219345093, 0.8109999895095825, 0.8289999961853027, 0.8426666855812073, 0.8043333292007446, 0.8326666951179504, 0.7896666526794434, 0.8413333296775818, 0.843666672706604, 0.8446666598320007, 0.8289999961853027, 0.8209999799728394, 0.8373333215713501, 0.8450000286102295, 0.846666693687439, 0.8533333539962769, 0.8230000138282776, 0.8510000109672546, 0.840666651725769, 0.8353333473205566, 0.8456666469573975]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [4, 3, 9, 2, 6, 5, 9, 8, 0, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 2, 2, 1, 2, 1, 1, 1, 1, 2, 2], [95, 21, 98, 79], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 3, 2, 2, 4, 0, 0, 1, 5, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 3, 3, 1, 0, 3, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.8122857213020325, "mapping_values": [1, 10, 10, 7, 3, 2, 16, 16, 9, 7, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)), grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(alpha)))))))), tf.math.negative(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(grad)), tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.098160697736477, 2.3562421412626042, 1.935490452901578, 1.8059780292381242, 1.2611750718420207, 1.0080331834300067, 0.8724946514364436, 0.789639865977338, 0.7614291208358158, 0.7004035960854855, 0.6586953325987083, 0.6315283766669557, 0.6065883027123202, 0.5834063329417645, 0.6188407300674621, 0.5757204198235801, 0.5714361831701317, 0.5348573769119831, 0.5501548480427009, 0.523622815178496, 0.512078060938178, 0.4968894217992424, 0.5289660297632375, 0.4964392568142092, 0.4825593766566548, 0.48556983164272854, 0.4474447492547968, 0.4760354842846467, 0.45822166528573927, 0.4435102233222573, 0.460253252719041, 0.4280271116910342, 0.42645953297851236, 0.4199638022384182, 0.4300402779353057, 0.4093002059779005, 0.4040335750677456, 0.3903197472231846, 0.38405003514681607, 0.4162928673097124, 0.4009621515053296, 0.3733022667830725, 0.38080087824504544, 0.3641899228686465, 0.37914256663165624, 0.36605659163843735, 0.3655771626740903, 0.3549018553723245], "accuracy": [0.29243165254592896, 0.294148713350296, 0.34566107392311096, 0.39928674697875977, 0.54220050573349, 0.6244881749153137, 0.6800950765609741, 0.7037379741668701, 0.7140403985977173, 0.7351737022399902, 0.7466648817062378, 0.763439416885376, 0.7640998363494873, 0.7829877138137817, 0.7676661014556885, 0.7800818681716919, 0.7796856164932251, 0.7959318161010742, 0.7932901978492737, 0.8035926818847656, 0.8012151718139648, 0.81548011302948, 0.8001585006713867, 0.8115176558494568, 0.8170651197433472, 0.8138951063156128, 0.8321225643157959, 0.8189142942428589, 0.8305375576019287, 0.8325188159942627, 0.8290846943855286, 0.841500461101532, 0.8388587832450867, 0.841500461101532, 0.8366134166717529, 0.8430854678153992, 0.8498216867446899, 0.852331280708313, 0.8561616539955139, 0.839519202709198, 0.8486329317092896, 0.8602562546730042, 0.8499537706375122, 0.8667283058166504, 0.857218325138092, 0.8602562546730042, 0.8613129258155823, 0.869502067565918], "val_loss": [1.8712028775896346, 1.5722292491367884, 1.7872920036315918, 1.1205745083945138, 0.9663128512246268, 0.6748289210455758, 0.6614930970328194, 0.6047361407961164, 0.5259313923971993, 0.5037532533918109, 0.494177051952907, 0.48381645338875906, 0.5014578104019165, 0.602688193321228, 0.4860111474990845, 0.4769021613257272, 0.493916460445949, 0.45845346791403635, 0.45373857021331787, 0.423937235559736, 0.44746875762939453, 0.41461827073778423, 0.4654709781919207, 0.39562285797936575, 0.4314125691141401, 0.39929538113730295, 0.40828525168555124, 0.39870427336011616, 0.4023337704794748, 0.45020782947540283, 0.377228890146528, 0.40016335248947144, 0.4114669476236616, 0.4175095558166504, 0.3794828142438616, 0.36971562249319895, 0.39198856694357737, 0.366689784186227, 0.36820811884743826, 0.399019045489175, 0.3721040998186384, 0.37424382993153166, 0.3643133555139814, 0.39577947344098774, 0.38189790078571867, 0.38113422053200857, 0.36076784133911133, 0.3544046793665205], "val_accuracy": [0.4026666581630707, 0.39666667580604553, 0.351666659116745, 0.5173333287239075, 0.6140000224113464, 0.690666675567627, 0.6913333535194397, 0.7326666712760925, 0.765333354473114, 0.7739999890327454, 0.7753333449363708, 0.781333327293396, 0.7773333191871643, 0.7350000143051147, 0.7883333563804626, 0.7856666445732117, 0.765666663646698, 0.7933333516120911, 0.7886666655540466, 0.8109999895095825, 0.8019999861717224, 0.8166666626930237, 0.7916666865348816, 0.8320000171661377, 0.8050000071525574, 0.8296666741371155, 0.8276666402816772, 0.8389999866485596, 0.8293333053588867, 0.7950000166893005, 0.8426666855812073, 0.8236666917800903, 0.8293333053588867, 0.8196666836738586, 0.8433333039283752, 0.8460000157356262, 0.8289999961853027, 0.8399999737739563, 0.847000002861023, 0.8363333344459534, 0.8433333039283752, 0.8410000205039978, 0.8536666631698608, 0.8286666870117188, 0.8306666612625122, 0.8443333506584167, 0.8533333539962769, 0.8486666679382324]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [4, 3, 9, 2, 6, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 2, 2, 1, 2, 1, 1, 1, 1, 2, 2], [74, 67, 87], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 3, 2, 2, 3, 0, 0, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 1, 3, 1, 3, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.8097142577171326, "mapping_values": [1, 3, 3, 1, 2, 0, 11, 11, 5, 6, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, alpha))))), grad), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.0981672375729024, 2.356219640796557, 1.9405520482227676, 1.5574947432472783, 1.2265453170146043, 1.0015369065213182, 0.872797317437807, 0.8017383625620408, 0.7821413666076822, 0.7013069382039484, 0.6545546946114931, 0.6741378900476057, 0.6128883382915395, 0.5884312854750344, 0.5948961316169356, 0.556842265702541, 0.5547304146593084, 0.5442285775516358, 0.5361694644596818, 0.5299881377578837, 0.5143317935520616, 0.4849177353638133, 0.49161710013346255, 0.4765105675303185, 0.49530526242629647, 0.4627258150238387, 0.4426453285496926, 0.4516449482126668, 0.4565294484743557], "accuracy": [0.2925637364387512, 0.29282790422439575, 0.3590014576911926, 0.49385812878608704, 0.5699379444122314, 0.6404702067375183, 0.6691322326660156, 0.7043983340263367, 0.7069079279899597, 0.7321357727050781, 0.7514199018478394, 0.7512878179550171, 0.7642319202423096, 0.7781006693840027, 0.7700436115264893, 0.7887993454933167, 0.7884030938148499, 0.793422281742096, 0.7947431206703186, 0.800818920135498, 0.8031964302062988, 0.8207634687423706, 0.8152159452438354, 0.8245938420295715, 0.8113855719566345, 0.8230088353157043, 0.8342359066009521, 0.828292191028595, 0.8321225643157959], "val_loss": [1.8712034906659807, 1.5929012979779924, 1.5288081509726388, 1.0615979943956648, 0.9527903965541294, 0.6663939441953387, 0.6469075168882098, 0.6458025830132621, 0.6101820639201573, 0.5133808851242065, 0.54310371194567, 0.5253229481833321, 0.5026425123214722, 0.5265857321875436, 0.46517978395734516, 0.4772414820534842, 0.5267111744199481, 0.4329958643232073, 0.47491189411708284, 0.43188183648245676, 0.44782539776393343, 0.4511786018099104, 0.41109762872968403, 0.3951001933642796, 0.4196742262159075, 0.39896433694022043, 0.43241276911326815, 0.4108018023627145, 0.41455658844539095], "val_accuracy": [0.4023333191871643, 0.4009999930858612, 0.5533333420753479, 0.5956666469573975, 0.559333324432373, 0.7153333425521851, 0.7083333134651184, 0.699999988079071, 0.7176666855812073, 0.7806666493415833, 0.731333315372467, 0.7573333382606506, 0.7720000147819519, 0.7486666440963745, 0.8023333549499512, 0.784333348274231, 0.7459999918937683, 0.8073333501815796, 0.7933333516120911, 0.815666675567627, 0.7993333339691162, 0.7850000262260437, 0.8299999833106995, 0.8376666903495789, 0.8109999895095825, 0.828000009059906, 0.8033333420753479, 0.8286666870117188, 0.8243333101272583]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [4, 1, 9, 2, 9, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 2, 1, 2, 1, 1, 1, 1, 2, 2], [95, 67, 98, 79], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 3, 2, 2, 3, 0, 0, 1, 5, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 1, 0, 3, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.8071428537368774, "mapping_values": [1, 10, 10, 7, 3, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, tf.math.subtract(tf.math.add(alpha, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.subtract(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), grad))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.098158808904569, 2.3531779067359815, 2.067231178582856, 1.660087984298844, 1.59902278800068, 1.0308208869054978, 0.8114757889517861, 0.7527777246275693, 0.7007573861975664, 0.6781331884736603, 0.6492334029945668, 0.6028559777116606, 0.6186230241614656, 0.5791342260736468, 0.5772245827053107, 0.5409632023173458, 0.5373878952786435, 0.5501406209627241, 0.5335976744112227, 0.5105934329926298, 0.49758667952396207, 0.489544964068129, 0.48868987123649105, 0.47008806154507815, 0.4843248941083988, 0.4666155561983877, 0.42117111029610454, 0.4393617647033657, 0.45749308517060777, 0.4428692042567805, 0.45168714901758866, 0.42116926232774293, 0.419839789295524], "accuracy": [0.2925637364387512, 0.2926958203315735, 0.2879408299922943, 0.43864747881889343, 0.47946110367774963, 0.6165632009506226, 0.6915863156318665, 0.7113987803459167, 0.7334566116333008, 0.7432307600975037, 0.7478536367416382, 0.774270236492157, 0.7684586048126221, 0.7833839654922485, 0.7783648371696472, 0.791441023349762, 0.7980451583862305, 0.7903843522071838, 0.7943468689918518, 0.8117818236351013, 0.8087438941001892, 0.8136309385299683, 0.8156121969223022, 0.8183859586715698, 0.8186501264572144, 0.8238013386726379, 0.8429533839225769, 0.8352925777435303, 0.8276317715644836, 0.8318583965301514, 0.830669641494751, 0.8442742228507996, 0.8412362933158875], "val_loss": [1.8713244710649763, 1.5698942797524589, 1.3027738162449427, 1.026923418045044, 0.8702311515808105, 0.680086578641619, 0.5877736125673566, 0.5670798165457589, 0.5218914066042218, 0.6015692268099103, 0.49063801765441895, 0.48560643196105957, 0.5312595878328595, 0.5299853086471558, 0.4609606606619699, 0.4454959290368216, 0.4796751226697649, 0.44001495838165283, 0.4211511952536447, 0.4269761528287615, 0.47019539560590473, 0.42167190994535175, 0.4245549440383911, 0.39257820163454327, 0.43374704463141306, 0.389329126902989, 0.4025540351867676, 0.397084789616721, 0.40199170793805805, 0.4198622703552246, 0.3791601572717939, 0.3940692629132952, 0.3956134830202375], "val_accuracy": [0.4020000100135803, 0.39266666769981384, 0.4336666762828827, 0.5713333487510681, 0.652999997138977, 0.6763333082199097, 0.7293333411216736, 0.7260000109672546, 0.7566666603088379, 0.7279999852180481, 0.7789999842643738, 0.7916666865348816, 0.7639999985694885, 0.7506666779518127, 0.8040000200271606, 0.7979999780654907, 0.7766666412353516, 0.8003333210945129, 0.8166666626930237, 0.8199999928474426, 0.79666668176651, 0.8196666836738586, 0.8216666579246521, 0.8303333520889282, 0.8023333549499512, 0.8356666564941406, 0.8233333230018616, 0.8366666436195374, 0.82833331823349, 0.8029999732971191, 0.8349999785423279, 0.8296666741371155, 0.8343333601951599]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [4, 3, 9, 2, 9, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 2, 1, 2, 1, 1, 1, 1, 2, 2], [95, 29, 98], [1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 3, 2, 0, 4, 0, 5, 1, 9, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 2, 3, 3, 3, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.8062857389450073, "mapping_values": [1, 5, 5, 3, 2, 3, 16, 16, 10, 6, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.square(tf.math.add(beta, beta))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.0981686890888933, 2.372247581673399, 2.195206128721145, 2.15224501157969, 1.6289593007003689, 1.285806005436589, 0.9837765328368616, 0.8739345739499028, 0.7602266302560347, 0.776136152197294, 0.6609598344122776, 0.6682896468271243, 0.606982547404539, 0.5966842171066016, 0.5827808900673659, 0.5555938074554451, 0.5392956186625716, 0.543040946966401, 0.5317512606003061, 0.5530298836179901, 0.5179525298165953, 0.4851851865773219, 0.4783502470910069, 0.4714258686938164, 0.45301994860857203, 0.46631255095991647, 0.45485226164215575, 0.45476352095037104, 0.45962677020769016, 0.44373929943422424, 0.4349834884020788], "accuracy": [0.2922995686531067, 0.2945449650287628, 0.2067098170518875, 0.26799631118774414, 0.44591203331947327, 0.5300488471984863, 0.6472064256668091, 0.6734909415245056, 0.7098137736320496, 0.7160216569900513, 0.7474573850631714, 0.7534011602401733, 0.7685906887054443, 0.7711002230644226, 0.7775723338127136, 0.791969358921051, 0.7955356240272522, 0.789459764957428, 0.7969884872436523, 0.793950617313385, 0.8024039268493652, 0.8177255392074585, 0.8219521641731262, 0.8195747137069702, 0.8329150676727295, 0.8239334225654602, 0.8202351331710815, 0.8264430165290833, 0.8272355198860168, 0.8278959393501282, 0.8356888294219971], "val_loss": [1.8712951796395438, 1.5573509080069405, 1.9153426715305872, 1.8378170558384486, 1.63723509652274, 1.0363174165998186, 0.6447893381118774, 0.7289430924824306, 0.7093162366322109, 0.5499224151883807, 0.5255110093525478, 0.4845294100897653, 0.4942443370819092, 0.4804603031703404, 0.4545836789267404, 0.46905921186719624, 0.45758322307041716, 0.43984830379486084, 0.5571157251085553, 0.41290232964924406, 0.43460518973214285, 0.4251547711236136, 0.40383423226220266, 0.39619667189461844, 0.3919918877737863, 0.38740353073392597, 0.44055780342647005, 0.4245814766202654, 0.4021969267300197, 0.41116836241313387, 0.39933884143829346], "val_accuracy": [0.4026666581630707, 0.3943333327770233, 0.21833333373069763, 0.40299999713897705, 0.37166666984558105, 0.6143333315849304, 0.7153333425521851, 0.671999990940094, 0.7149999737739563, 0.7360000014305115, 0.7553333044052124, 0.7839999794960022, 0.7733333110809326, 0.7710000276565552, 0.7996666431427002, 0.7863333225250244, 0.800000011920929, 0.7973333597183228, 0.7513333559036255, 0.8240000009536743, 0.8063333630561829, 0.8133333325386047, 0.8259999752044678, 0.8309999704360962, 0.8349999785423279, 0.8370000123977661, 0.800000011920929, 0.8343333601951599, 0.8286666870117188, 0.8136666417121887, 0.8320000171661377]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [1, 3, 9, 2, 9, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 2, 2, 1, 2, 1, 1, 1, 1, 2, 2], [95, 67, 98], [1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 3, 2, 2, 5, 0, 9, 1, 5, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 1, 3, 3, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.805142879486084, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 10, 6, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, alpha), tf.math.square(grad)), tf.math.negative(tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))))), tf.math.subtract(alpha, tf.math.square(tf.math.add(tf.math.add(beta, grad), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.098173741446573, 2.372292095155858, 2.197073497634916, 2.15104511234156, 1.94721629298075, 1.4070324516724664, 1.0476504782203198, 0.8373184400290672, 0.6872659233960776, 0.6714093195149738, 0.6199586330198924, 0.6358569060586242, 0.5940253406373376, 0.5742296495331812, 0.5544960570884907, 0.5318935682445769, 0.5250952393466046, 0.5203722146177462, 0.5030643112505778, 0.4994744125760038, 0.49810275557869066, 0.4719389353162498, 0.4619738206910955, 0.4559077946517162, 0.488004592431456, 0.4518586793013253, 0.4244557832761479, 0.4424567134302243, 0.44655702552932713, 0.42514997437692764, 0.4390327977490164, 0.40268868586217504, 0.4194446978567771], "accuracy": [0.2922995686531067, 0.29612997174263, 0.20816272497177124, 0.25241050124168396, 0.3413023352622986, 0.5050851702690125, 0.6268656849861145, 0.6921146512031555, 0.733588695526123, 0.7442874312400818, 0.761590301990509, 0.7637035846710205, 0.778761088848114, 0.7864218950271606, 0.7905164361000061, 0.8030643463134766, 0.8063663840293884, 0.8034605979919434, 0.811649739742279, 0.816008448600769, 0.8124422430992126, 0.8234050869941711, 0.8273676037788391, 0.8269713521003723, 0.8161405324935913, 0.8305375576019287, 0.8355567455291748, 0.835160493850708, 0.8298771381378174, 0.8407079577445984, 0.8350284099578857, 0.8521991968154907, 0.8387266993522644], "val_loss": [1.871377399989537, 1.5504189559391566, 1.8984664508274622, 1.9387993131365096, 1.06717392376491, 0.9906767095838275, 0.8434854916163853, 0.5705866473061698, 0.5522458893912179, 0.5368412392480033, 0.4946854966027396, 0.4868308646338327, 0.49495651040758404, 0.4785045725958688, 0.443122182573591, 0.4558090993336269, 0.4468923807144165, 0.43955414635794504, 0.4392938528742109, 0.41180249622889925, 0.41791512284960064, 0.41835451126098633, 0.3940689819199698, 0.38135725259780884, 0.41020155804497854, 0.4036233425140381, 0.44118406091417584, 0.405327422278268, 0.3957075902393886, 0.4152561341013227, 0.37531337567738127, 0.37474589688437326, 0.3972277726445879], "val_accuracy": [0.40166667103767395, 0.390666663646698, 0.2523333430290222, 0.2213333398103714, 0.5986666679382324, 0.6083333492279053, 0.6223333477973938, 0.7250000238418579, 0.7526666522026062, 0.7423333525657654, 0.7763333320617676, 0.7773333191871643, 0.7773333191871643, 0.7743333578109741, 0.809333324432373, 0.7950000166893005, 0.7960000038146973, 0.8023333549499512, 0.8163333535194397, 0.8263333439826965, 0.8169999718666077, 0.8143333196640015, 0.8309999704360962, 0.8379999995231628, 0.8109999895095825, 0.8246666789054871, 0.8053333163261414, 0.8383333086967468, 0.8323333263397217, 0.8119999766349792, 0.8379999995231628, 0.8379999995231628, 0.8276666402816772]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [8, 3, 9, 2, 6, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 2, 1, 2, 1, 1, 1, 1, 2, 2], [96, 67, 98, 79], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 3, 2, 2, 4, 0, 0, 1, 5, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 1, 3, 1, 3, 3, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.7820000052452087, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.189763491321564, 1.9371196236734487, 1.504184039434847, 1.0926269001224493, 0.895692791653473, 0.8070406609396531, 0.7506885457709638, 0.7344881934087353, 0.6665079214978826, 0.6212777204485838, 0.6544701822634466, 0.6109298413235356, 0.6062375113255848, 0.5816856068296361, 0.5655316313842599, 0.5387810613926076, 0.5246952224511512, 0.5453963857427044, 0.5069728723181364], "accuracy": [0.24858011305332184, 0.36560559272766113, 0.49253731966018677, 0.5959582328796387, 0.6642451286315918, 0.6975300312042236, 0.7162858247756958, 0.7236824631690979, 0.7445515990257263, 0.7677981853485107, 0.7518161535263062, 0.7695152759552002, 0.7709681391716003, 0.7798177003860474, 0.7849689722061157, 0.8009510040283203, 0.8006868362426758, 0.7955356240272522, 0.8086118102073669], "val_loss": [1.8859271321977888, 1.3394406863621302, 0.8550228221075875, 0.7216830594199044, 0.6952347755432129, 0.7110602515084403, 0.6321091481617519, 0.5442823001316616, 0.5415804726736886, 0.5067841836384365, 0.4864135469709124, 0.5557275499616351, 0.47116502693721224, 0.46834027767181396, 0.46129991327013287, 0.4729238748550415, 0.5492758240018573, 0.4541545254843576, 0.4611011062349592], "val_accuracy": [0.3153333365917206, 0.460999995470047, 0.643666684627533, 0.6763333082199097, 0.6779999732971191, 0.6700000166893005, 0.7049999833106995, 0.7516666650772095, 0.7526666522026062, 0.7726666927337646, 0.7713333368301392, 0.7566666603088379, 0.7900000214576721, 0.7906666398048401, 0.7889999747276306, 0.7896666526794434, 0.7426666617393494, 0.7896666526794434, 0.7863333225250244]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [4, 6, 9, 2, 9, 5, 5, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 2, 1, 2, 1, 1, 1, 1, 2, 2], [95, 67, 87], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 3, 5, 9, 3, 0, 0, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 2, 3, 1, 3, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [5, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 6, 6, 4, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.add(beta, tf.math.multiply(tf.math.square(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3024394339605676, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [4, 1, 9, 2, 9, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 2, 1, 2, 1, 1, 1, 1, 2, 2], [35, 33, 98, 79], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 3, 2, 2, 3, 0, 0, 1, 5, 4, 5, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 1, 0, 3, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [8, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, tf.math.subtract(tf.math.add(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.negative(tf.math.sqrt(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [4, 1, 9, 2, 9, 4, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 2, 1, 2, 1, 1, 1, 1, 2, 2], [9, 67, 98], [1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 3, 2, 2, 3, 0, 0, 1, 5, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 1, 1, 1, 3, 3, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 7, 4, 5, 6], [2, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.negative(sigma))", "other_info": {"loss": [2.3044769052564194, 2.324307617872241, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08532558381557465, 0.07647603005170822, 0.09417514503002167, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.977226734161377, 2.0251342228480746, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.017999999225139618, 0.09833333641290665, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [4, 7, 9, 1, 9, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 2, 1, 2, 1, 1, 1, 1, 2, 2], [9, 67, 98], [1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 3, 1, 2, 9, 3, 0, 1, 9, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 0, 1, 3, 0, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [68, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 7, 5, 8, 6, 7, 4, 5, 6, 4, 5, 0, 7, 6, 2, 5, 3, 0], [2, 3, 2, 1, 0, 0, 2, 2, 1, 0, 3], [24, 9, 15, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 3, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07449477910995483, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [5, 3, 9, 2, 6, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 2, 1, 2, 1, 1, 1, 1, 2, 2], [95, 29, 98], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 3, 2, 2, 4, 0, 0, 1, 5, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 1, 3, 1, 3, 3, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6, 0, 0, 8, 5, 7, 2, 9], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 22, 22, 13, 9, 1, 1, 1, 0, 1, 0, 23, 16, 7, 4], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.subtract(alpha, tf.math.square(grad))))), tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad))))), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, alpha))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.sqrt(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.math.pow(sigma, beta), tf.math.square(alpha)), tf.math.divide_no_nan(tf.math.negative(tf.math.negative(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.square(tf.math.add(tf.math.add(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), beta)))))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [4, 1, 9, 2, 9, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 2, 1, 2, 1, 1, 1, 1, 2, 2], [78, 67, 98, 79], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 3, 2, 2, 3, 0, 0, 1, 5, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 1, 0, 3, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [0, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 7, 4, 5, 6], [2, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 4, 2, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.negative(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07436270266771317, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1], [6, 5, 8, 2, 5, 5, 6, 7, 8, 2, 5, 6, 5, 0, 2, 2, 2, 1, 8], [2, 0, 2, 1, 2, 1, 1, 1, 1, 2, 2], [95, 29, 98], [1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 3, 2, 0, 5, 0, 5, 1, 9, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 0, 3, 1, 3, 3, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [32, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.square(grad), tf.math.add(alpha, tf.math.sqrt(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3024394339605676, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [4, 1, 9, 2, 9, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 2, 0, 1, 2, 1, 1, 1, 1, 2, 2], [95, 67, 98, 79], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 3, 2, 2, 3, 0, 0, 1, 5, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 1, 0, 3, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [0, 1], [52], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [3, 6, 8, 8, 6, 7, 4, 5, 6, 3, 2, 7, 0, 3, 6, 3, 7, 3, 1, 4, 2, 4, 8], [0, 3, 2, 1, 0, 0, 2, 2, 2, 1, 0, 0, 2, 1, 3, 1, 2, 2, 0], [48, 9, 76, 58, 59, 3]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 42, 23, 19, 6], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.math.pow(sigma, beta), tf.math.square(alpha)), tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), beta), beta), tf.math.multiply(beta, alpha)), tf.math.subtract(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(tf.math.pow(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), beta), alpha), sigma)))), tf.math.sqrt(alpha))), beta), beta)))), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [4, 1, 6, 2, 9, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 2, 1, 2, 1, 1, 1, 1, 2, 2], [95, 67, 98, 79], [0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 3, 2, 2, 3, 0, 0, 1, 5, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 1, 0, 3, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [8, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3024394339605676, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [9, 3, 9, 2, 9, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 2, 1, 2, 1, 1, 1, 1, 2, 2], [95, 67, 19], [1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 3, 2, 0, 4, 1, 5, 1, 9, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 2, 1, 3, 3, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [8, 0, 8, 8, 6, 7, 4, 5, 6], [2, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 15, 15, 9, 6, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.subtract(tf.math.add(beta, alpha), tf.math.square(grad)))))))), tf.math.subtract(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [4, 1, 9, 9, 9, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 2, 1, 2, 1, 1, 1, 1, 2, 2], [95, 67, 98, 79], [1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 3, 2, 2, 3, 0, 0, 1, 5, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 1, 0, 3, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [3, 2, 8, 8, 6, 7, 4, 5, 6, 8, 1, 8, 9], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 20, 13, 7, 4], "tree_depth": 24, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.subtract(tf.math.add(alpha, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.sqrt(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.pow(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.sqrt(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), beta)))))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}]