[{"genotype": [[0], [0, 1, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 8, 0, 4, 1, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [23, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8174285888671875, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.sqrt(tf.math.negative(tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))))), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.0608610859982894, 1.5996712968019116, 1.1067463912984021, 0.9250349532800533, 0.8131517512435218, 0.7740818725569436, 0.7393090621969404, 0.746324023637065, 0.6635224199361175, 0.6941196118300507, 0.6473570121057345, 0.6211913821483411, 0.6261969264299012, 0.5983896311940833, 0.6003050833818478, 0.5846167546001328, 0.5761505965275803, 0.5494913183513839, 0.5353382752477344, 0.5404318632380113, 0.5238408758309319, 0.5145139302465469, 0.5061605432329239, 0.497162809536174, 0.49643266133707215, 0.47223492477863155, 0.4834800783346484, 0.46875119947754174, 0.47212165671253975, 0.4554192123671627, 0.45610442938286283], "accuracy": [0.30379077792167664, 0.4675736427307129, 0.5950337052345276, 0.6616035103797913, 0.6921146512031555, 0.713379979133606, 0.7161537408828735, 0.7218332886695862, 0.754589855670929, 0.7407211661338806, 0.7526086568832397, 0.7631752490997314, 0.7605336308479309, 0.7741381525993347, 0.772288978099823, 0.7750627398490906, 0.783119797706604, 0.793422281742096, 0.7969884872436523, 0.7959318161010742, 0.8050455451011658, 0.8043851256370544, 0.8103289008140564, 0.813498854637146, 0.8100647330284119, 0.8189142942428589, 0.8153480291366577, 0.8281601071357727, 0.8231409192085266, 0.8325188159942627, 0.830669641494751], "val_loss": [1.7802418981279646, 1.0446841716766357, 0.6752680540084839, 0.623814310346331, 0.6062106745583671, 0.6325157540185111, 0.5973131486347744, 0.554747496332441, 0.5618556908198765, 0.5357765640531268, 0.5063617059162685, 0.5269593341009957, 0.49565912996019634, 0.4805960144315447, 0.47744371209825787, 0.5228685310908726, 0.4494903939110892, 0.45600482395717074, 0.46943260942186626, 0.4312456931386675, 0.4506870337894985, 0.42932796478271484, 0.43722595487322125, 0.41793776409966604, 0.43198513984680176, 0.40939104557037354, 0.4043560879571097, 0.41622521196092876, 0.4365728071757725, 0.42090582847595215, 0.39645693983350483], "val_accuracy": [0.34933334589004517, 0.5490000247955322, 0.7006666660308838, 0.7120000123977661, 0.7126666903495789, 0.7020000219345093, 0.7426666617393494, 0.7396666407585144, 0.737333357334137, 0.7596666812896729, 0.7770000100135803, 0.750333309173584, 0.7803333401679993, 0.7883333563804626, 0.7883333563804626, 0.7486666440963745, 0.8066666722297668, 0.79666668176651, 0.7940000295639038, 0.8176666498184204, 0.7926666736602783, 0.8076666593551636, 0.7979999780654907, 0.8236666917800903, 0.8149999976158142, 0.82833331823349, 0.82833331823349, 0.8233333230018616, 0.8103333115577698, 0.8203333616256714, 0.8196666836738586]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 3, 0, 4, 1, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 0, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [33, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8142856955528259, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 8, 4, 3, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.multiply(tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.060810409217636, 1.6004664769907668, 1.1013974653904575, 0.9182672286786266, 0.8150804619101989, 0.7857311108581236, 0.7400566508442168, 0.7291427081948526, 0.6669441000534448, 0.6695768976995674, 0.6473187388146889, 0.624984477481444, 0.6155137709181905, 0.6064708380730018, 0.5927110919784231, 0.5867376884512221, 0.5748583137587534, 0.5443062180966403, 0.5346457195036353, 0.5379808578886738, 0.5168077310613906, 0.5161571481980195, 0.5078292860094866, 0.49303988757906275, 0.49192918283812453, 0.4711573108658736, 0.4837769631263429, 0.4637518306142855, 0.47342738915412436, 0.46183907368069455, 0.454981011650613, 0.4382869011619544], "accuracy": [0.3039228618144989, 0.4690265357494354, 0.5967507362365723, 0.6679434776306152, 0.6917183995246887, 0.7049266695976257, 0.7182670831680298, 0.7213049530982971, 0.7481178045272827, 0.7479857206344604, 0.7495707273483276, 0.7600052952766418, 0.7642319202423096, 0.7681944370269775, 0.776251494884491, 0.7757231593132019, 0.7825914621353149, 0.7951393723487854, 0.7980451583862305, 0.7950072884559631, 0.8064984679222107, 0.8029322624206543, 0.8112534880638123, 0.8168009519577026, 0.8142913579940796, 0.8211596608161926, 0.8162726163864136, 0.8293488025665283, 0.8248580098152161, 0.828820526599884, 0.8321225643157959, 0.8360850811004639], "val_loss": [1.7805230276925224, 1.0484672955104284, 0.664350117955889, 0.6149911539895194, 0.6154568535940987, 0.6149334226335798, 0.5500086205346244, 0.5405130216053554, 0.5275690044675555, 0.5599851608276367, 0.513585993221828, 0.5232950448989868, 0.5064046042306083, 0.4870276280811855, 0.47188879762377056, 0.5167175020490374, 0.44963502883911133, 0.45906548840659006, 0.4744441679545811, 0.43632311480385916, 0.44052073785236906, 0.44532843998500277, 0.43572152512414114, 0.4191574880055019, 0.4252060736928667, 0.41000698293958393, 0.40011259487697054, 0.4196575709751674, 0.4418871998786926, 0.42504940714154926, 0.3995123164994376, 0.40362028564725605], "val_accuracy": [0.34933334589004517, 0.5483333468437195, 0.7016666531562805, 0.7223333120346069, 0.7039999961853027, 0.7203333377838135, 0.7563333511352539, 0.7543333172798157, 0.7613333463668823, 0.7296666502952576, 0.7710000276565552, 0.7519999742507935, 0.7739999890327454, 0.7873333096504211, 0.7893333435058594, 0.7523333430290222, 0.809333324432373, 0.7923333048820496, 0.7900000214576721, 0.8153333067893982, 0.8026666641235352, 0.7943333387374878, 0.8016666769981384, 0.8216666579246521, 0.8203333616256714, 0.8296666741371155, 0.8336666822433472, 0.8233333230018616, 0.8080000281333923, 0.8143333196640015, 0.8180000185966492, 0.8253333568572998]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 4, 1, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [23, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.7965714335441589, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 6, 3, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.sqrt(tf.math.add(beta, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [1.9865416778218807, 1.5190715311446195, 1.096990587807067, 0.9371367527776941, 0.8494833975719376, 0.7893086620026482, 0.7524447868513062, 0.6950750948415693, 0.7126786078538846, 0.671214956656864, 0.6672201752820114, 0.6342660551766489, 0.6323931112092295, 0.6245301419623288, 0.6215880671669826, 0.5867232680714377, 0.5750884274371375, 0.5844274115379791, 0.550995838372872, 0.5308232775154588, 0.5441380060816549], "accuracy": [0.34486857056617737, 0.47430986166000366, 0.5970149040222168, 0.6519614458084106, 0.677189290523529, 0.703209638595581, 0.7189275026321411, 0.7401928305625916, 0.7339849472045898, 0.7491744756698608, 0.7445515990257263, 0.7611940503120422, 0.7588165402412415, 0.7549861073493958, 0.7631752490997314, 0.778761088848114, 0.789988100528717, 0.7798177003860474, 0.7951393723487854, 0.8058380484580994, 0.7955356240272522], "val_loss": [1.6234171049935477, 0.824818594115121, 0.8270541940416608, 0.6795432397297451, 0.6905524390084403, 0.602370194026402, 0.5465476342609951, 0.5616726194109235, 0.5752359798976353, 0.5898909398487636, 0.5294525793620518, 0.5218559844153268, 0.5130893162318638, 0.6124391385487148, 0.47448129313332693, 0.47452991349356516, 0.4820831503186907, 0.4723841292517526, 0.4533837693078177, 0.46350955963134766, 0.4686708620616368], "val_accuracy": [0.5053333044052124, 0.6456666588783264, 0.6290000081062317, 0.6856666803359985, 0.687333345413208, 0.7126666903495789, 0.753000020980835, 0.7453333139419556, 0.7456666827201843, 0.7236666679382324, 0.7513333559036255, 0.7580000162124634, 0.7680000066757202, 0.7206666469573975, 0.7886666655540466, 0.8013333082199097, 0.7866666913032532, 0.7850000262260437, 0.800000011920929, 0.7856666445732117, 0.7873333096504211]}}, {"genotype": [[0], [1, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 4, 1, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [23, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.7782857418060303, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.0465135852406604, 1.8468689822785338, 1.3491987707970432, 1.0003818805821425, 0.884674276673893, 0.8341087682246218, 0.7909762994677179, 0.7423076570907903, 0.7604947453634125, 0.6829942519229244, 0.6778726421642014, 0.6521936055140457, 0.6475686606965942, 0.6205828129623261, 0.6035172160448667, 0.5825056696076671, 0.58966606565675, 0.5756676279401042], "accuracy": [0.32360321283340454, 0.4209483563899994, 0.5443138480186462, 0.6416589617729187, 0.6724342703819275, 0.6791704893112183, 0.6996433734893799, 0.722757875919342, 0.7084929347038269, 0.7341170310974121, 0.7302865982055664, 0.7446836829185486, 0.7515519857406616, 0.7592127919197083, 0.7765156626701355, 0.7800818681716919, 0.7755910754203796, 0.7784969210624695], "val_loss": [1.769726344517299, 1.1976160321916853, 0.9268524987357003, 0.7312430313655308, 0.6558211871555873, 0.6341933182307652, 0.6114271538598197, 0.6090467146464756, 0.5847988298961094, 0.5313663482666016, 0.5443734952381679, 0.5486523764474052, 0.5049101454871041, 0.5205708401543754, 0.4954758201326643, 0.5013494491577148, 0.5000008685248238, 0.5031158924102783], "val_accuracy": [0.3253333270549774, 0.5690000057220459, 0.628000020980835, 0.6713333129882812, 0.7103333473205566, 0.7020000219345093, 0.7243333458900452, 0.7106666564941406, 0.7080000042915344, 0.7620000243186951, 0.7409999966621399, 0.7446666955947876, 0.7763333320617676, 0.7643333077430725, 0.7720000147819519, 0.7713333368301392, 0.7663333415985107, 0.750333309173584]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 8, 1, 1, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [23, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [1, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 2, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(beta, tf.math.add(beta, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07238145917654037, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1], [0, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 2, 0, 4, 3, 9, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [11, 73, 58, 7, 45, 13], [0], [1, 1, 1], [9], [0, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 4, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 9, 9, 6, 3, 2, 1, 1, 0, 1, 1, 5, 3, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(alpha), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.negative(beta)), tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.pow(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma), sigma)", "other_info": {"loss": [4028417220.3614707, 78889057600.68472, 366680240601.3853, 1010483577392.4882, 2184741183551.8394, 3986066061596.302], "accuracy": [0.09853387624025345, 0.1014397069811821, 0.09787346422672272, 0.10566636174917221, 0.09774138033390045, 0.09774138033390045], "val_loss": [15478970660.571428, 123806571373.71428, 417820461348.5714, 990356401590.8572, 1934252347977.1428, 3342320346258.2856], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [8, 4, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 8, 8, 4, 1, 6, 9, 5, 3, 2, 0, 2, 1, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 73, 25, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 23, 23, 14, 9, 2, 1, 1, 0, 1, 0, 5, 4, 1, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.sqrt(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))))), tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(grad)), tf.math.add(beta, tf.math.add(tf.math.subtract(grad, tf.math.add(beta, grad)), beta)))), tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(beta, grad))))))))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 2, 4, 1, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 1, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [23, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [1, 0, 0, 1, 1, 0, 0, 1, 1], [3, 5, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 9, 4, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))))), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, grad)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07238145917654037, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1], [0, 1, 1], [2, 4, 6, 9, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [15, 80, 61], [1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 6, 0, 4, 1, 9, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 73, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 2, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 9, 9, 7, 2, 2, 1, 0, 0, 0, 0, 9, 5, 4, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.add(sigma, sigma)), tf.math.sqrt(tf.math.divide_no_nan(beta, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 8, 1, 1, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [5, 0, 3, 0, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [23, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [6, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.09685714542865753, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 6, 3, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [3.3974780474606014e+22, 4.008438810986372e+22, 3.981863615061531e+22, 3.926254796331848e+22, 4.020617642112602e+22, 3.9635120245944936e+22], "accuracy": [0.09391097724437714, 0.09338264167308807, 0.09034473448991776, 0.08968432247638702, 0.09377889335155487, 0.09034473448991776], "val_loss": [2.3219207312091317e+22, 2.3219207312091317e+22, 2.3219207312091317e+22, 2.3219207312091317e+22, 2.3219207312091317e+22, 2.3219207312091317e+22], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 4, 1, 1, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [23, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 5, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.051428571343421936, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.square(sigma)), sigma)", "other_info": {"loss": [2.3021502840583508, 2.3035653203060567, 2.3034575103910417, 2.3041536787544747, 2.3028828980601177, 2.3011130100039128, 2.30142754998898, 2.3032050976081218, 2.302214077261886, 2.3023634287879893, 2.3014421295480423, 2.299541941061941, 2.301040876338416, 2.302554004716048, 2.3014554635109508, 2.300583896289302, 2.302618332448306, 2.3023093913477237, 2.3021429903581865, 2.3009187693073767, 2.3014421035364525, 2.3013983881941185, 2.300564376543605, 2.300534455877931, 2.3012290282130414, 2.302091115910726, 2.3000291729678786, 2.2996344627437812, 2.300594312986284, 2.2999843960944544, 2.300292176026332, 2.3006067373623167, 2.300587375827548, 2.301543318064867, 2.300281325729374, 2.3005966659014834, 2.300078423173436, 2.300586147173568, 2.3013963317669552, 2.3000559757697725, 2.299633735804872, 2.2996657413341084, 2.2987501709106306, 2.301090883462342, 2.2984624558341595, 2.29917797896179, 2.298162780307492, 2.2977937767140664, 2.299816700067849, 2.300632854415567, 2.2984867114212064, 2.298844955285873, 2.2992325069063204, 2.2985869591120545, 2.2980535638771666, 2.2992022495700573, 2.299061818476193, 2.299248968337773, 2.2987986315416227, 2.2970897408839246, 2.298972688000263, 2.3000490156225855, 2.2999397068605636, 2.2995313555730443, 2.2976416326894924, 2.299876927573683, 2.299280372671778, 2.2978722947447796, 2.297901207980951, 2.298289483989534, 2.299735370455102, 2.2971187126619186, 2.2973446859864355, 2.297183363208713, 2.2980134839851623, 2.2988629257989173, 2.298735987634675, 2.297642908044668, 2.2985619089748597, 2.298147216811235, 2.2982539234695465, 2.297667596570379, 2.2974164409093287, 2.29680213558518, 2.2983067709583067, 2.2973021755853367, 2.2975344302679144, 2.2967724430090275, 2.2961434621726515, 2.2972051844132686, 2.2975280099399433, 2.2965504692656062, 2.2964115537089946, 2.2974171020949696, 2.297893410959673, 2.296141760302982, 2.2980270011313855, 2.297058658608671, 2.2978136592049245, 2.2957152686713], "accuracy": [0.0878351628780365, 0.0878351628780365, 0.09113723784685135, 0.08981640636920929, 0.09642054885625839, 0.0886276587843895, 0.09047681838274002, 0.09021265059709549, 0.08796724677085876, 0.09021265059709549, 0.08994849026203156, 0.09932637959718704, 0.09549596905708313, 0.08757099509239197, 0.09338264167308807, 0.09496764093637466, 0.08836349099874496, 0.09351472556591034, 0.09589222073554993, 0.08915598690509796, 0.09087307006120682, 0.09272222965955734, 0.09047681838274002, 0.09628847241401672, 0.09325055778026581, 0.10157178342342377, 0.09945846349000931, 0.09985470771789551, 0.09642054885625839, 0.09377889335155487, 0.09840179979801178, 0.09813763201236725, 0.09417514503002167, 0.09655263274908066, 0.09708096832036972, 0.09496764093637466, 0.09932637959718704, 0.09589222073554993, 0.09219389408826828, 0.10011887550354004, 0.09932637959718704, 0.1006472036242485, 0.09774138033390045, 0.09219389408826828, 0.10315678268671036, 0.09826971590518951, 0.10302469879388809, 0.1022322028875351, 0.09879804402589798, 0.09206181764602661, 0.10355303436517715, 0.1006472036242485, 0.10157178342342377, 0.0936468094587326, 0.1010434553027153, 0.09919429570436478, 0.10210011899471283, 0.09589222073554993, 0.09813763201236725, 0.10051512718200684, 0.1010434553027153, 0.10381719470024109, 0.09787346422672272, 0.09589222073554993, 0.10328886657953262, 0.09879804402589798, 0.10091137140989304, 0.10276053100824356, 0.1002509593963623, 0.09747721254825592, 0.10500594228506088, 0.10077928751707077, 0.10460969805717468, 0.1026284471154213, 0.1002509593963623, 0.10593052208423615, 0.10460969805717468, 0.10527011007070541, 0.09734513610601425, 0.10210011899471283, 0.10249637067317963, 0.10896842926740646, 0.10381719470024109, 0.10896842926740646, 0.10513802617788315, 0.09853387624025345, 0.10659094154834747, 0.10474177449941635, 0.10342095047235489, 0.10976093262434006, 0.10196803510189056, 0.10593052208423615, 0.1026284471154213, 0.10857218503952026, 0.10117553919553757, 0.11200633645057678, 0.10011887550354004, 0.108440101146698, 0.10051512718200684, 0.109232597053051], "val_loss": [1.9711096627371651, 1.9710288728986467, 1.9709548950195312, 1.970876693725586, 1.9708044188363212, 1.9707415444510323, 1.9706711087908064, 1.9706024442400252, 1.9705305099487305, 1.9704668862479073, 1.970400333404541, 1.9703315326145716, 1.9702655928475517, 1.970191274370466, 1.9701224054609026, 1.9700495174952917, 1.9699761526925224, 1.9699091911315918, 1.969834872654506, 1.9697625977652413, 1.9696952274867467, 1.9696219308035714, 1.9695597376142229, 1.9694863046918596, 1.9694159371512276, 1.9693434579031808, 1.9692773818969727, 1.9692134857177734, 1.9691486358642578, 1.9690872601100378, 1.9690265655517578, 1.968963623046875, 1.9689055170331682, 1.9688547679356165, 1.9687995910644531, 1.9687468664986747, 1.9686923708234514, 1.968635014125279, 1.96857636315482, 1.9685258184160506, 1.9684714589800154, 1.9684151921953474, 1.9683630125863212, 1.9683067458016532, 1.9682514326913017, 1.9682015010288783, 1.9681481633867537, 1.968092782156808, 1.96804564339774, 1.9679958479745048, 1.9679452351161413, 1.9678922380719865, 1.9678436006818498, 1.9677978243146623, 1.9677485738481795, 1.9677034786769323, 1.9676574298313685, 1.967608860560826, 1.9675631523132324, 1.96751070022583, 1.9674600873674666, 1.9674103600638253, 1.967362608228411, 1.9673168318612235, 1.9672701018197196, 1.9672224181038993, 1.9671739169529505, 1.9671260969979423, 1.967081138065883, 1.9670307295663017, 1.9669854981558663, 1.966937746320452, 1.966890607561384, 1.9668457848685128, 1.966799259185791, 1.9667485782078333, 1.9666970116751534, 1.9666525295802526, 1.9666105679103307, 1.9665650640215193, 1.9665137018476213, 1.9664675848824638, 1.9664178575788225, 1.9663734436035156, 1.9663280759538924, 1.9662867273603166, 1.9662369319370814, 1.9661882264273507, 1.966146741594587, 1.9660993303571428, 1.966050488608224, 1.9660019193376814, 1.9659578459603446, 1.9659154755728585, 1.9658747400556291, 1.9658334595816476, 1.9657932009015764, 1.9657528059823173, 1.965710231236049, 1.9656688826424735], "val_accuracy": [0.03700000047683716, 0.03799999877810478, 0.038333334028720856, 0.039000000804662704, 0.039000000804662704, 0.03933333232998848, 0.03966666758060455, 0.03999999910593033, 0.0403333343565464, 0.0403333343565464, 0.0403333343565464, 0.04100000113248825, 0.0416666679084301, 0.0416666679084301, 0.0416666679084301, 0.04266666620969772, 0.0430000014603138, 0.04333333298563957, 0.043666668236255646, 0.04399999976158142, 0.04466666653752327, 0.04500000178813934, 0.04533333331346512, 0.04533333331346512, 0.04600000008940697, 0.04600000008940697, 0.046666666865348816, 0.04699999839067459, 0.04699999839067459, 0.04766666516661644, 0.04800000041723251, 0.04833333194255829, 0.04866666719317436, 0.04866666719317436, 0.04899999871850014, 0.04933333396911621, 0.05000000074505806, 0.05000000074505806, 0.050333332270383835, 0.050999999046325684, 0.050999999046325684, 0.050999999046325684, 0.05133333429694176, 0.05233333259820938, 0.052666667848825455, 0.05299999937415123, 0.05299999937415123, 0.0533333346247673, 0.05366666615009308, 0.054666668176651, 0.055666666477918625, 0.05666666850447655, 0.05700000002980232, 0.05700000002980232, 0.0573333315551281, 0.05766666680574417, 0.057999998331069946, 0.05900000035762787, 0.05900000035762787, 0.059333331882953644, 0.05966666713356972, 0.060333333909511566, 0.061000000685453415, 0.061000000685453415, 0.061000000685453415, 0.061000000685453415, 0.06133333221077919, 0.061666667461395264, 0.06199999898672104, 0.06266666948795319, 0.06333333253860474, 0.06333333253860474, 0.06366666406393051, 0.06400000303983688, 0.06433333456516266, 0.06499999761581421, 0.06599999964237213, 0.06666667014360428, 0.0676666647195816, 0.0676666647195816, 0.06800000369548798, 0.06833333522081375, 0.06833333522081375, 0.06833333522081375, 0.06833333522081375, 0.06833333522081375, 0.0689999982714653, 0.06966666877269745, 0.06933332979679108, 0.06966666877269745, 0.06966666877269745, 0.06966666877269745, 0.07100000232458115, 0.0716666653752327, 0.07233333587646484, 0.07233333587646484, 0.07233333587646484, 0.07266666740179062, 0.0729999989271164, 0.07333333045244217]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 4, 1, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [23, 73, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [1, 0, 0, 1, 1, 0, 0, 1, 1], [3, 2, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302185644421359, 2.30369019942938, 2.303658658046418, 2.304440800099089, 2.3032492488807677, 2.301527303491113], "accuracy": [0.0874389111995697, 0.08757099509239197, 0.09060890227556229, 0.08902391046285629, 0.09549596905708313, 0.08717474341392517], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 1, 0, 4, 4, 9, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [23, 73, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 2, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 6, 3, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.subtract(tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma), sigma)", "other_info": {"loss": [2.302185644421359, 2.30369019942938, 2.303658658046418, 2.304440800099089, 2.3032492488807677, 2.301527303491113], "accuracy": [0.0874389111995697, 0.08757099509239197, 0.09060890227556229, 0.08902391046285629, 0.09549596905708313, 0.08717474341392517], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0], [0, 1, 1], [2, 4, 6, 9, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 6, 0, 4, 1, 9, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 73, 20, 7, 45, 13], [1], [0, 1, 1], [2], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [22, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302185644421359, 2.30369019942938, 2.303658658046418, 2.304440800099089, 2.3032492488807677, 2.301527303491113], "accuracy": [0.0874389111995697, 0.08757099509239197, 0.09060890227556229, 0.08902391046285629, 0.09549596905708313, 0.08717474341392517], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 1, 1], [0, 1, 1], [2, 4, 6, 9, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 6, 0, 4, 1, 9, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [26, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 5, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.03799999877810478, "mapping_values": [1, 3, 3, 1, 2, 1, 13, 13, 9, 4, 2, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))), grad), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.square(sigma))", "other_info": {"loss": [2.3022197273507836, 2.3038053891095407, 2.303847866885934, 2.3047116100355116, 2.3036016007424536, 2.3019329198142713], "accuracy": [0.08757099509239197, 0.0870426595211029, 0.08942015469074249, 0.08809932321310043, 0.0936468094587326, 0.08585391938686371], "val_loss": [1.9712621825081962, 1.9713377952575684, 1.9714078222002303, 1.9714851379394531, 1.9715592520577567, 1.9716243062700545], "val_accuracy": [0.035999998450279236, 0.03566666692495346, 0.03566666692495346, 0.03466666489839554, 0.03466666489839554, 0.03466666489839554]}}, {"genotype": [[0], [1, 1, 1], [0, 1, 1], [2, 4, 6, 9, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 6, 0, 4, 1, 9, 4, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 3, 0, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [74, 9, 76, 58]], "fitness": -0.03514285758137703, "mapping_values": [1, 3, 3, 1, 2, 1, 19, 19, 13, 6, 4, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(beta, beta), tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.negative(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))))))), tf.math.multiply(grad, tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.negative(sigma))", "other_info": {"loss": [2.302546431155111, 2.3049181224710638, 2.305746400990837, 2.3074249308327515, 2.3071361435182407, 2.3062393842293303], "accuracy": [0.08625016361474991, 0.08479725569486618, 0.08638224750757217, 0.08400475233793259, 0.0878351628780365, 0.07740060985088348], "val_loss": [1.9720054353986467, 1.9728193964276994, 1.9736252512250627, 1.9744460242135184, 1.9752722467694963, 1.9760908399309431], "val_accuracy": [0.03233333304524422, 0.029999999329447746, 0.02566666714847088, 0.022333333268761635, 0.020666666328907013, 0.018333332613110542]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 4, 1, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [23, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.034285712987184525, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.negative(beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(sigma))", "other_info": {"loss": [2.3026116361014672, 2.3056891674945668, 2.3077184418645658, 2.3110741564720816, 2.3128578763328695, 2.3134652357122856], "accuracy": [0.0870426595211029, 0.08492933213710785, 0.08083476126194, 0.08268392831087112, 0.0820235088467598, 0.07277770340442657], "val_loss": [1.9721215793064661, 1.9736840384347099, 1.9753374372209822, 1.977433477129255, 1.979863507407052, 1.9820896557399206], "val_accuracy": [0.028999999165534973, 0.02199999988079071, 0.020666666328907013, 0.01966666616499424, 0.017666665837168694, 0.020666666328907013]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0], [1, 1, 1], [8, 4, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 8, 1, 1, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [5, 0, 3, 0, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [62, 9, 76, 58]], "fitness": -0.034285712987184525, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 1, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(sigma), sigma)", "other_info": {"loss": [2.3026116361014672, 2.3056891989855957, 2.307719148082378, 2.3110760506889556, 2.312857530026026, 2.313466868774057], "accuracy": [0.0870426595211029, 0.08492933213710785, 0.08083476126194, 0.08268392831087112, 0.08215559273958206, 0.07277770340442657], "val_loss": [1.9721217155456543, 1.9736853327069963, 1.9753399576459612, 1.9774319784981864, 1.9798617362976074, 1.9820916993277413], "val_accuracy": [0.028999999165534973, 0.02199999988079071, 0.020666666328907013, 0.019333332777023315, 0.017666665837168694, 0.020666666328907013]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 4, 1, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [23, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.034285712987184525, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(sigma))", "other_info": {"loss": [2.3026116361014672, 2.305689181004218, 2.3077182394087417, 2.31107451638305, 2.3128578945031935, 2.3134655011501675], "accuracy": [0.0870426595211029, 0.08492933213710785, 0.08083476126194, 0.08268392831087112, 0.0820235088467598, 0.07277770340442657], "val_loss": [1.9721215793064661, 1.9736841065543038, 1.9753375734601701, 1.9774349076407296, 1.9798634392874581, 1.9820914949689592], "val_accuracy": [0.028999999165534973, 0.02199999988079071, 0.020666666328907013, 0.019333332777023315, 0.017666665837168694, 0.020666666328907013]}}, {"genotype": [[0], [1, 1, 1], [0, 1, 1], [8, 4, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [5, 6, 0, 4, 1, 9, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 2, 3, 0, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [36, 9, 76, 58]], "fitness": -0.034285712987184525, "mapping_values": [1, 2, 2, 1, 1, 0, 9, 9, 7, 2, 2, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(alpha), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.divide_no_nan(tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(sigma), sigma)", "other_info": {"loss": [2.3026116361014672, 2.3056891674945668, 2.307718500280424, 2.311075690494568, 2.3128606430716787, 2.313468339814486], "accuracy": [0.0870426595211029, 0.08492933213710785, 0.08083476126194, 0.08268392831087112, 0.0820235088467598, 0.07277770340442657], "val_loss": [1.9721215793064661, 1.9736841065543038, 1.9753387996128626, 1.9774356569562639, 1.9798648016793388, 1.9820934704371862], "val_accuracy": [0.028999999165534973, 0.02199999988079071, 0.020666666328907013, 0.019333332777023315, 0.017666665837168694, 0.020666666328907013]}}]