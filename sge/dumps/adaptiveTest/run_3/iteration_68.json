[{"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1], [2, 1, 2, 2, 3, 0, 4, 9, 9, 9], [2, 0, 3, 4, 0, 3], [61, 3, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [45]], "fitness": -0.8134285807609558, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 8, 6, 3, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), grad)), tf.math.add(beta, tf.math.add(grad, tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.math.pow(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.1229803045396523, 1.9353087878954676, 1.4025586502600214, 0.9969686034994512, 0.8995998924072345, 0.7790330727937089, 0.7489970821620073, 0.7851620107877366, 0.6930401312157053, 0.688075317391441, 0.6672851871175064, 0.6131112363045289, 0.6330711007622082, 0.6084177466809332, 0.5947782727217457, 0.5765448097130248, 0.5652994693640343, 0.5651734109489185, 0.5306201528060579, 0.5097168085440007, 0.5145888366262753, 0.49863152488772866, 0.5165898907438103, 0.4981571037094465, 0.4830859215929366, 0.4817949906395033, 0.46472647107115134, 0.469005889459419, 0.46155387127734826, 0.45274729605332625, 0.44621190138229083, 0.4401332346825568, 0.42458725240897854, 0.43298517238226203], "accuracy": [0.29560163617134094, 0.4235900044441223, 0.5140668153762817, 0.6317527294158936, 0.6651697158813477, 0.7092854380607605, 0.7132478952407837, 0.7062475085258484, 0.7342491149902344, 0.737947404384613, 0.7466648817062378, 0.767930269241333, 0.7569673657417297, 0.7683265209197998, 0.7697794437408447, 0.7774402499198914, 0.7864218950271606, 0.7800818681716919, 0.798309326171875, 0.8072909712791443, 0.8057059645652771, 0.8123101592063904, 0.8059701323509216, 0.8103289008140564, 0.8170651197433472, 0.8190463781356812, 0.8248580098152161, 0.8226125836372375, 0.8239334225654602, 0.8301413059234619, 0.8343679904937744, 0.833179235458374, 0.8428213000297546, 0.837537944316864], "val_loss": [1.6236157076699393, 1.5012987681797572, 0.782545907156808, 0.777897868837629, 0.6646687132971627, 0.6196817840848651, 0.5642837626593453, 0.5379405532564435, 0.5953554936817714, 0.5357592446463448, 0.5250317880085537, 0.49097464765821186, 0.4968205690383911, 0.5376350198473249, 0.4871441296168736, 0.46203012125832693, 0.4641651085444859, 0.4655670779091971, 0.43490876470293316, 0.44028525693076, 0.43021449872425627, 0.4511993442262922, 0.4363610403878348, 0.4244934150150844, 0.44187421458108084, 0.40866834776742117, 0.39652798005512785, 0.4313375949859619, 0.4008425644465855, 0.4045427271298, 0.39674757208142963, 0.38237160444259644, 0.39178469351359774, 0.3912689600672041], "val_accuracy": [0.47966668009757996, 0.5389999747276306, 0.6743333339691162, 0.6700000166893005, 0.6976666450500488, 0.7083333134651184, 0.7400000095367432, 0.7546666860580444, 0.7269999980926514, 0.753000020980835, 0.7636666893959045, 0.7736666798591614, 0.777999997138977, 0.7516666650772095, 0.7753333449363708, 0.7916666865348816, 0.796999990940094, 0.7976666688919067, 0.8166666626930237, 0.7976666688919067, 0.8149999976158142, 0.7860000133514404, 0.8026666641235352, 0.8253333568572998, 0.7979999780654907, 0.8343333601951599, 0.8356666564941406, 0.8019999861717224, 0.8399999737739563, 0.8236666917800903, 0.8256666660308838, 0.8306666612625122, 0.8246666789054871, 0.8386666774749756]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1], [2, 1, 2, 2, 3, 0, 4, 9, 9, 9], [2, 0, 3, 4, 0], [39, 35, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [45]], "fitness": -0.8005714416503906, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 10, 4, 4, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.pow(tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.1229690340264065, 1.9508082628596524, 1.4324567316073185, 1.0263886802531252, 0.8672079555173638, 0.8102003281552006, 0.7243966391026431, 0.7018789441405097, 0.67550345113359, 0.6845753184241579, 0.6328468907306128, 0.6184814912988493, 0.6225150907989097, 0.6222738538829484, 0.5662181162090979, 0.5907251694261941, 0.5550078627865124, 0.5489218702027826, 0.5175066140932162, 0.5090144114676342, 0.5118964205580522, 0.48668982028142416, 0.4906549068127704, 0.49859506232690315, 0.4850339605831561, 0.48026690837682245, 0.4562036364920277, 0.4703568673412546, 0.4363460043055774, 0.44415801147491296, 0.44063453981117756, 0.43461578438042997, 0.4218649039171186, 0.43134220968525977], "accuracy": [0.29560163617134094, 0.41883501410484314, 0.505349338054657, 0.6210539937019348, 0.6795667409896851, 0.696209192276001, 0.7226257920265198, 0.7284374833106995, 0.7312111854553223, 0.7388719916343689, 0.7597411274909973, 0.7646281719207764, 0.7593448758125305, 0.7625148296356201, 0.7852331399917603, 0.7733456492424011, 0.7878747582435608, 0.7865539789199829, 0.8009510040283203, 0.8076872229576111, 0.8076872229576111, 0.8181217908859253, 0.8166688680648804, 0.8061022162437439, 0.819970965385437, 0.8204993009567261, 0.8294808864593506, 0.8226125836372375, 0.8355567455291748, 0.8334434032440186, 0.8338396549224854, 0.8364813327789307, 0.8407079577445984, 0.8383304476737976], "val_loss": [1.6233623708997453, 1.5805331298283167, 0.8555226836885724, 0.7103894438062396, 0.6461789608001709, 0.5944756099155971, 0.5454680919647217, 0.5611296381269183, 0.5353325094495501, 0.5160072531018939, 0.525902271270752, 0.5427969012941632, 0.49727741309574675, 0.549567426953997, 0.511083858353751, 0.45276977334703716, 0.45152054514203754, 0.4570550407682146, 0.42872622183391024, 0.43219453947884695, 0.42952444723674227, 0.41849530594689505, 0.43985930510929655, 0.4350165384156363, 0.4452917405537197, 0.4073819943836757, 0.39312614713396343, 0.41060183729444233, 0.39894700050354004, 0.4044960481779916, 0.3955890451158796, 0.37965684277670725, 0.3947587013244629, 0.3890816739627293], "val_accuracy": [0.47966668009757996, 0.5196666717529297, 0.6633333563804626, 0.6996666789054871, 0.6953333616256714, 0.7279999852180481, 0.7519999742507935, 0.7363333106040955, 0.762333333492279, 0.7636666893959045, 0.7633333206176758, 0.7443333268165588, 0.7673333287239075, 0.753000020980835, 0.765333354473114, 0.7913333177566528, 0.8053333163261414, 0.7976666688919067, 0.8180000185966492, 0.8069999814033508, 0.812333345413208, 0.8213333487510681, 0.7950000166893005, 0.8136666417121887, 0.7960000038146973, 0.8296666741371155, 0.8386666774749756, 0.8196666836738586, 0.8396666646003723, 0.824999988079071, 0.8273333311080933, 0.8376666903495789, 0.8180000185966492, 0.8396666646003723]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [3, 1, 4, 2, 3, 0, 4, 6, 9, 4, 4, 2, 6, 9, 6, 8, 5, 4, 6, 4, 5, 0, 4, 6], [3, 0, 1, 1, 0, 0, 1, 2, 1, 5, 1, 2, 2, 4, 4, 0], [93, 10, 11, 23, 28, 28], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [45]], "fitness": -0.797428548336029, "mapping_values": [1, 1, 1, 0, 1, 0, 40, 40, 24, 16, 6, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.pow(tf.math.divide_no_nan(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), alpha), tf.math.add(beta, alpha))))), tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))), tf.math.pow(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.divide_no_nan(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.square(beta))), tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, grad))))))), alpha)))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.negative(tf.math.pow(beta, beta)))), tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.0968122874363115, 1.696220569984709, 1.2557950581793835, 0.961580102359614, 0.9308785358518894, 0.8127891063579967, 0.8136718353622421, 0.7443436173211156, 0.6819188842573785, 0.6988293633579404, 0.6586270942475109, 0.6711666268238601, 0.6086473917885542, 0.632731353846114, 0.5861521872310842, 0.6006476032955929, 0.5679912833395321, 0.5530253302041708, 0.5386328035814257], "accuracy": [0.2958658039569855, 0.44789329171180725, 0.5737683176994324, 0.6453573107719421, 0.6536785364151001, 0.6913221478462219, 0.6942279934883118, 0.713908314704895, 0.7404569983482361, 0.7353057861328125, 0.7526086568832397, 0.7450799345970154, 0.770439863204956, 0.7597411274909973, 0.7758552432060242, 0.7683265209197998, 0.7852331399917603, 0.7944789528846741, 0.7944789528846741], "val_loss": [1.5620105266571045, 0.9527943134307861, 0.726756044796535, 0.6543887853622437, 0.636854887008667, 0.586272120475769, 0.6001681770597186, 0.5544756140027728, 0.52205000604902, 0.5250645535332816, 0.5446072135652814, 0.4827479124069214, 0.5416218723569598, 0.460014888218471, 0.479155387197222, 0.4921594687870571, 0.45805794852120535, 0.46100122588021414, 0.4635042292731149], "val_accuracy": [0.44066667556762695, 0.5973333120346069, 0.6916666626930237, 0.7146666646003723, 0.7076666951179504, 0.7393333315849304, 0.7296666502952576, 0.749666690826416, 0.7570000290870667, 0.7559999823570251, 0.749666690826416, 0.7886666655540466, 0.7336666584014893, 0.7979999780654907, 0.7826666831970215, 0.7756666541099548, 0.7953333258628845, 0.7789999842643738, 0.7910000085830688]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [2, 9, 8, 8, 6, 4, 7, 2, 4, 4, 0, 3, 7, 2, 2, 0, 2], [1, 0, 3, 0, 2, 3, 0, 1, 4, 3, 3, 2], [39, 17, 95, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [45, 67]], "fitness": -0.7934285998344421, "mapping_values": [1, 1, 1, 0, 1, 0, 29, 29, 17, 12, 4, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.pow(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))), tf.math.negative(beta))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(tf.math.add(beta, tf.math.negative(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), alpha), tf.math.add(beta, grad)), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)))))))), tf.math.add(beta, beta)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.0184478343454226, 1.5256625539228947, 1.158902704802329, 0.9280818671818659, 0.8332273279277482, 0.8103984966096688, 0.741916337804929, 0.7569605937062033, 0.6814531293826694, 0.6593261999602741, 0.635454327344359, 0.6287835139592782, 0.6072841615740492, 0.6015744333442932, 0.5700343712493177, 0.55856115160491, 0.5863768563940068, 0.5449373225462891, 0.528480505505573, 0.5274273177037827, 0.5214180704420269, 0.5144070359804311], "accuracy": [0.3273015320301056, 0.4773477613925934, 0.5949016213417053, 0.6519614458084106, 0.6984546184539795, 0.6959450244903564, 0.7194558382034302, 0.7172104120254517, 0.7450799345970154, 0.7481178045272827, 0.759080708026886, 0.7625148296356201, 0.769911527633667, 0.7777044177055359, 0.7913089394569397, 0.7903843522071838, 0.7880068421363831, 0.798309326171875, 0.8037247657775879, 0.7997622489929199, 0.8034605979919434, 0.8053097128868103], "val_loss": [1.417104755129133, 1.1625309671674455, 0.8424805232456752, 0.6183995349066598, 0.6304223878043038, 0.6034285000392369, 0.5867947680609567, 0.5564836604254586, 0.5467732122966221, 0.503119843346732, 0.4977012872695923, 0.5422456434794835, 0.4737699031829834, 0.506095460483006, 0.472329889025007, 0.5161104883466449, 0.44559548582349506, 0.4410228729248047, 0.44160655566624235, 0.48584730284554617, 0.44515419006347656, 0.42989786182131084], "val_accuracy": [0.5099999904632568, 0.5213333368301392, 0.612666666507721, 0.7229999899864197, 0.7196666598320007, 0.7256666421890259, 0.7396666407585144, 0.7403333187103271, 0.7386666536331177, 0.7710000276565552, 0.7706666588783264, 0.7639999985694885, 0.7850000262260437, 0.7720000147819519, 0.7903333306312561, 0.746666669845581, 0.8076666593551636, 0.8056666851043701, 0.7986666560173035, 0.781333327293396, 0.7996666431427002, 0.8053333163261414]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1], [6, 6, 4, 2, 0, 0, 4, 9, 9, 4, 4, 2], [3, 3, 3, 1, 0, 0, 0, 2], [39, 35, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [45]], "fitness": -0.7868571281433105, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 10, 5, 3, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.pow(tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.pow(alpha, tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.0967949599700755, 1.6977735700199177, 1.249545309742318, 0.9617688113341573, 0.8919260425574554, 0.780764183836244, 0.8118318879152443, 0.7382119597303491, 0.680568464829575, 0.6862383175047397, 0.6468188035143302, 0.6665333435598728, 0.6053491113381442, 0.6256338126545081, 0.5735606331205513, 0.6075563015183281, 0.5704824816454765, 0.5485466286774245, 0.5337369597236856, 0.532985692325915], "accuracy": [0.29599788784980774, 0.4449874460697174, 0.5709945559501648, 0.6450931429862976, 0.6690001487731934, 0.7010962963104248, 0.6885483860969543, 0.7160216569900513, 0.7415136694908142, 0.7364945411682129, 0.7555144429206848, 0.7478536367416382, 0.7693831920623779, 0.7598732113838196, 0.7821952104568481, 0.767401933670044, 0.7847048044204712, 0.7964601516723633, 0.7979130744934082, 0.798309326171875], "val_loss": [1.562044518334525, 0.9539570808410645, 0.7206082514354161, 0.772819059235709, 0.6384605850492205, 0.5858040196555001, 0.5849124533789498, 0.5486943210874285, 0.537450739315578, 0.5308916228158134, 0.5379821062088013, 0.48863066945757183, 0.47868990898132324, 0.4671250752040318, 0.4604942798614502, 0.49394871507372173, 0.460599456514631, 0.46240437030792236, 0.4631444045475551, 0.4799232482910156], "val_accuracy": [0.44066667556762695, 0.6019999980926514, 0.6963333487510681, 0.6620000004768372, 0.6980000138282776, 0.7319999933242798, 0.7350000143051147, 0.7543333172798157, 0.7509999871253967, 0.7493333220481873, 0.7583333253860474, 0.7853333353996277, 0.7826666831970215, 0.7889999747276306, 0.7960000038146973, 0.7749999761581421, 0.7906666398048401, 0.7736666798591614, 0.7900000214576721, 0.7893333435058594]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0], [8, 6, 8, 2, 3, 0, 8, 9, 9, 9], [1, 0], [93, 14, 43, 79], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [45]], "fitness": -0.7622857093811035, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 9, 2, 3, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))))), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.0967676039967698, 1.696114011885326, 1.2050887481364214, 0.9653951741165536, 0.9044980835590254, 0.8006611824460773, 0.8056345613893029, 0.7435237501889739, 0.6902304091678398, 0.6958731664815804, 0.6618978926424085, 0.6569256802056176, 0.6432639438840518, 0.6182435109567774], "accuracy": [0.2957337200641632, 0.44208163022994995, 0.5783912539482117, 0.6436402201652527, 0.6668868064880371, 0.6973979473114014, 0.698190450668335, 0.7113987803459167, 0.7368907928466797, 0.7224937081336975, 0.748778223991394, 0.7516840696334839, 0.7564390301704407, 0.7622507214546204], "val_loss": [1.5613486766815186, 0.9606079374040876, 0.9361915247780936, 0.8102524961744036, 0.6703731332506452, 0.5854264668055943, 0.5994999238422939, 0.5778950112206596, 0.5396386895860944, 0.5415417126246861, 0.5418555225644793, 0.5483593259538923, 0.5398036582129342, 0.5123398985181536], "val_accuracy": [0.44066667556762695, 0.5943333506584167, 0.5789999961853027, 0.6520000100135803, 0.7016666531562805, 0.7356666922569275, 0.7269999980926514, 0.7333333492279053, 0.7556666731834412, 0.7396666407585144, 0.7553333044052124, 0.7323333621025085, 0.7310000061988831, 0.7493333220481873]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 0], [1], [], [3, 0], [93], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [70, 67]], "fitness": -0.34599998593330383, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [3.0976332100296475, 2.302548615309887, 2.2896974873092466, 2.3058261973053913, 2.3030128737860163, 2.2942022285630217, 2.2897628153540346, 2.3043508421648857, 2.3034286264415273, 2.303336733478077, 2.303227402357425], "accuracy": [0.15242372453212738, 0.10976093262434006, 0.1484612375497818, 0.09919429570436478, 0.1006472036242485, 0.13247919082641602, 0.15612204372882843, 0.09866596013307571, 0.09893012791872025, 0.09694888442754745, 0.09417514503002167], "val_loss": [1.9749794006347656, 1.9623149463108607, 1.9783853803362166, 1.973552635737828, 1.972407613481794, 1.8557126862662179, 1.9752440452575684, 1.9740362848554338, 1.9736503192356654, 1.9737615585327148, 1.9737772941589355], "val_accuracy": [0.10233332961797714, 0.10066666454076767, 0.10233332961797714, 0.10133333504199982, 0.10000000149011612, 0.3383333384990692, 0.09866666793823242, 0.09866666793823242, 0.09799999743700027, 0.09666666388511658, 0.09666666388511658]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0], [3, 6, 4, 2, 3, 0, 2, 2, 9, 4, 4, 2], [3, 3, 3, 1, 0, 0, 0, 2, 3, 3], [88, 10, 32, 23], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [88]], "fitness": -0.17399999499320984, "mapping_values": [1, 1, 1, 0, 1, 0, 20, 20, 11, 9, 4, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.add(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha)), tf.math.add(beta, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))))))))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(beta, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)))))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [3.1649833503983134, 3.2899221064250512, 2.306386934783496, 2.3036386266029933, 2.3031681387604914, 2.302955179922396], "accuracy": [0.1550653874874115, 0.18359529972076416, 0.09708096832036972, 0.09985470771789551, 0.0956280529499054, 0.09655263274908066], "val_loss": [1.9671146529061454, 1.9778438295636858, 1.9740221159798759, 1.9735702105930872, 1.9735871042524065, 1.9736038616725378], "val_accuracy": [0.1679999977350235, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10000000149011612, 0.09866666793823242]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [3, 2, 4, 2, 3, 0, 4, 9, 9, 4, 4, 2], [3, 0, 3, 1, 0, 0, 0, 2], [39, 35, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [58, 5]], "fitness": -0.1014285683631897, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 2], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.301791211696207, 2.302572357593164, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736428260803223, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10400000214576721, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 9, 4, 2, 0, 0, 4, 9, 9, 4, 4, 2], [3, 3, 3, 1, 2, 0, 0, 2], [39, 35, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 9, 2, 3, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.pow(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06960771232843399, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1], [8, 6, 4, 2, 5, 0, 4, 9, 1, 4, 4, 2], [2, 3, 3, 3, 3, 0, 0, 2], [39, 35, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 0, 1, 0, 1, 0, 0, 1, 1], [2, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [45, 11]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3028405351944885, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0], [1], [2, 1, 2, 2, 3, 0, 4, 9, 9, 9], [2, 0, 3, 4, 0], [93, 10, 32, 23], [0], [0, 1, 1], [9], [1, 1], [79], [0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [45, 31]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 3, 2, 1, 2], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3028405351944885, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0], [1], [2, 9], [1, 0], [93], [0], [1, 1, 1], [9], [1, 1], [79], [0, 0, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 0, 2, 2], [45, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 0, 2], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3028405351944885, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 6, 4, 2, 0, 0, 6, 9, 9, 4, 4, 2], [3, 3, 3, 1, 0, 0, 0, 2], [39, 35, 20, 7, 45, 13], [0], [1, 1, 1], [9], [2, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 1, 2, 2], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 9, 4, 2, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, grad), grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), alpha)))), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06960771232843399, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0], [1], [2, 1, 2, 2, 3, 0, 4, 9, 9, 9], [4, 0], [93], [0], [0, 1, 1], [9], [1, 1], [79], [1, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 1, 2, 2], [45]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3028405351944885, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 1, 1], [3, 6, 4, 2, 3, 0, 4, 9, 9, 4, 4, 2], [1, 0], [39, 35, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [45, 75]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 3, 2, 1, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3028405351944885, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 0], [0, 1], [8, 6, 0, 2, 3, 0, 4, 9, 9, 9], [1, 0], [93, 10, 32, 23], [1], [1, 1, 1], [9], [1, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [87, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 3, 2, 1, 2], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3028405351944885, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0], [0, 0, 1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0], [1, 6, 0, 2, 3, 0, 4, 2, 9, 9], [3, 0, 3, 4, 0], [93, 10, 34, 23], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [45, 43]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3028405351944885, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [3, 6, 4, 2, 0, 0, 4, 4, 3, 4, 2, 2, 8, 9, 3, 8, 3, 7, 1], [3, 0, 3, 4, 0, 1, 1, 4, 3, 0, 2, 4, 5, 4], [93, 61, 32, 26, 50], [0], [1, 1, 1], [9], [2, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [45]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 33, 33, 19, 14, 4, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(grad, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.pow(tf.math.multiply(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, alpha)), tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, alpha))), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.multiply(tf.math.add(beta, tf.math.add(grad, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), beta))))))))), tf.math.subtract(grad, grad))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.3042334392637294, 2.3034662454355948, 2.301822236563315, 2.301993396067742, 2.3028978356091954, 2.303388759995716], "accuracy": [0.09034473448991776, 0.0870426595211029, 0.09298639744520187, 0.08611807972192764, 0.09113723784685135, 0.09021265059709549], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0], [3, 6, 4, 2, 3, 0, 4, 9, 5, 4, 4, 2, 9], [3, 0, 3, 1, 0, 0, 0, 2], [39, 35, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [45]], "fitness": -0.014000000432133675, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 13, 8, 6, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(grad, tf.math.negative(tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), tf.math.pow(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(tf.math.pow(grad, tf.math.add(beta, alpha))))))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(beta, beta))), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.0621515334384664, 1.7434017050614241, 2.311200041686539, 1.4739322813195543, 1.3078102340094875, 1.2511203786747693, 1.1866045354489936, 1.2871039407506137, 4.650585546280651, 4.5050678391104535], "accuracy": [0.34566107392311096, 0.39545634388923645, 0.41791045665740967, 0.483819842338562, 0.537709653377533, 0.5525029897689819, 0.5661075115203857, 0.5597675442695618, 0.42543917894363403, 0.1138555034995079], "val_loss": [1.865004062652588, 0.9078704970223563, 1.0838112490517753, 0.8576024941035679, 0.7340429850987026, 0.8035744088036674, 0.7479562418801444, 1.0938653605324882, 2.6110622542245046, 2.15150785446167], "val_accuracy": [0.27533334493637085, 0.6266666650772095, 0.5630000233650208, 0.6179999709129333, 0.6803333163261414, 0.6480000019073486, 0.6583333611488342, 0.5839999914169312, 0.14300000667572021, 0.10066666454076767]}}]