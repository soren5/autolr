[{"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [4, 8, 9, 2, 5, 2, 8, 6, 4, 8, 3, 8, 4, 0, 2, 0, 5, 2, 6, 0, 0, 8, 3, 2, 3, 5, 0, 8, 5, 8, 5, 6, 2, 5, 5], [1, 2, 2, 0, 2, 2, 1, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [71, 5, 95, 41, 55, 68], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [5, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [62, 19, 41, 7, 45, 13], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 6, 4, 2, 6, 1, 7, 7, 4, 8, 3, 8, 1, 5, 3, 3, 0, 1, 9], [1, 1, 7, 3, 4, 0], [28], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 5, 6, 8, 6, 0, 8, 5, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [0, 0, 2, 2, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [44, 7, 76, 58]], "fitness": -0.849142849445343, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 12, 8, 4, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.negative(beta), tf.math.sqrt(tf.math.square(beta)))))", "other_info": {"loss": [1.7554617579649971, 1.175639902469961, 0.9900662935074562, 0.8723321199857988, 0.7809455752955325, 0.7137664075556558, 0.6719282056677217, 0.616187527573041, 0.5878472574288425, 0.5583019980098184, 0.5341345159573845, 0.508505188722841, 0.4871645014024036, 0.4677147795306599, 0.4579151598666527, 0.44861108371295383, 0.42540410562922626, 0.41259223064490125, 0.4092263129834155, 0.3966502519984995, 0.375543816864152, 0.3750395293619025, 0.35391406721017615, 0.3559281726901274, 0.34399346680752024, 0.3358880344115512, 0.3247494425488312, 0.32262635349109425, 0.3088372247038957, 0.3005155693459678, 0.29695469289407944, 0.292403880580069], "accuracy": [0.40206050872802734, 0.574560821056366, 0.6540747880935669, 0.685510516166687, 0.717870831489563, 0.7458723783493042, 0.7597411274909973, 0.7775723338127136, 0.7893276810646057, 0.793422281742096, 0.8078193068504333, 0.8175934553146362, 0.8195747137069702, 0.8278959393501282, 0.8322546482086182, 0.8342359066009521, 0.844010055065155, 0.852859616279602, 0.8508783578872681, 0.858671247959137, 0.8643507957458496, 0.8627657890319824, 0.8733324408531189, 0.8705587387084961, 0.8717474341392517, 0.8761062026023865, 0.8819178342819214, 0.8816536664962769, 0.8885219693183899, 0.8899748921394348, 0.8908994793891907, 0.8943336606025696], "val_loss": [0.9986567837851388, 0.7946183511189052, 0.7134343555995396, 0.6346458537237984, 0.5964816468102592, 0.5537279844284058, 0.5092921086720058, 0.4754214286804199, 0.4670278174536569, 0.44396612473896574, 0.44264328479766846, 0.4170204145567758, 0.41288697719573975, 0.40980006967272076, 0.40141492230551584, 0.3959048645836966, 0.38272126231874737, 0.38971400260925293, 0.36780141081128803, 0.34720660958971294, 0.36468091181346346, 0.35375974008015226, 0.3604850172996521, 0.33958257947649273, 0.3428141985620771, 0.3436456152370998, 0.34073710441589355, 0.3391974653516497, 0.3262066755975996, 0.34208929538726807, 0.3329947165080479, 0.34482377767562866], "val_accuracy": [0.6140000224113464, 0.6800000071525574, 0.6963333487510681, 0.7263333201408386, 0.7526666522026062, 0.7683333158493042, 0.7833333611488342, 0.7950000166893005, 0.7960000038146973, 0.8103333115577698, 0.8106666803359985, 0.824999988079071, 0.8243333101272583, 0.8276666402816772, 0.8336666822433472, 0.8333333134651184, 0.8420000076293945, 0.8410000205039978, 0.8456666469573975, 0.8483333587646484, 0.8513333201408386, 0.8556666374206543, 0.8513333201408386, 0.8603333234786987, 0.8583333492279053, 0.8619999885559082, 0.862333357334137, 0.8616666793823242, 0.862333357334137, 0.8619999885559082, 0.862333357334137, 0.856333315372467]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [7, 8, 9, 2, 5, 2, 8, 6, 4, 8, 3, 8, 4, 0, 2, 0, 5, 2, 6, 0, 0, 8, 3, 2, 3, 5, 0, 8, 5, 8, 5, 6, 2, 5, 5], [1, 0, 2, 0, 2, 2, 1, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [71, 5, 95, 41, 55, 68], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [62, 19, 41, 7, 45, 13], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 6, 4, 2, 6, 1, 7, 7, 4, 8, 3, 8, 1, 5, 3, 3, 0, 1, 9], [1, 1, 7, 3, 4, 0], [28], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 5, 2, 8, 6, 0, 6, 7, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [0, 0, 3, 2, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [44, 7, 76, 58]], "fitness": -0.1128571406006813, "mapping_values": [1, 3, 3, 1, 2, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 6, 3, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3006030981015724, 2.301485356590484, 2.3008435681952366, 2.3010606170566628, 2.3015919598952386, 2.3017864021028682, 2.3023475391706376, 2.302342166864105, 2.302441611722665, 2.302519968141418, 2.302555847822982, 2.302579694908403], "accuracy": [0.09206181764602661, 0.09642054885625839, 0.09536388516426086, 0.10289261490106583, 0.09945846349000931, 0.09760929644107819, 0.09893012791872025, 0.09945846349000931, 0.10474177449941635, 0.10289261490106583, 0.10236428678035736, 0.09998679161071777], "val_loss": [1.970571517944336, 1.9710230146135603, 1.9719665391104562, 1.9726969173976354, 1.9730579512459892, 1.97335604258946, 1.9735449382237025, 1.9736153738839286, 1.973640305655343, 1.973644460950579, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.06466666609048843, 0.08866667002439499, 0.0989999994635582, 0.08733333647251129, 0.08366666734218597, 0.10000000149011612, 0.11366666853427887, 0.11233333498239517, 0.10499999672174454, 0.1003333330154419, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [4, 6, 9, 8, 5, 9, 8, 6, 4, 8, 3, 8, 4, 0, 2, 0, 5, 2, 6, 0, 0, 8, 3, 2, 3, 5, 0, 8, 5, 8, 5, 6, 2, 5, 5], [3, 2, 2, 0, 2, 2, 1, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [71, 5, 95, 41, 55, 68], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [5, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [62, 19, 41, 7, 45, 13], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [3, 6, 4, 2, 6, 1, 7, 7, 4, 8, 3, 8, 1, 5, 3, 3, 0, 1, 9], [1, 1, 7, 3, 4, 0], [28], [0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 5, 5, 4, 9, 0, 3, 5, 6, 0, 4, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [0, 0, 2, 2, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [44, 7, 76, 58]], "fitness": -0.1128571406006813, "mapping_values": [1, 6, 6, 4, 2, 1, 5, 5, 5, 0, 1, 13, 7, 6, 1, 0, 4, 2, 2, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.pow(sigma, sigma)), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, alpha))), sigma)), sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3006030981015724, 2.301485356590484, 2.3008435681952366, 2.3010606170566628, 2.3015919598952386, 2.3017864021028682, 2.3023475391706376, 2.302342166864105, 2.302441611722665, 2.302519968141418, 2.302555847822982, 2.302579694908403], "accuracy": [0.09206181764602661, 0.09642054885625839, 0.09536388516426086, 0.10289261490106583, 0.09945846349000931, 0.09760929644107819, 0.09893012791872025, 0.09945846349000931, 0.10474177449941635, 0.10289261490106583, 0.10236428678035736, 0.09998679161071777], "val_loss": [1.970571517944336, 1.9710230146135603, 1.9719665391104562, 1.9726969173976354, 1.9730579512459892, 1.97335604258946, 1.9735449382237025, 1.9736153738839286, 1.973640305655343, 1.973644460950579, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.06466666609048843, 0.08866667002439499, 0.0989999994635582, 0.08733333647251129, 0.08366666734218597, 0.10000000149011612, 0.11366666853427887, 0.11233333498239517, 0.10499999672174454, 0.1003333330154419, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [3, 8, 9, 2, 5, 2, 8, 6, 4, 8, 3, 8, 4, 0, 2, 0, 5, 2, 6, 0, 0, 8, 3, 2, 3, 5, 0, 8, 5, 8, 5, 6, 2, 5, 5], [1, 2, 2, 0, 2, 2, 1, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [71, 5, 95, 41, 55, 68], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [5, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [62, 19, 41, 7, 45, 13], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 6, 4, 2, 6, 1, 7, 7, 4, 8, 3, 8, 1, 5, 3, 3, 0, 1, 9], [1, 1, 7, 3, 4, 0], [28], [0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 5, 0, 2, 0, 0, 0, 7, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [0, 0, 0, 2, 0, 2, 3, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [44, 7, 76, 58]], "fitness": -0.1128571406006813, "mapping_values": [1, 4, 4, 3, 1, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3006030981015724, 2.301485356590484, 2.3008435681952366, 2.3010606170566628, 2.3015919598952386, 2.3017864021028682, 2.3023475391706376, 2.302342166864105, 2.302441611722665, 2.302519968141418, 2.302555847822982, 2.302579694908403], "accuracy": [0.09206181764602661, 0.09642054885625839, 0.09536388516426086, 0.10289261490106583, 0.09945846349000931, 0.09760929644107819, 0.09893012791872025, 0.09945846349000931, 0.10474177449941635, 0.10289261490106583, 0.10236428678035736, 0.09998679161071777], "val_loss": [1.970571517944336, 1.9710230146135603, 1.9719665391104562, 1.9726969173976354, 1.9730579512459892, 1.97335604258946, 1.9735449382237025, 1.9736153738839286, 1.973640305655343, 1.973644460950579, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.06466666609048843, 0.08866667002439499, 0.0989999994635582, 0.08733333647251129, 0.08366666734218597, 0.10000000149011612, 0.11366666853427887, 0.11233333498239517, 0.10499999672174454, 0.1003333330154419, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [4, 8, 9, 2, 5, 2, 8, 6, 4, 8, 3, 8, 4, 0, 2, 0, 5, 2, 6, 0, 0, 8, 3, 2, 3, 5, 0, 8, 5, 8, 5, 6, 2, 5, 5], [3, 2, 2, 0, 2, 2, 1, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [71, 5, 95, 41, 55, 68], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [62, 19, 41, 7, 45, 13], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 6, 4, 2, 6, 1, 7, 7, 4, 8, 3, 8, 1, 5, 3, 3, 0, 1, 9], [1, 1, 7, 3, 4, 0], [28], [0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [5, 5, 5, 4, 9, 0, 3, 5, 6, 0, 4, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [0, 0, 2, 2, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [37, 3, 17, 58]], "fitness": -0.10971428453922272, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.square(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.300282915018616, 2.301376800180631, 2.302223454723426, 2.302517972838342, 2.3025845761123414, 2.3025850169867446, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09100515395402908, 0.09655263274908066, 0.1022322028875351, 0.1014397069811821, 0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9716089793613978, 1.9731455530439104, 1.973611286708287, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10000000149011612, 0.0833333358168602, 0.11233333498239517, 0.1003333330154419, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [4, 8, 9, 2, 5, 2, 8, 6, 4, 8, 3, 8, 4, 0, 2, 0, 5, 2, 6, 0, 0, 8, 3, 2, 3, 5, 0, 8, 5, 8, 5, 6, 2, 5, 5], [3, 2, 2, 0, 2, 2, 1, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [71, 5, 95, 41, 55, 68], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [4, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 1, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [62, 19, 41, 7, 45, 13], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [7, 6, 4, 2, 6, 1, 7, 7, 4, 8, 3, 8, 1, 5, 3, 3, 0, 1, 9], [1, 1, 7, 3, 4, 0], [28], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 5, 7, 4, 9, 0, 3, 5, 6, 0, 4, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [0, 0, 3, 2, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [37, 3, 17, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 0, 13, 7, 6, 1, 0, 7, 5, 2, 3], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.pow(sigma, sigma)), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, alpha))), sigma)), sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.add(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [1752576486.3819962, 33529499314.195747, 156963951010.2021, 437422949793.2553, 933597774875.7268, 1715537538731.7036], "accuracy": [0.09919429570436478, 0.09945846349000931, 0.10077928751707077, 0.10289261490106583, 0.10091137140989304, 0.09879804402589798], "val_loss": [6686501595.428572, 53477866349.71429, 180472025673.14285, 427762412982.8571, 835452703305.1428, 1443639403666.2856], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [4, 8, 9, 2, 5, 2, 8, 6, 4, 8, 3, 8, 4, 0, 2, 0, 5, 2, 6, 0, 0, 8, 3, 2, 3, 5, 0, 8, 5, 8, 5, 6, 2, 5, 5], [2, 2, 2, 0, 2, 2, 1, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [71, 5, 95, 41, 55, 68], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [5, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [62, 19, 41, 7, 45, 13], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 6, 4, 2, 6, 1, 7, 7, 4, 8, 3, 8, 1, 5, 3, 3, 0, 1, 9], [1, 1, 7, 3, 4, 0], [28], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 5, 6, 8, 6, 0, 8, 5, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [0, 0, 0, 2, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [44, 64, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 13, 7, 6, 1, 0, 7, 4, 3, 3], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.pow(sigma, sigma)), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, alpha))), sigma)), sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302520208449459, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [4, 8, 9, 2, 5, 2, 8, 6, 4, 8, 3, 8, 4, 0, 2, 0, 5, 2, 6, 0, 0, 8, 3, 2, 3, 5, 0, 8, 5, 8, 5, 6, 2, 5, 5], [1, 2, 2, 0, 2, 2, 1, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [71, 5, 95, 41, 55, 68], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [5, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [62, 19, 41, 7, 45, 13], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 6, 4, 2, 6, 1, 7, 7, 4, 8, 3, 8, 1, 5, 3, 3, 0, 1, 9], [1, 1, 7, 3, 4, 0], [28], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 5, 1, 8, 6, 0, 8, 5, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [0, 0, 2, 3, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [44, 61, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 29, 18, 11, 3], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(tf.math.subtract(tf.math.sqrt(tf.math.divide_no_nan(tf.math.negative(tf.math.sqrt(tf.math.square(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.negative(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.divide_no_nan(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), beta), sigma), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.divide_no_nan(tf.math.negative(beta), alpha)))), beta))), beta)), tf.math.add(sigma, beta))", "other_info": {"loss": [2.3018957818771604, 2.3025850575156985, 2.302585030496396, 2.3025850034770934, 2.302584787606091, 2.3025848460219493], "accuracy": [0.10117553919553757, 0.10210011899471283, 0.10011887550354004, 0.09985470771789551, 0.10276053100824356, 0.10011887550354004], "val_loss": [1.973644188472203, 1.9736443247113908, 1.973644529070173, 1.9736441203526087, 1.973644188472203, 1.9736441203526087], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [4, 8, 9, 2, 5, 2, 8, 6, 4, 8, 3, 8, 4, 0, 2, 0, 5, 2, 6, 0, 0, 8, 3, 2, 3, 5, 0, 8, 5, 8, 5, 6, 2, 5, 5], [1, 2, 2, 0, 2, 2, 1, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [71, 5, 95, 41, 55, 68], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [5, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [62, 19, 41, 7, 45, 13], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 6, 4, 2, 6, 1, 7, 7, 4, 8, 3, 8, 1, 5, 3, 3, 0, 1, 9], [1, 1, 7, 3, 4, 0], [28], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 5, 6, 8, 6, 0, 8, 5, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [0, 3, 0, 1, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [44, 14, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 9, 5, 4, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(sigma), tf.math.divide_no_nan(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [4, 8, 9, 2, 5, 2, 8, 6, 4, 8, 3, 8, 4, 0, 2, 0, 5, 2, 6, 0, 0, 8, 3, 2, 3, 5, 0, 8, 5, 8, 5, 6, 2, 5, 5], [1, 2, 2, 0, 2, 2, 1, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [71, 5, 95, 41, 55, 68], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [5, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [62, 19, 41, 7, 45, 13], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 6, 4, 2, 6, 1, 7, 7, 4, 8, 3, 8, 1, 5, 3, 3, 0, 1, 9], [1, 1, 7, 3, 4, 0], [28], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [2, 5, 9, 2, 6, 0, 0, 7, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [2, 0, 2, 0, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [44, 64, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 2, 2, 1, 1, 0, 2, 1, 1, 0, 0, 19, 12, 7, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.square(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.divide_no_nan(beta, tf.math.negative(tf.math.negative(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.divide_no_nan(beta, tf.math.negative(tf.math.add(tf.math.multiply(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), beta))), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [4, 8, 9, 2, 5, 2, 8, 6, 4, 8, 3, 8, 4, 0, 2, 0, 5, 2, 6, 0, 0, 8, 3, 2, 3, 5, 0, 8, 5, 8, 5, 6, 2, 5, 5], [0, 2, 2, 0, 2, 2, 1, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [71, 5, 95, 41, 55, 68], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [5, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [62, 19, 41, 7, 45, 13], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [8, 6, 4, 2, 6, 1, 7, 7, 4, 8, 3, 8, 1, 5, 3, 3, 0, 1, 9], [1, 1, 7, 3, 4, 0], [28], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 9, 6, 3, 3, 0, 8, 7, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [0, 0, 2, 2, 0, 3, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [74, 24, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 25, 15, 10, 4], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.sqrt(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.divide_no_nan(beta, tf.math.negative(tf.math.add(tf.math.multiply(beta, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), sigma))), alpha)), tf.math.subtract(tf.math.divide_no_nan(tf.math.square(beta), beta), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [4, 8, 9, 2, 5, 2, 8, 6, 4, 8, 3, 8, 4, 0, 2, 0, 5, 2, 6, 0, 0, 8, 3, 2, 3, 5, 0, 8, 5, 8, 5, 6, 2, 5, 5], [1, 2, 2, 0, 2, 2, 1, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [71, 5, 95, 41, 55, 68], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [5, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [62, 19, 41, 7, 45, 13], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [9, 6, 4, 2, 6, 1, 7, 7, 4, 8, 3, 8, 1, 5, 3, 3, 0, 1, 9], [1, 1, 7, 3, 4, 0], [28], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 6, 6, 8, 6, 0, 8, 5, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [0, 0, 2, 2, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [44, 76, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 8, 4, 4, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(alpha, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), beta)), tf.math.sqrt(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [4, 8, 9, 2, 5, 2, 8, 6, 4, 8, 3, 8, 4, 0, 2, 0, 5, 2, 6, 0, 0, 8, 3, 2, 3, 5, 0, 8, 5, 8, 5, 6, 2, 5, 5], [1, 2, 2, 0, 2, 2, 1, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [71, 5, 95, 41, 55, 68], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [62, 19, 41, 7, 45, 13], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 6, 4, 2, 6, 1, 7, 7, 4, 8, 3, 8, 1, 5, 3, 3, 0, 1, 9], [1, 1, 7, 3, 4, 0], [28], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [4, 3, 6, 8, 0, 0, 8, 5, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [0, 0, 2, 0, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [80, 68, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 8, 4, 4, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)), beta), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [4, 8, 9, 2, 5, 2, 8, 6, 4, 8, 3, 8, 4, 0, 2, 0, 5, 2, 6, 0, 0, 8, 3, 2, 3, 5, 0, 8, 5, 8, 5, 6, 2, 5, 5], [2, 0, 2, 0, 2, 2, 1, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [71, 5, 95, 41, 55, 68], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [5, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [5, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [62, 19, 41, 7, 45, 13], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 6, 4, 2, 6, 1, 7, 7, 4, 8, 3, 8, 1, 5, 3, 3, 0, 1, 9], [1, 1, 7, 3, 4, 0], [28], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [9, 5, 6, 8, 6, 0, 6, 7, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [0, 0, 2, 2, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [44, 7, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 7, 3, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 1, 1, 0, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))), grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302520208449459, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [4, 6, 9, 8, 5, 9, 8, 6, 4, 8, 3, 8, 4, 0, 2, 0, 5, 2, 6, 0, 0, 8, 3, 2, 3, 5, 0, 8, 5, 8, 5, 6, 2, 5, 5], [3, 2, 2, 0, 2, 2, 1, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [71, 5, 95, 41, 55, 68], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [62, 19, 41, 7, 45, 13], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 6, 4, 2, 6, 1, 7, 7, 4, 8, 3, 8, 1, 5, 3, 3, 0, 1, 9], [1, 1, 7, 3, 4, 0], [28], [0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [2, 5, 6, 3, 7, 0, 2, 5, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [0, 0, 3, 2, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [37, 3, 17, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 4, 2, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.square(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302520208449459, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [7, 8, 9, 2, 5, 2, 8, 6, 4, 8, 3, 8, 4, 0, 2, 0, 5, 2, 6, 0, 0, 8, 3, 2, 3, 5, 0, 8, 5, 8, 5, 6, 2, 5, 5], [3, 2, 2, 0, 2, 2, 1, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [71, 5, 95, 41, 55, 68], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [5, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [62, 19, 41, 7, 45, 13], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [4, 6, 4, 2, 6, 1, 7, 7, 4, 8, 3, 8, 1, 5, 3, 3, 0, 1, 9], [1, 1, 7, 3, 4, 0], [28], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 5, 6, 8, 6, 0, 6, 7, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [0, 0, 2, 2, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [39, 90, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 13, 7, 6, 1, 0, 1, 0, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.pow(sigma, sigma)), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, alpha))), sigma)), sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302520208449459, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [6, 8, 9, 2, 5, 2, 8, 6, 4, 8, 3, 8, 4, 0, 2, 0, 5, 2, 6, 0, 0, 8, 3, 2, 3, 5, 0, 8, 5, 8, 5, 6, 2, 5, 5], [1, 2, 2, 0, 2, 2, 1, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [71, 5, 95, 41, 55, 68], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [62, 19, 41, 7, 45, 13], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 6, 4, 2, 6, 1, 7, 7, 4, 8, 3, 8, 1, 5, 3, 3, 0, 1, 9], [1, 1, 7, 3, 4, 0], [28], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [8, 5, 6, 8, 6, 0, 8, 5, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [0, 0, 2, 2, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [44, 7, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.square(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302520208449459, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [4, 8, 9, 2, 5, 2, 8, 6, 4, 8, 3, 8, 4, 0, 2, 0, 5, 2, 6, 0, 0, 8, 3, 2, 3, 5, 0, 8, 5, 8, 5, 6, 2, 5, 5], [3, 3, 2, 0, 2, 2, 1, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [71, 5, 95, 41, 55, 68], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [5, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [62, 19, 41, 7, 45, 13], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 6, 4, 2, 6, 1, 7, 7, 4, 8, 3, 8, 1, 5, 3, 3, 0, 1, 9], [1, 1, 7, 3, 4, 0], [28], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 5, 6, 8, 6, 0, 8, 5, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [0, 0, 2, 2, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [44, 7, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302520208449459, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [4, 8, 9, 2, 5, 2, 8, 6, 4, 8, 3, 8, 4, 0, 2, 0, 5, 2, 6, 0, 0, 8, 3, 2, 3, 5, 0, 8, 5, 8, 5, 6, 2, 5, 5], [1, 1, 2, 0, 2, 2, 1, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [71, 5, 95, 41, 55, 68], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [5, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [62, 19, 41, 7, 45, 13], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 6, 4, 2, 6, 1, 7, 7, 4, 8, 3, 8, 1, 5, 3, 3, 0, 1, 9], [1, 1, 7, 3, 4, 0], [28], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 5, 6, 8, 6, 0, 6, 7, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [3, 0, 3, 2, 3, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [44, 86, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 3, 3, 1, 2, 0, 2, 2, 1, 1, 0, 2, 1, 1, 0, 0, 9, 5, 4, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(tf.math.divide_no_nan(tf.math.sqrt(sigma), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(sigma, beta))", "other_info": {"loss": [2.3010615209121714, 2.303043648330936, 2.3023671796529395, 2.3026624524818513, 2.3034515743321116, 2.3016776886157637], "accuracy": [0.09206181764602661, 0.0886276587843895, 0.09259014576673508, 0.09272222965955734, 0.09272222965955734, 0.09100515395402908], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [4, 8, 9, 2, 5, 2, 8, 6, 4, 8, 3, 8, 4, 0, 2, 0, 5, 2, 6, 0, 0, 8, 3, 2, 3, 5, 0, 8, 5, 8, 5, 6, 2, 5, 5], [1, 2, 2, 0, 2, 2, 1, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [71, 5, 95, 41, 55, 68], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [5, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [62, 19, 41, 7, 45, 13], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 6, 4, 2, 6, 1, 7, 7, 4, 8, 3, 8, 1, 5, 3, 3, 0, 1, 9], [1, 1, 7, 3, 4, 0], [28], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 5, 9, 2, 6, 0, 0, 7, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [3, 0, 0, 2, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [44, 7, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3010615209121714, 2.303043648330936, 2.3023671796529395, 2.3026624524818513, 2.3034515743321116, 2.3016776886157637], "accuracy": [0.09206181764602661, 0.0886276587843895, 0.09259014576673508, 0.09272222965955734, 0.09272222965955734, 0.09100515395402908], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]