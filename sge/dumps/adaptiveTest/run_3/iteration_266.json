[{"genotype": [[0], [1, 0, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [76, 80, 61], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 1, 8, 6, 4, 2, 2, 5, 0, 1, 5, 1, 1, 6, 8, 4, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 2, 3, 1, 1, 3, 2, 3, 0, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8071428537368774, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [1.971977415526973, 1.3603563152205407, 1.0481209565210399, 0.8600531997792142, 0.8171006134000075, 0.7691624120808769, 0.7411965095702415, 0.6709283157393854, 0.701992565559563, 0.6613026093246285, 0.6399808540918634, 0.6116405120221552, 0.6175272413264365, 0.6058816364129237, 0.5741717868855192, 0.5747382037470511, 0.5404974030009224, 0.554274553966686, 0.526422568977375, 0.5302918236828152, 0.5161655712333951, 0.5181016147475217, 0.4989171382175098, 0.4891300333205971, 0.4887022701284086, 0.48802823433707876, 0.4775541016785004, 0.4728479252798745, 0.4538058631998941, 0.4537448911280475, 0.45167223914912535, 0.43942955651177457, 0.4285745640409432, 0.4392053282744282, 0.4189319308911647, 0.42269232893553804, 0.40595828847972676, 0.40245997185767557, 0.3941610266960465, 0.399745991740638, 0.38785414275885605, 0.39397298217827476, 0.37306266515293707, 0.3880952697671904, 0.38144937232422116, 0.3665199226840864], "accuracy": [0.33945319056510925, 0.5272751450538635, 0.6169594526290894, 0.6738871932029724, 0.6903975605964661, 0.7004358768463135, 0.7182670831680298, 0.7494386434555054, 0.7318716049194336, 0.7470611333847046, 0.7568352818489075, 0.7606657147407532, 0.7676661014556885, 0.7685906887054443, 0.7847048044204712, 0.7791573405265808, 0.7882710099220276, 0.7845727205276489, 0.7984414100646973, 0.7971205711364746, 0.8043851256370544, 0.8070268034934998, 0.8094043135643005, 0.8148196935653687, 0.81548011302948, 0.813498854637146, 0.8257825970649719, 0.8144234418869019, 0.8264430165290833, 0.8271034359931946, 0.8300092220306396, 0.8355567455291748, 0.8400475382804871, 0.8310658931732178, 0.844010055065155, 0.841500461101532, 0.8491612672805786, 0.8498216867446899, 0.8535200357437134, 0.8451988101005554, 0.858671247959137, 0.8537842035293579, 0.8599920868873596, 0.858671247959137, 0.8580108284950256, 0.8625016212463379], "val_loss": [1.5408116749354772, 0.8253862517220634, 0.7576417241777692, 0.6691579818725586, 0.6092644589287894, 0.5918257577078683, 0.5452283280236381, 0.5918029887335641, 0.6496687446321759, 0.5464615651539394, 0.5112742696489606, 0.5211610453469413, 0.524923290525164, 0.5060490880693708, 0.5068658930914742, 0.45858216285705566, 0.4917752061571394, 0.44635917459215435, 0.4973146063940866, 0.4447444677352905, 0.4341863564082554, 0.4351303492273603, 0.4353596993855068, 0.4528768914086478, 0.40881597995758057, 0.4285745450428554, 0.39569176946367535, 0.3893599510192871, 0.3953588775226048, 0.44042312247412546, 0.3763692889894758, 0.3941361052649362, 0.40773968185697285, 0.4034642662320818, 0.3721464616911752, 0.3852054647036961, 0.3745667168072292, 0.39569989272526335, 0.36335547481264385, 0.36128095218113493, 0.3627946376800537, 0.39761704206466675, 0.3874512995992388, 0.3814389705657959, 0.3550507426261902, 0.37673101254871916], "val_accuracy": [0.4156666696071625, 0.6556666493415833, 0.6579999923706055, 0.7096666693687439, 0.7143333554267883, 0.718999981880188, 0.7580000162124634, 0.721666693687439, 0.7073333263397217, 0.7516666650772095, 0.7703333497047424, 0.7630000114440918, 0.753000020980835, 0.7826666831970215, 0.7673333287239075, 0.7950000166893005, 0.778333306312561, 0.8073333501815796, 0.7599999904632568, 0.8006666898727417, 0.8106666803359985, 0.8073333501815796, 0.8016666769981384, 0.7913333177566528, 0.8240000009536743, 0.8016666769981384, 0.8363333344459534, 0.8373333215713501, 0.8399999737739563, 0.7979999780654907, 0.8443333506584167, 0.828000009059906, 0.815666675567627, 0.8183333277702332, 0.8429999947547913, 0.8446666598320007, 0.840666651725769, 0.8333333134651184, 0.8426666855812073, 0.8443333506584167, 0.8463333249092102, 0.8273333311080933, 0.8323333263397217, 0.8366666436195374, 0.8443333506584167, 0.8346666693687439]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 1, 4, 0, 2, 4, 3, 6, 2, 5, 6, 2, 6, 8, 6, 4, 0, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 2, 3, 1, 3, 3, 3, 3, 1, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8071428537368774, "mapping_values": [1, 1, 1, 0, 1, 0, 35, 35, 21, 14, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(alpha, grad))))), tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.math.add(beta, beta), grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), grad)))), grad)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(grad), tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32))), grad), tf.math.add(beta, tf.math.square(alpha))))))), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, alpha))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [1.9721081647985033, 1.3554178698975192, 1.0666056782609483, 0.8719770707836587, 0.7993816616843484, 0.7608848183130812, 0.7519734685037744, 0.6707893129211328, 0.6948754926241778, 0.6691038728610573, 0.6492361388328037, 0.5959246750080102, 0.6382158960349461, 0.5984517111203234, 0.5956796009967891, 0.5713543548654524, 0.5605938341702295, 0.5400140406338766, 0.5332064014368557, 0.5233065889826729, 0.5222853260379756, 0.5090708688360085, 0.5048957743058666, 0.4888988311705478, 0.49045345134833357, 0.4912454972193462, 0.478384454272222, 0.46951460480501056, 0.4521124166047899, 0.4572393781064036, 0.45429272769606266, 0.4345582187561516, 0.4280378733171275, 0.434452779336203, 0.4272635984005095, 0.4258151502775211, 0.40577519366675363, 0.39982417314406227, 0.3997922124226237, 0.39193765138669684, 0.38732895268078854, 0.3926127742798321, 0.3784554292457829, 0.37857410436482114, 0.3788130523553535, 0.3672978243437646, 0.3958498107058072, 0.35171918042536504, 0.36183605544350766, 0.36519325049152435, 0.3435630786412617, 0.3543917650378785], "accuracy": [0.33984941244125366, 0.5283318161964417, 0.6155065298080444, 0.670320987701416, 0.6930392384529114, 0.7073041796684265, 0.7154933214187622, 0.7474573850631714, 0.7363624572753906, 0.7445515990257263, 0.7539294958114624, 0.7753269076347351, 0.7528728246688843, 0.7708360552787781, 0.7691190242767334, 0.7824593782424927, 0.7775723338127136, 0.7946110367774963, 0.7928939461708069, 0.7980451583862305, 0.802800178527832, 0.8101968169212341, 0.809140145778656, 0.8157442808151245, 0.8127063512802124, 0.8153480291366577, 0.8198388814926147, 0.819970965385437, 0.8274996876716614, 0.8261788487434387, 0.8276317715644836, 0.8363492488861084, 0.8404437899589539, 0.8348963260650635, 0.8383304476737976, 0.8408400416374207, 0.8511425256729126, 0.8491612672805786, 0.8507462739944458, 0.8514066934585571, 0.8590674996376038, 0.8558974862098694, 0.8564258217811584, 0.8627657890319824, 0.8594637513160706, 0.8643507957458496, 0.8536521196365356, 0.8698983192443848, 0.868049144744873, 0.8623695969581604, 0.8702945709228516, 0.8667283058166504], "val_loss": [1.5399410384041923, 0.8710832084928241, 0.7819607598440987, 0.6511590310505458, 0.5984170607158116, 0.5852259397506714, 0.54461441721235, 0.609784654208592, 0.7021145480019706, 0.5668406997408185, 0.4969527210508074, 0.5284703288759504, 0.5087041003363473, 0.5421731812613351, 0.5089160374232701, 0.4702566180910383, 0.4531705379486084, 0.44652230398995535, 0.46552365166800364, 0.43336522579193115, 0.4328462396349226, 0.4305734634399414, 0.42200697319848196, 0.4613021271569388, 0.41635237421308247, 0.4387061595916748, 0.4002471906798227, 0.39022912297930035, 0.3958480954170227, 0.4570406334740775, 0.3811515484537397, 0.39232225928987774, 0.39936074188777376, 0.41831065927233013, 0.367570161819458, 0.3936334252357483, 0.36941610063825336, 0.40171761172158377, 0.3662761960710798, 0.3604510511670794, 0.36374434403010775, 0.4044080802372524, 0.3644344551222665, 0.402756256716592, 0.35501582281930105, 0.4047569377081735, 0.342525771686009, 0.388224048273904, 0.3577421648161752, 0.34390779052461895, 0.3529708130019052, 0.3525404674666269], "val_accuracy": [0.4193333387374878, 0.656000018119812, 0.6306666731834412, 0.715666651725769, 0.7323333621025085, 0.7236666679382324, 0.7599999904632568, 0.7193333506584167, 0.699999988079071, 0.7409999966621399, 0.7846666574478149, 0.753333330154419, 0.7583333253860474, 0.7409999966621399, 0.7683333158493042, 0.7940000295639038, 0.8086666464805603, 0.8103333115577698, 0.7873333096504211, 0.812666654586792, 0.8130000233650208, 0.8119999766349792, 0.8140000104904175, 0.7866666913032532, 0.8213333487510681, 0.7986666560173035, 0.828000009059906, 0.8386666774749756, 0.8366666436195374, 0.7896666526794434, 0.8413333296775818, 0.8273333311080933, 0.8199999928474426, 0.8063333630561829, 0.843999981880188, 0.8376666903495789, 0.8433333039283752, 0.82833331823349, 0.8423333168029785, 0.8460000157356262, 0.8463333249092102, 0.8270000219345093, 0.8516666889190674, 0.82833331823349, 0.8479999899864197, 0.824999988079071, 0.8560000061988831, 0.8236666917800903, 0.8463333249092102, 0.8560000061988831, 0.8550000190734863, 0.8510000109672546]}}, {"genotype": [[0], [1, 0, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 1, 2, 0, 2, 5, 3, 6, 2, 5, 6, 2, 6, 8, 5, 4, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 2, 3, 1, 2, 3, 3, 3, 1, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.806857168674469, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [1.9719805114572515, 1.351559762894249, 1.0298565106227524, 0.9017424857092099, 0.850325600401191, 0.7477018655236087, 0.7373833915797112, 0.6927121108738092, 0.6815782838792943, 0.6547190531637564, 0.6503722172104026, 0.6333535626941998, 0.6217488473621515, 0.5691702084975268, 0.5833132846905587, 0.5762777419500285, 0.5473274180461166, 0.5450800861334205, 0.5342373338515307, 0.521628198106732, 0.5218161341300368, 0.5146965649716527, 0.4959083939855125], "accuracy": [0.33945319056510925, 0.5285959839820862, 0.6293752193450928, 0.6667547225952148, 0.6737551093101501, 0.7190595865249634, 0.7228899598121643, 0.7342491149902344, 0.7382115721702576, 0.7477215528488159, 0.7535332441329956, 0.7535332441329956, 0.7629110813140869, 0.7852331399917603, 0.776251494884491, 0.7810064554214478, 0.785101056098938, 0.7918372750282288, 0.791441023349762, 0.7973847389221191, 0.802271842956543, 0.8063663840293884, 0.8125742673873901], "val_loss": [1.5409011159624373, 0.8613693884440831, 0.8817304713385445, 0.7738419430596488, 0.635999185698373, 0.6257733958108085, 0.5575683627809797, 0.574014493397304, 0.6196870122637067, 0.5651955263955253, 0.5703990800040108, 0.4986869437353952, 0.49551517622811453, 0.4806853873389108, 0.5211022751671928, 0.4533008337020874, 0.46273185525621685, 0.43931519985198975, 0.4742883103234427, 0.4623766967228481, 0.44249471596309115, 0.44382805483681814, 0.4260313255446298], "val_accuracy": [0.4153333306312561, 0.6586666703224182, 0.6000000238418579, 0.659333348274231, 0.7286666631698608, 0.7003333568572998, 0.7586666941642761, 0.7463333606719971, 0.6973333358764648, 0.7440000176429749, 0.7289999723434448, 0.7833333611488342, 0.7789999842643738, 0.7829999923706055, 0.746666669845581, 0.8056666851043701, 0.8050000071525574, 0.8113333582878113, 0.7786666750907898, 0.7906666398048401, 0.8016666769981384, 0.8023333549499512, 0.8056666851043701]}}, {"genotype": [[0], [0, 1, 1], [0, 1, 1], [3, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [16, 80, 61], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 1, 6, 2, 4, 1, 2, 5, 0, 2, 5, 1, 1, 6, 8, 4, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 0, 3, 2, 3, 0, 2, 3, 2, 3, 0, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [45, 9, 76, 58]], "fitness": -0.801714301109314, "mapping_values": [1, 3, 3, 1, 2, 2, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.subtract(alpha, tf.math.add(beta, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.0000996943304896, 1.4285915790059547, 1.0339699978558237, 0.8603330531754529, 0.937235007173019, 0.7712137661259235, 0.7336322058854778, 0.6848394034828696, 0.7063225966403041, 0.6546138118538701, 0.6623274184819525, 0.6074362883494121, 0.6122119092450025, 0.5717261572476816, 0.5663889641963952, 0.5631327042411489, 0.5195636791780467, 0.54694616268686, 0.5277427896815929, 0.5019935309816077, 0.5104067854326415, 0.49417765210837167, 0.4865704950930782, 0.4705928625400434, 0.46680371924839187, 0.47040785753243575, 0.4570748990064819, 0.4627168691468481, 0.44963560807328606, 0.43284904846992667, 0.44307360463626727, 0.4220019084918201, 0.42547903200182163], "accuracy": [0.33007529377937317, 0.5147272348403931, 0.6071853041648865, 0.6828688383102417, 0.648659348487854, 0.7077004313468933, 0.7257958054542542, 0.7395324110984802, 0.7268524765968323, 0.7464007139205933, 0.7510236501693726, 0.7685906887054443, 0.7658169269561768, 0.7837802171707153, 0.7835160493850708, 0.7849689722061157, 0.8013472557067871, 0.789459764957428, 0.7984414100646973, 0.8064984679222107, 0.8050455451011658, 0.8183859586715698, 0.8144234418869019, 0.8224804997444153, 0.8203672170639038, 0.8195747137069702, 0.8310658931732178, 0.8210275769233704, 0.8290846943855286, 0.8364813327789307, 0.8335754871368408, 0.8421608805656433, 0.837537944316864], "val_loss": [1.6595913682665144, 0.9886483805520194, 0.7865735122135707, 0.8673449414116996, 0.66964738709586, 0.5879739012037005, 0.5478344985416957, 0.5788665158408028, 0.5653539214815412, 0.5639998912811279, 0.5144671542303902, 0.48948751177106586, 0.51570611340659, 0.5360310758863177, 0.5079061474118914, 0.4460588012422834, 0.45155324254717144, 0.448332531111581, 0.42308599608285086, 0.4207704152379717, 0.4707737650190081, 0.4283884423119681, 0.4258092301232474, 0.42654737404414583, 0.3913592185292925, 0.40339566128594534, 0.3882238779749189, 0.3753637501171657, 0.3800991688455854, 0.4502025842666626, 0.3746938279696873, 0.38705408573150635, 0.38834382806505474], "val_accuracy": [0.5180000066757202, 0.5663333535194397, 0.6539999842643738, 0.6153333187103271, 0.7020000219345093, 0.7353333234786987, 0.7566666603088379, 0.7239999771118164, 0.7400000095367432, 0.7463333606719971, 0.7820000052452087, 0.7860000133514404, 0.7543333172798157, 0.7416666746139526, 0.7666666507720947, 0.8080000281333923, 0.800000011920929, 0.8006666898727417, 0.8109999895095825, 0.8183333277702332, 0.7786666750907898, 0.8096666932106018, 0.809333324432373, 0.8043333292007446, 0.8316666483879089, 0.8193333148956299, 0.8399999737739563, 0.8453333377838135, 0.8420000076293945, 0.7923333048820496, 0.8410000205039978, 0.8236666917800903, 0.8306666612625122]}}, {"genotype": [[0], [0, 1, 1], [0, 1, 1], [3, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [16, 96, 61], [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 1, 6, 2, 4, 1, 2, 5, 0, 2, 5, 1, 1, 6, 8, 4, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 0, 3, 2, 3, 0, 2, 3, 2, 3, 0, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [45, 9, 76, 58]], "fitness": -0.8014285564422607, "mapping_values": [1, 3, 3, 1, 2, 1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.0000499228539326, 1.4305272717848114, 1.0375856891866877, 0.8990460439695737, 0.8656098278301614, 0.7676610144736224, 0.7147623534845623, 0.7050503617610914, 0.6836067786495117, 0.6742889327600474, 0.6467783842749993, 0.6178007498629545, 0.6108901692009905, 0.5659746561052305, 0.5685770628222732, 0.5615125245595133, 0.5322935785505325, 0.5366825562788747, 0.5129154387041247, 0.4956344731645089, 0.5119233561891056, 0.4874461226105265, 0.4865021095016393, 0.4763759976963184, 0.45428856805394024, 0.4774971803213076], "accuracy": [0.33007529377937317, 0.5138026475906372, 0.6127327680587769, 0.6642451286315918, 0.6741513609886169, 0.7066437602043152, 0.7224937081336975, 0.7337207794189453, 0.7351737022399902, 0.7360982894897461, 0.7576277852058411, 0.7601373791694641, 0.7647602558135986, 0.785629391670227, 0.7843085527420044, 0.7864218950271606, 0.7935543656349182, 0.7943468689918518, 0.802271842956543, 0.8084797263145447, 0.8037247657775879, 0.816008448600769, 0.8115176558494568, 0.8203672170639038, 0.830669641494751, 0.8191784620285034], "val_loss": [1.6587770325796944, 0.9854528563363212, 0.7747187614440918, 0.7449427332196917, 0.7071465424128941, 0.5729004996163505, 0.5543807744979858, 0.5823534897395543, 0.649226256779262, 0.5441766125815255, 0.5558479343141828, 0.4952348470687866, 0.4979560204914638, 0.4995901584625244, 0.5193601335797992, 0.4476051330566406, 0.44961282185145784, 0.4401933806283133, 0.4201551931244986, 0.4212463242667062, 0.40997827904564993, 0.41445562669209074, 0.4322048681122916, 0.4133683868816921, 0.4313900215285165, 0.4090845159121922], "val_accuracy": [0.5176666378974915, 0.5759999752044678, 0.653333306312561, 0.6676666736602783, 0.6919999718666077, 0.7243333458900452, 0.7580000162124634, 0.7196666598320007, 0.7066666483879089, 0.7559999823570251, 0.7273333072662354, 0.7850000262260437, 0.7763333320617676, 0.7716666460037231, 0.7413333058357239, 0.8146666884422302, 0.8066666722297668, 0.8066666722297668, 0.8106666803359985, 0.8163333535194397, 0.8306666612625122, 0.8293333053588867, 0.8113333582878113, 0.8236666917800903, 0.8033333420753479, 0.8096666932106018]}}, {"genotype": [[0], [1, 1, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [76, 80, 61], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 1, 8, 6, 4, 2, 2, 5, 0, 1, 5, 1, 1, 6, 8, 4, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 2, 3, 1, 1, 3, 2, 3, 0, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.7951428294181824, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [1.9668082550705352, 1.3566713844071825, 1.044973125035469, 0.9014460322973735, 0.8376555830622079, 0.7609393891090289, 0.7311858653219195, 0.6767944331812176, 0.7063312403293822, 0.6663838849406531, 0.6693804773121084, 0.6403459629220828, 0.606562018630653, 0.5941276441097826, 0.5923670947181707, 0.5889059875021206, 0.5762403807651413, 0.5537946501097517, 0.5603733798925666, 0.5345429969249605, 0.5335024957958544, 0.5131410075421221, 0.5171944574436822, 0.5160737864770563, 0.5152792725360247, 0.4938366554196264], "accuracy": [0.3407739996910095, 0.5296525955200195, 0.6288469433784485, 0.6679434776306152, 0.6863030195236206, 0.7117950320243835, 0.7170783281326294, 0.7424382567405701, 0.7339849472045898, 0.7442874312400818, 0.7395324110984802, 0.7623828053474426, 0.7668735980987549, 0.7751948237419128, 0.7709681391716003, 0.7808743715286255, 0.7804781198501587, 0.7909126877784729, 0.7880068421363831, 0.800290584564209, 0.7996301651000977, 0.8098005652427673, 0.8034605979919434, 0.807158887386322, 0.8054417967796326, 0.8129705190658569], "val_loss": [1.4217312335968018, 0.732062748500279, 0.8259412901742118, 0.5985096182141986, 0.635773846081325, 0.5956903866359166, 0.5681730508804321, 0.5757161889757428, 0.5510715757097516, 0.5656624521527972, 0.5367196457726615, 0.5400149481637138, 0.4753965309688023, 0.4808563164302281, 0.47338623659951345, 0.4781515598297119, 0.46979115690503803, 0.44892661912100656, 0.4717479263033186, 0.4408360208783831, 0.4390580313546317, 0.4675551652908325, 0.44089332648686, 0.4382896934236799, 0.4634188413619995, 0.435479359967368], "val_accuracy": [0.4846666753292084, 0.6836666464805603, 0.6316666603088379, 0.7353333234786987, 0.7036666870117188, 0.7126666903495789, 0.7333333492279053, 0.7409999966621399, 0.7250000238418579, 0.7319999933242798, 0.7566666603088379, 0.7476666569709778, 0.7836666703224182, 0.778333306312561, 0.7979999780654907, 0.784333348274231, 0.7860000133514404, 0.7983333468437195, 0.8006666898727417, 0.8006666898727417, 0.8073333501815796, 0.7766666412353516, 0.8059999942779541, 0.8056666851043701, 0.7996666431427002, 0.8006666898727417]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [33, 80, 61], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 1, 4, 0, 2, 4, 3, 6, 2, 5, 6, 2, 6, 8, 6, 4, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 1, 3, 3, 2, 1, 1, 1, 3, 2, 3, 0, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [43, 9, 76, 58]], "fitness": -0.7925714254379272, "mapping_values": [1, 1, 1, 0, 1, 1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.subtract(grad, tf.math.add(beta, alpha)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [1.967256327598732, 1.3948939750538116, 1.0856893093295306, 0.926087330636599, 0.7994446278862304, 0.7717642027153048, 0.7321547789029504, 0.6922350367298687, 0.7311037464731358, 0.6604976639173223, 0.672898188290453, 0.674828000899083, 0.6050561026590943, 0.6112355853210366, 0.592513771986744, 0.591913027046001, 0.5710898966616674, 0.5806087723906959, 0.5694230430397957, 0.550455944578425, 0.5454655230131918, 0.5292836302984124, 0.5332892131591281, 0.524374101577166, 0.5183671692248742, 0.5056383247309987], "accuracy": [0.3486989736557007, 0.5209351181983948, 0.6083740592002869, 0.655527651309967, 0.7049266695976257, 0.7074362635612488, 0.7210407853126526, 0.739400327205658, 0.7236824631690979, 0.7514199018478394, 0.7420420050621033, 0.7452120184898376, 0.7738739848136902, 0.7671377658843994, 0.7759873270988464, 0.7786290049552917, 0.7802139520645142, 0.7796856164932251, 0.7862898111343384, 0.791441023349762, 0.7938185334205627, 0.7996301651000977, 0.7957997918128967, 0.805177628993988, 0.802271842956543, 0.8072909712791443], "val_loss": [1.4379676069532121, 0.928920064653669, 0.7332544667380196, 0.6222518001283918, 0.6372359820774623, 0.5678561074393136, 0.5510144233703613, 0.5743928466524396, 0.5697188888277326, 0.5233332770211356, 0.5794020550591605, 0.49655779770442415, 0.5043970005852836, 0.5274398667471749, 0.4798551457268851, 0.4947991030556815, 0.5547299725668771, 0.45474943092891146, 0.4784556286675589, 0.45104903834206717, 0.44548477445329937, 0.4820824350629534, 0.44591966697147917, 0.4444230965205601, 0.45942182200295584, 0.4466226782117571], "val_accuracy": [0.43799999356269836, 0.5646666884422302, 0.6726666688919067, 0.7273333072662354, 0.7126666903495789, 0.7383333444595337, 0.7509999871253967, 0.7409999966621399, 0.7173333168029785, 0.7583333253860474, 0.7319999933242798, 0.7743333578109741, 0.7670000195503235, 0.7523333430290222, 0.7903333306312561, 0.7766666412353516, 0.7379999756813049, 0.7960000038146973, 0.7900000214576721, 0.7919999957084656, 0.8023333549499512, 0.7670000195503235, 0.8003333210945129, 0.8009999990463257, 0.7990000247955322, 0.7993333339691162]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 3, 1, 4, 0, 2, 4, 3, 6, 2, 5, 6, 1, 6, 0, 4, 4, 0, 8, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 3, 2, 3, 1, 3, 3, 3, 3, 1, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [6, 9, 76, 58]], "fitness": -0.27171429991722107, "mapping_values": [1, 1, 1, 0, 1, 1, 35, 35, 20, 15, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(grad, grad))))), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.divide_no_nan(tf.math.add(beta, beta), grad))), tf.math.add(beta, alpha))), tf.math.subtract(grad, grad))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.negative(grad), tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(grad)), alpha)), tf.math.add(beta, tf.math.sqrt(grad)))))), tf.math.add(beta, tf.math.square(alpha)))))), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.302487992087785, 2.303145769108178, 2.3018406346930393, 2.3010943197319143, 2.30077825885612, 2.3003769010647868, 2.3002910562053476, 2.2991529258644388, 2.3005500369146907, 2.298372641404575, 2.3001383909097735, 2.297677716055031, 2.2998511392237915, 2.2976533230726255, 2.298484045201761, 2.2990541963245983, 2.2984645512787076, 2.299292687081138, 2.297597239061889, 2.2969081515192653, 2.2955755105407216, 2.295414887147258, 2.2947944257678516, 2.295526090535537, 2.296622561331454, 2.2951984785614297, 2.2931649443369815, 2.293064054575547, 2.292959508674177, 2.2936633358447622, 2.2919932461968973, 2.2946539304637796, 2.2912597932741234, 2.2925897529805104, 2.292202455902049, 2.2920754522364675, 2.2921865202763048, 2.2916859357332777, 2.2914148978647884, 2.291684767258654, 2.289787002007219, 2.2901322207100057, 2.2902048137351394, 2.2901745913539187, 2.2897668548342636, 2.2882869448943333, 2.289536879944716, 2.2880300954033466, 2.2874241580643186, 2.287704936108018, 2.2863484356365875, 2.2857178363187862, 2.287392260013964, 2.286640234501166, 2.2858245724527007, 2.2846697510477574, 2.2846279097050566, 2.283632378993238, 2.285238036736521, 2.2834518422477075, 2.28418605819811, 2.2840587296710746, 2.2842776208206677, 2.283314616499702, 2.2823533886821434, 2.2812715135057133, 2.2823784789389086, 2.2816390275419853, 2.281459453571679, 2.2801295765922243, 2.280884829746529, 2.280624780515087, 2.2821336080369505, 2.279308816429615, 2.2804817264704513, 2.279785125577738, 2.278707749272665, 2.278842880457872, 2.278886863820352, 2.276534695966038, 2.276995679154734, 2.277561169479344, 2.278145815513358, 2.27785559639624, 2.275005757170992, 2.2776577614081486, 2.275703634678522, 2.2739623535767426, 2.2752545138139766, 2.2748530810110132, 2.2746149012913652, 2.2751673629585905, 2.2740746888785615, 2.2728339329907103, 2.2735124011600902, 2.2729095858101673, 2.2712790869671386, 2.2719483397593034, 2.2719368464470286, 2.2724621461571766], "accuracy": [0.08770307898521423, 0.08585391938686371, 0.08677849918603897, 0.09272222965955734, 0.09681680053472519, 0.10077928751707077, 0.09668471664190292, 0.10130762308835983, 0.09589222073554993, 0.10460969805717468, 0.09377889335155487, 0.10077928751707077, 0.09840179979801178, 0.10170386731624603, 0.09602430462837219, 0.09708096832036972, 0.1022322028875351, 0.0948355570435524, 0.09628847241401672, 0.10751552134752274, 0.10949676483869553, 0.11028926074504852, 0.1080438494682312, 0.10579843819141388, 0.10645885765552521, 0.10500594228506088, 0.11240258812904358, 0.11662924289703369, 0.1146479994058609, 0.11293092370033264, 0.11266675591468811, 0.1150442510843277, 0.11702549457550049, 0.11610091477632523, 0.11227050423622131, 0.11808215826749802, 0.11913882195949554, 0.1154404953122139, 0.11596883088350296, 0.12310130894184113, 0.12191256135702133, 0.12270505726337433, 0.11821424216032028, 0.11927089840173721, 0.120459645986557, 0.1290450394153595, 0.12534672021865845, 0.13142253458499908, 0.13155461847782135, 0.1278562992811203, 0.13617752492427826, 0.13181878626346588, 0.1348566859960556, 0.13538502156734467, 0.13274335861206055, 0.1418570876121521, 0.13842293620109558, 0.14542332291603088, 0.13630960881710052, 0.1430458277463913, 0.14397041499614716, 0.13802668452262878, 0.14198917150497437, 0.13829085230827332, 0.13934750854969025, 0.1438383311033249, 0.137630432844162, 0.1476687341928482, 0.1468762308359146, 0.1508387327194214, 0.14212125539779663, 0.1526878923177719, 0.14159291982650757, 0.148064985871315, 0.15572579205036163, 0.1450270712375641, 0.15598995983600616, 0.14951789379119873, 0.15202747285366058, 0.1620657742023468, 0.1542728841304779, 0.15519747138023376, 0.15097081661224365, 0.15374454855918884, 0.15876370668411255, 0.160084530711174, 0.16351869702339172, 0.17157575488090515, 0.15968827903270721, 0.16589617729187012, 0.1636507660150528, 0.16259410977363586, 0.16470743715763092, 0.17157575488090515, 0.1666886806488037, 0.16682076454162598, 0.1768590658903122, 0.1702549159526825, 0.16959451138973236, 0.17117950320243835], "val_loss": [1.9708890914916992, 1.9705910682678223, 1.9702952929905482, 1.970000880105155, 1.9697084426879883, 1.9694112368992396, 1.969116142817906, 1.9688197544642858, 1.9685239791870117, 1.9682269777570451, 1.9679341316223145, 1.967641966683524, 1.9673478262765067, 1.9670542989458357, 1.9667620658874512, 1.9664714676993233, 1.966179643358503, 1.9658851623535156, 1.9655936786106654, 1.9653000150408064, 1.9650109154837472, 1.9647197723388672, 1.9644286291939872, 1.9641363280160087, 1.9638487270900182, 1.9635579926627023, 1.9632635116577148, 1.9629746164594377, 1.9626849038260323, 1.962395531790597, 1.9621058191571916, 1.9618139948163713, 1.9615250996180944, 1.9612353869846888, 1.960946491786412, 1.9606576647077287, 1.9603703362601144, 1.9600793974740165, 1.9597910472324915, 1.9595038550240653, 1.95921448298863, 1.9589251109531947, 1.9586352620806013, 1.9583433696201868, 1.9580510003226144, 1.957761287689209, 1.9574713025774275, 1.9571813174656458, 1.9568935803004675, 1.956606319972447, 1.9563159942626953, 1.9560284614562988, 1.9557406561715263, 1.955451556614467, 1.9551610265459334, 1.9548696790422713, 1.954580579485212, 1.9542902537754603, 1.954000404902867, 1.9537113734654017, 1.9534222739083427, 1.9531316076006209, 1.952842848641532, 1.952549866267613, 1.9522594043186732, 1.9519694873264857, 1.9516773223876953, 1.9513856342860632, 1.951094491141183, 1.9508051872253418, 1.9505128179277693, 1.9502205848693848, 1.9499348912920271, 1.9496426582336426, 1.9493496758597237, 1.949056897844587, 1.9487637792314803, 1.9484706606183733, 1.9481773376464844, 1.9478840827941895, 1.9475916453770228, 1.9472999572753906, 1.947007179260254, 1.946716376713344, 1.9464177404131209, 1.9461261885506767, 1.9458302770342146, 1.9455325262887138, 1.9452351842607771, 1.944938795907157, 1.9446471759251185, 1.9443542616707938, 1.9440554210117884, 1.9437586239406042, 1.9434623718261719, 1.9431671415056502, 1.9428706169128418, 1.9425700051443917, 1.942267894744873, 1.94196959904262], "val_accuracy": [0.03866666555404663, 0.0403333343565464, 0.041333332657814026, 0.041999999433755875, 0.043666668236255646, 0.04399999976158142, 0.045666664838790894, 0.04800000041723251, 0.05066666752099991, 0.0533333346247673, 0.05433333292603493, 0.055666666477918625, 0.05700000002980232, 0.058666665107011795, 0.061000000685453415, 0.06366666406393051, 0.06533333659172058, 0.06800000369548798, 0.07199999690055847, 0.07366666942834854, 0.07733333110809326, 0.0793333351612091, 0.08366666734218597, 0.08566666394472122, 0.08733333647251129, 0.08933333307504654, 0.09200000017881393, 0.09433333575725555, 0.09700000286102295, 0.1003333330154419, 0.10266666859388351, 0.10466666519641876, 0.1066666692495346, 0.10999999940395355, 0.1120000034570694, 0.1146666631102562, 0.11699999868869781, 0.12066666781902313, 0.1236666664481163, 0.12566666305065155, 0.12866666913032532, 0.1316666603088379, 0.13433332741260529, 0.1379999965429306, 0.14033333957195282, 0.1456666737794876, 0.14766666293144226, 0.1496666669845581, 0.15133333206176758, 0.15533334016799927, 0.1599999964237213, 0.1626666635274887, 0.16566666960716248, 0.16899999976158142, 0.17299999296665192, 0.1743333339691162, 0.1783333271741867, 0.18166667222976685, 0.1836666613817215, 0.18566666543483734, 0.1889999955892563, 0.19099999964237213, 0.1926666647195816, 0.19699999690055847, 0.1979999989271164, 0.20100000500679016, 0.20333333313465118, 0.2043333351612091, 0.20633333921432495, 0.20800000429153442, 0.210999995470047, 0.21199999749660492, 0.2136666625738144, 0.21699999272823334, 0.21899999678134918, 0.2213333398103714, 0.22433333098888397, 0.22699999809265137, 0.22966666519641876, 0.2303333282470703, 0.23100000619888306, 0.23399999737739563, 0.23733332753181458, 0.23800000548362732, 0.2396666705608368, 0.2433333396911621, 0.24566666781902313, 0.24899999797344208, 0.2513333261013031, 0.25333333015441895, 0.2563333213329315, 0.25999999046325684, 0.2619999945163727, 0.2633333206176758, 0.265666663646698, 0.26866665482521057, 0.2706666588783264, 0.27300000190734863, 0.2746666669845581, 0.2759999930858612]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [76, 80, 61], [1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 3, 1, 4, 0, 2, 4, 3, 6, 2, 3, 6, 2, 6, 8, 6, 1, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 2, 3, 1, 3, 3, 3, 3, 1, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 9, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10400000214576721, "mapping_values": [1, 2, 2, 1, 1, 1, 38, 38, 21, 17, 0, 1, 1, 0, 1, 0, 3, 3, 0, 2], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(alpha, grad))))), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), grad)))), grad)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(grad), tf.math.divide_no_nan(tf.math.subtract(tf.math.add(beta, tf.math.negative(grad)), alpha), tf.math.add(beta, tf.math.square(grad))))))), tf.math.add(beta, tf.math.square(alpha))), tf.math.add(beta, beta))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3014169719004753, 2.3024558006355145, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1002509593963623, 0.10196803510189056, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9733670779636927, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10133333504199982, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1], [0, 0, 1], [3, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 1, 0, 1, 1, 1, 1, 2, 1, 2, 2], [16, 80, 61], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 1, 6, 2, 4, 1, 2, 5, 0, 2, 5, 1, 1, 6, 8, 4, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 5, 3, 2, 3, 0, 2, 3, 2, 3, 0, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [0, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [45, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 2, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 3, 3, 0, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, tf.math.subtract(alpha, tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302177617547062, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 1, 3, 0, 3, 4, 3, 6, 2, 5, 6, 2, 6, 1, 6, 9, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 2, 3, 1, 3, 3, 3, 3, 1, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [76, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 9, 9, 5, 4, 0, 1, 1, 0, 1, 0, 5, 4, 1, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(alpha)))), grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [6092.4854385555855, 111509.5157859761, 514887.9368148197, 1432519.2701426495, 3098771.7283053757, 5672412.640932506], "accuracy": [0.10236428678035736, 0.09351472556591034, 0.10011887550354004, 0.10236428678035736, 0.10077928751707077, 0.09496764093637466], "val_loss": [22506.577566964286, 176134.9107142857, 590473.1785714285, 1395103.107142857, 2719605.714285714, 4693567.0], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [76, 80, 61], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 6, 6, 2, 2, 2, 5, 0, 2, 5, 1, 1, 6, 8, 4, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 2, 1, 1, 1, 3, 2, 3, 0, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [41, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.302177617547062, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [76, 80, 61], [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [4, 8, 4, 4, 4, 0, 2, 5, 1, 3, 5, 1, 1, 6, 8, 4, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 0, 3, 2, 3, 1, 1, 3, 2, 3, 0, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 7, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 18, 18, 10, 8, 1, 1, 1, 0, 1, 0, 9, 5, 4, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, beta))), grad)))), alpha)), tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.math.add(sigma, sigma)), tf.math.sqrt(tf.math.divide_no_nan(beta, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [76, 80, 61], [0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 1, 4, 0, 2, 4, 3, 6, 2, 5, 6, 2, 6, 8, 6, 4, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 2, 3, 1, 3, 3, 3, 3, 1, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [1, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.302177617547062, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 1, 6, 3, 4, 1, 2, 5, 0, 2, 5, 1, 1, 6, 8, 4, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 3, 2, 3, 1, 3, 3, 3, 3, 1, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [1, 0, 1, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07898560166358948, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [16, 80, 61], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [5, 3, 1, 9, 0, 2, 4, 3, 6, 2, 5, 6, 1, 6, 8, 6, 4, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 4, 3, 2, 3, 1, 3, 3, 3, 3, 0, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [1, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 6, 6, 4, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha))), tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07898560166358948, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [76, 80, 61], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [2, 1, 6, 6, 4, 2, 2, 5, 0, 2, 5, 1, 1, 6, 8, 4, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 2, 3, 1, 3, 3, 3, 3, 1, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 39, 39, 23, 16, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad))), tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.subtract(beta, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), alpha)), grad))))), tf.math.add(beta, tf.math.sqrt(tf.math.pow(grad, tf.math.pow(tf.math.negative(tf.math.add(beta, tf.math.square(grad))), grad))))))))), tf.math.add(beta, tf.math.sqrt(alpha)))))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.square(alpha))), beta))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(sigma), sigma)", "other_info": {"loss": [1233622344.6714437, 23557728662.570335, 109964430787.06856, 307359381950.6052, 666570454975.8901, 1222099309602.76], "accuracy": [0.10236428678035736, 0.09351472556591034, 0.10011887550354004, 0.10249637067317963, 0.10077928751707077, 0.09496764093637466], "val_loss": [4689427602.285714, 37497751844.57143, 126534605677.71428, 299913538998.8571, 585741313170.2858, 1012128397019.4286], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [76, 80, 61], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 1, 4, 0, 2, 4, 3, 0, 2, 5, 6, 2, 6, 8, 6, 4, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 2, 3, 1, 3, 3, 0, 3, 0, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [2, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 9, 9, 5, 4, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, alpha)))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(grad)), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [33, 80, 61], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 1, 4, 0, 2, 4, 3, 6, 2, 5, 6, 2, 6, 8, 6, 4, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 2, 3, 1, 3, 3, 3, 3, 1, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [1, 3, 2, 1, 0, 0, 2, 2], [41, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(alpha), sigma)", "other_info": {"loss": [2.302619756756048, 2.3036016985535888, 2.302611379418092, 2.3021764693841518, 2.3021740086751605, 2.302104766767857], "accuracy": [0.0878351628780365, 0.08506141602993011, 0.08519349992275238, 0.09047681838274002, 0.0948355570435524, 0.09602430462837219], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 1, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [76, 80, 61], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [2, 1, 6, 2, 4, 1, 2, 5, 0, 2, 5, 1, 1, 6, 8, 4, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 1, 0, 3, 2, 3, 0, 2, 3, 2, 3, 0, 5, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 1, 1, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [45, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, sigma)", "other_info": {"loss": [2.302619756756048, 2.3036016985535888, 2.302611379418092, 2.3021764693841518, 2.3021740086751605, 2.302104766767857], "accuracy": [0.0878351628780365, 0.08506141602993011, 0.08519349992275238, 0.09047681838274002, 0.0948355570435524, 0.09602430462837219], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]