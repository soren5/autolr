[{"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 8, 5, 5, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [1, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [7, 9, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 2, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [0], [6, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.8205714225769043, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(alpha)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.0670192082324097, 1.4247389760834273, 1.0916293809804714, 0.8665988020231821, 0.8050818402989823, 0.7388170169738495, 0.7526390631169596, 0.6943603799784298, 0.6632974535372468, 0.6442986501127643, 0.6226295084764992, 0.6104592935378604, 0.6239303328404888, 0.5843042941172802, 0.5605837080803341, 0.5577577795287669, 0.5416648949315251, 0.5290108289716738, 0.5398527834440944, 0.49381152745235424, 0.49765923288220887, 0.4949477665680369, 0.48394176800489397, 0.45315544442840144, 0.45369806192523027, 0.49711034912726726, 0.43853184355248426, 0.4632700832252883, 0.43359002459161017, 0.4270318844661327, 0.4406984886827407], "accuracy": [0.3008849620819092, 0.501518964767456, 0.607449471950531, 0.6860388517379761, 0.6963412761688232, 0.7202483415603638, 0.7121912837028503, 0.7360982894897461, 0.7400607466697693, 0.7494386434555054, 0.7582882046699524, 0.7637035846710205, 0.7671377658843994, 0.7802139520645142, 0.7853652238845825, 0.7926297783851624, 0.7955356240272522, 0.7946110367774963, 0.7979130744934082, 0.8129705190658569, 0.8095363974571228, 0.8121780753135681, 0.8169330358505249, 0.8285563588142395, 0.8363492488861084, 0.8108572363853455, 0.8368775844573975, 0.8290846943855286, 0.8401796221733093, 0.8432175517082214, 0.8354246616363525], "val_loss": [1.4302517005375452, 0.8753879921776908, 0.6666339806147984, 0.6374488898686, 0.5821515662329537, 0.564933180809021, 0.5475231749670846, 0.5150974307741437, 0.5879992246627808, 0.504033020564488, 0.49965737547193256, 0.4777940511703491, 0.49619715554373606, 0.4577324220112392, 0.4564119407108852, 0.46074114527021137, 0.44388519014631, 0.47012974534715923, 0.4321122680391584, 0.4314276320593698, 0.42554761682237896, 0.4061227355684553, 0.39852007797786165, 0.44119584560394287, 0.4036565933908735, 0.3809150457382202, 0.3952541947364807, 0.3959439141409738, 0.39148980379104614, 0.3820068495614188, 0.38210688318525043], "val_accuracy": [0.4936666786670685, 0.6566666960716248, 0.7179999947547913, 0.7053333520889282, 0.7363333106040955, 0.7400000095367432, 0.7379999756813049, 0.7696666717529297, 0.7179999947547913, 0.777999997138977, 0.7776666879653931, 0.7816666960716248, 0.7919999957084656, 0.7983333468437195, 0.7940000295639038, 0.7913333177566528, 0.7983333468437195, 0.7873333096504211, 0.8169999718666077, 0.8149999976158142, 0.8209999799728394, 0.8246666789054871, 0.8259999752044678, 0.8016666769981384, 0.8199999928474426, 0.8399999737739563, 0.828000009059906, 0.8333333134651184, 0.8363333344459534, 0.8366666436195374, 0.8346666693687439]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 8, 5, 5, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [2, 2, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [7, 9, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 4, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [0], [6, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.8199999928474426, "mapping_values": [1, 6, 6, 6, 0, 2, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.0671130368549275, 1.4267621745900738, 1.0947751962214318, 0.8741016899117579, 0.80915585525945, 0.7553834071280289, 0.7428841277939249, 0.7042512885961456, 0.6565589055944475, 0.6492517411889905, 0.6260707258012994, 0.5959115795975175, 0.6245416162540223, 0.5772488319862787, 0.5612135252003436, 0.5362468849886772, 0.5495122709546374, 0.5259953040519899, 0.5315915580753795, 0.5056064731181023, 0.4803787709431893, 0.49694357048550364, 0.4819793450621377, 0.45062702717073777, 0.4510711572228831, 0.4872684152000978, 0.42626231748981247, 0.467197626451255, 0.4308008187797485, 0.429863370046671, 0.4463230925481144], "accuracy": [0.3007528781890869, 0.499009370803833, 0.6050719618797302, 0.6794346570968628, 0.6948884129524231, 0.7091533541679382, 0.715889573097229, 0.7316074371337891, 0.7448157668113708, 0.7466648817062378, 0.7581561207771301, 0.7716285586357117, 0.7642319202423096, 0.7835160493850708, 0.7848368883132935, 0.7985734939575195, 0.7909126877784729, 0.7971205711364746, 0.798309326171875, 0.8045172095298767, 0.8171972036361694, 0.8101968169212341, 0.8142913579940796, 0.8298771381378174, 0.8334434032440186, 0.8138951063156128, 0.8424250483512878, 0.8273676037788391, 0.8409721255302429, 0.8407079577445984, 0.8321225643157959], "val_loss": [1.430819068636213, 0.8842174666268485, 0.687801582472665, 0.687215941292899, 0.5999433653695243, 0.5782175404684884, 0.5585799217224121, 0.5261467695236206, 0.6015191929680961, 0.5020170382090977, 0.4995290551866804, 0.4757322072982788, 0.48318813528333393, 0.4541142157145909, 0.4445127248764038, 0.4381308044706072, 0.45484890256609234, 0.4855997051511492, 0.4692453145980835, 0.42094017778124126, 0.4275825023651123, 0.40902438334056307, 0.3975180302347456, 0.4168336476598467, 0.4005940982273647, 0.38147540603365215, 0.4021132928984506, 0.3953532746859959, 0.4095251815659659, 0.40340159620557514, 0.3805797610964094], "val_accuracy": [0.4933333396911621, 0.6476666927337646, 0.7066666483879089, 0.6863333582878113, 0.7356666922569275, 0.7423333525657654, 0.7413333058357239, 0.7639999985694885, 0.7093333601951599, 0.7763333320617676, 0.7773333191871643, 0.7879999876022339, 0.7906666398048401, 0.8013333082199097, 0.8053333163261414, 0.8053333163261414, 0.7996666431427002, 0.7816666960716248, 0.7956666946411133, 0.8133333325386047, 0.8169999718666077, 0.8223333358764648, 0.8296666741371155, 0.8076666593551636, 0.8209999799728394, 0.8366666436195374, 0.8266666531562805, 0.8336666822433472, 0.8220000267028809, 0.8306666612625122, 0.8326666951179504]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 5, 5, 5, 0, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [1, 2, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 8, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 4, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [0], [6, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.8162857294082642, "mapping_values": [1, 7, 7, 6, 1, 1, 6, 6, 4, 2, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.sqrt(tf.math.add(beta, beta)), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.067036612536756, 1.430245819628404, 1.1001026602138413, 0.8762848243548366, 0.8775749613721971, 0.7698287392147559, 0.7291874995462773, 0.6930066864362341, 0.6512481480179493, 0.632588131143401, 0.6184248772232429, 0.6212468323627593, 0.6163282552415417, 0.5522595213593556, 0.5863515341821962, 0.5547618909739327, 0.5461453409589214, 0.5283112074004315, 0.5440901501571435, 0.5079773897468737, 0.4845426202906814, 0.49626163765738873, 0.48942312624208556, 0.4795041351097292, 0.4545334942226538, 0.482925726741202, 0.4342100115035582, 0.4602498171776986, 0.434243334881177, 0.42722653696691637, 0.4490188391429716], "accuracy": [0.3008849620819092, 0.49887728691101074, 0.6095628142356873, 0.6793025732040405, 0.6724342703819275, 0.7128516435623169, 0.7168141603469849, 0.737947404384613, 0.7469290494918823, 0.7598732113838196, 0.7592127919197083, 0.7626469135284424, 0.7684586048126221, 0.7930260300636292, 0.778232753276825, 0.7935543656349182, 0.7926297783851624, 0.7967243194580078, 0.7922335267066956, 0.8045172095298767, 0.8138951063156128, 0.8138951063156128, 0.8140271902084351, 0.817989706993103, 0.8333113193511963, 0.817461371421814, 0.8384625315666199, 0.8301413059234619, 0.8403117060661316, 0.8424250483512878, 0.828292191028595], "val_loss": [1.4306621892111642, 0.9026140144893101, 0.6710921696254185, 0.6235505001885551, 0.6428731850215367, 0.5632569449288505, 0.5477983781269619, 0.511702299118042, 0.547167181968689, 0.5093497548784528, 0.5066606146948678, 0.4933842250279018, 0.4906731162752424, 0.4533771957669939, 0.45417955943516325, 0.4727416379111154, 0.4257062758718218, 0.46771836280822754, 0.45431051935468403, 0.4279146449906485, 0.4170653905187334, 0.4503065177372524, 0.4376011575971331, 0.4018325209617615, 0.4024495908192226, 0.38065907784870695, 0.4187815189361572, 0.39339994532721384, 0.4126062904085432, 0.404484008039747, 0.3902315241949899], "val_accuracy": [0.4936666786670685, 0.6633333563804626, 0.7080000042915344, 0.7179999947547913, 0.7133333086967468, 0.7366666793823242, 0.7450000047683716, 0.7713333368301392, 0.7576666474342346, 0.7766666412353516, 0.7770000100135803, 0.7850000262260437, 0.7889999747276306, 0.8016666769981384, 0.7946666479110718, 0.7846666574478149, 0.8169999718666077, 0.7866666913032532, 0.8059999942779541, 0.8113333582878113, 0.8240000009536743, 0.7929999828338623, 0.8006666898727417, 0.8216666579246521, 0.8196666836738586, 0.8383333086967468, 0.8163333535194397, 0.8323333263397217, 0.8230000138282776, 0.8256666660308838, 0.8276666402816772]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 8, 5, 5, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [2, 2, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [7, 9, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 4, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [94, 19, 41, 7, 45, 13], [0], [1, 1, 1], [0], [6, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.8045714497566223, "mapping_values": [1, 6, 6, 6, 0, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.067049721449027, 1.432078046522215, 1.0927461060030963, 0.8952327707991262, 0.831363125342451, 0.776135435280405, 0.7233721093573449, 0.6844805897250545, 0.6601668688615142, 0.6491059735072933, 0.6301743658368991, 0.6028146502710588, 0.6200352769643718, 0.5719741902346971, 0.5628169926795914, 0.5435999041031286, 0.544970630276803, 0.5302989574754715, 0.5360443063022249, 0.4985387210187155, 0.48565437498188385, 0.49360433743220783, 0.48030895354127084, 0.4559208264660763, 0.4690832572881776, 0.4788719937825294, 0.4343524419549686, 0.46691463060067895, 0.43388444827673944, 0.4274561121644534, 0.4411103746965341], "accuracy": [0.3008849620819092, 0.5005943775177002, 0.6104874014854431, 0.668339729309082, 0.6955488324165344, 0.7091533541679382, 0.722757875919342, 0.7378153204917908, 0.746268630027771, 0.7465327978134155, 0.7541936039924622, 0.7697794437408447, 0.7677981853485107, 0.785101056098938, 0.7833839654922485, 0.7973847389221191, 0.7935543656349182, 0.7951393723487854, 0.800290584564209, 0.809140145778656, 0.813498854637146, 0.8150838613510132, 0.8177255392074585, 0.8290846943855286, 0.8259146809577942, 0.8181217908859253, 0.8389908671379089, 0.8273676037788391, 0.8405758738517761, 0.8417646288871765, 0.8325188159942627], "val_loss": [1.4301346029554094, 0.9311149801526751, 0.6980745792388916, 0.7410847459520612, 0.6092256818498883, 0.5457280193056379, 0.5460847616195679, 0.5133180447987148, 0.5676544393811908, 0.5045914309365409, 0.5016239370618548, 0.4816983938217163, 0.48085473264966694, 0.45308193138667513, 0.44779583386012484, 0.49640032223292757, 0.42592317717415945, 0.48375894342150005, 0.42600459711892263, 0.4180635895047869, 0.4293087635721479, 0.40696695872715544, 0.40474862711770193, 0.4050560082708086, 0.3858567305973598, 0.37765281541006906, 0.3940258026123047, 0.3920761431966509, 0.39010288034166607, 0.38440102338790894, 0.3845978464399065], "val_accuracy": [0.49266666173934937, 0.6520000100135803, 0.6863333582878113, 0.6853333115577698, 0.731333315372467, 0.7613333463668823, 0.7446666955947876, 0.7693333625793457, 0.7266666889190674, 0.777999997138977, 0.7770000100135803, 0.7820000052452087, 0.7940000295639038, 0.8029999732971191, 0.8040000200271606, 0.768666684627533, 0.8153333067893982, 0.7803333401679993, 0.8220000267028809, 0.8199999928474426, 0.8163333535194397, 0.8233333230018616, 0.8263333439826965, 0.8286666870117188, 0.8356666564941406, 0.8456666469573975, 0.831333339214325, 0.8373333215713501, 0.8333333134651184, 0.8383333086967468, 0.831333339214325]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 8, 5, 5, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [2, 2, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [48, 12, 22, 41, 42, 68], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 8, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 4, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [0], [4, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.8002856969833374, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.sqrt(tf.math.add(beta, beta)), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.0670847341038407, 1.4249769826496534, 1.08738282713766, 0.8773081559609618, 0.8490007485318036, 0.7560499206966712, 0.7390988127761088, 0.700103321733287, 0.6671880309324475, 0.6486650882159651, 0.6314910568534076, 0.5939137786134768, 0.6234362511319287, 0.5554791849680769, 0.5804481394239593, 0.5691069599234622, 0.54175915435919, 0.5347900151450636, 0.5381314453589304, 0.5001684190488179, 0.49109203402770274, 0.5039606361679823, 0.48312240993310557, 0.45363235844439675, 0.4601625585127752, 0.4819334016744062, 0.4459132663782609, 0.45791921538762476, 0.43173780636607284, 0.4266894600686144, 0.44988934703002975, 0.4202736289848221, 0.4143624858865019, 0.39018132929961913, 0.4226338259650417, 0.37804265541722354, 0.39218731252288364, 0.3945314058963381, 0.39137234145450933, 0.380702958060073], "accuracy": [0.30062079429626465, 0.4991414546966553, 0.6046757102012634, 0.6778497099876404, 0.6773213744163513, 0.7145687341690063, 0.7083608508110046, 0.7360982894897461, 0.7415136694908142, 0.7479857206344604, 0.7559106945991516, 0.7734777331352234, 0.7648923397064209, 0.7911768555641174, 0.774270236492157, 0.7858935594558716, 0.7972526550292969, 0.7947431206703186, 0.7965922355651855, 0.8096684813499451, 0.8109893202781677, 0.8086118102073669, 0.8212917447090149, 0.8293488025665283, 0.8294808864593506, 0.8189142942428589, 0.8318583965301514, 0.8317263126373291, 0.8417646288871765, 0.8442742228507996, 0.8325188159942627, 0.8412362933158875, 0.8457271456718445, 0.8568220734596252, 0.8399154543876648, 0.8551049828529358, 0.854708731174469, 0.8518029451370239, 0.8545766472816467, 0.8594637513160706], "val_loss": [1.4323387145996094, 0.8943477358136859, 0.6587854453495571, 0.6420803921563285, 0.6375647612980434, 0.5700949260166713, 0.5474310602460589, 0.5291545561381749, 0.5599254199436733, 0.5095628840582711, 0.4976334401539394, 0.4780703953334263, 0.5025172574179513, 0.46861406735011507, 0.4818339858736311, 0.46662827900477816, 0.4457336834498814, 0.45820299216679167, 0.4408278465270996, 0.4316926428249904, 0.4308624863624573, 0.4037864548819406, 0.4079176187515259, 0.40632814168930054, 0.42406355483191355, 0.377769478729793, 0.388166538306645, 0.38818677834102083, 0.3919663003512791, 0.3773403763771057, 0.3754717707633972, 0.36593527453286306, 0.36889571802956717, 0.36219151530947, 0.3522940959249224, 0.37018838950565885, 0.3761099066053118, 0.3778539299964905, 0.3723136952945164, 0.3516662205968584], "val_accuracy": [0.49399998784065247, 0.6466666460037231, 0.7143333554267883, 0.7039999961853027, 0.7149999737739563, 0.7283333539962769, 0.7433333396911621, 0.7590000033378601, 0.7393333315849304, 0.7689999938011169, 0.7799999713897705, 0.7900000214576721, 0.7723333239555359, 0.7990000247955322, 0.7756666541099548, 0.7889999747276306, 0.7946666479110718, 0.7913333177566528, 0.8143333196640015, 0.812666654586792, 0.812666654586792, 0.8259999752044678, 0.8246666789054871, 0.8163333535194397, 0.8046666383743286, 0.843999981880188, 0.8356666564941406, 0.8403333425521851, 0.8320000171661377, 0.8399999737739563, 0.8453333377838135, 0.8410000205039978, 0.8460000157356262, 0.8476666808128357, 0.8550000190734863, 0.8433333039283752, 0.8443333506584167, 0.8346666693687439, 0.8513333201408386, 0.8543333411216736]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 8, 5, 5, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [1, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [7, 9, 6, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 2, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [0], [6, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.7911428809165955, "mapping_values": [1, 5, 5, 5, 0, 1, 6, 6, 4, 2, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.0288223213980054, 1.452251814186707, 1.0326801849126406, 0.8757288018946382, 0.7786769121314525, 0.7893245646100491, 0.7075779815360052, 0.6822562490267257, 0.6654171950750032, 0.6417473904240354, 0.6442786067657309, 0.6058591069200209, 0.5923920454618056, 0.570461106991582, 0.5665157322382269, 0.5333147255846254, 0.5439162034604843, 0.5122449661620683, 0.5069677978222632], "accuracy": [0.31660282611846924, 0.5023114681243896, 0.6115440726280212, 0.6736230254173279, 0.7055870890617371, 0.7106062769889832, 0.7320036888122559, 0.7407211661338806, 0.7519482374191284, 0.750759482383728, 0.7519482374191284, 0.7749306559562683, 0.774270236492157, 0.7829877138137817, 0.791969358921051, 0.8013472557067871, 0.7938185334205627, 0.8086118102073669, 0.8103289008140564], "val_loss": [1.2617616653442383, 0.8971424273082188, 0.7171006202697754, 0.6081479106630597, 0.5601043701171875, 0.5733287334442139, 0.5573020832879203, 0.5294393471309117, 0.5606535502842495, 0.4929417882646833, 0.4901702914919172, 0.5282397099903652, 0.49292569501059397, 0.4557358707700457, 0.4476976564952305, 0.44831920521599905, 0.4469761167253767, 0.4288569007601057, 0.47236972195761545], "val_accuracy": [0.5059999823570251, 0.578000009059906, 0.6573333144187927, 0.7246666550636292, 0.7463333606719971, 0.7406666874885559, 0.7473333477973938, 0.7609999775886536, 0.7400000095367432, 0.7763333320617676, 0.7906666398048401, 0.7396666407585144, 0.7789999842643738, 0.8083333373069763, 0.8083333373069763, 0.8009999990463257, 0.7916666865348816, 0.8080000281333923, 0.7943333387374878]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 8, 5, 5, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [1, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 1, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [0], [6, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [13, 74, 76, 58]], "fitness": -0.7799999713897705, "mapping_values": [1, 2, 2, 1, 1, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.2813022359644717, 2.221757015988591, 2.125768790958643, 1.9545608893078175, 1.7198887434554941, 1.4915521730600079, 1.3160376071835458, 1.2064762774270839, 1.1177455439401922, 1.0684016452662586, 1.005883684239887, 0.977196413921784, 0.9486287579150988, 0.9136055389950856, 0.8945745766879293, 0.8729202781355282, 0.8531719306991904, 0.8436936600223083, 0.8196581156104862, 0.8062340494049948, 0.8011733966654065, 0.7802971830032348, 0.7703197686317307, 0.7620101145796725, 0.7593634666909694, 0.7523452341202275, 0.7428776330526526, 0.7427514053890025, 0.7313930571764184, 0.7284176183997081, 0.7194556769457444, 0.7110627711630139, 0.7002149786474903, 0.7037311426369175, 0.7001498244646722, 0.6985525394065458, 0.6819305754828966, 0.6710525051383232, 0.6721455337758455, 0.673251191504706, 0.6693171787617812, 0.66918573341255, 0.6698154867238625, 0.6543195018789094, 0.6589689067467849, 0.6509078088107126, 0.6442394298553593, 0.643520296289149, 0.6386000653614442, 0.6499985901986005, 0.6340678812742327], "accuracy": [0.1398758441209793, 0.26958128809928894, 0.36322811245918274, 0.4193633496761322, 0.4703473746776581, 0.5178972482681274, 0.5601637959480286, 0.5898824334144592, 0.6092986464500427, 0.6267336010932922, 0.6495839357376099, 0.6522256135940552, 0.6613393425941467, 0.6745476126670837, 0.6823405027389526, 0.6864351034164429, 0.6934354901313782, 0.6944921612739563, 0.7037379741668701, 0.7079645991325378, 0.7120591998100281, 0.7143045663833618, 0.7211728692054749, 0.7268524765968323, 0.7226257920265198, 0.7272487282752991, 0.7312111854553223, 0.726192057132721, 0.7353057861328125, 0.7337207794189453, 0.7388719916343689, 0.7372870445251465, 0.7390040755271912, 0.739928662776947, 0.7388719916343689, 0.7442874312400818, 0.7474573850631714, 0.7524765729904175, 0.7497028112411499, 0.7531369924545288, 0.7489103078842163, 0.7530049085617065, 0.748778223991394, 0.7568352818489075, 0.7567031979560852, 0.7604015469551086, 0.7617223858833313, 0.7605336308479309, 0.7625148296356201, 0.7584202885627747, 0.7646281719207764], "val_loss": [1.9219491141183036, 1.8512789862496513, 1.7244962283543177, 1.5106610230037145, 1.2580384186335973, 1.0531632219042097, 0.9213509219033378, 0.8369802066258022, 0.7808281864438739, 0.7362311737877982, 0.7027773005621774, 0.6823971612112862, 0.6636884893689837, 0.6460999420710972, 0.6313261474881854, 0.6207283905574253, 0.6142220326832363, 0.6032019002096993, 0.5910067387989589, 0.5854227883475167, 0.5787177767072406, 0.5763940129961286, 0.5698636089052472, 0.5594745193208966, 0.5554875305720738, 0.5511750493730817, 0.5474298511232648, 0.5440352133342198, 0.5405684539249965, 0.5362699542726789, 0.5316535404750279, 0.5308882168361119, 0.5252970116479057, 0.5244397265570504, 0.5200799533299038, 0.5153795991625104, 0.5140510627201625, 0.5109553847994123, 0.5101027659007481, 0.5108094045094081, 0.5035839762006488, 0.5092898436955043, 0.49833808626447407, 0.5005208083561489, 0.49581028733934673, 0.4932507106236049, 0.4907858031136649, 0.49017839772360666, 0.48621129989624023, 0.4888557365962437, 0.4869920696531023], "val_accuracy": [0.36133334040641785, 0.4493333399295807, 0.5256666541099548, 0.5360000133514404, 0.5849999785423279, 0.6386666893959045, 0.6679999828338623, 0.6800000071525574, 0.6943333148956299, 0.7059999704360962, 0.7149999737739563, 0.7210000157356262, 0.7273333072662354, 0.7279999852180481, 0.7316666841506958, 0.7333333492279053, 0.7269999980926514, 0.7433333396911621, 0.7446666955947876, 0.7513333559036255, 0.7509999871253967, 0.7486666440963745, 0.75, 0.7523333430290222, 0.7566666603088379, 0.7580000162124634, 0.7546666860580444, 0.7566666603088379, 0.7573333382606506, 0.7616666555404663, 0.7639999985694885, 0.7689999938011169, 0.7590000033378601, 0.7703333497047424, 0.765999972820282, 0.7680000066757202, 0.7713333368301392, 0.7683333158493042, 0.7666666507720947, 0.7776666879653931, 0.7739999890327454, 0.7689999938011169, 0.7760000228881836, 0.7833333611488342, 0.7726666927337646, 0.7873333096504211, 0.7820000052452087, 0.7846666574478149, 0.7826666831970215, 0.7826666831970215, 0.7823333144187927]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 8, 5, 5, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [2, 2, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [7, 9, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 4, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [0], [6, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [14, 74, 76, 58]], "fitness": -0.7725714445114136, "mapping_values": [1, 5, 5, 5, 0, 1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.2790108914577476, 2.210386146061204, 2.0907957531504895, 1.874261320369465, 1.6082655973973574, 1.389809917748612, 1.2359485888068609, 1.1405011866118189, 1.0624923694403008, 1.0209244819538326, 0.9633400624674766, 0.9392653010493304, 0.9126493095280929, 0.882164605761941, 0.86529412984911, 0.8468005186247709, 0.8271035673029119, 0.819105933804034, 0.7970056272280482, 0.7848056308613194, 0.7797923711674828, 0.7596174596622242, 0.7509399728295731, 0.7422798801769024, 0.741144075747636, 0.7340704690762924, 0.724966067868516, 0.7249215742805143, 0.7141482083159132, 0.7108300548613173, 0.7025487590711571, 0.6943447179703618, 0.6836357570563671, 0.6872733825737255, 0.6831509408115034, 0.6833715661326892, 0.6668837281691163, 0.6562261755330105, 0.6567575756144042, 0.6582118706491566, 0.6544642171540422, 0.6540358717714586], "accuracy": [0.14621582627296448, 0.28358209133148193, 0.37868180871009827, 0.4415532946586609, 0.4928014874458313, 0.5381059050559998, 0.5779950022697449, 0.6126006841659546, 0.6258090138435364, 0.6413947939872742, 0.6645092964172363, 0.6646413803100586, 0.6740192770957947, 0.6864351034164429, 0.6897371411323547, 0.6942279934883118, 0.7029454708099365, 0.7030775547027588, 0.7103421092033386, 0.7153612375259399, 0.7197200059890747, 0.7213049530982971, 0.7256637215614319, 0.7326641082763672, 0.7251353859901428, 0.7322678565979004, 0.7374191284179688, 0.7327961921691895, 0.7396644949913025, 0.7408532500267029, 0.7450799345970154, 0.746268630027771, 0.7452120184898376, 0.7448157668113708, 0.7437590956687927, 0.7489103078842163, 0.7519482374191284, 0.7576277852058411, 0.7544577717781067, 0.7584202885627747, 0.7537974119186401, 0.7589486241340637], "val_loss": [1.9161161014011927, 1.8306775093078613, 1.6683808394840784, 1.40482497215271, 1.1411848068237305, 0.9633642264774868, 0.8555343491690499, 0.7876788888658796, 0.7429294415882656, 0.7040285553250994, 0.6758779457637242, 0.6589138848440987, 0.6419885499136788, 0.6266769341060093, 0.6133964572634015, 0.6050699778965541, 0.5995522737503052, 0.5886056593486241, 0.576758895601545, 0.5724899939128331, 0.5665548699242728, 0.5655021156583514, 0.5587953499385289, 0.5479907819202968, 0.5447207689285278, 0.5409775461469378, 0.5372782264436994, 0.5338613816670009, 0.5299240691321236, 0.5264907564435687, 0.522161637033735, 0.5217497519084385, 0.5165432691574097, 0.5157489436013358, 0.5107442992074149, 0.5072297879627773, 0.5045387063707624, 0.5020803213119507, 0.502163188798087, 0.5015830142157418, 0.49439903667994906, 0.501964841570173], "val_accuracy": [0.3696666657924652, 0.4636666774749756, 0.5406666398048401, 0.543666660785675, 0.6166666746139526, 0.6623333096504211, 0.6833333373069763, 0.690666675567627, 0.7013333439826965, 0.7153333425521851, 0.7193333506584167, 0.7276666760444641, 0.7300000190734863, 0.7353333234786987, 0.7366666793823242, 0.734000027179718, 0.7329999804496765, 0.746999979019165, 0.749666690826416, 0.7553333044052124, 0.7536666393280029, 0.7519999742507935, 0.7553333044052124, 0.7563333511352539, 0.7606666684150696, 0.7609999775886536, 0.7590000033378601, 0.7643333077430725, 0.7620000243186951, 0.765333354473114, 0.7689999938011169, 0.7723333239555359, 0.762333333492279, 0.7716666460037231, 0.7736666798591614, 0.7739999890327454, 0.7796666622161865, 0.7720000147819519, 0.7696666717529297, 0.7796666622161865, 0.778333306312561, 0.7739999890327454]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 9, 5, 2, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [1, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 8, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 4, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [0], [6, 1], [52], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.75, "mapping_values": [1, 3, 3, 2, 1, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.1827679518396197, 1.5033283994780744, 1.1929807836636892, 0.988865895577394, 0.8926917509458887, 0.8434337293703353, 0.788511729778914, 0.7678599053401642, 0.7738998262180927, 0.7045119649556807, 0.6939623002457408], "accuracy": [0.2709021270275116, 0.5079910159111023, 0.5779950022697449, 0.6416589617729187, 0.6783780455589294, 0.6861709356307983, 0.709021270275116, 0.7185312509536743, 0.7132478952407837, 0.7395324110984802, 0.7383436560630798], "val_loss": [1.5447656086512975, 0.9512888363429478, 0.7705247402191162, 0.6744992733001709, 0.6697091375078473, 0.5893013647624424, 0.5835005385535104, 0.6247925417763847, 0.5788909878049578, 0.5664476496832711, 0.5916655744825091], "val_accuracy": [0.4676666557788849, 0.6060000061988831, 0.6966666579246521, 0.7126666903495789, 0.7120000123977661, 0.7483333349227905, 0.7379999756813049, 0.7273333072662354, 0.7263333201408386, 0.7390000224113464, 0.7246666550636292]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 8, 5, 5, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [2, 2, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [7, 9, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 4, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [0], [6, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 1, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.11257142573595047, "mapping_values": [1, 6, 6, 6, 0, 2, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.subtract(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), sigma)), beta)", "other_info": {"loss": [2.3012027671828075, 2.3024384442290233, 2.30258530487773, 2.3025852911791325, 2.3025852868963526, 2.3025854442570237], "accuracy": [0.10394927859306335, 0.10315678268671036, 0.09998679161071777, 0.09391097724437714, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9734597206115723, 1.9736442565917969, 1.9736440522330148, 1.9736440522330148, 1.9736439159938268, 1.9736439841134208], "val_accuracy": [0.11599999666213989, 0.09866666793823242, 0.09866666793823242, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 8, 5, 5, 0, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [1, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [4, 9, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 2, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [0], [6, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [2, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 6, 1, 1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.negative(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.pow(grad, tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(beta)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 8, 5, 5, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [0, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [23, 12, 22, 41, 42, 68], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [7, 9, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 2, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [0], [6, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [1, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 5, 1, 2, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(alpha)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 8, 5, 5, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [2, 2, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [4, 9, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 4, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [0], [6, 1], [52], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 6, 8, 6, 0, 4, 5, 6, 0, 9], [0, 2, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 8, 5, 5, 0, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [2, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 8, 4, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 4, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [0], [6, 1], [52], [0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 2, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 6, 1, 1, 7, 7, 5, 2, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.negative(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.sqrt(tf.math.add(beta, beta)), tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(beta))", "other_info": {"loss": [741224.4481710125, 13029720.552635055, 61774005.31290451, 177079579.72262582, 400634869.9659226, 788375468.0840048], "accuracy": [0.10038304328918457, 0.09628847241401672, 0.10038304328918457, 0.1006472036242485, 0.10421344637870789, 0.10170386731624603], "val_loss": [2779094.5, 22849869.714285713, 82809622.85714285, 212800704.0, 451510829.71428573, 847465270.8571428], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 2, 5, 5, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [1, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [5, 9, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 2, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [0], [2, 1], [52], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 6, 0, 2, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.square(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.302599864597444, 2.303157034267949, 2.305528030230495, 2.3110519442749125, 2.3191853067138335, 2.339014300958686, 2.3749447173414735, 5.556469436744264, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08796724677085876, 0.09192973375320435, 0.09179764986038208, 0.08360850811004639, 0.08717474341392517, 0.07726852595806122, 0.0882314071059227, 0.08968432247638702, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9716339111328125, 1.9730911254882812, 1.9758755820138114, 1.980452605656215, 1.9873817988804408, 2.0017954962594167, 2.0574667113167897, 2689995.714285714, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.032999999821186066, 0.024666666984558105, 0.020666666328907013, 0.032999999821186066, 0.06300000101327896, 0.09433333575725555, 0.09833333641290665, 0.09833333641290665, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 8, 5, 2, 0, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [2, 2, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [7, 9, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 4, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [0], [6, 1], [52], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 5, 8, 6, 0, 4, 5, 6, 0, 9], [2, 3, 2, 1, 0, 0, 2, 2], [86, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 6, 4, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.square(beta)), tf.math.sqrt(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 8, 5, 5, 2, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [2, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [4, 9, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 2, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [1], [1, 1, 1], [0], [6, 1], [52], [1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [52, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 6, 2, 1, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.pow(grad, tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3025379378986774, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 8, 5, 5, 4, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [1, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [5, 9, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 2, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [0], [6, 1], [52], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 2, 8, 6, 0, 4, 5, 6, 0, 9], [0, 1, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.square(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(alpha))", "other_info": {"loss": [2.3024651140128114, 2.3020715304432513, 2.3020612045034143, 2.3026623965852755, 2.3021098128273314, 2.3038343554080956], "accuracy": [0.0882314071059227, 0.09298639744520187, 0.09259014576673508, 0.09245806187391281, 0.09721305221319199, 0.08928807079792023], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 8, 6, 5, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [1, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [7, 9, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 4, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [1], [1, 1, 1], [0], [6, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 6, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 7, 7, 5, 2, 1, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), sigma)), beta)", "other_info": {"loss": [2.3024651140128114, 2.3020715304432513, 2.3020612045034143, 2.3026623965852755, 2.3021098128273314, 2.3038343554080956], "accuracy": [0.0882314071059227, 0.09298639744520187, 0.09259014576673508, 0.09245806187391281, 0.09721305221319199, 0.08928807079792023], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 8, 9, 5, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [2, 2, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 8, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 4, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [1], [1, 1, 1], [0], [6, 1], [52], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [62, 74, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 3, 3, 3, 0, 1, 6, 6, 4, 2, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.sqrt(beta), tf.math.add(beta, tf.math.square(tf.math.square(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.3024651140128114, 2.3020715304432513, 2.3020612045034143, 2.3026623965852755, 2.3021098128273314, 2.3038343554080956], "accuracy": [0.0882314071059227, 0.09298639744520187, 0.09259014576673508, 0.09245806187391281, 0.09721305221319199, 0.08928807079792023], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]