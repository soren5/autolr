[{"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1], [2, 9, 6, 5, 9, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [77, 80, 61], [0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 9, 6, 1, 4, 6, 2, 1, 9, 4, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 1, 3, 0, 1, 1, 1, 3, 3, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [94, 41, 37, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.8308571577072144, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.2561853363875777, 1.8404804837702131, 1.404967213839021, 1.1332571632857997, 1.0090408511937112, 0.8404497326546184, 0.7771381295557114, 0.7697135232317134, 0.7212043040621597, 0.6601476974302137, 0.6706484649805203, 0.6843396235120106, 0.6389013812164385, 0.5924434057631119, 0.573488093283765, 0.5606051645085576, 0.5567228201279283, 0.5605935032624988, 0.5142700341887494, 0.529531033653798, 0.48826754944215217, 0.5030105118313171, 0.4910317854464975, 0.4597488080647486, 0.4775486255381731, 0.45557310293930364, 0.4447089578410685, 0.43065676591447033, 0.42655995318115253, 0.42769634191464945, 0.4229186688353121, 0.4070001145584425, 0.3868098135724154, 0.38850550538340045, 0.3828398105041966, 0.37524238874364, 0.3956396622491503, 0.3661665438763328, 0.3927685500702854, 0.34774242144502654, 0.36302838927687686, 0.35912184633945415], "accuracy": [0.29097872972488403, 0.39770177006721497, 0.5038964748382568, 0.6032228469848633, 0.6302998065948486, 0.6889446377754211, 0.6979262828826904, 0.7042662501335144, 0.7268524765968323, 0.7429665923118591, 0.7453441023826599, 0.7305507659912109, 0.7573636174201965, 0.7724210619926453, 0.7829877138137817, 0.7948752045631409, 0.7876105904579163, 0.7897239327430725, 0.798309326171875, 0.796328067779541, 0.8186501264572144, 0.8059701323509216, 0.8131026029586792, 0.8296129703521729, 0.8210275769233704, 0.8259146809577942, 0.8334434032440186, 0.8445383906364441, 0.8389908671379089, 0.8380662798881531, 0.8433496356010437, 0.8475762605667114, 0.857218325138092, 0.857218325138092, 0.8605204224586487, 0.8574824929237366, 0.8495575189590454, 0.8644828796386719, 0.8491612672805786, 0.871879518032074, 0.8625016212463379, 0.8646149635314941], "val_loss": [1.8023058346339635, 0.9607516356876918, 0.9967495032719204, 0.8226782253810337, 0.6515097618103027, 0.6842946325029645, 0.6458172457558768, 0.6303910698209491, 0.5663715941565377, 0.530660799571446, 0.5322830847331456, 0.5419674600873675, 0.5059694903237479, 0.501018830708095, 0.5095783301762172, 0.45132248742239817, 0.49285893780844553, 0.43625407559531076, 0.4663951737540109, 0.4439837081091745, 0.4421448026384626, 0.4342509593282427, 0.43570492948804584, 0.41568306514195036, 0.41006449290684294, 0.39939933163779123, 0.39848301240376066, 0.4004638535635812, 0.4132018429892404, 0.37488527808870586, 0.3755681003843035, 0.3654954092843192, 0.3720642328262329, 0.3594866394996643, 0.39480481828962055, 0.4283217787742615, 0.3514079196112497, 0.371636016028268, 0.37052578585488455, 0.35626700094767977, 0.3628624847957066, 0.34944753987448557], "val_accuracy": [0.18966667354106903, 0.5916666388511658, 0.5860000252723694, 0.6413333415985107, 0.7073333263397217, 0.6859999895095825, 0.6899999976158142, 0.7070000171661377, 0.7596666812896729, 0.750333309173584, 0.7680000066757202, 0.7246666550636292, 0.7593333125114441, 0.7723333239555359, 0.7726666927337646, 0.7960000038146973, 0.7753333449363708, 0.8086666464805603, 0.7929999828338623, 0.8026666641235352, 0.8103333115577698, 0.8083333373069763, 0.8136666417121887, 0.8096666932106018, 0.8216666579246521, 0.8246666789054871, 0.8236666917800903, 0.8216666579246521, 0.8309999704360962, 0.8429999947547913, 0.8356666564941406, 0.8429999947547913, 0.8460000157356262, 0.8523333072662354, 0.8276666402816772, 0.82833331823349, 0.8586666584014893, 0.8543333411216736, 0.8423333168029785, 0.8583333492279053, 0.8450000286102295, 0.8573333621025085]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [6, 8, 5, 5, 9, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 2], [7, 80, 61], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 7, 3, 4, 6, 9, 1, 4, 2, 2, 3, 5, 4, 8, 0, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 2, 3, 3, 0, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [67, 13, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.8277142643928528, "mapping_values": [1, 4, 4, 2, 2, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.negative(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.2561981813263, 1.843861682571519, 1.3885770211398027, 1.078110985704905, 0.9924359020067638, 0.855131686324252, 0.8106071289661712, 0.7505791943228524, 0.712137936325499, 0.678002017671091, 0.6489384429739168, 0.6529694636736281, 0.6507678581833477, 0.5798936346502761, 0.5706628526379766, 0.5564506190989263, 0.575767623049283, 0.5519176038532461, 0.5061438930521174, 0.5459145621112813, 0.48599768512363306, 0.4964199130167625, 0.494366841183331, 0.4576448928513122, 0.4731911524270173, 0.46272831223880484, 0.4356756099675546, 0.4337796155235881], "accuracy": [0.2907145619392395, 0.39585259556770325, 0.5134063959121704, 0.6189407110214233, 0.6370360851287842, 0.6841896772384644, 0.6919825673103333, 0.7125874757766724, 0.7327961921691895, 0.7395324110984802, 0.7504953145980835, 0.7421740889549255, 0.7515519857406616, 0.7823272943496704, 0.7815347909927368, 0.7854973077774048, 0.7808743715286255, 0.7911768555641174, 0.8068947196006775, 0.789988100528717, 0.8182538747787476, 0.8082155585289001, 0.8125742673873901, 0.8289526104927063, 0.8272355198860168, 0.8239334225654602, 0.8290846943855286, 0.8416325449943542], "val_loss": [1.8015901020595007, 0.982391323362078, 0.856129356792995, 0.7692022834505353, 0.6923232078552246, 0.6391463109425136, 0.5981387751443046, 0.5325450897216797, 0.5633199725832257, 0.54976943561009, 0.5293878657477242, 0.5345509733472552, 0.48195174762180876, 0.5212525469916207, 0.5000303132193429, 0.4806110518319266, 0.48052847385406494, 0.4679216316768101, 0.5278223752975464, 0.4303936447416033, 0.4407309208597456, 0.4425173657281058, 0.41931251117161344, 0.428995030266898, 0.44461301394871305, 0.4005073308944702, 0.42474729674203054, 0.40104040929249357], "val_accuracy": [0.19033333659172058, 0.5866666436195374, 0.6566666960716248, 0.6633333563804626, 0.6833333373069763, 0.7129999995231628, 0.7070000171661377, 0.7603333592414856, 0.7586666941642761, 0.7509999871253967, 0.737666666507721, 0.7453333139419556, 0.7886666655540466, 0.7573333382606506, 0.7793333530426025, 0.781000018119812, 0.7923333048820496, 0.7860000133514404, 0.7649999856948853, 0.812333345413208, 0.812333345413208, 0.8056666851043701, 0.8299999833106995, 0.7973333597183228, 0.8143333196640015, 0.8286666870117188, 0.8096666932106018, 0.8226666450500488]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 8, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 2, 0, 1, 1, 1, 1, 2, 1, 2, 2], [77, 80, 61], [0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 3, 2, 3, 4, 6, 9, 1, 4, 2, 2, 3, 5, 4, 8, 0, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 3, 3, 3, 2, 1, 2, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [29, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.8231428861618042, "mapping_values": [1, 1, 1, 0, 1, 0, 35, 35, 21, 14, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(alpha, tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), beta)), tf.math.add(tf.math.add(beta, tf.math.multiply(alpha, tf.math.add(beta, tf.math.square(beta)))), tf.math.add(beta, grad))))))), tf.math.add(beta, grad)))), tf.math.pow(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.square(tf.math.add(beta, tf.math.sqrt(alpha))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), grad))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.256095270344673, 1.8437329548193464, 1.3286170210143626, 1.089767548221056, 1.0764350383320442, 0.9262622359595389, 0.8712427007948891, 0.7668661308908947, 0.7245575899319516, 0.6470385728306255, 0.6839626264562696, 0.6438145949745757, 0.6628795551538876, 0.5995291866300096, 0.5736642849050131, 0.5672748618515775, 0.5661394702145893, 0.5467675424302337, 0.5162831356874656, 0.5369622941030378, 0.4951978645556481, 0.4924393135243875, 0.49601932866871556, 0.4845450838417378, 0.4823525938588111, 0.4748177441662927, 0.4469081632307791, 0.44748052158738016, 0.42281055990904237, 0.4145386272244497, 0.4273588220047488, 0.4234387205025271, 0.4024022524666399, 0.39306767853873675], "accuracy": [0.29097872972488403, 0.39690926671028137, 0.5325584411621094, 0.6148461103439331, 0.6118082404136658, 0.6642451286315918, 0.6704530715942383, 0.7094175219535828, 0.7277770638465881, 0.7577598690986633, 0.7384757399559021, 0.7495707273483276, 0.7543256878852844, 0.7757231593132019, 0.7824593782424927, 0.7837802171707153, 0.7825914621353149, 0.7946110367774963, 0.8004226684570312, 0.791969358921051, 0.8138951063156128, 0.8090080618858337, 0.8153480291366577, 0.8133667707443237, 0.8228767514228821, 0.8175934553146362, 0.8280280232429504, 0.8345000743865967, 0.841500461101532, 0.8448025584220886, 0.8409721255302429, 0.8363492488861084, 0.8474441766738892, 0.8531237840652466], "val_loss": [1.801424503326416, 0.9991794313703265, 0.8701833486557007, 0.7736209801265171, 0.7259909084865025, 0.7068144423621041, 0.6088093008313861, 0.5546218156814575, 0.540152907371521, 0.5558286394391742, 0.5392450945717948, 0.5628118344715664, 0.47882786818913053, 0.4827716520854405, 0.5129466567720685, 0.4885298013687134, 0.4673569032124111, 0.4454773323876517, 0.5055556978498187, 0.4300423690250942, 0.440219521522522, 0.46663287707737516, 0.41850821460996357, 0.4509937252317156, 0.40903033529009136, 0.3958117536136082, 0.4063177449362619, 0.3983626535960606, 0.38574124234063284, 0.3940278547150748, 0.3815265553338187, 0.3773596542222159, 0.37584140471049715, 0.41336103848048616], "val_accuracy": [0.19033333659172058, 0.5763333439826965, 0.6430000066757202, 0.6539999842643738, 0.675000011920929, 0.6793333292007446, 0.7046666741371155, 0.7423333525657654, 0.765999972820282, 0.7523333430290222, 0.765999972820282, 0.7170000076293945, 0.7883333563804626, 0.7889999747276306, 0.7680000066757202, 0.7733333110809326, 0.800000011920929, 0.8003333210945129, 0.7773333191871643, 0.812666654586792, 0.8149999976158142, 0.7943333387374878, 0.8206666707992554, 0.7873333096504211, 0.8209999799728394, 0.8366666436195374, 0.8259999752044678, 0.824999988079071, 0.8486666679382324, 0.8323333263397217, 0.8346666693687439, 0.8423333168029785, 0.8413333296775818, 0.8220000267028809]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0, 1, 1, 1, 1], [2, 9, 6, 5, 9, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [77, 80, 61], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 9, 7, 1, 4, 6, 2, 1, 9, 2, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 3, 3, 0, 1, 3, 1, 3, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [47, 41, 37, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.8185714483261108, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.2561817023543447, 1.8409593487617253, 1.4466074364548425, 1.113635455502369, 0.9465186410592044, 0.9151738780821161, 0.9074270101176781, 0.7363754141647204, 0.7158231884496968, 0.692595315159052, 0.6463472792941976, 0.6276313206223985, 0.6623685317835583, 0.5724688356562911, 0.5606962432950763, 0.579635763354132, 0.5570114416815365, 0.5388435934198027, 0.5040714673362372, 0.5371765658572334, 0.4851675917916152, 0.4937287964494615, 0.492443540415602, 0.4608486131229232, 0.47236351794601983, 0.45169627475559027, 0.44895330204892514, 0.42853209565674955, 0.427501612186054, 0.44352034653466, 0.41428789056728327, 0.3978356461026775, 0.38813803226578397, 0.393696002881635, 0.40596966064601386, 0.38803813142893634, 0.39639081545651406, 0.3614552679228477, 0.36837429536442323, 0.3606516647064895, 0.3599169982414928, 0.3503838366151187, 0.34229628836804726, 0.33145708384971734, 0.3264154877015203], "accuracy": [0.29084664583206177, 0.39664509892463684, 0.49570730328559875, 0.6040153503417969, 0.652621865272522, 0.6642451286315918, 0.6675472259521484, 0.722229540348053, 0.7301545143127441, 0.7317395210266113, 0.7518161535263062, 0.7618544697761536, 0.744419515132904, 0.7828556299209595, 0.7817989587783813, 0.7784969210624695, 0.7865539789199829, 0.7959318161010742, 0.8096684813499451, 0.789459764957428, 0.8178576231002808, 0.809140145778656, 0.8140271902084351, 0.82683926820755, 0.8216879963874817, 0.8313300609588623, 0.8238013386726379, 0.8422929644584656, 0.8393871188163757, 0.8296129703521729, 0.8429533839225769, 0.850350022315979, 0.8569541573524475, 0.8541803956031799, 0.8492933511734009, 0.8521991968154907, 0.850350022315979, 0.8672566413879395, 0.8625016212463379, 0.8619733452796936, 0.8622375130653381, 0.8660678863525391, 0.8710870146751404, 0.8749174475669861, 0.8774270415306091], "val_loss": [1.8018895557948522, 0.9826489516666957, 0.9892861502511161, 0.8758734124047416, 0.8468772002628872, 0.8812025274549212, 0.5987140962055751, 0.6522125346320016, 0.5773981469018119, 0.5211512531552996, 0.5394761562347412, 0.618182863507952, 0.4756757361548288, 0.49685863086155485, 0.47683807781764437, 0.44806488922664095, 0.45680177211761475, 0.4274432829448155, 0.5101972648075649, 0.44060119560786654, 0.4315532786505563, 0.4366739903177534, 0.41465320757457186, 0.42637559345790316, 0.4141582080296108, 0.3925564544541495, 0.4034592168671744, 0.39685390676770893, 0.3885063443865095, 0.37650154318128315, 0.3937104174068996, 0.3699272360120501, 0.3687410865511213, 0.3618104372705732, 0.37875053712299894, 0.42776332582746235, 0.35461429187229704, 0.3583011371748788, 0.3764892305646624, 0.357745281287602, 0.3601305399622236, 0.35006883314677645, 0.349485056740897, 0.3619799443653652, 0.37382633345467703], "val_accuracy": [0.19033333659172058, 0.5759999752044678, 0.5643333196640015, 0.6286666393280029, 0.6399999856948853, 0.6290000081062317, 0.7016666531562805, 0.7059999704360962, 0.7319999933242798, 0.7576666474342346, 0.7616666555404663, 0.6986666917800903, 0.7853333353996277, 0.7710000276565552, 0.7713333368301392, 0.79666668176651, 0.79666668176651, 0.8116666674613953, 0.7543333172798157, 0.800000011920929, 0.8169999718666077, 0.8003333210945129, 0.8276666402816772, 0.8040000200271606, 0.8223333358764648, 0.8323333263397217, 0.8226666450500488, 0.8259999752044678, 0.8320000171661377, 0.8423333168029785, 0.8223333358764648, 0.8479999899864197, 0.8483333587646484, 0.8483333587646484, 0.843999981880188, 0.8293333053588867, 0.859333336353302, 0.8513333201408386, 0.8383333086967468, 0.8616666793823242, 0.8486666679382324, 0.8573333621025085, 0.8583333492279053, 0.859000027179718, 0.8416666388511658]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1], [2, 9, 6, 5, 9, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [77, 80, 61], [0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 9, 7, 1, 4, 6, 2, 1, 9, 2, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 0, 1, 1, 1, 3, 3, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [94, 41, 37, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.8142856955528259, "mapping_values": [1, 1, 1, 0, 1, 0, 23, 23, 14, 9, 4, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.subtract(alpha, tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.add(beta, tf.math.multiply(alpha, tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, alpha))))), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.2561759621853588, 1.8355037746585638, 1.3755966782522648, 1.149462514447341, 1.0097956448466692, 0.9536148226571326, 0.8303872091485808, 0.7631136591109177, 0.716303366239218, 0.7043975833431919, 0.6520474720640489, 0.6442752463895379, 0.6496094858578687, 0.5895979425548452, 0.5799689992638375, 0.5894452771018163, 0.5482787577278657, 0.5255774576918103, 0.5415331065426444, 0.5437617577566147, 0.4996406065789448, 0.500619348203029, 0.4932396357967365, 0.4661651159581444, 0.491281393158154, 0.4601521622731528, 0.44854565431428955, 0.45025412208289833, 0.43093694181820785, 0.4315952452820022, 0.4432458901969024, 0.3969879921409102, 0.39825408938711726, 0.4086316343524342], "accuracy": [0.2907145619392395, 0.3963809311389923, 0.5079910159111023, 0.6012415885925293, 0.6280544400215149, 0.6419231295585632, 0.6856426000595093, 0.7124554514884949, 0.7226257920265198, 0.7314753532409668, 0.7481178045272827, 0.7547219395637512, 0.7531369924545288, 0.7771760821342468, 0.7788931727409363, 0.7766477465629578, 0.7927618622779846, 0.8059701323509216, 0.7882710099220276, 0.7910447716712952, 0.8099326491355896, 0.8113855719566345, 0.8120459914207458, 0.8269713521003723, 0.8224804997444153, 0.8216879963874817, 0.8264430165290833, 0.8343679904937744, 0.8370096683502197, 0.8379341959953308, 0.8358209133148193, 0.8521991968154907, 0.8515387773513794, 0.8486329317092896], "val_loss": [1.8014438492911202, 0.9617334433964321, 0.996718270438058, 0.7539494037628174, 1.0273438862391882, 0.7785914625440326, 0.6079489844185966, 0.5566658803394863, 0.6498845815658569, 0.5199093478066581, 0.5226261615753174, 0.5385297025953021, 0.48680542196546284, 0.5006704841341291, 0.5007513080324445, 0.45428081921168734, 0.470059871673584, 0.4799625703266689, 0.4913253443581717, 0.4348351444516863, 0.45086915152413504, 0.46843152386801584, 0.43316120760781424, 0.4198367851121085, 0.40846791437694, 0.39944945914404734, 0.41597544295447214, 0.4020356961659023, 0.38542518445423674, 0.4049402815955026, 0.3779817819595337, 0.39844547850745066, 0.417628995009831, 0.4151009832109724], "val_accuracy": [0.19066666066646576, 0.5896666646003723, 0.5759999752044678, 0.6710000038146973, 0.515999972820282, 0.6496666669845581, 0.7039999961853027, 0.7396666407585144, 0.7046666741371155, 0.7693333625793457, 0.7663333415985107, 0.7409999966621399, 0.7786666750907898, 0.765999972820282, 0.762333333492279, 0.8043333292007446, 0.7950000166893005, 0.7926666736602783, 0.7739999890327454, 0.809333324432373, 0.8003333210945129, 0.7886666655540466, 0.8136666417121887, 0.809333324432373, 0.8213333487510681, 0.8309999704360962, 0.8140000104904175, 0.8230000138282776, 0.846666693687439, 0.8349999785423279, 0.8316666483879089, 0.8266666531562805, 0.8130000233650208, 0.8119999766349792]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1], [2, 9, 6, 5, 9, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [77, 80, 61], [0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 9, 7, 1, 4, 6, 2, 1, 9, 2, 9, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 0, 3, 3, 3, 2, 3, 3, 3, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [67, 13, 9, 80, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [42, 9, 76, 58]], "fitness": -0.8097142577171326, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 10, 7, 3, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.subtract(tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad))), beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.012663073149875, 1.4267318618610914, 1.0958889845954018, 0.922804897408743, 0.8110222927945527, 0.8063007327528079, 0.7288318714996638, 0.7112802169373668, 0.6840741179638441, 0.667763896842501, 0.702819188296787, 0.6473177885099125, 0.6625514542658126, 0.6185691967427439, 0.5958600775865815, 0.6063066364720261, 0.5905807286977233, 0.5815661715289715, 0.5727838981562539, 0.5836883115022096, 0.5473336101113656, 0.5492011185618849, 0.5488964383470825, 0.5281038269973339, 0.5197761164066137, 0.5132600974728009, 0.5061769250078193, 0.5138497697781137, 0.4982548381800129, 0.4882675583777316, 0.47853675224069026, 0.4862949428202816, 0.4786607240641736, 0.4599001366921136, 0.46119640032455606, 0.4866208024721545, 0.4625928209497472, 0.4511337254844432, 0.4465853175616551, 0.43896105442269445, 0.4517286903885582, 0.4274324605005481, 0.4314602201467712, 0.4154586756210506, 0.41339485950127347, 0.41116817488237034, 0.410087498687498], "accuracy": [0.33218860626220703, 0.5103685259819031, 0.601109504699707, 0.6585655808448792, 0.7010962963104248, 0.6940959095954895, 0.724739134311676, 0.7248712182044983, 0.7374191284179688, 0.743891179561615, 0.7296261787414551, 0.7552502751350403, 0.7453441023826599, 0.7635715007781982, 0.7726852297782898, 0.7646281719207764, 0.7714964747428894, 0.7750627398490906, 0.7798177003860474, 0.7746664881706238, 0.7959318161010742, 0.7909126877784729, 0.7913089394569397, 0.7927618622779846, 0.8037247657775879, 0.8053097128868103, 0.8128384351730347, 0.8057059645652771, 0.8119139075279236, 0.8168009519577026, 0.822348415851593, 0.8164047002792358, 0.8189142942428589, 0.8276317715644836, 0.8247259259223938, 0.8222163319587708, 0.8289526104927063, 0.83119797706604, 0.8350284099578857, 0.8347642421722412, 0.8289526104927063, 0.8404437899589539, 0.8384625315666199, 0.8455950617790222, 0.8453308939933777, 0.8441421389579773, 0.8496896028518677], "val_loss": [1.1984315259116036, 0.9373494216373989, 0.7838316644941058, 0.6309784480503627, 0.5926825829914638, 0.6076451880591256, 0.5573500905718122, 0.54619300365448, 0.552392738206046, 0.5773517574582782, 0.5221281562532697, 0.5631855726242065, 0.5219366720744542, 0.5082450764519828, 0.4901544025966099, 0.48483289991106304, 0.49904847145080566, 0.495323862348284, 0.5340964453560966, 0.47015401295253206, 0.4736592769622803, 0.4700185571398054, 0.4557593209402902, 0.4799696547644479, 0.4525438206536429, 0.4383861337389265, 0.4285144465310233, 0.4396061897277832, 0.4293489967073713, 0.4097593000956944, 0.4235921587262835, 0.4076600670814514, 0.4060570342200143, 0.41437154156821115, 0.4381506953920637, 0.43094009160995483, 0.39731173855917795, 0.38459751435688566, 0.401540356022971, 0.39862155062811716, 0.39000022411346436, 0.37862372398376465, 0.38279526574271067, 0.37796190806797575, 0.38552411113466534, 0.3780278818947928, 0.385285701070513], "val_accuracy": [0.4586666524410248, 0.6083333492279053, 0.6499999761581421, 0.7099999785423279, 0.7316666841506958, 0.7200000286102295, 0.7490000128746033, 0.7493333220481873, 0.7490000128746033, 0.7306666374206543, 0.7710000276565552, 0.737333357334137, 0.7636666893959045, 0.7716666460037231, 0.7710000276565552, 0.7873333096504211, 0.7720000147819519, 0.7670000195503235, 0.7453333139419556, 0.7986666560173035, 0.7926666736602783, 0.7926666736602783, 0.8003333210945129, 0.7749999761581421, 0.79666668176651, 0.8073333501815796, 0.8230000138282776, 0.8119999766349792, 0.8209999799728394, 0.8299999833106995, 0.8216666579246521, 0.8320000171661377, 0.8309999704360962, 0.8166666626930237, 0.8116666674613953, 0.8246666789054871, 0.8353333473205566, 0.8339999914169312, 0.8226666450500488, 0.8336666822433472, 0.8320000171661377, 0.846666693687439, 0.840666651725769, 0.8389999866485596, 0.8410000205039978, 0.8416666388511658, 0.8273333311080933]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1], [2, 9, 6, 5, 9, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [77, 80, 61], [0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 9, 7, 1, 4, 6, 2, 9, 9, 4, 2, 2, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 3, 3, 0, 1, 3, 1, 3, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [29, 19, 60, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [3, 0, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.8048571348190308, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 8, 5, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.math.add(beta, grad))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(sigma), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.256141953921164, 1.8350874973310218, 1.3432950974455473, 1.071037109179063, 0.9714205186002683, 0.8828266623580397, 0.8123882668617616, 0.8141386969891584, 0.7065130681834751, 0.6710056979831625, 0.6714183756263107, 0.6248425990756413, 0.6214832903104074, 0.6347407106363763, 0.5598745374175079, 0.5845550298139703, 0.5543216065471797, 0.540082336605784, 0.5031181473490144, 0.5357778548816443, 0.4924453930603814, 0.48801536474088086, 0.521154144916867, 0.4633446097169271, 0.4710137175334333, 0.4659500857936928, 0.4416174075158202, 0.42954683723450965, 0.4321301100772401, 0.4236539693957921, 0.42813347328639756, 0.4103901272224098, 0.3934005928423741, 0.3828234587599337, 0.39293224534275445, 0.3983892011541685, 0.40141561755713945, 0.36475181398910067, 0.37245461968241306, 0.35012629482929086, 0.3639952103380892, 0.3507358054159938, 0.34017605392483513, 0.3388348941427605, 0.3264534670513666, 0.34563614294009676, 0.32856182238570986, 0.3365859871432766, 0.31876438273540847, 0.32085845908862315, 0.28985984767700435], "accuracy": [0.2911108136177063, 0.39823007583618164, 0.5276713967323303, 0.6075815558433533, 0.6439043879508972, 0.6778497099876404, 0.6956809163093567, 0.6976621150970459, 0.7297582626342773, 0.7397965788841248, 0.7434949278831482, 0.7614582180976868, 0.7638356685638428, 0.7607977986335754, 0.789459764957428, 0.7817989587783813, 0.7913089394569397, 0.7992339134216309, 0.8101968169212341, 0.7932901978492737, 0.8177255392074585, 0.8144234418869019, 0.8009510040283203, 0.829216718673706, 0.8252542614936829, 0.8251221776008606, 0.8286884427070618, 0.8442742228507996, 0.8372738361358643, 0.8396512866020203, 0.8393871188163757, 0.8438779711723328, 0.8543124794960022, 0.857218325138092, 0.8555012345314026, 0.8471800088882446, 0.8502179384231567, 0.8669924736022949, 0.8581429123878479, 0.8704266548156738, 0.8610487580299377, 0.8687095642089844, 0.8714832663536072, 0.8742570281028748, 0.8794082403182983, 0.8687095642089844, 0.8786157965660095, 0.8721436858177185, 0.8804649114608765, 0.8768987059593201, 0.8926165699958801], "val_loss": [1.8019420078822546, 0.9635437897273472, 0.7927968502044678, 0.8285737889153617, 0.7945234945842198, 0.677477410861424, 0.7184174912316459, 0.552537032536098, 0.5550997597830636, 0.5469845192773002, 0.5821233476911273, 0.6152465343475342, 0.47388483796800884, 0.48247107437678743, 0.4516607182366507, 0.45609656402042936, 0.45630301748003277, 0.4691668578556606, 0.43937693323407856, 0.4511865036828177, 0.4265010527202061, 0.49121287890842985, 0.42107231276375906, 0.45793611662728445, 0.43563553265162874, 0.40100158963884625, 0.40061250754765104, 0.4142547334943499, 0.42149666377476286, 0.37639581305640085, 0.3843019945280893, 0.3695329853466579, 0.3782586795943124, 0.3864548717226301, 0.3969213877405439, 0.41630533763340544, 0.35190259558813913, 0.36312557969774517, 0.37673852273396086, 0.35442302908216206, 0.37685283592769075, 0.3487764426640102, 0.3498374479157584, 0.3772434592247009, 0.3736078313418797, 0.36075922421046663, 0.372273930481502, 0.35683380705969675, 0.35627163308007376, 0.34206355469567434, 0.3492916226387024], "val_accuracy": [0.1899999976158142, 0.5963333249092102, 0.6769999861717224, 0.6466666460037231, 0.6366666555404663, 0.7250000238418579, 0.6600000262260437, 0.7483333349227905, 0.7490000128746033, 0.7450000047683716, 0.7493333220481873, 0.6996666789054871, 0.7913333177566528, 0.7893333435058594, 0.8013333082199097, 0.8019999861717224, 0.8016666769981384, 0.796999990940094, 0.8113333582878113, 0.7976666688919067, 0.8090000152587891, 0.778333306312561, 0.8299999833106995, 0.784333348274231, 0.8136666417121887, 0.82833331823349, 0.8303333520889282, 0.8116666674613953, 0.8303333520889282, 0.8453333377838135, 0.8356666564941406, 0.8479999899864197, 0.843999981880188, 0.8413333296775818, 0.8346666693687439, 0.8386666774749756, 0.8613333106040955, 0.8473333120346069, 0.8389999866485596, 0.8569999933242798, 0.8420000076293945, 0.8619999885559082, 0.859000027179718, 0.8523333072662354, 0.8536666631698608, 0.8629999756813049, 0.8366666436195374, 0.8573333621025085, 0.8550000190734863, 0.8583333492279053, 0.8600000143051147]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1], [2, 9, 6, 5, 9, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [77, 80, 61], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1], [6, 9, 7, 1, 4, 6, 2, 1, 9, 2, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 3, 3, 0, 1, 1, 1, 3, 3, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [67, 13, 41, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.7737143039703369, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.119554017623339, 1.6492257478325012, 1.3298992660492481, 0.9546683374853844, 0.7960077011589959, 0.7343899899737678, 0.702820371005356, 0.6619210903749427, 0.6725987379954964, 0.598136306100313, 0.6369719977281852, 0.5861664005258631, 0.5810371272442064], "accuracy": [0.29084664583206177, 0.41606128215789795, 0.5369172096252441, 0.6501122713088989, 0.693831741809845, 0.7170783281326294, 0.7391361594200134, 0.752740740776062, 0.7490423917770386, 0.7808743715286255, 0.7592127919197083, 0.7759873270988464, 0.7781006693840027], "val_loss": [1.4466148444584437, 1.4943516935620988, 0.7833001102719989, 0.6166717324938092, 0.5908954995019096, 0.5703315223966327, 0.5209202766418457, 0.5031630992889404, 0.505650520324707, 0.620680434363229, 0.4954554694039481, 0.5123191731316703, 0.4904804400035313], "val_accuracy": [0.41733333468437195, 0.4790000021457672, 0.6506666541099548, 0.7013333439826965, 0.7153333425521851, 0.7366666793823242, 0.7666666507720947, 0.7803333401679993, 0.7713333368301392, 0.7243333458900452, 0.7799999713897705, 0.7616666555404663, 0.7676666378974915]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0], [1, 0, 1, 1, 0, 0, 1, 1, 1, 1], [8, 2, 2, 2, 2, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [7, 80, 61], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1], [0, 0, 7, 3, 4, 6, 9, 1, 4, 2, 2, 3, 5, 4, 8, 0, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [5, 1, 3, 3, 3, 0, 2, 3, 3, 3, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [94, 41, 37, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.47857141494750977, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.174422044165776, 2.2205381718420036, 2.2651460754904433, 2.3301349128037394, 2.1153972433889074, 1.990962005640931, 2.2049247759712087, 2.3059065158356766, 2.3039054091202504, 2.3033979203895947], "accuracy": [0.23259806632995605, 0.23444722592830658, 0.17157575488090515, 0.20855897665023804, 0.26059964299201965, 0.31118741631507874, 0.15915995836257935, 0.10091137140989304, 0.09932637959718704, 0.09959053993225098], "val_loss": [1.5544348784855433, 1.9676645142691476, 1.9157211439950126, 1.9597483362470354, 1.7557344436645508, 1.9748067174639021, 1.9759714944022042, 1.9738285882132394, 1.9737768173217773, 1.9738802228655135], "val_accuracy": [0.38199999928474426, 0.09700000286102295, 0.31433331966400146, 0.2083333283662796, 0.4156666696071625, 0.09866666793823242, 0.10000000149011612, 0.10233332961797714, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [2, 9, 6, 5, 9, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [77, 80, 61], [0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [7, 9, 7, 3, 4, 6, 2, 1, 4, 2, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 3, 3, 0, 1, 3, 1, 3, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [29, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [7, 0, 8, 8, 6, 7, 4, 5, 6], [1, 0, 2, 1, 0, 0, 2, 2], [42, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.math.sqrt(alpha)), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [1, 9, 6, 5, 9, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [77, 80, 61], [0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 9, 7, 3, 4, 6, 2, 1, 4, 2, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 3, 3, 0, 1, 3, 1, 3, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [29, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 1, 1, 1, 0, 0, 1, 1], [6, 6, 8, 8, 6, 7, 4, 5, 6], [3, 0, 2, 1, 0, 0, 2, 2], [42, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(sigma, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10130762308835983, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 9, 6, 5, 9, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [77, 80, 61], [0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 7, 3, 4, 6, 2, 1, 4, 2, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 3, 3, 3, 0, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [29, 19, 41, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [3, 0, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.math.add(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(sigma)), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1], [2, 9, 6, 5, 9, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [77, 80, 61], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 8, 7, 1, 4, 6, 2, 1, 9, 2, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 0, 1, 1, 1, 3, 3, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [72, 13, 41, 7, 45, 13], [1], [1, 1, 1], [9], [3, 1], [52], [1, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(grad), alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3022676503984227, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 8, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 2, 0, 1, 1, 1, 1, 2, 1, 2, 2], [77, 80, 61], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 9, 7, 1, 4, 6, 2, 1, 9, 2, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 0, 1, 1, 1, 3, 3, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [98, 41, 71, 7, 45, 13], [1], [1, 1, 1], [9], [6, 1], [52], [1, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [43, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 9, 6, 3, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(tf.math.add(beta, grad), alpha), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))))))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3022676503984227, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 1], [2, 9, 6, 5, 9, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 2, 0, 1, 1, 1, 1, 2, 1, 2, 2], [77, 80, 61], [0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 9, 5, 1, 4, 1, 2, 1, 8, 2, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 0, 1, 1, 1, 3, 3, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [81, 41, 37, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [1, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 6, 6, 4, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.subtract(grad, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3022676503984227, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 8, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 2, 0, 1, 1, 1, 1, 2, 1, 2, 2], [7, 80, 61], [0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 7, 3, 4, 6, 9, 1, 4, 2, 2, 3, 5, 4, 8, 0, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 2, 2, 3, 3, 0, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [67, 13, 41, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))))))))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(beta, beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 1, 0, 1, 1], [1, 8, 4, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 2, 0, 1, 1, 1, 1, 2, 1, 2, 2], [7, 80, 61], [0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 9, 7, 3, 4, 6, 2, 1, 4, 2, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 3, 3, 3, 0, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [30, 19, 41, 7, 45, 13], [1], [1, 1, 1], [9], [7, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [2, 3, 2, 1, 0, 0, 2, 2], [42, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.negative(sigma))", "other_info": {"loss": [2.3028744822716147, 2.3029183993139886, 2.303386211363773, 2.3025318259938423, 2.304925100253227, 2.3024442872634543], "accuracy": [0.0948355570435524, 0.09206181764602661, 0.09259014576673508, 0.09008057415485382, 0.08479725569486618, 0.0874389111995697], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 8, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 2, 0, 1, 1, 1, 1, 2, 1, 2, 2], [77, 80, 61], [0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 7, 3, 4, 6, 9, 1, 4, 2, 2, 3, 5, 4, 8, 0, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 3, 3, 3, 0, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [44, 32, 37, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 23, 23, 12, 11, 3, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.pow(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.math.add(beta, grad), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), alpha)), tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad))))), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.3028744822716147, 2.3029183993139886, 2.303386211363773, 2.3025318259938423, 2.304925100253227, 2.3024442872634543], "accuracy": [0.0948355570435524, 0.09206181764602661, 0.09259014576673508, 0.09008057415485382, 0.08479725569486618, 0.0874389111995697], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [2, 9, 6, 5, 9, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [77, 80, 61], [0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 9, 7, 1, 4, 6, 2, 1, 9, 2, 2, 3, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 5, 3, 3, 3, 0, 1, 3, 1, 3, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [29, 19, 41, 7, 45, 13], [1], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 3, 3, 2, 1, 1, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, alpha), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.3028744822716147, 2.3029183993139886, 2.303386211363773, 2.3025318259938423, 2.304925100253227, 2.3024442872634543], "accuracy": [0.0948355570435524, 0.09206181764602661, 0.09259014576673508, 0.09008057415485382, 0.08479725569486618, 0.0874389111995697], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [1, 0, 0, 1], [2, 9, 6, 5, 9, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2], [77, 80, 61], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 1, 4, 5, 4, 6, 9, 4, 4, 2, 2, 3, 5, 4, 8, 0, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 3, 3, 3, 3, 3, 1, 1, 1, 3, 3, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [44, 32, 37, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.03257142752408981, "mapping_values": [1, 1, 1, 0, 1, 0, 37, 37, 23, 14, 2, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.pow(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)))), tf.math.add(tf.math.add(beta, tf.math.multiply(alpha, tf.math.add(beta, tf.math.square(alpha)))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), grad))))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad))))))))))))))))), tf.math.square(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(sigma))", "other_info": {"loss": [2.3034708014001875, 2.3054073377449784, 2.3076362711264395, 2.30906096749916, 2.3147526967007455, 2.3141917011536597], "accuracy": [0.09272222965955734, 0.08717474341392517, 0.0866464152932167, 0.08228767663240433, 0.06907938420772552, 0.07832518965005875], "val_loss": [1.9724621772766113, 1.974057674407959, 1.9755358695983887, 1.9774754387991769, 1.9795313562665666, 1.9816476276942663], "val_accuracy": [0.0273333340883255, 0.02266666665673256, 0.021666666492819786, 0.02033333294093609, 0.01966666616499424, 0.026333333924412727]}}]