[{"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [7, 8, 5, 8, 2, 4, 4, 5, 9, 2], [5, 1, 5, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [3, 3, 2, 2], [48, 9]], "fitness": -0.8237142562866211, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.208472394074085, 1.9359016482541276, 1.435658750532798, 1.14013615370647, 0.878797453297852, 0.7928444143252334, 0.7697807515081618, 0.7033614924696884, 0.6514338995597586, 0.6259251418225187, 0.6096145792754414, 0.6190137896146032, 0.5770976971310867, 0.5482940757909172, 0.5271420201227381, 0.5218546738233769, 0.5275508884929505, 0.4944124688105167, 0.48480618375561035, 0.46791314401284595, 0.48146137048413706, 0.45979578710975366, 0.4495071760415559, 0.43820272278414113, 0.428574385935557, 0.43702546362753447, 0.4753148737734398, 0.3925210925227757, 0.4036113666371741, 0.41259788738627867, 0.39764860209425473, 0.3876878806250742, 0.388395936489735, 0.37068897303085063], "accuracy": [0.25584468245506287, 0.4107779562473297, 0.48329150676727295, 0.5890899300575256, 0.6659622192382812, 0.7036058902740479, 0.7065116763114929, 0.7376832365989685, 0.7471932172775269, 0.7547219395637512, 0.7675340175628662, 0.7650244235992432, 0.7808743715286255, 0.7928939461708069, 0.7991018295288086, 0.8064984679222107, 0.8037247657775879, 0.8156121969223022, 0.8169330358505249, 0.8201030492782593, 0.8138951063156128, 0.8239334225654602, 0.833179235458374, 0.8300092220306396, 0.8418967127799988, 0.8338396549224854, 0.8238013386726379, 0.8561616539955139, 0.8485008478164673, 0.8422929644584656, 0.8525954484939575, 0.8543124794960022, 0.8527275323867798, 0.8588033318519592], "val_loss": [1.9268789972577776, 1.490396329334804, 1.0810716833387102, 0.7795774596078056, 0.7366688762392316, 0.6671372652053833, 0.5664924383163452, 0.5345444508961269, 0.5114650896617344, 0.4956581251961844, 0.5124354192188808, 0.5515896422522408, 0.4631040947777884, 0.4646139144897461, 0.45891611916678293, 0.41616612672805786, 0.4414138453347342, 0.4426571471350534, 0.4111327188355582, 0.4419506447655814, 0.42300344364983694, 0.38912355048315866, 0.39480286836624146, 0.37711791481290546, 0.4341081806591579, 0.44845569133758545, 0.384866007736751, 0.3700427327837263, 0.3666571634156363, 0.3999380384172712, 0.37122422456741333, 0.39969238213130404, 0.3641676477023533, 0.362383987222399], "val_accuracy": [0.36666667461395264, 0.42100000381469727, 0.492333322763443, 0.6393333077430725, 0.6703333258628845, 0.7039999961853027, 0.7463333606719971, 0.7613333463668823, 0.7573333382606506, 0.7870000004768372, 0.7566666603088379, 0.7463333606719971, 0.8073333501815796, 0.8023333549499512, 0.8026666641235352, 0.8223333358764648, 0.8040000200271606, 0.8003333210945129, 0.8306666612625122, 0.8069999814033508, 0.812666654586792, 0.8323333263397217, 0.831333339214325, 0.8356666564941406, 0.8006666898727417, 0.8006666898727417, 0.8303333520889282, 0.8429999947547913, 0.8463333249092102, 0.8136666417121887, 0.8403333425521851, 0.828000009059906, 0.843999981880188, 0.8410000205039978]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [5, 1, 5, 8, 2, 4, 4, 5, 9, 2], [2, 1, 5, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [3, 3, 2, 2], [48, 9]], "fitness": -0.8140000104904175, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.2084708810246236, 1.935562782661711, 1.395212457054374, 1.0848356027959627, 0.9096813249928116, 0.7939088449281645, 0.7510219106049413, 0.7297604769968228, 0.6586486921806723, 0.6491176470584715, 0.5892127102171787, 0.603356651760064, 0.6018673759945286, 0.5569684106786221, 0.5390411804160422, 0.532815092885499, 0.5295587027975125, 0.49780062635765887, 0.49947462015305655, 0.4676538504873678, 0.5001756406896355, 0.4689375277617982, 0.43102246706338687, 0.46929487302995804, 0.4283613833406771, 0.4398515944656616, 0.4675183976921565, 0.3987308041003276, 0.4127368688851048, 0.4123299610754912, 0.3951478205210875, 0.38896771202218405, 0.3989465232688076, 0.3786465260039672, 0.36180766632040146, 0.3648956648787928, 0.3591265685845517, 0.35346383260241465, 0.35080820251181927, 0.37164705931124764, 0.3771724376373319, 0.33476755266270825, 0.32852263554385497], "accuracy": [0.25584468245506287, 0.409721314907074, 0.49385812878608704, 0.6096948981285095, 0.6662263870239258, 0.7029454708099365, 0.7143045663833618, 0.7197200059890747, 0.7493065595626831, 0.7490423917770386, 0.7732135653495789, 0.7761194109916687, 0.7658169269561768, 0.7882710099220276, 0.7955356240272522, 0.7971205711364746, 0.8029322624206543, 0.8153480291366577, 0.8161405324935913, 0.8241975903511047, 0.8062343001365662, 0.8216879963874817, 0.8408400416374207, 0.821820080280304, 0.8389908671379089, 0.8330471515655518, 0.8272355198860168, 0.8531237840652466, 0.8467837572097778, 0.8397833704948425, 0.8537842035293579, 0.8515387773513794, 0.8479725122451782, 0.8540483713150024, 0.8669924736022949, 0.8625016212463379, 0.863558292388916, 0.8696341514587402, 0.8673887252807617, 0.8580108284950256, 0.8565579056739807, 0.8735966086387634, 0.8782195448875427], "val_loss": [1.9268512725830078, 1.49750440461295, 0.9216302462986538, 0.9627033982958112, 0.6320225851876395, 0.5970602205821446, 0.669583933694022, 0.569159746170044, 0.5535226379122052, 0.5053282294954572, 0.4828020674841745, 0.5247289793831962, 0.4916036639894758, 0.5012024130140033, 0.438894408089774, 0.42572714601244244, 0.4458202975136893, 0.46542450359889437, 0.41857108899525236, 0.43884241580963135, 0.427548348903656, 0.40089105708258493, 0.4348075730460031, 0.3746777517454965, 0.4573915345328195, 0.46742050988333567, 0.3870799626622881, 0.380050642149789, 0.36927860975265503, 0.38385495969227384, 0.3680636542184012, 0.39993768078940256, 0.3606653894696917, 0.3640462500708444, 0.3636565974780491, 0.34956157207489014, 0.36728464705603464, 0.35438941206250874, 0.3936627762658255, 0.4164365359715053, 0.3769999827657427, 0.34693258149283274, 0.3569368975503104], "val_accuracy": [0.367333322763443, 0.41200000047683716, 0.6349999904632568, 0.6370000243186951, 0.7093333601951599, 0.7300000190734863, 0.6846666932106018, 0.7263333201408386, 0.7453333139419556, 0.7716666460037231, 0.7883333563804626, 0.7620000243186951, 0.7866666913032532, 0.7733333110809326, 0.809333324432373, 0.8109999895095825, 0.7993333339691162, 0.7889999747276306, 0.8259999752044678, 0.8086666464805603, 0.8096666932106018, 0.8223333358764648, 0.8119999766349792, 0.8403333425521851, 0.7816666960716248, 0.7913333177566528, 0.8299999833106995, 0.843666672706604, 0.8420000076293945, 0.8370000123977661, 0.8423333168029785, 0.8320000171661377, 0.8453333377838135, 0.8393333554267883, 0.846666693687439, 0.8553333282470703, 0.8433333039283752, 0.8566666841506958, 0.8403333425521851, 0.8203333616256714, 0.8383333086967468, 0.8566666841506958, 0.8533333539962769]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [7, 8, 5, 8, 2, 4, 4, 5, 9, 2], [3, 1, 5, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [3, 3, 2, 2], [48, 9]], "fitness": -0.7897142767906189, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 10, 5, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.sqrt(tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))), tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.1666659667365633, 1.973733907882107, 1.3860012068015992, 1.135288377424446, 0.8759769321259506, 0.7556405101769069, 0.749246414059488, 0.6911335527983481, 0.6602177178587313, 0.6467962481515471, 0.5963803130984228, 0.5849664926473821, 0.5884399392884783, 0.5646633883871028, 0.5543389494204014, 0.5131205420617839, 0.515202832830549, 0.4831008338232271, 0.49816630978893534, 0.5030856418524593], "accuracy": [0.2674679756164551, 0.39149385690689087, 0.5074626803398132, 0.6081098914146423, 0.6695284843444824, 0.7104741930961609, 0.7160216569900513, 0.7415136694908142, 0.7427024245262146, 0.7512878179550171, 0.7746664881706238, 0.7802139520645142, 0.7773081660270691, 0.7902522683143616, 0.7911768555641174, 0.8080834746360779, 0.8041210174560547, 0.8239334225654602, 0.8082155585289001, 0.8137630224227905], "val_loss": [1.816422394343785, 1.263573101588658, 0.8555171660014561, 0.6355550970349994, 0.6058458430426461, 0.5937210491725377, 0.5584914513996669, 0.5232372624533517, 0.5859399863651821, 0.5151864630835397, 0.5070206608091082, 0.48183369636535645, 0.45876719270433697, 0.44871415410723003, 0.4236513801983425, 0.4244078142302377, 0.4145105481147766, 0.4357017619269235, 0.42104374510901316, 0.4204750231334141], "val_accuracy": [0.38966667652130127, 0.4326666593551636, 0.6019999980926514, 0.7083333134651184, 0.703000009059906, 0.7269999980926514, 0.7396666407585144, 0.7586666941642761, 0.7333333492279053, 0.7536666393280029, 0.7609999775886536, 0.7953333258628845, 0.7913333177566528, 0.8119999766349792, 0.8133333325386047, 0.809333324432373, 0.8130000233650208, 0.7976666688919067, 0.812333345413208, 0.8026666641235352]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [7, 8, 5, 8, 2, 4, 4, 5, 9, 2], [1, 5, 5, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [3, 3, 2, 2], [48, 9]], "fitness": -0.7811428308486938, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(alpha, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.300157359499485, 2.2565182963099066, 2.1643590807773023, 2.075913934281883, 1.6034781934405362, 1.1384312596697108, 1.0094551653547719, 0.884521109671121, 0.8108994121548995, 0.774252113475933, 0.7321020246984905, 0.6986976378645171, 0.7003233629352523, 0.6509999371538576, 0.673537874139925, 0.6182897834100145, 0.6104496870263221], "accuracy": [0.2545238435268402, 0.2565050721168518, 0.25822216272354126, 0.27341169118881226, 0.4535728394985199, 0.5827499628067017, 0.6375643610954285, 0.6692643165588379, 0.7012283802032471, 0.7166820764541626, 0.7189275026321411, 0.7382115721702576, 0.7388719916343689, 0.7601373791694641, 0.7467969655990601, 0.7732135653495789, 0.765949010848999], "val_loss": [1.7838145664760046, 1.9575254576546806, 1.9813427925109863, 1.7246437753949846, 0.8886170046670097, 0.7500474963869367, 0.6319219555173602, 0.6023786578859601, 0.6617157629558018, 0.597117713519505, 0.5393001692635673, 0.5022786174501691, 0.5250348363603864, 0.5885605301175799, 0.49012225014822824, 0.5064840316772461, 0.5003099271229335], "val_accuracy": [0.36500000953674316, 0.1733333319425583, 0.11999999731779099, 0.43433332443237305, 0.6023333072662354, 0.6790000200271606, 0.7236666679382324, 0.7226666808128357, 0.6863333582878113, 0.7196666598320007, 0.7543333172798157, 0.7746666669845581, 0.7519999742507935, 0.718999981880188, 0.7733333110809326, 0.7549999952316284, 0.7649999856948853]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [1, 8, 8, 6, 2, 4, 4, 5, 9, 2, 5, 0, 4], [3, 3, 5, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [1, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [3, 3, 2, 2], [48, 9]], "fitness": -0.3871428668498993, "mapping_values": [1, 1, 1, 0, 1, 0, 18, 18, 12, 6, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.sqrt(grad), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), alpha))), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.6351018587139383, 2.381554143366765, 2.3038858449722026, 2.3031100249954926, 2.30294547599336, 2.302557771704405], "accuracy": [0.18240654468536377, 0.15414080023765564, 0.09576013684272766, 0.09536388516426086, 0.09893012791872025, 0.10170386731624603], "val_loss": [1.8298745836530412, 1.9748653684343611, 1.9739924839564733, 1.9735774312700545, 1.9735221862792969, 1.9731899670192175], "val_accuracy": [0.37566667795181274, 0.10233332961797714, 0.10233332961797714, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0], [0, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [7, 8, 5, 8, 2, 4, 4, 3, 9, 2], [2, 1, 5, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [1, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [48, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 2, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 3, 2, 1, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.301905614667486, 2.3025770182654277, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644460950579, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [7, 8, 5, 8, 2, 4, 4, 5, 9, 2], [5, 1, 5, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [1, 1], [79], [0, 0, 1, 0, 1, 0, 1, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [3, 3, 2, 2], [48, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 3, 2, 0, 1, 1, 1, 0, 1, 3, 2, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.sqrt(grad), tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [94947495.90099265, 1761293881.1443667, 8398484863.442081, 23253129963.678246, 49668539905.0144, 91666373080.57376], "accuracy": [0.10011887550354004, 0.1006472036242485, 0.10236428678035736, 0.10408136248588562, 0.10579843819141388, 0.10051512718200684], "val_loss": [356918976.0, 2853337746.285714, 9627735186.285715, 22818636361.142857, 44564426166.85714, 77003812278.85715], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 1], [0, 1, 1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [7, 8, 5, 8, 2, 4, 4, 5, 9, 2], [5, 1, 5, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [2, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [3, 3, 2, 2], [48, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 3, 1, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, sigma)", "other_info": {"loss": [2.3030910463286522, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1], [0, 0, 1], [0, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [7, 8, 8, 8, 2, 4, 4, 5, 6, 2], [5, 1, 5, 3, 1, 3, 4, 1], [14, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [2, 3, 2, 2], [48, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 17, 17, 10, 7, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(alpha, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad)))))))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [1, 8, 9, 8, 2, 4, 4, 5, 9, 2], [5, 1, 5, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [79], [1, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [3, 3, 2, 2], [48, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.sqrt(grad)), tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0796460211277008, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [7, 8, 5, 8, 2, 4, 4, 5, 9, 2], [5, 1, 5, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [1, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [2, 3, 2, 2], [97, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.sqrt(tf.math.add(beta, tf.math.square(alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08889182657003403, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [7, 8, 5, 8, 2, 4, 4, 5, 9, 2], [5, 1, 5, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [79], [1, 1, 0, 0, 1, 0, 0, 1, 1], [3, 6, 9, 8, 4, 7, 4, 5, 6], [3, 3, 2, 2], [95, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0796460211277008, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [5, 1, 5, 8, 2, 4, 4, 5, 9, 2], [5, 1, 5, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [2, 3, 2, 2], [97, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 10, 5, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))), tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, alpha))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [7, 8, 5, 8, 2, 4, 4, 5, 5, 4, 1, 3, 5, 8, 7, 8, 0, 0], [2, 1, 1, 3, 1, 3, 4, 1, 3], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [3, 3, 2, 2], [48, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 11, 6, 3, 27, 27, 18, 9, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), alpha)), tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))), tf.math.add(alpha, alpha)))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.square(tf.math.add(beta, tf.math.sqrt(beta))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(alpha)))), tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, grad)))), tf.math.add(beta, alpha))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.sqrt(grad), grad)))))), tf.math.negative(tf.math.add(beta, alpha)))), tf.math.negative(grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09285431355237961, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [5, 1, 5, 8, 2, 4, 4, 5, 9, 2], [2, 0, 5, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 0, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [3, 3, 2, 2], [48, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 3, 3, 0, 2], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.301905614667486, 2.3025770182654277, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09826971590518951, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644460950579, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.1003333330154419, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1], [1, 8, 2, 6, 2, 4, 4, 5, 9, 2, 5, 6, 4], [3, 0, 5, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [1, 1], [79], [1, 1, 0, 0, 1, 0, 0, 1, 1], [3, 5, 9, 8, 4, 7, 4, 5, 6], [3, 3, 2, 2], [48, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 10, 7, 2, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.sqrt(grad), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, alpha)))), tf.math.add(beta, grad)), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1236924235.9997904, 22961026330.002377, 109509343713.22995, 303229968843.86, 647731793820.9949, 1195471185898.6301], "accuracy": [0.10011887550354004, 0.1006472036242485, 0.10236428678035736, 0.10408136248588562, 0.10579843819141388, 0.10051512718200684], "val_loss": [4651704320.0, 37202515675.42857, 125545297627.42857, 297576141385.1429, 581181149769.1428, 1004254115547.4286], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1], [0, 0, 1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1], [7, 1, 5, 8, 1, 4, 9, 5, 9, 2, 8, 8, 0, 9], [5, 1, 5, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [79], [1, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [3, 3, 2, 2], [48, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 15, 15, 11, 4, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))))))), tf.math.add(beta, alpha)), tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0796460211277008, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [7, 4, 5, 8, 2, 4, 4, 5, 9, 2], [5, 1, 5, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [0, 8, 9, 8, 4, 7, 4, 5, 6], [2, 3, 2, 2], [48, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 9, 5, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))), tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.square(tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, alpha))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1], [5, 1, 5, 8, 2, 4, 4, 5, 4, 2], [2, 1, 5, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [3, 1], [79], [1, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [3, 3, 2, 2], [48, 9]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3023637791256846, 2.3019705552466556, 2.3042006373893567, 2.3022754369961698, 2.3033862332500377, 2.3032825481874313], "accuracy": [0.09589222073554993, 0.09060890227556229, 0.0878351628780365, 0.09338264167308807, 0.08770307898521423, 0.08915598690509796], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [7, 8, 9, 8, 2, 4, 4, 5, 9, 2], [2, 0, 5, 3, 1, 3, 4, 1], [98, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [3, 3, 2, 2], [48, 9]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, sigma)", "other_info": {"loss": [2.3023637791256846, 2.3019705552466556, 2.3042006373893567, 2.3022754369961698, 2.3033862332500377, 2.3032825481874313], "accuracy": [0.09589222073554993, 0.09060890227556229, 0.0878351628780365, 0.09338264167308807, 0.08770307898521423, 0.08915598690509796], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]