[{"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 1, 1], [2, 5, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 1, 7, 3, 9, 8, 9, 1, 9, 2, 0, 3, 8, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 3, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [44, 19, 37, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.822857141494751, "mapping_values": [1, 9, 9, 5, 4, 3, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.290220208848866, 1.9651421766082104, 1.5460998568127358, 1.237732093418594, 0.9222626741205492, 0.9860590605876859, 0.7816462972853493, 0.7620307669710757, 0.7261324496694985, 0.6499645226525436, 0.6441252955025559, 0.6354320152419008, 0.6367976572283381, 0.5742266264888888, 0.5646450699690453, 0.5524141575721403, 0.5841860993190953, 0.528452267673242, 0.509571748166556, 0.5211730340940762, 0.4807774419789899, 0.48399261344756117, 0.4870625206539581, 0.47673163813858804, 0.465383377522053, 0.46902392088004924, 0.45143390142717665, 0.4232990312270831, 0.43426279031825715, 0.42727368417795164, 0.42453526914820394, 0.4209771109074492, 0.3997570186825854, 0.40762128930806074, 0.4015847545108775, 0.3827344411911509, 0.395313571370462, 0.3791001365051262, 0.3655761908215775, 0.3601942087806935, 0.38322773141600214, 0.37086856876539437, 0.3502237581620993, 0.3606542056073854], "accuracy": [0.2654867172241211, 0.35609564185142517, 0.48289525508880615, 0.5646545886993408, 0.6617355942726135, 0.6433760523796082, 0.7057191729545593, 0.7127195596694946, 0.719852089881897, 0.7516840696334839, 0.752212405204773, 0.7614582180976868, 0.7577598690986633, 0.787082314491272, 0.7878747582435608, 0.7915731072425842, 0.7819310426712036, 0.7960638999938965, 0.8018755912780762, 0.8001585006713867, 0.8138951063156128, 0.8212917447090149, 0.8148196935653687, 0.817461371421814, 0.8226125836372375, 0.8220842480659485, 0.8298771381378174, 0.8432175517082214, 0.837537944316864, 0.8393871188163757, 0.8389908671379089, 0.8379341959953308, 0.8488970994949341, 0.8421608805656433, 0.8494254350662231, 0.8558974862098694, 0.8529917001724243, 0.8541803956031799, 0.8553691506385803, 0.8634262084960938, 0.8525954484939575, 0.858671247959137, 0.8658037185668945, 0.8639545440673828], "val_loss": [1.8153600692749023, 1.1763216767992293, 1.3173679283687048, 0.766309312411717, 0.6807158504213605, 0.6524303300040108, 0.6219879729407174, 0.5967429876327515, 0.5083685943058559, 0.5373147215162005, 0.5048231567655291, 0.5901943274906704, 0.46965726784297396, 0.4634502444948469, 0.542449917112078, 0.45168966906411306, 0.4429879869733538, 0.4272249681609018, 0.426667468888419, 0.41197383403778076, 0.4162671055112566, 0.3988093308040074, 0.48062137195042204, 0.44214751039232525, 0.43650801692690167, 0.4087400606700352, 0.38443771430424284, 0.4139986378805978, 0.39639679874692646, 0.4342477321624756, 0.39325464623314993, 0.36879674025944303, 0.3925219178199768, 0.3975396156311035, 0.3933101296424866, 0.3695181608200073, 0.3650737575122288, 0.361599794455937, 0.35533484390803743, 0.4455775874001639, 0.39465010166168213, 0.3594578334263393, 0.37087899446487427, 0.36317871298108784], "val_accuracy": [0.34166666865348816, 0.5059999823570251, 0.4449999928474426, 0.6703333258628845, 0.6933333277702332, 0.6970000267028809, 0.718666672706604, 0.7256666421890259, 0.7726666927337646, 0.7450000047683716, 0.7703333497047424, 0.7296666502952576, 0.7923333048820496, 0.7816666960716248, 0.7526666522026062, 0.7996666431427002, 0.8100000023841858, 0.8173333406448364, 0.809333324432373, 0.8226666450500488, 0.8193333148956299, 0.8259999752044678, 0.7649999856948853, 0.796999990940094, 0.8100000023841858, 0.8309999704360962, 0.8370000123977661, 0.8176666498184204, 0.8296666741371155, 0.8133333325386047, 0.8399999737739563, 0.8413333296775818, 0.843999981880188, 0.8196666836738586, 0.8270000219345093, 0.8450000286102295, 0.8446666598320007, 0.8429999947547913, 0.8556666374206543, 0.8136666417121887, 0.8259999752044678, 0.8513333201408386, 0.8456666469573975, 0.8500000238418579]}}, {"genotype": [[0], [1, 0, 1], [0, 0, 1], [4, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 1, 7, 3, 9, 8, 9, 1, 9, 2, 0, 3, 8, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 5, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [44, 19, 37, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.8057143092155457, "mapping_values": [1, 3, 3, 2, 1, 1, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), alpha), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, alpha))), grad), tf.math.multiply(tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.290032229356132, 1.9545214967075166, 1.5351241089963579, 1.1636131909450662, 0.977364935414855, 0.8182825209395036, 0.7463657324340255, 0.7862401215816927, 0.7007607254747701, 0.6723125153733535, 0.6462150535657815, 0.6276973016887781, 0.6091008230349044, 0.6065375567458766, 0.5710790410978352, 0.5723095732814742, 0.5590137076447149, 0.5289194690489954, 0.5222923052057441, 0.5325191347212634, 0.4988451854168007, 0.5052860677754009, 0.4823422107942478, 0.474541330393421, 0.46275749732915517], "accuracy": [0.26495838165283203, 0.3607185184955597, 0.4842160940170288, 0.5798441171646118, 0.6392814517021179, 0.6892088055610657, 0.7197200059890747, 0.7141724824905396, 0.7317395210266113, 0.7514199018478394, 0.7528728246688843, 0.7651565074920654, 0.7655527591705322, 0.767401933670044, 0.7837802171707153, 0.7765156626701355, 0.7816668748855591, 0.7942147850990295, 0.7994980812072754, 0.7961959838867188, 0.806630551815033, 0.8125742673873901, 0.8183859586715698, 0.8186501264572144, 0.8227446675300598], "val_loss": [1.816002300807408, 1.1248373644692558, 1.0363365582057409, 0.7990846974509103, 0.6465803725378854, 0.5786162444523403, 0.592248627117702, 0.5695350681032453, 0.5364564657211304, 0.5172995839800153, 0.5623865127563477, 0.4915910278047834, 0.4772396428244455, 0.47252648217337473, 0.4962894746235439, 0.4908573457172939, 0.45017923627580914, 0.4894054787499564, 0.44802069664001465, 0.4190858943121774, 0.45606127807072233, 0.44405519110815866, 0.42146572044917513, 0.4265052591051374, 0.4431699514389038], "val_accuracy": [0.3396666646003723, 0.5170000195503235, 0.6333333253860474, 0.6776666641235352, 0.7356666922569275, 0.7390000224113464, 0.7416666746139526, 0.7390000224113464, 0.7576666474342346, 0.7720000147819519, 0.7756666541099548, 0.777999997138977, 0.7789999842643738, 0.7926666736602783, 0.777999997138977, 0.778333306312561, 0.7973333597183228, 0.7683333158493042, 0.7960000038146973, 0.8199999928474426, 0.8013333082199097, 0.809333324432373, 0.8149999976158142, 0.8100000023841858, 0.8106666803359985]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 1, 1], [2, 5, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 1, 7, 3, 9, 8, 9, 1, 9, 2, 0, 3, 8, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 3, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [44, 19, 37, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.801714301109314, "mapping_values": [1, 9, 9, 5, 4, 3, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.square(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.pow(tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), tf.math.add(beta, grad)), tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.2900393734109272, 1.9870037637319327, 1.9949977810608635, 1.3686420087879831, 1.0701674084306914, 0.8432645096503009, 0.7158382769352756, 0.6884092782325024, 0.6518089716633817, 0.6390729946955367, 0.6028449864608579, 0.5932354254808251, 0.5772946597546981, 0.539160316748752, 0.5560917622141472, 0.5452789149232717, 0.5365543332058661, 0.5048234293080119, 0.4962794042896396], "accuracy": [0.26495838165283203, 0.34684982895851135, 0.34922730922698975, 0.5069343447685242, 0.6211860775947571, 0.681547999382019, 0.728701651096344, 0.7354378700256348, 0.7516840696334839, 0.7504953145980835, 0.7676661014556885, 0.7737419009208679, 0.7749306559562683, 0.7980451583862305, 0.7895918488502502, 0.7918372750282288, 0.7954035401344299, 0.8088759779930115, 0.8057059645652771], "val_loss": [1.8161201477050781, 1.7154394899095808, 1.2504423005240304, 1.1017610004970007, 0.6589053358350482, 0.5770272016525269, 0.5627808400562831, 0.5404111657823835, 0.5595411913735526, 0.48736824308122906, 0.48334314141954693, 0.4655305487768991, 0.43874732085636686, 0.4419644560132708, 0.5072276251656669, 0.4406438980783735, 0.4515382562364851, 0.44656382288251606, 0.4202887841633388], "val_accuracy": [0.3396666646003723, 0.3656666576862335, 0.5130000114440918, 0.5273333191871643, 0.6940000057220459, 0.7406666874885559, 0.7396666407585144, 0.7450000047683716, 0.731333315372467, 0.7889999747276306, 0.7876666784286499, 0.7860000133514404, 0.8066666722297668, 0.8119999766349792, 0.7739999890327454, 0.8109999895095825, 0.7910000085830688, 0.7876666784286499, 0.8116666674613953]}}, {"genotype": [[0], [1, 0, 1], [0, 0, 1], [2, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [9, 1, 7, 3, 9, 8, 4, 1, 9, 2, 2, 3, 8, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 1, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [30, 19, 37, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [89, 9, 76, 58]], "fitness": -0.28771427273750305, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), alpha), lambda shape,  alpha, beta, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.638017745994857, 2.314278808488444, 2.303282724127809, 2.30311973660834, 2.303010783631961, 2.3029975403947067, 2.302992237903785, 2.3025138364287256, 2.301885713754376, 2.289628542645764, 2.3127639557250563, 2.2649131517809584, 2.2653996257923064, 2.2903303205376493, 2.3039733713895982, 2.288753703317276], "accuracy": [0.17963281273841858, 0.09509972482919693, 0.09853387624025345, 0.09747721254825592, 0.09470347315073013, 0.1022322028875351, 0.09140139818191528, 0.10355303436517715, 0.09747721254825592, 0.11966715008020401, 0.12838461995124817, 0.18293488025665283, 0.13076211512088776, 0.11728965491056442, 0.08836349099874496, 0.14317791163921356], "val_loss": [2.0060553550720215, 1.974031720842634, 1.9736878531319755, 1.9736048834664481, 1.9735987527029855, 1.9733639444623674, 1.9734923498971122, 1.9726501192365373, 1.9714901787894112, 1.919447422027588, 1.7431648799351283, 1.976829937526158, 1.8241519246782576, 1.974342209952218, 1.9727808407374792, 1.65010895047869], "val_accuracy": [0.09833333641290665, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.09666666388511658, 0.10566666722297668, 0.10066666454076767, 0.10000000149011612, 0.10133333504199982, 0.1366666704416275, 0.33133333921432495, 0.1003333330154419, 0.29733332991600037, 0.09666666388511658, 0.10566666722297668, 0.3016666769981384]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 0], [1, 0, 1], [2, 5, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 1, 7, 3, 9, 8, 9, 1, 9, 2, 0, 3, 8, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 3, 1, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [66, 61, 20, 7, 45, 13], [0], [1, 1, 1], [9], [0, 1], [52], [1, 1, 1, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 2, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302447212244683, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 1, 1], [2, 5, 6, 5, 2, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 2, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 1, 7, 2, 6, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 3, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [44, 19, 37, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 1, 0, 1, 0, 0, 1, 1], [2, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 2, 15, 15, 9, 6, 2, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(alpha)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), tf.math.add(beta, grad)), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, beta))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.3020120699014237, 2.302557511084651, 2.3030895440806143, 2.305963331068102, 2.3220253823030546, 2.4246657626535346], "accuracy": [0.10593052208423615, 0.10249637067317963, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9738081523350306, 1.974175316946847, 1.9755496297563826, 1.9822568893432617, 2.0169471332005093, 2.303876059395926], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1], [0, 0, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 1, 7, 2, 6, 8, 5, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 3, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [44, 19, 37, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [9, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 14, 14, 8, 6, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), tf.math.add(beta, grad)), tf.math.add(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302447212244683, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 2, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 1, 9, 3, 9, 8, 9, 1, 9, 3, 0, 3, 8, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 2, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [44, 19, 37, 7, 45, 13], [0], [0, 1, 1], [9], [1, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 7, 7, 5, 2, 2, 1, 1, 1, 0, 1, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), alpha), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.302447212244683, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1], [0, 0, 1], [4, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [9, 1, 7, 3, 9, 8, 4, 1, 9, 2, 2, 3, 8, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 1, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [30, 19, 37, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [1, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), alpha), lambda shape,  alpha, beta, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302447212244683, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1], [0, 0, 1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 1, 7, 3, 9, 8, 9, 8, 6, 2, 0, 3, 8, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 1, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [44, 19, 37, 7, 45, 13], [0], [0, 1, 1], [9], [6, 1], [52], [1, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 22, 22, 15, 7, 2, 1, 1, 1, 0, 1, 1, 0, 1, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.sqrt(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, alpha))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, alpha)), grad)))), alpha)), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.sqrt(beta))))))))), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302447212244683, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1], [0, 0, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 1, 7, 3, 9, 8, 9, 1, 9, 2, 0, 4, 8, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [44, 56, 20, 7, 45, 13], [0, 1, 1], [1, 1, 1], [6], [6, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [2, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 15, 15, 11, 4, 4, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(beta, alpha)))), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(grad)), tf.math.add(beta, grad)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.302884178485349, 2.302789112391363, 2.302838746094669, 2.303016417062105, 2.3028719486923834, 2.302811285224746, 2.303047710925581, 2.303072412960943, 2.302933917242727], "accuracy": [0.09430722147226334, 0.09628847241401672, 0.09549596905708313, 0.09470347315073013, 0.09272222965955734, 0.09774138033390045, 0.09457138925790787, 0.09893012791872025, 0.09311848133802414], "val_loss": [1.9736249787466866, 1.9736592429024833, 1.973602226802281, 1.9736048153468542, 1.9736748422895158, 1.9736048153468542, 1.9737691198076521, 1.973745891026088, 1.973820413861956], "val_accuracy": [0.10133333504199982, 0.10000000149011612, 0.09833333641290665, 0.10566666722297668, 0.09833333641290665, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.09666666388511658]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1, 1, 1], [4, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 1, 7, 3, 9, 8, 9, 1, 9, 2, 0, 3, 8, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 3, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [93, 36, 20, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [1, 1, 0, 1, 1, 0, 0, 1, 1], [8, 2, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302447212244683, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [0, 0, 1, 0, 0, 0, 1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 8, 7, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 3, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [44, 19, 37, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 6, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 9, 5, 4, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.add(beta, grad))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.sqrt(sigma), tf.math.sqrt(tf.math.divide_no_nan(beta, alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 0, 1, 1, 1], [4, 8, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 1, 7, 3, 4, 8, 9, 1, 9, 2, 0, 3, 8, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 0, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [44, 19, 37, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 2, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 3, 22, 22, 14, 8, 3, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.multiply(alpha, grad)))), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))))), grad), tf.math.add(beta, tf.math.sqrt(beta))), tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09298639744520187, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0, 1, 1], [4, 7, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [4, 1, 7, 3, 9, 8, 4, 1, 9, 2, 2, 3, 8, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 1, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [9, 19, 37, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [1, 0, 0, 0, 1, 0, 0, 1, 1], [7, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 3, 23, 23, 14, 9, 2, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), alpha))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.subtract(tf.math.add(tf.math.multiply(tf.math.add(beta, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, grad), alpha), grad)))))))))), tf.math.add(beta, tf.math.sqrt(beta))), tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(beta, grad)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302447212244683, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1], [0, 0, 1], [4, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [9, 1, 7, 3, 9, 8, 4, 1, 9, 2, 2, 3, 8, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 1, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [25, 19, 37, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 5, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.0714285746216774, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), alpha), lambda shape,  alpha, beta, grad: tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.square(sigma))", "other_info": {"loss": [2.301855179737934, 2.30222830027952, 2.3018449592930437, 2.3004438781687897, 2.3011100420059387, 2.301470736345012, 2.301684584269324, 2.299611810994832, 2.3012559605060456, 2.3006104366764526, 2.3000029249434393, 2.30135672905851, 2.3008902786178296, 2.300680407915983, 2.3009398768622376, 2.3004372146356027, 2.299179733264023, 2.3004219147507476, 2.299930048530537, 2.299140434695934, 2.2993344023652504, 2.300203721064461, 2.2992843185921608, 2.2990454807729925, 2.29970766688382, 2.2986513263655532, 2.2997531281202823, 2.299853622763778, 2.2993902846444567, 2.2991638714847404, 2.299598958057388, 2.300166182624445, 2.2999193179939623, 2.2998697292913364], "accuracy": [0.09391097724437714, 0.09087307006120682, 0.0886276587843895, 0.09008057415485382, 0.0936468094587326, 0.09325055778026581, 0.09813763201236725, 0.10315678268671036, 0.0956280529499054, 0.09470347315073013, 0.09866596013307571, 0.08770307898521423, 0.10091137140989304, 0.0952318087220192, 0.09866596013307571, 0.10038304328918457, 0.09681680053472519, 0.09655263274908066, 0.09642054885625839, 0.10130762308835983, 0.09959053993225098, 0.09985470771789551, 0.09615638852119446, 0.10011887550354004, 0.10038304328918457, 0.1010434553027153, 0.09840179979801178, 0.09602430462837219, 0.10394927859306335, 0.10672302544116974, 0.10011887550354004, 0.09628847241401672, 0.09945846349000931, 0.10196803510189056], "val_loss": [1.9708732877458846, 1.9705416815621513, 1.9702647072928292, 1.9700003351484026, 1.9698633466448103, 1.9697341237749373, 1.9696289471217565, 1.9696332386561803, 1.9695803097316198, 1.969543525150844, 1.9695631435939245, 1.9695393017360143, 1.969571658543178, 1.9695511545453752, 1.9695357595171248, 1.9694745881216866, 1.9693989753723145, 1.9693326268877303, 1.969276019505092, 1.9692231587001257, 1.969200883592878, 1.9691836493355888, 1.9691480909075056, 1.969170366014753, 1.969179698399135, 1.9692649841308594, 1.9692946842738561, 1.9693548338753837, 1.9694442067827498, 1.9695679119655065, 1.9696804455348425, 1.9698212487357003, 1.9699403899056571, 1.9700638907296317], "val_accuracy": [0.03766666725277901, 0.04100000113248825, 0.04333333298563957, 0.046666666865348816, 0.05166666582226753, 0.05433333292603493, 0.057999998331069946, 0.05999999865889549, 0.059333331882953644, 0.060333333909511566, 0.061666667461395264, 0.06199999898672104, 0.06499999761581421, 0.06666667014360428, 0.07000000029802322, 0.07100000232458115, 0.0729999989271164, 0.07533333450555801, 0.07500000298023224, 0.07866666465997696, 0.07966666668653488, 0.08100000023841858, 0.08233333379030228, 0.08399999886751175, 0.08433333039283752, 0.08433333039283752, 0.08533333241939545, 0.0860000029206276, 0.08633333444595337, 0.0860000029206276, 0.08433333039283752, 0.08299999684095383, 0.08133333176374435, 0.0793333351612091]}}, {"genotype": [[0], [1, 0, 1], [0, 0, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 1, 7, 3, 9, 8, 9, 1, 9, 2, 0, 3, 8, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [44, 19, 37, 7, 45, 13], [1], [1, 1, 1], [9], [6, 1], [52], [0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.3019959794027995, 2.3028508521908737, 2.3028110734475775, 2.3018014037676804, 2.3027077528621387, 2.3032854456455008], "accuracy": [0.09391097724437714, 0.09008057415485382, 0.08770307898521423, 0.09021265059709549, 0.08889182657003403, 0.08836349099874496], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1], [4, 0, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 3, 7, 2, 0, 8, 8, 8, 3, 2, 0, 0, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 3, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [44, 67, 37, 7, 45, 13], [1], [0, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 10, 10, 6, 4, 2, 15, 15, 9, 6, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.negative(alpha)), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.pow(tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))))))), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(alpha, tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad))), tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, beta))))))))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma))", "other_info": {"loss": [2.3019959794027995, 2.3028508521908737, 2.3028110734475775, 2.3018014037676804, 2.3027077528621387, 2.3032854456455008], "accuracy": [0.09391097724437714, 0.09008057415485382, 0.08770307898521423, 0.09021265059709549, 0.08889182657003403, 0.08836349099874496], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1, 0], [0, 0, 1, 1], [8, 3, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 8, 7, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 3, 3, 3, 3, 2, 0, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [67, 36, 20, 7, 45, 13], [1], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 2, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [48, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 4, 4, 2, 2, 1, 8, 8, 5, 3, 2, 1, 0, 0, 0, 0, 9, 5, 4, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(alpha, tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.sqrt(tf.math.add(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.add(sigma, tf.math.sqrt(tf.math.sqrt(tf.math.divide_no_nan(beta, alpha)))))", "other_info": {"loss": [2.3019959794027995, 2.3028508521908737, 2.3028110734475775, 2.3018014037676804, 2.3027077528621387, 2.3032854456455008], "accuracy": [0.09391097724437714, 0.09008057415485382, 0.08770307898521423, 0.09021265059709549, 0.08889182657003403, 0.08836349099874496], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 0, 1], [0, 0, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [36, 80, 61], [1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 1, 7, 2, 1, 8, 9, 5, 3, 1, 0, 8, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 3, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [44, 19, 37, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 1, 1, 1, 0, 0, 1, 1], [3, 0, 8, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [26, 9, 76, 58]], "fitness": -0.007428571581840515, "mapping_values": [1, 2, 2, 2, 0, 1, 19, 19, 12, 7, 2, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.negative(tf.math.add(beta, grad)), grad)))))))), beta), tf.math.add(beta, tf.math.sqrt(alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.3095780107654114, 2.330523445464207, 2.354444742612142, 2.3850727908253244, 2.4302281369433634, 2.5007176243980185], "accuracy": [0.07674019038677216, 0.04543653503060341, 0.028661999851465225, 0.02152951993048191, 0.015057455748319626, 0.011359133757650852], "val_loss": [1.9885875838143485, 2.0087156295776367, 2.0334462438310896, 2.066136496407645, 2.1136018889290944, 2.1933507919311523], "val_accuracy": [0.006666666828095913, 0.004666666500270367, 0.004333333112299442, 0.004999999888241291, 0.00566666666418314, 0.0063333334401249886]}}]