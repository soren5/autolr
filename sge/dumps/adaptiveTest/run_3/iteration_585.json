[{"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 2, 0, 9, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [2, 2, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [16, 19, 41, 7, 45, 13], [0, 1, 0], [0, 1, 1], [0], [4, 1], [52], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0], [3, 0, 5, 8, 6, 0, 4, 5, 6, 0, 9], [2, 0, 2, 1, 0, 0, 2, 2], [45, 7, 76, 58]], "fitness": -0.8291428685188293, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.057269483273292, 1.5131427986337493, 1.1017052199799293, 0.8934365920166472, 0.8146192937983089, 0.7784446385857483, 0.7431917261957666, 0.6919612766745037, 0.6866939928490393, 0.6739853330732982, 0.6027564960637065, 0.6323730249399239, 0.5912449936651991, 0.5827233679007073, 0.5703348727856707, 0.5470143419845056, 0.5403182647877272, 0.5703354702255965, 0.5204021423767744, 0.4999051100117199, 0.5397258225669478, 0.49977225780864953, 0.4750986875182114, 0.4846166885051871, 0.45720096191694204, 0.47315997522993014, 0.47112969577651, 0.4436884425327589, 0.4366560739147318, 0.4543485285158501, 0.4391988908586375, 0.4240496950048135, 0.41061017319526594, 0.4094715006929961], "accuracy": [0.32664114236831665, 0.4823669195175171, 0.5861841440200806, 0.6732267737388611, 0.6944921612739563, 0.698190450668335, 0.720380425453186, 0.7358341217041016, 0.7403249144554138, 0.739400327205658, 0.7677981853485107, 0.7576277852058411, 0.7763835787773132, 0.7738739848136902, 0.7841764688491821, 0.7884030938148499, 0.7971205711364746, 0.7803460359573364, 0.7936864495277405, 0.8105930685997009, 0.7924976944923401, 0.8124422430992126, 0.8232730031013489, 0.8257825970649719, 0.830669641494751, 0.822348415851593, 0.821820080280304, 0.8318583965301514, 0.8372738361358643, 0.828820526599884, 0.8330471515655518, 0.8391229510307312, 0.845859169960022, 0.8487650156021118], "val_loss": [1.6771951402936662, 0.8341412544250488, 0.712027873311724, 0.7124543360301426, 0.6234830107007708, 0.6743775095258441, 0.5783570493970599, 0.5404561587742397, 0.5242923838751656, 0.5076502391270229, 0.5377308981759208, 0.4751020669937134, 0.5138371501650129, 0.5038088730403355, 0.46091014998299734, 0.4884192943572998, 0.4497919423239572, 0.43576708861759733, 0.4426192045211792, 0.43899217673710417, 0.42511697326387676, 0.42752517972673687, 0.4268991436277117, 0.41863622835704256, 0.4243534973689488, 0.40299553530556814, 0.3953587072236197, 0.42676685537610737, 0.3748881646565029, 0.4031816465514047, 0.403134856905256, 0.3818398969514029, 0.3983871766499111, 0.3895730546542576], "val_accuracy": [0.4206666648387909, 0.6673333048820496, 0.6923333406448364, 0.6679999828338623, 0.7049999833106995, 0.6916666626930237, 0.7433333396911621, 0.7549999952316284, 0.7683333158493042, 0.7726666927337646, 0.7333333492279053, 0.7793333530426025, 0.7833333611488342, 0.7663333415985107, 0.7946666479110718, 0.7756666541099548, 0.8040000200271606, 0.8119999766349792, 0.7996666431427002, 0.8056666851043701, 0.8220000267028809, 0.8059999942779541, 0.8116666674613953, 0.8243333101272583, 0.8073333501815796, 0.8286666870117188, 0.8396666646003723, 0.8180000185966492, 0.8443333506584167, 0.8296666741371155, 0.8366666436195374, 0.8306666612625122, 0.8316666483879089, 0.8299999833106995]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 2, 2, 9, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [0, 0, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 3, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [16, 19, 41, 7, 45, 13], [0, 1, 0], [0, 1, 1], [7], [4, 1], [52], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [2, 0, 2, 1, 0, 0, 2, 2], [19, 7, 76, 58]], "fitness": -0.7919999957084656, "mapping_values": [1, 5, 5, 2, 3, 2, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 6, 4, 2, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.negative(tf.math.sqrt(tf.math.sqrt(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [1.9689559646018697, 1.4832848362588233, 1.0378758486755426, 0.8828002296702075, 0.8252126853448084, 0.8002681270046886, 0.7496478885644463, 0.6964597947813848, 0.6893420108021873, 0.6657264105175559, 0.6688142349659854, 0.6548855582075254, 0.6248714119971405, 0.6139666542967848, 0.6089676869402094, 0.5925072590436571, 0.5715094300513696, 0.5698854430334963, 0.573903197790921, 0.5430859919268898, 0.5442553990395188], "accuracy": [0.3420948386192322, 0.488971084356308, 0.6168273687362671, 0.6737551093101501, 0.6911900639533997, 0.6975300312042236, 0.7161537408828735, 0.7425703406333923, 0.7366266250610352, 0.7440232634544373, 0.7403249144554138, 0.7515519857406616, 0.7618544697761536, 0.7668735980987549, 0.7725531458854675, 0.7758552432060242, 0.7824593782424927, 0.7828556299209595, 0.7812706232070923, 0.7980451583862305, 0.7979130744934082], "val_loss": [1.602177960532052, 0.9537339891706195, 0.7251086575644357, 0.665051988192967, 0.6195647716522217, 0.6146342584065029, 0.5669784886496407, 0.5530123029436383, 0.5937091963631767, 0.5526401145117623, 0.5385507685797555, 0.48763089520590647, 0.49768943446023123, 0.48742847783224924, 0.49721029826572966, 0.46075068201337543, 0.45700434276035856, 0.47389515808650423, 0.4845344679696219, 0.44134920835494995, 0.45494721617017475], "val_accuracy": [0.34333333373069763, 0.6413333415985107, 0.6650000214576721, 0.7093333601951599, 0.7110000252723694, 0.7093333601951599, 0.7440000176429749, 0.746999979019165, 0.7250000238418579, 0.734666645526886, 0.746666669845581, 0.778333306312561, 0.7743333578109741, 0.781333327293396, 0.7789999842643738, 0.8073333501815796, 0.7979999780654907, 0.79666668176651, 0.7816666960716248, 0.8033333420753479, 0.7976666688919067]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 2, 2, 9, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [3, 0, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [16, 19, 41, 7, 45, 13], [0, 1, 0], [0, 1, 1], [0], [4, 1], [52], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0], [3, 0, 5, 8, 6, 0, 4, 5, 6, 0, 9], [2, 0, 2, 1, 0, 0, 2, 2], [20, 7, 76, 58]], "fitness": -0.7011428475379944, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.negative(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3004815505086595, 2.2935303933175484, 2.290279538765906, 2.2864963740342645, 2.279448596037075, 2.2744687934986842, 2.2700368123299506, 2.263511519091335, 2.257075229262348, 2.2523447424901586, 2.2451860306049145, 2.2371004694693157, 2.230960561016437, 2.224293234766813, 2.21651496469636, 2.209212769102883, 2.2001582125410697, 2.1923295985816287, 2.1821013692347697, 2.1728214579267178, 2.161123386132892, 2.1510695585123125, 2.1369312203492563, 2.1233037848907803, 2.111229565165314, 2.0954999891585206, 2.0759088261221, 2.059953962287505, 2.0434056076910894, 2.0277168877671787, 2.0048607429414456, 1.9829733004706678, 1.9604630205908693, 1.9393686413087896, 1.9157502074928772, 1.8895244283320929, 1.8718441834366002, 1.8421805005394125, 1.815718618586803, 1.7923970172874775, 1.7597085767182157, 1.7338410686146015, 1.7114873168301887, 1.6888644859192787, 1.6602154890811676, 1.6291925009010868, 1.606269598495313, 1.5838507851117072, 1.5561375094914969, 1.5334674319445007, 1.5213135189116356, 1.4847356846713275, 1.4759830669279128, 1.4540857553104163, 1.4325361183023158, 1.4127479788649588, 1.3969433117756802, 1.3758215972099006, 1.3603460798803937, 1.34639896070795, 1.3277892489648058, 1.3159916377291152, 1.2935390826056363, 1.2928466204528748, 1.272928285025618, 1.2574772690076554, 1.2448333716269702, 1.2333001381433588, 1.2299301061395955, 1.2170509039025186, 1.202611516810301, 1.2057821240328748, 1.1883375901178268, 1.1745403264381662, 1.1749830990891965, 1.1606228452364309, 1.1571593581882245, 1.148641372747299, 1.1217342733691287, 1.133835049353224, 1.1255220549217761, 1.1089936294701783, 1.109027807108872, 1.098245964892993, 1.0877355783685734, 1.087658318798099, 1.0866543584102337, 1.0768296558229349, 1.066494205813319, 1.0580443469619298, 1.0567653370004335, 1.0458865421575059, 1.0478717566418247, 1.0365961586495338, 1.0280448439775944, 1.0283980707938976, 1.0354038063939126, 1.0170938612731095, 1.0195979262308406, 1.0163092154081015], "accuracy": [0.09140139818191528, 0.11596883088350296, 0.12613920867443085, 0.13261127471923828, 0.15070664882659912, 0.16602826118469238, 0.17342491447925568, 0.187689870595932, 0.2071060687303543, 0.2148989588022232, 0.2312772423028946, 0.24725927412509918, 0.2662792205810547, 0.27777042984962463, 0.280940443277359, 0.29401662945747375, 0.30960243940353394, 0.3187161684036255, 0.3269053101539612, 0.325320303440094, 0.3415665030479431, 0.34539690613746643, 0.36124685406684875, 0.36824727058410645, 0.3707568347454071, 0.3781534731388092, 0.3909655213356018, 0.39849424362182617, 0.39387133717536926, 0.4060229957103729, 0.41011756658554077, 0.4247787594795227, 0.42345792055130005, 0.4245145916938782, 0.4367983043193817, 0.4443270266056061, 0.4361378848552704, 0.4519878625869751, 0.4505349397659302, 0.45845991373062134, 0.46730947494506836, 0.47285696864128113, 0.4753665328025818, 0.4721965491771698, 0.4752344489097595, 0.49491479992866516, 0.502971887588501, 0.5032360553741455, 0.5094439387321472, 0.5082551836967468, 0.5105006098747253, 0.5308413505554199, 0.5258222222328186, 0.5254259705543518, 0.531898021697998, 0.5361247062683105, 0.5411438345909119, 0.5440496802330017, 0.5480121374130249, 0.5536917448043823, 0.55791836977005, 0.5571258664131165, 0.5622771382331848, 0.5577862858772278, 0.5688812732696533, 0.5712587237358093, 0.5812970399856567, 0.5791836977005005, 0.5811649560928345, 0.5798441171646118, 0.5886936783790588, 0.585391640663147, 0.5901466012001038, 0.5927882790565491, 0.5950337052345276, 0.5996565818786621, 0.5999207496643066, 0.5979394912719727, 0.6070532202720642, 0.6104874014854431, 0.6078457236289978, 0.6102232336997986, 0.6169594526290894, 0.6108836531639099, 0.6219785809516907, 0.6193369626998901, 0.6230352520942688, 0.6263373494148254, 0.6299035549163818, 0.6333377361297607, 0.629111111164093, 0.6316206455230713, 0.6325452327728271, 0.6388852000236511, 0.6384889483451843, 0.6367719173431396, 0.6313564777374268, 0.643772304058075, 0.639809787273407, 0.6453573107719421], "val_loss": [1.9662282126290458, 1.9613566398620605, 1.9564602034432548, 1.9516091346740723, 1.9466859272548132, 1.9416533197675432, 1.9365524564470564, 1.931305204119001, 1.925853865487235, 1.9201485770089286, 1.9142275537763322, 1.90790741784232, 1.901268686567034, 1.8943414006914412, 1.8870395251682825, 1.8792914663042342, 1.8709314891270228, 1.8621659960065569, 1.8526527541024345, 1.8425698280334473, 1.8319143567766463, 1.8204550743103027, 1.808213233947754, 1.7951904024396623, 1.7814788137163435, 1.7667316028050013, 1.7509493827819824, 1.734353474208287, 1.716836895261492, 1.6984522342681885, 1.6790344715118408, 1.6583947794778007, 1.6369338035583496, 1.6146053246089391, 1.5914421422140939, 1.5671230724879675, 1.5425314222063338, 1.517214298248291, 1.4914100510733468, 1.4651993002210344, 1.4383883135659354, 1.4115409851074219, 1.3848555769239153, 1.3582441466195243, 1.331817354474749, 1.3053411756243025, 1.2794055598122733, 1.2541814531598772, 1.229020629610334, 1.2049412046160017, 1.1823477063860213, 1.1598691940307617, 1.1387964657374792, 1.1184690339224679, 1.0987447329929896, 1.0800214494977678, 1.0622841290065221, 1.0452476910182409, 1.0288922786712646, 1.0130572659628732, 0.9979446615491595, 0.9838339941842216, 0.9698585442134312, 0.9572226319994245, 0.9449444838932582, 0.9329540729522705, 0.9216151237487793, 0.9105953829629081, 0.9004888875143868, 0.8907298360552106, 0.8812388011387416, 0.8723727294376918, 0.8639754227229527, 0.8558576447623116, 0.8480032001222882, 0.8405983448028564, 0.8335966212408883, 0.8264387505395072, 0.8194666079112461, 0.8131033182144165, 0.807014891079494, 0.8007479054587228, 0.7947471823011126, 0.7892045293535505, 0.7837174109050206, 0.778511813708714, 0.7738020420074463, 0.7688928501946586, 0.7641347817012242, 0.7596561057226998, 0.7553546939577375, 0.7509503875459943, 0.746970670563834, 0.7430245365415301, 0.738803471837725, 0.7352924517222813, 0.7318285192762103, 0.7280605350221906, 0.7246547426496234, 0.7212775434766497], "val_accuracy": [0.06566666811704636, 0.10700000077486038, 0.15800000727176666, 0.2043333351612091, 0.2383333295583725, 0.27799999713897705, 0.30666667222976685, 0.33033332228660583, 0.3490000069141388, 0.3636666536331177, 0.37533333897590637, 0.3843333423137665, 0.3943333327770233, 0.40799999237060547, 0.4189999997615814, 0.42933332920074463, 0.43799999356269836, 0.4436666667461395, 0.4483333230018616, 0.4546666741371155, 0.46266666054725647, 0.46933332085609436, 0.4776666760444641, 0.48500001430511475, 0.4906666576862335, 0.49900001287460327, 0.5056666731834412, 0.5133333206176758, 0.5176666378974915, 0.5210000276565552, 0.5260000228881836, 0.5296666622161865, 0.5339999794960022, 0.5389999747276306, 0.5403333306312561, 0.543666660785675, 0.5460000038146973, 0.5496666431427002, 0.5513333082199097, 0.5529999732971191, 0.5586666464805603, 0.5603333115577698, 0.5613333582878113, 0.5653333067893982, 0.5730000138282776, 0.57833331823349, 0.5803333520889282, 0.5830000042915344, 0.5860000252723694, 0.5923333168029785, 0.5963333249092102, 0.597000002861023, 0.6033333539962769, 0.6153333187103271, 0.624666690826416, 0.6296666860580444, 0.637333333492279, 0.643666684627533, 0.6489999890327454, 0.6520000100135803, 0.6556666493415833, 0.6573333144187927, 0.6610000133514404, 0.6639999747276306, 0.6663333177566528, 0.6710000038146973, 0.6713333129882812, 0.6740000247955322, 0.6776666641235352, 0.6793333292007446, 0.6786666512489319, 0.6819999814033508, 0.6823333501815796, 0.6823333501815796, 0.687333345413208, 0.6883333325386047, 0.6880000233650208, 0.6923333406448364, 0.6933333277702332, 0.6943333148956299, 0.6966666579246521, 0.6956666707992554, 0.6959999799728394, 0.6973333358764648, 0.6973333358764648, 0.6973333358764648, 0.6986666917800903, 0.6996666789054871, 0.7003333568572998, 0.7006666660308838, 0.7016666531562805, 0.7036666870117188, 0.7049999833106995, 0.7049999833106995, 0.7066666483879089, 0.7066666483879089, 0.7076666951179504, 0.7099999785423279, 0.7123333215713501, 0.7133333086967468]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 9, 0, 9, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [3, 0, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [52, 12, 22, 41, 42, 68], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [16, 19, 41, 7, 45, 13], [0, 1, 1], [0, 1, 1], [7], [4, 1], [52], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 5, 8, 6, 0, 4, 5, 6, 0, 9], [2, 0, 2, 1, 0, 0, 2, 2], [19, 7, 76, 58]], "fitness": -0.6851428747177124, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 6, 4, 2, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.negative(tf.math.square(tf.math.sqrt(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.300880215376155, 2.294875759159522, 2.2925785734448465, 2.2897113768053945, 2.2836647712008165, 2.279719067444938, 2.276294723619575, 2.270912539610978, 2.2657323503979225, 2.2623581398180557, 2.2566528184586168, 2.2503620023189552, 2.246016099799059, 2.2412162910693705, 2.2356082104484023, 2.230638848288247, 2.224376729104371, 2.2190830919484674, 2.212466341298821, 2.206298474134345, 2.1984262443127305, 2.192559844357006, 2.183117576452247, 2.174776944313004, 2.167421809434418, 2.1577443823350215, 2.1452769715441784, 2.135382105850383, 2.1259000699092776, 2.116754710194048, 2.1021808879155963, 2.0890576733952075, 2.074749711293271, 2.0623266833915905, 2.04763262553096, 2.031429909034853, 2.0207183089600798, 2.001468567028809, 1.9834514408693527, 1.9681159218052642, 1.9455619311335852, 1.9268649038212284, 1.9102761225221085, 1.8934612723074538, 1.8713256295299519, 1.8460629715533414, 1.8272972861458645, 1.8070682045050175, 1.7838994115650095, 1.7627406088179443, 1.7474274507776275, 1.7152200323038602, 1.702626765112851, 1.678929841592406, 1.6578997990175277, 1.6354911431754822, 1.6154701246041916, 1.5912976659851115, 1.5733390219884542, 1.5556408940462498, 1.534304735446729, 1.515852139421568, 1.4920679971983153, 1.4857882283005055, 1.4617800606933047, 1.4427324356010578, 1.4264795112414619, 1.4106817556457307, 1.4016592163435615, 1.3857321029861354, 1.3688923804956168, 1.3677474097364126, 1.3463538657908805, 1.3305218681258106, 1.3267795262225253, 1.310719918014351, 1.3038919749371427, 1.2928555924674192, 1.2635144812949597, 1.271145148630612, 1.259377688291507, 1.2443274017243795, 1.2432202589966916, 1.22725508255871, 1.218417786241853, 1.2126684120979607, 1.2121012007886267, 1.1987826169174833, 1.188223083178916, 1.177715852575185, 1.174352955226145, 1.1616785063514967, 1.1621016047303514, 1.1475812722159382, 1.1397488457163674, 1.1365459928612085, 1.1430863709324435, 1.1252065668677955, 1.123695996758362, 1.118647575409909], "accuracy": [0.09034473448991776, 0.11068551242351532, 0.11940298229455948, 0.12429005652666092, 0.1430458277463913, 0.15215955674648285, 0.1554616242647171, 0.1694624274969101, 0.18412363529205322, 0.1900673657655716, 0.20644564926624298, 0.21872936189174652, 0.2343151569366455, 0.24303261935710907, 0.2534671723842621, 0.2604675590991974, 0.27961960434913635, 0.28556331992149353, 0.28899750113487244, 0.2925637364387512, 0.30603620409965515, 0.30524370074272156, 0.32518821954727173, 0.32981112599372864, 0.33218860626220703, 0.34328359365463257, 0.35424646735191345, 0.3623035252094269, 0.3549068868160248, 0.3677189350128174, 0.372209757566452, 0.38607844710350037, 0.387399286031723, 0.39149385690689087, 0.40166425704956055, 0.40641921758651733, 0.39849424362182617, 0.41487252712249756, 0.41104212403297424, 0.4231937527656555, 0.42808082699775696, 0.4383833110332489, 0.4336283206939697, 0.4321753978729248, 0.4434024691581726, 0.4570069909095764, 0.4605732262134552, 0.4550257623195648, 0.46612071990966797, 0.46585655212402344, 0.4651961326599121, 0.4819706678390503, 0.4799894392490387, 0.4788006842136383, 0.48487651348114014, 0.49293357133865356, 0.49808478355407715, 0.5013868808746338, 0.5054814219474792, 0.5081230998039246, 0.5175009965896606, 0.5103685259819031, 0.5229163765907288, 0.5196143388748169, 0.5304450988769531, 0.5283318161964417, 0.5433892607688904, 0.5414080023765564, 0.5392946600914001, 0.5411438345909119, 0.5474838018417358, 0.5477479696273804, 0.5568616986274719, 0.5534275770187378, 0.5544841885566711, 0.5587108731269836, 0.5635979175567627, 0.5585787892341614, 0.5736362338066101, 0.572579562664032, 0.5739004015922546, 0.5757495760917664, 0.5762779116630554, 0.5765420794487, 0.5840708017349243, 0.5830141305923462, 0.5872408151626587, 0.5909391045570374, 0.5888257622718811, 0.5964865684509277, 0.5914674401283264, 0.6004490852355957, 0.600581169128418, 0.6021661758422852, 0.6057323813438416, 0.602562427520752, 0.5975432395935059, 0.6090344786643982, 0.6090344786643982, 0.614317774772644], "val_loss": [1.9671282087053572, 1.9631411007472448, 1.9591320582798548, 1.955171721322196, 1.9511657442365373, 1.9471047265189034, 1.9430338995797294, 1.9389076914106096, 1.9346788270132882, 1.9303019387381417, 1.9258228710719518, 1.9211440086364746, 1.9163329260689872, 1.9113567216055733, 1.9061767714364188, 1.9007859230041504, 1.8950715065002441, 1.8891878809247697, 1.8829113415309362, 1.8763658659798759, 1.8695408276149206, 1.8622889518737793, 1.8546161651611328, 1.8465112958635603, 1.8380653517586845, 1.8290705680847168, 1.8194735390799386, 1.8094409533909388, 1.7989238330296107, 1.7878967693873815, 1.7762575830732072, 1.763925279889788, 1.7510909352983748, 1.73762880052839, 1.7235090391976493, 1.7086056641169958, 1.6932783126831055, 1.6772164617265974, 1.660492181777954, 1.6431721619197301, 1.6250170639583044, 1.606318712234497, 1.5871101106916154, 1.5675180980137415, 1.547377688544137, 1.5265717506408691, 1.5055381570543562, 1.4842309951782227, 1.4625612667628698, 1.4407862254551478, 1.4192187786102295, 1.397045339856829, 1.3753017357417516, 1.3536475726536341, 1.33201687676566, 1.3105127811431885, 1.289266518184117, 1.2683147362300329, 1.247732094355992, 1.2275995186397008, 1.2077836649758475, 1.1887403896876745, 1.16997150012425, 1.1521986893245153, 1.1348682131086076, 1.118018388748169, 1.1016649518694197, 1.0857995918818883, 1.070910862513951, 1.0565217222486223, 1.042497158050537, 1.0292961938040597, 1.0165679454803467, 1.0043318612234933, 0.9924190385001046, 0.981029782976423, 0.9703067370823452, 0.9597515719277518, 0.9492370741707938, 0.9395990371704102, 0.9303145749228341, 0.9210328374590192, 0.9122536182403564, 0.9039235455649239, 0.8957264082772392, 0.8878628867013114, 0.880486283983503, 0.8730643476758685, 0.8659553868430001, 0.8591357639857701, 0.852592945098877, 0.8459690638950893, 0.839869567326137, 0.8339147908346993, 0.8276911463056292, 0.8220246689660209, 0.8168863909585136, 0.8115442139761788, 0.8064945765904018, 0.801578232220241], "val_accuracy": [0.05833333358168602, 0.09233333170413971, 0.1303333342075348, 0.17399999499320984, 0.2056666612625122, 0.2356666624546051, 0.2693333327770233, 0.29733332991600037, 0.3163333237171173, 0.3346666693687439, 0.3503333330154419, 0.36033332347869873, 0.37299999594688416, 0.3786666691303253, 0.3863333463668823, 0.3956666588783264, 0.40833333134651184, 0.4169999957084656, 0.4259999990463257, 0.4309999942779541, 0.43700000643730164, 0.44433334469795227, 0.4476666748523712, 0.453000009059906, 0.4586666524410248, 0.4623333215713501, 0.47066667675971985, 0.47733333706855774, 0.4833333194255829, 0.4880000054836273, 0.49566665291786194, 0.5019999742507935, 0.5049999952316284, 0.5116666555404663, 0.5149999856948853, 0.5206666588783264, 0.5243333578109741, 0.5260000228881836, 0.5303333401679993, 0.5320000052452087, 0.5379999876022339, 0.5396666526794434, 0.5413333177566528, 0.5423333048820496, 0.5463333129882812, 0.5506666898727417, 0.5503333210945129, 0.5513333082199097, 0.5536666512489319, 0.5580000281333923, 0.5606666803359985, 0.5606666803359985, 0.5619999766349792, 0.565666675567627, 0.5733333230018616, 0.5763333439826965, 0.5799999833106995, 0.5809999704360962, 0.5846666693687439, 0.5896666646003723, 0.593666672706604, 0.5963333249092102, 0.5986666679382324, 0.6039999723434448, 0.609666645526886, 0.6143333315849304, 0.6240000128746033, 0.6326666474342346, 0.6353333592414856, 0.637666642665863, 0.643666684627533, 0.6493333578109741, 0.6526666879653931, 0.6539999842643738, 0.6570000052452087, 0.659333348274231, 0.6586666703224182, 0.6613333225250244, 0.6666666865348816, 0.6663333177566528, 0.6683333516120911, 0.6713333129882812, 0.671999990940094, 0.6736666560173035, 0.6763333082199097, 0.6793333292007446, 0.6803333163261414, 0.6823333501815796, 0.6833333373069763, 0.684333324432373, 0.6869999766349792, 0.6893333196640015, 0.6903333067893982, 0.6899999976158142, 0.6923333406448364, 0.6933333277702332, 0.6940000057220459, 0.6949999928474426, 0.6949999928474426, 0.6956666707992554]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [3, 5, 5, 9, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [2, 2, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 5, 5, 5, 3, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 19, 41, 7, 45, 13], [0, 1, 0], [0, 1, 1], [0], [4, 1], [52], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0], [3, 0, 2, 8, 6, 4, 4, 5, 6, 0, 9], [2, 0, 2, 1, 0, 0, 2, 2], [19, 7, 76, 58]], "fitness": -0.6851428747177124, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.negative(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.300880215376155, 2.2948757276684932, 2.2925785419538176, 2.2897113453143656, 2.2836647712008165, 2.2797189729718514, 2.276294723619575, 2.2709125216296004, 2.26573241337998, 2.2623581398180557, 2.2566528184586168, 2.2503620517913614, 2.246016036817001, 2.2412162730879928, 2.235608192467025, 2.2306387808344637, 2.2243767111229937, 2.2190830109850324, 2.2124662153347057, 2.2062981997530113, 2.1984256909838633, 2.192559174101949, 2.183116910668916, 2.1747761345841803, 2.167420855760102, 2.1577435546248203, 2.145275666996819, 2.1353808957761102, 2.125899053252904, 2.1167531357370803, 2.102179228023468, 2.089056044994108, 2.074748222271465, 2.0623247715712316, 2.0476306641437216, 2.0314276958138575, 2.0207163386293896, 2.0014662300795614, 1.983449227648357, 1.9681133352108855, 1.9455589509013465, 1.9268620022220886, 1.9102734211429298, 1.8934574822991548, 1.8713218801923164, 1.846059611192894, 1.827293089084527, 1.8070639556881742, 1.7838941910924724, 1.7627354221195357, 1.7474215848334729, 1.7152144385051764, 1.7026217762568308, 1.6789253363283696, 1.6578957054199654, 1.6354861250170596, 1.615466330171403, 1.5912928254990735, 1.5733336507683622, 1.555637517940288, 1.5343017011758846, 1.5158490601972803, 1.492064259039995, 1.4857842156191419, 1.4617763516484408, 1.4427297140046385, 1.426477210349442, 1.4106790564079421, 1.4016582783675229, 1.3857311583025076, 1.3688902709273425, 1.3677444297403565, 1.3463533415754694, 1.3305178079244846, 1.326775716280405, 1.3107174484406354, 1.3038896153458452, 1.2928531905364335, 1.2635124166328926, 1.2711450405534013, 1.2593755224015277, 1.2443253323071668, 1.2432217750378005, 1.227251906814419, 1.218416949777146, 1.2126667923096575, 1.2120995589723487, 1.1987812945776926, 1.188219817386028, 1.177714012869282, 1.1743508322426923, 1.1616775278465041, 1.1620984471091473, 1.1475805816491675, 1.1397466460050232, 1.1365449105145484, 1.1430835865901494, 1.125204909022584, 1.1236954117022833, 1.1186456457498823], "accuracy": [0.09034473448991776, 0.11068551242351532, 0.11940298229455948, 0.12429005652666092, 0.1430458277463913, 0.15215955674648285, 0.1554616242647171, 0.1694624274969101, 0.18412363529205322, 0.1900673657655716, 0.20644564926624298, 0.21872936189174652, 0.2343151569366455, 0.24303261935710907, 0.2534671723842621, 0.2604675590991974, 0.27961960434913635, 0.28556331992149353, 0.28899750113487244, 0.2925637364387512, 0.30603620409965515, 0.30524370074272156, 0.32518821954727173, 0.32981112599372864, 0.33218860626220703, 0.34328359365463257, 0.35424646735191345, 0.3623035252094269, 0.3549068868160248, 0.3677189350128174, 0.372209757566452, 0.38607844710350037, 0.387399286031723, 0.39149385690689087, 0.40166425704956055, 0.40641921758651733, 0.39849424362182617, 0.41487252712249756, 0.41104212403297424, 0.4231937527656555, 0.42808082699775696, 0.4383833110332489, 0.43349623680114746, 0.4321753978729248, 0.4434024691581726, 0.4570069909095764, 0.46083739399909973, 0.4550257623195648, 0.46612071990966797, 0.46585655212402344, 0.4651961326599121, 0.4819706678390503, 0.4799894392490387, 0.4788006842136383, 0.48487651348114014, 0.49293357133865356, 0.49808478355407715, 0.5011227130889893, 0.5054814219474792, 0.5081230998039246, 0.5175009965896606, 0.5103685259819031, 0.5231805443763733, 0.5196143388748169, 0.5304450988769531, 0.5281997323036194, 0.5433892607688904, 0.5414080023765564, 0.5394267439842224, 0.5412759184837341, 0.5476158857345581, 0.5477479696273804, 0.5568616986274719, 0.5534275770187378, 0.5544841885566711, 0.5587108731269836, 0.5634658336639404, 0.5584467053413391, 0.5736362338066101, 0.572579562664032, 0.5739004015922546, 0.5757495760917664, 0.5764099955558777, 0.5765420794487, 0.5840708017349243, 0.5830141305923462, 0.5872408151626587, 0.5909391045570374, 0.5889578461647034, 0.5964865684509277, 0.5914674401283264, 0.6004490852355957, 0.6007132530212402, 0.6022982597351074, 0.6057323813438416, 0.602562427520752, 0.5975432395935059, 0.6092986464500427, 0.6091665625572205, 0.6141856908798218], "val_loss": [1.9671282087053572, 1.9631410326276506, 1.9591320582798548, 1.955171721322196, 1.9511657442365373, 1.9471047265189034, 1.9430338995797294, 1.9389076914106096, 1.9346788951328822, 1.9303019387381417, 1.9258229391915458, 1.9211439405168806, 1.9163329260689872, 1.9113567216055733, 1.9061767714364188, 1.9007859911237444, 1.8950715065002441, 1.8891878809247697, 1.882911000932966, 1.8763653891427177, 1.8695401464189803, 1.8622884069170271, 1.8546154158455985, 1.846510750906808, 1.838064534323556, 1.8290695462908064, 1.819472312927246, 1.8094396591186523, 1.7989224706377303, 1.787895338875907, 1.7762560163225447, 1.7639233725411552, 1.75108916418893, 1.7376270975385393, 1.7235073362077986, 1.7086034502301897, 1.6932759625571114, 1.6772142137799944, 1.660489218575614, 1.6431689262390137, 1.6250136920383997, 1.6063155787331718, 1.5871061938149589, 1.567513840539115, 1.5473736013684953, 1.5265680040631975, 1.5055334568023682, 1.4842255115509033, 1.4625556128365653, 1.4407799925122942, 1.41921295438494, 1.3970396518707275, 1.3752960477556502, 1.3536417484283447, 1.3320115634373255, 1.3105075018746513, 1.2892614092145647, 1.2683068002973283, 1.2477259295327323, 1.227594988686698, 1.207780156816755, 1.188735110419137, 1.1699658802577428, 1.152193478175572, 1.134864296231951, 1.1180145059313094, 1.1016616480691093, 1.0857977526528495, 1.0709083080291748, 1.0565197808401925, 1.0424961021968298, 1.029294729232788, 1.016565935952323, 1.0043295110974992, 0.9924168246132987, 0.9810276031494141, 0.970304148537772, 0.9597482681274414, 0.9492343153272357, 0.9395970276423863, 0.9303116117204938, 0.9210314410073417, 0.9122517108917236, 0.9039207867213658, 0.895723683493478, 0.8878594466618129, 0.8804827417646136, 0.8730627298355103, 0.8659535816737584, 0.8591335160391671, 0.8525915827069964, 0.8459669862474714, 0.8398678643362862, 0.8339133262634277, 0.8276918275015694, 0.8220241410391671, 0.81688734463283, 0.8115456785474505, 0.8064957346235003, 0.8015816552298409], "val_accuracy": [0.05833333358168602, 0.09233333170413971, 0.1303333342075348, 0.17399999499320984, 0.2056666612625122, 0.2356666624546051, 0.2693333327770233, 0.29733332991600037, 0.3163333237171173, 0.3346666693687439, 0.3503333330154419, 0.36033332347869873, 0.3726666569709778, 0.3786666691303253, 0.3863333463668823, 0.3956666588783264, 0.40833333134651184, 0.4169999957084656, 0.4259999990463257, 0.4309999942779541, 0.43700000643730164, 0.44433334469795227, 0.4476666748523712, 0.453000009059906, 0.4586666524410248, 0.4623333215713501, 0.47066667675971985, 0.47733333706855774, 0.4833333194255829, 0.4880000054836273, 0.49566665291786194, 0.5019999742507935, 0.5053333044052124, 0.5116666555404663, 0.5149999856948853, 0.5206666588783264, 0.5243333578109741, 0.5260000228881836, 0.5303333401679993, 0.5320000052452087, 0.5379999876022339, 0.5396666526794434, 0.5413333177566528, 0.5423333048820496, 0.5463333129882812, 0.5506666898727417, 0.5503333210945129, 0.5513333082199097, 0.5536666512489319, 0.5580000281333923, 0.5606666803359985, 0.5606666803359985, 0.5619999766349792, 0.565666675567627, 0.5733333230018616, 0.5763333439826965, 0.5799999833106995, 0.5809999704360962, 0.5846666693687439, 0.5896666646003723, 0.593666672706604, 0.5963333249092102, 0.5986666679382324, 0.6039999723434448, 0.609666645526886, 0.6143333315849304, 0.6240000128746033, 0.6326666474342346, 0.6353333592414856, 0.637666642665863, 0.643666684627533, 0.6493333578109741, 0.6526666879653931, 0.6539999842643738, 0.6566666960716248, 0.659333348274231, 0.6586666703224182, 0.6613333225250244, 0.6666666865348816, 0.6663333177566528, 0.6683333516120911, 0.6713333129882812, 0.671999990940094, 0.6736666560173035, 0.6763333082199097, 0.6793333292007446, 0.6803333163261414, 0.6823333501815796, 0.6833333373069763, 0.684333324432373, 0.6869999766349792, 0.6893333196640015, 0.6903333067893982, 0.6899999976158142, 0.6923333406448364, 0.6933333277702332, 0.6940000057220459, 0.6949999928474426, 0.6949999928474426, 0.6956666707992554]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 6, 0, 9, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [0, 2, 3, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [16, 19, 41, 7, 45, 13], [0, 1], [0, 1, 1], [0], [4, 1], [52], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 5, 8, 6, 0, 4, 5, 6, 0, 9], [2, 0, 2, 1, 0, 0, 2, 2], [77, 7, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 12, 8, 4, 1], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.negative(grad))), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.square(tf.math.sqrt(tf.math.divide_no_nan(beta, tf.math.negative(tf.math.pow(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), beta)))))), tf.math.square(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 2, 0, 9, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [0, 2, 1, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [16, 19, 41, 7, 45, 13], [0, 1], [1, 1, 1], [0], [4, 1], [52], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0], [3, 9, 5, 8, 6, 0, 4, 5, 6, 0, 9], [2, 0, 2, 1, 0, 0, 2, 2], [45, 7, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.negative(grad))), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06207898631691933, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 2, 0, 9, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [0, 2, 3, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [14, 12, 22, 41, 42, 68], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [16, 19, 41, 7, 45, 13], [0, 1], [1, 1, 1], [0], [4, 1], [52], [0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 5, 8, 6, 0, 4, 5, 6, 0, 9], [2, 0, 2, 1, 0, 0, 2, 2], [45, 7, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.math.negative(grad)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06207898631691933, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 2, 6, 9, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [0, 2, 3, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 1, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [5, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 19, 41, 7, 45, 13], [0, 1, 0], [0, 1, 1], [7], [4, 1], [52], [1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0], [3, 0, 5, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [19, 7, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 3, 4, 2, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, grad)), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302455210966, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 2, 0, 9, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [2, 2, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [16, 19, 41, 7, 45, 13], [0, 0], [1, 1, 1], [5], [4, 1], [52], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 5, 8, 6, 0, 4, 5, 6, 0, 9], [2, 0, 2, 1, 0, 0, 2, 2], [45, 7, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 12, 8, 4, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.square(tf.math.sqrt(beta))), tf.math.divide_no_nan(tf.math.negative(tf.math.pow(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), beta)), tf.math.square(alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 3, 0, 9, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [0, 2, 3, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [16, 19, 41, 7, 45, 13], [0, 0, 1], [0, 1, 1], [4], [4, 1], [52], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1], [6, 1, 5, 8, 6, 0, 4, 5, 6, 0, 9, 8, 8], [2, 0, 2, 1, 0, 0, 2, 2], [45, 7, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 18, 13, 5, 3], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.square(tf.math.sqrt(tf.math.divide_no_nan(beta, tf.math.negative(tf.math.pow(tf.math.square(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(beta, tf.math.negative(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))))))), tf.math.sqrt(alpha)), tf.math.sqrt(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 2, 0, 9, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [2, 2, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [16, 19, 41, 7, 45, 13], [0, 1, 0], [0, 1, 1], [0], [4, 1], [52], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0], [3, 0, 5, 8, 6, 0, 4, 5, 6, 0, 9], [0, 0, 2, 1, 0, 0, 2, 2], [51, 7, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 4, 2, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.329687528039612, 2.607016795630374, 3.4300580853563116, 4.88726824577915, 6.942161041968188, 9.510646724713524, 12.942907629389694, 16.738056379617277], "accuracy": [0.08942015469074249, 0.09734513610601425, 0.10038304328918457, 0.09694888442754745, 0.09893012791872025, 0.09800554811954498, 0.0940430611371994, 0.10091137140989304], "val_loss": [2.019796780177525, 2.2805041585649763, 2.904650483812605, 3.952029364449637, 5.399078369140625, 7.22349739074707, 9.429164341517858, 12.033335277012416], "val_accuracy": [0.0976666659116745, 0.09966666996479034, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 5, 0, 9, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [3, 2, 3, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [52, 12, 22, 41, 42, 68], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [16, 19, 41, 7, 45, 13], [0, 1], [1, 1, 1], [0], [4, 1], [52], [1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0], [1, 0, 5, 6, 6, 0, 4, 5, 6, 0, 9], [2, 0, 2, 1, 0, 0, 2, 2], [19, 7, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07489103078842163, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 2, 0, 9, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [0, 2, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [16, 19, 41, 7, 45, 13], [0, 1, 0], [0, 1, 1], [4], [4, 1], [52], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0], [3, 0, 5, 8, 6, 0, 4, 5, 6, 0, 9], [2, 0, 2, 1, 0, 0, 2, 2], [45, 7, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07515519857406616, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 2, 0, 9, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [3, 0, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [16, 19, 41, 7, 45, 13], [1, 1, 1], [0, 1, 1], [7], [4, 1], [52], [1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0], [3, 0, 5, 8, 6, 0, 4, 5, 6, 0, 9], [2, 0, 2, 1, 0, 0, 2, 2], [19, 7, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07515519857406616, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 2, 0, 9, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [0, 2, 3, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [16, 19, 41, 7, 45, 13], [1, 1], [0, 1, 1], [0], [4, 1], [52], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 5, 8, 6, 0, 4, 5, 6, 0, 9], [2, 1, 2, 1, 0, 0, 2, 2], [45, 7, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 4, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.negative(tf.math.square(tf.math.sqrt(alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 6, 0, 1, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [3, 2, 0, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [52, 12, 22, 41, 42, 68], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [16, 19, 41, 7, 45, 13], [0, 1, 1], [0, 1, 1], [6], [4, 1], [52], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0], [3, 0, 5, 8, 6, 0, 4, 5, 6, 0, 9], [2, 0, 2, 1, 0, 0, 2, 2], [51, 7, 76, 58]], "fitness": -0.08657142519950867, "mapping_values": [1, 8, 8, 5, 3, 2, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.negative(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.339835863071835, 2.8787162254483647, 2.3882319094592774, 2.097554390818735, 1.9773651004672097, 2.107993352745408, 2.100453966376552, 2.386092626250195, 2.341503186736676, 2.3452752947791566], "accuracy": [0.2566371560096741, 0.1368379294872284, 0.23286223411560059, 0.26443007588386536, 0.3082816004753113, 0.27882710099220276, 0.26284506916999817, 0.1014397069811821, 0.10408136248588562, 0.10130762308835983], "val_loss": [1.768543107169015, 2.324688230242048, 1.5593780790056502, 1.406839370727539, 1.3247310434068953, 1.5665775367191859, 2.0833509308951244, 1.984334945678711, 2.0402890614100864, 1.9980491229466029], "val_accuracy": [0.23066666722297668, 0.38733333349227905, 0.39633333683013916, 0.3916666805744171, 0.45766666531562805, 0.35066667199134827, 0.10233332961797714, 0.09866666793823242, 0.09666666388511658, 0.10133333504199982]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 2, 0, 9, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [0, 3, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [16, 19, 41, 7, 45, 13], [0, 1], [0, 1, 1], [0], [4, 1], [52], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 5, 8, 6, 0, 4, 5, 6, 0, 9], [2, 3, 2, 1, 0, 0, 2, 2], [45, 7, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 6, 6, 4, 2, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 6, 4, 2, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.negative(tf.math.square(tf.math.sqrt(sigma))))", "other_info": {"loss": [2.3026742117988466, 2.3009698669656298, 2.3030065260133754, 2.304305110326013, 2.302695031242285, 2.3031469896374723], "accuracy": [0.08598599582910538, 0.09470347315073013, 0.09259014576673508, 0.08347642421722412, 0.09166556596755981, 0.08994849026203156], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [5, 3, 0, 9, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [0, 2, 3, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [18, 12, 22, 41, 42, 68], [1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 8, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [5, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 19, 41, 7, 45, 13], [1, 1], [0, 1, 1], [5], [4, 1], [52], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 0, 5, 8, 6, 0, 4, 5, 6, 0, 9], [3, 1, 2, 2, 0, 0, 2, 2], [19, 7, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 4, 4, 2, 2, 1, 5, 5, 5, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3026742117988466, 2.3009698669656298, 2.3030065260133754, 2.304305110326013, 2.302695031242285, 2.3031469896374723], "accuracy": [0.08598599582910538, 0.09470347315073013, 0.09259014576673508, 0.08347642421722412, 0.09166556596755981, 0.08994849026203156], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 2, 0, 9, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [3, 0, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [52, 12, 22, 41, 42, 68], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [16, 19, 41, 7, 45, 13], [0, 1, 1], [0, 1, 1], [7], [4, 1], [52], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0], [3, 1, 5, 8, 6, 0, 4, 5, 6, 0, 9], [2, 0, 2, 1, 0, 0, 2, 2], [19, 7, 76, 58]], "fitness": -0.03028571419417858, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 1, 3, 1, 1, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.math.subtract(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3029147325300854, 2.301779619565084, 2.30531530127691, 2.3077907379292983, 2.307181689560043, 2.3087030422292316], "accuracy": [0.08572183549404144, 0.09325055778026581, 0.09100515395402908, 0.08453308790922165, 0.09126931428909302, 0.08915598690509796], "val_loss": [1.9716095924377441, 1.9721360887799944, 1.9727129936218262, 1.9733240263802665, 1.9739485468183244, 1.974588462284633], "val_accuracy": [0.029666665941476822, 0.022333333268761635, 0.020666666328907013, 0.019333332777023315, 0.020999999716877937, 0.02500000037252903]}}]