[{"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 1, 2, 2, 3, 2, 4, 9, 9, 9], [2, 0, 3, 3, 0, 3, 4], [60, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [42]], "fitness": -0.7968571186065674, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 1, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.033754988983244, 1.3864631447038158, 1.0218278670181862, 0.9118062144084109, 0.8329222946827674, 0.830426933829653, 0.727089701634451, 0.734282496756157, 0.7086166532489019, 0.6954186784277944, 0.6540765597945931, 0.6499944033324837, 0.6469745557416211, 0.6358610551118882, 0.5937363409237099, 0.6156697964403749, 0.58531890169284, 0.5670730391781265, 0.553406901331846, 0.5593240465218475, 0.560172819013467, 0.545610583540219, 0.5398489607717257, 0.5261260179197311, 0.523613702682472, 0.5233682163119742, 0.502286581740545], "accuracy": [0.3275656998157501, 0.5061418414115906, 0.6345264911651611, 0.6539427042007446, 0.6906617283821106, 0.6833971738815308, 0.7268524765968323, 0.7285695672035217, 0.7339849472045898, 0.7337207794189453, 0.7512878179550171, 0.7531369924545288, 0.7532690763473511, 0.7541936039924622, 0.7753269076347351, 0.7675340175628662, 0.7848368883132935, 0.7824593782424927, 0.7950072884559631, 0.7889314293861389, 0.7857614755630493, 0.7906485199928284, 0.7977809906005859, 0.8026680946350098, 0.8043851256370544, 0.8064984679222107, 0.8104609847068787], "val_loss": [1.2404983724866594, 0.9405280181339809, 0.7784745693206787, 0.6500251974378314, 0.6360321385519845, 0.5795540469033378, 0.557471581867763, 0.5710649149758475, 0.546518223626273, 0.5350216116224017, 0.5509749480656215, 0.5594963346208844, 0.5147979600088937, 0.4876699447631836, 0.4943753480911255, 0.48849569048200336, 0.46338525840214323, 0.4809425047465733, 0.4515359742300851, 0.49369944844927105, 0.4481224162237985, 0.4488902432577951, 0.4805331400462559, 0.45247420242854525, 0.4397400787898472, 0.45335119111197336, 0.4253556387765067], "val_accuracy": [0.4410000145435333, 0.6309999823570251, 0.6193333268165588, 0.6956666707992554, 0.7289999723434448, 0.7406666874885559, 0.7513333559036255, 0.7326666712760925, 0.7483333349227905, 0.7516666650772095, 0.7356666922569275, 0.7413333058357239, 0.7630000114440918, 0.781333327293396, 0.7763333320617676, 0.7763333320617676, 0.7893333435058594, 0.7836666703224182, 0.8026666641235352, 0.7689999938011169, 0.8016666769981384, 0.8106666803359985, 0.7820000052452087, 0.7923333048820496, 0.809333324432373, 0.8033333420753479, 0.8103333115577698]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [2, 1, 2, 2, 3, 2, 4, 9, 9, 9], [2, 2, 3, 3, 0, 3, 4], [60, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [42]], "fitness": -0.7954285740852356, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.019007630005583, 1.3913307640420574, 1.0401623342661037, 0.9436498892510399, 0.820576765077178, 0.7545286494160467, 0.7191265930100958, 0.7216224079402274, 0.7059048877463381, 0.6804924319055276, 0.6403897517408599, 0.6503136483134374, 0.6306419705261314, 0.6147065055510466, 0.595473309045675, 0.5978673867278048, 0.592858686501938, 0.555135671866647, 0.5587514464755368, 0.5741410032003279, 0.5601570883195288, 0.5356064800887989], "accuracy": [0.33720776438713074, 0.5198785066604614, 0.6230352520942688, 0.639809787273407, 0.6919825673103333, 0.7157574892044067, 0.7211728692054749, 0.7239466309547424, 0.728701651096344, 0.7392682433128357, 0.7553823590278625, 0.752740740776062, 0.7539294958114624, 0.7672698497772217, 0.7734777331352234, 0.7716285586357117, 0.7688548564910889, 0.7854973077774048, 0.7910447716712952, 0.7763835787773132, 0.7845727205276489, 0.8000264167785645], "val_loss": [1.12142436844962, 1.0396053109850203, 0.7441102096012661, 0.6631101880754743, 0.6236840827124459, 0.5925847121647426, 0.5749509675162179, 0.5932284252984183, 0.5507888623646328, 0.552273052079337, 0.5144836562020438, 0.5264450481959752, 0.5025004148483276, 0.4947754144668579, 0.48138175691877094, 0.4916177817753383, 0.4636445386069162, 0.4756223474230085, 0.506386399269104, 0.5004147461482457, 0.46983366353171213, 0.456877555165972], "val_accuracy": [0.5576666593551636, 0.531000018119812, 0.6736666560173035, 0.7116666436195374, 0.7026666402816772, 0.7203333377838135, 0.7279999852180481, 0.7350000143051147, 0.7599999904632568, 0.7649999856948853, 0.7703333497047424, 0.7549999952316284, 0.7736666798591614, 0.7839999794960022, 0.7846666574478149, 0.781000018119812, 0.7979999780654907, 0.793666660785675, 0.762666642665863, 0.7576666474342346, 0.7839999794960022, 0.7946666479110718]}}, {"genotype": [[0], [1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], [2, 1, 2, 2, 3, 2, 4, 9, 9, 9, 5], [2, 0, 3, 3, 0, 3, 4], [60, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [3, 66]], "fitness": -0.6897143125534058, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 11, 5, 5, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))))), tf.math.add(beta, grad)), tf.math.square(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.3026524906727803, 2.3001426779409804, 2.2977617999991216, 2.2924944166934975, 2.289319210773005, 2.280255178655096, 2.275168156249097, 2.264758710265396, 2.2555748122384944, 2.243747358702555, 2.2299230395369856, 2.216553400158331, 2.2000079355881024, 2.1802307575952895, 2.1612105275094784, 2.136415315672643, 2.1087234371987944, 2.074886662533979, 2.037157611729777, 1.9892444596739651, 1.9423503806767068, 1.8934224774856074, 1.8255259411729574, 1.7545307316658536, 1.6916892800144059, 1.6287432762421101, 1.5628756013733442, 1.5175868013137839, 1.4814336494353344, 1.4424560631207974, 1.437103742653148, 1.4032923470493226, 1.3728956244231498, 1.3873015395906292, 1.3817058317161524, 1.3707299348369897, 1.382738860354778, 1.3889865779511412, 1.3712305826612388, 1.3282028071207377, 1.2758988499751638, 1.2462311696382704, 1.1941208156848455, 1.154812986273508, 1.1033153821291184, 1.0654946096726632, 1.0132945696943236, 0.9771059832285109, 0.9479830771972002, 0.9343535184797247, 0.9336241179642472, 0.922275185648004, 0.9316391038809627, 0.9230682761315515], "accuracy": [0.09496764093637466, 0.09642054885625839, 0.10394927859306335, 0.11345925182104111, 0.1274600476026535, 0.1504424810409546, 0.15968827903270721, 0.1966715157032013, 0.21740853786468506, 0.24659886956214905, 0.2724871337413788, 0.2922995686531067, 0.3156782388687134, 0.3409060835838318, 0.34605732560157776, 0.36203935742378235, 0.36903974413871765, 0.38343679904937744, 0.39004093408584595, 0.40866464376449585, 0.41104212403297424, 0.4189670979976654, 0.43085458874702454, 0.445779949426651, 0.4484215974807739, 0.46268656849861145, 0.47285696864128113, 0.4834235906600952, 0.4931977391242981, 0.5061418414115906, 0.5052172541618347, 0.5194822549819946, 0.5304450988769531, 0.5254259705543518, 0.5386342406272888, 0.5424646735191345, 0.5453705191612244, 0.5477479696273804, 0.5597675442695618, 0.5758816599845886, 0.5807687044143677, 0.5925241112709045, 0.6071853041648865, 0.6232994198799133, 0.6277902722358704, 0.6365077495574951, 0.6448289752006531, 0.6530181169509888, 0.6639809608459473, 0.6476026773452759, 0.6530181169509888, 0.6571126580238342, 0.6436402201652527, 0.6563201546669006], "val_loss": [1.9704608236040388, 1.968447276524135, 1.9651718820844377, 1.9606531688145228, 1.9549400465829032, 1.9480905532836914, 1.9401750564575195, 1.9312267303466797, 1.9212651252746582, 1.9102347237723214, 1.8980180195399694, 1.8842919213431222, 1.868629319327218, 1.8505027634756905, 1.8293591908046178, 1.804652214050293, 1.7757414409092493, 1.7419219017028809, 1.7024358681270055, 1.6566110338483537, 1.6040009089878626, 1.5445262704576765, 1.4787001269204276, 1.4076800005776542, 1.3335139751434326, 1.259103604725429, 1.1873162133353097, 1.1206780501774378, 1.060601030077253, 1.0073420320238387, 0.9599859714508057, 0.917799540928432, 0.8806078944887433, 0.8491219963346209, 0.8261325870241437, 0.8138878856386457, 0.8082842486245292, 0.7985049486160278, 0.7779296806880406, 0.7549790143966675, 0.7425888776779175, 0.7423331396920341, 0.744618262563433, 0.7408323458262852, 0.7268028770174298, 0.706520676612854, 0.685611435345241, 0.6720727341515678, 0.6713080746786935, 0.680053881236485, 0.6923518521445138, 0.7037685087748936, 0.7127448320388794, 0.7195614406040737], "val_accuracy": [0.04100000113248825, 0.05233333259820938, 0.07566666603088379, 0.11666666716337204, 0.17933332920074463, 0.23499999940395355, 0.29733332991600037, 0.3333333432674408, 0.3540000021457672, 0.367333322763443, 0.3840000033378601, 0.4000000059604645, 0.40700000524520874, 0.41600000858306885, 0.4233333468437195, 0.4359999895095825, 0.4519999921321869, 0.4650000035762787, 0.4729999899864197, 0.4819999933242798, 0.492333322763443, 0.5053333044052124, 0.5183333158493042, 0.5336666703224182, 0.54666668176651, 0.562333345413208, 0.5706666707992554, 0.5860000252723694, 0.606333315372467, 0.6256666779518127, 0.6439999938011169, 0.6613333225250244, 0.6703333258628845, 0.6746666431427002, 0.6753333210945129, 0.67166668176651, 0.6616666913032532, 0.6600000262260437, 0.6729999780654907, 0.6913333535194397, 0.6963333487510681, 0.6976666450500488, 0.7023333311080933, 0.7059999704360962, 0.7093333601951599, 0.7099999785423279, 0.7123333215713501, 0.7149999737739563, 0.7210000157356262, 0.7073333263397217, 0.6996666789054871, 0.6846666932106018, 0.6776666641235352, 0.6830000281333923]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 1, 6, 2, 3, 2, 4, 9, 9, 9], [2, 5, 3, 3, 0, 3, 4], [60, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [5, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [3, 1, 2, 2], [42]], "fitness": -0.20885714888572693, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 0, 1, 1, 1, 0, 1, 3, 1, 2, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, grad))), tf.math.add(beta, grad)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, alpha)", "other_info": {"loss": [2.339050051495541, 2.980142675103009, 2.271758145722951, 2.710016582273867, 2.304118816296123, 2.2908406418548553], "accuracy": [0.19284109771251678, 0.18161405622959137, 0.1422533392906189, 0.1294412910938263, 0.09826971590518951, 0.1298375427722931], "val_loss": [1.8420628138950892, 1.9782590184892928, 1.9380559921264648, 1.9749888692583357, 1.9732614244733537, 1.7559443882533483], "val_accuracy": [0.3396666646003723, 0.10233332961797714, 0.18966667354106903, 0.10133333504199982, 0.10133333504199982, 0.30266666412353516]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 3, 1, 4, 2, 0, 4, 9, 9, 9], [2, 0, 4, 3, 0, 3, 4], [80, 3, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [70], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [3, 66]], "fitness": -0.1599999964237213, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 1, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.30278366324672, 2.3014530631702623, 2.301648384166542, 2.3002833430131884, 2.3023694425667784, 2.2996292282104998, 2.302563592632134, 2.3008835728551733, 2.3015684535112584, 2.3015790695779437, 2.300206831653813, 2.3009400261926958, 2.300496456094343, 2.299510559244021, 2.3012680481485073, 2.2999484858665924, 2.3003251815216967, 2.299645077141442, 2.300330868014224, 2.2989857376936547, 2.2987826309498858, 2.3000477741517567, 2.2988114786847174, 2.296441643324038, 2.298438285493328, 2.2986353292378294, 2.2978647836935346, 2.2991219455886274, 2.2986288558474746, 2.2975184867694125, 2.298758370103837, 2.2975266360178472, 2.2969982699002602, 2.2959575374065655, 2.297655696551467, 2.2968833346991033, 2.2972182882082475, 2.2965536086062683, 2.296321107632354, 2.2961580333236093, 2.2959890952908273, 2.297306002217702, 2.2961302045439966, 2.294865400563488, 2.294536261935795, 2.2946123706193853, 2.2955947764687266, 2.294952902827265, 2.2942858166808637, 2.2934372499713085, 2.293575237329846, 2.2947008048286683, 2.2935666032140407, 2.292686808394277, 2.2943477544644724, 2.2934278831852266, 2.2930247532047567, 2.2929569520435122, 2.2945030759023624, 2.292846697542913, 2.2923578739229242, 2.2928772338267094, 2.2914534654631167, 2.291835935470718, 2.2915945197014587, 2.290551097590485, 2.2914359206458, 2.291122813187633, 2.2914564620549447, 2.2900198297635392, 2.292269599656576, 2.2911346345734462, 2.2911952090474355, 2.289243144980196, 2.287505881566854, 2.2913642896086137, 2.2882236994772445, 2.2907960697675915, 2.289875567030236, 2.2892620031938513, 2.289967641130084, 2.287849312334989, 2.28860504594792, 2.2884546045173098, 2.2878575344536647, 2.287620833363783, 2.289269332478878, 2.286930116317874, 2.2877503080044312, 2.2863120378016353, 2.2868453689837707, 2.2868885705184785, 2.2861423942753354, 2.288446961329708, 2.285654544231993, 2.286066190457347, 2.286120429314233, 2.287496846444288, 2.2864628557704774, 2.287175357995205], "accuracy": [0.0948355570435524, 0.09272222965955734, 0.09457138925790787, 0.09285431355237961, 0.09272222965955734, 0.10447761416435242, 0.08757099509239197, 0.09760929644107819, 0.09391097724437714, 0.09338264167308807, 0.09972262382507324, 0.09060890227556229, 0.09457138925790787, 0.09906221181154251, 0.09206181764602661, 0.10011887550354004, 0.09906221181154251, 0.09813763201236725, 0.09628847241401672, 0.09919429570436478, 0.09879804402589798, 0.09655263274908066, 0.09708096832036972, 0.10157178342342377, 0.09774138033390045, 0.10315678268671036, 0.10355303436517715, 0.09879804402589798, 0.09628847241401672, 0.10210011899471283, 0.10447761416435242, 0.10830801725387573, 0.10276053100824356, 0.11240258812904358, 0.10117553919553757, 0.10368511080741882, 0.10249637067317963, 0.09853387624025345, 0.10659094154834747, 0.10896842926740646, 0.10500594228506088, 0.10302469879388809, 0.1072513535618782, 0.10434553027153015, 0.11002509295940399, 0.1080438494682312, 0.11306300014257431, 0.11002509295940399, 0.11094967275857925, 0.109232597053051, 0.11438383162021637, 0.11227050423622131, 0.11306300014257431, 0.11319508403539658, 0.11359133571386337, 0.10579843819141388, 0.10777968913316727, 0.11319508403539658, 0.11596883088350296, 0.11517632752656937, 0.10976093262434006, 0.11795007437467575, 0.11742173880338669, 0.12138422578573227, 0.11940298229455948, 0.12495046854019165, 0.11953506618738174, 0.11610091477632523, 0.11610091477632523, 0.11927089840173721, 0.11332716792821884, 0.11821424216032028, 0.11874257028102875, 0.12310130894184113, 0.12693171203136444, 0.12402588874101639, 0.12653546035289764, 0.1200634017586708, 0.12362963706254959, 0.12917712330818176, 0.1228371411561966, 0.12970545887947083, 0.1212521493434906, 0.12970545887947083, 0.1254788041114807, 0.12679962813854218, 0.12362963706254959, 0.1294412910938263, 0.13089419901371002, 0.12930920720100403, 0.12772421538829803, 0.1274600476026535, 0.12996962666511536, 0.12455421686172485, 0.13472460210323334, 0.1332716941833496, 0.13551710546016693, 0.13010171055793762, 0.13591335713863373, 0.13393211364746094], "val_loss": [1.9710266930716378, 1.970865113394601, 1.9707024438040597, 1.970541068485805, 1.97037901197161, 1.9702189990452357, 1.9700557163783483, 1.9698948860168457, 1.9697348049708776, 1.9695726803370885, 1.969412190573556, 1.9692510877336775, 1.9690891674586706, 1.9689269747052873, 1.9687657356262207, 1.9686061995370048, 1.9684465272086007, 1.9682858330862862, 1.968125683920724, 1.9679649216788155, 1.9678049087524414, 1.9676457813807897, 1.9674878801618303, 1.9673290933881487, 1.9671688761029924, 1.9670100212097168, 1.9668503488813127, 1.9666918345860072, 1.9665344783238001, 1.9663775307791573, 1.9662171772548132, 1.9660586629595076, 1.9658996718270438, 1.9657419068472726, 1.9655840056283134, 1.9654250144958496, 1.965264116014753, 1.965104034968785, 1.964946678706578, 1.9647883006504603, 1.9646282877240862, 1.9644690922328405, 1.9643121446881975, 1.9641517911638533, 1.9639925956726074, 1.9638331277029855, 1.9636740003313338, 1.9635161672319685, 1.9633572442190987, 1.9631991386413574, 1.9630428041730608, 1.9628849029541016, 1.9627279554094588, 1.9625695092337472, 1.9624123573303223, 1.9622552735464913, 1.962094988141741, 1.9619357926504952, 1.9617793900626046, 1.961620671408517, 1.9614625658307756, 1.9613025529044015, 1.961143629891532, 1.9609853880746024, 1.960829598563058, 1.9606710161481584, 1.9605116844177246, 1.9603539875575475, 1.9601954051426478, 1.9600379807608468, 1.9598803520202637, 1.959721905844552, 1.9595643452235632, 1.9594056265694755, 1.9592461585998535, 1.9590887342180525, 1.958932535988944, 1.9587744985307967, 1.958616052355085, 1.9584593091692244, 1.9583022253853934, 1.9581441198076521, 1.957986286708287, 1.9578300203595842, 1.9576731409345354, 1.9575130598885673, 1.9573558398655482, 1.957197598048619, 1.957040514264788, 1.9568827492850167, 1.9567249161856515, 1.956568377358573, 1.9564090456281389, 1.9562510762895857, 1.9560932431902205, 1.955935069492885, 1.9557759421212333, 1.9556194714137487, 1.9554615020751953, 1.9553022384643555], "val_accuracy": [0.03733333200216293, 0.03866666555404663, 0.03933333232998848, 0.03999999910593033, 0.041333332657814026, 0.041333332657814026, 0.041999999433755875, 0.04266666620969772, 0.043666668236255646, 0.043666668236255646, 0.04399999976158142, 0.044333335012197495, 0.04633333161473274, 0.04766666516661644, 0.04866666719317436, 0.05000000074505806, 0.05133333429694176, 0.052666667848825455, 0.05366666615009308, 0.05400000140070915, 0.054666668176651, 0.054999999701976776, 0.056333333253860474, 0.0573333315551281, 0.05833333358168602, 0.058666665107011795, 0.05900000035762787, 0.061666667461395264, 0.06266666948795319, 0.06466666609048843, 0.06533333659172058, 0.06599999964237213, 0.06733333319425583, 0.06933332979679108, 0.07199999690055847, 0.07266666740179062, 0.07333333045244217, 0.07566666603088379, 0.07733333110809326, 0.07766667008399963, 0.0793333351612091, 0.08266666531562805, 0.08366666734218597, 0.08566666394472122, 0.08666666597127914, 0.08766666799783707, 0.08833333104848862, 0.08900000154972076, 0.09066666662693024, 0.09133332967758179, 0.09333333373069763, 0.0949999988079071, 0.09533333033323288, 0.09799999743700027, 0.10000000149011612, 0.10133333504199982, 0.10233332961797714, 0.10433333367109299, 0.10499999672174454, 0.10566666722297668, 0.10700000077486038, 0.10833333432674408, 0.1106666699051857, 0.11166666448116302, 0.1120000034570694, 0.11433333158493042, 0.11633333563804626, 0.11733333021402359, 0.11900000274181366, 0.12066666781902313, 0.12200000137090683, 0.12399999797344208, 0.12466666847467422, 0.12600000202655792, 0.12700000405311584, 0.12933333218097687, 0.1313333362340927, 0.13199999928474426, 0.13333334028720856, 0.13600000739097595, 0.13766667246818542, 0.13866665959358215, 0.14100000262260437, 0.14233332872390747, 0.14666666090488434, 0.1469999998807907, 0.1483333259820938, 0.15000000596046448, 0.1509999930858612, 0.15166667103767395, 0.15299999713897705, 0.15533334016799927, 0.15733332931995392, 0.16066665947437286, 0.16200000047683716, 0.1626666635274887, 0.16500000655651093, 0.16599999368190765, 0.16866666078567505, 0.1706666648387909]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 3, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [2, 2, 2, 4, 9, 0, 4, 9, 9, 9], [2, 0, 0, 3, 0, 3, 4], [60, 3, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [3, 66]], "fitness": -0.1599999964237213, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 3, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(beta, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.30278366324672, 2.3014530631702623, 2.301648384166542, 2.3002833430131884, 2.3023694425667784, 2.2996292282104998, 2.302563592632134, 2.3008835728551733, 2.3015684535112584, 2.3015790380869148, 2.3002068001627842, 2.3009400261926958, 2.300496487585372, 2.299510559244021, 2.3012680166574784, 2.2999485173576213, 2.3003251815216967, 2.2996450591600643, 2.30033096248731, 2.2989857376936547, 2.298782599458857, 2.3000477741517567, 2.2988114471936885, 2.296441643324038, 2.298438254002299, 2.2986353292378294, 2.2978648646569697, 2.2991219140975985, 2.2986288558474746, 2.2975185182604414, 2.298758401594866, 2.2975266360178472, 2.296998301391289, 2.295957505915537, 2.297655665060438, 2.2968833661901322, 2.2972182882082475, 2.2965536086062683, 2.296321139123383, 2.296158064814638, 2.295989126781856, 2.297306002217702, 2.2961302045439966, 2.294865400563488, 2.294536293426824, 2.2946123706193853, 2.2955948394507844, 2.294952902827265, 2.2942857986994865, 2.2934371869892507, 2.293575237329846, 2.29470081833832, 2.2935666347050696, 2.2926867769032486, 2.294347722973444, 2.2934278831852266, 2.2930247352233795, 2.2929569520435122, 2.2945030444113335, 2.292846697542913, 2.2923578424318953, 2.2928772338267094, 2.2914534969541456, 2.291835903979689, 2.2915944882104298, 2.290551097590485, 2.291435952136829, 2.291122813187633, 2.2914564935459736, 2.2900197982725103, 2.2922695366745187, 2.2911346345734462, 2.2911952720294932, 2.289243144980196, 2.2875059760399403, 2.2913642266265564, 2.2882236994772445, 2.2907960697675915, 2.289875567030236, 2.2892620031938513, 2.289967641130084, 2.287849312334989, 2.28860504594792, 2.288454698990396, 2.287857565944693, 2.2876208018727544, 2.2892693954609356, 2.286930084826845, 2.2877503080044312, 2.2863120378016353, 2.2868453689837707, 2.2868885705184785, 2.2861424257663643, 2.288446961329708, 2.2856545757230213, 2.2860661589663183, 2.286120397823204, 2.28749678346223, 2.2864628242794485, 2.2871753265041765], "accuracy": [0.0948355570435524, 0.09272222965955734, 0.09457138925790787, 0.09285431355237961, 0.09272222965955734, 0.10447761416435242, 0.08757099509239197, 0.09760929644107819, 0.09391097724437714, 0.09338264167308807, 0.09972262382507324, 0.09060890227556229, 0.09457138925790787, 0.09906221181154251, 0.09206181764602661, 0.10011887550354004, 0.09906221181154251, 0.09813763201236725, 0.09628847241401672, 0.09919429570436478, 0.09879804402589798, 0.09655263274908066, 0.09708096832036972, 0.10157178342342377, 0.09774138033390045, 0.10315678268671036, 0.10355303436517715, 0.09879804402589798, 0.09628847241401672, 0.10210011899471283, 0.10447761416435242, 0.10830801725387573, 0.10276053100824356, 0.11240258812904358, 0.10117553919553757, 0.10368511080741882, 0.10249637067317963, 0.09853387624025345, 0.10659094154834747, 0.10896842926740646, 0.10500594228506088, 0.10302469879388809, 0.1072513535618782, 0.10434553027153015, 0.11002509295940399, 0.1080438494682312, 0.11306300014257431, 0.11002509295940399, 0.11094967275857925, 0.109232597053051, 0.11438383162021637, 0.11227050423622131, 0.11306300014257431, 0.11319508403539658, 0.11359133571386337, 0.10579843819141388, 0.10777968913316727, 0.11319508403539658, 0.11596883088350296, 0.11517632752656937, 0.10976093262434006, 0.11795007437467575, 0.11742173880338669, 0.12138422578573227, 0.11940298229455948, 0.12495046854019165, 0.11953506618738174, 0.11610091477632523, 0.11610091477632523, 0.11927089840173721, 0.11332716792821884, 0.11821424216032028, 0.11874257028102875, 0.12310130894184113, 0.12693171203136444, 0.12402588874101639, 0.12653546035289764, 0.1200634017586708, 0.12362963706254959, 0.12917712330818176, 0.1228371411561966, 0.12970545887947083, 0.1212521493434906, 0.12970545887947083, 0.1254788041114807, 0.12679962813854218, 0.12362963706254959, 0.1294412910938263, 0.13089419901371002, 0.12930920720100403, 0.12772421538829803, 0.1274600476026535, 0.12996962666511536, 0.12455421686172485, 0.13472460210323334, 0.1332716941833496, 0.13551710546016693, 0.13010171055793762, 0.13591335713863373, 0.13393211364746094], "val_loss": [1.9710266930716378, 1.970865113394601, 1.9707024438040597, 1.970541068485805, 1.97037901197161, 1.9702189990452357, 1.9700556482587541, 1.9698948860168457, 1.9697348730904716, 1.9695726803370885, 1.969412122453962, 1.9692510877336775, 1.9690891674586706, 1.9689269747052873, 1.9687657356262207, 1.9686061314174108, 1.9684465272086007, 1.9682858330862862, 1.968125683920724, 1.9679648535592216, 1.9678049087524414, 1.9676457813807897, 1.9674878801618303, 1.9673290933881487, 1.9671688761029924, 1.9670100212097168, 1.9668503488813127, 1.9666918345860072, 1.9665344783238001, 1.9663775307791573, 1.9662171772548132, 1.9660586629595076, 1.9658996718270438, 1.9657419068472726, 1.9655839375087194, 1.9654250144958496, 1.965264116014753, 1.965104034968785, 1.964946678706578, 1.9647882325308663, 1.9646284239632743, 1.9644691603524345, 1.9643121446881975, 1.9641517911638533, 1.9639925275530135, 1.9638331277029855, 1.9636740003313338, 1.9635161672319685, 1.9633572442190987, 1.9631991386413574, 1.9630428041730608, 1.9628849029541016, 1.9627279554094588, 1.9625695092337472, 1.9624122892107283, 1.9622553416660853, 1.962094988141741, 1.9619357926504952, 1.9617793900626046, 1.961620671408517, 1.9614626339503698, 1.9613025529044015, 1.961143629891532, 1.9609854561941964, 1.960829598563058, 1.9606710161481584, 1.9605116844177246, 1.9603539875575475, 1.9601954051426478, 1.9600379126412528, 1.9598803520202637, 1.959721905844552, 1.959564277103969, 1.9594056265694755, 1.9592461585998535, 1.9590887342180525, 1.958932535988944, 1.9587744985307967, 1.958615984235491, 1.9584593091692244, 1.9583022253853934, 1.9581441198076521, 1.957986286708287, 1.9578300203595842, 1.9576732090541296, 1.9575130598885673, 1.9573559079851424, 1.957197598048619, 1.957040514264788, 1.9568826811654227, 1.9567247799464635, 1.956568377358573, 1.9564090456281389, 1.9562510762895857, 1.9560933113098145, 1.955935069492885, 1.9557759421212333, 1.9556194032941545, 1.9554615020751953, 1.9553022384643555], "val_accuracy": [0.03733333200216293, 0.03866666555404663, 0.03933333232998848, 0.03999999910593033, 0.041333332657814026, 0.041333332657814026, 0.041999999433755875, 0.04266666620969772, 0.043666668236255646, 0.043666668236255646, 0.04399999976158142, 0.044333335012197495, 0.04633333161473274, 0.04766666516661644, 0.04866666719317436, 0.05000000074505806, 0.05133333429694176, 0.052666667848825455, 0.05366666615009308, 0.05400000140070915, 0.054666668176651, 0.054999999701976776, 0.056333333253860474, 0.0573333315551281, 0.05833333358168602, 0.058666665107011795, 0.05900000035762787, 0.061666667461395264, 0.06266666948795319, 0.06466666609048843, 0.06533333659172058, 0.06599999964237213, 0.06733333319425583, 0.06933332979679108, 0.07199999690055847, 0.07266666740179062, 0.07333333045244217, 0.07566666603088379, 0.07733333110809326, 0.07766667008399963, 0.0793333351612091, 0.08266666531562805, 0.08366666734218597, 0.08566666394472122, 0.08666666597127914, 0.08766666799783707, 0.08833333104848862, 0.08900000154972076, 0.09066666662693024, 0.09133332967758179, 0.09333333373069763, 0.0949999988079071, 0.09533333033323288, 0.09799999743700027, 0.10000000149011612, 0.10133333504199982, 0.10233332961797714, 0.10433333367109299, 0.10499999672174454, 0.10566666722297668, 0.10700000077486038, 0.10833333432674408, 0.1106666699051857, 0.11166666448116302, 0.1120000034570694, 0.11433333158493042, 0.11633333563804626, 0.11733333021402359, 0.11900000274181366, 0.12066666781902313, 0.12200000137090683, 0.12399999797344208, 0.12466666847467422, 0.12600000202655792, 0.12700000405311584, 0.12933333218097687, 0.1313333362340927, 0.13199999928474426, 0.13333334028720856, 0.13600000739097595, 0.13766667246818542, 0.13866665959358215, 0.14100000262260437, 0.14233332872390747, 0.14666666090488434, 0.1469999998807907, 0.1483333259820938, 0.15000000596046448, 0.1509999930858612, 0.15166667103767395, 0.15299999713897705, 0.15533334016799927, 0.15733332931995392, 0.16066665947437286, 0.16200000047683716, 0.1626666635274887, 0.16500000655651093, 0.16599999368190765, 0.16866666078567505, 0.1706666648387909]}}, {"genotype": [[0], [0, 1, 0], [0, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 3, 0, 1, 1, 1, 1, 2, 1, 2, 2], [97, 80, 61], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1], [2, 5, 1, 4, 2, 0, 4, 9, 9, 9], [2, 3, 2, 4, 0, 3, 4], [60, 3, 2, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [70], [0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [3, 66]], "fitness": -0.11257142573595047, "mapping_values": [1, 3, 3, 2, 1, 1, 13, 13, 9, 4, 2, 1, 1, 0, 1, 0, 3, 2, 1, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, beta)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(beta, tf.math.negative(tf.math.pow(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))))), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3012123064452537, 2.3024802148428734, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09694888442754745, 0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9735471861703056, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.11400000005960464, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0], [0, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 3, 0, 1, 1, 1, 1, 2, 1, 2, 2], [97, 80, 61], [0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [2, 2, 2, 4, 9, 0, 4, 9, 9, 9], [2, 0, 3, 3, 0, 3, 4], [60, 3, 20, 7, 45, 13], [0, 1, 1], [0, 1, 1], [9], [0, 1], [79], [0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [3, 66]], "fitness": -0.11257142573595047, "mapping_values": [1, 3, 3, 2, 1, 1, 10, 10, 6, 4, 2, 1, 1, 1, 0, 1, 3, 2, 1, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, grad)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3012123064452537, 2.3024802148428734, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09694888442754745, 0.10157178342342377, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9735471861703056, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.11400000005960464, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 1, 1], [0, 0, 0, 1, 1], [4, 9, 9, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 3, 0, 1, 1, 1, 1, 2, 1, 2, 2], [9, 80, 61], [1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], [0, 1, 2, 6, 2, 0, 4, 9, 9, 9], [0, 0, 3, 4, 0, 3, 4], [60, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [0, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [83, 76]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 3, 0, 2, 8, 8, 4, 4, 2, 1, 1, 0, 1, 1, 3, 1, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [1240894566.4432476, 22953545484.54471, 110046159775.29414, 301333949783.94824, 643396567139.5461, 1193192196592.9192], "accuracy": [0.09879804402589798, 0.10236428678035736, 0.10593052208423615, 0.10196803510189056, 0.1018359512090683, 0.10077928751707077], "val_loss": [4635683693.714286, 37074305024.0, 125113092388.57143, 296550999186.2857, 579188537051.4286, 1000815685046.8572], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 1], [4, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [97, 80, 61], [1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0], [2, 1, 2, 2, 3, 9, 4, 9, 9, 9], [0, 3, 3, 2, 0, 3, 4], [60, 3, 20, 7, 45, 13], [0], [1, 1, 1], [3], [1, 1], [79], [0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [28, 66]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 13, 13, 8, 5, 4, 1, 1, 0, 1, 0, 3, 2, 1, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.math.add(tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3024852219164536, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 3, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [5, 5, 2, 4, 2, 0, 4, 9, 9, 9], [2, 0, 3, 3, 0, 3, 4], [60, 3, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 0, 0, 0, 1, 0, 0, 1, 1], [7, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [42, 35]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 0, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.square(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3024852219164536, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1], [0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [6, 2, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 3, 0, 1, 1, 1, 1, 2, 1, 2, 2], [80, 80, 61], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [3, 0, 1, 3, 2, 0, 4, 9, 9, 9], [2, 4, 3, 4, 0, 3, 4], [60, 3, 20, 7, 45, 13], [1, 0, 1], [0, 1, 1], [6], [0, 1], [70], [0, 0, 1, 0, 1, 0, 0, 1, 1], [2, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [3, 66]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 9, 7, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 2, 1, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(grad)), tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.subtract(tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.sqrt(alpha)))))), alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3024852219164536, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [2, 1, 2, 2, 3, 2, 4, 9, 9, 9], [1, 0, 0, 4, 0, 3, 4, 3], [60, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [2, 1], [79], [0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 9, 9, 8, 4, 7, 4, 5, 6], [1, 3, 2, 2], [42, 10]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 4, 1, 1, 0, 1, 0, 2, 2, 0, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(grad, tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.pow(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [7370484.599411058, 136015987.9202219, 651640602.7631752, 1783796507.1520274, 3807992963.3306036, 7061210516.406287], "accuracy": [0.09879804402589798, 0.10236428678035736, 0.10593052208423615, 0.10196803510189056, 0.10170386731624603, 0.10077928751707077], "val_loss": [27495209.714285713, 219591584.0, 740711131.4285715, 1755273618.2857144, 3427701467.428571, 5922414592.0], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 3, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 1, 2, 2, 3, 2, 4, 9, 9, 9], [2, 0, 3, 3, 0, 3, 4], [60, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 1, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [42, 68]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3024852219164536, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [0, 0, 1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [97, 80, 61], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1], [2, 1, 2, 2, 3, 2, 4, 9, 9, 9], [2, 0, 3, 3, 0, 3, 4], [3, 56, 20, 7, 45, 13], [0], [1, 1, 1], [3], [1, 1], [39], [1, 1, 1, 0, 1, 0, 0, 1, 1], [7, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [80, 66]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3024852219164536, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1, 1, 0], [0, 1, 0, 1, 1], [3, 9, 1, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1], [2, 1, 2, 2, 3, 2, 4, 9, 9, 9], [0, 0, 3, 4, 0, 3, 4], [60, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [0, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [3, 76]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.318546018769256, 2.4511821952084696, 2.898536521020803, 3.6672167043644346, 4.827893279625708, 6.35709324029175, 8.238463475861334, 10.49066190300144], "accuracy": [0.08942015469074249, 0.09972262382507324, 0.10368511080741882, 0.09932637959718704, 0.10289261490106583, 0.10077928751707077, 0.10249637067317963, 0.10460969805717468], "val_loss": [1.9961419105529785, 2.125079427446638, 2.4347848892211914, 2.9833109038216725, 3.786445072719029, 4.8310377938406805, 6.10334232875279, 7.600248609270368], "val_accuracy": [0.0949999988079071, 0.09966666996479034, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 1, 6, 2, 3, 2, 4, 9, 9, 9], [2, 5, 3, 3, 0, 3, 4], [60, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [6, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [4, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [42, 71]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 2, 1, 0, 0, 0, 0, 3, 2, 1, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)))), tf.math.multiply(tf.math.add(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3024852219164536, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 3, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [5, 5, 2, 4, 2, 0, 4, 9, 9, 9], [2, 0, 3, 4, 0, 3, 4], [60, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [1, 1], [79], [0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 2, 2, 2], [42, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 2, 1, 2], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3024852219164536, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10077928751707077, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1], [0, 1, 1], [6, 0, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [97, 80, 61], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1], [2, 1, 2, 2, 3, 9, 4, 9, 9, 9], [0, 3, 3, 2, 0, 3, 4], [3, 56, 20, 7, 45, 13], [0, 0, 1], [0, 1, 1], [3], [1, 1], [39], [0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [1, 3, 2, 2], [3, 66]], "fitness": -0.03742857277393341, "mapping_values": [1, 3, 3, 1, 2, 1, 13, 13, 8, 5, 4, 3, 2, 1, 1, 0, 3, 2, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), grad), tf.math.add(beta, tf.math.add(beta, tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.302925550422774, 2.301942604313343, 2.3024882845764605, 2.301471520723558, 2.303908926195803, 2.3015044547657784], "accuracy": [0.09470347315073013, 0.09219389408826828, 0.09351472556591034, 0.08981640636920929, 0.08955223858356476, 0.1006472036242485], "val_loss": [1.971349103110177, 1.971510750906808, 1.9716736248561315, 1.9718354770115443, 1.9719982147216797, 1.9721589088439941], "val_accuracy": [0.03533333167433739, 0.03466666489839554, 0.03400000184774399, 0.03333333507180214, 0.032999999821186066, 0.03200000151991844]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 3, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1], [2, 2, 2, 4, 9, 7, 4, 9, 0, 9], [5, 0, 3, 3, 0, 3, 4], [60, 3, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [0, 66]], "fitness": -0.03742857277393341, "mapping_values": [1, 1, 1, 0, 1, 1, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad)))), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.3028932532551205, 2.3018313142932434, 2.302297336581896, 2.3012012643994217, 2.303558486154476, 2.3010776142449885], "accuracy": [0.09470347315073013, 0.09219389408826828, 0.09377889335155487, 0.09074098616838455, 0.09008057415485382, 0.10170386731624603], "val_loss": [1.971275874546596, 1.9713639531816756, 1.9714527811322893, 1.971541064126151, 1.9716296195983887, 1.971717289515904], "val_accuracy": [0.035999998450279236, 0.03533333167433739, 0.03500000014901161, 0.03433333337306976, 0.03400000184774399, 0.03400000184774399]}}]