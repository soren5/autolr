[{"genotype": [[0], [0, 1, 1], [0, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 2, 1, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [43, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8251428604125977, "mapping_values": [1, 2, 2, 1, 1, 0, 9, 9, 7, 2, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.math.negative(tf.math.add(tf.math.add(beta, grad), tf.math.subtract(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.979650546090163, 1.5782791064667616, 1.0979083884488228, 0.8713468152927827, 0.8319817747280598, 0.7904173646384478, 0.7371461194944955, 0.734601174323881, 0.6765014241793845, 0.6748030110357176, 0.6621786940524512, 0.6377797294538475, 0.6242738726463112, 0.6509355337014209, 0.5889293228504507, 0.5676095083231908, 0.5745566379455543, 0.5628735885612559, 0.5519782562911503, 0.5397827769346115, 0.541100630584158, 0.5114956429338159, 0.5060621019855797, 0.5025463877037893, 0.4935771017388865, 0.5071964097052927, 0.4729842156537882, 0.4825239646719778, 0.47595336075550876, 0.4555282457795015, 0.44775778543695627, 0.4380647927235304, 0.4408192012201699, 0.43452468420756635, 0.4271766109205807, 0.42119479667099635], "accuracy": [0.33747193217277527, 0.4765552878379822, 0.5976753234863281, 0.6730946898460388, 0.6841896772384644, 0.7037379741668701, 0.7220974564552307, 0.7153612375259399, 0.7403249144554138, 0.7407211661338806, 0.7430986762046814, 0.7540615797042847, 0.7633073329925537, 0.7526086568832397, 0.7746664881706238, 0.7836481332778931, 0.7795535326004028, 0.7884030938148499, 0.7898560166358948, 0.7924976944923401, 0.791441023349762, 0.8039889335632324, 0.8088759779930115, 0.8084797263145447, 0.813498854637146, 0.8083476424217224, 0.8191784620285034, 0.8228767514228821, 0.8141592741012573, 0.8293488025665283, 0.833179235458374, 0.8376700282096863, 0.8354246616363525, 0.8393871188163757, 0.8418967127799988, 0.8444063067436218], "val_loss": [1.6535852636609758, 1.1225096157618932, 0.766320926802499, 0.7111624649592808, 0.6961997747421265, 0.594616140638079, 0.5748487029756818, 0.5804846627371651, 0.559507029397147, 0.548392619405474, 0.5660008021763393, 0.5038432904652187, 0.5498701333999634, 0.48065195764814106, 0.46958393710000174, 0.4743216889245169, 0.4760642392294748, 0.46437629631587435, 0.46813295568738666, 0.45225695201328825, 0.474455680165972, 0.4584555115018572, 0.42869910172053743, 0.443521465573992, 0.41957647459847586, 0.4006123031888689, 0.4299711840493338, 0.4457340921674456, 0.41716963052749634, 0.4108381952558245, 0.37806808948516846, 0.4107175554547991, 0.40059804916381836, 0.381181538105011, 0.3798987184252058, 0.40277381454195293], "val_accuracy": [0.3269999921321869, 0.534333348274231, 0.6800000071525574, 0.6603333353996277, 0.6793333292007446, 0.7409999966621399, 0.737333357334137, 0.7170000076293945, 0.7429999709129333, 0.7513333559036255, 0.746666669845581, 0.7703333497047424, 0.7379999756813049, 0.7806666493415833, 0.7896666526794434, 0.7870000004768372, 0.7896666526794434, 0.7919999957084656, 0.7946666479110718, 0.7993333339691162, 0.7950000166893005, 0.793666660785675, 0.812666654586792, 0.8036666512489319, 0.812333345413208, 0.8303333520889282, 0.8066666722297668, 0.7990000247955322, 0.8086666464805603, 0.8130000233650208, 0.8463333249092102, 0.8246666789054871, 0.8203333616256714, 0.8453333377838135, 0.8463333249092102, 0.8259999752044678]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8111428618431091, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 5, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9789247239790162, 1.5671185379440222, 1.0945619729846585, 0.8773130148062696, 0.813989365404749, 0.7812091059153184, 0.7262035692845038, 0.7343222225079242, 0.6753065583649533, 0.6509688039025012, 0.6708633635164079, 0.6417368664607365, 0.5958882123802662, 0.635031983931429, 0.5922960144275876, 0.5687952614605246, 0.5740564745950377, 0.5598384570278716, 0.545499246393795, 0.5398276760955733, 0.5406450157498702, 0.5101362219410739, 0.5037248386423177, 0.48688611457486747, 0.49983084203387296, 0.5006834681299243, 0.4817715409944842, 0.48588480538916295, 0.46812153801768763, 0.45592171819360267], "accuracy": [0.3377360999584198, 0.4807819426059723, 0.5952978730201721, 0.6728305220603943, 0.6955488324165344, 0.6983225345611572, 0.7265883088111877, 0.7235503792762756, 0.7453441023826599, 0.7510236501693726, 0.7388719916343689, 0.7514199018478394, 0.7687227725982666, 0.7606657147407532, 0.7707040309906006, 0.7808743715286255, 0.778761088848114, 0.7866860628128052, 0.7930260300636292, 0.7913089394569397, 0.7903843522071838, 0.8026680946350098, 0.8117818236351013, 0.8185180425643921, 0.8072909712791443, 0.8101968169212341, 0.813498854637146, 0.8239334225654602, 0.8204993009567261, 0.8284242749214172], "val_loss": [1.65009719984872, 1.1394475528172083, 0.7565969399043492, 0.6707435846328735, 0.6561265332358224, 0.5725282090050834, 0.617257935660226, 0.5738297360283988, 0.5489224536078317, 0.56281920841762, 0.569583535194397, 0.49855891295841764, 0.4862841878618513, 0.49222072533198763, 0.48329057012285503, 0.4675511632646833, 0.47606771332877024, 0.4613447529929025, 0.46115054403032574, 0.4564593519483294, 0.4722369057791574, 0.43255326577595304, 0.41844178097588675, 0.439923848424639, 0.411786607333592, 0.40190551962171284, 0.44161148582186016, 0.44215965270996094, 0.4236508011817932, 0.42493886607033865], "val_accuracy": [0.3330000042915344, 0.5243333578109741, 0.6986666917800903, 0.6756666898727417, 0.6896666884422302, 0.7453333139419556, 0.7243333458900452, 0.7273333072662354, 0.7553333044052124, 0.7433333396911621, 0.7459999918937683, 0.7730000019073486, 0.7879999876022339, 0.7753333449363708, 0.7793333530426025, 0.7886666655540466, 0.7879999876022339, 0.7940000295639038, 0.796999990940094, 0.7973333597183228, 0.7933333516120911, 0.8096666932106018, 0.8193333148956299, 0.8080000281333923, 0.824999988079071, 0.8213333487510681, 0.7990000247955322, 0.8016666769981384, 0.809333324432373, 0.8016666769981384]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 8, 0, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [36, 9, 76, 58]], "fitness": -0.7839999794960022, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.sqrt(grad), tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2436602685933633, 1.956578948305362, 1.4416738098103214, 1.160014356368285, 1.0340877609907313, 0.9569361046352217, 0.8783849386601416, 0.8503582422224097, 0.8337867623149537, 0.7867266652118323, 0.7742788386918047, 0.7562721576578566, 0.7533358399894149, 0.7230315711268062, 0.7158695916615583, 0.7083294024682867, 0.6862001377735407, 0.6753949466524438, 0.6938164318399879, 0.6660002289336702, 0.6608110309324213, 0.6452904394069415, 0.6397366087119561, 0.6338707967094852, 0.6313608316398331, 0.6233940543499857], "accuracy": [0.22572976350784302, 0.418570876121521, 0.5243692994117737, 0.5956941246986389, 0.6350548267364502, 0.6565843224525452, 0.6802271604537964, 0.6935675740242004, 0.6988508701324463, 0.7082287669181824, 0.7131158113479614, 0.7180029153823853, 0.7213049530982971, 0.7304186820983887, 0.7383436560630798, 0.737022876739502, 0.7449478507041931, 0.7470611333847046, 0.7446836829185486, 0.7548540234565735, 0.7536653280258179, 0.7607977986335754, 0.7598732113838196, 0.7607977986335754, 0.7658169269561768, 0.7714964747428894], "val_loss": [1.812518801007952, 1.3210013934544154, 0.9029623780931745, 0.786784257207598, 0.6925316708428519, 0.6782592875616891, 0.632778355053493, 0.6233765057155064, 0.5946849243981498, 0.575871297291347, 0.589114614895412, 0.5661329712186541, 0.5503628424235752, 0.5482118640627179, 0.5381826502936227, 0.5291306291307721, 0.5167897428785052, 0.5277653081076485, 0.5206125463758197, 0.5129391976765224, 0.49799067633492605, 0.4981708526611328, 0.49470746517181396, 0.48898662839617046, 0.5024459362030029, 0.4811197349003383], "val_accuracy": [0.4729999899864197, 0.5566666722297668, 0.6736666560173035, 0.6623333096504211, 0.7173333168029785, 0.7173333168029785, 0.7319999933242798, 0.7363333106040955, 0.7390000224113464, 0.7426666617393494, 0.7316666841506958, 0.7443333268165588, 0.7516666650772095, 0.7583333253860474, 0.7559999823570251, 0.7673333287239075, 0.7646666765213013, 0.765999972820282, 0.7683333158493042, 0.7699999809265137, 0.7846666574478149, 0.7776666879653931, 0.7789999842643738, 0.7820000052452087, 0.7739999890327454, 0.7816666960716248]}}, {"genotype": [[0], [0, 0, 1], [0, 0, 1], [4, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 0, 4, 1, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [23, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [22, 9, 76, 58]], "fitness": -0.730571448802948, "mapping_values": [1, 3, 3, 2, 1, 1, 16, 16, 11, 5, 2, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.negative(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.sqrt(tf.math.add(beta, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(grad)), tf.math.add(beta, grad))), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2973948301593183, 2.2910965770038207, 2.284060850812302, 2.2754168031773374, 2.2667750682120373, 2.2597600177074106, 2.249032504995344, 2.2408500200784784, 2.2309899576399004, 2.2198297161200045, 2.208424036292793, 2.193749533479303, 2.1792395346042834, 2.1632818464337875, 2.148122914101013, 2.127077573011139, 2.106648795498581, 2.084306604747901, 2.0572717949982255, 2.029290435147591, 2.0017760236108026, 1.9666865192714889, 1.931400862478262, 1.8931787580846087, 1.8616587252050674, 1.8277104669290527, 1.7775270720955372, 1.747256679872496, 1.7037986536791863, 1.6614996466764511, 1.6252255962351925, 1.5884911736256695, 1.5478862204241195, 1.5076662236043508, 1.4883921162610703, 1.4606758863414835, 1.4267556493654856, 1.401218926870371, 1.3756379513550963, 1.3415128174333242, 1.333716737422583, 1.3108883681251324, 1.287900565968308, 1.2641898913705323, 1.248333131144343, 1.2303579259369084, 1.209110179093567, 1.198167787393669, 1.18806652875703, 1.1725985703608772, 1.1651637513387818, 1.1564496212064819, 1.129140678429569, 1.11988935028447, 1.1066989412302701, 1.0976038450389223, 1.0901245571571554, 1.0760059235606447, 1.0633619766918077, 1.0698640042323762, 1.0480112573332427, 1.0465430935785487, 1.0451065703248303, 1.036143951467346, 1.0253967084211995, 1.0220309439714417, 1.013993797316732, 1.0067704508348998, 0.9894151815318192, 0.9917896299030897, 0.9795757810106808, 0.9733348004554383, 0.97305189869612, 0.9655224520217599, 0.9629036589321317, 0.9531423739706126, 0.9547530091071819, 0.9439474626649341, 0.9425662833197934, 0.9436236172934187, 0.9297678044537953, 0.9103908962845062, 0.9112237257224347, 0.9244943581331581, 0.9125636179905998, 0.9144269432122162, 0.9107330652779718, 0.9009334879497165, 0.899391056492722, 0.8984850602001325, 0.8944133040832885, 0.8970613240676076, 0.8790710577088072, 0.8871308970744222, 0.8825485221997322, 0.8747100079961819, 0.8592793619029667, 0.857321271736073, 0.8724664907886241, 0.8732624781240389], "accuracy": [0.10474177449941635, 0.11742173880338669, 0.137630432844162, 0.15902787446975708, 0.18953903019428253, 0.20855897665023804, 0.22586184740066528, 0.24580636620521545, 0.2550521790981293, 0.2735437750816345, 0.29058247804641724, 0.3117157518863678, 0.32505613565444946, 0.33786818385124207, 0.34367984533309937, 0.3591335415840149, 0.3715493381023407, 0.37868180871009827, 0.3936071991920471, 0.40470215678215027, 0.4130233824253082, 0.43059042096138, 0.4299300014972687, 0.44868576526641846, 0.45304450392723083, 0.4504028558731079, 0.46268656849861145, 0.4633469879627228, 0.4784044325351715, 0.48646149039268494, 0.4955752193927765, 0.5031039714813232, 0.5132743120193481, 0.5233126282691956, 0.5178972482681274, 0.5226522088050842, 0.5406154990196228, 0.5357284545898438, 0.5469554662704468, 0.5575221180915833, 0.5558050274848938, 0.5621450543403625, 0.5622771382331848, 0.564258337020874, 0.5695416927337646, 0.5795799493789673, 0.5872408151626587, 0.5929203629493713, 0.5962224006652832, 0.5982036590576172, 0.5960903167724609, 0.59661865234375, 0.6053361296653748, 0.6151102781295776, 0.6128648519515991, 0.6166952848434448, 0.6236956715583801, 0.6280544400215149, 0.6259410977363586, 0.6203936338424683, 0.6333377361297607, 0.6312243938446045, 0.6312243938446045, 0.6370360851287842, 0.6406022906303406, 0.64231938123703, 0.6406022906303406, 0.6505085229873657, 0.6501122713088989, 0.6527539491653442, 0.6551313996315002, 0.661471426486969, 0.6635847091674805, 0.6588297486305237, 0.6605468392372131, 0.6674151420593262, 0.6600185036659241, 0.6704530715942383, 0.6676793098449707, 0.6705851554870605, 0.6672830581665039, 0.6734909415245056, 0.6715096831321716, 0.6712455153465271, 0.6763967871665955, 0.6803592443466187, 0.67666095495224, 0.6775855422019958, 0.68101966381073, 0.6822084188461304, 0.6845859289169312, 0.6860388517379761, 0.6886804699897766, 0.6819442510604858, 0.6864351034164429, 0.6909258961677551, 0.6948884129524231, 0.6968696117401123, 0.6866992712020874, 0.6847180128097534], "val_loss": [1.9637517929077148, 1.9563849994114466, 1.9490182740347726, 1.941495486668178, 1.9336962018694197, 1.9256442614964075, 1.9169671876089913, 1.907651765005929, 1.897618089403425, 1.8868255615234375, 1.8750621250697546, 1.8618037360055106, 1.8473107474190849, 1.8312411989484514, 1.813939435141427, 1.7946293694632394, 1.7735498973301478, 1.750556468963623, 1.7254719052995955, 1.698124544961112, 1.668778726032802, 1.6366631984710693, 1.6025897094181605, 1.566385235105242, 1.5285814489637102, 1.490229913166591, 1.4500703471047538, 1.4106925896235876, 1.370140552520752, 1.330134459904262, 1.2911943708147322, 1.253446442740304, 1.2166382244655065, 1.1808639935084753, 1.1480375017438615, 1.1174356937408447, 1.0884514536176408, 1.0613574981689453, 1.036499329975673, 1.012437071119036, 0.9910976546151298, 0.9710596288953509, 0.9524130821228027, 0.9345555986676898, 0.9181206226348877, 0.9025969845908028, 0.8876059055328369, 0.8739643096923828, 0.8611286367688861, 0.849057504108974, 0.8382794346128192, 0.827872463635036, 0.8170953137534005, 0.8074650253568377, 0.7979398795536586, 0.7894374813352313, 0.7813251188823155, 0.7737299714769635, 0.7660839557647705, 0.7599378143038068, 0.7530278308050973, 0.7469107764107841, 0.7411758559090751, 0.7358224051339286, 0.7304326295852661, 0.725928817476545, 0.7209494113922119, 0.7164014237267631, 0.7112625156130109, 0.706801346370152, 0.7023404836654663, 0.6978027309690203, 0.6937606504985264, 0.690218278339931, 0.6866074119295392, 0.6830392394747052, 0.6794850145067487, 0.6760130098887852, 0.6728484800883702, 0.6701280900410244, 0.6673797369003296, 0.6637990644999913, 0.6606235504150391, 0.6580658810479301, 0.6552331447601318, 0.6526913131986346, 0.650482211794172, 0.6478196041924613, 0.6450798341206142, 0.6424783638545445, 0.6401240485055106, 0.6380480527877808, 0.635818600654602, 0.63420341696058, 0.6319841997964042, 0.6297319786889213, 0.627441235951015, 0.6247945513044085, 0.6235019309180123, 0.621776853288923], "val_accuracy": [0.08733333647251129, 0.15833333134651184, 0.22033333778381348, 0.2770000100135803, 0.3179999887943268, 0.34333333373069763, 0.3643333315849304, 0.38199999928474426, 0.3973333239555359, 0.4176666736602783, 0.429666668176651, 0.4410000145435333, 0.4506666660308838, 0.46133333444595337, 0.47200000286102295, 0.48366665840148926, 0.49399998784065247, 0.5026666522026062, 0.5133333206176758, 0.5216666460037231, 0.5270000100135803, 0.5326666831970215, 0.5410000085830688, 0.5423333048820496, 0.5483333468437195, 0.5506666898727417, 0.5563333630561829, 0.5603333115577698, 0.562666654586792, 0.5706666707992554, 0.5803333520889282, 0.5860000252723694, 0.5916666388511658, 0.6016666889190674, 0.6116666793823242, 0.6196666955947876, 0.6236666440963745, 0.6370000243186951, 0.6453333497047424, 0.6480000019073486, 0.6549999713897705, 0.6603333353996277, 0.6646666526794434, 0.6683333516120911, 0.6700000166893005, 0.6740000247955322, 0.6779999732971191, 0.6790000200271606, 0.6809999942779541, 0.6840000152587891, 0.6856666803359985, 0.687333345413208, 0.6909999847412109, 0.6933333277702332, 0.6946666836738586, 0.6966666579246521, 0.6973333358764648, 0.6980000138282776, 0.6976666450500488, 0.699999988079071, 0.7020000219345093, 0.70333331823349, 0.7046666741371155, 0.7076666951179504, 0.7106666564941406, 0.7106666564941406, 0.7146666646003723, 0.7139999866485596, 0.7149999737739563, 0.7146666646003723, 0.7160000205039978, 0.7170000076293945, 0.7176666855812073, 0.7176666855812073, 0.7196666598320007, 0.7193333506584167, 0.7206666469573975, 0.7210000157356262, 0.7233333587646484, 0.7250000238418579, 0.7260000109672546, 0.7273333072662354, 0.7286666631698608, 0.7293333411216736, 0.7293333411216736, 0.7310000061988831, 0.7316666841506958, 0.7319999933242798, 0.7319999933242798, 0.731333315372467, 0.7326666712760925, 0.7333333492279053, 0.7333333492279053, 0.734333336353302, 0.734666645526886, 0.7356666922569275, 0.7369999885559082, 0.7390000224113464, 0.7403333187103271, 0.7406666874885559]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 3, 7, 2, 6, 8, 2, 5, 3, 2, 9, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 0, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [23, 65, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [10], [1, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08558975160121918, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1], [1, 0, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 3, 2, 5, 1, 8, 2, 5, 3, 2, 9, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 2, 0, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [29, 73, 20, 7, 45, 13], [0], [0, 1, 1], [9], [7, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [4, 6, 6, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [4, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 1, 1, 1, 1, 0, 1, 10, 5, 5, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.multiply(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(sigma, tf.math.divide_no_nan(tf.math.divide_no_nan(sigma, tf.math.sqrt(tf.math.divide_no_nan(beta, alpha))), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3023596671845983, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1], [0, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 2, 2, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [23, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [3, 0, 3, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 9, 9, 6, 3, 1, 1, 1, 0, 1, 0, 11, 6, 5, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.math.negative(tf.math.add(grad, tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.multiply(tf.math.sqrt(sigma), tf.math.divide_no_nan(tf.math.add(sigma, beta), alpha))), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 0, 0, 4, 1, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [23, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [7, 1], [52], [1, 1, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [60, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3023596671845983, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [0], [0, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 5, 1, 1, 1, 1, 1, 0, 1, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3023596671845983, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [0], [0, 1, 1], [9], [4, 1], [52], [0, 0, 0, 0, 1, 0, 0, 1, 1], [5, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 0, 1, 1, 1, 0, 1, 3, 3, 0, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3023596671845983, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 0, 4, 1, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [7, 4, 0, 8, 6, 7, 4, 5, 6, 5, 2, 2, 9], [3, 1, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 9, 5, 4, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.negative(alpha), tf.math.sqrt(tf.math.divide_no_nan(beta, alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [0, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 5, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 6, 6, 5, 1, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.square(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.375198428562493, 5.750088735228158e+27, 2.308299365721957, 2.308998845272596, 2.3098286562088126, 2.310752007530161, 2.3118135515315545], "accuracy": [0.04068154841661453, 0.060493990778923035, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.240285737173898, NaN, 1.9794305392674036, 1.980130876813616, 1.98091459274292, 1.9818036215645927, 1.9828399930681502], "val_accuracy": [0.00800000037997961, 0.10066666454076767, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [70, 46, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [4, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 5, 1, 1, 1, 1, 0, 1, 0, 5, 4, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.math.negative(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1], [0, 1, 1], [4, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 0, 4, 1, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [23, 73, 20, 7, 45, 13], [1], [0, 1, 1], [0], [4, 1], [52], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 7, 0, 8, 6, 7, 4, 5, 6], [0, 1, 2, 1, 0, 0, 2, 2], [58, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 16, 16, 11, 5, 2, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.negative(tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, tf.math.subtract(tf.math.sqrt(tf.math.add(beta, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(grad)), tf.math.add(beta, grad))), grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 3, 2, 5, 1, 8, 2, 5, 3, 2, 9, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 0, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [36, 49, 20, 7, 45, 13], [0], [0, 1, 1], [9], [4, 1], [42], [0, 0, 0, 0, 1, 0, 0, 1, 1], [4, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 5, 4, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 4, 1, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [23, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 8, 9, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06973979622125626, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [71, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 3, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.06885714083909988, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 5, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3006193675007314, 2.3019692585405624, 2.302451012802477, 2.3016907139350993, 2.30100628800947, 2.301836745739928, 2.3001226408291706, 2.3013475686961224, 2.301751430622575, 2.3011081988675137, 2.3008924960586232, 2.301011824793646, 2.3008483819768824, 2.299963344530643, 2.3005271040453272, 2.3000576001715114, 2.3011245479389757, 2.301058038602715, 2.3000509134924187, 2.3004757478457276, 2.2998497562637703, 2.300085432352155, 2.2991609687046872, 2.299371324998198, 2.3007426762294303, 2.3011774861218988, 2.3002359451729277, 2.2997131115252456, 2.300339551098579, 2.2996719530340135, 2.29953581643473, 2.2994200705600183, 2.2991180241367744, 2.299128773945859, 2.2999077256738927, 2.300064085433984, 2.299621358602401, 2.3001158082206503, 2.299938925946031, 2.2997640239847588, 2.2995812422752757, 2.299753107021293, 2.3001882323908878, 2.299525061650063, 2.300024137205971, 2.300060707674743, 2.2996962648325465, 2.299007065370807, 2.29999538070065, 2.300406297121412, 2.300008834046049], "accuracy": [0.09576013684272766, 0.08968432247638702, 0.09457138925790787, 0.09311848133802414, 0.0944393053650856, 0.09747721254825592, 0.09074098616838455, 0.09140139818191528, 0.09034473448991776, 0.08981640636920929, 0.09259014576673508, 0.09391097724437714, 0.09549596905708313, 0.09219389408826828, 0.0956280529499054, 0.10460969805717468, 0.09853387624025345, 0.08902391046285629, 0.09351472556591034, 0.09708096832036972, 0.09959053993225098, 0.09866596013307571, 0.09747721254825592, 0.10460969805717468, 0.09272222965955734, 0.0936468094587326, 0.09602430462837219, 0.09536388516426086, 0.09787346422672272, 0.09615638852119446, 0.09945846349000931, 0.09576013684272766, 0.09985470771789551, 0.10077928751707077, 0.09800554811954498, 0.09272222965955734, 0.09536388516426086, 0.09893012791872025, 0.09787346422672272, 0.09800554811954498, 0.10593052208423615, 0.09813763201236725, 0.10421344637870789, 0.09853387624025345, 0.10394927859306335, 0.10130762308835983, 0.10236428678035736, 0.10487385839223862, 0.09787346422672272, 0.09259014576673508, 0.09972262382507324], "val_loss": [1.9710341862269811, 1.9708126613071986, 1.9705931118556432, 1.970442771911621, 1.9703010150364466, 1.970160961151123, 1.9700522422790527, 1.9699465206691198, 1.9698593275887626, 1.9697771072387695, 1.9696986334664481, 1.9696238381522042, 1.969578811100551, 1.9695544924054826, 1.9695361682346888, 1.9695425714765276, 1.9695228849138533, 1.9695172991071428, 1.9695029939923967, 1.9695121220179967, 1.9695237023489816, 1.9695353507995605, 1.969550609588623, 1.9695657321384974, 1.969538756779262, 1.9695234979901994, 1.969501222882952, 1.9694749968392509, 1.9694246564592635, 1.9694106238228934, 1.9693854195731026, 1.969378880092076, 1.9693667548043388, 1.9693828991481237, 1.9693753378731864, 1.969376836504255, 1.9693694795880998, 1.969372000013079, 1.9693705695016044, 1.9694045611790247, 1.9694270406450545, 1.9694393702915736, 1.96944945199149, 1.9694735663277763, 1.9695109639848982, 1.9695497921534948, 1.96960483278547, 1.969667911529541, 1.9697273799351283, 1.9697910036359514, 1.9698501995631628], "val_accuracy": [0.038333334028720856, 0.038333334028720856, 0.03966666758060455, 0.0416666679084301, 0.043666668236255646, 0.04466666653752327, 0.04766666516661644, 0.050333332270383835, 0.052000001072883606, 0.05433333292603493, 0.054999999701976776, 0.05700000002980232, 0.05900000035762787, 0.05966666713356972, 0.05999999865889549, 0.05999999865889549, 0.060333333909511566, 0.06266666948795319, 0.06333333253860474, 0.06333333253860474, 0.06366666406393051, 0.06599999964237213, 0.0663333311676979, 0.06666667014360428, 0.06866666674613953, 0.07066666334867477, 0.07266666740179062, 0.07433333247900009, 0.07500000298023224, 0.07566666603088379, 0.07433333247900009, 0.07599999755620956, 0.07633333653211594, 0.07633333653211594, 0.07699999958276749, 0.07733333110809326, 0.07766667008399963, 0.07733333110809326, 0.07800000160932541, 0.07766667008399963, 0.07733333110809326, 0.07733333110809326, 0.07766667008399963, 0.07866666465997696, 0.07900000363588333, 0.07966666668653488, 0.07833333313465118, 0.07833333313465118, 0.07866666465997696, 0.07766667008399963, 0.07699999958276749]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 2, 9, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [23, 73, 20, 7, 45, 13], [1], [1, 1, 1], [9], [7, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [4, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 1, 1, 0, 0, 0, 0, 4, 3, 1, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.sqrt(tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3006992346071184, 2.3023057412855565, 2.3031259050395714, 2.3025852386206056, 2.302056069828185, 2.3030728178411], "accuracy": [0.09615638852119446, 0.08942015469074249, 0.09232597798109055, 0.08928807079792023, 0.09140139818191528, 0.09496764093637466], "val_loss": [1.9711905206952776, 1.9711933135986328, 1.971196174621582, 1.9711988312857491, 1.9712016923086983, 1.9712046214512415], "val_accuracy": [0.03633333370089531, 0.035999998450279236, 0.035999998450279236, 0.03566666692495346, 0.03566666692495346, 0.035999998450279236]}}, {"genotype": [[0], [0, 0, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [2, 80, 61], [1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 0, 0, 4, 1, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [23, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [0, 0, 2, 1, 0, 0, 2, 2], [4, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3006992346071184, 2.3023057412855565, 2.3031259050395714, 2.3025852386206056, 2.302056069828185, 2.3030728178411], "accuracy": [0.09615638852119446, 0.08942015469074249, 0.09232597798109055, 0.08928807079792023, 0.09140139818191528, 0.09496764093637466], "val_loss": [1.9711905206952776, 1.9711933135986328, 1.971196174621582, 1.9711988312857491, 1.9712016923086983, 1.9712046214512415], "val_accuracy": [0.03633333370089531, 0.035999998450279236, 0.035999998450279236, 0.03566666692495346, 0.03566666692495346, 0.035999998450279236]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [5, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 8, 0, 4, 1, 8, 9, 5, 3, 2, 0, 3, 9, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 0, 3, 3, 3, 2, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [23, 73, 20, 7, 45, 13], [0], [1, 1, 1], [9], [6, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [4, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3006992346071184, 2.3023057412855565, 2.3031259050395714, 2.3025852386206056, 2.302056069828185, 2.3030728178411], "accuracy": [0.09615638852119446, 0.08942015469074249, 0.09232597798109055, 0.08928807079792023, 0.09140139818191528, 0.09496764093637466], "val_loss": [1.9711905206952776, 1.9711933135986328, 1.971196174621582, 1.9711988312857491, 1.9712016923086983, 1.9712046214512415], "val_accuracy": [0.03633333370089531, 0.035999998450279236, 0.035999998450279236, 0.03566666692495346, 0.03566666692495346, 0.035999998450279236]}}]