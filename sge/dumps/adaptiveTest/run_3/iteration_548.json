[{"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 8, 5, 5, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [2, 2, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [7, 9, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 4, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [0], [6, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.8094285726547241, "mapping_values": [1, 6, 6, 6, 0, 2, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.157997383984435, 1.6856934795006784, 1.3453453381488887, 1.0752270558349304, 0.9201066771975094, 0.8487334559543526, 0.794018781550446, 0.7666869158474618, 0.7199135216125455, 0.7264254741098084, 0.6970843766202008, 0.641493666764059, 0.6261200679764063, 0.6493698408763957, 0.5955377662690434, 0.570456685084299, 0.5795976295919624, 0.5518448331793459, 0.537863858049068, 0.5611691046715287, 0.5237430623808652, 0.5011174907151813, 0.5037771956897951, 0.501186205395744, 0.4697125208273918, 0.4867426522608525, 0.456741741174846, 0.46897791142807566, 0.45546470795246463, 0.4399939522554594, 0.4491488076967885, 0.4157999736435142, 0.42502687967700603, 0.4327258835095834, 0.41837853725875107, 0.41316929863444285, 0.41234447219667497], "accuracy": [0.2953374683856964, 0.4383833110332489, 0.553031325340271, 0.6147140264511108, 0.6617355942726135, 0.6836613416671753, 0.703209638595581, 0.7104741930961609, 0.7309470176696777, 0.7215691208839417, 0.7376832365989685, 0.7503632307052612, 0.7643640041351318, 0.7564390301704407, 0.7765156626701355, 0.7823272943496704, 0.7769119143486023, 0.7864218950271606, 0.8006868362426758, 0.7849689722061157, 0.8001585006713867, 0.8127063512802124, 0.8057059645652771, 0.8104609847068787, 0.8236692547798157, 0.8166688680648804, 0.82683926820755, 0.8208954930305481, 0.8314621448516846, 0.8424250483512878, 0.8298771381378174, 0.8432175517082214, 0.8403117060661316, 0.8356888294219971, 0.8467837572097778, 0.8453308939933777, 0.8421608805656433], "val_loss": [1.3527093274252755, 1.1066282136099679, 1.073244537625994, 0.7440126623426165, 0.715098329952785, 0.6149580308369228, 0.6462071963718959, 0.6516585860933576, 0.5809228079659599, 0.5401640619550433, 0.5377831629344395, 0.5407466207231794, 0.5956049816949027, 0.5138666118894305, 0.4779031276702881, 0.46583894320896696, 0.45812136786324636, 0.4968430485044207, 0.5150266885757446, 0.46564342294420513, 0.4340104801314218, 0.44122540950775146, 0.42200671775000437, 0.41097612040383474, 0.41963328633989605, 0.42523831129074097, 0.42008587292262484, 0.4292049833706447, 0.39240773235048565, 0.4168213520731245, 0.3857092261314392, 0.38539910316467285, 0.3869722826140268, 0.38301946435655865, 0.3960123062133789, 0.38060837984085083, 0.3944550837789263], "val_accuracy": [0.4556666612625122, 0.6073333621025085, 0.5103333592414856, 0.687666654586792, 0.6759999990463257, 0.7233333587646484, 0.6866666674613953, 0.721666693687439, 0.734666645526886, 0.7513333559036255, 0.7316666841506958, 0.7360000014305115, 0.7300000190734863, 0.778333306312561, 0.7796666622161865, 0.7903333306312561, 0.796999990940094, 0.7606666684150696, 0.762333333492279, 0.784333348274231, 0.8203333616256714, 0.796999990940094, 0.8149999976158142, 0.824999988079071, 0.8149999976158142, 0.8053333163261414, 0.8130000233650208, 0.8146666884422302, 0.8413333296775818, 0.8056666851043701, 0.8343333601951599, 0.8460000157356262, 0.8386666774749756, 0.8396666646003723, 0.8366666436195374, 0.8343333601951599, 0.8326666951179504]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 8, 5, 5, 0, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [1, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [4, 9, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 2, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [0], [6, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.7994285821914673, "mapping_values": [1, 7, 7, 6, 1, 1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.negative(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.pow(grad, tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.0282772329300465, 1.4636396457962844, 1.0809818904208721, 0.8924501897668039, 0.8361911905471596, 0.7485949624373598, 0.7801653048176854, 0.6929496355879309, 0.6928616988739207, 0.6427955941328236, 0.6369997614552049, 0.6357951428219154, 0.584691607681295, 0.5771386343427323, 0.5796536147681052, 0.5474645967229073, 0.5396908517873298, 0.5390585490371164, 0.5407212061841711, 0.5211726474236063, 0.5170997045122322], "accuracy": [0.3131686747074127, 0.5025756359100342, 0.611940324306488, 0.6729626059532166, 0.684982180595398, 0.7172104120254517, 0.7018887996673584, 0.7334566116333008, 0.7367587089538574, 0.7547219395637512, 0.7577598690986633, 0.7528728246688843, 0.7786290049552917, 0.778761088848114, 0.7807422876358032, 0.7994980812072754, 0.7977809906005859, 0.7973847389221191, 0.7960638999938965, 0.8045172095298767, 0.8076872229576111], "val_loss": [1.6059154782976424, 0.9849163804735456, 0.6439339433397565, 0.6753093344824654, 0.5935511929648263, 0.6601607288633075, 0.5481248412813459, 0.545081615447998, 0.5342379638126918, 0.5340408257075718, 0.49740770884922575, 0.4809836149215698, 0.4678906032017299, 0.46109444754464285, 0.4576965570449829, 0.44496144567217144, 0.4703324351991926, 0.5175079447882516, 0.456387996673584, 0.44542387553623747, 0.45023577553885324], "val_accuracy": [0.4636666774749756, 0.5886666774749756, 0.7139999866485596, 0.7236666679382324, 0.7423333525657654, 0.6899999976158142, 0.750333309173584, 0.746999979019165, 0.7386666536331177, 0.7523333430290222, 0.768666684627533, 0.7919999957084656, 0.7866666913032532, 0.7856666445732117, 0.8040000200271606, 0.8053333163261414, 0.796999990940094, 0.7590000033378601, 0.7839999794960022, 0.8026666641235352, 0.7906666398048401]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 8, 5, 5, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [1, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [7, 9, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 2, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [0], [6, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.7937142848968506, "mapping_values": [1, 6, 6, 5, 1, 1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.add(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.0280044277220384, 1.4613625611044616, 1.0668270156179138, 0.8953501261252107, 0.8457566174171572, 0.7589903295142476, 0.752265457684385, 0.7011056124431866, 0.6897032355525317, 0.6421181701823405, 0.6575100789642007, 0.6620851524391699, 0.5883174877928201, 0.5735418430534824, 0.5865585052845831, 0.555544030948196, 0.5523698295915226, 0.562692017768431, 0.524833949715029, 0.5219586382428999, 0.5104956302219583, 0.4874387026274004, 0.5051438029746748, 0.47117726898243745, 0.48095831445037823, 0.45606320431565944, 0.45880033080729954, 0.4616655724640016], "accuracy": [0.31303659081459045, 0.5019152164459229, 0.6172236204147339, 0.6662263870239258, 0.6859067678451538, 0.7092854380607605, 0.7174745798110962, 0.7363624572753906, 0.7341170310974121, 0.7555144429206848, 0.7514199018478394, 0.7464007139205933, 0.7745344042778015, 0.7795535326004028, 0.7771760821342468, 0.7906485199928284, 0.7881389260292053, 0.7869502305984497, 0.7973847389221191, 0.8059701323509216, 0.8104609847068787, 0.8127063512802124, 0.8100647330284119, 0.8240655064582825, 0.8210275769233704, 0.8260467648506165, 0.8251221776008606, 0.8245938420295715], "val_loss": [1.6041204248155867, 0.9966702120644706, 0.6813993794577462, 0.7487801143101284, 0.6164014339447021, 0.6652004548481533, 0.5860031161989484, 0.5428037984030587, 0.5381036826542446, 0.5400442225592477, 0.531706690788269, 0.4807271105902536, 0.4669633592878069, 0.4569370576313564, 0.46935391426086426, 0.4621462992259434, 0.44389634472983225, 0.42633375099727083, 0.43942074264798847, 0.4383218458720616, 0.44849036421094624, 0.42485631363732473, 0.4092182517051697, 0.4120027593203953, 0.398854204586574, 0.41123030866895405, 0.41017978531973703, 0.3924035600253514], "val_accuracy": [0.46299999952316284, 0.581333339214325, 0.703000009059906, 0.6503333449363708, 0.7239999771118164, 0.6833333373069763, 0.7223333120346069, 0.7409999966621399, 0.7416666746139526, 0.7506666779518127, 0.7463333606719971, 0.7856666445732117, 0.7883333563804626, 0.7893333435058594, 0.7950000166893005, 0.7900000214576721, 0.8009999990463257, 0.8133333325386047, 0.800000011920929, 0.8023333549499512, 0.7866666913032532, 0.8173333406448364, 0.8289999961853027, 0.8146666884422302, 0.8243333101272583, 0.8276666402816772, 0.8149999976158142, 0.828000009059906]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 8, 5, 5, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [1, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [7, 9, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 2, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [0], [6, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.7882857322692871, "mapping_values": [1, 6, 6, 5, 1, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.02886205862038, 1.4669491773142302, 1.0687202808485685, 0.8861105217673539, 0.8173900386755256, 0.7653188125930678, 0.7222413630328709, 0.7357760889891384, 0.6825255961733692, 0.6449605768004963, 0.6387422530721317, 0.623430823448422, 0.5909575639289399, 0.5947295852293821, 0.587305060490767, 0.5653998222113003, 0.550706542501864, 0.5591493404150922, 0.5281242343885331, 0.5142755053928578], "accuracy": [0.313300758600235, 0.4991414546966553, 0.6155065298080444, 0.672698438167572, 0.6950204968452454, 0.7143045663833618, 0.726192057132721, 0.7243428826332092, 0.7441553473472595, 0.7537974119186401, 0.7623828053474426, 0.7635715007781982, 0.7758552432060242, 0.7769119143486023, 0.7751948237419128, 0.7878747582435608, 0.7874785661697388, 0.783119797706604, 0.7969884872436523, 0.8103289008140564], "val_loss": [1.6078056607927596, 0.9993225846971784, 0.6666091680526733, 0.7308166537966047, 0.6979995965957642, 0.5862170457839966, 0.6299255064555577, 0.5759326730455671, 0.549490077154977, 0.5515525681631905, 0.5174868958336967, 0.4909132719039917, 0.5065578733171735, 0.4532454865319388, 0.4553272042955671, 0.49047153336661203, 0.4435997690473284, 0.43409312622887747, 0.4441217524664743, 0.4544053588594709], "val_accuracy": [0.46133333444595337, 0.5903333425521851, 0.7166666388511658, 0.6946666836738586, 0.6930000185966492, 0.7329999804496765, 0.7036666870117188, 0.7406666874885559, 0.7356666922569275, 0.7360000014305115, 0.7603333592414856, 0.7776666879653931, 0.7693333625793457, 0.7960000038146973, 0.8076666593551636, 0.7636666893959045, 0.7983333468437195, 0.8009999990463257, 0.800000011920929, 0.7953333258628845]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 8, 5, 5, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [2, 2, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 8, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 4, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [0], [6, 1], [52], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.7882857322692871, "mapping_values": [1, 5, 5, 5, 0, 1, 6, 6, 4, 2, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.sqrt(tf.math.add(beta, beta)), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.1810646782209844, 1.5304779067818577, 1.164024128701, 0.9714312030654684, 0.8866619566853303, 0.8630202646426175, 0.7800446183548281, 0.7643879871988152, 0.7310704725954779, 0.7334417282330472, 0.6868396715292164, 0.6789268077230725, 0.6669878373135351, 0.6777240393845444, 0.6333162217265532, 0.6619430627443094, 0.6254568138315914, 0.6092466383861466, 0.6027745677495535, 0.6069751095305722], "accuracy": [0.27816668152809143, 0.4963677227497101, 0.5941091179847717, 0.6499801874160767, 0.6831330060958862, 0.6818121671676636, 0.7132478952407837, 0.7238145470619202, 0.7305507659912109, 0.7193237543106079, 0.7499669790267944, 0.7466648817062378, 0.7568352818489075, 0.7524765729904175, 0.7621186375617981, 0.7548540234565735, 0.7602694630622864, 0.7741381525993347, 0.7738739848136902, 0.772288978099823], "val_loss": [1.5304488113948278, 1.115074838910784, 0.7484788383756366, 0.734500357082912, 0.67864876134055, 0.6299994332449776, 0.6048927136829921, 0.5784556695393154, 0.5504610197884696, 0.5652604103088379, 0.5381196396691459, 0.5456648383821759, 0.517215439251491, 0.5238020590373448, 0.5069403307778495, 0.5115131650652204, 0.5058014733450753, 0.5098951373781476, 0.5143170186451503, 0.5072767734527588], "val_accuracy": [0.5249999761581421, 0.574999988079071, 0.7003333568572998, 0.6673333048820496, 0.7076666951179504, 0.7129999995231628, 0.7203333377838135, 0.7453333139419556, 0.7513333559036255, 0.753333330154419, 0.7526666522026062, 0.7406666874885559, 0.7703333497047424, 0.7586666941642761, 0.7893333435058594, 0.7796666622161865, 0.781000018119812, 0.765666663646698, 0.7643333077430725, 0.7723333239555359]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 8, 5, 5, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [1, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 1, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 2, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [0], [6, 1], [52], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.7877143025398254, "mapping_values": [1, 5, 5, 5, 0, 1, 7, 7, 5, 2, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.square(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))), tf.math.add(beta, alpha)), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.1810636750270254, 1.5306259764341426, 1.1636981896090706, 0.9726145984852208, 0.8924751341098871, 0.8572156239636051, 0.7794734522840051, 0.7672260246650339, 0.7325491440089907, 0.7212597703370026, 0.6879397233668383, 0.6827203677692875, 0.6699453601983907, 0.6804506678733024, 0.632327354421957, 0.6614843633322589, 0.6244312166427625, 0.607508091729126, 0.5998160942135202, 0.6059482819951205], "accuracy": [0.27803459763526917, 0.4974243938922882, 0.5955620408058167, 0.6507726907730103, 0.6800950765609741, 0.6828688383102417, 0.7135120630264282, 0.7232862114906311, 0.7304186820983887, 0.7275128960609436, 0.7479857206344604, 0.7445515990257263, 0.7499669790267944, 0.7481178045272827, 0.7638356685638428, 0.755118191242218, 0.7642319202423096, 0.7726852297782898, 0.778232753276825, 0.7718927264213562], "val_loss": [1.5304596083504813, 1.11500917162214, 0.7508659192493984, 0.7388683898108346, 0.6759097235543388, 0.6325273854391915, 0.6129583631243024, 0.5778673887252808, 0.5556045430047172, 0.5688634089061192, 0.5404189143862043, 0.5503683430807931, 0.5226510422570365, 0.5262820380074638, 0.507220915385655, 0.5110075644084385, 0.5052439144679478, 0.5025960717882428, 0.5187821899141584, 0.5052598203931536], "val_accuracy": [0.5253333449363708, 0.5743333101272583, 0.6983333230018616, 0.6663333177566528, 0.7083333134651184, 0.7093333601951599, 0.7110000252723694, 0.7450000047683716, 0.7483333349227905, 0.749666690826416, 0.7526666522026062, 0.7379999756813049, 0.7630000114440918, 0.7523333430290222, 0.7866666913032532, 0.7789999842643738, 0.7799999713897705, 0.7793333530426025, 0.762333333492279, 0.7716666460037231]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 8, 5, 5, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [1, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [3, 1, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [0], [6, 1], [52], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.7825714349746704, "mapping_values": [1, 5, 5, 5, 0, 1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.square(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.1881141056710263, 1.5306437507108408, 1.2118251485091474, 0.9817693890550306, 0.901534897555859, 0.8433523562054954, 0.8049675561039912, 0.7767695259219699, 0.7482974240414896, 0.7159254379858824, 0.7147451862289355, 0.7083873293340293, 0.6729262722969811, 0.6574452053270855, 0.6682348499334625, 0.6455881023655762, 0.6298097160514068, 0.6248139341698504, 0.6230765514999821, 0.6162755190263319, 0.5970451347879242, 0.5875971584177729, 0.5940189329845054, 0.5764222554621397], "accuracy": [0.2716946303844452, 0.5066701769828796, 0.574560821056366, 0.6534143686294556, 0.672698438167572, 0.6864351034164429, 0.6975300312042236, 0.7099458575248718, 0.7154933214187622, 0.7331924438476562, 0.7306828498840332, 0.7372870445251465, 0.741909921169281, 0.7471932172775269, 0.7460044622421265, 0.7561748623847961, 0.7643640041351318, 0.7625148296356201, 0.7643640041351318, 0.7716285586357117, 0.7774402499198914, 0.7771760821342468, 0.7751948237419128, 0.7778365015983582], "val_loss": [1.5551859651293074, 1.0335407597678048, 0.7722176483699253, 0.7736291374479022, 0.6435015712465558, 0.6337242637361798, 0.5999405894960675, 0.5644236121858869, 0.5554242644991193, 0.5692598819732666, 0.5277233975274223, 0.5454040084566388, 0.5417554548808506, 0.5313388960702079, 0.5092968940734863, 0.5293845789773124, 0.49866669518607004, 0.4897925002234323, 0.47739006791796, 0.4885599272591727, 0.4841160263334002, 0.48809644154139925, 0.4690059423446655, 0.4763528960091727], "val_accuracy": [0.5236666798591614, 0.6140000224113464, 0.6970000267028809, 0.6626666784286499, 0.7149999737739563, 0.7183333039283752, 0.7279999852180481, 0.7413333058357239, 0.7356666922569275, 0.734333336353302, 0.7593333125114441, 0.753333330154419, 0.7483333349227905, 0.7506666779518127, 0.7736666798591614, 0.7620000243186951, 0.7796666622161865, 0.7726666927337646, 0.7943333387374878, 0.7863333225250244, 0.7803333401679993, 0.7823333144187927, 0.7910000085830688, 0.793666660785675]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 8, 5, 0, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [1, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 1, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 2, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [0], [7, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [13, 74, 76, 58]], "fitness": -0.7765714526176453, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.sqrt(alpha), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.282656424553513, 2.225073849725024, 2.1275965563766928, 1.9604442281147367, 1.7291848652272443, 1.498490128078166, 1.3125258687622339, 1.2070413544319403, 1.1183291401577788, 1.056369792468764, 1.0182907313498146, 0.9782407193167524, 0.929886004644819, 0.9116488208529531, 0.8849770251030242, 0.859533686569228, 0.850314340193384, 0.8327125194538476, 0.8266376172546792, 0.8026668319471004, 0.7876311443453814, 0.7886888931267109, 0.7747395013333186, 0.7667197879940654, 0.7603956429540457, 0.7505806350531659, 0.7413072109285395, 0.7364712562527654, 0.7255790194641912, 0.7233709148081491, 0.7166733930942609, 0.7230453634731301, 0.6969354882562764, 0.6974758141548753, 0.6946710157687276, 0.6926461486390647, 0.6847461454384299, 0.6842445166292696, 0.6807697445268345, 0.6696065729635267, 0.6706478579043398, 0.6624670643627588, 0.6605719480894309, 0.6597561791210504, 0.6621878548557134, 0.6540464868225584, 0.647475019760608, 0.6463625924052847, 0.6499120011195499, 0.637311416287322, 0.6341374742592708, 0.6289194163755262, 0.6295474059215516, 0.6227540548105029, 0.620850453303081, 0.6274355254814437, 0.6212646547498767, 0.6211285208273306], "accuracy": [0.14198917150497437, 0.27460044622421265, 0.36560559272766113, 0.41989168524742126, 0.46691322326660156, 0.5143309831619263, 0.5608242154121399, 0.583938717842102, 0.6087703108787537, 0.6289790272712708, 0.641791045665741, 0.6605468392372131, 0.6761326193809509, 0.6684718132019043, 0.6840575933456421, 0.6951525807380676, 0.6955488324165344, 0.6955488324165344, 0.6979262828826904, 0.7141724824905396, 0.7116629481315613, 0.7135120630264282, 0.7193237543106079, 0.718399167060852, 0.7265883088111877, 0.7239466309547424, 0.7314753532409668, 0.7304186820983887, 0.7297582626342773, 0.7405890822410583, 0.7316074371337891, 0.7376832365989685, 0.7433628439903259, 0.7430986762046814, 0.7449478507041931, 0.744419515132904, 0.7499669790267944, 0.7464007139205933, 0.7504953145980835, 0.7506273984909058, 0.7544577717781067, 0.7552502751350403, 0.7560427784919739, 0.761590301990509, 0.7548540234565735, 0.7561748623847961, 0.7621186375617981, 0.7605336308479309, 0.7668735980987549, 0.7592127919197083, 0.7633073329925537, 0.7667415142059326, 0.7681944370269775, 0.7700436115264893, 0.7753269076347351, 0.7689869403839111, 0.7670056819915771, 0.7754589915275574], "val_loss": [1.9227653230939592, 1.853581087929862, 1.7277468953813826, 1.5191837378910609, 1.263655185699463, 1.056842463357108, 0.9215271472930908, 0.835686343056815, 0.7803071396691459, 0.7375354937144688, 0.7055479288101196, 0.6824086904525757, 0.6699822119304112, 0.6470939091273716, 0.6336367641176496, 0.6218248605728149, 0.6091638633183071, 0.6054526567459106, 0.5918700865336827, 0.5894196374075753, 0.5781010729925973, 0.5712913785661969, 0.5668363741465977, 0.5651285988943917, 0.5541580063956124, 0.5504751035145351, 0.5464074100766864, 0.5397476468767438, 0.5362990072795323, 0.5341218539646694, 0.5299981832504272, 0.5288028546742031, 0.5253473009381976, 0.5207569599151611, 0.5231084142412458, 0.5179304225104195, 0.5109096254621234, 0.5099178893225533, 0.5084211315427508, 0.505776013646807, 0.5023580619267055, 0.49738367966243197, 0.5033068997519357, 0.4979073831013271, 0.49348797116960796, 0.4899858236312866, 0.49362226894923616, 0.4878452164786203, 0.4887878043310983, 0.48495704787118094, 0.4841083117893764, 0.48161990301949636, 0.4793879474912371, 0.4771068947655814, 0.4765439714704241, 0.47590242113385883, 0.47331139019557406, 0.47379367692129953], "val_accuracy": [0.34833332896232605, 0.4480000138282776, 0.5053333044052124, 0.5536666512489319, 0.5963333249092102, 0.6263333559036255, 0.6646666526794434, 0.6896666884422302, 0.6963333487510681, 0.7023333311080933, 0.7153333425521851, 0.7253333330154419, 0.722000002861023, 0.7286666631698608, 0.734333336353302, 0.7366666793823242, 0.7409999966621399, 0.7360000014305115, 0.7386666536331177, 0.7396666407585144, 0.753333330154419, 0.7523333430290222, 0.753000020980835, 0.753333330154419, 0.7576666474342346, 0.7596666812896729, 0.762333333492279, 0.7599999904632568, 0.7573333382606506, 0.7643333077430725, 0.7643333077430725, 0.7646666765213013, 0.7689999938011169, 0.7706666588783264, 0.7590000033378601, 0.7639999985694885, 0.7726666927337646, 0.7683333158493042, 0.7710000276565552, 0.7749999761581421, 0.7723333239555359, 0.7760000228881836, 0.7773333191871643, 0.7736666798591614, 0.7850000262260437, 0.7856666445732117, 0.7820000052452087, 0.7806666493415833, 0.7806666493415833, 0.7860000133514404, 0.7889999747276306, 0.7870000004768372, 0.793666660785675, 0.793666660785675, 0.7910000085830688, 0.7900000214576721, 0.7926666736602783, 0.793666660785675]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 8, 5, 5, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [0, 2, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 1, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 2, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [0], [4, 1], [52], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [13, 74, 76, 58]], "fitness": -0.47771430015563965, "mapping_values": [1, 2, 2, 1, 1, 1, 7, 7, 5, 2, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.square(tf.math.add(beta, alpha)))), tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.3029066462951993, 2.301836032153215, 2.299075769442829, 2.298248212256562, 2.296807551254859, 2.296816709727785, 2.2935366009866023, 2.292628955123069, 2.2920795976840083, 2.2904621696018697, 2.289816682112924, 2.2886053368935353, 2.2861967397923357, 2.2864324725015903, 2.2835903655205736, 2.2820203822948018, 2.281106036903836, 2.280374156391112, 2.279842352492383, 2.2776625293073653, 2.2762937652216046, 2.2757927719880056, 2.274634780034791, 2.27174047251671, 2.2720119720121903, 2.269417247216715, 2.2687166804068157, 2.2681964419033265, 2.266244959254952, 2.2651027104858046, 2.262768005131258, 2.2610907719639455, 2.259055948213359, 2.260102491494671, 2.258638531036538, 2.2569534192861833, 2.2555957506550395, 2.253523806854246, 2.2509974322031203, 2.2501888854581416, 2.2483516489557225, 2.247408328007839, 2.245494756180896, 2.2446742674079725, 2.2448403827738783, 2.241145411471114, 2.2403610556935907, 2.2374869157546518, 2.2377058579197113, 2.2361537431130682, 2.233893328024144, 2.2325938913753207, 2.230874436737099, 2.226868475023561, 2.226769225125961, 2.2242137202024934, 2.2224015424658106, 2.2212615793155344, 2.2202795100737998, 2.21779861911224, 2.2132272853858876, 2.210883853268929, 2.2117526805506342, 2.210375134813598, 2.2060056130143835, 2.203017598460647, 2.2029579284719865, 2.1996135233951013, 2.196296587533262, 2.1982967319458293, 2.1942156688837313, 2.1934417698912694, 2.1888122967347305, 2.187668093348916, 2.1840890171568486, 2.181790370793784, 2.1780049064297637, 2.1786943865080612, 2.1736241375466285, 2.1705334378649233, 2.170825637862226, 2.1667054100689116, 2.1671381711550457, 2.1607628680176156, 2.1616865272582437, 2.1568044397761996, 2.152122983559641, 2.1479114122898384, 2.1481004210038663, 2.143726381722096, 2.1420082906769125, 2.136613505218228, 2.1356462194084758, 2.1311773252115587, 2.130036795506183, 2.1224342960770324, 2.1208289950326322, 2.1217568944143252, 2.11309404962681, 2.110339552010559], "accuracy": [0.09153348207473755, 0.09192973375320435, 0.10157178342342377, 0.10342095047235489, 0.10672302544116974, 0.10553427785634995, 0.11187426000833511, 0.11861048638820648, 0.11253467202186584, 0.11821424216032028, 0.11821424216032028, 0.12389380484819412, 0.13089419901371002, 0.13076211512088776, 0.1394795924425125, 0.1418570876121521, 0.14489498734474182, 0.1426495909690857, 0.15189538896083832, 0.15717871487140656, 0.15189538896083832, 0.16682076454162598, 0.16021661460399628, 0.17210407555103302, 0.1736890822649002, 0.17117950320243835, 0.17751948535442352, 0.1802932173013687, 0.18161405622959137, 0.18980319797992706, 0.1896711140871048, 0.1974640041589737, 0.19799233973026276, 0.19178444147109985, 0.2071060687303543, 0.21054022014141083, 0.21252146363258362, 0.21793685853481293, 0.2218993455171585, 0.21978603303432465, 0.23180557787418365, 0.23365473747253418, 0.23444722592830658, 0.23537181317806244, 0.230484738945961, 0.24461762607097626, 0.24382512271404266, 0.2487121969461441, 0.24435345828533173, 0.2487121969461441, 0.25624093413352966, 0.2583542466163635, 0.26284506916999817, 0.26403382420539856, 0.26561880111694336, 0.2723550498485565, 0.2744683623313904, 0.275260865688324, 0.27460044622421265, 0.2891295850276947, 0.29745081067085266, 0.2863558232784271, 0.2887333333492279, 0.29599788784980774, 0.3003566265106201, 0.3035266101360321, 0.29599788784980774, 0.3065645098686218, 0.30947035551071167, 0.31079116463661194, 0.3125082552433014, 0.30841368436813354, 0.30762118101119995, 0.3143574297428131, 0.31964072585105896, 0.32439571619033813, 0.32518821954727173, 0.3203011453151703, 0.3271694481372833, 0.3387927711009979, 0.33258485794067383, 0.3271694481372833, 0.3354906737804413, 0.3435477614402771, 0.33945319056510925, 0.3447364866733551, 0.34764233231544495, 0.349359393119812, 0.3403777480125427, 0.3567560315132141, 0.3551710546016693, 0.3593977093696594, 0.34566107392311096, 0.37062475085258484, 0.36626601219177246, 0.3695680797100067, 0.3663980960845947, 0.36600184440612793, 0.3700964152812958, 0.37207767367362976], "val_loss": [1.9699720655168806, 1.9687591280255998, 1.9675369943891252, 1.9663314138139998, 1.9651346887860979, 1.9639477729797363, 1.962744849068778, 1.9615561621529716, 1.9603631837027413, 1.959179197038923, 1.9580010686601912, 1.956810542515346, 1.9556311879839217, 1.9544430460248674, 1.9532645089285714, 1.9520510946001326, 1.9508437429155623, 1.9496501513889857, 1.9484421185084753, 1.9472291810171944, 1.9460231917245048, 1.9448175430297852, 1.943614891597203, 1.9423907824925013, 1.9411770275660925, 1.93993193762643, 1.9386895724705286, 1.9374352863856725, 1.9361603600638253, 1.9348885672433036, 1.9336026736668177, 1.9322986602783203, 1.9309889248439245, 1.929678508213588, 1.928342001778739, 1.9269966397966658, 1.9256441252572196, 1.924274103982108, 1.9228932516915458, 1.9215051787240165, 1.9200948987688338, 1.9186676570347376, 1.9172111919948034, 1.9157582010541643, 1.9142966270446777, 1.9128016063145228, 1.9112886020115443, 1.9097559792654855, 1.908215114048549, 1.9066675731113978, 1.90507173538208, 1.90346588407244, 1.9018381663731165, 1.9001683507646834, 1.8984947204589844, 1.896801267351423, 1.8950792040143694, 1.8933241707938058, 1.8915695462908064, 1.8897925104413713, 1.8879637037004744, 1.8860994747706823, 1.884230273110526, 1.8823426791599818, 1.88040372303554, 1.8784193992614746, 1.8764232907976424, 1.8743912151881628, 1.872309616633824, 1.8702471596854073, 1.8681227139064245, 1.8659635952540807, 1.8637525694710868, 1.8615419524056571, 1.8592705726623535, 1.8569716726030623, 1.8546152796064104, 1.8522632462637765, 1.8498122351510184, 1.8473480769566126, 1.8448617798941476, 1.8423290252685547, 1.839789867401123, 1.8371926716395788, 1.8345808301653181, 1.8318812506539481, 1.8291450228009904, 1.8263392448425293, 1.8234902109418596, 1.8206048011779785, 1.8176962988717216, 1.81469760622297, 1.811708859034947, 1.8086348942347936, 1.8055492809840612, 1.8023626463753837, 1.7991769654410226, 1.7959531375340052, 1.7926286969866072, 1.7892592975071497], "val_accuracy": [0.041999999433755875, 0.04866666719317436, 0.056333333253860474, 0.06566666811704636, 0.07633333653211594, 0.08666666597127914, 0.09700000286102295, 0.10633333027362823, 0.11833333224058151, 0.1289999932050705, 0.14233332872390747, 0.1536666601896286, 0.16699999570846558, 0.17933332920074463, 0.18933333456516266, 0.1993333399295807, 0.2083333283662796, 0.21666666865348816, 0.22766666114330292, 0.23533333837985992, 0.2436666637659073, 0.2536666691303253, 0.26633334159851074, 0.27399998903274536, 0.28033334016799927, 0.2906666696071625, 0.29866665601730347, 0.30300000309944153, 0.3086666762828827, 0.31333333253860474, 0.3186666667461395, 0.3240000009536743, 0.33000001311302185, 0.33399999141693115, 0.33933332562446594, 0.3440000116825104, 0.3479999899864197, 0.34933334589004517, 0.35499998927116394, 0.3583333194255829, 0.359333336353302, 0.36266666650772095, 0.36500000953674316, 0.3686666786670685, 0.3723333477973938, 0.37466666102409363, 0.3779999911785126, 0.38100001215934753, 0.38199999928474426, 0.3843333423137665, 0.38600000739097595, 0.3889999985694885, 0.38999998569488525, 0.3930000066757202, 0.39666667580604553, 0.39933332800865173, 0.4036666750907898, 0.40700000524520874, 0.41200000047683716, 0.41466665267944336, 0.4180000126361847, 0.4193333387374878, 0.4230000078678131, 0.42533332109451294, 0.42766666412353516, 0.429666668176651, 0.4309999942779541, 0.4326666593551636, 0.4333333373069763, 0.43533334136009216, 0.4363333284854889, 0.437333345413208, 0.43933331966400146, 0.4410000145435333, 0.44200000166893005, 0.44466665387153625, 0.4463333189487457, 0.44866666197776794, 0.4493333399295807, 0.45100000500679016, 0.4519999921321869, 0.45399999618530273, 0.4566666781902313, 0.45899999141693115, 0.4596666693687439, 0.4620000123977661, 0.46266666054725647, 0.46433332562446594, 0.4663333296775818, 0.4673333466053009, 0.4690000116825104, 0.47099998593330383, 0.47200000286102295, 0.4729999899864197, 0.476666659116745, 0.47866666316986084, 0.4803333282470703, 0.4833333194255829, 0.4856666624546051, 0.4880000054836273]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 8, 5, 4, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [1, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 1, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 2, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [0], [6, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [84, 74, 76, 58]], "fitness": -0.33485713601112366, "mapping_values": [1, 7, 7, 6, 1, 2, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.pow(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.6659248465355505, 2.418186694151375, 2.30375402062844, 2.2938925604920395, 2.297466307992649, 2.217437585551804], "accuracy": [0.19719983637332916, 0.13789460062980652, 0.09972262382507324, 0.14634791016578674, 0.13881917297840118, 0.2005019187927246], "val_loss": [1.739150047302246, 1.974353585924421, 1.9730262756347656, 1.8758820125034876, 1.968076297215053, 1.9028065545218331], "val_accuracy": [0.30666667222976685, 0.09833333641290665, 0.09933333098888397, 0.2356666624546051, 0.13633333146572113, 0.24066667258739471]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [7, 8, 5, 5, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [1, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 7, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 3, 2, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [0], [6, 1], [52], [0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 6, 0, 2, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, tf.math.square(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.8557071410559423, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.02985074557363987, 0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [148.66608101981026, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [4, 8, 2, 5, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [2, 2, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 1, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 2, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [0], [0, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 2, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 0, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 1, 0, 1, 1, 6, 3, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.add(tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.3022692054569163, 2.303159923128968, 2.3072583981162413, 2.317353968607074, 2.372058865038663, 2.481867167455582, 2.611841448199527], "accuracy": [0.09576013684272766, 0.10342095047235489, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736477988106864, 1.9749162537711007, 1.9798295838492257, 1.9992661476135254, 2.0770960535321916, 2.1844774654933383, 2.3038291249956404], "val_accuracy": [0.09799999743700027, 0.10566666722297668, 0.10566666722297668, 0.10566666722297668, 0.10566666722297668, 0.10566666722297668, 0.10566666722297668]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 8, 5, 5, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [1, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [5, 1, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 2, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [0], [6, 1], [52], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [2, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 5, 0, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.square(tf.math.square(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.square(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0936468094587326, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 3, 5, 5, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [1, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 1, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 2, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [0], [6, 1], [52], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [2, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(alpha, alpha)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0936468094587326, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 8, 5, 5, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [2, 2, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [7, 6, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 4, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [0], [6, 1], [52], [1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 2, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302284938973238, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09576013684272766, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 8, 2, 5, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [1, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 1, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [0, 1, 2, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [0], [6, 1], [52], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 6, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.09914285689592361, "mapping_values": [1, 6, 6, 5, 1, 1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 5, 2, 3, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.square(alpha), tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), sigma), beta)", "other_info": {"loss": [3.9100467539472046e+18, 4.572181262657122e+18, 4.585708843432697e+18, 4.615855545076188e+18, 4.5408492580704737e+18, 4.381497077140731e+18], "accuracy": [0.09589222073554993, 0.09549596905708313, 0.09734513610601425, 0.09813763201236725, 0.1002509593963623, 0.08981640636920929], "val_loss": [3.899715091656718e+18, 3.899715091656718e+18, 3.899715091656718e+18, 3.899715091656718e+18, 3.899715091656718e+18, 3.899715091656718e+18], "val_accuracy": [0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714, 0.10233332961797714]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 8, 5, 5, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [2, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 1, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 2, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [1], [0, 1, 1], [0], [6, 1], [52], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [20, 74, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 6, 6, 5, 1, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.sqrt(tf.math.square(tf.math.square(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [2.3034412366461208, 2.303675006865951, 2.302262403709604, 2.302738839168244, 2.3025321826297436, 2.3038142946465237], "accuracy": [0.08981640636920929, 0.08836349099874496, 0.09338264167308807, 0.09391097724437714, 0.09192973375320435, 0.08809932321310043], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [1, 0, 5, 0, 8, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [0, 2, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 1, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 4, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0], [1, 1, 1], [0], [7, 1], [52], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 2, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 7, 7, 5, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.negative(tf.math.square(tf.math.add(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.negative(beta))", "other_info": {"loss": [2.3034412366461208, 2.303675006865951, 2.302262403709604, 2.302738839168244, 2.3025321826297436, 2.3038142946465237], "accuracy": [0.08981640636920929, 0.08836349099874496, 0.09338264167308807, 0.09391097724437714, 0.09192973375320435, 0.08809932321310043], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [6, 2, 5, 5, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [1, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 1, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 2, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [0, 1], [0, 1, 1], [0], [4, 1], [52], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 2, 3, 0, 2, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), alpha)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.3034412366461208, 2.303675006865951, 2.302262403709604, 2.302738839168244, 2.3025321826297436, 2.3038142946465237], "accuracy": [0.08981640636920929, 0.08836349099874496, 0.09338264167308807, 0.09391097724437714, 0.09192973375320435, 0.08809932321310043], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0], [0, 8, 5, 5, 9, 9, 3, 9, 1, 6, 5, 7, 3, 1, 8, 0, 0, 5, 0, 2, 0, 8, 3, 1, 3, 3, 0, 8, 5, 8, 5], [1, 1, 2, 0, 2, 0, 0, 2, 0, 0, 1, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [29, 12, 22, 41, 42, 68], [1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 1, 5, 5, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 4, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [17, 19, 41, 7, 45, 13], [1], [1, 1, 1], [0], [6, 1], [52], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0], [3, 0, 8, 8, 6, 0, 4, 5, 6, 0, 9], [0, 3, 2, 1, 0, 0, 2, 2], [39, 74, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 5, 5, 5, 0, 1, 6, 6, 3, 3, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.square(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.3034412366461208, 2.303675006865951, 2.302262403709604, 2.302738839168244, 2.3025321826297436, 2.3038142946465237], "accuracy": [0.08981640636920929, 0.08836349099874496, 0.09338264167308807, 0.09391097724437714, 0.09192973375320435, 0.08809932321310043], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]