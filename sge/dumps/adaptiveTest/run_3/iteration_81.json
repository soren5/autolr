[{"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [2, 1, 2, 2, 3, 2, 4, 9, 9, 9], [2, 2, 3, 3, 0, 3, 4], [60, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [42]], "fitness": -0.8125714063644409, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.0129417173457167, 1.3670928107906468, 1.0959970649317539, 0.9302026076386744, 0.8183399851390509, 0.7697174441167282, 0.7626741639359469, 0.691526178245484, 0.6996349267294504, 0.6929592536881678, 0.678979124493524, 0.6425508017065094, 0.6243998121591748, 0.6197871681312135, 0.5823798899826294, 0.6062328333096372, 0.5742202585383712, 0.5705771085498292, 0.5739392200953547, 0.5625753547175055, 0.5610790997999471, 0.5401872264757889, 0.5499705185727704, 0.5182943989288664, 0.5203517920006346, 0.5002572975925813, 0.5092289165703533, 0.4930401764659519, 0.5073409465719381, 0.49162650071335445, 0.48696003264802057, 0.471213440786594, 0.4645335467429193, 0.4584636988184471, 0.464156519073962, 0.4690972959415835, 0.45032431540110046, 0.4457443588366677], "accuracy": [0.33483028411865234, 0.5355963706970215, 0.6033549308776855, 0.6585655808448792, 0.6897371411323547, 0.709549605846405, 0.7123233675956726, 0.7446836829185486, 0.7290979027748108, 0.7366266250610352, 0.7367587089538574, 0.7543256878852844, 0.7626469135284424, 0.7585523724555969, 0.7827235460281372, 0.7745344042778015, 0.7803460359573364, 0.7827235460281372, 0.7829877138137817, 0.7865539789199829, 0.7874785661697388, 0.7923656105995178, 0.7854973077774048, 0.8063663840293884, 0.8043851256370544, 0.8092722296714783, 0.8038568496704102, 0.8148196935653687, 0.8070268034934998, 0.817461371421814, 0.8127063512802124, 0.8178576231002808, 0.8302733898162842, 0.8244617581367493, 0.8248580098152161, 0.8166688680648804, 0.8363492488861084, 0.8334434032440186], "val_loss": [1.0948741776602608, 0.9604994569505964, 0.6538882766451154, 0.6619568892887661, 0.6101225784846714, 0.6156482185636248, 0.5755500452859061, 0.5354398318699428, 0.5472415174756732, 0.5209603309631348, 0.5504124505179269, 0.5072203874588013, 0.4928298166819981, 0.4858111654009138, 0.5155562162399292, 0.4662438631057739, 0.4781633274895804, 0.49529004096984863, 0.4687943969454084, 0.48123746258871897, 0.45541313716343473, 0.4839381831032889, 0.46289042064121794, 0.45953381061553955, 0.4396693025316511, 0.45235906328473774, 0.440692663192749, 0.4267873167991638, 0.43816830430712017, 0.42610234022140503, 0.4064106174877712, 0.41859205280031475, 0.4111575824873788, 0.41867499692099436, 0.4363171543393816, 0.4090052672794887, 0.42928790194647654, 0.4086519990648542], "val_accuracy": [0.5743333101272583, 0.5866666436195374, 0.7206666469573975, 0.6919999718666077, 0.7289999723434448, 0.7206666469573975, 0.7416666746139526, 0.765999972820282, 0.7506666779518127, 0.7663333415985107, 0.7570000290870667, 0.7789999842643738, 0.7816666960716248, 0.7829999923706055, 0.7583333253860474, 0.7896666526794434, 0.7856666445732117, 0.778333306312561, 0.7876666784286499, 0.7693333625793457, 0.7963333129882812, 0.7703333497047424, 0.7973333597183228, 0.7950000166893005, 0.8076666593551636, 0.8063333630561829, 0.812333345413208, 0.8103333115577698, 0.8163333535194397, 0.8130000233650208, 0.8256666660308838, 0.8236666917800903, 0.8296666741371155, 0.8116666674613953, 0.8019999861717224, 0.8196666836738586, 0.8033333420753479, 0.8140000104904175]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 1, 2, 2, 3, 2, 4, 9, 9, 9], [2, 0, 3, 3, 0, 3, 4], [60, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [42]], "fitness": -0.7828571200370789, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 1, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.037904279358934, 1.4149580673377244, 1.0655531622336571, 0.9440761469752325, 0.8270492008443774, 0.795058640309801, 0.7591679499858186, 0.7185676980799593, 0.7120688218702619, 0.7001407413025417, 0.6576477860210909, 0.6498489847682045, 0.640946545243153, 0.6471517172078289, 0.6209216311764897, 0.5968044389901836, 0.5900868572941262, 0.5787947753779152, 0.5782911668931016, 0.5558021978506276], "accuracy": [0.3129045069217682, 0.5172368288040161, 0.6061286330223083, 0.6497160196304321, 0.6966054439544678, 0.6985867023468018, 0.7087571024894714, 0.7288337349891663, 0.7269845604896545, 0.7296261787414551, 0.752212405204773, 0.7540615797042847, 0.7540615797042847, 0.7516840696334839, 0.7662131786346436, 0.7695152759552002, 0.7759873270988464, 0.7814027070999146, 0.7815347909927368, 0.7909126877784729], "val_loss": [1.1973241056714738, 0.7806340966905866, 0.7433277198246547, 0.6697609935488019, 0.6070686408451625, 0.5821424722671509, 0.55796217918396, 0.5669091939926147, 0.5754743644169399, 0.532966068812779, 0.5236593655177525, 0.5567900112697056, 0.5885599340711322, 0.5280675888061523, 0.4780647073473249, 0.4842789684023176, 0.47732491152627127, 0.48478734493255615, 0.4936803068433489, 0.48771616390773226], "val_accuracy": [0.46033334732055664, 0.67166668176651, 0.6480000019073486, 0.6919999718666077, 0.7243333458900452, 0.7303333282470703, 0.7506666779518127, 0.7429999709129333, 0.7319999933242798, 0.7519999742507935, 0.7636666893959045, 0.7353333234786987, 0.7203333377838135, 0.7590000033378601, 0.7876666784286499, 0.778333306312561, 0.7876666784286499, 0.7763333320617676, 0.7833333611488342, 0.7803333401679993]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 1, 2, 2, 3, 2, 4, 9, 9, 9], [2, 0, 3, 3, 0, 3, 4], [60, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [42]], "fitness": -0.7602857351303101, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 1, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.022523470527035, 1.433873888634105, 1.0107873189309176, 0.9472317056271063, 0.8124897360738714, 0.7910046041397576, 0.7628250396357174, 0.7200130508749351, 0.6931473833537452, 0.7106527331451368, 0.672876552701894, 0.6626921623705118, 0.6341554360886638], "accuracy": [0.33905693888664246, 0.5003302097320557, 0.6339981555938721, 0.6516972780227661, 0.7025492191314697, 0.7020208835601807, 0.7205125093460083, 0.7289658188819885, 0.7429665923118591, 0.7325320243835449, 0.7466648817062378, 0.7523444890975952, 0.7576277852058411], "val_loss": [1.2559504168374198, 0.8357780150004795, 0.7110562324523926, 0.6325298377445766, 0.6254006283623832, 0.6174430847167969, 0.6098453998565674, 0.5356752020972115, 0.5638186080115182, 0.5783411094120571, 0.5271761757986886, 0.5201463188443866, 0.5616557427815029], "val_accuracy": [0.5, 0.6729999780654907, 0.6853333115577698, 0.7176666855812073, 0.7080000042915344, 0.7329999804496765, 0.7233333587646484, 0.7593333125114441, 0.7413333058357239, 0.7493333220481873, 0.753000020980835, 0.7486666440963745, 0.7440000176429749]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 3, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 1, 6, 2, 3, 2, 4, 9, 9, 9], [2, 3, 4, 3, 0, 3, 4], [60, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [1, 1], [6], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [3, 1, 2, 2], [42]], "fitness": -0.27228569984436035, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 0, 1, 1, 1, 0, 1, 3, 1, 2, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, grad))), tf.math.add(beta, grad)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, alpha)", "other_info": {"loss": [2.303557601477004, 2.30270712940275, 2.3024530040117193, 2.3011207917520413, 2.300654172960321, 2.3010451330752533, 2.301574025943279, 2.2994868515064026, 2.3008602449938356, 2.299318342223978, 2.2993330545492174, 2.299929070734093, 2.2992958451589622, 2.299382776018021, 2.296419991352271, 2.2979683402097613, 2.2972928827401904, 2.2958613866355835, 2.295465593246059, 2.29540967506708, 2.295475245057442, 2.2959117044185082, 2.294208529477012, 2.2966850928154288, 2.2953931610771, 2.293998868977783, 2.292246971116515, 2.293571660610285, 2.294376014230305, 2.2932974368888845, 2.2928606352518264, 2.291868479433565, 2.293282691687011, 2.290116881650311, 2.292653652938633, 2.291366046713548, 2.2923689470189106, 2.2916699458799816, 2.2907046076014153, 2.2908771372175236, 2.290132627983481, 2.290596707307148, 2.2905684818980276, 2.2892326882581164, 2.2881360920019405, 2.288816278920182, 2.2874497959815656, 2.288507834716543, 2.2875313144460128, 2.2889447969893393, 2.2864003318758406, 2.285820600079854, 2.2860366459835033, 2.285348339071993, 2.2844041313682295, 2.285707773045621, 2.283424652578525, 2.28418163027604, 2.284374757449798, 2.28466977929521, 2.2834824166356484, 2.2839489852621604, 2.282191907252618, 2.282766006468719, 2.2825128140938893, 2.2829648888484284, 2.2828000711018555, 2.28289480443014, 2.2827030918019053, 2.2823093312842544, 2.281670387631095, 2.2798618297881736, 2.279159440466473, 2.2801853274278763, 2.280164214047175, 2.2795428932461017, 2.2796511184962953, 2.277645092063403, 2.2795183638130685, 2.2788234099326528, 2.2789398088998105, 2.2772869478993334, 2.2766383589534334, 2.2774104602805156, 2.276230041613243, 2.274365544649809, 2.2754289122651894, 2.275856494368217, 2.273494372262679, 2.2738570455924756, 2.274213697207744, 2.273923014574173, 2.2744525398135482, 2.2741059304039477, 2.2742120679878775, 2.2724637267863854, 2.273066610534823, 2.2715431240650137, 2.2717929312172283, 2.2706579587337066], "accuracy": [0.08677849918603897, 0.09232597798109055, 0.08770307898521423, 0.08902391046285629, 0.09774138033390045, 0.09787346422672272, 0.09325055778026581, 0.09351472556591034, 0.09338264167308807, 0.1002509593963623, 0.09760929644107819, 0.09509972482919693, 0.1002509593963623, 0.09998679161071777, 0.10540219396352768, 0.10394927859306335, 0.10342095047235489, 0.10910051316022873, 0.107647605240345, 0.108440101146698, 0.10976093262434006, 0.09879804402589798, 0.10791176557540894, 0.10302469879388809, 0.107647605240345, 0.11834631860256195, 0.11279883980751038, 0.11306300014257431, 0.1162329912185669, 0.11649715900421143, 0.11530841141939163, 0.12362963706254959, 0.11174217611551285, 0.11993131786584854, 0.11662924289703369, 0.11847840249538422, 0.10989301651716232, 0.1150442510843277, 0.1200634017586708, 0.11517632752656937, 0.12521463632583618, 0.11927089840173721, 0.12191256135702133, 0.1258750557899475, 0.12798838317394257, 0.12772421538829803, 0.13181878626346588, 0.12455421686172485, 0.13234710693359375, 0.1212521493434906, 0.13498876988887787, 0.1302337795495987, 0.13432836532592773, 0.13670584559440613, 0.13538502156734467, 0.13076211512088776, 0.1438383311033249, 0.1328754425048828, 0.14040417969226837, 0.14053626358509064, 0.13855500519275665, 0.13710209727287292, 0.1434420794248581, 0.13630960881710052, 0.14053626358509064, 0.1434420794248581, 0.13789460062980652, 0.13749834895133972, 0.14040417969226837, 0.14370624721050262, 0.14251750707626343, 0.14542332291603088, 0.15136705338954926, 0.149649977684021, 0.14278165996074677, 0.15242372453212738, 0.14978206157684326, 0.1570466309785843, 0.15400871634483337, 0.15810328722000122, 0.15255580842494965, 0.1516312211751938, 0.15889579057693481, 0.15902787446975708, 0.15757495164871216, 0.16034869849681854, 0.16642451286315918, 0.16232994198799133, 0.1690661758184433, 0.16483952105045319, 0.16457535326480865, 0.16655659675598145, 0.16933034360408783, 0.16272619366645813, 0.1710474193096161, 0.16523577272891998, 0.16589617729187012, 0.17250032722949982, 0.17117950320243835, 0.1752740740776062], "val_loss": [1.9708916119166784, 1.970597267150879, 1.9703014918736048, 1.970005920955113, 1.9697120530264718, 1.9694155965532576, 1.9691214561462402, 1.9688288143702917, 1.9685362407139368, 1.9682435989379883, 1.967951433999198, 1.967658860342843, 1.9673661504473006, 1.9670747348240443, 1.9667820249285017, 1.9664884294782365, 1.9661970819745744, 1.9659055982317244, 1.9656155450003487, 1.9653219495500838, 1.9650297164916992, 1.9647346224103654, 1.9644451141357422, 1.964155605861119, 1.9638616016932897, 1.9635720252990723, 1.963282244546073, 1.9629911014011927, 1.9626996176583427, 1.9624101093837194, 1.962118693760463, 1.9618290492466517, 1.9615375655038017, 1.961245128086635, 1.9609541211809431, 1.9606644766671317, 1.9603783062526159, 1.9600907734462194, 1.9598007883344377, 1.9595091002328056, 1.9592174802507674, 1.9589287212916784, 1.9586344446454729, 1.958346162523542, 1.9580559049333846, 1.957766056060791, 1.957475253513881, 1.9571875163487025, 1.956897463117327, 1.9566113608224052, 1.9563204220363073, 1.9560323442731584, 1.9557429722377233, 1.9554500579833984, 1.955160481589181, 1.9548679760524206, 1.9545763560703822, 1.9542856897626604, 1.9539950915745325, 1.9537006786891393, 1.9534102848597936, 1.9531208447047643, 1.952826908656529, 1.9525384221758162, 1.9522463934762138, 1.951955795288086, 1.951664924621582, 1.951371192932129, 1.951079981667655, 1.9507877486092704, 1.9504970141819544, 1.9502036230904716, 1.9499095508030482, 1.9496164321899414, 1.9493250165666853, 1.9490342140197754, 1.948740005493164, 1.9484459332057409, 1.9481573786054338, 1.947861807686942, 1.9475693021501814, 1.9472755023411341, 1.9469789096287318, 1.9466849054609026, 1.9463889258248466, 1.9460936273847307, 1.9457977839878626, 1.9455008506774902, 1.9452051435198103, 1.9449114118303572, 1.9446119580950056, 1.9443181582859583, 1.9440209524972099, 1.9437242916652135, 1.9434295381818498, 1.9431303569248743, 1.942835739680699, 1.9425355366298132, 1.9422375134059362, 1.9419375147138322], "val_accuracy": [0.03866666555404663, 0.0403333343565464, 0.041333332657814026, 0.041999999433755875, 0.043666668236255646, 0.04399999976158142, 0.04466666653752327, 0.04800000041723251, 0.050333332270383835, 0.05299999937415123, 0.05400000140070915, 0.054666668176651, 0.05700000002980232, 0.05833333358168602, 0.059333331882953644, 0.06300000101327896, 0.06566666811704636, 0.0676666647195816, 0.07199999690055847, 0.0729999989271164, 0.07666666805744171, 0.07900000363588333, 0.08266666531562805, 0.08533333241939545, 0.08733333647251129, 0.08866667002439499, 0.09099999815225601, 0.09399999678134918, 0.09566666930913925, 0.10000000149011612, 0.10166666656732559, 0.10466666519641876, 0.10633333027362823, 0.10966666787862778, 0.11133333295583725, 0.1146666631102562, 0.11766666918992996, 0.12066666781902313, 0.1236666664481163, 0.12533333897590637, 0.12833333015441895, 0.1316666603088379, 0.13333334028720856, 0.13766667246818542, 0.14000000059604645, 0.14533333480358124, 0.14766666293144226, 0.1496666669845581, 0.15166667103767395, 0.1550000011920929, 0.15933333337306976, 0.16200000047683716, 0.16599999368190765, 0.1693333387374878, 0.17366667091846466, 0.1756666600704193, 0.17800000309944153, 0.18133333325386047, 0.1836666613817215, 0.1863333284854889, 0.18933333456516266, 0.19066666066646576, 0.1926666647195816, 0.1966666728258133, 0.19966666400432587, 0.20100000500679016, 0.20333333313465118, 0.2043333351612091, 0.20633333921432495, 0.2083333283662796, 0.21133333444595337, 0.21199999749660492, 0.2136666625738144, 0.2173333317041397, 0.21899999678134918, 0.22166666388511658, 0.22499999403953552, 0.22766666114330292, 0.2303333282470703, 0.23066666722297668, 0.2316666692495346, 0.23533333837985992, 0.23733332753181458, 0.23766666650772095, 0.24066667258739471, 0.24300000071525574, 0.2473333328962326, 0.24966666102409363, 0.25200000405311584, 0.25333333015441895, 0.2566666603088379, 0.2616666555404663, 0.2630000114440918, 0.2653333246707916, 0.26866665482521057, 0.2706666588783264, 0.27300000190734863, 0.27566665410995483, 0.2763333320617676, 0.2773333191871643]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0], [2, 3, 1, 4, 2, 0, 4, 9, 9, 9], [2, 0, 0, 2, 0, 3, 4], [60, 3, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [70], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [3, 66]], "fitness": -0.1599999964237213, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 8, 6, 4, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(tf.math.add(beta, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(beta))), tf.math.add(beta, tf.math.pow(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))))), tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.3036172067201086, 2.302909925644975, 2.3028008755817546, 2.301615089426077, 2.3012872836246876, 2.301824824842464, 2.3024970639603817, 2.3005453894056775, 2.3020654694909006, 2.3006652239810963, 2.3008220456830895, 2.301563858907173, 2.3010753262957815, 2.3012959114107963, 2.298474945396622, 2.3001784694476637, 2.299628650287139, 2.298351821016406, 2.298082330459617, 2.298185975906509, 2.2984028294605743, 2.299003693216969, 2.2973732750539564, 2.30000621484271, 2.298881663244477, 2.2976037277568837, 2.295979660232195, 2.297464052605166, 2.2984186758722345, 2.2974746803550232, 2.2971811601908105, 2.2962902693495915, 2.2978880951795375, 2.2948682585947897, 2.297532266519325, 2.2963805574042495, 2.2974729030643393, 2.29690920492567, 2.296156141846455, 2.2964560523276885, 2.295850125286227, 2.2964166555075898, 2.2966287072466, 2.295334726859392, 2.294406943585123, 2.2952281618477284, 2.2940223940044517, 2.295196604215395, 2.294347604063319, 2.2958334326476404, 2.293531271696815, 2.2930469426024214, 2.2934053531491037, 2.2928745839196174, 2.2920331690116504, 2.293533765975243, 2.291415295029644, 2.2922610535896877, 2.292646991263417, 2.293133153859981, 2.2920369372911393, 2.2925928611135626, 2.2910828936164562, 2.291630581086259, 2.2916071737730555, 2.2921222953622555, 2.29216668319551, 2.292450034245209, 2.292309664558851, 2.2920670538625036, 2.2915458583781403, 2.289987836137912, 2.289437126001709, 2.2905837521498245, 2.2906260723136183, 2.2900909867662684, 2.2904749588014712, 2.2886094405209905, 2.2904253073057337, 2.2901090315666495, 2.290307520088062, 2.288776271016669, 2.288342028372103, 2.289215885810313, 2.288228687908136, 2.2864511394702274, 2.2877104195149, 2.288223025506246, 2.2859283728354547, 2.286489989889485, 2.2870925094441747, 2.286822694214879, 2.28749890712274, 2.2873831054144342, 2.287527225304431, 2.286147221661105, 2.2866981954087104, 2.285559323296618, 2.2858091187656613, 2.284826391707826], "accuracy": [0.0866464152932167, 0.09232597798109055, 0.08730682730674744, 0.0886276587843895, 0.09694888442754745, 0.09681680053472519, 0.09060890227556229, 0.09179764986038208, 0.09047681838274002, 0.09721305221319199, 0.09391097724437714, 0.09113723784685135, 0.09602430462837219, 0.09470347315073013, 0.1014397069811821, 0.09813763201236725, 0.09760929644107819, 0.1026284471154213, 0.1014397069811821, 0.10038304328918457, 0.10276053100824356, 0.09259014576673508, 0.10130762308835983, 0.0936468094587326, 0.09985470771789551, 0.10976093262434006, 0.10117553919553757, 0.1022322028875351, 0.10408136248588562, 0.10500594228506088, 0.10447761416435242, 0.11108175665140152, 0.10077928751707077, 0.10910051316022873, 0.10355303436517715, 0.10487385839223862, 0.10011887550354004, 0.10196803510189056, 0.10659094154834747, 0.1010434553027153, 0.11279883980751038, 0.10447761416435242, 0.10619468986988068, 0.1072513535618782, 0.11213842034339905, 0.10949676483869553, 0.11121384054422379, 0.10777968913316727, 0.11081759631633759, 0.10394927859306335, 0.11781799048185349, 0.108440101146698, 0.1138555034995079, 0.11557257920503616, 0.11530841141939163, 0.11227050423622131, 0.12138422578573227, 0.11319508403539658, 0.11636507511138916, 0.11795007437467575, 0.11530841141939163, 0.11491216719150543, 0.12138422578573227, 0.1150442510843277, 0.11319508403539658, 0.1200634017586708, 0.11702549457550049, 0.11028926074504852, 0.11662924289703369, 0.12019548565149307, 0.11398758739233017, 0.1216483935713768, 0.12389380484819412, 0.11913882195949554, 0.1150442510843277, 0.1224408894777298, 0.1216483935713768, 0.1270637959241867, 0.12362963706254959, 0.12468630075454712, 0.12323339283466339, 0.120459645986557, 0.12772421538829803, 0.12878087162971497, 0.12376172095537186, 0.12719587981700897, 0.12996962666511536, 0.12930920720100403, 0.1368379294872284, 0.1320829540491104, 0.12878087162971497, 0.1286487877368927, 0.13221503794193268, 0.1302337795495987, 0.13300752639770508, 0.12508255243301392, 0.1294412910938263, 0.1310262829065323, 0.13459251821041107, 0.13868708908557892], "val_loss": [1.9710262843540736, 1.9708657264709473, 1.9707040786743164, 1.9705427033560616, 1.9703820773533411, 1.9702200208391463, 1.9700590542384557, 1.9698989731924874, 1.969738483428955, 1.9695779936654227, 1.9694173676627023, 1.96925687789917, 1.9690961156572615, 1.9689361708504813, 1.9687755448477608, 1.9686143738882882, 1.9684544972011022, 1.968294416155134, 1.9681354250226701, 1.9679741859436035, 1.9678137642996651, 1.96765170778547, 1.9674928528921944, 1.9673336574009486, 1.9671722139630998, 1.9670136996677943, 1.9668548447745187, 1.9666951043265206, 1.9665354319981165, 1.966376849583217, 1.9662172453744071, 1.9660585948399134, 1.9658989225115096, 1.9657385008675712, 1.9655794416155135, 1.9654205867222376, 1.9652633666992188, 1.9651061466761999, 1.96494688306536, 1.9647869382585799, 1.9646270615713937, 1.9644686835152763, 1.9643077850341797, 1.9641501562935966, 1.963991573878697, 1.9638324465070451, 1.9636734553745814, 1.9635155541556222, 1.9633566311427526, 1.9632000923156738, 1.963040828704834, 1.9628828593662806, 1.962724276951381, 1.9625646727425712, 1.9624066352844238, 1.962247371673584, 1.962087563105992, 1.9619289806910925, 1.9617697170802526, 1.9616090910775321, 1.9614507811410087, 1.9612928799220495, 1.9611332757132394, 1.9609766687665666, 1.9608182907104492, 1.960660661969866, 1.9605026926313127, 1.960343360900879, 1.9601855959211076, 1.9600272859845842, 1.9598699978419714, 1.9597114154270716, 1.959552219935826, 1.9593932969229562, 1.959235600062779, 1.9590787887573242, 1.9589198657444544, 1.958761419568743, 1.9586054256984167, 1.9584465708051408, 1.9582890783037459, 1.9581317901611328, 1.9579726627894811, 1.9578148978097099, 1.957655906677246, 1.9574975286211287, 1.9573394230433874, 1.957181113106864, 1.9570239612034388, 1.956867013658796, 1.9567077500479562, 1.9565513474600655, 1.9563934462411063, 1.956235681261335, 1.9560796873910087, 1.9559203556605749, 1.9557642255510603, 1.9556049619402205, 1.9554468563624792, 1.9552886145455497], "val_accuracy": [0.03733333200216293, 0.03866666555404663, 0.03933333232998848, 0.0403333343565464, 0.04100000113248825, 0.041333332657814026, 0.041999999433755875, 0.04233333468437195, 0.043666668236255646, 0.043666668236255646, 0.04399999976158142, 0.044333335012197495, 0.045666664838790894, 0.04699999839067459, 0.04833333194255829, 0.05000000074505806, 0.050999999046325684, 0.05233333259820938, 0.05400000140070915, 0.05366666615009308, 0.054666668176651, 0.055666666477918625, 0.056333333253860474, 0.05700000002980232, 0.057999998331069946, 0.05900000035762787, 0.05900000035762787, 0.06066666543483734, 0.06300000101327896, 0.06466666609048843, 0.06566666811704636, 0.06599999964237213, 0.0676666647195816, 0.06866666674613953, 0.07199999690055847, 0.07266666740179062, 0.07333333045244217, 0.07566666603088379, 0.07766667008399963, 0.07766667008399963, 0.0793333351612091, 0.08233333379030228, 0.08399999886751175, 0.0860000029206276, 0.08666666597127914, 0.08799999952316284, 0.08833333104848862, 0.08900000154972076, 0.09000000357627869, 0.09099999815225601, 0.09399999678134918, 0.0949999988079071, 0.09566666930913925, 0.09866666793823242, 0.10000000149011612, 0.10100000351667404, 0.10233332961797714, 0.10400000214576721, 0.10466666519641876, 0.10599999874830246, 0.10733333230018616, 0.10866666585206985, 0.11033333092927933, 0.11133333295583725, 0.11266666650772095, 0.1146666631102562, 0.11699999868869781, 0.11833333224058151, 0.11866666376590729, 0.12099999934434891, 0.12300000339746475, 0.12433333694934845, 0.125, 0.1263333261013031, 0.1289999932050705, 0.1303333342075348, 0.1316666603088379, 0.13300000131130219, 0.1340000033378601, 0.13766667246818542, 0.1379999965429306, 0.13966666162014008, 0.14133332669734955, 0.1446666717529297, 0.14666666090488434, 0.14766666293144226, 0.14900000393390656, 0.15000000596046448, 0.15166667103767395, 0.15166667103767395, 0.1536666601896286, 0.15600000321865082, 0.15800000727176666, 0.1599999964237213, 0.16200000047683716, 0.16300000250339508, 0.1653333306312561, 0.16733333468437195, 0.16866666078567505, 0.1720000058412552]}}, {"genotype": [[0], [1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [7, 1, 2, 2, 3, 2, 4, 9, 9, 9], [0, 5, 3, 3, 0, 3, 4], [80, 3, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [70], [0, 1, 1, 0, 1, 0, 0, 1, 1], [5, 9, 9, 8, 4, 7, 4, 5, 6], [3, 3, 2, 2], [42]], "fitness": -0.11971428245306015, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(grad, grad)))), grad), tf.math.multiply(tf.math.add(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.square(sigma)", "other_info": {"loss": [2.3015589860483576, 2.3005107288048205, 2.3021938143594, 2.3029207629361377, 2.305662781350475, 2.363368743950145], "accuracy": [0.09734513610601425, 0.08809932321310043, 0.08942015469074249, 0.08558975160121918, 0.09219389408826828, 0.09351472556591034], "val_loss": [1.9692158699035645, 1.972958700997489, 1.9737452098301478, 1.9746600559779577, 1.9860008784702845, 2.188499382564], "val_accuracy": [0.12666666507720947, 0.0676666647195816, 0.09200000017881393, 0.10366666316986084, 0.09799999743700027, 0.09866666793823242]}}, {"genotype": [[0], [0, 1, 0], [0, 1, 0], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 3, 0, 1, 1, 1, 1, 2, 1, 2, 2], [97, 80, 61], [0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [2, 3, 1, 4, 2, 0, 6, 9, 9, 9], [2, 0, 3, 3, 0, 3, 4], [88, 3, 20, 7, 45, 13], [0, 1, 1], [0, 1, 1], [9], [1, 1], [79], [0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [3, 66]], "fitness": -0.11257142573595047, "mapping_values": [1, 3, 3, 2, 1, 1, 14, 14, 7, 7, 2, 1, 1, 1, 0, 1, 3, 2, 1, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.negative(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), grad)), grad))), tf.math.add(beta, tf.math.divide_no_nan(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302266914043696, 2.30253469432271, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10157178342342377, 0.10289261490106583, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9735471861703056, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.11400000005960464, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [3, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 1, 2, 2, 3, 2, 4, 9, 9, 9, 5], [2, 0, 3, 3, 0, 3, 4], [60, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 0, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 0, 2, 2], [3, 66]], "fitness": -0.11257142573595047, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 1, 1, 1, 0, 1, 0, 3, 3, 0, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302266914043696, 2.30253469432271, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10157178342342377, 0.10289261490106583, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9735471861703056, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.11400000005960464, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], [2, 4, 2, 0, 3, 2, 4, 9, 9, 9, 3], [2, 0, 3, 3, 0, 3, 4], [60, 42, 20, 81, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 1, 2, 2], [70]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 9, 5, 4, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.negative(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), grad))), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07277770340442657, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1], [2, 6, 2, 2, 3, 2, 4, 9, 9, 9], [3, 0, 3, 3, 0, 3, 4], [60, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [42, 71]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 6, 3, 3, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 3, 2, 1, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.square(grad), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3030513676323547, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09377889335155487, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [4, 1, 2, 2, 3, 2, 4, 9, 9, 9], [2, 2, 3, 3, 0, 3, 4], [60, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(beta, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2214717348.700977, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.04319112375378609, 0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.78737004005283e+31, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 3, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0], [2, 1, 6, 2, 3, 6, 4, 9, 9, 9], [2, 0, 0, 3, 0, 2, 3], [60, 3, 20, 7, 45, 13], [0], [1, 1, 1], [9], [1, 1], [79], [1, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [42]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 15, 15, 10, 5, 6, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)))), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3030513676323547, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09377889335155487, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [2, 1, 1, 2, 3, 2, 4, 9, 9, 9], [2, 5, 3, 3, 0, 3, 4], [60, 63, 20, 7, 45, 13], [1], [1, 1, 1], [9], [6, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [4, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [42, 32]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 5, 6, 1, 1, 0, 0, 0, 0, 3, 2, 1, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))))), tf.math.multiply(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3030513676323547, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09377889335155487, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [2, 1, 2, 2, 3, 2, 4, 9, 9, 9], [2, 5, 3, 3, 0, 3, 4], [60, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [1, 1], [79], [0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [42, 55]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 2, 1, 1, 1, 0, 1, 3, 2, 1, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, grad))), tf.math.add(beta, grad)), tf.math.add(grad, tf.math.multiply(tf.math.add(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3030513676323547, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09377889335155487, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 3, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [2, 0, 2, 4, 9, 0, 4, 9, 9, 9], [2, 0, 1, 3, 0, 3, 4], [60, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [1, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [78]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 2, 1, 1, 1, 0, 1, 3, 1, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [1251579800.0805857, 23799373266.757893, 109757098743.85101, 301894692809.3578, 641992505299.3666, 1181104928972.232], "accuracy": [0.09655263274908066, 0.09760929644107819, 0.09932637959718704, 0.10011887550354004, 0.10513802617788315, 0.10038304328918457], "val_loss": [4607904914.285714, 36852257353.14286, 124364034633.14285, 294773307099.4286, 575717263652.5714, 994814871844.5714], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0], [1, 1, 1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1], [2, 1, 2, 2, 3, 2, 4, 9, 9, 9], [2, 2, 3, 3, 0, 3, 4], [60, 42, 20, 7, 45, 13], [0, 1, 1], [0, 1, 1], [3], [1, 1], [39], [1, 1, 1, 0, 1, 0, 0, 1, 1], [7, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [68]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1, 0, 1, 1], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3030513676323547, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09377889335155487, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1], [5, 1, 2, 2, 3, 2, 4, 9, 9, 9], [2, 2, 3, 3, 0, 3, 4], [60, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [1, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [42, 31]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 2, 1, 2], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3030513676323547, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09377889335155487, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], [5, 1, 2, 5, 3, 2, 2, 9, 9, 9, 5], [2, 0, 3, 3, 0, 3, 4], [60, 21, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [3, 3, 2, 2], [3, 66]], "fitness": -0.061714284121990204, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, sigma)", "other_info": {"loss": [2.3033183641941353, 2.3018274579018554, 2.3012038099452443, 2.299988392998813, 2.299760706467856, 2.30033990864772, 2.3002451656516896, 2.29941185936873, 2.3002084007573056, 2.2991933855697417, 2.2994448165568566, 2.300102278792926, 2.2999038994509107, 2.300473793008623], "accuracy": [0.08836349099874496, 0.09192973375320435, 0.08730682730674744, 0.09140139818191528, 0.09800554811954498, 0.09430722147226334, 0.09840179979801178, 0.1002509593963623, 0.09919429570436478, 0.1010434553027153, 0.10368511080741882, 0.0936468094587326, 0.09985470771789551, 0.09628847241401672], "val_loss": [1.9704220635550362, 1.9698519025530135, 1.9695210456848145, 1.969553061894008, 1.9695139612470354, 1.9694678442818778, 1.969285488128662, 1.9692644391741072, 1.9691922324044364, 1.969273567199707, 1.9694514955793108, 1.969649178641183, 1.9699015617370605, 1.9701268332345145], "val_accuracy": [0.0403333343565464, 0.04766666516661644, 0.05700000002980232, 0.0573333315551281, 0.05999999865889549, 0.06400000303983688, 0.07333333045244217, 0.07566666603088379, 0.07866666465997696, 0.07699999958276749, 0.07766667008399963, 0.07833333313465118, 0.07800000160932541, 0.07633333653211594]}}, {"genotype": [[0], [1], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1], [2, 3, 1, 4, 2, 0, 4, 9, 9, 9], [2, 2, 4, 3, 0, 3, 4], [80, 3, 20, 7, 45, 13], [1], [1, 1, 1], [9], [1, 1], [79], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [3, 3, 2, 2], [3, 66]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 8, 6, 2, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, beta))), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.pow(grad, tf.math.add(tf.math.negative(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(beta, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3036887636274126, 2.3031534143112053, 2.303219286804391, 2.3022098822474653, 2.3020488608073975, 2.3027638827867953], "accuracy": [0.0866464152932167, 0.09232597798109055, 0.08611807972192764, 0.08691058307886124, 0.0948355570435524, 0.09536388516426086], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0], [1], [6, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [20, 80, 61], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1], [2, 1, 2, 2, 3, 2, 4, 9, 0, 9, 5], [3, 0, 3, 3, 0, 3, 4], [60, 42, 20, 99, 45, 13], [1], [1, 1, 1], [9], [4, 1], [79], [0, 1, 1, 0, 1, 0, 0, 1, 1], [3, 9, 9, 8, 4, 7, 4, 5, 6], [0, 3, 2, 2], [3, 66]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 3, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(grad, tf.math.pow(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))))), tf.math.add(beta, grad)))), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), sigma)", "other_info": {"loss": [2.3036887636274126, 2.3031534143112053, 2.303219286804391, 2.3022098822474653, 2.3020488608073975, 2.3027638827867953], "accuracy": [0.0866464152932167, 0.09232597798109055, 0.08611807972192764, 0.08691058307886124, 0.0948355570435524, 0.09536388516426086], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}]