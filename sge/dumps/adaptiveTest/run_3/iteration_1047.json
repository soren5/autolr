[{"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [5, 7, 3, 0, 5, 4, 8, 6, 4, 8, 3, 8, 4, 0, 2, 0, 5, 2, 6, 0, 0, 8, 3, 2, 3, 5, 0, 8, 5, 8, 5, 6, 2, 5, 5], [3, 0, 0, 0, 2, 2, 1, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [71, 5, 95, 41, 55, 68], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [62, 19, 41, 7, 45, 13], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 6, 4, 2, 6, 1, 7, 7, 4, 8, 3, 8, 1, 5, 3, 3, 0, 1, 9], [1, 1, 7, 3, 4, 0], [28], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 5, 6, 8, 6, 0, 8, 5, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [0, 0, 2, 2, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [44, 7, 76, 58]], "fitness": -0.854285717010498, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 12, 8, 4, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.square(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.negative(beta), tf.math.sqrt(tf.math.square(beta)))))", "other_info": {"loss": [1.7583367064675919, 1.2067116197263088, 1.0095095696812686, 0.8608557652756366, 0.7705792218875797, 0.7163608972469829, 0.6483510933406066, 0.6030486667034979, 0.5921824331359777, 0.5502695741119354, 0.5248667222948721, 0.49330373163693114, 0.491856169407756, 0.4778189812912964, 0.45784372757328595, 0.4308835462084095, 0.422839497664916, 0.39784083311599655, 0.3852233539293975, 0.3761448401186712, 0.3654249225900693, 0.3684421209981334, 0.3351364444314906, 0.33640352379628585, 0.3249103714958111, 0.3228233683976861, 0.3048777253974808, 0.29925250376865864, 0.2980484372557682, 0.28122735650957287, 0.28610612863184925, 0.2804226853851912, 0.2729255397597545, 0.25745046792202275, 0.26163476979916733, 0.2417935530987587, 0.2421863241486026, 0.24587275028394087, 0.24230666600513168, 0.23149316714912468], "accuracy": [0.40523049235343933, 0.5775987505912781, 0.6462818384170532, 0.6960771083831787, 0.7211728692054749, 0.7452120184898376, 0.767401933670044, 0.7841764688491821, 0.7886672616004944, 0.8017435073852539, 0.8128384351730347, 0.8191784620285034, 0.8214238286018372, 0.82683926820755, 0.8359529972076416, 0.8409721255302429, 0.8441421389579773, 0.8548408150672913, 0.8615770936012268, 0.8574824929237366, 0.8669924736022949, 0.8683133125305176, 0.8805969953536987, 0.8750495314598083, 0.8829745054244995, 0.8841632604598999, 0.8887861371040344, 0.8919561505317688, 0.8908994793891907, 0.8971073627471924, 0.8976356983184814, 0.8971073627471924, 0.900409460067749, 0.9068815112113953, 0.9051644206047058, 0.9132214784622192, 0.9109761118888855, 0.9105798602104187, 0.913089394569397, 0.9124290347099304], "val_loss": [1.0300764356340681, 0.8115268264498029, 0.6992428813661847, 0.6105904068265643, 0.5646580968584333, 0.5323563984462193, 0.49261886732918875, 0.47747078963688444, 0.464482273374285, 0.4369023101670401, 0.4359679733003889, 0.4268084594181606, 0.4149438057626997, 0.3931605645588466, 0.3820345827511379, 0.3889531833784921, 0.3745086278234209, 0.3498931952885219, 0.35906730379377094, 0.3549469879695347, 0.34669233219964163, 0.3445456879479544, 0.3579695224761963, 0.35267895460128784, 0.3358903612409319, 0.33145160334450857, 0.33227143968854633, 0.3336168187005179, 0.3332999774387905, 0.3341360262462071, 0.32762110233306885, 0.31506225040980745, 0.32495053325380596, 0.3257123487336295, 0.3148831043924604, 0.32997182437351774, 0.3188278504780361, 0.3196932758603777, 0.3206957238061087, 0.321474518094744], "val_accuracy": [0.5486666560173035, 0.6586666703224182, 0.7089999914169312, 0.7400000095367432, 0.7566666603088379, 0.7756666541099548, 0.7973333597183228, 0.8006666898727417, 0.8040000200271606, 0.8163333535194397, 0.8143333196640015, 0.8226666450500488, 0.8289999961853027, 0.8386666774749756, 0.8446666598320007, 0.8399999737739563, 0.8473333120346069, 0.8496666550636292, 0.8460000157356262, 0.8473333120346069, 0.8513333201408386, 0.8513333201408386, 0.8460000157356262, 0.8526666760444641, 0.8560000061988831, 0.8586666584014893, 0.862333357334137, 0.859000027179718, 0.8656666874885559, 0.8636666536331177, 0.8619999885559082, 0.8653333187103271, 0.8686666488647461, 0.8613333106040955, 0.8713333606719971, 0.8646666407585144, 0.8656666874885559, 0.8713333606719971, 0.8640000224113464, 0.8663333058357239]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [5, 7, 3, 0, 5, 4, 8, 6, 4, 8, 3, 8, 4, 0, 2, 0, 5, 2, 6, 0, 0, 8, 3, 2, 3, 5, 0, 8, 5, 8, 5, 6, 2, 5, 5], [2, 2, 1, 0, 2, 2, 2, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [71, 5, 95, 41, 55, 68], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [5, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [62, 19, 41, 7, 45, 13], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 6, 5, 2, 6, 9, 7, 7, 4, 8, 3, 8, 1, 5, 3, 3, 0, 1, 9], [1, 1, 7, 3, 4, 0], [28], [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 5, 6, 8, 6, 0, 8, 5, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [0, 0, 2, 2, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [44, 0, 76, 58]], "fitness": -0.11057142913341522, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 9, 6, 6, 0, 1, 3, 1, 2, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.add(sigma, sigma)))), tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3028603365644567, 2.3001519689281555, 2.3010840292194845, 2.300997024230544, 2.301385634264469, 2.301823048370547, 2.302239712250467, 2.3023332656728845, 2.3024069268422247, 2.3025432157006325, 2.302565089463715, 2.302580301520091, 2.3025792680160166], "accuracy": [0.08942015469074249, 0.09747721254825592, 0.09351472556591034, 0.10276053100824356, 0.1022322028875351, 0.09668471664190292, 0.10460969805717468, 0.10210011899471283, 0.10381719470024109, 0.10421344637870789, 0.09959053993225098, 0.1006472036242485, 0.10011887550354004], "val_loss": [1.9705734934125627, 1.9709955624171667, 1.971916879926409, 1.9726569311959403, 1.9730249813624792, 1.9733294078281947, 1.9735281808035714, 1.97360931124006, 1.9736383301871163, 1.973644529070173, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.06333333253860474, 0.08766666799783707, 0.10000000149011612, 0.08866667002439499, 0.0820000022649765, 0.0976666659116745, 0.11033333092927933, 0.1120000034570694, 0.10533333569765091, 0.1003333330154419, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [3, 0, 1, 0, 5, 4, 8, 6, 4, 8, 3, 8, 4, 0, 2, 0, 5, 2, 6, 0, 0, 8, 3, 2, 3, 5, 0, 8, 5, 8, 5, 6, 2, 5, 5], [2, 3, 1, 0, 2, 2, 2, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [71, 5, 95, 41, 55, 68], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [62, 19, 41, 7, 45, 13], [1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 6, 4, 2, 6, 1, 7, 7, 4, 8, 3, 8, 1, 5, 3, 3, 0, 1, 9], [1, 1, 7, 3, 4, 0], [28], [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 5, 6, 8, 6, 0, 8, 5, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [0, 0, 2, 2, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [44, 5, 76, 58]], "fitness": -0.10942856967449188, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 2], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), grad)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302025339937544, 2.300959489758398, 2.3022733826159234, 2.302529598853812, 2.302575322316071, 2.302584954004687, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09232597798109055, 0.09959053993225098, 0.09787346422672272, 0.10289261490106583, 0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9716709000723702, 1.9731852667672294, 1.973618847983224, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.08366666734218597, 0.1106666699051857, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [5, 7, 3, 0, 5, 4, 8, 6, 4, 8, 3, 8, 4, 0, 2, 0, 5, 2, 6, 0, 0, 8, 3, 2, 3, 5, 0, 8, 5, 8, 5, 6, 2, 5, 5], [3, 0, 0, 0, 2, 2, 1, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [71, 5, 95, 41, 55, 68], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [62, 19, 41, 7, 45, 13], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [6, 6, 4, 2, 4, 1, 7, 7, 4, 8, 8, 8, 1, 5, 3, 3, 0, 1, 9], [1, 1, 7, 3, 4, 0], [28], [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 5, 6, 8, 6, 0, 8, 5, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [0, 0, 2, 2, 0, 3, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [44, 5, 76, 58]], "fitness": -0.10942856967449188, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 20, 11, 10, 1, 0, 3, 1, 2, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.subtract(sigma, sigma)), tf.math.add(sigma, tf.math.add(sigma, sigma)))))))), sigma)), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.math.sqrt(sigma)))), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302025339937544, 2.300959489758398, 2.3022733826159234, 2.302529598853812, 2.302575322316071, 2.302584954004687, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09232597798109055, 0.09959053993225098, 0.09787346422672272, 0.10289261490106583, 0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9716709000723702, 1.9731852667672294, 1.973618847983224, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.08366666734218597, 0.1106666699051857, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [5, 7, 3, 0, 5, 4, 8, 6, 4, 8, 3, 8, 4, 0, 2, 0, 5, 2, 6, 0, 0, 8, 3, 2, 3, 5, 0, 8, 5, 8, 5, 6, 2, 5, 5], [3, 0, 0, 0, 2, 2, 1, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [71, 5, 95, 41, 55, 68], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [5, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [62, 19, 41, 7, 45, 13], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [6, 6, 4, 2, 4, 1, 7, 7, 4, 8, 3, 8, 1, 5, 3, 3, 0, 1, 9], [1, 1, 7, 3, 4, 0], [28], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 9, 9, 0, 6, 3, 8, 5, 6, 0, 9, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [0, 0, 2, 2, 0, 3, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [44, 5, 76, 58]], "fitness": -0.10942856967449188, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 15, 9, 7, 2, 0, 3, 3, 0, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, alpha), sigma)), sigma)), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.add(sigma, sigma)), sigma)))), tf.math.add(sigma, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302025339937544, 2.300959489758398, 2.3022733826159234, 2.302529598853812, 2.302575322316071, 2.302584954004687, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09232597798109055, 0.09959053993225098, 0.09787346422672272, 0.10289261490106583, 0.1006472036242485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9716709000723702, 1.9731852667672294, 1.973618847983224, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.09833333641290665, 0.08366666734218597, 0.1106666699051857, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [5, 7, 3, 0, 5, 4, 8, 6, 4, 8, 3, 8, 4, 0, 2, 0, 5, 2, 6, 0, 0, 8, 3, 2, 3, 5, 0, 8, 5, 8, 5, 6, 2, 5, 5], [2, 2, 1, 0, 2, 2, 2, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [71, 5, 95, 41, 55, 68], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [5, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [62, 19, 41, 7, 45, 13], [1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 6, 4, 2, 6, 1, 7, 7, 4, 8, 3, 8, 1, 5, 3, 3, 0, 1, 9], [1, 1, 7, 3, 4, 0], [28], [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 5, 6, 8, 6, 0, 8, 5, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [0, 0, 2, 2, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [44, 7, 76, 58]], "fitness": -0.10914285480976105, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 2], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.301787178892076, 2.3018574536106513, 2.302539818511427, 2.3025847650585143, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.0936468094587326, 0.10474177449941635, 0.10170386731624603, 0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9727164677211217, 1.9736183711460658, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.08766666799783707, 0.11166666448116302, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [5, 7, 3, 0, 5, 4, 8, 6, 4, 8, 3, 8, 4, 0, 2, 0, 5, 2, 6, 0, 0, 8, 3, 2, 3, 5, 0, 8, 5, 8, 5, 6, 2, 5, 5], [3, 0, 0, 0, 2, 2, 1, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [71, 5, 95, 41, 55, 68], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 1, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [62, 19, 41, 7, 45, 13], [1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 6, 4, 2, 6, 1, 7, 7, 4, 8, 3, 8, 1, 5, 3, 3, 0, 1, 9], [1, 1, 7, 3, 4, 0], [28], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 9, 9, 0, 6, 3, 8, 5, 6, 0, 9, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [0, 0, 2, 2, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [44, 7, 76, 58]], "fitness": -0.10914285480976105, "mapping_values": [1, 2, 2, 1, 1, 0, 6, 6, 5, 1, 1, 1, 0, 0, 0, 0, 3, 2, 1, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.301787178892076, 2.3018574536106513, 2.302539818511427, 2.3025847650585143, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.0936468094587326, 0.10474177449941635, 0.10170386731624603, 0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9727164677211217, 1.9736183711460658, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.08766666799783707, 0.11166666448116302, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [5, 7, 3, 0, 5, 4, 8, 6, 4, 8, 3, 8, 4, 0, 2, 0, 5, 2, 6, 0, 0, 8, 3, 2, 3, 5, 0, 8, 5, 8, 5, 6, 2, 5, 5], [3, 0, 0, 0, 2, 2, 1, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [71, 5, 95, 41, 55, 68], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [5, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [5, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [62, 19, 41, 7, 45, 13], [0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 6, 4, 2, 6, 1, 7, 7, 4, 8, 3, 8, 1, 5, 3, 3, 0, 1, 9], [1, 1, 7, 3, 4, 0], [28], [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 9, 9, 0, 6, 3, 8, 5, 6, 0, 9, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [0, 0, 2, 2, 0, 3, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [44, 7, 76, 58]], "fitness": -0.10914285480976105, "mapping_values": [1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 0, 4, 2, 2, 0, 0, 3, 1, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.301787178892076, 2.3018574536106513, 2.302539818511427, 2.3025847650585143, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.0936468094587326, 0.10474177449941635, 0.10170386731624603, 0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9727164677211217, 1.9736183711460658, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.08766666799783707, 0.11166666448116302, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [5, 7, 3, 0, 5, 4, 8, 6, 4, 8, 3, 8, 4, 0, 2, 0, 5, 2, 6, 0, 0, 8, 3, 2, 3, 5, 0, 8, 5, 8, 5, 6, 2, 5, 5], [3, 0, 0, 0, 2, 2, 1, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [71, 30, 95, 41, 55, 68], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 1, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [5, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [62, 19, 41, 7, 45, 13], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 6, 4, 2, 6, 1, 7, 7, 4, 8, 3, 8, 1, 5, 3, 3, 0, 1, 9], [1, 1, 7, 3, 4, 0], [28], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 9, 9, 0, 6, 3, 8, 5, 6, 0, 9, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [0, 0, 2, 2, 0, 3, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [44, 7, 76, 58]], "fitness": -0.10914285480976105, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 0, 1, 0, 0, 0, 0, 3, 3, 0, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.math.negative(tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.301787178892076, 2.3018574536106513, 2.302539818511427, 2.3025847650585143, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.0936468094587326, 0.10474177449941635, 0.10170386731624603, 0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9727164677211217, 1.9736183711460658, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.08766666799783707, 0.11166666448116302, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [3, 0, 1, 0, 5, 4, 8, 6, 4, 8, 3, 8, 4, 0, 2, 0, 5, 2, 6, 0, 0, 8, 3, 2, 3, 5, 0, 8, 5, 8, 5, 6, 2, 5, 5], [2, 3, 1, 0, 2, 2, 2, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [71, 5, 95, 41, 55, 68], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [62, 19, 41, 7, 45, 13], [1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 9, 4, 2, 6, 5, 7, 7, 4, 8, 3, 8, 1, 5, 3, 3, 0, 1, 9], [1, 1, 7, 3, 4, 0], [28], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 6, 9, 0, 6, 3, 8, 5, 6, 0, 9, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [0, 0, 2, 2, 0, 3, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [44, 7, 76, 58, 47]], "fitness": -0.10085714608430862, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 5, 0, 1, 1, 0, 0, 0, 0, 17, 12, 5, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.divide_no_nan(beta, tf.math.negative(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32))))), tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [3.1481111509010552e+22, 4.176043525990278e+25, 1.018457480769782e+27, 2.3025851429508597, NaN, NaN], "accuracy": [0.09681680053472519, 0.09893012791872025, 0.1010434553027153, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4.6830764620839446e+23, 1.6755297282461948e+26, 1.973644392830985, 1.973644392830985, NaN, NaN], "val_accuracy": [0.10266666859388351, 0.10199999809265137, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [9, 7, 3, 0, 5, 4, 8, 6, 4, 8, 3, 8, 4, 0, 2, 0, 5, 2, 6, 0, 0, 8, 3, 2, 3, 5, 0, 8, 5, 8, 5, 6, 2, 5, 5], [2, 2, 1, 0, 2, 2, 2, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [71, 5, 95, 41, 55, 68], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [5, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [62, 19, 41, 7, 45, 13], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 6, 4, 2, 6, 1, 7, 7, 4, 8, 3, 8, 1, 5, 3, 3, 0, 1, 9], [1, 1, 7, 3, 4, 0], [28], [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 5, 6, 8, 6, 0, 8, 5, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [0, 0, 2, 2, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [44, 44, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 14, 8, 7, 1, 0, 2, 1, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(sigma, sigma)), tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, alpha), sigma)), tf.math.add(sigma, tf.math.add(sigma, sigma)))))), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [19017597.17355468, 367869308.1706512, 1684610903.8467839, 4683107486.245938, 9899173153.711796, 18332728837.34249], "accuracy": [0.09800554811954498, 0.10130762308835983, 0.09919429570436478, 0.09628847241401672, 0.10474177449941635, 0.09906221181154251], "val_loss": [71342772.57142857, 570048201.1428572, 1923136950.857143, 4557630610.285714, 8900519643.428572, 15378836918.857143], "val_accuracy": [0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [5, 7, 3, 0, 5, 4, 8, 6, 4, 8, 3, 8, 4, 0, 2, 0, 5, 2, 6, 0, 0, 8, 3, 2, 3, 5, 0, 8, 5, 8, 5, 6, 2, 5, 5], [3, 0, 0, 0, 2, 2, 1, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [71, 5, 95, 41, 55, 68], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [62, 19, 41, 7, 45, 13], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [6, 6, 4, 2, 4, 1, 1, 7, 4, 0, 5, 8, 1, 5, 3, 3, 0, 1, 9], [1, 1, 7, 3, 4, 0], [28], [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 5, 6, 8, 6, 0, 8, 5, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [0, 0, 2, 2, 0, 3, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [44, 19, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 21, 13, 11, 2, 0, 3, 1, 2, 2], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(sigma, sigma)), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.subtract(sigma, sigma)), tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.square(tf.math.add(sigma, alpha))))), tf.math.add(sigma, alpha))), sigma)))))))), sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3026234990239476, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09655263274908066, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [0, 7, 3, 0, 5, 4, 8, 6, 4, 8, 3, 8, 4, 0, 2, 0, 5, 2, 6, 0, 0, 8, 3, 2, 3, 5, 0, 8, 5, 8, 5, 6, 2, 5, 5], [2, 2, 1, 0, 2, 2, 2, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [71, 5, 95, 41, 55, 68], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [5, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [62, 19, 41, 7, 45, 13], [1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 6, 4, 2, 6, 1, 7, 7, 4, 8, 3, 8, 1, 5, 3, 3, 0, 1, 9], [1, 1, 7, 3, 4, 0], [28], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [6, 5, 6, 8, 6, 0, 8, 5, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [0, 0, 2, 2, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [44, 7, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 12, 8, 4, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.square(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(tf.math.divide_no_nan(tf.math.negative(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), beta)), tf.math.sqrt(tf.math.square(beta))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [5, 7, 3, 0, 5, 4, 8, 6, 4, 8, 3, 8, 4, 0, 2, 0, 5, 2, 6, 0, 0, 8, 3, 2, 3, 5, 0, 8, 5, 8, 5, 6, 2, 5, 5], [2, 3, 1, 0, 2, 2, 2, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [71, 5, 95, 41, 55, 68], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [62, 19, 41, 7, 45, 13], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [6, 6, 4, 2, 4, 1, 7, 7, 4, 8, 3, 8, 1, 5, 3, 3, 0, 1, 9], [1, 1, 7, 3, 4, 0], [28], [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [5, 9, 9, 0, 6, 3, 8, 5, 6, 0, 9, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [0, 0, 2, 2, 0, 3, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [44, 5, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 13, 6, 6, 0, 0, 2, 1, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.pow(sigma, sigma)), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.pow(sigma, sigma)), tf.math.add(sigma, tf.math.subtract(sigma, sigma)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3027697118707007, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [5, 7, 3, 0, 5, 4, 8, 6, 4, 8, 3, 8, 4, 0, 2, 0, 5, 2, 6, 0, 0, 8, 3, 2, 3, 5, 0, 8, 5, 8, 5, 6, 2, 5, 5], [3, 0, 0, 0, 2, 2, 1, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [71, 5, 95, 41, 55, 68], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [62, 19, 41, 7, 45, 13], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 6, 4, 2, 6, 1, 7, 7, 4, 8, 3, 8, 1, 5, 3, 3, 0, 1, 9], [1, 1, 7, 3, 4, 0], [28], [1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 5, 6, 8, 6, 0, 8, 8, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [0, 0, 2, 2, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [44, 50, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027697118707007, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [3, 0, 1, 0, 5, 4, 8, 6, 4, 8, 3, 8, 4, 0, 2, 0, 5, 2, 6, 0, 0, 8, 3, 2, 3, 5, 0, 8, 5, 8, 5, 6, 2, 5, 5], [2, 0, 0, 0, 2, 2, 1, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [71, 30, 95, 41, 55, 68], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 6, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [5, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [62, 19, 41, 7, 45, 13], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [9, 6, 1, 2, 4, 1, 7, 7, 4, 8, 3, 8, 1, 5, 3, 3, 0, 1, 9], [1, 1, 7, 3, 4, 0], [28], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 3, 6, 8, 8, 0, 8, 5, 6, 2, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [0, 0, 2, 2, 0, 3, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [44, 5, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 5, 2, 0, 1, 1, 1, 0, 1, 12, 8, 4, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), grad))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.divide_no_nan(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.sqrt(tf.math.negative(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))), beta), tf.math.sqrt(tf.math.square(beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [3, 0, 1, 0, 5, 4, 8, 6, 4, 8, 3, 8, 4, 0, 2, 0, 5, 2, 6, 0, 0, 8, 3, 2, 3, 5, 0, 8, 5, 8, 5, 6, 2, 5, 5], [2, 3, 1, 0, 2, 2, 2, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [71, 30, 95, 41, 55, 68], [1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [5, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [68, 19, 41, 7, 45, 13], [1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 6, 4, 2, 6, 1, 7, 7, 4, 8, 3, 8, 1, 5, 3, 3, 0, 1, 9], [1, 1, 7, 3, 4, 0], [28], [1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 9, 9, 0, 6, 3, 8, 5, 6, 0, 9, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [0, 0, 2, 2, 0, 3, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [44, 5, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 5, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.square(tf.math.add(beta, tf.math.negative(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027697118707007, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [5, 7, 3, 0, 5, 4, 8, 6, 4, 8, 3, 8, 4, 0, 2, 0, 5, 2, 6, 0, 0, 8, 3, 2, 3, 5, 0, 8, 5, 8, 5, 6, 2, 5, 5], [2, 2, 1, 0, 2, 2, 2, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [71, 5, 95, 41, 55, 68], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [2, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [62, 19, 41, 7, 45, 13], [1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 6, 4, 2, 6, 1, 7, 7, 4, 8, 3, 8, 1, 5, 3, 3, 0, 1, 9], [1, 1, 7, 3, 4, 0], [28], [1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [5, 5, 6, 8, 6, 0, 8, 5, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [0, 0, 2, 2, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [64, 29, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027697118707007, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [5, 7, 3, 0, 5, 4, 8, 6, 4, 8, 3, 8, 4, 0, 2, 0, 5, 2, 6, 0, 0, 8, 3, 2, 3, 5, 0, 8, 5, 8, 5, 6, 2, 5, 5], [3, 0, 0, 0, 2, 2, 1, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [71, 5, 95, 41, 55, 68], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [4, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [62, 19, 41, 7, 45, 13], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 6, 4, 2, 6, 1, 7, 7, 4, 8, 3, 8, 1, 5, 3, 3, 0, 1, 9], [1, 1, 7, 3, 4, 0], [28], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 5, 6, 8, 6, 0, 8, 5, 6, 0, 2, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [0, 0, 2, 2, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [36, 7, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 1, 0, 1, 1], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3027697118707007, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0], [3, 0, 1, 0, 5, 4, 8, 6, 4, 8, 3, 8, 4, 0, 2, 0, 5, 2, 6, 0, 0, 8, 3, 2, 3, 5, 0, 8, 5, 8, 5, 6, 2, 5, 5], [3, 2, 0, 0, 2, 2, 1, 2, 0, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 1, 0, 0, 0, 3, 3, 3, 0, 1, 0, 0, 0, 0, 1, 0], [71, 5, 95, 41, 55, 68], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 8, 5, 0, 9, 0, 9, 1, 0, 2, 9, 1, 4, 9, 8, 0, 4, 1, 5, 8, 1, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 3, 3, 4, 2, 2, 1, 3, 1, 0, 2, 3, 3, 0, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [62, 19, 41, 7, 45, 13], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [6, 9, 4, 2, 6, 5, 7, 7, 4, 8, 3, 8, 1, 5, 3, 3, 0, 1, 9], [1, 1, 7, 3, 4, 0], [28], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 9, 9, 0, 6, 3, 8, 5, 6, 0, 9, 3, 1, 6, 5, 6, 0, 7, 0, 8, 2, 7, 5, 8, 0, 2, 5, 9, 1, 1, 1, 6, 8, 6, 9, 0, 9, 9], [0, 0, 2, 2, 0, 2, 1, 2, 2, 3, 2, 0, 3, 3, 0, 1, 1, 2, 3], [14, 7, 76, 58]], "fitness": -0.042571429163217545, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 3, 2, 1, 2], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3036101079809037, 2.301293317148352, 2.3029016616747224, 2.302557805683225, 2.3016865643622335, 2.3018963320254335, 2.3029975710039867, 2.3025314584620453, 2.3019057722800853, 2.3036698703012606, 2.302366265499864, 2.302457360165734, 2.302118768781451, 2.3013129995137223, 2.302571124467458, 2.3017617666080503], "accuracy": [0.08757099509239197, 0.09008057415485382, 0.08915598690509796, 0.08532558381557465, 0.09325055778026581, 0.08955223858356476, 0.0886276587843895, 0.09496764093637466, 0.09232597798109055, 0.09126931428909302, 0.0866464152932167, 0.08638224750757217, 0.09417514503002167, 0.09245806187391281, 0.09470347315073013, 0.09351472556591034], "val_loss": [1.9711740357535226, 1.9711604799543108, 1.9711466516767229, 1.9711328915187292, 1.9711193357195174, 1.9711059842790877, 1.97109283719744, 1.9710797582353865, 1.971067224230085, 1.9710548264639718, 1.9710424968174525, 1.9710297584533691, 1.971017633165632, 1.9710057803562708, 1.97099392754691, 1.9709820066179549], "val_accuracy": [0.03700000047683716, 0.03700000047683716, 0.03799999877810478, 0.03799999877810478, 0.03799999877810478, 0.03866666555404663, 0.03933333232998848, 0.03933333232998848, 0.03966666758060455, 0.04100000113248825, 0.041333332657814026, 0.041333332657814026, 0.041333332657814026, 0.04066666588187218, 0.04100000113248825, 0.04100000113248825]}}]