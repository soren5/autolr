[{"genotype": [[0], [1, 1, 1], [0, 0, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 1, 6, 0, 2, 4, 3, 8, 2, 5, 6, 2, 6, 8, 6, 4, 1, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 2, 1, 3, 3, 3, 2, 1, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8248571157455444, "mapping_values": [1, 2, 2, 2, 0, 1, 38, 38, 23, 15, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.subtract(alpha, tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(grad)), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(grad, tf.math.square(tf.math.add(beta, beta)))))), alpha)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.pow(tf.math.subtract(tf.math.add(beta, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), tf.math.square(grad)), tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad)))))))))))), tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha)))), tf.math.add(beta, beta)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.0667585304400324, 1.3975940366163544, 1.0552886102602954, 0.922661825351239, 0.801374587518601, 0.7600246295637978, 0.7022785578484485, 0.7108539737305385, 0.6717553073152842, 0.6845949073477727, 0.6493424408313951, 0.6245197297370728, 0.6192011694315481, 0.6028605442021296, 0.586302583968052, 0.5819617636593309, 0.5663426350435607, 0.5636609873956205, 0.5411178085860985, 0.530063744978331, 0.5080961718527459, 0.5282479563976212, 0.4958032065489037, 0.49835631440674955, 0.4960074816413323, 0.4893355830990171, 0.47786974577840136, 0.4617432744086395, 0.4739635298162671, 0.4532688385019087, 0.4436225701379833, 0.43613455377360694, 0.45196463589843994, 0.43184269977881845, 0.41817605117560536, 0.4197794080977238, 0.40432557260922436, 0.42211050310422715, 0.39350223962452274], "accuracy": [0.30405494570732117, 0.49848103523254395, 0.6181482076644897, 0.6548672318458557, 0.6929071545600891, 0.7108704447746277, 0.7323999404907227, 0.7279091477394104, 0.7478536367416382, 0.7310791015625, 0.7506273984909058, 0.7602694630622864, 0.76106196641922, 0.7671377658843994, 0.7837802171707153, 0.7757231593132019, 0.7832518815994263, 0.7839123010635376, 0.7967243194580078, 0.7992339134216309, 0.8109893202781677, 0.7977809906005859, 0.816008448600769, 0.8115176558494568, 0.8105930685997009, 0.8186501264572144, 0.8165367841720581, 0.8256505131721497, 0.8197067975997925, 0.8269713521003723, 0.8359529972076416, 0.8421608805656433, 0.8272355198860168, 0.8372738361358643, 0.8433496356010437, 0.8437458872795105, 0.8515387773513794, 0.8433496356010437, 0.8507462739944458], "val_loss": [1.3866345201219832, 0.8518396445683071, 0.7471641642706734, 0.6336668900081089, 0.6188739197594779, 0.597397906439645, 0.5538491691861834, 0.5343845401491437, 0.5542651074273246, 0.5476863213947841, 0.5365805796214512, 0.5086287770952497, 0.5269761426108224, 0.480276312146868, 0.5116581405912127, 0.48539081641605925, 0.4777986322130476, 0.482115490095956, 0.4351931299482073, 0.44362800461905344, 0.45057691846575054, 0.4341027225766863, 0.42792941842760357, 0.4298260382243565, 0.45485222339630127, 0.42073103359767366, 0.4049550805773054, 0.4231650488717215, 0.39894095488957, 0.40287844623838154, 0.4256949850491115, 0.3919606464249747, 0.3774446589606149, 0.3832431946481977, 0.3768645439829145, 0.3760577780859811, 0.3941477792603629, 0.38207065207617624, 0.3781390530722482], "val_accuracy": [0.40833333134651184, 0.6433333158493042, 0.6736666560173035, 0.7166666388511658, 0.718999981880188, 0.7200000286102295, 0.750333309173584, 0.7586666941642761, 0.7440000176429749, 0.765333354473114, 0.7590000033378601, 0.7773333191871643, 0.7736666798591614, 0.7866666913032532, 0.7559999823570251, 0.7919999957084656, 0.7836666703224182, 0.7860000133514404, 0.812333345413208, 0.8053333163261414, 0.8043333292007446, 0.812333345413208, 0.8226666450500488, 0.8183333277702332, 0.7846666574478149, 0.8149999976158142, 0.8270000219345093, 0.8009999990463257, 0.8379999995231628, 0.8220000267028809, 0.8136666417121887, 0.8309999704360962, 0.8389999866485596, 0.8446666598320007, 0.843999981880188, 0.8403333425521851, 0.8306666612625122, 0.8330000042915344, 0.8389999866485596]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 1, 0, 0, 2, 5, 3, 6, 2, 5, 6, 2, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 2, 3, 3, 1, 3, 3, 3, 3, 3, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8162857294082642, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.subtract(tf.math.add(beta, alpha), tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0672308552014815, 1.3952122322714104, 1.0574884204470234, 0.8891308290170185, 0.7908036883370815, 0.7923126382330831, 0.7171329526837633, 0.6963614813797446, 0.6942832088190188, 0.6869127726857185, 0.6442893613535793, 0.6275908635229782, 0.6161972179688073, 0.5968998716791087, 0.5775961799864693, 0.6041038632550338, 0.5711493559438539, 0.5627041347920225, 0.5408692144998045, 0.5332418788677634, 0.5138505226538214, 0.5382517594876086, 0.49627509210497367, 0.4985364437922038, 0.4965915717720875, 0.4921598742587959, 0.4783781771772589, 0.4657207063680091, 0.4746617165971914, 0.45754644429804925, 0.44761255626366075, 0.43747356231296697, 0.4494602119193621, 0.43027539987212016, 0.41780022371635617, 0.42371249580348663, 0.4108430250343504, 0.4271080706019081, 0.39531062749067963], "accuracy": [0.30445119738578796, 0.4991414546966553, 0.6181482076644897, 0.6667547225952148, 0.7038700580596924, 0.6960771083831787, 0.7283053994178772, 0.7375511527061462, 0.7404569983482361, 0.735041618347168, 0.7530049085617065, 0.7556465268135071, 0.7619865536689758, 0.7745344042778015, 0.7840443849563599, 0.7732135653495789, 0.783119797706604, 0.7833839654922485, 0.8001585006713867, 0.7931581139564514, 0.8070268034934998, 0.7960638999938965, 0.8137630224227905, 0.8087438941001892, 0.8124422430992126, 0.8149517774581909, 0.8173292875289917, 0.8247259259223938, 0.8166688680648804, 0.8274996876716614, 0.834632158279419, 0.8405758738517761, 0.8286884427070618, 0.8384625315666199, 0.8450667262077332, 0.8421608805656433, 0.8479725122451782, 0.8407079577445984, 0.8498216867446899], "val_loss": [1.3869917392730713, 0.8186615875789097, 0.7572589772088187, 0.6246872459139142, 0.5889779329299927, 0.5844179051262992, 0.5541344370160785, 0.628426330430167, 0.5441467932292393, 0.5784362724849156, 0.5320473398481097, 0.5045600618634906, 0.5191911458969116, 0.47943716389792307, 0.5577340466635567, 0.4956680195672171, 0.4630075522831508, 0.4754537854875837, 0.43576111112322125, 0.43888444559914724, 0.46078096117292133, 0.4314343844141279, 0.4480994939804077, 0.4280968223299299, 0.45811457293374197, 0.4168326599257333, 0.40804373366492136, 0.4236938868250166, 0.40496253967285156, 0.4087020073618208, 0.4284255589757647, 0.38561876331056866, 0.38110750913619995, 0.3869929739407131, 0.37819152218954905, 0.38179294552121845, 0.4374827572277614, 0.38645563806806293, 0.3735718641962324], "val_accuracy": [0.4073333442211151, 0.6506666541099548, 0.6296666860580444, 0.7239999771118164, 0.734666645526886, 0.7263333201408386, 0.7513333559036255, 0.7053333520889282, 0.7393333315849304, 0.7406666874885559, 0.7580000162124634, 0.7806666493415833, 0.7743333578109741, 0.7903333306312561, 0.7490000128746033, 0.7823333144187927, 0.7943333387374878, 0.7919999957084656, 0.8130000233650208, 0.8076666593551636, 0.8016666769981384, 0.8080000281333923, 0.8096666932106018, 0.8133333325386047, 0.7839999794960022, 0.8196666836738586, 0.824999988079071, 0.8019999861717224, 0.8333333134651184, 0.8183333277702332, 0.8109999895095825, 0.8356666564941406, 0.8379999995231628, 0.843999981880188, 0.8426666855812073, 0.8363333344459534, 0.8153333067893982, 0.8320000171661377, 0.8393333554267883]}}, {"genotype": [[0], [1, 1, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [9, 0, 1, 4, 0, 2, 6, 3, 6, 1, 5, 0, 4, 6, 8, 6, 4, 8, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [1, 1, 3, 3, 2, 3, 1, 3, 3, 3, 3, 1, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8142856955528259, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.0671037873571825, 1.3949266070970658, 1.0485784924655401, 0.9320313121349489, 0.8034646538002711, 0.7623520111285023, 0.7102969820000917, 0.7108393114602892, 0.6758976892835475, 0.7068766423850059, 0.6425511407153072, 0.6268740203701478, 0.6140792443610265, 0.6018848190722039, 0.6024778061980002, 0.5774022166865329, 0.5621736313783103, 0.5690853651472764, 0.5472856956214134, 0.5287151834543087, 0.5100119680918093, 0.5289179555350417, 0.49659224749083813, 0.4927328954661259, 0.498480563638642, 0.4940039244278815, 0.47573749107565655, 0.4666155884452012, 0.474813224436065, 0.45839977034519785, 0.44751141960468777, 0.4402373711966158, 0.4556095861110075, 0.4292684549574272, 0.4170080549791583, 0.41953876542928525, 0.41209594607589395, 0.43074016555063227, 0.3976084398965101], "accuracy": [0.30418702960014343, 0.49887728691101074, 0.6192048788070679, 0.6472064256668091, 0.6896050572395325, 0.7088891863822937, 0.7268524765968323, 0.7290979027748108, 0.7428345084190369, 0.7283053994178772, 0.7519482374191284, 0.7586844563484192, 0.7630431652069092, 0.7643640041351318, 0.7770439982414246, 0.7812706232070923, 0.7873464822769165, 0.7800818681716919, 0.7968564033508301, 0.798309326171875, 0.8105930685997009, 0.7977809906005859, 0.8127063512802124, 0.8138951063156128, 0.8112534880638123, 0.8157442808151245, 0.817989706993103, 0.8256505131721497, 0.8166688680648804, 0.8245938420295715, 0.833179235458374, 0.8359529972076416, 0.8264430165290833, 0.8393871188163757, 0.8450667262077332, 0.8453308939933777, 0.8461233377456665, 0.8374059200286865, 0.8521991968154907], "val_loss": [1.3866964748927526, 0.8272887468338013, 0.7635304757526943, 0.6437356131417411, 0.654361503464835, 0.5963605301720756, 0.5568960905075073, 0.5475967441286359, 0.5847318513052804, 0.5700809614998954, 0.5344028643199376, 0.5068050793239048, 0.5200067928859166, 0.47762952532087055, 0.4828329086303711, 0.511716195515224, 0.4652086155755179, 0.4950092349733625, 0.4375218323298863, 0.44150253704616, 0.4583336796079363, 0.4311859352248056, 0.43861384051186697, 0.4361772196633475, 0.4541741098676409, 0.4174711193357195, 0.4084237217903137, 0.42234523807253155, 0.405334540775844, 0.40531717027936665, 0.4329504796436855, 0.392339289188385, 0.37951947110039846, 0.3844220297677176, 0.37612559114183697, 0.3758936694690159, 0.4590678555624826, 0.3794616971697126, 0.3683236411639622], "val_accuracy": [0.40700000524520874, 0.6506666541099548, 0.6683333516120911, 0.6949999928474426, 0.6940000057220459, 0.7226666808128357, 0.7493333220481873, 0.7476666569709778, 0.7210000157356262, 0.7506666779518127, 0.749666690826416, 0.7803333401679993, 0.7793333530426025, 0.7873333096504211, 0.7789999842643738, 0.7613333463668823, 0.7903333306312561, 0.7789999842643738, 0.8103333115577698, 0.8040000200271606, 0.8053333163261414, 0.8106666803359985, 0.8203333616256714, 0.8103333115577698, 0.7910000085830688, 0.8190000057220459, 0.8243333101272583, 0.8043333292007446, 0.8343333601951599, 0.8209999799728394, 0.8076666593551636, 0.8236666917800903, 0.8360000252723694, 0.8456666469573975, 0.8426666855812073, 0.840666651725769, 0.7993333339691162, 0.8386666774749756, 0.8433333039283752]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 1, 4, 0, 2, 4, 3, 6, 2, 5, 6, 6, 6, 8, 6, 4, 1, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 3, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [2, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.8131428360939026, "mapping_values": [1, 1, 1, 0, 1, 0, 22, 22, 12, 10, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), alpha)), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.divide_no_nan(grad, tf.math.add(beta, grad))))), alpha), tf.math.add(beta, grad)))), grad)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(sigma), tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.067229058118686, 1.3950820421230965, 1.0560352419266974, 0.8936790222457812, 0.7830016873673583, 0.7929082692275666, 0.7144478580041915, 0.7109818268115132, 0.6701843516071789, 0.6967589456596395, 0.6533795391894477, 0.6288640918575494, 0.6071572791489281, 0.5955144802671555, 0.6000892326202312, 0.576359642164472, 0.5703948443009318, 0.568275461296411, 0.5422051783487262, 0.5276716325961998, 0.51348594823817, 0.534383521954208, 0.49583640703671894, 0.4958018457270758, 0.5029156311643815, 0.48353931114516474, 0.47518946542369533, 0.4580623735730926, 0.482124031979599, 0.4578834062262832, 0.44873537235980526, 0.4411492484506441, 0.4569714373254883, 0.4316805820730557, 0.4177337050351327, 0.4207974394448539, 0.4040822934213174, 0.42438881145476537, 0.39698246588654695, 0.4065581464795798], "accuracy": [0.30445119738578796, 0.49887728691101074, 0.618280291557312, 0.6631884574890137, 0.7108704447746277, 0.6980583667755127, 0.7272487282752991, 0.7283053994178772, 0.7478536367416382, 0.7347774505615234, 0.7464007139205933, 0.7547219395637512, 0.7662131786346436, 0.7711002230644226, 0.7717606425285339, 0.78113853931427, 0.7824593782424927, 0.7803460359573364, 0.7980451583862305, 0.7951393723487854, 0.8064984679222107, 0.7965922355651855, 0.8127063512802124, 0.8112534880638123, 0.8104609847068787, 0.8182538747787476, 0.8186501264572144, 0.8305375576019287, 0.8158763647079468, 0.8261788487434387, 0.835160493850708, 0.8368775844573975, 0.8238013386726379, 0.839519202709198, 0.843481719493866, 0.8450667262077332, 0.8510104417800903, 0.8429533839225769, 0.850350022315979, 0.8474441766738892], "val_loss": [1.3869919095720564, 0.8193739822932652, 0.7609410456248692, 0.6185377836227417, 0.589309709412711, 0.6039917469024658, 0.5510054997035435, 0.5423966986792428, 0.5521470989499774, 0.5739759887967791, 0.518797653062003, 0.4964979716709682, 0.49462967259543283, 0.5038240807397025, 0.4965067590985979, 0.4932870694569179, 0.47683773721967426, 0.48186046736580984, 0.43678615774427143, 0.44375172683170866, 0.4456720692770822, 0.42795549971716745, 0.4553313595908029, 0.4347944174494062, 0.4363170181001936, 0.42182756321770803, 0.4073803424835205, 0.4291737249919346, 0.40952315500804354, 0.41258994170597624, 0.4339331899370466, 0.39468921082360403, 0.3791188512529646, 0.3891161595072065, 0.37612255981990267, 0.3759640540395464, 0.40909275838306974, 0.39126462595803396, 0.3692568029676165, 0.4158616321427481], "val_accuracy": [0.4073333442211151, 0.6503333449363708, 0.6313333511352539, 0.7296666502952576, 0.737666666507721, 0.7160000205039978, 0.7590000033378601, 0.7609999775886536, 0.734000027179718, 0.7639999985694885, 0.765333354473114, 0.7803333401679993, 0.7649999856948853, 0.765999972820282, 0.7683333158493042, 0.7883333563804626, 0.7863333225250244, 0.7910000085830688, 0.8080000281333923, 0.8009999990463257, 0.8116666674613953, 0.8106666803359985, 0.8059999942779541, 0.8136666417121887, 0.8109999895095825, 0.8146666884422302, 0.8286666870117188, 0.8016666769981384, 0.831333339214325, 0.8146666884422302, 0.8073333501815796, 0.8240000009536743, 0.8426666855812073, 0.8433333039283752, 0.8443333506584167, 0.8389999866485596, 0.8256666660308838, 0.8336666822433472, 0.8420000076293945, 0.812666654586792]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 0, 1, 0, 0, 2, 5, 3, 6, 2, 5, 6, 2, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 2, 3, 3, 1, 3, 3, 3, 3, 3, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.7968571186065674, "mapping_values": [1, 1, 1, 0, 1, 0, 22, 22, 13, 9, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(grad)), alpha))))), tf.math.add(beta, grad))))), tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.square(tf.math.divide_no_nan(tf.math.add(beta, grad), grad)))), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), grad)))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.002023902000485, 1.4730379479105573, 1.005958148871336, 0.9364192058239883, 0.8149422080037206, 0.8119013489371262, 0.7332185021307742, 0.7264466636358172, 0.6856460511771018, 0.6747132086750696, 0.6550792954491114, 0.628141313031554, 0.6274549911019353, 0.6147649695041583, 0.5962624980426814, 0.5620533965440427, 0.5808782337553009, 0.5587426501336965, 0.5237654049194027, 0.5193981505293714, 0.5492169696184717, 0.508784905597597, 0.5071809320575164], "accuracy": [0.3343019485473633, 0.5021793842315674, 0.6494518518447876, 0.6472064256668091, 0.6922467350959778, 0.6931713223457336, 0.7218332886695862, 0.7180029153823853, 0.7375511527061462, 0.739400327205658, 0.7534011602401733, 0.7598732113838196, 0.7530049085617065, 0.7609298825263977, 0.7717606425285339, 0.7930260300636292, 0.7774402499198914, 0.785629391670227, 0.8037247657775879, 0.8034605979919434, 0.7943468689918518, 0.8123101592063904, 0.8140271902084351], "val_loss": [1.5620053155081612, 0.7515667847224644, 0.7698407173156738, 0.6538713148662022, 0.6167545148304531, 0.6009051288877215, 0.5556548152651105, 0.5442640440804618, 0.5318599087851388, 0.5389209304537091, 0.5087310246058873, 0.5055694920676095, 0.47766893250601633, 0.5061473335538592, 0.4732388598578317, 0.4760252407618931, 0.4590572118759155, 0.44087932791028706, 0.44948298590523855, 0.4587715353284563, 0.4438900947570801, 0.43623852729797363, 0.4214372549738203], "val_accuracy": [0.3853333294391632, 0.6926666498184204, 0.6370000243186951, 0.6959999799728394, 0.7046666741371155, 0.7356666922569275, 0.7519999742507935, 0.7596666812896729, 0.762666642665863, 0.765999972820282, 0.7676666378974915, 0.781333327293396, 0.7910000085830688, 0.762666642665863, 0.7870000004768372, 0.7856666445732117, 0.7953333258628845, 0.8183333277702332, 0.8040000200271606, 0.793666660785675, 0.7993333339691162, 0.8053333163261414, 0.8183333277702332]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 1, 0, 8, 2, 5, 3, 6, 2, 5, 6, 8, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 2, 3, 2, 3, 3, 1, 3, 3, 3, 3, 3, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.7945713996887207, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(beta, grad)))))), tf.math.add(beta, beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.0021944470519575, 1.4777194295876124, 1.0289437150785148, 0.9292649563513632, 0.802932856687859, 0.7970611939671458, 0.7292972824451017, 0.7350516378005671, 0.6862385993415748, 0.6685452168927201, 0.6508751020077559, 0.6205584091470069, 0.6333412007097681, 0.6120196010190672, 0.5974719557527852, 0.5664992614696842, 0.5801280298017004, 0.5493656344590737, 0.5326810294233056, 0.5079089722314043, 0.5556672322846139, 0.5087318699578126, 0.5075794987832204, 0.5107089468060136], "accuracy": [0.334169864654541, 0.5001981258392334, 0.640338122844696, 0.6485272645950317, 0.6985867023468018, 0.6927750706672668, 0.7223616242408752, 0.7132478952407837, 0.7360982894897461, 0.7408532500267029, 0.7557786107063293, 0.7675340175628662, 0.7520803213119507, 0.7646281719207764, 0.7701756954193115, 0.7902522683143616, 0.7761194109916687, 0.7864218950271606, 0.7993659973144531, 0.81112140417099, 0.7882710099220276, 0.8117818236351013, 0.8129705190658569, 0.805177628993988], "val_loss": [1.5621485710144043, 0.753288813999721, 0.7365071092333112, 0.7050847155707223, 0.6073689971651349, 0.5858141524451119, 0.5591629062380109, 0.5457294838769096, 0.5350361381258283, 0.5542135068348476, 0.5109549249921527, 0.5072134733200073, 0.4791285480771746, 0.5097730500357491, 0.4747698988233294, 0.47013522897447857, 0.4522906541824341, 0.4421361344201224, 0.4386435065950666, 0.4456996066229684, 0.44974333899361746, 0.43269232341221403, 0.43109170879636494, 0.4306541681289673], "val_accuracy": [0.3853333294391632, 0.6863333582878113, 0.6573333144187927, 0.6779999732971191, 0.7103333473205566, 0.7266666889190674, 0.7509999871253967, 0.7630000114440918, 0.7490000128746033, 0.7583333253860474, 0.7646666765213013, 0.7746666669845581, 0.7876666784286499, 0.7590000033378601, 0.7836666703224182, 0.7876666784286499, 0.8006666898727417, 0.8149999976158142, 0.8203333616256714, 0.7990000247955322, 0.7960000038146973, 0.8116666674613953, 0.815666675567627, 0.8136666417121887]}}, {"genotype": [[0], [0, 1, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [9, 0, 1, 4, 0, 2, 6, 3, 6, 1, 5, 0, 4, 6, 8, 6, 4, 8, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 2, 3, 3, 1, 3, 3, 3, 3, 3, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.7794285416603088, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.067237964647636, 1.3965434344878302, 1.070987029003823, 0.8932362519487052, 0.8591368214927565, 0.7487164217451733, 0.7138903481282295, 0.6997205926804825, 0.6773350657552004, 0.6939243139954228, 0.6401037682143531, 0.62664196204988, 0.6111769602440761, 0.6033787418507692, 0.5997058241878439, 0.5724664890786613, 0.5647721788067906], "accuracy": [0.3043191134929657, 0.4975564777851105, 0.6131290197372437, 0.6601505875587463, 0.6740192770957947, 0.7165499925613403, 0.7312111854553223, 0.7321357727050781, 0.7421740889549255, 0.7302865982055664, 0.7523444890975952, 0.7572315335273743, 0.7644960880279541, 0.7691190242767334, 0.7734777331352234, 0.7823272943496704, 0.7860256433486938], "val_loss": [1.3873208590916224, 0.8206432887486049, 0.7254414217812675, 0.6586496319089618, 0.6217424699238369, 0.6006536994661603, 0.5593306847981044, 0.5512563330786568, 0.5599746363503593, 0.5692269802093506, 0.5200161082404, 0.5008442061288017, 0.5361273118427822, 0.4756953716278076, 0.4847269058227539, 0.5070476531982422, 0.4941647393362863], "val_accuracy": [0.40666666626930237, 0.6523333191871643, 0.6579999923706055, 0.6909999847412109, 0.7093333601951599, 0.7196666598320007, 0.7536666393280029, 0.7459999918937683, 0.7296666502952576, 0.7596666812896729, 0.7646666765213013, 0.7873333096504211, 0.7609999775886536, 0.7850000262260437, 0.7786666750907898, 0.765999972820282, 0.7733333110809326]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [2, 5, 1, 5, 0, 2, 4, 3, 6, 2, 5, 6, 2, 6, 8, 6, 4, 1, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 2, 3, 3, 1, 3, 3, 3, 3, 3, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 1, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 26, 26, 15, 11, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(grad, alpha)), tf.math.add(beta, grad)))))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, grad))), grad))))), tf.math.add(tf.math.square(alpha), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(grad)), grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(sigma), sigma)", "other_info": {"loss": [2.301284031987017, 2.304612654138156, 2.3057583960811647, 2.308456038219455, 2.310046621837069, 2.315872305530079, 2.3186527714989427, 2.3246149684239406, 2.3301052347764424, 2.34370510786941, 2.3730223714211016, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09457138925790787, 0.0882314071059227, 0.08796724677085876, 0.08321225643157959, 0.0796460211277008, 0.07660810649394989, 0.07766477018594742, 0.07766477018594742, 0.07687227427959442, 0.07819310575723648, 0.07740060985088348, 0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.972193922315325, 1.9736159188406808, 1.9751477922712053, 1.9769413811819894, 1.9789671897888184, 1.9815247399466378, 1.98441743850708, 1.9880381311689104, 1.993929181780134, 2.0064191137041365, 2.0520970480782643, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.028333334252238274, 0.025333333760499954, 0.022333333268761635, 0.02266666665673256, 0.02199999988079071, 0.03433333337306976, 0.04766666516661644, 0.06733333319425583, 0.08533333241939545, 0.0976666659116745, 0.09833333641290665, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 4, 0, 2, 6, 3, 6, 1, 5, 0, 4, 6, 8, 6, 4, 8, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [93, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [4, 1], [52], [1, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [2, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 35, 35, 22, 13, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, alpha))), tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.multiply(tf.math.divide_no_nan(tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.pow(grad, tf.math.add(beta, grad)))))), tf.math.divide_no_nan(tf.math.add(beta, grad), alpha)), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(grad, tf.math.add(beta, grad))))))), tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad)))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1], [0, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [1, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 1, 2, 0, 2, 5, 3, 6, 2, 5, 6, 2, 6, 8, 5, 4, 0, 5, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 2, 3, 1, 3, 3, 3, 3, 1, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [5, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 0, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3029932981752337, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 0, 1, 0, 0, 2, 5, 3, 6, 2, 5, 6, 2, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 2, 3, 3, 1, 3, 3, 3, 3, 3, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 6, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 0, 1, 1, 0, 1, 0, 5, 2, 3, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, grad))))))))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.divide_no_nan(sigma, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07370228320360184, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1], [9, 0, 1, 4, 0, 2, 6, 3, 6, 1, 5, 0, 4, 6, 8, 6, 4, 8, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 2, 3, 1, 3, 3, 3, 3, 1, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [4, 1], [52], [0, 0, 1, 1, 1, 0, 0, 1, 0], [3, 8, 2, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.sqrt(sigma), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1], [0, 0, 1], [4, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [9, 0, 1, 4, 0, 2, 6, 3, 6, 1, 5, 0, 4, 6, 8, 6, 4, 8, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 2, 3, 1, 3, 3, 3, 3, 1, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [0, 1, 1], [9], [1, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [4, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, grad: tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 0, 1, 0, 4, 2, 5, 3, 6, 2, 5, 6, 2, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 2, 3, 3, 1, 3, 3, 3, 3, 3, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [2, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 12, 9, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, grad)))))), tf.math.add(beta, beta))))), tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(tf.math.square(tf.math.add(beta, grad)), alpha))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [0, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 8, 1, 0, 0, 2, 5, 3, 6, 2, 0, 6, 2, 6, 8, 5, 4, 0, 5, 8, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [1, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 0, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07370228320360184, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [9, 0, 1, 4, 0, 2, 6, 3, 6, 1, 5, 0, 4, 6, 8, 6, 4, 8, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 2, 3, 1, 3, 3, 3, 3, 1, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.0965714305639267, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3100069636099407, 2.413492800678953, 2.6777122593543248, 3.1616995827144936, 3.9437887335749444, 4.9514929907842475, 6.2552865861256075], "accuracy": [0.09351472556591034, 0.09245806187391281, 0.10117553919553757, 0.10355303436517715, 0.09959053993225098, 0.10249637067317963, 0.09576013684272766], "val_loss": [1.9869770322527205, 2.066084589276995, 2.253718989236014, 2.5913193566458568, 3.1030571120125905, 3.791754722595215, 4.648372513907296], "val_accuracy": [0.09433333575725555, 0.10000000149011612, 0.09966666996479034, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [2, 0, 1, 4, 0, 2, 4, 3, 6, 2, 5, 6, 2, 6, 8, 6, 4, 1, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [5, 1, 3, 3, 3, 3, 1, 3, 3, 3, 3, 1, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 1, 1, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.06485714018344879, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.subtract(tf.math.add(beta, alpha), tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, sigma)", "other_info": {"loss": [2.300514083512628, 2.301620013867198, 2.3004716750164986, 2.300700768535132, 2.3001390904199965, 2.3011846586130926, 2.300570382764547, 2.3007306495850917, 2.300038493304693, 2.2998991540992706, 2.3002327453694904, 2.299051839976877, 2.3002324991726275, 2.299914556235496, 2.300277100483566], "accuracy": [0.09734513610601425, 0.09285431355237961, 0.1002509593963623, 0.09536388516426086, 0.09377889335155487, 0.0944393053650856, 0.10117553919553757, 0.09813763201236725, 0.10051512718200684, 0.1026284471154213, 0.09628847241401672, 0.09760929644107819, 0.09457138925790787, 0.10130762308835983, 0.09893012791872025], "val_loss": [1.9706096649169922, 1.9701955659048898, 1.969977787562779, 1.9698315347943987, 1.9698664120265417, 1.9697656631469727, 1.969679832458496, 1.9695187977382116, 1.9693945475987025, 1.9694064685276575, 1.9695660046168737, 1.9697822843279158, 1.969975403376988, 1.9702321461268835, 1.970461164202009], "val_accuracy": [0.04100000113248825, 0.05000000074505806, 0.05666666850447655, 0.05966666713356972, 0.06266666948795319, 0.06199999898672104, 0.0676666647195816, 0.07633333653211594, 0.07966666668653488, 0.08299999684095383, 0.08100000023841858, 0.0806666687130928, 0.07966666668653488, 0.07900000363588333, 0.07800000160932541]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [2, 0, 1, 4, 0, 2, 4, 3, 6, 2, 5, 6, 2, 6, 8, 6, 4, 1, 6, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1, 3], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 5, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [44, 9, 76, 58]], "fitness": -0.04800000041723251, "mapping_values": [1, 1, 1, 0, 1, 0, 99, 99, 60, 39, 5, 1, 1, 0, 1, 0, 5, 3, 2, 0], "tree_depth": 67, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, grad)), grad)), tf.math.add(beta, grad))), grad), tf.math.add(beta, grad))))))), tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))), tf.math.add(beta, grad))), tf.math.subtract(alpha, tf.math.add(beta, grad))))), tf.math.add(beta, alpha))), tf.math.add(beta, tf.math.subtract(tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(alpha)), tf.math.multiply(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))))))), grad))))), tf.math.multiply(tf.math.multiply(beta, tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.square(tf.math.sqrt(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad))))), tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, alpha)))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(grad)), tf.math.add(beta, alpha)))))))))), tf.math.add(beta, grad))), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), alpha)))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), grad)))))))))), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.pow(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, alpha)))))), grad)), tf.math.add(beta, alpha)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.math.square(sigma)), sigma)", "other_info": {"loss": [2.300798347077869, 2.3024977644153353, 2.30171971836929, 2.3022259937506058, 2.301386767815542, 2.3031715110088022, 2.302350717276756, 2.3028180068588813, 2.302310313247592, 2.3023279024987504, 2.3025013810025388, 2.3006583148493758, 2.302465601399464, 2.3015560790485066, 2.3017368124240205, 2.3000740314030677, 2.3011745575506923, 2.301431029527226, 2.301725857513865, 2.30114427174654, 2.300740557575994, 2.3012829579854794, 2.3016110440885167, 2.300300371535088, 2.300694118889489, 2.3017576370319874, 2.29939956149216, 2.299319831088329, 2.3001723705171324, 2.298598959429893, 2.3009067893957247, 2.299282195057615, 2.3021415365118596, 2.2993824028493295, 2.300871492046265, 2.2993379539864613, 2.29903190426618, 2.2997913308950415, 2.299380687123607, 2.299549357167734, 2.2991974180904533, 2.2986188097369196, 2.30003902153521, 2.2994478130542118, 2.298366445576148, 2.3000351467530615, 2.2990325257731246, 2.2979468354585544, 2.2990559051537858, 2.299845296913654, 2.2995160816053057, 2.299347102035857, 2.2993270980526095, 2.2992030752648325, 2.29837219253145, 2.2988402719715597, 2.296979157994877, 2.2980665287022357, 2.2987559959007022, 2.298048713975311, 2.297843657905368, 2.2988966263012878, 2.2993268052490237, 2.297892115387257, 2.2981786659884653, 2.298664091820919, 2.299222685484256], "accuracy": [0.09628847241401672, 0.09074098616838455, 0.09589222073554993, 0.0940430611371994, 0.09259014576673508, 0.08849557489156723, 0.09272222965955734, 0.09047681838274002, 0.09074098616838455, 0.09153348207473755, 0.08585391938686371, 0.09325055778026581, 0.08572183549404144, 0.09747721254825592, 0.09153348207473755, 0.09457138925790787, 0.09457138925790787, 0.09298639744520187, 0.09985470771789551, 0.0944393053650856, 0.09351472556591034, 0.09509972482919693, 0.09589222073554993, 0.09615638852119446, 0.09826971590518951, 0.0940430611371994, 0.10170386731624603, 0.10157178342342377, 0.09589222073554993, 0.10051512718200684, 0.09906221181154251, 0.09708096832036972, 0.09126931428909302, 0.0948355570435524, 0.09747721254825592, 0.10355303436517715, 0.09813763201236725, 0.10249637067317963, 0.10315678268671036, 0.09932637959718704, 0.09760929644107819, 0.09919429570436478, 0.10460969805717468, 0.09655263274908066, 0.09774138033390045, 0.09060890227556229, 0.10130762308835983, 0.10817593336105347, 0.10077928751707077, 0.1026284471154213, 0.10051512718200684, 0.09800554811954498, 0.10091137140989304, 0.10038304328918457, 0.10077928751707077, 0.10077928751707077, 0.10342095047235489, 0.10157178342342377, 0.09893012791872025, 0.10394927859306335, 0.10434553027153015, 0.09826971590518951, 0.1026284471154213, 0.10342095047235489, 0.09998679161071777, 0.10368511080741882, 0.09628847241401672], "val_loss": [1.9711029870169503, 1.9710235595703125, 1.970940317426409, 1.9708708354404993, 1.9708097321646554, 1.970743247440883, 1.970674991607666, 1.970599923815046, 1.970536436353411, 1.9704598699297224, 1.9703960418701172, 1.970322949545724, 1.9702554430280412, 1.9701860291617257, 1.9701180458068848, 1.97004611151559, 1.9699736322675432, 1.9699054445539201, 1.9698442731584822, 1.9697777203151159, 1.969705309186663, 1.9696389607020788, 1.969566822052002, 1.9694997242518835, 1.9694314684186662, 1.9693625995091029, 1.9692999976021903, 1.9692280633108956, 1.9691595349993025, 1.9691032682146346, 1.969043186732701, 1.968984808240618, 1.968921116420201, 1.9688658714294434, 1.9688102177211217, 1.9687559945242745, 1.9687002726963587, 1.9686410767691476, 1.9685927799769811, 1.9685333796909876, 1.9684741156441825, 1.9684229578290666, 1.9683668272835868, 1.9683126040867396, 1.9682538849966866, 1.968193735395159, 1.9681394440787179, 1.9680934633527483, 1.9680394445146834, 1.9679839270455497, 1.9679323605128698, 1.9678762980869837, 1.967826979500907, 1.9677809987749373, 1.9677301134381975, 1.9676834515162878, 1.9676317487444197, 1.9675798416137695, 1.9675345420837402, 1.9674833161490304, 1.967437812260219, 1.9673929895673479, 1.9673450333731515, 1.967297145298549, 1.9672563416617257, 1.9672066824776786, 1.9671587944030762], "val_accuracy": [0.03700000047683716, 0.03799999877810478, 0.039000000804662704, 0.03933333232998848, 0.039000000804662704, 0.039000000804662704, 0.03933333232998848, 0.03999999910593033, 0.0403333343565464, 0.0403333343565464, 0.04066666588187218, 0.041333332657814026, 0.041333332657814026, 0.0416666679084301, 0.041999999433755875, 0.04266666620969772, 0.04266666620969772, 0.04333333298563957, 0.04333333298563957, 0.04399999976158142, 0.04399999976158142, 0.044333335012197495, 0.04500000178813934, 0.04500000178813934, 0.04600000008940697, 0.04600000008940697, 0.04633333161473274, 0.046666666865348816, 0.046666666865348816, 0.047333333641290665, 0.04766666516661644, 0.04800000041723251, 0.04833333194255829, 0.04833333194255829, 0.04866666719317436, 0.04866666719317436, 0.04933333396911621, 0.049666665494441986, 0.050333332270383835, 0.050999999046325684, 0.052000001072883606, 0.052000001072883606, 0.052000001072883606, 0.052000001072883606, 0.052666667848825455, 0.05299999937415123, 0.05366666615009308, 0.05433333292603493, 0.05433333292603493, 0.054999999701976776, 0.055666666477918625, 0.05700000002980232, 0.05666666850447655, 0.05666666850447655, 0.0573333315551281, 0.0573333315551281, 0.057999998331069946, 0.058666665107011795, 0.059333331882953644, 0.059333331882953644, 0.05966666713356972, 0.06066666543483734, 0.060333333909511566, 0.06066666543483734, 0.06066666543483734, 0.06066666543483734, 0.06066666543483734]}}, {"genotype": [[0], [1, 1, 1], [0, 1, 1], [1, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [9, 0, 1, 4, 0, 2, 6, 3, 6, 1, 5, 0, 4, 6, 8, 6, 4, 8, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 2, 3, 1, 3, 3, 3, 3, 1, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [1], [1, 1, 1], [9], [4, 1], [52], [0, 1, 0, 1, 1, 0, 0, 1, 1], [3, 5, 9, 8, 6, 7, 4, 5, 6], [3, 3, 2, 1, 0, 0, 2, 2], [70, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.math.square(sigma))", "other_info": {"loss": [2.3008353263316863, 2.3026273839462075, 2.3019488971341384, 2.3025250278365075, 2.3017425700547816, 2.3036042282594242], "accuracy": [0.09628847241401672, 0.09047681838274002, 0.09496764093637466, 0.09298639744520187, 0.09179764986038208, 0.08730682730674744], "val_loss": [1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105, 1.9711878640311105], "val_accuracy": [0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531, 0.03633333370089531]}}, {"genotype": [[0], [0, 1, 1], [1, 1, 1], [8, 9, 6, 5, 4, 5, 1, 7, 8, 6, 5, 7, 5, 0, 2, 2, 2, 1, 8], [2, 0, 0, 1, 1, 1, 1, 2, 1, 2, 2], [11, 80, 61], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [9, 0, 1, 4, 0, 2, 6, 3, 6, 1, 5, 0, 4, 6, 8, 6, 4, 8, 9, 5, 6, 2, 5, 0, 1, 1, 3, 4, 7, 3, 5, 2, 7, 7, 8, 3, 8, 3, 3, 9, 0, 7, 5, 8, 2, 3, 8, 8, 7, 8, 9, 2, 1, 9, 3, 2, 7, 6, 4, 6, 9], [3, 1, 3, 3, 2, 3, 1, 3, 3, 3, 3, 1, 3, 1, 2, 5, 1, 0, 3, 3, 2, 4, 5, 1, 3, 1, 4, 1, 4, 4, 5, 5, 2, 0, 4, 1, 5, 1], [10, 42, 20, 7, 45, 13], [0], [1, 1, 1], [9], [4, 1], [52], [0, 0, 0, 1, 1, 0, 0, 1, 1], [3, 0, 9, 8, 6, 7, 4, 5, 6], [0, 3, 2, 1, 0, 0, 2, 2], [4, 9, 76, 58]], "fitness": -0.03828571364283562, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 4, 3, 1, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.negative(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.300836733917692, 2.302635701671646, 2.301962499841487, 2.302540435137262, 2.3017603710516177, 2.3036326594309267], "accuracy": [0.09628847241401672, 0.09034473448991776, 0.09496764093637466, 0.09272222965955734, 0.09166556596755981, 0.0874389111995697], "val_loss": [1.9711905206952776, 1.9711933135986328, 1.971196174621582, 1.9711988312857491, 1.9712016923086983, 1.9712046214512415], "val_accuracy": [0.03633333370089531, 0.035999998450279236, 0.035999998450279236, 0.03566666692495346, 0.03566666692495346, 0.035999998450279236]}}]