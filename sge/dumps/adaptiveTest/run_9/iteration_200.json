[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [1, 2, 2, 4, 1, 5, 1, 3, 6, 0, 2, 9, 0, 9, 8, 6, 7], [3, 3, 3, 3, 0, 2, 2, 4, 2, 0], [45, 62, 0, 81, 53, 45], [0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.8171428442001343, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1379467557213796, 1.8216098099651747, 1.264912673526704, 1.184989199111207, 0.8959610773320086, 0.8394110858747437, 0.7784119113687322, 0.6948894046442841, 0.6557582109721739, 0.647782693181953, 0.6270985638681199, 0.6054869473507974, 0.547902228235175, 0.576136598481856, 0.5341441439851684, 0.5161063799595458, 0.5230699140303454, 0.5056528373047062, 0.49100454531687754, 0.48648205160575064, 0.4739288441367421, 0.4883296411145459, 0.4536584715100957], "accuracy": [0.29837536811828613, 0.4150046110153198, 0.5663716793060303, 0.5746929049491882, 0.6666226387023926, 0.6822084188461304, 0.7132478952407837, 0.7343811988830566, 0.7490423917770386, 0.752212405204773, 0.7565711140632629, 0.7662131786346436, 0.7891955971717834, 0.7769119143486023, 0.7988376617431641, 0.8012151718139648, 0.7991018295288086, 0.8039889335632324, 0.817461371421814, 0.8173292875289917, 0.8260467648506165, 0.8142913579940796, 0.835160493850708], "val_loss": [1.3912264619554793, 0.9359070914132255, 0.9582717078072684, 0.7690824610846383, 0.6710465465273175, 0.6472677673612323, 0.591090338570731, 0.5712094988141742, 0.5467701469148908, 0.4842077834265573, 0.47984228815351215, 0.4690697193145752, 0.48690368447984966, 0.45111470563071115, 0.4183742233685085, 0.46132218837738037, 0.43513063873563496, 0.409159209047045, 0.43806106703622, 0.4047454425266811, 0.41113812582833426, 0.49716380664280485, 0.38767815487725393], "val_accuracy": [0.4399999976158142, 0.5943333506584167, 0.5793333053588867, 0.6600000262260437, 0.6986666917800903, 0.7146666646003723, 0.7286666631698608, 0.7386666536331177, 0.7393333315849304, 0.7850000262260437, 0.7866666913032532, 0.7846666574478149, 0.7839999794960022, 0.8016666769981384, 0.8130000233650208, 0.7900000214576721, 0.7983333468437195, 0.828000009059906, 0.8130000233650208, 0.8259999752044678, 0.8103333115577698, 0.7763333320617676, 0.8259999752044678]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [6, 8, 6, 0, 8, 5, 1, 2, 2, 0, 8, 9], [3, 3, 3, 3, 0, 2, 2, 4, 2, 0], [45, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.8140000104904175, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.138214898824282, 1.9214267834790741, 1.7655874723614073, 1.242022262289067, 0.8913101287502827, 0.8799458675065832, 0.7479897510137824, 0.6970352287526144, 0.6510197450975779, 0.6437602390261721, 0.6140109769514822, 0.6103047102575588, 0.552491341465736, 0.6077652263871242, 0.5363885779910478, 0.5279512485146538, 0.5250727415730405, 0.5006103516333548, 0.49713561735164535, 0.48068849590271534, 0.49791654312631095, 0.4763059237015608, 0.4429128910446243], "accuracy": [0.29837536811828613, 0.3835688829421997, 0.43045833706855774, 0.5559371113777161, 0.6656980514526367, 0.6789063811302185, 0.7145687341690063, 0.7298903465270996, 0.7560427784919739, 0.7553823590278625, 0.7688548564910889, 0.7695152759552002, 0.7921014428138733, 0.7749306559562683, 0.7968564033508301, 0.7981772422790527, 0.8016114234924316, 0.8084797263145447, 0.8145555257797241, 0.8214238286018372, 0.8131026029586792, 0.817461371421814, 0.8339717388153076], "val_loss": [1.3845611640385218, 1.2782959938049316, 1.0236830030168806, 0.7031041554042271, 0.5880577734538487, 0.5915094784327916, 0.6137014286858695, 0.513554436819894, 0.5050573008401054, 0.47387043067387175, 0.4840989623750959, 0.46652042865753174, 0.47481082166944233, 0.4390349047524588, 0.4605017730167934, 0.44162894998277935, 0.42400740725653513, 0.4198026571955, 0.44289890357426237, 0.42092086587633404, 0.40863169942583355, 0.4613457236971174, 0.39977926867348806], "val_accuracy": [0.437333345413208, 0.41966667771339417, 0.5590000152587891, 0.7136666774749756, 0.7386666536331177, 0.7369999885559082, 0.7139999866485596, 0.7703333497047424, 0.7663333415985107, 0.7913333177566528, 0.7806666493415833, 0.7910000085830688, 0.7933333516120911, 0.8103333115577698, 0.7846666574478149, 0.8043333292007446, 0.8169999718666077, 0.8209999799728394, 0.8080000281333923, 0.8113333582878113, 0.812333345413208, 0.7926666736602783, 0.8180000185966492]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [6, 8, 6, 0, 2, 5, 1, 2, 2, 0, 8, 9], [3, 5, 0, 3, 0, 2, 2, 4, 2, 0], [45, 62, 0, 81, 53, 45], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.808571457862854, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 3, 3, 2, 1, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.137940611805914, 1.8187596565381867, 1.338636208487508, 1.0773028317868922, 0.9237045577535729, 0.7895104270632619, 0.7589203341762073, 0.70699919300655, 0.6618679673160623, 0.6427157690197234, 0.6117413188755835, 0.6018289054358057, 0.5556706983289541, 0.5721361440532731, 0.5376238864032804, 0.5249707805025516, 0.5195853967692449, 0.4947980182195431, 0.47985094184998933, 0.4826990108542895, 0.4834727003448092, 0.4630595136233577, 0.4451693515885602, 0.4342387157495169, 0.4404398475411609, 0.42113651214983044, 0.4027567637547715, 0.41298291226498374, 0.3937735853099458, 0.4036471730745417, 0.37669682883394395, 0.398166923227091, 0.3803176922080791, 0.3889627741265212, 0.36997735073632254, 0.37931805124781653], "accuracy": [0.29837536811828613, 0.4167217016220093, 0.5609562993049622, 0.6151102781295776, 0.6571126580238342, 0.7009642124176025, 0.7157574892044067, 0.7260599732398987, 0.7481178045272827, 0.7510236501693726, 0.7651565074920654, 0.7701756954193115, 0.7861577272415161, 0.7795535326004028, 0.7989697456359863, 0.7971205711364746, 0.8031964302062988, 0.8138951063156128, 0.8204993009567261, 0.8178576231002808, 0.8210275769233704, 0.8249900937080383, 0.8374059200286865, 0.8364813327789307, 0.8393871188163757, 0.8473120927810669, 0.8475762605667114, 0.8449346423149109, 0.8521991968154907, 0.8518029451370239, 0.8628978729248047, 0.8511425256729126, 0.858671247959137, 0.8540483713150024, 0.8672566413879395, 0.859199583530426], "val_loss": [1.3906594003949846, 0.9564559800284249, 0.9264069625309536, 0.876908676964896, 0.606175286429269, 0.6029869658606393, 0.5958485943930489, 0.5537702356066022, 0.5353347744260516, 0.4863476072038923, 0.46156305926186697, 0.47271123954227995, 0.4947363819394793, 0.4525418281555176, 0.42099697249276297, 0.43809936727796284, 0.4218625170843942, 0.409609181540353, 0.4501568249293736, 0.4047742060252598, 0.3895144888332912, 0.4612634352275303, 0.39128993238721577, 0.43088862725666593, 0.3736035738672529, 0.36700705119541716, 0.3854774832725525, 0.4041514907564436, 0.37876523392541067, 0.3703158838408334, 0.3564251661300659, 0.35926588092531475, 0.3719228080340794, 0.3625361919403076, 0.410584032535553, 0.36713132687977384], "val_accuracy": [0.437666654586792, 0.5926666855812073, 0.6919999718666077, 0.624666690826416, 0.7416666746139526, 0.7433333396911621, 0.7256666421890259, 0.7463333606719971, 0.746999979019165, 0.7816666960716248, 0.7906666398048401, 0.7893333435058594, 0.7850000262260437, 0.8016666769981384, 0.8116666674613953, 0.8066666722297668, 0.8140000104904175, 0.8220000267028809, 0.8059999942779541, 0.8286666870117188, 0.8236666917800903, 0.7916666865348816, 0.8299999833106995, 0.8109999895095825, 0.8389999866485596, 0.8446666598320007, 0.8266666531562805, 0.8213333487510681, 0.8303333520889282, 0.843666672706604, 0.8513333201408386, 0.8376666903495789, 0.8386666774749756, 0.8493333458900452, 0.8193333148956299, 0.8356666564941406]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 8, 6, 0, 2, 5, 1, 2, 2, 0, 8, 9], [3, 3, 0, 2, 0, 2, 2, 4, 2, 0], [21, 62, 0, 81, 53, 45], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.808571457862854, "mapping_values": [1, 1, 1, 0, 1, 0, 18, 18, 11, 7, 2, 3, 2, 2, 0, 0, 4, 2, 2, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(beta, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(beta, tf.math.negative(beta))))))))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1379418968603265, 1.7903596859849944, 1.5531702901960884, 1.0831492199889579, 0.8801941691671836, 0.792684030964264, 0.7310105988441158, 0.7181416834507636, 0.6657069309622841, 0.6577857067761026, 0.6139265580215726, 0.6089766712441279, 0.5556223121270086, 0.5815917241448945, 0.5322657958108042, 0.5148763773684111, 0.5413687140273066, 0.5038144202705356, 0.4969577256872071, 0.4839125707590065, 0.48917520026945877, 0.4773015854081867, 0.4746505371245096, 0.4354909998377663, 0.4473294367989875, 0.4396822379131705, 0.4355777939549054, 0.4164640028494665], "accuracy": [0.29837536811828613, 0.43006208539009094, 0.46691322326660156, 0.6062607169151306, 0.6645092964172363, 0.7062475085258484, 0.7218332886695862, 0.7279091477394104, 0.7483819723129272, 0.7500990629196167, 0.7675340175628662, 0.7671377658843994, 0.789988100528717, 0.774798572063446, 0.8013472557067871, 0.8039889335632324, 0.7972526550292969, 0.8148196935653687, 0.8121780753135681, 0.8186501264572144, 0.8185180425643921, 0.8198388814926147, 0.8255184292793274, 0.8388587832450867, 0.8378021121025085, 0.8362171649932861, 0.8401796221733093, 0.8475762605667114], "val_loss": [1.3908707414354597, 1.851631028311593, 0.78989120892116, 0.7190572363989693, 0.6833873476300921, 0.6103220156260899, 0.5343499183654785, 0.5690029178346906, 0.5409621851784843, 0.4758838415145874, 0.46858084201812744, 0.4677034786769322, 0.45909115246364046, 0.44644638470241, 0.4217173031398228, 0.48244661944253103, 0.4350179689271109, 0.40967088086264475, 0.4484868730817522, 0.42362492425101145, 0.39827276127679007, 0.5198336499077933, 0.3794956122125898, 0.38211060421807425, 0.38514356102262226, 0.38497703416006906, 0.3902399114200047, 0.3700847199984959], "val_accuracy": [0.43533334136009216, 0.3333333432674408, 0.6656666398048401, 0.6713333129882812, 0.6819999814033508, 0.7223333120346069, 0.7609999775886536, 0.7426666617393494, 0.7393333315849304, 0.7933333516120911, 0.7886666655540466, 0.79666668176651, 0.8080000281333923, 0.8019999861717224, 0.8119999766349792, 0.7756666541099548, 0.8050000071525574, 0.8276666402816772, 0.8103333115577698, 0.8116666674613953, 0.8223333358764648, 0.7770000100135803, 0.8360000252723694, 0.8336666822433472, 0.8289999961853027, 0.8320000171661377, 0.8256666660308838, 0.8356666564941406]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [8, 2, 2, 4, 1, 5, 1, 3, 6, 0, 2, 9, 0, 9, 8, 6, 7], [1, 3, 3, 3, 0, 2, 2, 4, 2, 0], [45, 62, 0, 81, 53, 45], [0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.803428590297699, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.137946715286899, 1.821697336791954, 1.29097398187758, 1.1152438137430825, 0.8643419032618984, 0.7803116369918195, 0.7463951744675527, 0.6903292076336693, 0.6577872605985733, 0.6683415688260388, 0.6062784044261716, 0.6028728943065709, 0.5568569780828899, 0.5628583123025452, 0.5317955523071949, 0.5007767257767898, 0.5260681251036634, 0.4940131472684704, 0.474755336753035, 0.48733890335305713, 0.48846581337348327, 0.4626436462302832, 0.4349506157201279, 0.43906968478135555, 0.43905260246884253, 0.4137395722691913, 0.4274268106714515, 0.4079039377063068, 0.3831733885639301, 0.4092379971903707, 0.37506521398034537, 0.3928283808600114, 0.36870329746276065, 0.39325904622211466, 0.3801040637408108, 0.36443554534337086], "accuracy": [0.29837536811828613, 0.4155329465866089, 0.5708624720573425, 0.6037511825561523, 0.6756042838096619, 0.7024171352386475, 0.7253995537757874, 0.7318716049194336, 0.7515519857406616, 0.7413815855979919, 0.7697794437408447, 0.7663452625274658, 0.7853652238845825, 0.7858935594558716, 0.8021397590637207, 0.8094043135643005, 0.8017435073852539, 0.8138951063156128, 0.8208954930305481, 0.813498854637146, 0.8193105459213257, 0.8234050869941711, 0.8409721255302429, 0.8366134166717529, 0.8385946154594421, 0.8494254350662231, 0.8391229510307312, 0.8487650156021118, 0.8570862412452698, 0.8467837572097778, 0.8619733452796936, 0.8553691506385803, 0.8659358024597168, 0.852331280708313, 0.8625016212463379, 0.8643507957458496], "val_loss": [1.3912325245993478, 0.9407398019518171, 0.870774337223598, 0.7372511114392962, 0.6218881777354649, 0.5992791652679443, 0.6083331448691232, 0.5165650163378034, 0.5905654941286359, 0.48261429582323345, 0.4686368022646223, 0.47171495641980854, 0.48127383845193045, 0.4520708663122995, 0.42578573737825665, 0.4421266657965524, 0.4630683490208217, 0.40570355313164846, 0.45146753106798443, 0.4095263055392674, 0.3857288786343166, 0.45861336163112093, 0.3816170351845877, 0.38405602318899973, 0.38754195826394217, 0.37811775718416485, 0.37663973229272024, 0.37345204183033537, 0.3804484009742737, 0.3770433919770377, 0.3487629634993417, 0.3515625851494925, 0.4024821605001177, 0.3750003065381731, 0.39432479654039654, 0.3713287966591971], "val_accuracy": [0.4399999976158142, 0.5943333506584167, 0.6483333110809326, 0.7049999833106995, 0.7363333106040955, 0.75, 0.7146666646003723, 0.7689999938011169, 0.7239999771118164, 0.7870000004768372, 0.7910000085830688, 0.7900000214576721, 0.7910000085830688, 0.7986666560173035, 0.8153333067893982, 0.8116666674613953, 0.7799999713897705, 0.824999988079071, 0.7976666688919067, 0.8253333568572998, 0.8299999833106995, 0.8013333082199097, 0.8339999914169312, 0.8339999914169312, 0.831333339214325, 0.8363333344459534, 0.8370000123977661, 0.8339999914169312, 0.8299999833106995, 0.8343333601951599, 0.8529999852180481, 0.843999981880188, 0.8193333148956299, 0.8456666469573975, 0.8246666789054871, 0.8356666564941406]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 1, 2, 6, 2, 1, 3, 0, 5, 8, 9], [3, 3, 1, 3, 0, 2, 0, 1, 1, 0], [52, 47, 0, 81, 53, 45], [0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [26, 57]], "fitness": -0.7825714349746704, "mapping_values": [1, 1, 1, 0, 1, 0, 20, 20, 11, 9, 2, 2, 1, 1, 0, 0, 8, 4, 4, 2], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, grad), tf.math.multiply(alpha, tf.math.negative(grad))), tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta)), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))))), tf.math.add(beta, tf.math.sqrt(alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [2.2979524800365216, 2.2783138489348462, 2.2599179388556925, 2.240882890603294, 2.2159448041577052, 2.1873730799745905, 2.150772659234745, 2.1074873861021386, 2.053059866840593, 1.9824609359052943, 1.9102217447740402, 1.8259200246783454, 1.7402983641564618, 1.649068259339464, 1.5686589743971053, 1.4880334037154217, 1.4216755919090556, 1.3628218471570934, 1.3048913967906997, 1.2618919513354983, 1.2224876727599352, 1.1925291350929885, 1.1543176724154636, 1.1296131696683416, 1.1107219229631293, 1.084797413719801, 1.0493641703387986, 1.0397985381945296, 1.019659439153234, 0.9971277616153446, 0.9823303981826227, 0.9666043686954935, 0.9570221504546617, 0.956476793108426, 0.9224292318015728, 0.9197458647198413, 0.9115635589948026, 0.8973486132987691, 0.8997301081656276, 0.8825691577355623, 0.8816822547607764, 0.8753753853685049, 0.8614224121082791, 0.8500119589496488, 0.8408926796242389, 0.8398596858146908, 0.8361184970341528, 0.829176775311057, 0.8266834031164119, 0.8213091993911344, 0.8193053265745929, 0.807430425481931, 0.8006740070730861, 0.7984885348698656, 0.783876021949764, 0.7860459643836192, 0.7809449111576078, 0.7736283582136411, 0.7853370589224922, 0.7792890255225412, 0.7719777408544933, 0.7705659960569912, 0.7688579159311378, 0.759019145994233, 0.7589099140703214, 0.762977968101819, 0.7563496423262048, 0.7425804831301138, 0.7508466639507401, 0.7420438257395521, 0.7344523669548826, 0.7416173374695375, 0.7410348511532613, 0.7248764321977562, 0.7196225234546114, 0.7242254101132609, 0.7232242873662561, 0.7051804701823128, 0.7191993428920443, 0.7268704907958061, 0.7116500286850648, 0.7048476291779813, 0.7079304468598678, 0.7103615153451496, 0.6991856065188197, 0.7014657138376786, 0.7054831864354854, 0.6996715665021042, 0.701421888040561], "accuracy": [0.11134592443704605, 0.15149913728237152, 0.20142649114131927, 0.24422137439250946, 0.2859595715999603, 0.3213578164577484, 0.35068023204803467, 0.3657376766204834, 0.3979659080505371, 0.42187294363975525, 0.431779146194458, 0.4539690911769867, 0.46453574299812317, 0.48527276515960693, 0.4947827160358429, 0.5227842926979065, 0.5309734344482422, 0.54220050573349, 0.5588429570198059, 0.5672962665557861, 0.5815612077713013, 0.5860520601272583, 0.5934486985206604, 0.6078457236289978, 0.6087703108787537, 0.6238277554512024, 0.63096022605896, 0.6345264911651611, 0.6416589617729187, 0.6457535624504089, 0.6616035103797913, 0.6556597352027893, 0.6588297486305237, 0.6656980514526367, 0.672698438167572, 0.6762647032737732, 0.6757363677024841, 0.6796988248825073, 0.6769251227378845, 0.6837934255599976, 0.6890767216682434, 0.6865671873092651, 0.6897371411323547, 0.6926429867744446, 0.6966054439544678, 0.6971337795257568, 0.6997754573822021, 0.6971337795257568, 0.7000396251678467, 0.7061154246330261, 0.700171709060669, 0.705058753490448, 0.7077004313468933, 0.7049266695976257, 0.7165499925613403, 0.7149649858474731, 0.7152291536331177, 0.7174745798110962, 0.7154933214187622, 0.7147008180618286, 0.7143045663833618, 0.7157574892044067, 0.7240787148475647, 0.7215691208839417, 0.7235503792762756, 0.720380425453186, 0.7162858247756958, 0.7320036888122559, 0.720380425453186, 0.7232862114906311, 0.7279091477394104, 0.7297582626342773, 0.7269845604896545, 0.7327961921691895, 0.737947404384613, 0.7357020378112793, 0.7309470176696777, 0.7430986762046814, 0.7310791015625, 0.7284374833106995, 0.737947404384613, 0.7404569983482361, 0.7372870445251465, 0.7374191284179688, 0.7420420050621033, 0.7400607466697693, 0.7342491149902344, 0.7411174178123474, 0.7395324110984802], "val_loss": [1.9547927720206124, 1.9382764271327428, 1.920386791229248, 1.8999739374433244, 1.8751653943743025, 1.8445077623639787, 1.806150027683803, 1.7590079988752092, 1.7013750757489885, 1.6322695527757918, 1.5534289564405168, 1.4677907398768835, 1.379653011049543, 1.2911271027156286, 1.2085530417306083, 1.1340604850224085, 1.0700589248112269, 1.015556948525565, 0.9683147498539516, 0.9274334226335798, 0.892709561756679, 0.8639956372124808, 0.8374057837894985, 0.8143019505909511, 0.7946573495864868, 0.7768738610403878, 0.7601311036518642, 0.7464908872331891, 0.7333777291434151, 0.7210560696465629, 0.7118791341781616, 0.7004588672092983, 0.6917134863989693, 0.6841451781136649, 0.6752259731292725, 0.6680851663861956, 0.6635802984237671, 0.6565482786723545, 0.6513488292694092, 0.6448782512119838, 0.6396043300628662, 0.6349928719656808, 0.6305890594209943, 0.6250205891472953, 0.620221699987139, 0.6160952363695417, 0.6135283367974418, 0.6099460806165423, 0.6057150534221104, 0.6025271245411464, 0.5987162590026855, 0.5953254870006016, 0.5911702939442226, 0.5890979085649762, 0.5866747924259731, 0.5835743631635394, 0.581349287714277, 0.5790084941046578, 0.5770179884774345, 0.5732393094471523, 0.5711220332554409, 0.5700840439115252, 0.5678267649241856, 0.5656455414635795, 0.5628806522914341, 0.561916743006025, 0.5590932709830148, 0.5560875449861798, 0.5547024011611938, 0.5530609573636737, 0.5501141718455723, 0.5483207702636719, 0.5472023146493095, 0.544899412563869, 0.5449468748910087, 0.5437533174242292, 0.5403167860848563, 0.5385910783495221, 0.537015608378819, 0.5359803097588676, 0.534768956048148, 0.5326336281640189, 0.5319253376552037, 0.5305792263575962, 0.5289284842354911, 0.5277574913842338, 0.5276754924229213, 0.5270501715796334, 0.525064298084804], "val_accuracy": [0.16366666555404663, 0.30033332109451294, 0.3636666536331177, 0.39266666769981384, 0.42533332109451294, 0.4490000009536743, 0.4779999852180481, 0.5023333430290222, 0.5273333191871643, 0.5473333597183228, 0.5540000200271606, 0.5703333616256714, 0.57833331823349, 0.5943333506584167, 0.609000027179718, 0.6303333044052124, 0.6473333239555359, 0.6566666960716248, 0.6629999876022339, 0.6696666479110718, 0.6753333210945129, 0.6803333163261414, 0.6850000023841858, 0.6840000152587891, 0.6916666626930237, 0.6963333487510681, 0.6990000009536743, 0.6990000009536743, 0.706333339214325, 0.7076666951179504, 0.7066666483879089, 0.7129999995231628, 0.7129999995231628, 0.7173333168029785, 0.722000002861023, 0.7239999771118164, 0.7213333249092102, 0.7239999771118164, 0.7239999771118164, 0.7229999899864197, 0.7323333621025085, 0.7319999933242798, 0.7276666760444641, 0.7336666584014893, 0.7360000014305115, 0.7393333315849304, 0.7323333621025085, 0.7406666874885559, 0.7416666746139526, 0.7446666955947876, 0.7436666488647461, 0.7429999709129333, 0.746666669845581, 0.7483333349227905, 0.7450000047683716, 0.746666669845581, 0.7453333139419556, 0.7473333477973938, 0.7493333220481873, 0.7513333559036255, 0.7513333559036255, 0.7516666650772095, 0.7546666860580444, 0.7549999952316284, 0.7590000033378601, 0.7566666603088379, 0.7576666474342346, 0.7586666941642761, 0.7586666941642761, 0.7599999904632568, 0.7630000114440918, 0.7639999985694885, 0.7649999856948853, 0.7646666765213013, 0.7636666893959045, 0.765666663646698, 0.7663333415985107, 0.7676666378974915, 0.7689999938011169, 0.7673333287239075, 0.7680000066757202, 0.7706666588783264, 0.7733333110809326, 0.7736666798591614, 0.7730000019073486, 0.7710000276565552, 0.7706666588783264, 0.7713333368301392, 0.7733333110809326]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0], [6, 4, 6, 0, 2, 5, 1, 2, 2, 0, 8, 9], [3, 3, 0, 3, 0, 2, 2, 4, 2, 0], [45, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.7611428499221802, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 2, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.negative(tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), grad))))), tf.math.square(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.175748848628532, 1.6869909845685223, 1.2469059484131884, 0.9770189330971804, 0.816990475447706, 0.7997075760715657, 0.7343064638617615, 0.7302552545075371, 0.6469597620278176, 0.6524841908797013, 0.6485783230390815], "accuracy": [0.2769779562950134, 0.4356095492839813, 0.5601637959480286, 0.6413947939872742, 0.7020208835601807, 0.7108704447746277, 0.7199841737747192, 0.7314753532409668, 0.7563069462776184, 0.754589855670929, 0.7536653280258179], "val_loss": [1.7006925174168177, 0.8653444732938494, 0.8211185932159424, 0.6873616320746285, 0.600459098815918, 0.5655130658830915, 0.5590186970574516, 0.5554237536021641, 0.5406627655029297, 0.5838335582188198, 0.5414371490478516], "val_accuracy": [0.3009999990463257, 0.6359999775886536, 0.6623333096504211, 0.7009999752044678, 0.7363333106040955, 0.7559999823570251, 0.7459999918937683, 0.7306666374206543, 0.7463333606719971, 0.7289999723434448, 0.7559999823570251]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0], [6, 8, 6, 0, 2, 5, 1, 2, 2, 0, 8, 9], [3, 3, 0, 3, 0, 2, 2, 4, 2, 0], [45, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [0, 57]], "fitness": -0.25028571486473083, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2852259344822223, 2.2719143544520684, 2.7096943546988475, 2.3084653799386783, 2.3040517364998756, 2.3031072141692435], "accuracy": [0.18663319945335388, 0.17804782092571259, 0.17382116615772247, 0.09734513610601425, 0.09681680053472519, 0.10196803510189056], "val_loss": [1.93943909236363, 2.2148166384015764, 1.9852089881896973, 1.9747563089643205, 1.9737953458513533, 1.9736321994236536], "val_accuracy": [0.3186666667461395, 0.10300000011920929, 0.10366666316986084, 0.10000000149011612, 0.10366666316986084, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [7, 2, 2, 4, 1, 5, 1, 3, 6, 0, 2, 9, 0, 9, 8, 6, 7], [3, 3, 3, 3, 0, 2, 2, 4, 2, 0], [21, 62, 0, 81, 53, 45], [1, 0, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1], [6, 7, 8, 9, 7], [4, 7], [88, 19], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [62, 57]], "fitness": -0.24857142567634583, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2852255943161293, 2.2466825865137263, 2.5133261205718314, 2.3049574133238506, 2.303696477165973, 2.3033164885569684], "accuracy": [0.1868973672389984, 0.20063400268554688, 0.13155461847782135, 0.09853387624025345, 0.09655263274908066, 0.1018359512090683], "val_loss": [1.9384599413190569, 1.964660372052874, 1.9756482669285365, 1.9737800189426966, 1.973494393484933, 1.9735142162867956], "val_accuracy": [0.3050000071525574, 0.16566666960716248, 0.09799999743700027, 0.09799999743700027, 0.10366666316986084, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0], [6, 8, 6, 0, 2, 5, 1, 2, 2, 0, 8, 9], [3, 3, 1, 3, 0, 2, 2, 4, 2, 0], [45, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.23685714602470398, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.subtract(grad, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.147266568099629, 2.3208070754249097, 1.9018116466215873, 1.798230248057469, 1.9293832016217947, 1.925581261970269, 2.0386754759487586, 2.144934224068386], "accuracy": [0.28820499777793884, 0.1612732857465744, 0.3516048192977905, 0.41989168524742126, 0.3486989736557007, 0.3549068868160248, 0.3206973969936371, 0.24646678566932678], "val_loss": [1.8506603922162737, 1.7109312329973494, 0.9665554591587612, 1.249986273901803, 1.4020768914903914, 1.679792812892369, 1.5318761553083147, 1.7747164453778947], "val_accuracy": [0.3580000102519989, 0.3700000047683716, 0.5756666660308838, 0.5146666765213013, 0.4313333332538605, 0.3096666634082794, 0.3733333349227905, 0.20999999344348907]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 3, 1, 2, 6, 2, 1, 3, 2, 2, 8, 9], [0, 3, 1, 3, 0, 2, 0, 1, 1, 0, 3], [45, 62, 0, 81, 53, 45], [0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1], [1, 1, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 8, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [26, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 22, 22, 11, 11, 4, 1, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), tf.math.multiply(alpha, tf.math.add(grad, tf.math.add(beta, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, beta))), tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.sqrt(alpha))))), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [1, 3, 9, 2, 6, 8, 1, 3, 2, 2, 8, 9, 6, 4, 1, 6, 4, 5, 5], [3, 5, 3, 1, 0, 2, 3, 5, 2, 5, 1, 3], [45, 62, 0, 81, 53, 45], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 2, 0, 1, 3, 3], [87, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 19, 19, 11, 8, 2, 3, 2, 2, 0, 0, 4, 2, 2, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.add(tf.math.divide_no_nan(tf.math.sqrt(tf.math.subtract(tf.math.add(beta, grad), tf.math.multiply(grad, tf.math.add(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, grad)))), tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [4, 3, 1, 2, 6, 8, 1, 3, 2, 0, 8, 9, 2], [3, 3, 0, 3, 0, 3, 2, 2, 2, 2], [52, 47, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [29, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [3.1757467255835953e+24, 7.7164377544565825, 14.894245689098845, 22.08584017760529, 29.28087619493792, 36.47705569233892], "accuracy": [0.08413683623075485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4.145459583827427, 10.227458953857422, 16.395829336983816, 22.56748526436942, 28.739783150809153, 34.91656167166574], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [5, 3, 9, 1, 6, 8, 1, 4, 2, 2, 8, 9, 6, 4, 1, 6, 4, 5, 5], [0, 3, 3, 3, 0, 3, 2, 3, 2, 2, 1, 5], [52, 47, 0, 81, 53, 45], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [0, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 3, 3, 2, 1, 0, 1, 0, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3033329919029804, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09972262382507324, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [4, 3, 9, 2, 6, 8, 1, 3, 2, 2, 8, 9, 6, 4, 1, 0, 4, 5, 5, 9, 5], [3, 3, 1, 3, 0, 2, 1, 1, 1, 0, 5, 0], [52, 47, 31, 81, 53, 45, 78], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 5, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [26, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 31, 31, 21, 10, 5, 3, 2, 2, 0, 0, 1, 0, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.sqrt(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), grad), tf.math.add(beta, grad))), alpha), tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.negative(grad)), tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta))), tf.math.pow(tf.math.add(beta, tf.math.square(alpha)), tf.math.add(beta, alpha)))))), alpha)), tf.math.square(tf.math.add(beta, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))))))), tf.math.square(tf.math.add(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.square(sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [3.1757464210210525e+24, 7.716437826382092, 14.894245689098845, 22.085841185318213, 29.28087619493792, 36.47705569233892], "accuracy": [0.08413683623075485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4.145459583827427, 10.227458953857422, 16.395829336983816, 22.56748526436942, 28.739783150809153, 34.91656167166574], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0], [6, 8, 6, 0, 2, 5, 1, 2, 2, 0, 8, 9], [3, 3, 0, 1, 0, 3, 2, 2, 2, 2], [45, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [29, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), alpha))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [3.175747943833765e+24, 7.716437889364149, 14.894245689098845, 22.085841581097462, 29.280879470004916, 36.47705921933415], "accuracy": [0.08413683623075485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4.145459720066616, 10.227458953857422, 16.395829336983816, 22.567489624023438, 28.73978533063616, 34.91656494140625], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 8, 6, 0, 2, 5, 1, 2, 2, 0, 8, 9], [3, 3, 0, 3, 0, 2, 2, 4, 2, 0], [52, 47, 0, 81, 53, 45], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 1, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 18, 18, 12, 6, 3, 4, 3, 2, 1, 0, 4, 2, 2, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))))))))))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 3, 1, 2, 6, 2, 1, 3, 2, 0, 8, 9], [0, 3, 1, 3, 0, 2, 0, 2, 1, 0], [21, 62, 0, 81, 53, 45], [0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 5, 0, 4, 2, 1, 2, 3], [0, 3, 0, 1, 3, 3], [26, 57]], "fitness": -0.09971428662538528, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 11, 10, 4, 2, 1, 1, 0, 0, 3, 2, 1, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.math.add(beta, grad), tf.math.multiply(alpha, tf.math.add(grad, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta)), tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(beta)))))), tf.math.sqrt(tf.math.add(beta, alpha)))), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.32026809821622, 2.4291824406132707, 2.743079702851952, 3.3632920847088985, 4.229756473880859, 5.435326307236542, 6.90370853484787, 8.647020674274582], "accuracy": [0.09074098616838455, 0.09509972482919693, 0.0944393053650856, 0.1010434553027153, 0.09959053993225098, 0.09998679161071777, 0.1018359512090683, 0.1014397069811821], "val_loss": [1.9899001802716936, 2.0868563652038574, 2.316525731767927, 2.727014950343541, 3.3412526675633023, 4.156483922685895, 5.160886628287179, 6.346812929425921], "val_accuracy": [0.09133332967758179, 0.09733333438634872, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 3, 1, 2, 6, 6, 1, 3, 0, 0, 8, 9], [0, 3, 3, 3, 0, 3, 2, 3, 2, 2], [52, 47, 0, 81, 53, 45], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 1, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [0, 0, 0, 1, 3, 3], [2, 57]], "fitness": -0.09971428662538528, "mapping_values": [1, 1, 1, 0, 1, 0, 20, 20, 11, 9, 2, 4, 3, 2, 1, 0, 4, 2, 2, 2], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.subtract(tf.math.add(beta, grad), tf.math.multiply(grad, grad)), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), grad), tf.math.add(beta, beta))), tf.math.negative(tf.math.negative(tf.math.add(beta, grad))))), tf.math.sqrt(tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3147429414098415, 2.368404169376138, 2.5216329133332667, 2.8306874734157774, 3.266392302125783, 3.9022888892897685, 4.694722491516146, 5.650177629380383, 6.812765057974047], "accuracy": [0.09126931428909302, 0.09285431355237961, 0.09457138925790787, 0.10210011899471283, 0.09893012791872025, 0.09879804402589798, 0.1010434553027153, 0.10236428678035736, 0.09272222965955734], "val_loss": [1.9806441579546248, 2.0260235241481235, 2.131888048989432, 2.321461950029646, 2.6147093091692244, 3.0228688376290456, 3.5478015627179826, 4.185128348214286, 4.929708344595773], "val_accuracy": [0.08699999749660492, 0.09566666930913925, 0.0976666659116745, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [1, 2, 2, 4, 9, 5, 1, 3, 6, 0, 2, 9, 0, 9, 8, 6, 7], [3, 3, 0, 3, 0, 3, 2, 2, 3, 2], [45, 62, 0, 81, 53, 45], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [2, 3, 0, 1, 3, 3], [48, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 2, 3, 1, 3, 2, 2, 0, 0, 4, 2, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, sigma))", "other_info": {"loss": [2.305376248226788, 2.303315107454918, 2.3030566655885685, 2.3040052034347567, 2.302826379410201, 2.3034151099251248], "accuracy": [0.09179764986038208, 0.08532558381557465, 0.08942015469074249, 0.09325055778026581, 0.09021265059709549, 0.09206181764602661], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]