[{"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 4, 2, 8, 8, 1, 7, 0, 1, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9, 9, 4], [1, 2, 3, 1, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [18, 8, 39, 58, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7908571362495422, "mapping_values": [1, 7, 7, 4, 3, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.290721117403088, 2.2653467960329956, 2.2347667203083676, 2.1974779323831823, 2.1459904430312817, 2.06656755218259, 1.9791712094732579, 1.8622701866216411, 1.714617908134783, 1.5944051518022675, 1.4809879749174903, 1.3768207712762974, 1.2977579728314086, 1.2309828486031293, 1.1823515435566345, 1.1507953951592145, 1.100731834239806, 1.0614029263555729, 1.0332209866957942, 1.0132732303182541, 0.9837388654725742, 0.9488674442151818, 0.9499908662695753, 0.921475365838638, 0.9208124586068691, 0.9039273766116569, 0.8905701507210118, 0.8821481172718219, 0.8588729378113011, 0.8543802394591082, 0.8351506242158784, 0.8406390635454896, 0.8303864375475202, 0.8158036612044111, 0.8043440335210382, 0.8005946111354719, 0.8058135097352127, 0.7874136127264839, 0.783575726506449, 0.7737408955697732, 0.7766979352956467, 0.7747356281493397, 0.7630148923565542, 0.7529888362491514, 0.7572989682983713, 0.7416688058874186, 0.745797701594285, 0.7380977076247163, 0.7365578334045889, 0.7213661228157132, 0.724945107266541, 0.7277613746381439, 0.7196557205413956, 0.7049953430997319, 0.7167295912127406, 0.7002049057144515, 0.7034002141142566, 0.6979247309181905, 0.6984107879017165, 0.6960775469508641, 0.6894903948530309, 0.6877653938258691, 0.6839039200222361, 0.6729226073474303, 0.6729551987278936, 0.6752598006034713, 0.6741285672938552, 0.6708172206487544, 0.6768307490450217, 0.6690534004571809, 0.6607389224991114], "accuracy": [0.11345925182104111, 0.19204860925674438, 0.25280675292015076, 0.2989037036895752, 0.3477744162082672, 0.3963809311389923, 0.41104212403297424, 0.43811914324760437, 0.4785365164279938, 0.4959714710712433, 0.5215955376625061, 0.5419363379478455, 0.5612204670906067, 0.574560821056366, 0.5876370072364807, 0.6045436263084412, 0.6129969358444214, 0.6263373494148254, 0.6391493678092957, 0.6425835490226746, 0.6552634835243225, 0.6540747880935669, 0.6606789231300354, 0.6779817938804626, 0.6725663542747498, 0.6737551093101501, 0.6794346570968628, 0.6790384650230408, 0.685510516166687, 0.689869225025177, 0.7017567157745361, 0.700171709060669, 0.6971337795257568, 0.7084929347038269, 0.7080966830253601, 0.7131158113479614, 0.7054550051689148, 0.7154933214187622, 0.7160216569900513, 0.7140403985977173, 0.7168141603469849, 0.7205125093460083, 0.7156254053115845, 0.7255316376686096, 0.7189275026321411, 0.7317395210266113, 0.7235503792762756, 0.7263241410255432, 0.7276449799537659, 0.7322678565979004, 0.7351737022399902, 0.7334566116333008, 0.7290979027748108, 0.7397965788841248, 0.7313432693481445, 0.7452120184898376, 0.7430986762046814, 0.7413815855979919, 0.7371549606323242, 0.7390040755271912, 0.7466648817062378, 0.7469290494918823, 0.744419515132904, 0.7456082701683044, 0.7498348951339722, 0.7421740889549255, 0.7478536367416382, 0.7466648817062378, 0.7428345084190369, 0.7500990629196167, 0.7541936039924622], "val_loss": [1.946742262159075, 1.9205257552010673, 1.8881226948329382, 1.845298903329032, 1.7856855392456055, 1.7031896795545305, 1.5991144861493791, 1.474658761705671, 1.339031117303031, 1.213249955858503, 1.1051194327218192, 1.0172807489122664, 0.9488880634307861, 0.8938749517713275, 0.8512261765343803, 0.817990813936506, 0.7883140529905047, 0.7636847836630685, 0.7424995218004499, 0.7238590717315674, 0.7070943287440709, 0.6925297124045235, 0.681876574243818, 0.6713497638702393, 0.662156513759068, 0.6531448875154767, 0.6437728404998779, 0.6357272352491107, 0.6280658755983625, 0.6215350457600185, 0.615530184337071, 0.6107427392687116, 0.605515684400286, 0.5987944092069354, 0.5948035546711513, 0.591316648891994, 0.5887725353240967, 0.5823068959372384, 0.5789479187556675, 0.5759424482073102, 0.5727564947945731, 0.568152802331107, 0.5654981987816947, 0.5624333620071411, 0.5616440773010254, 0.5581980773380825, 0.5536021845681327, 0.5505324261529105, 0.5473861353737968, 0.5458889348166329, 0.5438132796968732, 0.5418998173304966, 0.5403044904981341, 0.5350957938602993, 0.53487571648189, 0.5334341696330479, 0.5306584664753505, 0.5286347014563424, 0.5276429653167725, 0.5251864535467965, 0.5230481794902256, 0.5216601916721889, 0.5180555582046509, 0.5172924484525409, 0.5165226970400129, 0.5124504225594657, 0.512395943914141, 0.5100919008255005, 0.5116920641490391, 0.5084288120269775, 0.506340571812221], "val_accuracy": [0.23633334040641785, 0.3623333275318146, 0.4036666750907898, 0.4429999887943268, 0.48233333230018616, 0.5220000147819519, 0.5519999861717224, 0.5716666579246521, 0.5926666855812073, 0.6103333234786987, 0.6290000081062317, 0.6576666831970215, 0.6669999957084656, 0.6713333129882812, 0.6833333373069763, 0.6893333196640015, 0.6896666884422302, 0.6973333358764648, 0.7013333439826965, 0.7056666612625122, 0.7083333134651184, 0.7163333296775818, 0.715666651725769, 0.7149999737739563, 0.7170000076293945, 0.7229999899864197, 0.7326666712760925, 0.734333336353302, 0.7333333492279053, 0.7383333444595337, 0.7363333106040955, 0.737333357334137, 0.7419999837875366, 0.7423333525657654, 0.7423333525657654, 0.7436666488647461, 0.7476666569709778, 0.7486666440963745, 0.7486666440963745, 0.750333309173584, 0.7509999871253967, 0.7559999823570251, 0.7553333044052124, 0.7556666731834412, 0.7620000243186951, 0.7573333382606506, 0.7593333125114441, 0.765333354473114, 0.7646666765213013, 0.7620000243186951, 0.762333333492279, 0.7673333287239075, 0.765333354473114, 0.7696666717529297, 0.7696666717529297, 0.7710000276565552, 0.7676666378974915, 0.7699999809265137, 0.7726666927337646, 0.7699999809265137, 0.7703333497047424, 0.7699999809265137, 0.7756666541099548, 0.7770000100135803, 0.7706666588783264, 0.7776666879653931, 0.7756666541099548, 0.7756666541099548, 0.7763333320617676, 0.7773333191871643, 0.7773333191871643]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9, 9, 4], [1, 2, 3, 1, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7905714511871338, "mapping_values": [1, 39, 39, 26, 13, 6, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, grad), grad), alpha))), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.sqrt(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))))))))), grad)), tf.math.add(alpha, tf.math.pow(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2907210859120593, 2.2653467150695605, 2.234765613745106, 2.1974751569843405, 2.14598864804264, 2.066566414222773, 1.9791690116671208, 1.8622714596779717, 1.714620968574672, 1.5944184397410377, 1.481010296404275, 1.3768509228814312, 1.2977944905527075, 1.2310288950058887, 1.1823752297543895, 1.1508085154554926, 1.1007884297278328, 1.0614138338402388, 1.0332189528162075, 1.0133100280420355, 0.983784883005933, 0.948902860734567, 0.9499496827665935, 0.9214486363872231, 0.9208373662314128, 0.9039339096775113, 0.89053410620753, 0.8821746591233055, 0.8588495295454939, 0.854281855667146, 0.8351324005543265, 0.8406583058788414, 0.8304189183944725, 0.8158035503481168, 0.8043542176488998, 0.8005593030790628, 0.8058537013652601, 0.7874655640750372, 0.7836209378694704, 0.7737873168259942, 0.7766989854506026, 0.7747803973310801, 0.762996927905533, 0.7529874446290973, 0.7573897972586857, 0.7417233970029526, 0.7458472193476231, 0.7381487725637907, 0.7365686870081046, 0.7214935762046776, 0.7249983951652118, 0.7277778717725505, 0.7198101992950999, 0.7048952761831347, 0.7167734416515883, 0.7002677649019449, 0.7035763997994456, 0.6979958535327163, 0.6984679524168882, 0.6960616079162156, 0.6894432731654745, 0.6877542811456594, 0.6839926529554187, 0.6728852176867802, 0.6730043912733771, 0.6753800547653579, 0.6741688857146573, 0.6708025793436575, 0.6770081853098197, 0.6690749074678695, 0.6608673193986626], "accuracy": [0.11345925182104111, 0.19204860925674438, 0.25280675292015076, 0.2989037036895752, 0.34764233231544495, 0.3963809311389923, 0.41104212403297424, 0.43811914324760437, 0.4785365164279938, 0.4959714710712433, 0.5213313698768616, 0.5419363379478455, 0.561352550983429, 0.574560821056366, 0.587372899055481, 0.6048077940940857, 0.6131290197372437, 0.6262052655220032, 0.6391493678092957, 0.6425835490226746, 0.655527651309967, 0.6542068123817444, 0.661471426486969, 0.6783780455589294, 0.6724342703819275, 0.6737551093101501, 0.6794346570968628, 0.6789063811302185, 0.6856426000595093, 0.6903975605964661, 0.7018887996673584, 0.7003037929534912, 0.6976621150970459, 0.7087571024894714, 0.7083608508110046, 0.7136441469192505, 0.705058753490448, 0.715889573097229, 0.7161537408828735, 0.7136441469192505, 0.7166820764541626, 0.7211728692054749, 0.7154933214187622, 0.7253995537757874, 0.7191916704177856, 0.7317395210266113, 0.7232862114906311, 0.7263241410255432, 0.7273808121681213, 0.7320036888122559, 0.7346453666687012, 0.733588695526123, 0.7297582626342773, 0.7395324110984802, 0.7312111854553223, 0.7449478507041931, 0.7436270117759705, 0.7412495017051697, 0.737022876739502, 0.7396644949913025, 0.7475894689559937, 0.7465327978134155, 0.7445515990257263, 0.7466648817062378, 0.7500990629196167, 0.7415136694908142, 0.7475894689559937, 0.746268630027771, 0.7427024245262146, 0.7503632307052612, 0.7541936039924622], "val_loss": [1.946742398398263, 1.9205244609287806, 1.8881209237234933, 1.8452967235020228, 1.7856856754847936, 1.7031888280596053, 1.5991156782422746, 1.4746643134525843, 1.339045865195138, 1.2132633072989327, 1.1051480429513114, 1.0173330988202776, 0.9489730085645404, 0.893930196762085, 0.8512546675545829, 0.8180220808301654, 0.7883675268718174, 0.7637089150292533, 0.742527689252581, 0.7238759824207851, 0.7071171488080706, 0.6925125292369297, 0.6818017789295742, 0.6713425091334752, 0.6621124744415283, 0.6531147105353219, 0.6437705074037824, 0.6356850011008126, 0.6280916248049054, 0.6215554816382272, 0.615526556968689, 0.6107566697256905, 0.6055747781481061, 0.5988361665180751, 0.5947722366877964, 0.5911970649446759, 0.5887121302740914, 0.58229318686894, 0.5790546791894096, 0.5759298120226178, 0.5728074141911098, 0.568182212965829, 0.5655255828584943, 0.5625560113361904, 0.5616858175822667, 0.5581353562218803, 0.5535564082009452, 0.5504883357456752, 0.5474373953683036, 0.5459193672452655, 0.5436365944998605, 0.5418805735451835, 0.5402073349271502, 0.5350675923483712, 0.5348653452736991, 0.5335047585623605, 0.5306226866585868, 0.5286285536629813, 0.5276111023766654, 0.5251616580145699, 0.5231260231563023, 0.5214883940560477, 0.5180396182196481, 0.5173430272511074, 0.516473821231297, 0.5124785218920026, 0.5123711143221173, 0.5101226397923061, 0.5116762944630214, 0.5083220175334385, 0.5063129493168422], "val_accuracy": [0.23633334040641785, 0.3623333275318146, 0.4036666750907898, 0.4429999887943268, 0.48233333230018616, 0.5220000147819519, 0.5519999861717224, 0.5716666579246521, 0.5926666855812073, 0.6103333234786987, 0.6290000081062317, 0.6576666831970215, 0.6669999957084656, 0.6713333129882812, 0.6830000281333923, 0.6893333196640015, 0.6896666884422302, 0.6976666450500488, 0.7016666531562805, 0.7053333520889282, 0.7086666822433472, 0.715666651725769, 0.7160000205039978, 0.7153333425521851, 0.7166666388511658, 0.7233333587646484, 0.7326666712760925, 0.734666645526886, 0.734000027179718, 0.7383333444595337, 0.7366666793823242, 0.737333357334137, 0.7429999709129333, 0.7429999709129333, 0.7423333525657654, 0.7436666488647461, 0.7480000257492065, 0.7483333349227905, 0.7493333220481873, 0.750333309173584, 0.7506666779518127, 0.7563333511352539, 0.7563333511352539, 0.7549999952316284, 0.7630000114440918, 0.7580000162124634, 0.7590000033378601, 0.7649999856948853, 0.7649999856948853, 0.7613333463668823, 0.762666642665863, 0.7670000195503235, 0.7646666765213013, 0.7696666717529297, 0.7696666717529297, 0.7710000276565552, 0.7673333287239075, 0.7699999809265137, 0.7726666927337646, 0.7699999809265137, 0.7703333497047424, 0.7699999809265137, 0.7749999761581421, 0.7763333320617676, 0.7706666588783264, 0.7776666879653931, 0.7760000228881836, 0.7756666541099548, 0.7760000228881836, 0.7773333191871643, 0.7773333191871643]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 5, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 2, 1, 9, 4], [1, 2, 3, 1, 2, 2, 2, 2, 1, 1, 2, 2, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7905714511871338, "mapping_values": [1, 33, 33, 21, 12, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), tf.math.multiply(tf.math.multiply(tf.math.add(alpha, grad), grad), alpha)), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.sqrt(grad), grad), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))))))), tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad)))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), grad))))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2907211038934365, 2.2653466116530216, 2.234766266018786, 2.197476974142667, 2.145990182065126, 2.066568510328632, 1.9791731053591561, 1.862266675702585, 1.7146120389155612, 1.5943943829253648, 1.4809774795401727, 1.3768306323613126, 1.2977822214117014, 1.230991630112695, 1.1823724469709012, 1.1508050120942832, 1.1007972117570004, 1.0613847008754138, 1.0332191734108644, 1.0133098750271265, 0.9837818906024116, 0.9488974878769415, 0.9499279807634546, 0.9214461549256441, 0.9208433131468751, 0.9039338821543521, 0.890558397387312, 0.8821462091674044, 0.85882305051074, 0.8543011333413049, 0.8351802624857515, 0.8406597829498021, 0.8303582358196537, 0.8157876224927836, 0.804321208130556, 0.8006047123946912, 0.8058636654653034, 0.7874992247491291, 0.7835817405844031, 0.7737315269965758, 0.7767818658626815, 0.7747730686286374, 0.7630711581098909, 0.7529868177056959, 0.7573370552412538, 0.741680931145914, 0.7458245393669664, 0.7381733525399251, 0.7365019392690103, 0.721439709256842, 0.7249911702178362, 0.7278050173700383, 0.7197026214610946, 0.7049039225646958, 0.7167876084970997, 0.7002445902995713, 0.7035375764152362, 0.6979366731980631, 0.6984663848722017, 0.6961473146008935, 0.6894502312106353, 0.6877734544506761, 0.6839049423391226, 0.6730093011577698, 0.6730272833146219, 0.6753384621624209, 0.6741252933054269, 0.6708738542015621, 0.6769431252143229, 0.66909731537391, 0.6608502153140395], "accuracy": [0.11345925182104111, 0.19204860925674438, 0.25280675292015076, 0.2989037036895752, 0.3477744162082672, 0.3965130150318146, 0.4111742079257965, 0.43811914324760437, 0.4785365164279938, 0.4959714710712433, 0.5213313698768616, 0.5420684218406677, 0.5610883831977844, 0.574560821056366, 0.587372899055481, 0.6045436263084412, 0.6131290197372437, 0.6260731816291809, 0.6390172839164734, 0.6425835490226746, 0.6552634835243225, 0.6542068123817444, 0.6616035103797913, 0.6783780455589294, 0.6723021864891052, 0.6737551093101501, 0.6793025732040405, 0.6789063811302185, 0.6856426000595093, 0.6905296444892883, 0.7016246318817139, 0.7005679607391357, 0.6972658634185791, 0.7084929347038269, 0.7080966830253601, 0.7132478952407837, 0.7049266695976257, 0.7153612375259399, 0.7161537408828735, 0.7135120630264282, 0.7172104120254517, 0.7213049530982971, 0.7156254053115845, 0.7256637215614319, 0.7189275026321411, 0.7318716049194336, 0.7230220437049866, 0.7264562249183655, 0.7276449799537659, 0.7314753532409668, 0.7349095344543457, 0.7345132827758789, 0.7289658188819885, 0.7401928305625916, 0.7309470176696777, 0.7448157668113708, 0.7433628439903259, 0.7416457533836365, 0.7372870445251465, 0.7392682433128357, 0.7469290494918823, 0.7466648817062378, 0.7448157668113708, 0.746268630027771, 0.7495707273483276, 0.7416457533836365, 0.7473253011703491, 0.7458723783493042, 0.7427024245262146, 0.7500990629196167, 0.7541936039924622], "val_loss": [1.946742398398263, 1.920525414603097, 1.8881220817565918, 1.8452984946114677, 1.785689013344901, 1.7031910419464111, 1.5991113867078508, 1.4746559688023158, 1.3390226704733712, 1.2132346630096436, 1.1051343168531145, 1.0173337800162179, 0.9489455904279437, 0.8939250537327358, 0.8512587377003261, 0.8180244309561593, 0.7883712564195905, 0.7637211765561785, 0.7425260884421212, 0.72386634349823, 0.7071452140808105, 0.6925422293799264, 0.6818390233176095, 0.6713394778115409, 0.662121193749564, 0.6531579835074288, 0.6437606641224453, 0.6356898035321917, 0.6280914715358189, 0.6215169770377023, 0.6155052014759609, 0.6106834241322109, 0.6054641689573016, 0.5987620183399746, 0.5948264598846436, 0.5911803586142403, 0.5887930393218994, 0.5823190212249756, 0.5789046117237636, 0.5759366750717163, 0.5727837766919818, 0.5681862320218768, 0.5655258893966675, 0.5624789851052421, 0.5616480963570731, 0.5581859179905483, 0.5535452025277274, 0.5505345378603254, 0.54738450050354, 0.5458437715257917, 0.5437411069869995, 0.5418737786156791, 0.5402747052056449, 0.5351395266396659, 0.5349383694784982, 0.5335839475904193, 0.5307032891682216, 0.5286203963415963, 0.5277144057410104, 0.5251797778265817, 0.523016231400626, 0.5215845278331211, 0.5180845430919102, 0.517295071056911, 0.5165302242551532, 0.5124988726207188, 0.5124508993966239, 0.5100870132446289, 0.511758736201695, 0.5083161422184536, 0.5063165426254272], "val_accuracy": [0.23633334040641785, 0.3623333275318146, 0.4036666750907898, 0.4429999887943268, 0.48233333230018616, 0.5220000147819519, 0.5519999861717224, 0.5720000267028809, 0.5923333168029785, 0.6103333234786987, 0.6286666393280029, 0.6576666831970215, 0.6669999957084656, 0.6713333129882812, 0.6830000281333923, 0.6893333196640015, 0.6896666884422302, 0.6970000267028809, 0.7016666531562805, 0.7049999833106995, 0.7083333134651184, 0.7160000205039978, 0.7160000205039978, 0.7153333425521851, 0.7166666388511658, 0.7233333587646484, 0.7326666712760925, 0.7353333234786987, 0.7333333492279053, 0.7383333444595337, 0.7363333106040955, 0.737333357334137, 0.7416666746139526, 0.7423333525657654, 0.7423333525657654, 0.7440000176429749, 0.7473333477973938, 0.7483333349227905, 0.749666690826416, 0.750333309173584, 0.7506666779518127, 0.7559999823570251, 0.7556666731834412, 0.7546666860580444, 0.7620000243186951, 0.7570000290870667, 0.7596666812896729, 0.7646666765213013, 0.7643333077430725, 0.7613333463668823, 0.762666642665863, 0.7673333287239075, 0.765666663646698, 0.7703333497047424, 0.7699999809265137, 0.7710000276565552, 0.7676666378974915, 0.7696666717529297, 0.7726666927337646, 0.7706666588783264, 0.7710000276565552, 0.768666684627533, 0.7753333449363708, 0.7756666541099548, 0.7706666588783264, 0.7773333191871643, 0.7760000228881836, 0.7756666541099548, 0.7756666541099548, 0.7773333191871643, 0.7770000100135803]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7905714511871338, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.290721117403088, 2.265346701559909, 2.2347659420705726, 2.1974754268939485, 2.1459905868823013, 2.06657095349712, 1.9791721106362836, 1.86227351120828, 1.7146185275948105, 1.594417899591166, 1.4810140159041607, 1.3768452779570621, 1.2977602680550433, 1.230977165716325, 1.1823474248764678, 1.150787396060005, 1.1007488452841845, 1.0614040397523874, 1.03322420359886, 1.0133132918509888, 0.9838200482977632, 0.9489361333840748, 0.9499658321376963, 0.9214667748734149, 0.9208157047099913, 0.9039690796457592, 0.8906097874712589, 0.882163958589808, 0.8588627234677975, 0.8543338532602751, 0.8351192900989947, 0.8405943349163215, 0.8304263389798644, 0.8158071215016385, 0.8043592870038624, 0.8006098580524166, 0.8058682037161924, 0.7874624091384433, 0.7836223268206597, 0.7737391660431073, 0.7767297178526533, 0.7747632688094187, 0.7630215392703503, 0.7529800262953139, 0.7573546159536674, 0.7416780322707482, 0.7458548985215981, 0.738123934203765, 0.7365917139254258, 0.7214458756411568, 0.724987800512426, 0.7277649638045339, 0.7197167918965832, 0.7049837436154534, 0.7167866937299493, 0.7002744658464737, 0.7035730236698655, 0.6979113916490434, 0.6984483022274768, 0.6960730749019904, 0.6894230208439739, 0.687822361451256, 0.6839039632987824, 0.6730561791913636, 0.6729802921573799, 0.6753521637201089, 0.6741634339877501, 0.6708486671335016, 0.6769783719891901, 0.6690582919823038, 0.6608666865706931], "accuracy": [0.11345925182104111, 0.19204860925674438, 0.25280675292015076, 0.29903578758239746, 0.34764233231544495, 0.3965130150318146, 0.41104212403297424, 0.43811914324760437, 0.4785365164279938, 0.4959714710712433, 0.5213313698768616, 0.5420684218406677, 0.5612204670906067, 0.5744287371635437, 0.587769091129303, 0.6045436263084412, 0.6129969358444214, 0.6262052655220032, 0.6390172839164734, 0.6424514651298523, 0.6552634835243225, 0.6540747880935669, 0.6608110070228577, 0.6777176260948181, 0.6724342703819275, 0.6737551093101501, 0.6794346570968628, 0.6790384650230408, 0.6859067678451538, 0.6900013089179993, 0.7016246318817139, 0.700171709060669, 0.6966054439544678, 0.7084929347038269, 0.7086250185966492, 0.7129837274551392, 0.7047945857048035, 0.7160216569900513, 0.7157574892044067, 0.7135120630264282, 0.7170783281326294, 0.7211728692054749, 0.7152291536331177, 0.7257958054542542, 0.7187954187393188, 0.7320036888122559, 0.7236824631690979, 0.7263241410255432, 0.7281733155250549, 0.7318716049194336, 0.7349095344543457, 0.7338528633117676, 0.7298903465270996, 0.7395324110984802, 0.7310791015625, 0.7450799345970154, 0.7434949278831482, 0.7412495017051697, 0.7371549606323242, 0.7387399077415466, 0.7464007139205933, 0.7460044622421265, 0.7440232634544373, 0.7466648817062378, 0.7500990629196167, 0.7421740889549255, 0.7481178045272827, 0.746268630027771, 0.7429665923118591, 0.7499669790267944, 0.7543256878852844], "val_loss": [1.946742330278669, 1.920525414603097, 1.8881234441484724, 1.8452960423060827, 1.7856884683881487, 1.7031933580126082, 1.599114179611206, 1.474662917000907, 1.3390419823782784, 1.21326858656747, 1.105137484414237, 1.0173113005501884, 0.9489077499934605, 0.8938725335257394, 0.8512239456176758, 0.8179749931607928, 0.7883131504058838, 0.7636945928846087, 0.7425282342093331, 0.7238801717758179, 0.7071537971496582, 0.6925300700323922, 0.6818731852940151, 0.6713835000991821, 0.6621426684515817, 0.6531915664672852, 0.6438048226492745, 0.6357760599681309, 0.6281049762453351, 0.6215791191373553, 0.6155579601015363, 0.6108021054949079, 0.6055694988795689, 0.5988220487322126, 0.5948457377297538, 0.5912444761821202, 0.5887785468782697, 0.5823222909654889, 0.5789883477347237, 0.5759756905691964, 0.5727822440011161, 0.5681687252862113, 0.5655107498168945, 0.5625032016209194, 0.5617257016045707, 0.5582202672958374, 0.5536684308733258, 0.5505712032318115, 0.547421761921474, 0.545928818838937, 0.5437494005475726, 0.5419033254895892, 0.5400561775479998, 0.5350488764899117, 0.5348324435097831, 0.5334265402385167, 0.5305953877312797, 0.5286482402256557, 0.5276922839028495, 0.5251164095742362, 0.5230128935405186, 0.5215165274483817, 0.5180482523781913, 0.5172877141407558, 0.5164618151528495, 0.5124066897800991, 0.5123886210577828, 0.5101387330463955, 0.5117019585200718, 0.5083524840218681, 0.5062092031751361], "val_accuracy": [0.23633334040641785, 0.3623333275318146, 0.4036666750907898, 0.4429999887943268, 0.48233333230018616, 0.5220000147819519, 0.5519999861717224, 0.5720000267028809, 0.5926666855812073, 0.6103333234786987, 0.6286666393280029, 0.6576666831970215, 0.6669999957084656, 0.6713333129882812, 0.6833333373069763, 0.6893333196640015, 0.6896666884422302, 0.6973333358764648, 0.7013333439826965, 0.7049999833106995, 0.7083333134651184, 0.7153333425521851, 0.7163333296775818, 0.7153333425521851, 0.7166666388511658, 0.7229999899864197, 0.7323333621025085, 0.734666645526886, 0.7333333492279053, 0.7383333444595337, 0.7363333106040955, 0.7369999885559082, 0.7419999837875366, 0.7433333396911621, 0.7423333525657654, 0.7436666488647461, 0.7483333349227905, 0.7483333349227905, 0.7490000128746033, 0.750333309173584, 0.7506666779518127, 0.7570000290870667, 0.7556666731834412, 0.7556666731834412, 0.762333333492279, 0.7573333382606506, 0.7590000033378601, 0.765333354473114, 0.765333354473114, 0.7616666555404663, 0.762333333492279, 0.7673333287239075, 0.765333354473114, 0.7706666588783264, 0.7696666717529297, 0.7710000276565552, 0.7680000066757202, 0.7699999809265137, 0.7730000019073486, 0.7703333497047424, 0.7706666588783264, 0.768666684627533, 0.7749999761581421, 0.7756666541099548, 0.7706666588783264, 0.7776666879653931, 0.7763333320617676, 0.7746666669845581, 0.7753333449363708, 0.7770000100135803, 0.7776666879653931]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 5, 5, 3, 3, 6, 2, 5, 9, 3, 2, 6, 9, 7, 8, 7, 8, 4, 3, 9, 4], [2, 2, 3, 0, 1, 2, 2, 1, 0, 1, 2, 0, 3, 2, 3, 0], [98, 58, 15, 36, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7902857065200806, "mapping_values": [1, 12, 12, 8, 4, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(grad, tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.square(tf.math.square(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.290721117403088, 2.265346733050938, 2.2347665224187425, 2.1974765963447944, 2.1459891026156406, 2.0665661486904177, 1.97916896694986, 1.8622658886630474, 1.7146125095174958, 1.5944007380669065, 1.4810010750437645, 1.376840944019968, 1.2977643274061117, 1.2310033744714515, 1.1823772090442775, 1.15080583553745, 1.1007628458019545, 1.0614167088137139, 1.0332315079272463, 1.013313213406836, 0.9837917393114526, 0.9488786659960607, 0.9499456706205773, 0.9214609180065493, 0.9208012579958342, 0.9039506961278723, 0.8905588479137156, 0.8821011879550877, 0.8588753106918129, 0.8543483145862696, 0.8351496587009352, 0.8406448052024262, 0.8303534362798259, 0.8157988337005496, 0.8043345532963981, 0.8005772401171433, 0.805807374637235, 0.7874520964484567, 0.7835222186744332, 0.7737500578216228, 0.7767238996174074, 0.7747317650739811, 0.7630255305929238, 0.7529700642185693, 0.7573345757793551, 0.7416602577421219, 0.745837174732892, 0.7380864052425491, 0.7364928280562457, 0.7214086796582068, 0.7249430562873259, 0.727772206245176, 0.7196922054096787, 0.7049557163557593, 0.7167086460098787, 0.7002740781997818, 0.7035407069462827, 0.6978347863283109, 0.6983719920249206, 0.6959847986044712, 0.6894648193037662, 0.6877747427880284, 0.6838481191630849, 0.6729766404261883, 0.672916693529039, 0.6753095101607931, 0.6741361217239923, 0.6708637149956531, 0.6769721251531693, 0.66903441519297, 0.6607343147947583], "accuracy": [0.11345925182104111, 0.19204860925674438, 0.25280675292015076, 0.2989037036895752, 0.3477744162082672, 0.39664509892463684, 0.41104212403297424, 0.43811914324760437, 0.4785365164279938, 0.4959714710712433, 0.5213313698768616, 0.5423325896263123, 0.5612204670906067, 0.5746929049491882, 0.5875049233436584, 0.6046757102012634, 0.6128648519515991, 0.6260731816291809, 0.6390172839164734, 0.6427156329154968, 0.6552634835243225, 0.6540747880935669, 0.6610751748085022, 0.6781138777732849, 0.672170102596283, 0.6738871932029724, 0.6790384650230408, 0.6793025732040405, 0.6852463483810425, 0.6900013089179993, 0.7014925479888916, 0.7005679607391357, 0.6971337795257568, 0.7080966830253601, 0.7084929347038269, 0.7136441469192505, 0.7049266695976257, 0.7152291536331177, 0.7164179086685181, 0.7135120630264282, 0.7161537408828735, 0.7218332886695862, 0.715889573097229, 0.7253995537757874, 0.7189275026321411, 0.7316074371337891, 0.7232862114906311, 0.726192057132721, 0.7275128960609436, 0.7318716049194336, 0.7342491149902344, 0.7342491149902344, 0.7289658188819885, 0.7395324110984802, 0.7309470176696777, 0.7452120184898376, 0.7433628439903259, 0.7411174178123474, 0.7371549606323242, 0.7387399077415466, 0.7465327978134155, 0.7464007139205933, 0.7441553473472595, 0.746268630027771, 0.750231146812439, 0.7424382567405701, 0.7475894689559937, 0.746268630027771, 0.7428345084190369, 0.7495707273483276, 0.7544577717781067], "val_loss": [1.946742330278669, 1.9205256870814733, 1.8881223542349679, 1.8452977452959334, 1.7856847218104772, 1.70318831716265, 1.599109751837594, 1.4746544361114502, 1.339026825768607, 1.2132513523101807, 1.105140175138201, 1.0173228127615792, 0.9489454882485526, 0.8939113616943359, 0.8512357132775443, 0.8180017471313477, 0.7883428335189819, 0.7637054749897548, 0.74253397328513, 0.7238888910838536, 0.7071462188448224, 0.6925173997879028, 0.681828532900129, 0.6713386263166156, 0.6621261153902326, 0.6531210967472622, 0.64378103188106, 0.6356900419507708, 0.6280374016080584, 0.6215507132666451, 0.6155201877866473, 0.6106962476457868, 0.6055365119661603, 0.598729133605957, 0.5947630064828056, 0.5911367109843663, 0.5887604611260551, 0.582265956061227, 0.5789371047701154, 0.5759097848619733, 0.5727478776659284, 0.5681611810411725, 0.5654528481619698, 0.5624310800007412, 0.5616670676640102, 0.5581107480185372, 0.5535935844693866, 0.5504628590175084, 0.5473607437951225, 0.5457725695201329, 0.5437035730906895, 0.5418470587049212, 0.5401311772210258, 0.5350313016346523, 0.5348525387900216, 0.5334373882838658, 0.5306029490062169, 0.5286398785454887, 0.5276465926851545, 0.5251472847802299, 0.5230710676738194, 0.521577136857169, 0.5181080102920532, 0.5173498392105103, 0.5164901529039655, 0.5123990774154663, 0.5123083080564227, 0.509982671056475, 0.5117101499012539, 0.5083164317267281, 0.5062189442770821], "val_accuracy": [0.23633334040641785, 0.3623333275318146, 0.4036666750907898, 0.4429999887943268, 0.48233333230018616, 0.5220000147819519, 0.5519999861717224, 0.5720000267028809, 0.5926666855812073, 0.6103333234786987, 0.6290000081062317, 0.6576666831970215, 0.6669999957084656, 0.6713333129882812, 0.6833333373069763, 0.6893333196640015, 0.6896666884422302, 0.6973333358764648, 0.7013333439826965, 0.7053333520889282, 0.7086666822433472, 0.715666651725769, 0.7163333296775818, 0.715666651725769, 0.7166666388511658, 0.7233333587646484, 0.7326666712760925, 0.734333336353302, 0.7333333492279053, 0.7383333444595337, 0.7366666793823242, 0.737333357334137, 0.7423333525657654, 0.7423333525657654, 0.7426666617393494, 0.7440000176429749, 0.7480000257492065, 0.7476666569709778, 0.7486666440963745, 0.750333309173584, 0.7506666779518127, 0.7556666731834412, 0.7559999823570251, 0.7553333044052124, 0.7620000243186951, 0.7570000290870667, 0.7590000033378601, 0.765999972820282, 0.7649999856948853, 0.7620000243186951, 0.762333333492279, 0.7680000066757202, 0.7663333415985107, 0.7699999809265137, 0.7703333497047424, 0.7710000276565552, 0.7676666378974915, 0.7699999809265137, 0.7730000019073486, 0.7706666588783264, 0.7706666588783264, 0.7689999938011169, 0.7753333449363708, 0.7770000100135803, 0.7706666588783264, 0.7776666879653931, 0.7760000228881836, 0.7753333449363708, 0.7756666541099548, 0.7773333191871643, 0.7773333191871643]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [2, 4, 9, 8, 8, 1, 7, 0, 3, 3, 0, 7, 8, 9, 3, 4, 6, 9, 7, 8, 0, 1, 4, 9, 3, 4, 1, 3, 1, 4, 8, 1, 3, 7, 9, 2, 6, 3, 1, 8, 2, 4, 6, 5], [1, 2, 3, 1, 1, 1, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0, 0, 1, 1, 2, 0, 2, 3, 0, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1, 69, 70, 34], [1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [32, 57]], "fitness": -0.7888571619987488, "mapping_values": [1, 20, 20, 14, 6, 2, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, grad), alpha))), tf.math.multiply(tf.math.add(alpha, alpha), tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.sqrt(alpha), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(grad, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.278485040969506, 2.21031179728525, 2.078261869112105, 1.8537491553999004, 1.5753592713759985, 1.364391775793167, 1.2259948467928043, 1.1179637098199011, 1.0560220944142975, 1.0011010355386343, 0.958334575625553, 0.9222566501071755, 0.8898172622910423, 0.876299885710894, 0.8587156536792956, 0.8358798692837651, 0.8210273968419222, 0.8088187196109556, 0.780878887940486, 0.7817209183091202, 0.7723353022928204, 0.7580648883065181, 0.7559131664008575, 0.7516241374111541, 0.7356414066062014, 0.7347787243264021, 0.7246322196000099, 0.7123268037628993, 0.7079458652454643, 0.7074627543815202, 0.6934634160529416, 0.6987059266733188, 0.6839845001563704, 0.6803391058336963, 0.6848357665996982, 0.67661409417573, 0.669550591511198, 0.6619511726604492, 0.6548973796405749, 0.6619063859933151], "accuracy": [0.1504424810409546, 0.2856954038143158, 0.3770968019962311, 0.4465724527835846, 0.49531105160713196, 0.5400871634483337, 0.5781270861625671, 0.6116761565208435, 0.6273940205574036, 0.6449610590934753, 0.6612072587013245, 0.6742834448814392, 0.689869225025177, 0.6852463483810425, 0.6946242451667786, 0.7010962963104248, 0.7022850513458252, 0.7132478952407837, 0.7202483415603638, 0.7153612375259399, 0.7180029153823853, 0.7199841737747192, 0.7294940948486328, 0.7275128960609436, 0.7383436560630798, 0.7349095344543457, 0.7345132827758789, 0.741909921169281, 0.7464007139205933, 0.7404569983482361, 0.7449478507041931, 0.7437590956687927, 0.7514199018478394, 0.752212405204773, 0.748778223991394, 0.7530049085617065, 0.7580240368843079, 0.7607977986335754, 0.7602694630622864, 0.7511557340621948], "val_loss": [1.9147342954363142, 1.8263023240225655, 1.6543119975498743, 1.3840092250279017, 1.1225106034960066, 0.9524209839957101, 0.8510786294937134, 0.7829506056649345, 0.7366881540843419, 0.7039507457188198, 0.681660669190543, 0.6601496934890747, 0.640457136290414, 0.626922607421875, 0.6160202707563128, 0.6005854095731463, 0.5934901748384748, 0.5825796978814262, 0.5753202438354492, 0.5680664437157767, 0.5621930701392037, 0.5622679165431431, 0.5517270735331944, 0.5438496896198818, 0.5378238643918719, 0.5354616131101336, 0.5302955252783639, 0.529392055102757, 0.5209079469953265, 0.5196960483278547, 0.5176745482853481, 0.5143056256430489, 0.5099636656897408, 0.5060650280543736, 0.5057347331728254, 0.4987863302230835, 0.49815796102796284, 0.4993029662540981, 0.4902688264846802, 0.493661778313773], "val_accuracy": [0.3656666576862335, 0.4580000042915344, 0.5176666378974915, 0.5766666531562805, 0.6286666393280029, 0.6600000262260437, 0.6836666464805603, 0.6899999976158142, 0.7026666402816772, 0.7043333053588867, 0.7170000076293945, 0.7273333072662354, 0.721666693687439, 0.737333357334137, 0.737333357334137, 0.7436666488647461, 0.7400000095367432, 0.7490000128746033, 0.7453333139419556, 0.7540000081062317, 0.7543333172798157, 0.7603333592414856, 0.7590000033378601, 0.762333333492279, 0.7666666507720947, 0.7683333158493042, 0.7743333578109741, 0.7736666798591614, 0.7743333578109741, 0.7789999842643738, 0.7749999761581421, 0.7749999761581421, 0.7763333320617676, 0.7826666831970215, 0.7863333225250244, 0.7836666703224182, 0.7826666831970215, 0.7789999842643738, 0.7853333353996277, 0.781333327293396]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [8, 4, 8, 8, 8, 1, 7, 0, 3, 3, 0, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9, 9, 4, 1, 3, 4, 1, 8, 8, 3, 7, 4, 2, 9, 3, 1, 8, 2, 4, 6, 5], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0, 1, 2, 1, 1, 1, 0, 1, 3, 2, 0], [98, 8, 15, 25, 98, 52, 94, 1, 92, 58], [1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.27314284443855286, "mapping_values": [1, 2, 2, 1, 1, 0, 11, 11, 8, 3, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.771998416320948, 3.0962311725228484, 2.304916133245756, 2.303205928058042, 2.303359795649605, 2.3030394485613703], "accuracy": [0.2172764539718628, 0.14040417969226837, 0.10051512718200684, 0.09932637959718704, 0.09470347315073013, 0.09866596013307571], "val_loss": [1.9211716651916504, 1.9775041852678572, 1.9746088981628418, 1.9740125792367118, 1.97386257989066, 1.9737732751028878], "val_accuracy": [0.12166666984558105, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [98, 8, 15, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 9, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [9, 57]], "fitness": -0.2688571512699127, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.7721229554986153, 2.8360201288066316, 2.30606703820592, 2.3034590545851303, 2.303534435322099, 2.303123836236434], "accuracy": [0.21701228618621826, 0.1508387327194214, 0.10011887550354004, 0.09708096832036972, 0.1006472036242485, 0.0944393053650856], "val_loss": [1.9239749908447266, 1.9781368119376046, 1.9741119657244002, 1.9737746374947684, 1.9737683704921178, 1.9737678255353654], "val_accuracy": [0.1066666692495346, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 4, 2, 2, 8, 1, 4, 0, 1, 3, 3, 7, 8, 9, 3, 4, 6, 8, 7, 2, 2, 1, 4, 9, 7, 0, 2, 3, 5], [2, 2, 2, 2, 1, 2, 2, 2, 0, 3, 2, 0, 0, 2, 3, 0, 3, 0], [18, 8, 39, 58, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3, 4], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [9, 57]], "fitness": -0.26485714316368103, "mapping_values": [1, 45, 45, 27, 18, 7, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), grad)), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(grad, tf.math.add(alpha, grad)))))))))), tf.math.add(alpha, tf.math.sqrt(grad)))), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.multiply(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(alpha, grad), grad))))), tf.math.add(alpha, tf.math.negative(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.add(tf.math.square(grad), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.7719516845474375, 3.032645140310178, 2.3054477134637072, 2.3035057967191896, 2.3036469352590156, 2.303129125658579], "accuracy": [0.2172764539718628, 0.14700831472873688, 0.09800554811954498, 0.09813763201236725, 0.09536388516426086, 0.09668471664190292], "val_loss": [1.9236044883728027, 1.9777815001351493, 1.9743052891322546, 1.973898274557931, 1.973804201398577, 1.9737798827035087], "val_accuracy": [0.10733333230018616, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 2, 2, 7, 8, 9, 3, 4, 5, 9, 7, 8, 3, 1, 4, 9, 9, 4], [1, 1, 3, 0, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [99, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.2094285786151886, "mapping_values": [1, 32, 32, 21, 11, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, alpha), grad), tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(tf.math.sqrt(grad), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))))))))), tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))), tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.7703588173578697, 2.2869885491814674, 2.351449742466467, 2.2498499818717987, 2.30393510191684, 2.3032722543369526, 2.303572483160996, 2.303164007326458], "accuracy": [0.21780477464199066, 0.1154404953122139, 0.16682076454162598, 0.13855500519275665, 0.10091137140989304, 0.09800554811954498, 0.09668471664190292, 0.09747721254825592], "val_loss": [1.896627494267055, 1.9683899198259627, 1.664024761744908, 1.9743564469473702, 1.9739231382097517, 1.9737869671412878, 1.9736732074192591, 1.9735742977687292], "val_accuracy": [0.1536666601896286, 0.09966666996479034, 0.20766666531562805, 0.1003333330154419, 0.09833333641290665, 0.09833333641290665, 0.10000000149011612, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 6, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.15571428835391998, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.772284417214757, 2.43707818673854, 2.305615209774208, 2.3033813302228165, 2.3031380716615333, 2.304384032638554, 2.3032186899864127, 2.302945958372939, 2.3026258527264227, 2.302070071967743, 2.329378683616488, 2.303901105052397, 2.3029348226727873, 2.302973561456348, 2.302773555634186], "accuracy": [0.21701228618621826, 0.1628582775592804, 0.09747721254825592, 0.10196803510189056, 0.10038304328918457, 0.09668471664190292, 0.09430722147226334, 0.09879804402589798, 0.10157178342342377, 0.10210011899471283, 0.16312244534492493, 0.09893012791872025, 0.10276053100824356, 0.09787346422672272, 0.09800554811954498], "val_loss": [1.9250271660940987, 1.9771092959812708, 1.9740921429225378, 1.973710196358817, 1.9736817904881068, 1.973747866494315, 1.973637921469552, 1.9734674181256975, 1.9732519558497839, 1.968404974256243, 1.9753868920462472, 1.9739864213126046, 1.9736627170017786, 1.9735113552638464, 1.9722958973475866], "val_accuracy": [0.10466666519641876, 0.10333333164453506, 0.09833333641290665, 0.10333333164453506, 0.09833333641290665, 0.14300000667572021, 0.10000000149011612, 0.10233332961797714, 0.10199999809265137, 0.19966666400432587, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.10300000011920929, 0.1420000046491623]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [3, 5, 2, 8, 8, 6, 9, 0, 3, 3, 3, 0, 8, 9, 3, 4, 9, 6, 7, 8, 7, 1, 4, 9, 2, 9], [0, 2, 3, 1, 1, 2, 1, 1, 0, 0, 2, 0, 3, 2, 3, 0, 1, 2, 2, 2, 0], [30, 8, 39, 25, 23, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [0, 0, 0, 1, 3, 3], [37, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [291553.8334473353, 5458841.900673623, 24869090.636903975, 69577614.5809008, 148521203.8420288, 270962681.5036323], "accuracy": [0.0936468094587326, 0.09866596013307571, 0.09906221181154251, 0.10381719470024109, 0.10328886657953262, 0.10091137140989304], "val_loss": [1086167.642857143, 8644432.57142857, 29125952.57142857, 68981945.14285715, 134663986.2857143, 232622550.85714287], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 4, 2, 4, 8, 1, 7, 0, 8, 3, 3, 7, 8, 9, 3, 2, 6, 9, 7, 8, 7, 6, 4, 9, 9, 4], [1, 2, 3, 1, 1, 2, 1, 2, 0, 2, 2, 0, 2, 2, 2, 0], [30, 8, 39, 25, 9, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 8, 4, 7, 8, 4, 0], [3, 0, 3, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 13, 8, 5, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(alpha)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.sqrt(tf.math.pow(tf.math.add(tf.math.sqrt(sigma), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.negative(sigma), alpha))), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 4, 2, 0, 8, 1, 4, 2, 3, 8, 3, 7, 8, 9, 4, 4, 2, 6, 7, 8, 5, 1, 3, 9, 9, 4, 7, 4], [1, 0, 3, 0, 1, 1, 1, 2, 2, 2, 2, 0, 3, 2, 3, 0, 0], [60, 76, 39, 25, 98, 52, 94, 1, 43], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 4, 7, 8, 4], [0, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 11, 8, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(alpha, grad), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.sqrt(alpha))), tf.math.multiply(alpha, grad))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3023858992115946, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09853387624025345, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [3, 4, 2, 8, 8, 1, 7, 0, 3, 3, 0, 1, 8, 9, 3, 6, 4, 9, 7, 8, 7, 1, 5, 9, 5, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [98, 8, 15, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 8, 6, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))))))), tf.math.negative(alpha))), alpha)), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0754193663597107, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 4, 2, 4, 8, 1, 7, 0, 3, 3, 3, 7, 0, 8, 3, 4, 6, 8, 7, 1, 7, 1, 9, 9, 7, 2, 3, 6, 5], [2, 2, 3, 2, 0, 1, 2, 2, 0, 0, 2, 0, 2, 2, 3, 0], [73, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [2, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 4, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0754193663597107, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 4, 2, 5, 8, 1, 7, 2, 3, 0, 3, 7, 8, 9, 3, 4, 6, 2, 1, 8, 7, 1, 4, 9, 5, 3, 3, 0, 5, 9, 4, 2, 9, 7, 8, 9, 2, 5, 1, 1], [1, 2, 3, 1, 1, 2, 2, 0, 0, 1, 2, 0, 3, 2, 0, 0, 0, 1, 1, 2, 0, 2, 3, 0, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1, 73, 59], [1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 8, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 33, 33, 20, 13, 4, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 12, 7, 5, 2], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, grad))), tf.math.add(alpha, alpha))), alpha))))))), tf.math.add(alpha, grad))), tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.sqrt(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.sqrt(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))))))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.negative(sigma)), tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 4, 0, 8, 4, 3, 7, 0, 3, 8, 3, 7, 8, 9, 3, 4, 6, 8, 7, 8, 2, 1, 4, 9, 7, 4, 9, 6, 5], [1, 2, 3, 1, 1, 2, 1, 2, 0, 2, 2, 0, 2, 2, 2, 0], [30, 8, 39, 25, 9, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [5, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 15, 15, 9, 6, 0, 11, 11, 8, 3, 3, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.pow(tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)))), alpha))))))), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.301522894589625, 2.302896093714428, 2.3029600034977515, 2.303082190201094, 2.303876924067598, 2.3012650870785594], "accuracy": [0.08875974267721176, 0.09179764986038208, 0.08374059200286865, 0.08915598690509796, 0.09034473448991776, 0.09008057415485382], "val_loss": [1.9712321417672294, 1.9712319374084473, 1.9712318692888533, 1.9712317330496651, 1.9712315968104772, 1.971231528690883], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 4, 0, 8, 8, 1, 7, 0, 3, 8, 3, 7, 8, 9, 3, 4, 6, 8, 7, 8, 2, 1, 4, 9, 7, 4, 9, 6, 5], [1, 2, 2, 1, 0, 2, 1, 2, 0, 2, 2, 0, 2, 2, 2, 0], [30, 8, 39, 25, 9, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(alpha)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.301522912571002, 2.302896332133007, 2.302960367880446, 2.303082703001007, 2.303877625813684, 2.3012658832977317], "accuracy": [0.08875974267721176, 0.09179764986038208, 0.08374059200286865, 0.08915598690509796, 0.09034473448991776, 0.09008057415485382], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 2, 2, 1, 1, 2, 2, 0, 3, 2, 0, 0, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [9, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 2, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(sigma))", "other_info": {"loss": [2.301522912571002, 2.302896332133007, 2.302960367880446, 2.303082703001007, 2.303877625813684, 2.3012658832977317], "accuracy": [0.08875974267721176, 0.09179764986038208, 0.08374059200286865, 0.08915598690509796, 0.09034473448991776, 0.09008057415485382], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]