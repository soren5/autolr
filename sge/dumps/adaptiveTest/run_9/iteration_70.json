[{"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1], [1, 1, 5, 7, 8], [0, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [4, 4, 3], [8, 0, 19], [0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 1, 1], [1, 8, 3, 9, 4], [5], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7937142848968506, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2928894273735008, 2.2664808462072656, 2.2362933174305115, 2.1952800303874724, 2.1424908039670942, 2.069808501357085, 1.9745247202810121, 1.8559947968662973, 1.7239370545250092, 1.5933937824255817, 1.477469000676525, 1.3915765581192703, 1.3041415163995473, 1.2309802530652985, 1.184420497929809, 1.1315845170781251, 1.1031997349630367, 1.0626879089528292, 1.032257002192938, 1.0131289369441798, 0.988573297990107, 0.964314321540429, 0.941085794921155, 0.9250439778688703, 0.9188509131183304, 0.8947004673503346, 0.885935660445254, 0.8771514285588545, 0.8526685732687311, 0.8494326251766481, 0.8352905776931814, 0.8357681877120863, 0.8276828296385138, 0.8103476982027894, 0.8098765448997396, 0.8023159180602629, 0.801444536375883, 0.7878874567175082, 0.788889818880552, 0.7796512811159682, 0.7729006729515205, 0.7701809538227928, 0.7544214917747115, 0.75737779940502, 0.7512651547590786, 0.7481228939813944, 0.7465984339113202, 0.7344826681109121, 0.7434416723100186, 0.7237043180533089, 0.7263603980798511, 0.7325303937938188, 0.7229226211499481, 0.7058287469970079, 0.7143904023150947, 0.7058442577615375, 0.7074584924329179, 0.7103559515652892, 0.6992621747431202, 0.6996188202570017, 0.6911182827512429, 0.6924940871603501, 0.681842669393912, 0.6808755715698567, 0.6778680854910605, 0.6767806034707878, 0.6851001383763546, 0.6764712327853359, 0.6652780379585822, 0.6646627534366382, 0.6632819414658396, 0.6664456344394006, 0.6720226192754636, 0.662192723660059, 0.6608709960156397, 0.6527801462451717, 0.6558435566200792, 0.6519153239452733], "accuracy": [0.11993131786584854, 0.18570862710475922, 0.25624093413352966, 0.3070928454399109, 0.35622772574424744, 0.38409721851348877, 0.4209483563899994, 0.43864747881889343, 0.47470611333847046, 0.500990629196167, 0.5164443254470825, 0.5334830284118652, 0.5583146214485168, 0.5840708017349243, 0.5876370072364807, 0.6123365759849548, 0.6110157370567322, 0.6207898855209351, 0.635451078414917, 0.6425835490226746, 0.6465460062026978, 0.6540747880935669, 0.6660943031311035, 0.663848876953125, 0.6690001487731934, 0.6794346570968628, 0.6811517477035522, 0.6837934255599976, 0.6901333928108215, 0.6929071545600891, 0.6979262828826904, 0.6985867023468018, 0.6976621150970459, 0.7091533541679382, 0.7058512568473816, 0.7065116763114929, 0.7074362635612488, 0.7119271159172058, 0.7150970697402954, 0.7201162576675415, 0.717870831489563, 0.7209087014198303, 0.7259278893470764, 0.7173424959182739, 0.7223616242408752, 0.7197200059890747, 0.7285695672035217, 0.7339849472045898, 0.7281733155250549, 0.7338528633117676, 0.7308149337768555, 0.7333245277404785, 0.7313432693481445, 0.7347774505615234, 0.7305507659912109, 0.737947404384613, 0.7349095344543457, 0.7383436560630798, 0.7416457533836365, 0.7397965788841248, 0.7457403540611267, 0.743891179561615, 0.748249888420105, 0.7481178045272827, 0.7452120184898376, 0.7493065595626831, 0.7417778372764587, 0.7448157668113708, 0.7528728246688843, 0.748778223991394, 0.7530049085617065, 0.7485140562057495, 0.7474573850631714, 0.7500990629196167, 0.7532690763473511, 0.7559106945991516, 0.7537974119186401, 0.7602694630622864], "val_loss": [1.9466421944754464, 1.9206496647426061, 1.8885925156729562, 1.8455075536455428, 1.7853574752807617, 1.7045602798461914, 1.5998571600232805, 1.4756025246211462, 1.3439253057752336, 1.2169526985713415, 1.1075268813541956, 1.0214288575308663, 0.9515255178724017, 0.8948828833443778, 0.8532467058726719, 0.8155969551631382, 0.7877524239676339, 0.7613567284175328, 0.7414765698569161, 0.7245476245880127, 0.7085909162248883, 0.6949952500207084, 0.6827958141054425, 0.6714323929377964, 0.6598636593137469, 0.6517808777945382, 0.6442795991897583, 0.635193041392735, 0.6270168679101127, 0.6211059093475342, 0.6141467605318341, 0.6098717451095581, 0.6035050664629255, 0.6022847039358956, 0.595259393964495, 0.5909013237271991, 0.585410509790693, 0.5836117097309658, 0.5793786900384086, 0.5775142737797329, 0.5724696942738124, 0.5683985607964652, 0.5648050819124494, 0.5615273884364537, 0.5605488845280239, 0.5558516979217529, 0.5529023579188755, 0.552714501108442, 0.5503225496837071, 0.5481810910361153, 0.546331524848938, 0.5421690089362008, 0.5382205077580043, 0.5359698534011841, 0.5350034066608974, 0.5339185340063912, 0.5294693538120815, 0.5301344735281808, 0.5260262659617833, 0.5241656303405762, 0.5224346263068063, 0.5193840265274048, 0.5168094975607735, 0.5158693790435791, 0.5156641176768711, 0.5133560214723859, 0.5134141615458897, 0.5106373003550938, 0.5097105162484306, 0.507813675062997, 0.5072946889059884, 0.5058098179953439, 0.5026215825762067, 0.5036349807466779, 0.5002725464957101, 0.5005697011947632, 0.49972755568368094, 0.4996605600629534], "val_accuracy": [0.23999999463558197, 0.36666667461395264, 0.4076666533946991, 0.4493333399295807, 0.4959999918937683, 0.5360000133514404, 0.5506666898727417, 0.5723333358764648, 0.5903333425521851, 0.612333357334137, 0.6323333382606506, 0.656333327293396, 0.6669999957084656, 0.6736666560173035, 0.6800000071525574, 0.6863333582878113, 0.6923333406448364, 0.6936666369438171, 0.7003333568572998, 0.7110000252723694, 0.7099999785423279, 0.7146666646003723, 0.718999981880188, 0.7143333554267883, 0.7260000109672546, 0.7279999852180481, 0.7286666631698608, 0.7263333201408386, 0.734666645526886, 0.7333333492279053, 0.737666666507721, 0.7393333315849304, 0.7409999966621399, 0.7433333396911621, 0.7456666827201843, 0.7473333477973938, 0.7476666569709778, 0.7463333606719971, 0.750333309173584, 0.7586666941642761, 0.7583333253860474, 0.7543333172798157, 0.7570000290870667, 0.7576666474342346, 0.7613333463668823, 0.7586666941642761, 0.762666642665863, 0.7593333125114441, 0.7593333125114441, 0.762666642665863, 0.7633333206176758, 0.7643333077430725, 0.7673333287239075, 0.7689999938011169, 0.7699999809265137, 0.7663333415985107, 0.7730000019073486, 0.7713333368301392, 0.7689999938011169, 0.7723333239555359, 0.7713333368301392, 0.7760000228881836, 0.7763333320617676, 0.7770000100135803, 0.7770000100135803, 0.7773333191871643, 0.7746666669845581, 0.781333327293396, 0.7766666412353516, 0.7770000100135803, 0.7786666750907898, 0.781000018119812, 0.7833333611488342, 0.7770000100135803, 0.7816666960716248, 0.7799999713897705, 0.7806666493415833, 0.7786666750907898]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1], [5, 9, 9], [3, 4, 3], [8, 0, 19], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [2, 3, 0, 9, 7], [6], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [41, 57]], "fitness": -0.7914285659790039, "mapping_values": [1, 3, 3, 1, 2, 0, 2, 2, 2, 0, 1, 6, 4, 3, 1, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.087127186225122, 1.885026311515392, 1.3345056696338675, 0.9835075705342085, 0.8535672575255049, 0.814758882554389, 0.7244720703748396, 0.7286608643488341, 0.6850708069235751, 0.6878750272761436, 0.6388959684439339, 0.6387610880768987, 0.6242705548853529, 0.5880598608119503, 0.6025895552392082, 0.5822877449649846, 0.5546128595069005, 0.5596859852682882], "accuracy": [0.3059041202068329, 0.3819838762283325, 0.5292563438415527, 0.6343944072723389, 0.6765288710594177, 0.6873596906661987, 0.7181349992752075, 0.7202483415603638, 0.7351737022399902, 0.7341170310974121, 0.7530049085617065, 0.7514199018478394, 0.7588165402412415, 0.7705719470977783, 0.7626469135284424, 0.7784969210624695, 0.7903843522071838, 0.7844406366348267], "val_loss": [1.9575285911560059, 1.3466227735791887, 0.8175033330917358, 0.6998043741498675, 0.5859516518456596, 0.5758031266076225, 0.5541800430842808, 0.5326086112431118, 0.5677128859928676, 0.5214765242167881, 0.5290790625980922, 0.5385550941739764, 0.47023774896349224, 0.5044100625174386, 0.49590541635240826, 0.4797994238989694, 0.4726480756487165, 0.48268728596823557], "val_accuracy": [0.21899999678134918, 0.5386666655540466, 0.6613333225250244, 0.6899999976158142, 0.7326666712760925, 0.737666666507721, 0.7443333268165588, 0.7583333253860474, 0.7329999804496765, 0.7726666927337646, 0.7459999918937683, 0.7436666488647461, 0.7926666736602783, 0.7580000162124634, 0.7766666412353516, 0.7670000195503235, 0.7753333449363708, 0.7883333563804626]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1], [2, 3, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7757142782211304, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 2, 1, 1, 5, 4, 2, 2, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2795704239631265, 2.2162884986002243, 2.1080558833161427, 1.9259444447146934, 1.6681757057662558, 1.4329650067634365, 1.2710384566628654, 1.1701198880856047, 1.08797330579832, 1.0360059757998528, 0.9805627310390974, 0.939794177841186, 0.9155521683169551, 0.8978215290838465, 0.8691436491307329, 0.8549261185880729, 0.8341782131152241, 0.8188065345796532, 0.7950477671661019, 0.7885783203305381, 0.7785910622885577, 0.7607923209738061, 0.7673104073487693, 0.7580544960780654, 0.7400540701780243, 0.7336335489306199, 0.7141802719775885, 0.7223272905011517, 0.7154061484566737, 0.7047024613925101], "accuracy": [0.1488574892282486, 0.2798837721347809, 0.37141725420951843, 0.4283449947834015, 0.48870691657066345, 0.5340113639831543, 0.5698058605194092, 0.590278685092926, 0.6148461103439331, 0.635979413986206, 0.6497160196304321, 0.669792652130127, 0.6733588576316833, 0.6837934255599976, 0.687887966632843, 0.691850483417511, 0.6985867023468018, 0.7074362635612488, 0.7129837274551392, 0.7181349992752075, 0.7157574892044067, 0.7259278893470764, 0.7213049530982971, 0.7337207794189453, 0.7318716049194336, 0.7297582626342773, 0.7432307600975037, 0.7343811988830566, 0.7372870445251465, 0.7454761862754822], "val_loss": [1.9194391795567103, 1.8441732951572962, 1.702948876789638, 1.4769884518214635, 1.2171321596418108, 1.0226942811693465, 0.9021587031228202, 0.8245303801127842, 0.7784456014633179, 0.7336999177932739, 0.7055399247578212, 0.6791748489652362, 0.6589419841766357, 0.6439247301646641, 0.6304163932800293, 0.6191282272338867, 0.6044017246791294, 0.6007164716720581, 0.5959494454520089, 0.5852887971060616, 0.5727821077619281, 0.5704973084586007, 0.5652788877487183, 0.5638870511736188, 0.553007824080331, 0.5497683116367885, 0.5443251984460014, 0.5459167446408953, 0.5413640907832554, 0.5423685652869088], "val_accuracy": [0.3463333249092102, 0.41966667771339417, 0.4819999933242798, 0.550000011920929, 0.5910000205039978, 0.6366666555404663, 0.659333348274231, 0.6826666593551636, 0.6916666626930237, 0.7009999752044678, 0.70333331823349, 0.7246666550636292, 0.7283333539962769, 0.7316666841506958, 0.7386666536331177, 0.7379999756813049, 0.7463333606719971, 0.7540000081062317, 0.7390000224113464, 0.753000020980835, 0.7599999904632568, 0.7573333382606506, 0.7636666893959045, 0.7536666393280029, 0.765666663646698, 0.7606666684150696, 0.7633333206176758, 0.7583333253860474, 0.7643333077430725, 0.7580000162124634]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 1, 1, 1], [2, 8, 5], [3, 4, 3], [8, 0, 19], [0, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0, 1], [2, 3, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.4788571298122406, "mapping_values": [1, 3, 3, 1, 2, 0, 4, 4, 2, 2, 0, 5, 4, 2, 2, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.sqrt(grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, grad))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.291309728252102, 2.2646840433040865, 2.2338732231436405, 2.1915881808218844, 2.1380429589406704, 2.0694325085187617, 2.011827283893767, 2.0325937619723855, 2.1573702482861643, 2.2395225417077063], "accuracy": [0.12402588874101639, 0.19191652536392212, 0.2615242302417755, 0.3073570132255554, 0.34922730922698975, 0.36586976051330566, 0.33562275767326355, 0.24356095492839813, 0.16655659675598145, 0.13908334076404572], "val_loss": [1.9466877664838518, 1.9201816831316267, 1.8868786948067802, 1.8426203727722168, 1.7829296248299735, 1.7132617405482702, 1.6823958669389998, 1.7590714182172502, 1.8590425082615443, 1.9151592935834612], "val_accuracy": [0.2266666740179062, 0.3736666738986969, 0.3956666588783264, 0.4326666593551636, 0.4593333303928375, 0.4449999928474426, 0.3466666638851166, 0.15566666424274445, 0.10133333504199982, 0.0989999994635582]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1, 1], [2, 7, 4], [5, 4, 3, 4], [8, 0, 19], [0, 0, 0, 0, 1, 1], [0, 0, 0, 1, 0, 1], [2, 3, 8, 9, 7], [4, 2], [88, 19], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.38342857360839844, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 0, 6, 4, 3, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.994916796888957, 2.3077357704329877, 2.30324792052619, 2.2911874176000704, 2.3941944093909546, 2.30271590384258, 2.2132234240189175, 2.547459107096547, 2.304549606610692], "accuracy": [0.16351869702339172, 0.1006472036242485, 0.1010434553027153, 0.16378284990787506, 0.15836745500564575, 0.10553427785634995, 0.18293488025665283, 0.15374454855918884, 0.09602430462837219], "val_loss": [1.981126035962786, 1.9750849178859167, 1.971682344164167, 1.8239120074680872, 1.9750377110072546, 1.9543168885367257, 1.8561726297651018, 1.9751295362200056, 1.9738942555018835], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.13866665959358215, 0.48899999260902405, 0.1003333330154419, 0.1886666715145111, 0.15700000524520874, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 0, 1, 0, 1], [7, 5, 0, 7, 8], [2, 2, 1, 1], [50], [1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 1], [5, 2, 9, 9], [5, 4, 3], [8, 0, 19], [0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 1], [2, 3, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 3, 0, 4, 7, 7, 0], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.261428564786911, "mapping_values": [1, 4, 4, 2, 2, 0, 4, 4, 4, 0, 2, 6, 3, 3, 0, 0, 13, 7, 6, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, tf.math.sqrt(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(alpha, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.negative(alpha), sigma)))), sigma)", "other_info": {"loss": [2.3058503700080504, 2.2539884699586046, 7.126696645087727, NaN, NaN, NaN, NaN], "accuracy": [0.18082155287265778, 0.1372341811656952, 0.1776515692472458, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.8023953437805176, 1.9035607746669225, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.19300000369548798, 0.28033334016799927, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 1, 5, 7, 8], [2, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1], [6, 9], [3, 4, 3], [73, 0, 19], [0, 0, 1, 1, 0, 1], [0, 1, 1, 1, 0, 1], [2, 3, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10571428388357162, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 2, 1, 1, 3, 2, 1, 1, 0, 8, 4, 4, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [2.30395932730399, 2.3039876919979307, 2.303253139219484, 2.3019282980019375, 2.3026388436890453, 2.300533678773813, 2.3002952842853484, 2.2997801217263194, 2.298493933321825, 2.2976751529372144, 2.2977047687067476, 2.298589507995926, 2.299465197582192, 2.2984690253981164, 2.2980651281387297, 2.298373329200135, 2.298844650610169, 2.29893061702498, 2.2985313439082633, 2.2994347877663674, 2.299867460583148], "accuracy": [0.0944393053650856, 0.08770307898521423, 0.08942015469074249, 0.09034473448991776, 0.08955223858356476, 0.09734513610601425, 0.09866596013307571, 0.10408136248588562, 0.10791176557540894, 0.10381719470024109, 0.10553427785634995, 0.09879804402589798, 0.09760929644107819, 0.10910051316022873, 0.11187426000833511, 0.10566636174917221, 0.1088363528251648, 0.11121384054422379, 0.11332716792821884, 0.10593052208423615, 0.10870426893234253], "val_loss": [1.971172877720424, 1.9709975378853934, 1.9707229478018624, 1.9703723362513952, 1.9699698856898717, 1.9695564678737096, 1.9691596712384904, 1.9688077654157365, 1.9685602869306291, 1.968421799795968, 1.9683732305254256, 1.9683691433497839, 1.9684621265956335, 1.9686476162501745, 1.968942642211914, 1.9692692075456892, 1.9696572848728724, 1.970090048653739, 1.9704563958304269, 1.9707764898027693, 1.9710243770054408], "val_accuracy": [0.04066666588187218, 0.0416666679084301, 0.04399999976158142, 0.045666664838790894, 0.050333332270383835, 0.05400000140070915, 0.059333331882953644, 0.06466666609048843, 0.0729999989271164, 0.0806666687130928, 0.08833333104848862, 0.10100000351667404, 0.109333336353302, 0.1146666631102562, 0.11966666579246521, 0.12200000137090683, 0.12099999934434891, 0.11833333224058151, 0.10966666787862778, 0.10533333569765091, 0.10166666656732559]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [7, 1, 5, 7, 8, 7, 1, 9, 0, 0, 4, 4, 8, 2, 7, 7, 3, 5, 9, 6, 8, 4, 0], [2, 2, 1, 1, 3, 3, 3, 3, 2, 1, 0, 0], [50, 65, 29, 48], [1, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [1, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1], [2, 3, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [9, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 35, 35, 23, 12, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(tf.math.sqrt(grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha))))), tf.math.subtract(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.pow(tf.math.sqrt(tf.math.add(alpha, grad)), grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(grad, tf.math.sqrt(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.math.negative(alpha))), tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302886008240087, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1006472036242485, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [0, 0, 1, 1], [11, 8], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9, 9], [3, 4, 3], [8, 0, 19], [1, 0, 1, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1], [2, 3, 1, 9, 7], [5, 7], [37], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 3, 9], [2, 0, 0, 1, 3, 3], [28, 57, 73]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 11, 7, 4, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(beta), tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0750231146812439, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1], [2, 9, 9], [3, 4, 3], [90, 0, 19], [0, 0, 1, 1, 0, 1], [0, 0, 1, 1, 0, 1], [2, 4, 5, 9, 7], [4, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 5, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 2, 1, 1, 5, 3, 2, 1, 0, 12, 7, 5, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.pow(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.pow(alpha, sigma))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 0, 0, 0, 1, 1], [0, 1, 1, 1, 0, 1], [2, 3, 8, 9, 7], [4, 3], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 5, 1], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 2, 1, 1, 3, 3, 1, 2, 0, 12, 7, 5, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(alpha), tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.subtract(alpha, sigma)))))", "other_info": {"loss": [42497431.60706342, 73349483.44894995, 73061393.75617488, 73481578.82234843, 73536454.2617884, 73492724.67256637], "accuracy": [0.08532558381557465, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [62485673.14285714, 62711760.0, 62712077.71428572, 62712077.71428572, 62712077.71428572, 62712077.71428572], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1], [1, 1, 5, 7, 8], [0, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 0, 1, 0, 1, 1, 0], [0, 0, 1, 1, 0, 1], [2, 3, 8, 9, 7], [7, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.302886008240087, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1006472036242485, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 0, 0, 1, 1], [2, 9, 9], [3, 4, 3], [8, 0, 19], [0, 0, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1], [2, 3, 5, 9, 7], [4, 0], [37], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [4, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [41, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 4, 2, 2, 1, 8, 4, 4, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9, 9], [3, 4, 3], [8, 0, 19], [0, 0, 1, 1, 0, 1, 1], [0, 0, 0, 1, 0, 1], [2, 3, 1, 9, 7], [5, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 3, 3, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, tf.math.subtract(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0750231146812439, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [1, 1, 0, 1, 1, 0, 1, 0, 1], [6, 1, 5, 7, 8], [2, 0, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1], [5, 9], [0, 4, 3], [76, 0, 19], [0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1], [4, 8, 3, 9, 4], [2, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 0, 4, 7], [2, 3, 0, 1, 3, 3], [89, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 2, 0, 1, 4, 3, 2, 1, 0, 8, 4, 4, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.sqrt(sigma)), tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(beta, sigma), tf.math.negative(tf.math.pow(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 2, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [5, 4, 3], [8, 0, 19], [0, 0, 1, 0, 0, 1, 0], [1, 0, 0, 1, 1, 1], [1, 8, 1, 9, 4, 8], [2, 7], [88, 19], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 7, 0], [2, 1, 0, 1, 3, 3], [28, 76]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0746268630027771, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [0, 1, 5, 7, 8], [0, 2, 1, 1], [50], [0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1], [2, 9, 8, 2, 0], [2, 4, 3], [8, 0, 19], [1, 0, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1], [2, 3, 1, 9, 7], [5, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 2, 0, 1, 3, 3], [64, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 7, 7, 5, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.negative(grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [0, 0, 1, 1], [50, 5], [0, 1, 1, 0, 0, 0, 1], [1, 0, 0, 0, 1, 1], [2, 9], [5, 4, 3], [8, 0, 19], [0, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1], [2, 3, 1, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 4, 7], [1, 1, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 8, 4, 4, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, alpha), tf.math.negative(tf.math.pow(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [1033.532541638053, 1362.8327259592265, 1359.9831398341792, 1349.2187255569154, 1360.596011839869, 1349.2359005483763], "accuracy": [0.09708096832036972, 0.09813763201236725, 0.09800554811954498, 0.10038304328918457, 0.10038304328918457, 0.09774138033390045], "val_loss": [850.6299525669643, 850.6314348493304, 850.6314348493304, 850.6314348493304, 850.6314348493304, 850.6314348493304], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 1, 1], [6, 8, 5], [3, 4, 3], [8, 0, 19], [0, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0, 1], [6, 3, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 6, 6, 3, 3, 0, 3, 3, 1, 2, 0, 5, 4, 2, 2, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.math.square(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, grad))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3039808849916166, 2.304160429265883, 2.3037029337401185, 2.302766740188276, 2.3039777070114624, 2.3024533506649645], "accuracy": [0.0944393053650856, 0.0866464152932167, 0.08770307898521423, 0.0874389111995697, 0.08809932321310043, 0.0936468094587326], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [2, 4, 3], [8, 0, 19], [1, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 1], [2, 3, 5, 9, 7], [5, 7], [37], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.subtract(grad, tf.math.add(alpha, grad)), tf.math.square(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3039808849916166, 2.304160429265883, 2.3037029337401185, 2.302766740188276, 2.3039777070114624, 2.3024533506649645], "accuracy": [0.0944393053650856, 0.0866464152932167, 0.08770307898521423, 0.0874389111995697, 0.08809932321310043, 0.0936468094587326], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]