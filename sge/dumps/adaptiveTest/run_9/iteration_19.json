[{"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1], [2, 0, 7, 7, 3, 9, 2, 1, 4, 8, 4], [3, 4, 0, 2, 4, 1, 0, 4], [8, 0, 19], [1, 1, 0, 1], [0, 0], [7, 8], [2], [], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7], [1, 0, 0, 3], [28, 57]], "fitness": -0.7905714511871338, "mapping_values": [1, 1, 1, 0, 1, 0, 19, 19, 11, 8, 3, 1, 0, 0, 0, 0, 6, 3, 3, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(tf.math.add(tf.math.multiply(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(grad, tf.math.subtract(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32), beta)))), tf.math.pow(tf.math.add(beta, grad), tf.math.sqrt(tf.math.pow(alpha, tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.289308083512449, 2.256777717106378, 2.2148945582242074, 2.158475464833584, 2.069507583288894, 1.9573888542976172, 1.8069333245552384, 1.6515859738317038, 1.5009730134453079, 1.3804271995210378, 1.2866428731974515, 1.2143551711755234, 1.1548112068571796, 1.0993579153560487, 1.0550848539904392, 1.0306445291218362, 0.9935972005416216, 0.9699614837405515, 0.9529325404990351, 0.9130468245715261, 0.9056933261242525, 0.8939813792571699, 0.8724062961594241, 0.863780744276373, 0.8531577126177752, 0.8445660264311591, 0.8315817476924952, 0.8072247115880145, 0.8005398594235636, 0.7948500682979827, 0.7868670032811974, 0.7847770616488923, 0.7799258098358555, 0.7684056756754971, 0.7646306664904962, 0.7574821051872953, 0.7561094582891735, 0.7472363772519497, 0.742924647025145, 0.7484234531148393, 0.7323567081341701, 0.7373570169219724, 0.7244426179020365, 0.7172783350805958, 0.715582163224304, 0.7072590318779195, 0.7030073051848794, 0.6992395075478212, 0.6914295743028517, 0.6969661242406696, 0.684067748084501, 0.6888186704008696, 0.6839105482618523, 0.6807767774497891, 0.6727245160223644, 0.6783472075359681, 0.6804757721357027], "accuracy": [0.12930920720100403, 0.2090873122215271, 0.2833179235458374, 0.3411702513694763, 0.3855501115322113, 0.4233258366584778, 0.4500066041946411, 0.4823669195175171, 0.5209351181983948, 0.5363888740539551, 0.5550125241279602, 0.579447865486145, 0.5999207496643066, 0.6166952848434448, 0.6238277554512024, 0.6301677227020264, 0.6460176706314087, 0.6532822847366333, 0.6581693291664124, 0.6752080321311951, 0.67666095495224, 0.6818121671676636, 0.6819442510604858, 0.6865671873092651, 0.685510516166687, 0.6972658634185791, 0.7013604640960693, 0.7079645991325378, 0.7071720957756042, 0.7092854380607605, 0.7119271159172058, 0.7154933214187622, 0.7168141603469849, 0.7174745798110962, 0.7238145470619202, 0.7277770638465881, 0.7190595865249634, 0.7250033020973206, 0.7273808121681213, 0.7234182953834534, 0.7313432693481445, 0.7224937081336975, 0.7313432693481445, 0.7364945411682129, 0.7301545143127441, 0.7354378700256348, 0.7397965788841248, 0.7423061728477478, 0.7425703406333923, 0.7423061728477478, 0.7460044622421265, 0.7430986762046814, 0.7448157668113708, 0.7477215528488159, 0.7523444890975952, 0.7486461400985718, 0.7489103078842163], "val_loss": [1.9413282530648368, 1.9075871876307897, 1.8615007400512695, 1.7942914962768555, 1.6943992206028529, 1.5621273517608643, 1.4048549447740828, 1.2476373400006975, 1.1105141980307442, 1.0053746019090926, 0.9266086305890765, 0.8684377670288086, 0.8221350056784493, 0.7849321365356445, 0.7554915632520404, 0.7309964384351458, 0.7121313640049526, 0.694759692464556, 0.6821800129754203, 0.6681195497512817, 0.6547750745500837, 0.6448595012937274, 0.6358542101723808, 0.6270088808877128, 0.622400334903172, 0.6178363050733294, 0.6097095693860736, 0.5987765618732998, 0.595698526927403, 0.5887088094438825, 0.5865170615059989, 0.582138078553336, 0.5757297788347516, 0.5731454917362758, 0.5663153614316668, 0.5655233008520943, 0.5622787475585938, 0.5559134483337402, 0.5520926203046527, 0.5512364251273019, 0.5457671199526105, 0.5438131775174823, 0.5404857397079468, 0.5386166572570801, 0.5360482249941144, 0.5356414488383702, 0.5321998596191406, 0.5289362668991089, 0.527314271245684, 0.5244436434337071, 0.5207282645361764, 0.5199769054140363, 0.5201955011912754, 0.5156492676053729, 0.5153261082512992, 0.5127109800066266, 0.5099251610892159], "val_accuracy": [0.28966665267944336, 0.37833333015441895, 0.4390000104904175, 0.48100000619888306, 0.5289999842643738, 0.5576666593551636, 0.5803333520889282, 0.6100000143051147, 0.637666642665863, 0.6603333353996277, 0.6693333387374878, 0.6759999990463257, 0.684333324432373, 0.6893333196640015, 0.6916666626930237, 0.703000009059906, 0.7136666774749756, 0.7163333296775818, 0.7210000157356262, 0.7239999771118164, 0.7279999852180481, 0.7316666841506958, 0.7293333411216736, 0.7366666793823242, 0.7279999852180481, 0.7443333268165588, 0.7390000224113464, 0.7446666955947876, 0.7473333477973938, 0.749666690826416, 0.7476666569709778, 0.7493333220481873, 0.7486666440963745, 0.7509999871253967, 0.7596666812896729, 0.753000020980835, 0.7609999775886536, 0.7613333463668823, 0.7633333206176758, 0.7646666765213013, 0.762666642665863, 0.7693333625793457, 0.765666663646698, 0.7663333415985107, 0.765999972820282, 0.7710000276565552, 0.7710000276565552, 0.7720000147819519, 0.7723333239555359, 0.7723333239555359, 0.7749999761581421, 0.7789999842643738, 0.7733333110809326, 0.7733333110809326, 0.7723333239555359, 0.7770000100135803, 0.7763333320617676]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1], [0, 1, 1], [2], [3, 4], [8], [0], [1], [], [2], [], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7], [1, 0, 0, 3], [28, 57]], "fitness": -0.7902857065200806, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 6, 3, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2893081014938264, 2.256777649652594, 2.2148931187692806, 2.158469792165619, 2.0695092336707317, 1.9574034582464812, 1.8069583037588905, 1.6516204384009063, 1.5010357895515944, 1.380468921197829, 1.286674955753744, 1.2143596523804137, 1.154828492030964, 1.0993691805315653, 1.055088338850669, 1.0306594490989198, 0.9935869332223347, 0.9700176075716942, 0.9529511192770461, 0.9129876213035312, 0.9056497160643004, 0.8940011730456727, 0.8724437624062561, 0.8637471217457896, 0.8531558848154811, 0.8445873475266863, 0.8315837896574033, 0.8072497797695685, 0.8005214575070432, 0.7947845977169254, 0.7868470294663557, 0.7848752754995174, 0.7799297053233555, 0.7684805630188986, 0.7645240479362104, 0.7575489277963106, 0.7561169655536223, 0.7471811664008414, 0.742952658885726, 0.7484224408987002, 0.7323415813712459, 0.7372145926428036, 0.7244834868332587, 0.7173617763478979, 0.7155742006940518, 0.7070958692289662, 0.7030576395635765, 0.6992564886993405, 0.6914541954141424, 0.6968962209823976, 0.6840836115485531, 0.6887644607282948, 0.6839118645160016, 0.6805945886533966, 0.6726096595802705, 0.6782746800594106, 0.6806096573547366], "accuracy": [0.12930920720100403, 0.2090873122215271, 0.2833179235458374, 0.3411702513694763, 0.3855501115322113, 0.4233258366584778, 0.44987452030181885, 0.48249900341033936, 0.520671010017395, 0.5365209579467773, 0.5551446080207825, 0.579447865486145, 0.6004490852355957, 0.6169594526290894, 0.6239598393440247, 0.6306960582733154, 0.6462818384170532, 0.6536785364151001, 0.6586976647377014, 0.6758684515953064, 0.6765288710594177, 0.6812838315963745, 0.6818121671676636, 0.6866992712020874, 0.684982180595398, 0.6971337795257568, 0.7021529674530029, 0.7084929347038269, 0.7073041796684265, 0.7094175219535828, 0.7123233675956726, 0.7153612375259399, 0.7168141603469849, 0.717870831489563, 0.7239466309547424, 0.7271166443824768, 0.7187954187393188, 0.7252674698829651, 0.7275128960609436, 0.7226257920265198, 0.7313432693481445, 0.722757875919342, 0.7312111854553223, 0.7362303733825684, 0.7306828498840332, 0.735041618347168, 0.7396644949913025, 0.741909921169281, 0.7420420050621033, 0.7417778372764587, 0.7452120184898376, 0.7429665923118591, 0.744419515132904, 0.748249888420105, 0.7524765729904175, 0.7490423917770386, 0.7479857206344604], "val_loss": [1.9413282530648368, 1.9075873238699776, 1.8614941324506487, 1.794290202004569, 1.6944096769605363, 1.5621537821633475, 1.4048918315342493, 1.247696774346488, 1.1105520384652274, 1.0054253510066442, 0.9266696316855294, 0.8684994833809989, 0.8221677882330758, 0.7849035944257464, 0.7554835591997419, 0.7309601477214268, 0.7120979683739799, 0.6947742359978812, 0.68222633429936, 0.668099045753479, 0.6547059501920428, 0.6448114258902413, 0.6358907733644757, 0.6270099537713187, 0.6224143164498466, 0.6178935085024152, 0.6097243683678764, 0.5987588507788522, 0.5957317011696952, 0.5887637478964669, 0.586526904787336, 0.5821929318564278, 0.5756273780550275, 0.5731733185904366, 0.5663438865116665, 0.5655515364238194, 0.562271067074367, 0.5558907815388271, 0.5521108933857509, 0.5511411087853568, 0.545677764075143, 0.5437640292303902, 0.5405023608888898, 0.5387339251382011, 0.5361341238021851, 0.5357480389731271, 0.5322262389319283, 0.5289021049227033, 0.5272491148539952, 0.5245477301733834, 0.52081869329725, 0.5200759853635516, 0.5202052252633231, 0.5155717985970634, 0.5152964421680996, 0.512681143624442, 0.5097863674163818], "val_accuracy": [0.28966665267944336, 0.37833333015441895, 0.4390000104904175, 0.48100000619888306, 0.5293333530426025, 0.5576666593551636, 0.5803333520889282, 0.6103333234786987, 0.637666642665863, 0.6603333353996277, 0.6693333387374878, 0.6766666769981384, 0.6840000152587891, 0.6893333196640015, 0.6916666626930237, 0.703000009059906, 0.7129999995231628, 0.7163333296775818, 0.7213333249092102, 0.7236666679382324, 0.7276666760444641, 0.731333315372467, 0.7296666502952576, 0.7379999756813049, 0.7286666631698608, 0.7443333268165588, 0.7390000224113464, 0.7446666955947876, 0.746666669845581, 0.7490000128746033, 0.7476666569709778, 0.7506666779518127, 0.7490000128746033, 0.7509999871253967, 0.7599999904632568, 0.753000020980835, 0.7609999775886536, 0.7620000243186951, 0.7633333206176758, 0.7643333077430725, 0.7630000114440918, 0.7683333158493042, 0.7646666765213013, 0.765666663646698, 0.7663333415985107, 0.7713333368301392, 0.7703333497047424, 0.7716666460037231, 0.7726666927337646, 0.7716666460037231, 0.7739999890327454, 0.7789999842643738, 0.7730000019073486, 0.7739999890327454, 0.7723333239555359, 0.7773333191871643, 0.7773333191871643]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 1, 1, 2, 0, 3, 3, 1, 2, 2, 1, 2, 0, 3, 3, 2, 3, 2], [50], [1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 1, 1], [2], [3, 4], [8], [0], [1], [], [3], [], [0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7], [1, 0, 0, 3], [28, 57]], "fitness": -0.3328571319580078, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 9, 5, 4, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.math.negative(tf.math.square(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3024218273893435, 2.3026975863298893, 2.301357988384752, 2.3016871780594026, 2.2998234969025604, 2.3004984700401083, 2.300009166276403, 2.3005257204554854, 2.2998635934218283, 2.2995029192685044, 2.3003391683251238, 2.2977981319863328, 2.2983353872655674, 2.2966258531516774, 2.2975634348910514, 2.2970864971505023, 2.294685696913125, 2.2931486828105796, 2.295889435222577, 2.294042241445795, 2.2937510821640124, 2.292933261594469, 2.2943050610060234, 2.2932448201034017, 2.291829852726576, 2.293280648454589, 2.291828156619764, 2.2904548309325166, 2.2905934711315723, 2.2898130317043557, 2.28971256124597, 2.289398124457004, 2.2877776940516696, 2.289076468381175, 2.2884898976784624, 2.2874791992496366, 2.2861270346519986, 2.2868894894581904, 2.286433808130595, 2.287044779499524, 2.286110304539088, 2.2871667366332664, 2.2854000760926043, 2.284466455735708, 2.283867154879073, 2.2832169001837133, 2.2837812008087455, 2.282400839899698, 2.2827560308980686, 2.280854995460747, 2.2814784008734543, 2.2803006716660064, 2.2804812192759414, 2.280203952733882, 2.2789934258718594, 2.2796934364557173, 2.2803818190401697, 2.2793532596240977, 2.2783685456083087, 2.2789059908414293, 2.2776431219531497, 2.2786980064836997, 2.277439546370944, 2.2770657010003483, 2.275366285930236, 2.275173738789738, 2.273131407231482, 2.276480741000777, 2.276000332570961, 2.274642905350044, 2.2749741566163864, 2.272122548351104, 2.271449938394831, 2.2724191980937594, 2.2719447273918982, 2.2709861575746264, 2.272762272887305, 2.270727793333663, 2.27034787731148, 2.2701685272423884, 2.270219649778554, 2.2689711403585364, 2.269516049878724, 2.2680698866385036, 2.2676260087783264, 2.2668436541297194, 2.2657609352141543, 2.266501595583165, 2.265696631824462, 2.265004157516163, 2.2628823669752536, 2.263627369327316, 2.2635265901623747, 2.2648853214897766, 2.2625128875208915, 2.2636293060255874, 2.2622963272427774, 2.260537756715925, 2.2607907385102446, 2.2603444187097295], "accuracy": [0.09800554811954498, 0.08308017253875732, 0.09470347315073013, 0.09589222073554993, 0.09470347315073013, 0.1006472036242485, 0.09628847241401672, 0.09536388516426086, 0.09774138033390045, 0.10249637067317963, 0.09589222073554993, 0.10130762308835983, 0.10091137140989304, 0.10051512718200684, 0.10077928751707077, 0.10421344637870789, 0.11068551242351532, 0.10989301651716232, 0.10791176557540894, 0.11306300014257431, 0.1138555034995079, 0.11042134463787079, 0.11068551242351532, 0.10949676483869553, 0.11174217611551285, 0.11121384054422379, 0.12191256135702133, 0.11953506618738174, 0.12362963706254959, 0.1224408894777298, 0.1254788041114807, 0.12679962813854218, 0.12653546035289764, 0.11927089840173721, 0.12719587981700897, 0.12759213149547577, 0.12851670384407043, 0.12957337498664856, 0.13512085378170013, 0.1302337795495987, 0.1306300312280655, 0.12917712330818176, 0.13498876988887787, 0.14119666814804077, 0.1364416927099228, 0.13776251673698425, 0.13512085378170013, 0.14159291982650757, 0.14278165996074677, 0.14581957459449768, 0.14595165848731995, 0.1472724825143814, 0.14912164211273193, 0.14634791016578674, 0.15281997621059418, 0.14251750707626343, 0.14780081808567047, 0.14780081808567047, 0.15770703554153442, 0.1574428677558899, 0.15532954037189484, 0.15374454855918884, 0.15519747138023376, 0.1554616242647171, 0.15942411124706268, 0.1628582775592804, 0.16272619366645813, 0.16457535326480865, 0.1636507660150528, 0.1574428677558899, 0.1682736724615097, 0.16563200950622559, 0.1702549159526825, 0.17117950320243835, 0.16893409192562103, 0.17316074669361115, 0.17170783877372742, 0.1768590658903122, 0.17355699837207794, 0.1760665625333786, 0.17831197381019592, 0.18095363676548004, 0.17593449354171753, 0.17831197381019592, 0.1798969805240631, 0.1846519559621811, 0.18914277851581573, 0.18240654468536377, 0.18399155139923096, 0.18742570281028748, 0.19640734791755676, 0.18861444294452667, 0.1884823739528656, 0.19310526549816132, 0.19218069314956665, 0.19416193664073944, 0.18940694630146027, 0.1990489959716797, 0.19891692698001862, 0.19838859140872955], "val_loss": [1.970841339656285, 1.9704506737845284, 1.9700589861188615, 1.9696705681937081, 1.9692793573651994, 1.968895367213658, 1.9685069492885046, 1.9681198937552316, 1.9677331107003349, 1.9673455783299036, 1.9669568879263741, 1.9665752819606237, 1.9661874089922224, 1.965801783970424, 1.9654175894601005, 1.9650346211024694, 1.9646471568516322, 1.9642597607203893, 1.9638780866350447, 1.9634906223842077, 1.9631103106907435, 1.9627246175493513, 1.9623408998761858, 1.961956364767892, 1.9615741457257951, 1.9611896106175013, 1.9608071190970284, 1.960425581250872, 1.9600402287074499, 1.9596542630876814, 1.959266526358468, 1.9588818550109863, 1.9584994997297014, 1.9581151008605957, 1.9577326774597168, 1.9573501178196497, 1.9569688524518694, 1.9565862928118025, 1.956202438899449, 1.9558147021702357, 1.9554282597133092, 1.955047879900251, 1.9546616418021066, 1.9542745862688338, 1.953888007572719, 1.9535057204110282, 1.953120299748012, 1.9527312006269182, 1.9523446219308036, 1.9519587925502233, 1.9515703746250697, 1.9511825016566686, 1.9507955142429896, 1.9504063470023019, 1.9500209263392858, 1.9496335302080428, 1.9492475645882743, 1.948861530848912, 1.94847195489066, 1.9480862617492676, 1.947700023651123, 1.947309902736119, 1.9469233921595983, 1.9465302739824568, 1.9461396762302943, 1.9457450594220842, 1.9453530311584473, 1.9449612753731864, 1.9445712225777763, 1.9441775594438826, 1.9437837600708008, 1.943385396684919, 1.9429912567138672, 1.9425928252083915, 1.9421971184866769, 1.9418010030473982, 1.941408293587821, 1.9410113607134138, 1.9406143597194128, 1.9402128628322057, 1.9398112978254045, 1.939415522984096, 1.9390192031860352, 1.9386134147644043, 1.9382117135184151, 1.9378065381731306, 1.9373985018048967, 1.9369944844927107, 1.9365855625697546, 1.9361801828656877, 1.9357684680393763, 1.9353535515921456, 1.934941291809082, 1.934532914842878, 1.934119497026716, 1.9337067604064941, 1.9332891191755022, 1.9328692981175013, 1.932450294494629, 1.9320310183933802], "val_accuracy": [0.0430000014603138, 0.045666664838790894, 0.04800000041723251, 0.050999999046325684, 0.05233333259820938, 0.054666668176651, 0.05766666680574417, 0.06066666543483734, 0.061666667461395264, 0.06266666948795319, 0.06433333456516266, 0.06499999761581421, 0.06733333319425583, 0.07133333384990692, 0.07333333045244217, 0.07599999755620956, 0.08033332973718643, 0.08366666734218597, 0.08699999749660492, 0.08866667002439499, 0.09133332967758179, 0.09233333170413971, 0.09433333575725555, 0.0963333323597908, 0.0989999994635582, 0.10300000011920929, 0.10833333432674408, 0.11100000143051147, 0.1146666631102562, 0.11966666579246521, 0.1223333328962326, 0.12466666847467422, 0.12733332812786102, 0.13066667318344116, 0.13433332741260529, 0.1366666704416275, 0.14166666567325592, 0.1433333307504654, 0.14800000190734863, 0.15033333003520966, 0.15299999713897705, 0.15566666424274445, 0.15933333337306976, 0.16300000250339508, 0.16733333468437195, 0.17166666686534882, 0.17599999904632568, 0.179666668176651, 0.18400000035762787, 0.18766666948795319, 0.19233334064483643, 0.19633333384990692, 0.1979999989271164, 0.20366667211055756, 0.20666666328907013, 0.210999995470047, 0.21433334052562714, 0.21966665983200073, 0.22466666996479034, 0.22766666114330292, 0.23000000417232513, 0.23199999332427979, 0.23399999737739563, 0.23533333837985992, 0.23733332753181458, 0.24066667258739471, 0.24633333086967468, 0.24899999797344208, 0.2516666650772095, 0.25466665625572205, 0.25733333826065063, 0.2630000114440918, 0.26633334159851074, 0.27033331990242004, 0.2736666798591614, 0.2776666581630707, 0.2800000011920929, 0.28333333134651184, 0.2866666615009308, 0.289000004529953, 0.2916666567325592, 0.29366666078567505, 0.2956666648387909, 0.29766666889190674, 0.2993333339691162, 0.3009999990463257, 0.3033333420753479, 0.30533334612846375, 0.30799999833106995, 0.31033334136009216, 0.3136666715145111, 0.3163333237171173, 0.3186666667461395, 0.3213333189487457, 0.3240000009536743, 0.3253333270549774, 0.3266666531562805, 0.3296666741371155, 0.33133333921432495, 0.3346666693687439]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [0, 1, 1, 2, 0, 3, 3, 1, 2, 2, 1, 2, 0, 3, 3, 2, 3, 2], [50], [1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1], [0, 1, 1], [4, 4, 3, 6, 3], [3, 4, 4, 1, 3, 4], [8], [0], [1], [], [4], [], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7, 0, 6], [1, 0, 0, 3, 0], [14, 57, 37]], "fitness": -0.10028571635484695, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 12, 7, 5, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.pow(grad, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(alpha), tf.math.square(tf.math.add(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.divide_no_nan(sigma, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [3.5812070652569047e+18, 4.230615110419128e+18, 4.192940397319609e+18, 4.1973804475420897e+18, 4.297661891699903e+18, 4.22023191611178e+18], "accuracy": [0.11398758739233017, 0.11438383162021637, 0.11451591551303864, 0.11649715900421143, 0.11702549457550049, 0.11398758739233017], "val_loss": [3.5252599926797297e+18, 3.5252599926797297e+18, 3.5252599926797297e+18, 3.5252599926797297e+18, 3.5252599926797297e+18, 3.5252599926797297e+18], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 1], [2], [0, 4, 0, 5, 1, 2], [8], [0], [1], [], [3], [], [0, 0, 1, 1, 1, 1, 0, 1, 1], [8, 3, 0, 5, 7], [1, 0, 0, 3], [92, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [1, 0, 1, 2, 0, 3, 3, 1, 2, 2, 1, 2, 0, 3, 3, 2, 3, 2], [50], [1, 0, 0], [1, 0, 1, 1, 1, 0, 1], [2], [1, 4, 0, 5, 1, 2], [8], [0], [0], [9], [3], [97], [0, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 0, 5, 7], [1, 2, 0, 3], [24, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, beta), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [6.245924013116094e+20, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10196803510189056, 0.10117553919553757, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [3.24607376052951e+23, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10066666454076767, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1], [0, 1, 1], [2], [3, 4], [8], [0], [1], [], [5], [], [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7], [1, 0, 3, 3], [28, 25]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(alpha), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2875.1830970278947, 50946.79364103157, 239354.35824610354, 657410.9103569542, 1397837.6757363623, 2599203.50178312], "accuracy": [0.10315678268671036, 0.10038304328918457, 0.10130762308835983, 0.09642054885625839, 0.10077928751707077, 0.09906221181154251], "val_loss": [10689.08677455357, 82996.34151785714, 277616.47321428574, 655234.625, 1276536.5714285714, 2202206.785714286], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [1, 2, 1, 1], [50], [1, 1, 1], [0, 0, 1], [9], [3, 4], [8], [0], [1], [], [5], [], [0, 0, 1, 0, 1, 1, 0, 1, 1], [6, 3, 6, 5, 7], [2, 0, 0, 3], [75, 24]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 8, 4, 4, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(beta, tf.math.divide_no_nan(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))), tf.math.square(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1], [0, 1, 1], [2], [3, 0], [8], [0], [1], [], [2], [], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7], [1, 0, 0, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07647603005170822, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1], [0, 1, 1], [2], [3, 4], [8], [0, 0, 0], [0, 0, 1], [5, 0], [1], [], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7], [1, 0, 0, 3], [80, 24]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 3, 3, 2, 1, 0, 3, 1, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07647603005170822, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 1, 1], [2], [3, 0, 4, 1, 3, 4], [8], [0], [1], [], [3], [], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7], [0, 0, 0, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 3, 1, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3025779944873204, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09985470771789551, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 0, 0], [0, 1, 1], [2], [3, 4], [8], [0], [1], [], [5], [], [1, 0, 1, 0, 1, 1, 0, 1, 1], [6, 3, 0, 5, 7], [1, 0, 0, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0758156105875969, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [1, 3, 5, 0, 7, 3], [2, 2, 1, 1], [50], [1, 1, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [9, 7, 7, 8], [4, 4], [8], [0, 1, 1], [0], [1], [3], [], [1, 1, 0, 0, 1, 0, 0, 1, 1], [4, 2, 0, 5, 7], [2, 0, 2, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0758156105875969, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 0, 0], [0, 1, 1], [0, 7, 7, 8], [3, 4], [8], [0], [1], [], [0], [97], [0, 0, 0, 0, 1, 1, 0, 1, 1], [6, 9, 7, 5, 2], [3, 0, 0, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 6, 4, 2, 2], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.square(sigma), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3025779944873204, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09985470771789551, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 1, 0], [0, 1, 0], [2, 9], [3, 4], [8], [1], [1], [], [3], [], [0, 0, 1, 0, 1, 1, 0, 1, 1], [9, 2, 0, 5, 7, 4], [1, 0, 0, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3025779944873204, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09985470771789551, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1], [0, 1, 1], [2], [3, 4], [8], [0], [1], [], [6], [], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7], [1, 1, 0, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, alpha), tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09509972482919693, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 0, 0], [0, 1, 1], [2], [3, 4], [8], [0, 1], [0], [5], [5], [], [1, 0, 1, 0, 1, 1, 0, 1, 1], [6, 3, 0, 5, 7], [1, 0, 0, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0758156105875969, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [1, 3, 5, 0, 7, 3], [3, 2, 1, 1], [50], [0, 0, 0], [0, 1, 1], [0, 4, 3, 6, 3], [3, 4], [8], [1], [1], [], [5], [38], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [2, 2, 0, 5, 7, 2, 6, 9, 1, 9, 6, 2, 7], [1, 2, 0, 3, 1, 2, 3, 2], [28, 57, 49]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 21, 13, 8, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.math.negative(tf.math.square(tf.math.add(tf.math.add(tf.math.divide_no_nan(alpha, beta), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))), tf.math.divide_no_nan(tf.math.add(tf.math.add(sigma, alpha), beta), sigma)), beta)", "other_info": {"loss": [1227958.9214631778, 1845.242041196207, 1775.0586442807567, 1652.24110108873, 1473.5262659969992, 1236.9039481740822], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1588.636997767857, 1549.1153390066963, 1463.493687220982, 1331.1170479910713, 1149.4788992745537, 918.6614815848214], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [3, 1, 1, 2, 0, 3, 3, 1, 2, 2, 1, 2, 0, 3, 3, 2, 3, 2], [50], [1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1], [9, 7, 7, 8], [0, 0, 4, 5], [8], [1, 1, 1], [1], [], [2], [], [0, 0, 0, 1, 0, 1, 0, 1, 1], [6, 9, 5, 5, 7], [3, 2, 2, 3, 2], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.square(sigma))", "other_info": {"loss": [2.3025965778157853, 2.3032966664659034, 2.302379614452503, 2.303130809452398, 2.30169357867399, 2.3027587295318592], "accuracy": [0.09787346422672272, 0.08189142495393753, 0.09219389408826828, 0.09298639744520187, 0.08968432247638702, 0.09470347315073013], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [0, 2, 1, 1], [50], [1, 0, 0], [0, 1, 1], [2], [1, 4, 4, 1, 3, 4], [8], [1], [1], [], [3], [], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [6, 3, 0, 5, 7, 2], [2, 0, 0, 3, 3], [87, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 11, 6, 5, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.math.square(tf.math.add(beta, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, sigma))", "other_info": {"loss": [2.3025965778157853, 2.3032966664659034, 2.302379614452503, 2.303130809452398, 2.30169357867399, 2.3027587295318592], "accuracy": [0.09787346422672272, 0.08189142495393753, 0.09219389408826828, 0.09298639744520187, 0.08968432247638702, 0.09470347315073013], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]