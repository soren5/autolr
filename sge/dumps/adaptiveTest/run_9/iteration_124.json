[{"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 4, 0, 8, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 2, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [30, 8, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [43, 57]], "fitness": -0.821142852306366, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.pow(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9574217718857754, 1.5195797090564407, 1.0966759759830902, 0.8997244213030811, 0.841868402148282, 0.7789787173334162, 0.7263212842460102, 0.70775575249533, 0.6975419211696247, 0.6537583340837687, 0.6821644534414093, 0.6189060094428651, 0.6137888778344027, 0.5935222660435535, 0.6047747062339349, 0.5830095490176743, 0.5715773550038482, 0.5550238785884163, 0.5746891411335524, 0.5451548852114046, 0.5401514802846957, 0.5191988591126888, 0.5144293406352611, 0.530790189332525, 0.4953446282041134, 0.4853307627187728, 0.4859605247373547, 0.48640452023227027, 0.47076531260981297, 0.4610637534902301, 0.46071551651404186, 0.47623203981191947, 0.43692456648145384, 0.43438090810119484, 0.4402843107597435], "accuracy": [0.3439439833164215, 0.4707436263561249, 0.5947695374488831, 0.6729626059532166, 0.6782459616661072, 0.7045304179191589, 0.7244749665260315, 0.72672039270401, 0.7297582626342773, 0.7547219395637512, 0.7408532500267029, 0.7687227725982666, 0.7677981853485107, 0.7761194109916687, 0.7691190242767334, 0.7815347909927368, 0.785101056098938, 0.7930260300636292, 0.7849689722061157, 0.7975168228149414, 0.8001585006713867, 0.8059701323509216, 0.8074230551719666, 0.8021397590637207, 0.8153480291366577, 0.8197067975997925, 0.819442629814148, 0.8207634687423706, 0.8241975903511047, 0.8276317715644836, 0.8314621448516846, 0.8214238286018372, 0.8362171649932861, 0.8408400416374207, 0.8404437899589539], "val_loss": [1.6658712455204554, 0.9084461757114956, 0.7688930034637451, 0.6228340864181519, 0.6035310711179461, 0.6107578447886876, 0.5744496924536568, 0.544938223702567, 0.5262345927102225, 0.5529458863394601, 0.5134833199637276, 0.4823772736958095, 0.483846698488508, 0.48863255977630615, 0.5285794564655849, 0.4709757907049997, 0.497931855065482, 0.4817323684692383, 0.46110410349709646, 0.4584168366023472, 0.44000935554504395, 0.47076012407030376, 0.4333214589527675, 0.43429034096854074, 0.42780319281986784, 0.40642212118421284, 0.40276596375874113, 0.39993689741407124, 0.41580480337142944, 0.3924920303480966, 0.4249179788998195, 0.3865818296160017, 0.39650579009737286, 0.4152247394834246, 0.42566342864717754], "val_accuracy": [0.36766666173934937, 0.5616666674613953, 0.6523333191871643, 0.7296666502952576, 0.7296666502952576, 0.7206666469573975, 0.7363333106040955, 0.7609999775886536, 0.7703333497047424, 0.7549999952316284, 0.7663333415985107, 0.7833333611488342, 0.7839999794960022, 0.7773333191871643, 0.753333330154419, 0.7900000214576721, 0.7703333497047424, 0.7910000085830688, 0.8023333549499512, 0.7990000247955322, 0.8059999942779541, 0.7799999713897705, 0.8103333115577698, 0.8109999895095825, 0.8103333115577698, 0.8203333616256714, 0.828000009059906, 0.8209999799728394, 0.8183333277702332, 0.8360000252723694, 0.8026666641235352, 0.8323333263397217, 0.828000009059906, 0.8143333196640015, 0.812666654586792]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [3, 8, 8, 8, 9, 1, 7, 0, 3, 3, 2, 2, 0, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 0, 4, 5, 9, 2], [2, 2, 1, 0, 1, 1, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [82, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7985714077949524, "mapping_values": [1, 6, 6, 5, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(grad)))), tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.293277352446059, 2.2649305463860676, 2.236924971697778, 2.197994021597225, 2.1428924529559703, 2.0680662366645115, 1.9723503164028873, 1.8591631364513777, 1.7264914177412276, 1.5976944632455263, 1.478755631356774, 1.383044317524116, 1.2992778959653444, 1.239826677230056, 1.175634600120749, 1.1405619084953145, 1.0981851846723667, 1.0610445364670054, 1.0238498328714922, 0.9992489941352236, 0.9789902301921726, 0.9656596279352128, 0.9510294040196355, 0.9332467155717289, 0.9085648348932616, 0.9051926275285921, 0.885734389841029, 0.8827787927585491, 0.8644376445392875, 0.8553182232838108, 0.8365469920778508, 0.8336158762235116, 0.8188976674677595, 0.8181896139176892, 0.8078002460549898, 0.7942414965454487, 0.7913660207334495, 0.7808367850333, 0.7727210978003005, 0.7805877577327954, 0.7773822123238188, 0.7712870373575994, 0.7645797586601645, 0.7630551970315222, 0.7457305333869741, 0.7476488304978994, 0.747661827664255, 0.7337511710093368, 0.7328820891384089, 0.7251998872458423, 0.7160711179729371, 0.7249097219311471, 0.7184986899305628, 0.71796958985944, 0.7121359415105337, 0.7089594170527924, 0.695910052104696, 0.7033904399129898, 0.6947121131594911, 0.6893171440923628, 0.6968585442259106, 0.6885924859604957, 0.6876232899757913, 0.6884689925132946, 0.6838133974460138, 0.6823789647714793, 0.6819819025532948, 0.6800004009399998, 0.6742934576193764, 0.6736228365892464, 0.6594897231736345, 0.6710594064445229, 0.6609976899984443, 0.666376710890653, 0.6484696858704854, 0.6582012936785835, 0.6510135348620054, 0.6503480645202926, 0.6466183249724619, 0.6434963931811878, 0.6444720212715083, 0.6420445770100045], "accuracy": [0.1154404953122139, 0.1826707124710083, 0.24924051761627197, 0.3082816004753113, 0.35107648372650146, 0.3928146958351135, 0.4193633496761322, 0.4472328722476959, 0.47391360998153687, 0.48949941992759705, 0.5243692994117737, 0.5418042540550232, 0.570730447769165, 0.5785233378410339, 0.5901466012001038, 0.6009774208068848, 0.6122044920921326, 0.6232994198799133, 0.6328094005584717, 0.6444327235221863, 0.6572447419166565, 0.6552634835243225, 0.6641130447387695, 0.6645092964172363, 0.6781138777732849, 0.6733588576316833, 0.6852463483810425, 0.6823405027389526, 0.6845859289169312, 0.6946242451667786, 0.6975300312042236, 0.6971337795257568, 0.7033417224884033, 0.7025492191314697, 0.7014925479888916, 0.7113987803459167, 0.7087571024894714, 0.7153612375259399, 0.7197200059890747, 0.7153612375259399, 0.715889573097229, 0.7189275026321411, 0.7182670831680298, 0.7275128960609436, 0.7257958054542542, 0.7219653725624084, 0.7228899598121643, 0.7269845604896545, 0.7304186820983887, 0.7325320243835449, 0.7416457533836365, 0.7279091477394104, 0.7339849472045898, 0.739928662776947, 0.7368907928466797, 0.7383436560630798, 0.7450799345970154, 0.737022876739502, 0.7357020378112793, 0.7429665923118591, 0.7425703406333923, 0.7408532500267029, 0.7470611333847046, 0.7437590956687927, 0.7478536367416382, 0.7460044622421265, 0.7415136694908142, 0.7456082701683044, 0.7491744756698608, 0.7493065595626831, 0.7547219395637512, 0.7491744756698608, 0.7490423917770386, 0.7556465268135071, 0.757099449634552, 0.7557786107063293, 0.7549861073493958, 0.7544577717781067, 0.7574957013130188, 0.7556465268135071, 0.7622507214546204, 0.7573636174201965], "val_loss": [1.9469807488577706, 1.921074526650565, 1.8889970779418945, 1.8460416793823242, 1.7859835624694824, 1.7034800052642822, 1.598017760685512, 1.474106992994036, 1.341726541519165, 1.2158652714320592, 1.1063009330204554, 1.0176470279693604, 0.9494894913264683, 0.8953941549573626, 0.8507519619805473, 0.8161950281688145, 0.786512919834682, 0.761397293635777, 0.7399838311331612, 0.7218288694109235, 0.7070148842675346, 0.6926537581852504, 0.6813194240842547, 0.6693958044052124, 0.6598403964723859, 0.6578058855874198, 0.6426314626421247, 0.6362513133457729, 0.6305086272103446, 0.6235625914164952, 0.6167217322758266, 0.6115401642663139, 0.6060651029859271, 0.5995994125093732, 0.5951933009283883, 0.5907186440059117, 0.5856645447867257, 0.5842114176068988, 0.5799835409436908, 0.5759485789707729, 0.5745913641793388, 0.5686971800667899, 0.5655537503106254, 0.5622032540185111, 0.5586157015391758, 0.5565891095570156, 0.55434102671487, 0.551873939377921, 0.5487842900412423, 0.5443883453096662, 0.5430850471769061, 0.5426069327763149, 0.5378795181001935, 0.5362155607768467, 0.5342665229524884, 0.532795923096793, 0.532093916620527, 0.5287150655473981, 0.5281378030776978, 0.5256612982068744, 0.5222655705043248, 0.5213846649442401, 0.52097601549966, 0.5205006769725254, 0.5163193941116333, 0.515405705996922, 0.5136169365474156, 0.5125661066600254, 0.5104655367987496, 0.5098914759499686, 0.5073219367436, 0.5057250261306763, 0.5032694680350167, 0.5028047561645508, 0.5013460942677089, 0.5009421110153198, 0.49775397777557373, 0.49961985860552105, 0.4967285224369594, 0.4948049783706665, 0.4933804954801287, 0.49322090830121723], "val_accuracy": [0.23499999940395355, 0.36399999260902405, 0.41200000047683716, 0.4466666579246521, 0.4856666624546051, 0.515333354473114, 0.5546666383743286, 0.5676666498184204, 0.5873333215713501, 0.6050000190734863, 0.6353333592414856, 0.6536666750907898, 0.6663333177566528, 0.6766666769981384, 0.6816666722297668, 0.6886666417121887, 0.6930000185966492, 0.6976666450500488, 0.6983333230018616, 0.7046666741371155, 0.7070000171661377, 0.7139999866485596, 0.7163333296775818, 0.7236666679382324, 0.7206666469573975, 0.7196666598320007, 0.7296666502952576, 0.7279999852180481, 0.7369999885559082, 0.7363333106040955, 0.7379999756813049, 0.7363333106040955, 0.7436666488647461, 0.7423333525657654, 0.7423333525657654, 0.7476666569709778, 0.7476666569709778, 0.7483333349227905, 0.753333330154419, 0.7490000128746033, 0.7480000257492065, 0.7536666393280029, 0.7606666684150696, 0.7563333511352539, 0.7599999904632568, 0.7590000033378601, 0.7643333077430725, 0.7609999775886536, 0.765333354473114, 0.7663333415985107, 0.7646666765213013, 0.7670000195503235, 0.7689999938011169, 0.7703333497047424, 0.7676666378974915, 0.765999972820282, 0.7713333368301392, 0.7696666717529297, 0.7710000276565552, 0.7703333497047424, 0.7763333320617676, 0.7739999890327454, 0.7703333497047424, 0.7756666541099548, 0.7773333191871643, 0.7766666412353516, 0.7773333191871643, 0.7766666412353516, 0.778333306312561, 0.7770000100135803, 0.7766666412353516, 0.7793333530426025, 0.7820000052452087, 0.7789999842643738, 0.7799999713897705, 0.7796666622161865, 0.7860000133514404, 0.781333327293396, 0.781333327293396, 0.7820000052452087, 0.7853333353996277, 0.781333327293396]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [7, 4, 8, 8, 8, 1, 7, 0, 3, 3, 3, 2, 0, 3, 3, 1, 5, 1, 7, 8, 3, 1, 1, 9, 0, 4], [2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [82, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7968571186065674, "mapping_values": [1, 12, 12, 7, 5, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))), tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad)), grad))), alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.29327732095503, 2.2649306903315605, 2.2369254619501144, 2.1979975798945337, 2.142901206800667, 2.0680749993581875, 1.972363328385772, 1.8591771644765611, 1.72651657066514, 1.597712874081881, 1.4787741254868996, 1.383052554380593, 1.2993056850977514, 1.2398558619031501, 1.1756641669059866, 1.1405855409851196, 1.0982045189988863, 1.061030892868556, 1.0238752951711443, 0.9992695105404917, 0.9790338405040528, 0.9656680630277161, 0.9510198627811272, 0.9332881806359992, 0.9085436155452484, 0.9051490204996515, 0.885711058775479, 0.8828184396725258, 0.8644254218318034, 0.8554044320535792, 0.8366620656190972, 0.8336730516896886, 0.8189466950002521, 0.818253086188277, 0.807858149168624, 0.7940655610013742, 0.7913815327182564, 0.7808420512071926, 0.7727239106892122, 0.7806076446481431, 0.7773608536594941, 0.7713837613125424, 0.7647709808077527, 0.763069272584541, 0.7458187887665776, 0.7476521538563881, 0.7477451724902813, 0.7337068718390741, 0.7329971153407663, 0.7251483853451249, 0.716141006942155, 0.7250228040505866, 0.7185423681685922, 0.7179649227472612, 0.7120466348659156, 0.708921493816023, 0.6961328496613035, 0.7035425394013762, 0.694658635976119, 0.6893322731305138, 0.6969791446237863, 0.6886916095318338, 0.6875518356741317, 0.6885429726395199, 0.6837694061399214, 0.6824955647065104, 0.682153478684033, 0.6801091991694628, 0.6742195319253944, 0.6737006435918927, 0.6596659059773945, 0.6710353315923633, 0.6610131025660733, 0.6664909165234, 0.648296340991005, 0.6582621308507354, 0.6509847197597526, 0.6504377153697283, 0.646704745228107, 0.6434782187952232, 0.6444378765173214, 0.6420120652624802, 0.6474643175423405, 0.6491138872973057, 0.6433302066691752, 0.628303065945239, 0.6307594365353094, 0.6251453319403316, 0.6340710388954368], "accuracy": [0.1154404953122139, 0.1826707124710083, 0.24937260150909424, 0.308149516582489, 0.35120856761932373, 0.3929467797279358, 0.4189670979976654, 0.4473649561405182, 0.47391360998153687, 0.48949941992759705, 0.5242372155189514, 0.5419363379478455, 0.5703341960906982, 0.5783912539482117, 0.590278685092926, 0.6008453369140625, 0.6124686598777771, 0.6238277554512024, 0.6326773166656494, 0.6446968913078308, 0.6572447419166565, 0.6556597352027893, 0.6641130447387695, 0.6641130447387695, 0.6779817938804626, 0.6734909415245056, 0.6853784322738647, 0.6822084188461304, 0.6848500967025757, 0.6948884129524231, 0.6976621150970459, 0.69673752784729, 0.703209638595581, 0.7034738063812256, 0.7020208835601807, 0.7123233675956726, 0.7083608508110046, 0.7154933214187622, 0.7199841737747192, 0.7154933214187622, 0.7152291536331177, 0.7187954187393188, 0.7185312509536743, 0.7281733155250549, 0.7255316376686096, 0.722229540348053, 0.7224937081336975, 0.7269845604896545, 0.7309470176696777, 0.7326641082763672, 0.7417778372764587, 0.7273808121681213, 0.7342491149902344, 0.739928662776947, 0.7371549606323242, 0.7384757399559021, 0.7448157668113708, 0.7368907928466797, 0.7351737022399902, 0.7432307600975037, 0.7429665923118591, 0.7408532500267029, 0.7471932172775269, 0.7434949278831482, 0.7477215528488159, 0.7464007139205933, 0.7415136694908142, 0.7454761862754822, 0.7489103078842163, 0.7497028112411499, 0.754589855670929, 0.7489103078842163, 0.7495707273483276, 0.7555144429206848, 0.7568352818489075, 0.7548540234565735, 0.7544577717781067, 0.7544577717781067, 0.7572315335273743, 0.7547219395637512, 0.7622507214546204, 0.757099449634552, 0.7576277852058411, 0.759609043598175, 0.7631752490997314, 0.7630431652069092, 0.7627789974212646, 0.7670056819915771, 0.7573636174201965], "val_loss": [1.9469807488577706, 1.921074458530971, 1.8889977591378349, 1.8460487638201033, 1.7859893526349748, 1.7034910406385149, 1.5980299200330461, 1.4741251468658447, 1.341751984187535, 1.2159110818590437, 1.106322935649327, 1.0176687240600586, 0.949517011642456, 0.8954330853053502, 0.8507771492004395, 0.8161859171731132, 0.7864742619650704, 0.7613991839545113, 0.7399741581508091, 0.72179114818573, 0.7070161274501255, 0.6926309892109462, 0.6813037395477295, 0.6693972178867885, 0.6598104408809117, 0.6577563796724591, 0.6426215853009906, 0.6362190416881016, 0.6305371863501412, 0.6235730477741787, 0.6166983331952777, 0.6115236793245588, 0.6060681513377598, 0.599617498261588, 0.5952020713261196, 0.5907393864222935, 0.5856713737760272, 0.5842487130846296, 0.5800407614026751, 0.5760048457554409, 0.5745617662157331, 0.5686771529061454, 0.5655603579112461, 0.5622486216681344, 0.5586497272763934, 0.5566043513161796, 0.554252198764256, 0.5517242635999408, 0.5487451553344727, 0.5443732908793858, 0.5430073056902204, 0.542615464755467, 0.5379438400268555, 0.5362701756613595, 0.5343341316495623, 0.5329054083142962, 0.5321009840284076, 0.5288274117878505, 0.5282533168792725, 0.5257153170449393, 0.5222866705485752, 0.5214948994772775, 0.5210648945399693, 0.5203848566327777, 0.5162300041743687, 0.5155605929238456, 0.5136507408959525, 0.5125786576952253, 0.5104510613850185, 0.5099538224084037, 0.5073584999356952, 0.5057302032198224, 0.5032582623617989, 0.502786363874163, 0.5012727294649396, 0.5009938308170864, 0.4976475919995989, 0.4996556043624878, 0.49681087902614046, 0.49491957255772184, 0.49353296416146414, 0.4932994672230312, 0.49323039395468576, 0.4957948752811977, 0.4908785138811384, 0.4890416009085519, 0.48774448462894987, 0.48690310546330046, 0.4854320968900408], "val_accuracy": [0.23499999940395355, 0.36399999260902405, 0.41200000047683716, 0.4466666579246521, 0.4856666624546051, 0.5149999856948853, 0.5546666383743286, 0.5676666498184204, 0.5870000123977661, 0.6050000190734863, 0.6356666684150696, 0.6543333530426025, 0.6663333177566528, 0.6766666769981384, 0.6816666722297668, 0.6883333325386047, 0.6930000185966492, 0.6976666450500488, 0.6986666917800903, 0.7053333520889282, 0.7070000171661377, 0.7139999866485596, 0.7166666388511658, 0.7236666679382324, 0.7210000157356262, 0.718999981880188, 0.7296666502952576, 0.7283333539962769, 0.7369999885559082, 0.7356666922569275, 0.7383333444595337, 0.7356666922569275, 0.7436666488647461, 0.7426666617393494, 0.7416666746139526, 0.7476666569709778, 0.7480000257492065, 0.7480000257492065, 0.753000020980835, 0.7486666440963745, 0.7490000128746033, 0.7540000081062317, 0.7609999775886536, 0.7553333044052124, 0.7596666812896729, 0.7593333125114441, 0.7646666765213013, 0.7616666555404663, 0.765333354473114, 0.7670000195503235, 0.7646666765213013, 0.7666666507720947, 0.7683333158493042, 0.7703333497047424, 0.7676666378974915, 0.765999972820282, 0.7710000276565552, 0.7703333497047424, 0.7713333368301392, 0.7706666588783264, 0.7756666541099548, 0.7743333578109741, 0.7703333497047424, 0.7756666541099548, 0.7776666879653931, 0.7770000100135803, 0.7763333320617676, 0.7770000100135803, 0.777999997138977, 0.7776666879653931, 0.7763333320617676, 0.7786666750907898, 0.7820000052452087, 0.7786666750907898, 0.7799999713897705, 0.7796666622161865, 0.7856666445732117, 0.781000018119812, 0.7803333401679993, 0.7820000052452087, 0.7863333225250244, 0.7799999713897705, 0.7820000052452087, 0.7910000085830688, 0.7820000052452087, 0.7860000133514404, 0.7846666574478149, 0.7863333225250244, 0.7903333306312561]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [7, 4, 8, 8, 8, 1, 7, 0, 3, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 0, 4], [2, 2, 2, 2, 1, 1, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [82, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7962856888771057, "mapping_values": [1, 39, 39, 25, 14, 5, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(grad))), tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(tf.math.add(tf.math.add(alpha, grad), grad), tf.math.negative(grad))))), tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.negative(alpha)), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))))))), grad))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.29327732095503, 2.2649306903315605, 2.236925641858362, 2.197997539271107, 2.142901008722096, 2.06807628164139, 1.9723607189603973, 1.8591746072790578, 1.7265112560501723, 1.5977068033988024, 1.478761029359986, 1.383053074738353, 1.2992993652419076, 1.2398554990477708, 1.175667501884665, 1.1405895237185149, 1.098192082908191, 1.0610468380518279, 1.0238828834541376, 0.9992875808800972, 0.9790270216807304, 0.9656654029883854, 0.9510145336645406, 0.9333334421248657, 0.9086131735358807, 0.9051899607974179, 0.8857690604481604, 0.8828078058055363, 0.8644350591179497, 0.8554094517550621, 0.8366755259003952, 0.8336511839413924, 0.8190016337058894, 0.8182985324035184, 0.8079041515705435, 0.794092598269723, 0.7914132960736082, 0.780900814096768, 0.7727597077225713, 0.7806384199252296, 0.7773359627015776, 0.77138170246057, 0.7648407443324573, 0.763037271298721, 0.7458430184128892, 0.7477300259982276, 0.7477187786230148, 0.7337068741930285, 0.7329396707128933, 0.7252025916875235, 0.7161197217070369, 0.7249615606520359, 0.7185173807930181, 0.718008514849454, 0.7120838248970612, 0.7088617041693261, 0.6960772413855388, 0.7035495358655922, 0.6946712567459528, 0.6893971879264037, 0.6968898459463985, 0.6887470096518981, 0.6875384749674668, 0.6885320700202179, 0.6837404658293381, 0.6824176348101241, 0.6820638011065866, 0.6800836327604692, 0.6742348888877392, 0.6737250619245763, 0.6596152925881822, 0.6709877246437985, 0.6609842954310506, 0.6664531098979103, 0.648380449112333, 0.6581668199061277, 0.6510437272795124, 0.6504170595772939, 0.6466887699709025, 0.6435910990335497, 0.6443765453690189, 0.6419471401768968, 0.6475193161911511, 0.6492442917578162, 0.6431674184879181, 0.6281869253934634, 0.6307131156252517, 0.6251920012750047, 0.6341218656678603], "accuracy": [0.1154404953122139, 0.1826707124710083, 0.24937260150909424, 0.3082816004753113, 0.35107648372650146, 0.3929467797279358, 0.4189670979976654, 0.4473649561405182, 0.4737815260887146, 0.4892352521419525, 0.5242372155189514, 0.5416721701622009, 0.5703341960906982, 0.5785233378410339, 0.5900145173072815, 0.6012415885925293, 0.6126006841659546, 0.6235635876655579, 0.6328094005584717, 0.6445648074150085, 0.6576409935951233, 0.655527651309967, 0.6641130447387695, 0.6643772125244141, 0.6783780455589294, 0.6733588576316833, 0.6851142644882202, 0.6824725866317749, 0.684982180595398, 0.6947563290596008, 0.6979262828826904, 0.6968696117401123, 0.7029454708099365, 0.7030775547027588, 0.7014925479888916, 0.7121912837028503, 0.7086250185966492, 0.7153612375259399, 0.719852089881897, 0.7154933214187622, 0.7156254053115845, 0.7187954187393188, 0.718399167060852, 0.7281733155250549, 0.7256637215614319, 0.7226257920265198, 0.7228899598121643, 0.72672039270401, 0.7312111854553223, 0.7320036888122559, 0.7416457533836365, 0.7272487282752991, 0.7346453666687012, 0.7391361594200134, 0.7367587089538574, 0.7386078238487244, 0.7446836829185486, 0.7371549606323242, 0.7349095344543457, 0.7432307600975037, 0.7423061728477478, 0.7401928305625916, 0.7471932172775269, 0.7430986762046814, 0.7475894689559937, 0.7458723783493042, 0.7411174178123474, 0.7460044622421265, 0.7494386434555054, 0.7493065595626831, 0.754589855670929, 0.7490423917770386, 0.7498348951339722, 0.7563069462776184, 0.7569673657417297, 0.7553823590278625, 0.7547219395637512, 0.7547219395637512, 0.7565711140632629, 0.754589855670929, 0.7619865536689758, 0.7569673657417297, 0.7573636174201965, 0.7592127919197083, 0.7637035846710205, 0.7638356685638428, 0.7627789974212646, 0.7667415142059326, 0.7574957013130188], "val_loss": [1.9469807488577706, 1.921074390411377, 1.8889976228986467, 1.8460486957005091, 1.7859909193856376, 1.7034904616219657, 1.5980243001665388, 1.47412828036717, 1.3417423112051827, 1.2158867972237724, 1.106294870376587, 1.0176638875688826, 0.9495060784476144, 0.8954235826219831, 0.8507848467145648, 0.8162299224308559, 0.7865073510578701, 0.7613966294697353, 0.7399986982345581, 0.721819451877049, 0.7069940737315586, 0.6926583051681519, 0.68133544921875, 0.6694261857441494, 0.6598714419773647, 0.6578274624688285, 0.6426198482513428, 0.6362406866891044, 0.6304992777960641, 0.6235693182264056, 0.6166824613298688, 0.6115686893463135, 0.6060842786516462, 0.5996580805097308, 0.5952345984322684, 0.5907667875289917, 0.5857151406151908, 0.5842628138405936, 0.5800848177501133, 0.5760154724121094, 0.5745624303817749, 0.5687813077654157, 0.565631457737514, 0.5622736896787371, 0.5586953674043927, 0.5567073992320469, 0.5542674916131156, 0.5517772265842983, 0.5488153185163226, 0.5444189480372837, 0.543050731931414, 0.5425821031842913, 0.5379842179162162, 0.536350931440081, 0.5343229259763446, 0.5328525475093296, 0.5320832218442645, 0.5287120512553624, 0.5282741955348423, 0.525749683380127, 0.522338901247297, 0.5214853457042149, 0.5210083212171283, 0.5204376152583531, 0.5163746561322894, 0.5154564721243722, 0.5136717728206089, 0.5125795091901507, 0.5103863648005894, 0.509946380342756, 0.5073373488017491, 0.5057368448802403, 0.5032354933874947, 0.5028119938714164, 0.5011080503463745, 0.5009309734616961, 0.4976576736995152, 0.49965882301330566, 0.4967665672302246, 0.49486190932137625, 0.49345975262778147, 0.49329704897744314, 0.49337077140808105, 0.49583729675837923, 0.49095078877040316, 0.48907712527683805, 0.4877201999936785, 0.487039463860648, 0.4853737694876535], "val_accuracy": [0.23499999940395355, 0.36399999260902405, 0.41200000047683716, 0.4466666579246521, 0.4856666624546051, 0.515333354473114, 0.5546666383743286, 0.5676666498184204, 0.5873333215713501, 0.6050000190734863, 0.6356666684150696, 0.6543333530426025, 0.6663333177566528, 0.6766666769981384, 0.6819999814033508, 0.6883333325386047, 0.6926666498184204, 0.6976666450500488, 0.6990000009536743, 0.7046666741371155, 0.7073333263397217, 0.7139999866485596, 0.715666651725769, 0.7246666550636292, 0.7210000157356262, 0.7183333039283752, 0.7296666502952576, 0.7286666631698608, 0.7369999885559082, 0.7353333234786987, 0.7383333444595337, 0.7366666793823242, 0.7440000176429749, 0.7426666617393494, 0.7416666746139526, 0.7480000257492065, 0.7483333349227905, 0.7480000257492065, 0.753000020980835, 0.7490000128746033, 0.7486666440963745, 0.7536666393280029, 0.7599999904632568, 0.7559999823570251, 0.7593333125114441, 0.7593333125114441, 0.7643333077430725, 0.7613333463668823, 0.7649999856948853, 0.7663333415985107, 0.7649999856948853, 0.7673333287239075, 0.768666684627533, 0.7703333497047424, 0.7683333158493042, 0.765333354473114, 0.7713333368301392, 0.7706666588783264, 0.7713333368301392, 0.7693333625793457, 0.7763333320617676, 0.7739999890327454, 0.7703333497047424, 0.7753333449363708, 0.7773333191871643, 0.7766666412353516, 0.7766666412353516, 0.7766666412353516, 0.7776666879653931, 0.7776666879653931, 0.7766666412353516, 0.7789999842643738, 0.781333327293396, 0.7786666750907898, 0.7799999713897705, 0.7799999713897705, 0.7853333353996277, 0.781333327293396, 0.7806666493415833, 0.7820000052452087, 0.7866666913032532, 0.781333327293396, 0.7816666960716248, 0.7910000085830688, 0.7820000052452087, 0.7860000133514404, 0.7853333353996277, 0.7873333096504211, 0.7900000214576721]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [7, 7, 8, 1, 8, 1, 9, 0, 3, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 9, 4], [3, 2, 2, 1, 1, 2, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.3977142870426178, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.9344446451877166, 2.197458724524634, 2.9995451882341833, 2.3049189856401635, 2.3032972938301794, 2.3028542110869883, 2.3028550173517988], "accuracy": [0.17976489663124084, 0.22916391491889954, 0.24474970996379852, 0.09919429570436478, 0.09602430462837219, 0.1014397069811821, 0.09589222073554993], "val_loss": [1.8498032433646066, 1.4896727630070277, 1.9767015320914132, 1.9740851266043526, 1.973691463470459, 1.973588126046317, 1.973585537501744], "val_accuracy": [0.2759999930858612, 0.41100001335144043, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.10400000214576721, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [7, 1, 3, 8, 8, 8, 7, 0, 3, 5, 3, 2, 0, 2, 3, 4, 5, 1, 2, 8, 7, 1, 1, 9, 2, 4, 3, 6, 5, 1], [1, 2, 2, 2, 2, 1, 2, 2, 2, 0, 2, 0, 2, 2, 3, 0, 0, 1, 0], [30, 8, 39, 25, 80, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [1, 4, 3], [82, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 10, 6, 4, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.multiply(tf.math.add(alpha, alpha), grad), tf.math.add(alpha, grad)), tf.math.sqrt(tf.math.sqrt(grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(sigma), tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [5, 4, 8, 8, 8, 0, 7, 1, 1, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 9, 4], [2, 2, 2, 2, 1, 1, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [5, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 12, 7, 5, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(sigma), tf.math.pow(tf.math.add(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [8, 7, 8, 1, 8, 1, 9, 0, 3, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 9, 4], [3, 1, 2, 1, 1, 2, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3, 5], [82, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08255184441804886, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [5, 7, 8, 1, 8, 1, 2, 0, 3, 3, 4, 2, 2, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 9, 4], [2, 2, 2, 2, 1, 1, 2, 2, 2, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [82, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [9, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3028291039510314, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10038304328918457, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [7, 7, 8, 1, 8, 1, 2, 0, 3, 3, 4, 2, 2, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 9, 4], [2, 1, 2, 2, 1, 1, 2, 2, 2, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [5, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [0, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [4, 3, 0, 4, 0, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 3, 1, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(grad, tf.math.add(alpha, alpha)), tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [7, 4, 8, 5, 8, 1, 8, 0, 0, 6, 3, 3, 0, 9, 3, 4, 5, 1, 6, 8, 7, 1, 1, 9, 0, 4], [2, 2, 2, 2, 1, 1, 2, 2, 1, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 10, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [82, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 9, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 2, 0, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.square(grad))), tf.math.add(alpha, tf.math.sqrt(grad))), tf.math.subtract(tf.math.add(alpha, grad), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2808.959427433369, 52167.59901887135, 237940.27298656057, 664079.4211217144, 1389961.7455422005, 2547409.7102760533], "accuracy": [0.09813763201236725, 0.10038304328918457, 0.10011887550354004, 0.10421344637870789, 0.10619468986988068, 0.10302469879388809], "val_loss": [10688.111328125, 82992.62276785714, 277608.3214285714, 655220.25, 1276514.2857142857, 2202174.9285714286], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [7, 7, 8, 1, 8, 1, 9, 0, 3, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 9, 4], [0, 2, 2, 2, 0, 1, 2, 2, 0, 0, 2, 0, 3, 0, 3, 0, 0, 1], [29, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 6, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [7, 4, 8, 8, 8, 1, 7, 0, 3, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 0, 4], [3, 2, 2, 0, 1, 1, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [18, 8, 39, 58, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [82, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 2, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 15, 15, 9, 6, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(tf.math.add(tf.math.add(alpha, grad), tf.math.negative(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))))), alpha)))), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08255184441804886, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [7, 7, 8, 1, 8, 1, 9, 0, 3, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 9, 4], [3, 2, 2, 1, 1, 2, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [39, 8, 14, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 3, 0, 4, 7, 8, 4], [0, 0, 0, 1, 3, 3], [28, 57, 19]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 7, 4, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 13, 7, 6, 3], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))))), tf.math.add(alpha, grad)), alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.pow(tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma))))), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [7, 7, 8, 1, 8, 1, 9, 0, 3, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 9, 4], [1, 2, 1, 1, 1, 2, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3, 1], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 8, 7, 8, 4, 3], [3, 0, 1, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 7, 4, 1, 1, 0, 0, 0, 0, 13, 8, 5, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.negative(tf.math.sqrt(tf.math.add(tf.math.sqrt(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.multiply(alpha, alpha), sigma))))))", "other_info": {"loss": [2.3040195407333344, 2.3017822538211345, 2.3046597519318945, 2.304275128725198, 2.301822689750711, 2.3024540802176285], "accuracy": [0.08968432247638702, 0.08955223858356476, 0.09034473448991776, 0.08809932321310043, 0.0952318087220192, 0.09259014576673508], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1], [7, 4, 8, 2, 8, 1, 7, 0, 3, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 2, 7, 2, 1, 9, 1, 4, 8, 5, 8], [2, 1, 2, 2, 2, 1, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0, 0, 0], [30, 86, 39, 19, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [2, 4, 3], [82, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [3, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 47, 47, 29, 18, 8, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 44, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.sqrt(tf.math.add(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(tf.math.add(tf.math.add(alpha, alpha), grad), tf.math.negative(grad)))))), tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.negative(alpha)), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(tf.math.add(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), grad))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))), tf.math.add(alpha, grad))), tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))))), tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3040195407333344, 2.3017822538211345, 2.3046597519318945, 2.304275128725198, 2.301822689750711, 2.3024540802176285], "accuracy": [0.08968432247638702, 0.08955223858356476, 0.09034473448991776, 0.08809932321310043, 0.0952318087220192, 0.09259014576673508], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [7, 4, 8, 8, 8, 1, 7, 0, 3, 3, 3, 2, 2, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 8, 0, 4], [2, 2, 2, 2, 1, 1, 2, 2, 0, 0, 2, 0, 3, 0, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 2, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 15, 15, 9, 6, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 12, 7, 5, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(grad))), tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(tf.math.add(tf.math.add(alpha, grad), grad), tf.math.negative(grad)))))), tf.math.multiply(alpha, tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(beta, sigma))))))", "other_info": {"loss": [2.3040195407333344, 2.3017822538211345, 2.3046597519318945, 2.304275128725198, 2.301822689750711, 2.3024540802176285], "accuracy": [0.08968432247638702, 0.08955223858356476, 0.09034473448991776, 0.08809932321310043, 0.0952318087220192, 0.09259014576673508], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [3, 9, 8, 8, 8, 0, 7, 1, 1, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 9, 4], [2, 2, 0, 2, 1, 1, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [82, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [2, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [8, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3040195407333344, 2.3017822538211345, 2.3046597519318945, 2.304275128725198, 2.301822689750711, 2.3024540802176285], "accuracy": [0.08968432247638702, 0.08955223858356476, 0.09034473448991776, 0.08809932321310043, 0.0952318087220192, 0.09259014576673508], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [7, 7, 8, 1, 8, 1, 9, 0, 3, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 9, 4], [0, 2, 2, 2, 0, 1, 2, 2, 0, 0, 2, 0, 3, 0, 3, 0, 0, 1], [30, 8, 39, 25, 98, 52, 94, 1, 97, 57], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 12, 7, 5, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma))))))", "other_info": {"loss": [2.3040195407333344, 2.3017822538211345, 2.3046597519318945, 2.304275128725198, 2.301822689750711, 2.3024540802176285], "accuracy": [0.08968432247638702, 0.08955223858356476, 0.09034473448991776, 0.08809932321310043, 0.0952318087220192, 0.09259014576673508], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [7, 7, 8, 1, 8, 1, 9, 0, 3, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 9, 4], [3, 2, 2, 1, 1, 2, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3, 5], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 3, 3, 1, 2, 0, 10, 10, 6, 4, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(tf.math.square(tf.math.add(beta, grad)), grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3040195407333344, 2.3017822538211345, 2.3046597519318945, 2.304275128725198, 2.301822689750711, 2.3024540802176285], "accuracy": [0.08968432247638702, 0.08955223858356476, 0.09034473448991776, 0.08809932321310043, 0.0952318087220192, 0.09259014576673508], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]