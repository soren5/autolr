[{"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 4, 5, 8, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 1, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [30, 8, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 9, 7, 1, 7, 5, 5, 9], [5, 4, 3, 0], [45, 0, 19], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [42, 57]], "fitness": -0.8265714049339294, "mapping_values": [1, 6, 6, 3, 3, 0, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.pow(grad, alpha), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.026291098151902, 1.3965020733045912, 1.0242559966740592, 0.9082493743388219, 0.8575946260059136, 0.7821641841647711, 0.7402181876270983, 0.7191494369409214, 0.702861623174526, 0.6509748651303982, 0.6800934913734388, 0.6263574973750565, 0.634506304754384, 0.6146652852350522, 0.6203547714172558, 0.6078934195161008, 0.5847341789781709, 0.5757699971658174, 0.5774338882927724, 0.5608087739751103, 0.5648708608502867, 0.5500362910268297, 0.5297680575975794, 0.5267715614469627, 0.5290494562140104, 0.5111329455803004, 0.5163961179173617, 0.4961381883842283, 0.5033841165828982, 0.4890722980226555, 0.4999797527131277, 0.4801260874358308, 0.4814834589687998, 0.47038649962783224, 0.44672955877871295, 0.46278221965654887, 0.44631934104547083, 0.4339968122078396, 0.43896159032914994, 0.4575338157026948, 0.4358180175564781, 0.4313486157005584], "accuracy": [0.3354906737804413, 0.5134063959121704, 0.6353189945220947, 0.6592260003089905, 0.6868313550949097, 0.7077004313468933, 0.7194558382034302, 0.7246070504188538, 0.7293620109558105, 0.7581561207771301, 0.7429665923118591, 0.7604015469551086, 0.7585523724555969, 0.763439416885376, 0.7625148296356201, 0.7680623531341553, 0.780610203742981, 0.7808743715286255, 0.7823272943496704, 0.7864218950271606, 0.7840443849563599, 0.7865539789199829, 0.8043851256370544, 0.7991018295288086, 0.8020076751708984, 0.8124422430992126, 0.8035926818847656, 0.8146876096725464, 0.8120459914207458, 0.816008448600769, 0.8136309385299683, 0.8231409192085266, 0.8211596608161926, 0.8317263126373291, 0.8370096683502197, 0.8274996876716614, 0.8362171649932861, 0.8385946154594421, 0.8363492488861084, 0.8271034359931946, 0.8424250483512878, 0.8356888294219971], "val_loss": [1.1829213755471366, 1.0152501378740584, 0.7544385875974383, 0.6235076529639108, 0.6110282966068813, 0.582337771143232, 0.585572464125497, 0.5624897309712001, 0.5445634467261178, 0.5674723557063511, 0.5314082077571324, 0.5340906041009086, 0.4989159107208252, 0.5583685466221401, 0.5050087315695626, 0.49308667864118305, 0.482962897845677, 0.4620040314538138, 0.4716310671397618, 0.4738387039729527, 0.46017750671931673, 0.4457219157900129, 0.4432790619986398, 0.4455613579068865, 0.4308034437043326, 0.4588155576160976, 0.42668786219188143, 0.43713152408599854, 0.40843209198543, 0.42561458689825876, 0.4143381970269339, 0.3994765026228769, 0.40404753174100605, 0.39694689001355854, 0.402164774281638, 0.3947057383401053, 0.38408407143184115, 0.39459699392318726, 0.45825064182281494, 0.3770962357521057, 0.38360631465911865, 0.38223590169634136], "val_accuracy": [0.5, 0.6236666440963745, 0.6773333549499512, 0.7213333249092102, 0.7246666550636292, 0.746999979019165, 0.7226666808128357, 0.7459999918937683, 0.7566666603088379, 0.7433333396911621, 0.7429999709129333, 0.7673333287239075, 0.7649999856948853, 0.7316666841506958, 0.7773333191871643, 0.781000018119812, 0.7870000004768372, 0.7979999780654907, 0.7910000085830688, 0.7713333368301392, 0.7940000295639038, 0.8059999942779541, 0.8069999814033508, 0.8173333406448364, 0.8159999847412109, 0.7976666688919067, 0.8206666707992554, 0.809333324432373, 0.8196666836738586, 0.812666654586792, 0.8169999718666077, 0.82833331823349, 0.8246666789054871, 0.8273333311080933, 0.8209999799728394, 0.8256666660308838, 0.8316666483879089, 0.8253333568572998, 0.7910000085830688, 0.831333339214325, 0.8226666450500488, 0.8270000219345093]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 4, 9, 5, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 2, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [57, 8, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [6, 4, 2, 8, 7, 4, 5, 9], [0, 4, 3, 0, 3, 4], [21, 0, 19], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [43, 57]], "fitness": -0.8182857036590576, "mapping_values": [1, 6, 6, 5, 1, 3, 13, 13, 7, 6, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.add(grad, tf.math.pow(tf.math.add(beta, grad), tf.math.square(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))))), grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.974044518857474, 1.3331427265230722, 1.0474886515074087, 0.8808425621522841, 0.8214343674997565, 0.7705429889790182, 0.7189198521858571, 0.6902737587418744, 0.6936792227822273, 0.6701053482839665, 0.6489287386354974, 0.6100058334457278, 0.6160169959210008, 0.5932637985828704, 0.6279963824522572, 0.5946302089189195, 0.5809945174101842, 0.5540080456969256, 0.5546406330591211, 0.545138243419021, 0.5371421589795955, 0.5256185351802436, 0.5231334765817763, 0.5078178643944116, 0.5033186225725156, 0.48527261028672725, 0.4913780243798899, 0.47142862725676704, 0.47214941549940415, 0.4591883058915474, 0.47893253572234984, 0.46187101164592836, 0.45031818368447185, 0.44608798870289595, 0.4254588499131881, 0.4414540204854138, 0.41841657497721924, 0.4044260844901222, 0.40847910129949955, 0.43609705037917, 0.4164282131456444, 0.4105371958693619, 0.397589943463603, 0.3945444021258356, 0.39112225727571426, 0.38165714451114435, 0.3764365064099543, 0.3650909243809659, 0.38249927394661876, 0.35799483565795437, 0.372406490616527, 0.3710661025890317, 0.35512225750084364, 0.3649620829776703, 0.3481896458332171], "accuracy": [0.34143441915512085, 0.5445780158042908, 0.6214502453804016, 0.672170102596283, 0.6800950765609741, 0.7084929347038269, 0.72672039270401, 0.7317395210266113, 0.7413815855979919, 0.7421740889549255, 0.7537974119186401, 0.7730814814567566, 0.7647602558135986, 0.7774402499198914, 0.7625148296356201, 0.7749306559562683, 0.7779685854911804, 0.789459764957428, 0.791441023349762, 0.7907806038856506, 0.7952714562416077, 0.7944789528846741, 0.8054417967796326, 0.809140145778656, 0.8121780753135681, 0.8210275769233704, 0.8181217908859253, 0.8259146809577942, 0.8267071843147278, 0.8302733898162842, 0.8191784620285034, 0.8308017253875732, 0.8305375576019287, 0.8376700282096863, 0.8466516733169556, 0.8396512866020203, 0.8487650156021118, 0.8488970994949341, 0.848368763923645, 0.8366134166717529, 0.8459912538528442, 0.8438779711723328, 0.8558974862098694, 0.8569541573524475, 0.8536521196365356, 0.8593316674232483, 0.8602562546730042, 0.8652753829956055, 0.859199583530426, 0.8673887252807617, 0.8660678863525391, 0.8632941246032715, 0.8734645247459412, 0.8609166741371155, 0.8701624870300293], "val_loss": [1.1679036957877023, 0.9261383329119001, 0.6802372932434082, 0.6424830300467355, 0.6134355068206787, 0.5867695467812675, 0.5645862477166312, 0.5774182421820504, 0.5096326896122524, 0.5637532472610474, 0.4979303053447178, 0.5046448026384626, 0.4848395586013794, 0.6260182687214443, 0.4957397665296282, 0.49218245915004183, 0.46917453833988737, 0.45040464401245117, 0.4547369820731027, 0.4455536093030657, 0.43981986386435373, 0.44275217396872385, 0.4367107834134783, 0.4297906756401062, 0.4148674947874887, 0.4354229654584612, 0.40986829144614084, 0.418791549546378, 0.3906025971685137, 0.41970964840480257, 0.40404817036220003, 0.3808794787951878, 0.39940931115831646, 0.39698411737169537, 0.4023186223847525, 0.3814384000641959, 0.3675821168082101, 0.3718093718801226, 0.4442861591066633, 0.37042246546064106, 0.369418135711125, 0.37059925283704487, 0.3733272041593279, 0.3605291758264814, 0.3509355442864554, 0.3627698166029794, 0.3475032789366586, 0.3495034234864371, 0.3413268838609968, 0.34216924224581036, 0.3389927404267447, 0.3429781709398542, 0.34522184303828646, 0.3426113384110587, 0.3501364588737488], "val_accuracy": [0.5276666879653931, 0.6476666927337646, 0.6953333616256714, 0.7273333072662354, 0.715666651725769, 0.7429999709129333, 0.7353333234786987, 0.7353333234786987, 0.7666666507720947, 0.734666645526886, 0.778333306312561, 0.7773333191871643, 0.7776666879653931, 0.7250000238418579, 0.784333348274231, 0.7743333578109741, 0.7900000214576721, 0.7983333468437195, 0.8019999861717224, 0.7973333597183228, 0.8040000200271606, 0.8050000071525574, 0.812333345413208, 0.8176666498184204, 0.8196666836738586, 0.8090000152587891, 0.8246666789054871, 0.8163333535194397, 0.828000009059906, 0.809333324432373, 0.8209999799728394, 0.8339999914169312, 0.8263333439826965, 0.8206666707992554, 0.8209999799728394, 0.8303333520889282, 0.8343333601951599, 0.8353333473205566, 0.7983333468437195, 0.8366666436195374, 0.8336666822433472, 0.8296666741371155, 0.8273333311080933, 0.8443333506584167, 0.8450000286102295, 0.8343333601951599, 0.8493333458900452, 0.8463333249092102, 0.8506666421890259, 0.8516666889190674, 0.8446666598320007, 0.8473333120346069, 0.8506666421890259, 0.8489999771118164, 0.8486666679382324]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 1, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 2, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [0, 42, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [2, 2, 0, 2, 7, 5, 5, 9], [4, 4, 3, 0, 0], [56, 0, 19], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [43, 57]], "fitness": -0.8097142577171326, "mapping_values": [1, 3, 3, 1, 2, 1, 12, 12, 8, 4, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.math.square(grad))))), tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9740423534870966, 1.3328407212586026, 1.0419582972405625, 0.8641078313737576, 0.8300011721442735, 0.7251849365650057, 0.749062352790777, 0.7108057392523699, 0.6925121273709137, 0.6430082759049748, 0.6759969676962744, 0.6100405142244615, 0.6200255832856657, 0.5961119142726208, 0.5996149805920739, 0.5911496373105279, 0.5685960732084523, 0.5530179432905613, 0.5495527840214887, 0.5355535318130011, 0.5406470827186554, 0.5242653972263963, 0.5090012653841397, 0.5119695658098673, 0.5106769908672751, 0.49311865286158846, 0.49475284031180344, 0.47152919580183483, 0.475750760458338, 0.46899744441181423, 0.47920746661022967, 0.45333041380015754, 0.4534346348597562, 0.44328924094004135, 0.42411959214201694, 0.4458202908004768, 0.4104837183041611, 0.40685198180600873, 0.419173347813783, 0.42795030434354264, 0.4137642983636993, 0.4114773089245499, 0.3997754688394257], "accuracy": [0.34143441915512085, 0.544181764125824, 0.6222427487373352, 0.6769251227378845, 0.6942279934883118, 0.7290979027748108, 0.7137762308120728, 0.7273808121681213, 0.733588695526123, 0.7553823590278625, 0.7367587089538574, 0.7651565074920654, 0.765949010848999, 0.7692511081695557, 0.7713643908500671, 0.776251494884491, 0.7845727205276489, 0.789988100528717, 0.7928939461708069, 0.7980451583862305, 0.7950072884559631, 0.7979130744934082, 0.809140145778656, 0.8067626357078552, 0.807158887386322, 0.8187822103500366, 0.8136309385299683, 0.8260467648506165, 0.8232730031013489, 0.8277638554573059, 0.8212917447090149, 0.8363492488861084, 0.8309338092803955, 0.8380662798881531, 0.8473120927810669, 0.8387266993522644, 0.8492933511734009, 0.850350022315979, 0.8421608805656433, 0.8437458872795105, 0.8448025584220886, 0.8446704745292664, 0.8537842035293579], "val_loss": [1.1674983842032296, 0.9452733652932304, 0.7066253764288766, 0.6209604399544852, 0.5812404836927142, 0.6135739939553397, 0.5914962632315499, 0.5815010581697736, 0.5416385105678013, 0.6001919678279332, 0.5147023371287754, 0.5169496365955898, 0.4949320895331247, 0.5529429401670184, 0.49322410992213656, 0.4787848676953997, 0.4711116552352905, 0.4382458584649222, 0.4498263086591448, 0.4755349499838693, 0.43529934542519705, 0.42708528893334524, 0.4290368471826826, 0.4348430463245937, 0.42119009154183523, 0.4452056884765625, 0.4103619711739676, 0.42660726819719585, 0.39339988572256906, 0.41601522479738506, 0.41284977538245066, 0.3883305532591684, 0.39848311458315167, 0.39136065755571636, 0.3976838844163077, 0.3872449142592294, 0.36865356138774324, 0.37701605898993357, 0.4277394584247044, 0.36995841775621685, 0.3753305503300258, 0.3636029362678528, 0.3853930916104998], "val_accuracy": [0.5273333191871643, 0.6446666717529297, 0.6793333292007446, 0.7203333377838135, 0.734666645526886, 0.718999981880188, 0.721666693687439, 0.7356666922569275, 0.7513333559036255, 0.7176666855812073, 0.7606666684150696, 0.7699999809265137, 0.7663333415985107, 0.7323333621025085, 0.7826666831970215, 0.7893333435058594, 0.7873333096504211, 0.8076666593551636, 0.8066666722297668, 0.7639999985694885, 0.7986666560173035, 0.8163333535194397, 0.8119999766349792, 0.8143333196640015, 0.8216666579246521, 0.8073333501815796, 0.8270000219345093, 0.812666654586792, 0.8296666741371155, 0.8103333115577698, 0.8186666369438171, 0.8326666951179504, 0.8270000219345093, 0.824999988079071, 0.8206666707992554, 0.8266666531562805, 0.8353333473205566, 0.8360000252723694, 0.8013333082199097, 0.8356666564941406, 0.8309999704360962, 0.8346666693687439, 0.8206666707992554]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 4, 5, 8, 5, 5, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 2, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [57, 8, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [8, 0, 2, 8, 2, 0, 5, 9], [4, 1, 3, 0, 0], [21, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [43, 57]], "fitness": -0.8019999861717224, "mapping_values": [1, 9, 9, 6, 3, 1, 8, 8, 5, 3, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.square(tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9740348098741278, 1.3318614191335694, 1.0459197838828234, 0.8573606209810998, 0.8287733436622766, 0.7297013558259399, 0.7397320127017967, 0.7155379501190231, 0.6606334304261626, 0.6549582581210839, 0.6847054343244986, 0.618397243987174, 0.6210805661233346, 0.6014960192890845, 0.6063284948359958, 0.59046245161348, 0.5649462318486541, 0.5452323868809721, 0.5671562469788137, 0.5295361167467219, 0.5504493569228722, 0.5227059642904234, 0.5158078207544222, 0.5089430755092609, 0.5041996615792089, 0.4880302811240507, 0.4966541696115964, 0.4705011546100057, 0.4778011822902043, 0.46766910241138604, 0.47062001421136346, 0.46127141358483625, 0.44941235277095665, 0.4416770332556485, 0.4257671300721852, 0.4436992624211919, 0.4165721979942367], "accuracy": [0.34143441915512085, 0.5452384352684021, 0.6205257177352905, 0.678642213344574, 0.6934354901313782, 0.724739134311676, 0.7174745798110962, 0.7220974564552307, 0.7497028112411499, 0.7471932172775269, 0.7337207794189453, 0.7629110813140869, 0.7658169269561768, 0.770439863204956, 0.7693831920623779, 0.7734777331352234, 0.7886672616004944, 0.7938185334205627, 0.7901201844215393, 0.8043851256370544, 0.7906485199928284, 0.7972526550292969, 0.8067626357078552, 0.8076872229576111, 0.8098005652427673, 0.8198388814926147, 0.8132346868515015, 0.8281601071357727, 0.8230088353157043, 0.8289526104927063, 0.8244617581367493, 0.8319904804229736, 0.8315942287445068, 0.8408400416374207, 0.8474441766738892, 0.8399154543876648, 0.8520671129226685], "val_loss": [1.1683951105390276, 0.9470604147229876, 0.6884117467062814, 0.6187032290867397, 0.5883269139698574, 0.6097631795065743, 0.5914592232022967, 0.5886343206678119, 0.5458207981927055, 0.5672472034181867, 0.5113745076315743, 0.518990159034729, 0.48534999574933735, 0.5583223104476929, 0.4874120439801897, 0.47247045380728586, 0.4625882591520037, 0.4494379758834839, 0.44778432164873394, 0.5129208224160331, 0.4397825002670288, 0.43871218817574636, 0.4362013680594308, 0.42812166043690275, 0.41569272109440397, 0.4438116209847586, 0.412832430430821, 0.42377511092594694, 0.39132838589804514, 0.4098249248095921, 0.4134443828037807, 0.3810496074812753, 0.3933208925383432, 0.39485413687569754, 0.39255380630493164, 0.3836844818932669, 0.3724080664770944], "val_accuracy": [0.5273333191871643, 0.6439999938011169, 0.6869999766349792, 0.7210000157356262, 0.7316666841506958, 0.7293333411216736, 0.7039999961853027, 0.731333315372467, 0.7350000143051147, 0.7413333058357239, 0.7583333253860474, 0.7756666541099548, 0.7766666412353516, 0.7350000143051147, 0.784333348274231, 0.79666668176651, 0.7910000085830688, 0.8023333549499512, 0.8090000152587891, 0.7563333511352539, 0.8009999990463257, 0.8059999942779541, 0.8140000104904175, 0.8169999718666077, 0.8230000138282776, 0.8059999942779541, 0.8263333439826965, 0.815666675567627, 0.8306666612625122, 0.8143333196640015, 0.815666675567627, 0.8379999995231628, 0.8299999833106995, 0.8226666450500488, 0.8256666660308838, 0.8289999961853027, 0.8349999785423279]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 4, 9, 8, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 1, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [89, 8, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1], [5, 4, 2, 8, 7, 0, 5, 9], [5, 4, 3, 0], [70, 0, 19], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [43, 57]], "fitness": -0.8008571267127991, "mapping_values": [1, 6, 6, 5, 1, 3, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.square(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.974044924824072, 1.3312498200067266, 1.0431039761306586, 0.861816230829224, 0.7960694908481689, 0.7759084889382073, 0.7412360421560381, 0.7105179829305236, 0.6736667005928547, 0.6445506951985595, 0.6909710159312464, 0.6081618026121339, 0.618022841461551, 0.5967284752440538, 0.6185985115367691, 0.5921923290185799, 0.5714068125031486, 0.5527266498963594, 0.55157337315787, 0.5404944928834593, 0.5367728334297641, 0.5236451524659045, 0.5144487230643274, 0.5073479474488345, 0.5073049819157691, 0.4857574082392397, 0.49554396802644374, 0.47625719821527096, 0.47044850094065516, 0.459235117038196, 0.4800079723020759, 0.45147718113836377, 0.44829304642082757, 0.44558221669780296], "accuracy": [0.34143441915512085, 0.5443138480186462, 0.6215823292732239, 0.6769251227378845, 0.6963412761688232, 0.7069079279899597, 0.7191916704177856, 0.7250033020973206, 0.7450799345970154, 0.7520803213119507, 0.7334566116333008, 0.7676661014556885, 0.76542067527771, 0.7696473598480225, 0.7625148296356201, 0.7761194109916687, 0.7853652238845825, 0.7889314293861389, 0.7924976944923401, 0.7928939461708069, 0.7968564033508301, 0.7965922355651855, 0.8067626357078552, 0.8079513907432556, 0.809140145778656, 0.8201030492782593, 0.8148196935653687, 0.8236692547798157, 0.8257825970649719, 0.8333113193511963, 0.8178576231002808, 0.8358209133148193, 0.8315942287445068, 0.8381983637809753], "val_loss": [1.167572089603969, 0.9358339309692383, 0.6921132292066302, 0.6086730105536324, 0.6104973214013236, 0.6588262149265834, 0.5724138362067086, 0.5584234850747245, 0.5352050576891217, 0.5326557840619769, 0.5056453432355609, 0.5208647932325091, 0.49617830344608854, 0.5945185593196324, 0.5027067490986415, 0.4783954620361328, 0.46240087917872835, 0.44101437500544954, 0.45114428656441824, 0.4471614190510341, 0.4402232681001936, 0.42445760113852365, 0.43276739971978323, 0.4353746175765991, 0.41724638428006855, 0.4391472850527082, 0.41287135226385935, 0.41108168022973196, 0.38829338550567627, 0.4172896827970232, 0.41305841718401226, 0.385538603578295, 0.40115909917013987, 0.39767674037388395], "val_accuracy": [0.5273333191871643, 0.6503333449363708, 0.6836666464805603, 0.7306666374206543, 0.7393333315849304, 0.6830000281333923, 0.721666693687439, 0.7446666955947876, 0.7446666955947876, 0.7590000033378601, 0.7716666460037231, 0.7710000276565552, 0.7680000066757202, 0.7253333330154419, 0.7776666879653931, 0.7846666574478149, 0.7919999957084656, 0.8086666464805603, 0.8026666641235352, 0.7906666398048401, 0.8066666722297668, 0.8163333535194397, 0.812666654586792, 0.8153333067893982, 0.8226666450500488, 0.8113333582878113, 0.8273333311080933, 0.8213333487510681, 0.8316666483879089, 0.8109999895095825, 0.8166666626930237, 0.8306666612625122, 0.8273333311080933, 0.8199999928474426]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1], [3, 4, 9, 8, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 1, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [67, 27, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1], [3, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [24, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [42, 57]], "fitness": -0.7962856888771057, "mapping_values": [1, 5, 5, 3, 2, 1, 7, 7, 4, 3, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.pow(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.01259546143866, 1.3455996553045395, 1.0601310288397516, 0.9213266879686228, 0.848333286406137, 0.784646042499245, 0.7313808185108555, 0.7109536077005988, 0.6917841563355795, 0.6729566740747204, 0.6526690591847529, 0.6330040784685792, 0.6375564129565764, 0.6198233864515559, 0.5836601377226311, 0.5846057286068528, 0.5862566860376206, 0.5773906887341264, 0.5784189916478959], "accuracy": [0.32505613565444946, 0.5217276215553284, 0.6124686598777771, 0.6583014130592346, 0.6816800832748413, 0.7053229212760925, 0.7234182953834534, 0.7322678565979004, 0.7360982894897461, 0.7491744756698608, 0.7515519857406616, 0.7663452625274658, 0.7537974119186401, 0.7652885913848877, 0.7796856164932251, 0.7814027070999146, 0.78113853931427, 0.7824593782424927, 0.7854973077774048], "val_loss": [1.203552212033953, 0.956122636795044, 0.759163362639291, 0.6631214107785907, 0.6193755524499076, 0.6084496293749128, 0.5739784240722656, 0.5855106966836112, 0.5750804117747715, 0.5294210229601178, 0.515808071408953, 0.5600252492087228, 0.4889671802520752, 0.48589846066066195, 0.49091218199048725, 0.48994927746909006, 0.4790480647768293, 0.4953192983354841, 0.484924384525844], "val_accuracy": [0.5149999856948853, 0.6296666860580444, 0.6466666460037231, 0.7073333263397217, 0.7276666760444641, 0.7333333492279053, 0.7456666827201843, 0.7433333396911621, 0.737666666507721, 0.7576666474342346, 0.7726666927337646, 0.7239999771118164, 0.7863333225250244, 0.7886666655540466, 0.7680000066757202, 0.7823333144187927, 0.7836666703224182, 0.7799999713897705, 0.7839999794960022]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 4, 5, 9, 8, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [30, 8, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [3, 9, 1, 1, 2, 5, 6, 9], [0, 4, 3, 2], [82, 79, 19], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [22, 57]], "fitness": -0.7348571419715881, "mapping_values": [1, 5, 5, 2, 3, 1, 3, 3, 2, 1, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2991869718548865, 2.2920891806245116, 2.28320332059078, 2.2754589800569502, 2.268516370097896, 2.258300940059258, 2.252313181582758, 2.240219784419078, 2.229911391383322, 2.2175044508941455, 2.2066794563482905, 2.1937597431857525, 2.179977778036833, 2.1620631722442822, 2.1457132184982552, 2.127479217465307, 2.103240950516013, 2.0788551409797833, 2.0569916307146774, 2.0269243654526456, 1.996163270681636, 1.9613185748290614, 1.925136259722908, 1.8983491390073588, 1.8568772674472875, 1.8154451500517643, 1.7759450755933681, 1.7390601596875104, 1.6947790495298478, 1.6597481994360603, 1.6162548448746277, 1.5791300647782454, 1.5486179326015488, 1.4997957297414444, 1.4778486138179932, 1.4385515718317743, 1.4234442567907195, 1.3832983777287173, 1.3612121247092668, 1.340639120441906, 1.3189062184157578, 1.2877564553524194, 1.2652195511146418, 1.2599291928046572, 1.219935118923759, 1.2136239288914803, 1.199246403689492, 1.1806022152688447, 1.171306467500298, 1.1588436823322033, 1.134955376839326, 1.1273238471690863, 1.1132819493055313, 1.1117485647644931, 1.0957080898441107, 1.0895637051461788, 1.0728577242834756, 1.065631683555183, 1.0549624227750036, 1.0357672021908924, 1.0289601842095242, 1.019277202108391, 1.0265454565450547, 1.0128704171926433, 1.00536798645146, 1.0025245014072772, 1.0025581162776678, 0.9872662890793514, 0.9750086279860766, 0.9708653529086181, 0.9722098125332556, 0.9616189191385802, 0.9430848371162233, 0.9420984394955613, 0.9462218378922564, 0.9340876305596136, 0.926506637117693, 0.9246614237251125, 0.9171925851965247, 0.9059635326689449, 0.9157684384052386, 0.9152525884442877, 0.8979114605183489, 0.9039780723262913, 0.8941970209892101, 0.8859016460875447, 0.8868021174287122, 0.8838270110791747, 0.8805964413713927, 0.8739464328415311], "accuracy": [0.09734513610601425, 0.11478008329868317, 0.13802668452262878, 0.16114120185375214, 0.1748778223991394, 0.20195482671260834, 0.21859727799892426, 0.24580636620521545, 0.26522254943847656, 0.2826575040817261, 0.2946770489215851, 0.30841368436813354, 0.32043322920799255, 0.3361510932445526, 0.3517369031906128, 0.3609826862812042, 0.37524765729904175, 0.38647469878196716, 0.3955884277820587, 0.39730551838874817, 0.4167217016220093, 0.4231937527656555, 0.43204331398010254, 0.436930388212204, 0.4435345530509949, 0.4535728394985199, 0.4682340621948242, 0.4640074074268341, 0.4776119291782379, 0.4802536070346832, 0.4861973226070404, 0.5040285587310791, 0.5019152164459229, 0.5222559571266174, 0.5276713967323303, 0.531898021697998, 0.5288601517677307, 0.5431250929832458, 0.5415400862693787, 0.5484083890914917, 0.5538238286972046, 0.5583146214485168, 0.5705983638763428, 0.5643904209136963, 0.5909391045570374, 0.5799762010574341, 0.5831462144851685, 0.5933166146278381, 0.5894861817359924, 0.5976753234863281, 0.6004490852355957, 0.6075815558433533, 0.6196011304855347, 0.6063928008079529, 0.6169594526290894, 0.6221106648445129, 0.6247523427009583, 0.6239598393440247, 0.6284506916999817, 0.6322810649871826, 0.6382247805595398, 0.6382247805595398, 0.6388852000236511, 0.6411306262016296, 0.6432439684867859, 0.6376964449882507, 0.6460176706314087, 0.6456214785575867, 0.6503764390945435, 0.6609430909156799, 0.6520935297012329, 0.6514331102371216, 0.6622639298439026, 0.6709813475608826, 0.6641130447387695, 0.6740192770957947, 0.6666226387023926, 0.6682076454162598, 0.6752080321311951, 0.6820763349533081, 0.6691322326660156, 0.6752080321311951, 0.6773213744163513, 0.6779817938804626, 0.6837934255599976, 0.6837934255599976, 0.6796988248825073, 0.6836613416671753, 0.6848500967025757, 0.6866992712020874], "val_loss": [1.9637386458260673, 1.9563931737627303, 1.9490342140197754, 1.9415296145847865, 1.9337791034153529, 1.9255574771336146, 1.9169912338256836, 1.9077588490077428, 1.8978001049586706, 1.8868439538138253, 1.8749655314854212, 1.8618811198643275, 1.8473505973815918, 1.8313416753496443, 1.8136779921395438, 1.7944137709481376, 1.7730427469526018, 1.7494817461286272, 1.7241651671273368, 1.6965575558798653, 1.6665064947945731, 1.6341770035879952, 1.5996098858969552, 1.5639365741184779, 1.526545558656965, 1.4875843865530831, 1.4478716850280762, 1.4080629008156913, 1.3673641000475203, 1.3278355598449707, 1.288271529333932, 1.2499391692025321, 1.2134453228541784, 1.177927119391305, 1.1454044069562639, 1.1142053263528007, 1.0858138629368372, 1.0581520625523158, 1.0329731873103551, 1.0095979145595007, 0.988145010811942, 0.967609167098999, 0.9483918121882847, 0.9309719290052142, 0.9131566796983991, 0.8977041585104806, 0.8833342279706683, 0.8696283953530448, 0.8570839847837176, 0.845639705657959, 0.8342164243970599, 0.8235078198569161, 0.8134619678769793, 0.8046575444085258, 0.7958974838256836, 0.7880311012268066, 0.7800962414060321, 0.7727171012333461, 0.7658793585641044, 0.758551972252982, 0.7519086939947945, 0.7452907562255859, 0.73966383934021, 0.7341657536370414, 0.7291839293071202, 0.7239621366773333, 0.7194552762167794, 0.7145149026598249, 0.7095116376876831, 0.7054212604250226, 0.7008417333875384, 0.6962710959570748, 0.6918076276779175, 0.68797538961683, 0.6842092956815448, 0.6807543039321899, 0.677302530833653, 0.6741400786808559, 0.671088559286935, 0.6679062502724784, 0.6648163284574237, 0.662438086100987, 0.6590622663497925, 0.6561457089015416, 0.6533422470092773, 0.6512721606663295, 0.6482809952327183, 0.6457326752798898, 0.6429639373506818, 0.6408884014402118], "val_accuracy": [0.08733333647251129, 0.1483333259820938, 0.21933333575725555, 0.281333327293396, 0.32766667008399963, 0.3540000021457672, 0.3696666657924652, 0.3853333294391632, 0.3973333239555359, 0.41233333945274353, 0.42633333802223206, 0.43966665863990784, 0.44866666197776794, 0.4569999873638153, 0.46966665983200073, 0.48766666650772095, 0.4986666738986969, 0.5066666603088379, 0.515999972820282, 0.528333306312561, 0.5386666655540466, 0.5446666479110718, 0.5516666769981384, 0.5569999814033508, 0.5613333582878113, 0.565666675567627, 0.574999988079071, 0.57833331823349, 0.5809999704360962, 0.5916666388511658, 0.597000002861023, 0.6023333072662354, 0.6110000014305115, 0.6223333477973938, 0.6276666522026062, 0.6356666684150696, 0.6426666378974915, 0.6483333110809326, 0.6513333320617676, 0.656333327293396, 0.6639999747276306, 0.6633333563804626, 0.6663333177566528, 0.6683333516120911, 0.6729999780654907, 0.671999990940094, 0.6726666688919067, 0.6776666641235352, 0.6816666722297668, 0.6850000023841858, 0.6856666803359985, 0.6859999895095825, 0.6866666674613953, 0.6903333067893982, 0.690666675567627, 0.6930000185966492, 0.6933333277702332, 0.6936666369438171, 0.6936666369438171, 0.6996666789054871, 0.6993333101272583, 0.6983333230018616, 0.7006666660308838, 0.7006666660308838, 0.70333331823349, 0.7049999833106995, 0.7070000171661377, 0.7089999914169312, 0.7083333134651184, 0.7089999914169312, 0.7136666774749756, 0.7166666388511658, 0.7139999866485596, 0.715666651725769, 0.718999981880188, 0.7179999947547913, 0.718999981880188, 0.7193333506584167, 0.721666693687439, 0.7250000238418579, 0.7266666889190674, 0.7260000109672546, 0.7266666889190674, 0.7266666889190674, 0.7296666502952576, 0.7286666631698608, 0.7266666889190674, 0.7283333539962769, 0.7286666631698608, 0.7293333411216736]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1], [3, 4, 3, 8, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 1, 0, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [30, 8, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [8, 0, 2, 8, 7, 0, 5, 9], [0, 4, 3, 1], [24, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3, 2], [42, 57]], "fitness": -0.25857141613960266, "mapping_values": [1, 8, 8, 5, 3, 2, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.pow(tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.6515353424138777, 2.5889872512041445, 2.3137226549074743, 2.3041016117078814, 2.3032478203847186, 2.302938370892967], "accuracy": [0.17791573703289032, 0.21740853786468506, 0.10051512718200684, 0.09430722147226334, 0.1006472036242485, 0.09893012791872025], "val_loss": [1.9693217958722795, 2.0073817798069546, 1.9748530387878418, 1.9737684386117118, 1.9736732755388533, 1.9736428941999162], "val_accuracy": [0.16500000655651093, 0.10066666454076767, 0.09833333641290665, 0.09833333641290665, 0.10366666316986084, 0.09733333438634872]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 4, 9, 8, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [30, 8, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [2, 9, 7, 1, 2, 5, 5, 9], [0, 4, 3, 2], [69, 79, 19], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [22, 57]], "fitness": -0.2557142972946167, "mapping_values": [1, 3, 3, 1, 2, 1, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(grad, tf.math.square(grad))))), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.651906980231863, 2.373135659924871, 2.3249697057940404, 2.3031748114890584, 2.3032811107164393, 2.302947149773032], "accuracy": [0.17738740146160126, 0.23418307304382324, 0.10051512718200684, 0.09628847241401672, 0.09906221181154251, 0.09774138033390045], "val_loss": [1.969022342136928, 2.034787109919957, 1.9744792665754045, 1.9737747056143624, 1.9737511362348283, 1.973684447152274], "val_accuracy": [0.1616666615009308, 0.09799999743700027, 0.09833333641290665, 0.09833333641290665, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 4, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 1, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [57, 8, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [2, 2, 5, 2, 7, 5, 5, 9], [5, 4, 3, 0, 5], [56, 0, 19], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [1, 0, 0, 1, 3, 3], [43, 57]], "fitness": -0.2199999988079071, "mapping_values": [1, 6, 6, 5, 1, 2, 11, 11, 6, 5, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(grad, tf.math.square(tf.math.add(beta, grad))))))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1869371390503316, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.24237221479415894, 0.17382116615772247, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.7976799011230469, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.20133332908153534, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 4, 5, 8, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 1, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [30, 8, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [5, 4, 2, 8, 7, 0, 5, 9], [5, 4, 3, 0], [21, 0, 19], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [8, 1, 0, 4, 7, 8, 4], [1, 0, 0, 1, 3, 3], [43, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 11, 11, 7, 4, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(grad, tf.math.negative(tf.math.add(beta, grad))))), tf.math.square(tf.math.add(beta, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.subtract(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 2, 9, 8, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 1, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [30, 8, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [3, 9, 7, 1, 7, 5, 5, 9], [0, 5, 3, 0], [17, 0, 19], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [7, 3, 0, 4, 7, 8, 4], [3, 3, 0, 1, 3, 3], [42, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 11, 11, 7, 4, 3, 1, 0, 0, 0, 0, 8, 4, 4, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(grad, alpha), tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32), grad)), tf.math.add(tf.math.square(grad), tf.math.add(beta, tf.math.square(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(sigma, sigma), tf.math.negative(tf.math.pow(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 4, 9, 8, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 1, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [30, 8, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [1, 8, 7, 8, 7, 0, 5, 9], [4, 3, 3, 3], [21, 0, 19], [0, 0, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3, 2], [43, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09047681838274002, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 4, 5, 8, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 1, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [67, 27, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 1, 1], [7, 9, 7, 4, 7, 5, 5, 9], [2, 4, 3, 0], [21, 0, 19], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 1, 0, 1, 3, 3], [42, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.add(alpha, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09589222073554993, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 4, 9, 2, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 2, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [57, 8, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 2, 0, 2, 7, 5, 5, 9], [4, 4, 3, 0, 0], [56, 0, 19], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [43, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 7, 4, 3, 10, 10, 5, 5, 2, 1, 1, 0, 1, 0, 8, 4, 4, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad)), grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(grad, tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(grad, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(sigma, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1], [3, 4, 9, 8, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 3, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [67, 27, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 1, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1], [3, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [24, 82, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 7, 0, 4, 7, 8, 4], [3, 3, 0, 1, 3, 3], [42, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 7, 7, 4, 3, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.pow(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08175934851169586, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 4, 9, 5, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 2, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [13, 8, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [2, 2, 0, 2, 7, 5, 5, 9], [1, 4, 3, 0, 0], [71, 0, 19], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [43, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 5, 1, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08175934851169586, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 4, 9, 5, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 2, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [57, 8, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 2, 0, 2, 7, 5, 5, 9], [4, 4, 3, 0, 0], [56, 0, 19], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [3, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [10, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 11, 11, 8, 3, 3, 10, 10, 5, 5, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), grad)), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(grad, tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(grad, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3025452170184955, 2.3034429078750196, 2.302409787077898, 2.302702718643291, 2.3038775568168397, 2.302326932606554], "accuracy": [0.08942015469074249, 0.08770307898521423, 0.08572183549404144, 0.0936468094587326, 0.08215559273958206, 0.09285431355237961], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 2, 9, 8, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 1, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [87, 8, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [5, 4, 3, 0], [21, 65, 19], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [3, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [43, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(grad, alpha)), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3025452170184955, 2.3034429078750196, 2.302409787077898, 2.302702718643291, 2.3038775568168397, 2.302326932606554], "accuracy": [0.08942015469074249, 0.08770307898521423, 0.08572183549404144, 0.0936468094587326, 0.08215559273958206, 0.09285431355237961], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 4, 5, 8, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 1, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [30, 8, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1], [1, 0, 0, 0, 1, 1], [5, 4, 2, 8, 7, 0, 5, 9], [0, 4, 3], [21, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [5, 4, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3, 2], [43, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.pow(sigma, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3025452170184955, 2.3034429078750196, 2.302409787077898, 2.302702718643291, 2.3038775568168397, 2.302326932606554], "accuracy": [0.08942015469074249, 0.08770307898521423, 0.08572183549404144, 0.0936468094587326, 0.08215559273958206, 0.09285431355237961], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]