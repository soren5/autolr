[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 9, 2, 5, 2, 1, 8, 6, 5, 8, 9], [2, 3, 3, 1, 3, 3, 1, 4, 2, 0], [94, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.8251428604125977, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2545040998445005, 1.8503328140747781, 1.383477165635708, 1.3050071448540377, 0.9827321243245194, 0.8656638241431434, 0.8498135355359386, 0.7683523781405716, 0.7217089276996507, 0.7149050399501641, 0.6735774414760719, 0.6719153230736017, 0.6175198583413329, 0.6158234316911271, 0.5952230308034149, 0.5820101011210366, 0.5569504345916659, 0.5630011837779413, 0.5383455428024089, 0.5773623081687073, 0.5221933283826001, 0.5133905194580689, 0.5066318497477017, 0.5015330048418946, 0.4687771447472301, 0.4675342749965158, 0.46962917661150416, 0.4547978098783605, 0.4538747006639781, 0.4573758202592033, 0.4293279303000383, 0.4509372063568633, 0.4104654570620026, 0.4254415177547889, 0.4101489000056855, 0.42450139461459896, 0.40560567172337925, 0.4077554969519294, 0.40046439232559816, 0.38847890378949884, 0.38826649313542383, 0.38375629769450464, 0.354907382555673, 0.3750036370603085, 0.3678177101752856, 0.38274465816809183, 0.3636136404858006], "accuracy": [0.2654867172241211, 0.41764628887176514, 0.5301809310913086, 0.5324263572692871, 0.6399418711662292, 0.6758684515953064, 0.6884163022041321, 0.7059833407402039, 0.724739134311676, 0.7228899598121643, 0.7376832365989685, 0.7400607466697693, 0.7607977986335754, 0.7584202885627747, 0.7728173136711121, 0.7791573405265808, 0.7935543656349182, 0.7876105904579163, 0.7997622489929199, 0.776251494884491, 0.802800178527832, 0.8082155585289001, 0.8041210174560547, 0.8107251524925232, 0.8228767514228821, 0.8236692547798157, 0.8206313848495483, 0.8302733898162842, 0.8276317715644836, 0.8315942287445068, 0.8429533839225769, 0.8310658931732178, 0.8481045961380005, 0.8392550349235535, 0.8474441766738892, 0.8389908671379089, 0.852331280708313, 0.8486329317092896, 0.8529917001724243, 0.8527275323867798, 0.8601241707801819, 0.8516708612442017, 0.8691058158874512, 0.8613129258155823, 0.8607845902442932, 0.8545766472816467, 0.8647470474243164], "val_loss": [1.640094552721296, 1.2520490033285958, 0.8427264179502215, 0.8193258387701852, 0.6807889768055507, 0.7481368950435093, 0.5793789454868862, 0.5520211117608207, 0.5937459468841553, 0.5263349669320243, 0.5832683188574654, 0.5710583925247192, 0.5119465248925346, 0.48498943873814176, 0.4613692079271589, 0.47141475336892263, 0.4494797842843192, 0.5062956639698574, 0.5233169623783657, 0.4139123984745571, 0.4389472007751465, 0.45387816429138184, 0.4190666675567627, 0.4298178127833775, 0.40089623417173115, 0.4060361215046474, 0.3902172701699393, 0.4305396335465567, 0.4159976329122271, 0.3897865244320461, 0.37599724531173706, 0.3926375763756888, 0.38941599641527447, 0.41108921595982145, 0.3717744861330305, 0.350777336529323, 0.399162973676409, 0.38928524936948505, 0.37113586493900846, 0.38708467142922537, 0.36666994435446604, 0.3562942317553929, 0.380093514919281, 0.41177554641451153, 0.3972962328365871, 0.3899709837777274, 0.37172835213797434], "val_accuracy": [0.42100000381469727, 0.5116666555404663, 0.6069999933242798, 0.6833333373069763, 0.7103333473205566, 0.6430000066757202, 0.7350000143051147, 0.7546666860580444, 0.7356666922569275, 0.7646666765213013, 0.75, 0.7706666588783264, 0.749666690826416, 0.7856666445732117, 0.7990000247955322, 0.7933333516120911, 0.796999990940094, 0.7593333125114441, 0.7476666569709778, 0.8196666836738586, 0.7976666688919067, 0.7893333435058594, 0.8190000057220459, 0.8069999814033508, 0.8216666579246521, 0.8196666836738586, 0.8306666612625122, 0.8056666851043701, 0.8090000152587891, 0.8256666660308838, 0.8410000205039978, 0.8253333568572998, 0.831333339214325, 0.8106666803359985, 0.8403333425521851, 0.846666693687439, 0.8203333616256714, 0.82833331823349, 0.8399999737739563, 0.8420000076293945, 0.8483333587646484, 0.8489999771118164, 0.8293333053588867, 0.8003333210945129, 0.8273333311080933, 0.8233333230018616, 0.8386666774749756]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 8, 2, 5, 1, 8, 6, 5, 8, 9], [4, 5, 3, 0, 0, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.8111428618431091, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 8, 6, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(tf.math.add(beta, tf.math.square(grad)), grad))), tf.math.subtract(tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2545300248024756, 1.85121272301803, 1.4120899232434339, 1.1325626975714396, 0.9980583458827896, 0.8091341465880858, 0.8804482753093232, 0.7499145070606802, 0.7220573971662319, 0.6743943105835437, 0.6528348106482026, 0.681732299069309, 0.6095301898683713, 0.5954548775669511, 0.5744019798268227, 0.5661172433032368, 0.5432282084991052, 0.5228033425187265, 0.5444864906796753, 0.5608816462154512, 0.5147189313252809, 0.5002611411356293, 0.5062746057507542, 0.4947026585779957, 0.47293862446172286, 0.45003824815963, 0.47555728672187186, 0.454532913095081, 0.44633869283376604, 0.4492978124003825, 0.4293322593953867, 0.4284291903435074, 0.4022092265011124, 0.4185541347978043, 0.3987010271636455, 0.42337808589248166, 0.4087603129707292, 0.39496906217629996, 0.38808950373226103, 0.3771597267677283], "accuracy": [0.26535463333129883, 0.41368380188941956, 0.5215955376625061, 0.5993924140930176, 0.6342623233795166, 0.702681303024292, 0.6798309087753296, 0.7129837274551392, 0.722229540348053, 0.7411174178123474, 0.7440232634544373, 0.7413815855979919, 0.767930269241333, 0.7725531458854675, 0.7816668748855591, 0.7847048044204712, 0.7965922355651855, 0.8080834746360779, 0.7977809906005859, 0.7864218950271606, 0.8013472557067871, 0.8115176558494568, 0.81112140417099, 0.8096684813499451, 0.8222163319587708, 0.8325188159942627, 0.8219521641731262, 0.8301413059234619, 0.8330471515655518, 0.8318583965301514, 0.8404437899589539, 0.8396512866020203, 0.8471800088882446, 0.8366134166717529, 0.8532558679580688, 0.843481719493866, 0.8481045961380005, 0.8525954484939575, 0.857218325138092, 0.8589354157447815], "val_loss": [1.6402605942317419, 1.3318067618778773, 0.8307939938136509, 0.843785285949707, 0.6399390527180263, 0.7310245547975812, 0.5809474161693028, 0.5618080071040562, 0.5338317155838013, 0.5409858397075108, 0.5672646931239537, 0.5620080743517194, 0.5479990925107684, 0.4922327143805368, 0.4830162695475987, 0.48991268021719797, 0.4314497028078352, 0.4361493076596941, 0.4984281744275774, 0.41965383291244507, 0.431057870388031, 0.48611206667763845, 0.41356027126312256, 0.4418379408972604, 0.40179907424109323, 0.414868380342211, 0.3885778955050877, 0.3965715084757124, 0.4094065172331674, 0.3840474486351013, 0.370543258530753, 0.4182831645011902, 0.39340531826019287, 0.3853645069258554, 0.36945100341524395, 0.3633945413998195, 0.384880576814924, 0.4008928877966745, 0.36735830136707853, 0.43802461453846525], "val_accuracy": [0.4193333387374878, 0.5273333191871643, 0.656000018119812, 0.6353333592414856, 0.7163333296775818, 0.6570000052452087, 0.7456666827201843, 0.7406666874885559, 0.7649999856948853, 0.753333330154419, 0.7413333058357239, 0.7680000066757202, 0.7506666779518127, 0.7703333497047424, 0.7670000195503235, 0.7836666703224182, 0.8043333292007446, 0.8173333406448364, 0.7519999742507935, 0.8169999718666077, 0.8056666851043701, 0.7846666574478149, 0.8223333358764648, 0.8013333082199097, 0.8203333616256714, 0.8143333196640015, 0.8349999785423279, 0.8209999799728394, 0.815666675567627, 0.8273333311080933, 0.8376666903495789, 0.7973333597183228, 0.8270000219345093, 0.8273333311080933, 0.8433333039283752, 0.8420000076293945, 0.8353333473205566, 0.8246666789054871, 0.8386666774749756, 0.8159999847412109]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 5, 2, 1, 8, 6, 5, 8, 9], [4, 3, 3, 1, 0, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.806857168674469, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.square(tf.math.add(beta, tf.math.add(grad, grad))))), alpha)), tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.sqrt(beta), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2544454582268774, 1.853712905273619, 1.3865398316729134, 1.215106326701414, 0.9804203780634906, 0.8841066561701307, 0.8767049857307624, 0.7840194858658851, 0.7284478933394561, 0.6809744505661196, 0.6741531051822295, 0.6835594461295174, 0.6303110886810478, 0.6023314973193546, 0.5967109614217821, 0.586983414893578, 0.5568379233573422, 0.5664398167284803, 0.5275544292812476, 0.5834976436715195, 0.5260159544437127, 0.5213080537223136, 0.5110437863018881], "accuracy": [0.2654867172241211, 0.4139479696750641, 0.524501383304596, 0.5583146214485168, 0.6444327235221863, 0.6707172393798828, 0.6691322326660156, 0.7055870890617371, 0.7271166443824768, 0.7427024245262146, 0.733588695526123, 0.7396644949913025, 0.7567031979560852, 0.7683265209197998, 0.7758552432060242, 0.7718927264213562, 0.7893276810646057, 0.7902522683143616, 0.8055738806724548, 0.7781006693840027, 0.802800178527832, 0.8024039268493652, 0.8033285140991211], "val_loss": [1.6398241519927979, 1.2848028796059745, 1.0449965340750558, 0.8120897156851632, 0.7993858541761126, 0.7432024138314384, 0.6729104859488351, 0.5519267661230904, 0.58445486000606, 0.5628394399370465, 0.5622519254684448, 0.573081510407584, 0.5310062851224627, 0.5091919728687831, 0.46759932381766184, 0.4770455871309553, 0.43606843267168316, 0.44301494530269075, 0.49100145271846224, 0.4207195554460798, 0.44903433322906494, 0.4604052986417498, 0.42430180311203003], "val_accuracy": [0.4203333258628845, 0.5040000081062317, 0.5926666855812073, 0.6579999923706055, 0.6306666731834412, 0.6370000243186951, 0.7149999737739563, 0.7599999904632568, 0.7436666488647461, 0.7419999837875366, 0.7599999904632568, 0.7556666731834412, 0.765666663646698, 0.7739999890327454, 0.8003333210945129, 0.7893333435058594, 0.8033333420753479, 0.8163333535194397, 0.7726666927337646, 0.8133333325386047, 0.7906666398048401, 0.7789999842643738, 0.8159999847412109]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 5, 5, 1, 8, 6, 5, 8, 9], [4, 3, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.7525714039802551, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.6052469408286956, 2.367836957153564, 2.2577455336974204, 2.4832136278627353, 2.0255493355496466, 2.296761138359506, 2.0181382546697577, 1.749091806082347, 1.5469112053302931, 1.2860861122726277, 1.0384353411951872, 0.8967265508367307, 0.8785541916425753, 0.7575041169283208, 0.7605382236727729, 0.7168155959678789, 0.6489878410455998, 0.6439918740833944, 0.618990329758618, 0.5867070346429064, 0.5557253566384709, 0.5527118679916917, 0.529219938535354, 0.5703736946504382, 0.5255225272368226, 0.5147062529622918, 0.4968167327067887, 0.48383644730612396, 0.5035261499206262, 0.5046619181509551, 0.47371370500939447, 0.45008469710040167], "accuracy": [0.17223615944385529, 0.1266675442457199, 0.2094835489988327, 0.21238937973976135, 0.2973187267780304, 0.1492537260055542, 0.33522653579711914, 0.4147404432296753, 0.474970281124115, 0.5460308790206909, 0.6243560910224915, 0.6656980514526367, 0.6717738509178162, 0.7144366502761841, 0.7106062769889832, 0.7195879220962524, 0.7541936039924622, 0.7563069462776184, 0.7618544697761536, 0.7758552432060242, 0.7848368883132935, 0.7837802171707153, 0.7998943328857422, 0.7836481332778931, 0.7987055778503418, 0.8038568496704102, 0.8107251524925232, 0.8127063512802124, 0.8053097128868103, 0.809140145778656, 0.8168009519577026, 0.8272355198860168], "val_loss": [1.9334700448172433, 1.9589495658874512, 1.8667291232517786, 1.7635081154959542, 1.7006532464708601, 1.8778554371425085, 1.1778318541390556, 0.9180877889905658, 0.9745995998382568, 0.8364345346178327, 0.6670311859675816, 0.7837512152535575, 0.6536374092102051, 0.6555490323475429, 0.5663135051727295, 0.4921350138528006, 0.6263313463756016, 0.5057227781840733, 0.4686698913574219, 0.46881202289036344, 0.4607378584997995, 0.4468731028693063, 0.4606023686272757, 0.4384348477636065, 0.4699082885469709, 0.42079629216875347, 0.41521841287612915, 0.4279013616698129, 0.4120861802782331, 0.42537031854901997, 0.46179492133004324, 0.39787862982068745], "val_accuracy": [0.13066667318344116, 0.218666672706604, 0.32100000977516174, 0.304666668176651, 0.36933332681655884, 0.34433332085609436, 0.5586666464805603, 0.6140000224113464, 0.6106666922569275, 0.6449999809265137, 0.7096666693687439, 0.6489999890327454, 0.7173333168029785, 0.706333339214325, 0.7353333234786987, 0.7663333415985107, 0.7203333377838135, 0.7599999904632568, 0.7803333401679993, 0.7836666703224182, 0.793666660785675, 0.800000011920929, 0.7916666865348816, 0.7993333339691162, 0.7873333096504211, 0.809333324432373, 0.828000009059906, 0.8019999861717224, 0.8230000138282776, 0.7973333597183228, 0.7863333225250244, 0.8276666402816772]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 2, 2, 1, 8, 6, 5, 8, 9], [4, 3, 3, 1, 0, 3, 2, 4, 2, 0], [89, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 8, 8, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.add(grad, grad)), tf.math.add(beta, alpha)))), tf.math.add(beta, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.sqrt(grad), tf.math.add(beta, beta)))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07106062769889832, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 5, 8, 1, 8, 6, 5, 8, 9], [4, 3, 3, 1, 3, 2, 0, 4, 2, 0], [94, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [7, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 18, 18, 12, 6, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.sqrt(grad))))), tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(tf.math.square(grad), tf.math.sqrt(tf.math.add(beta, alpha))))), grad)), tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3028153738624715, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09628847241401672, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 5, 2, 1, 8, 6, 5, 8, 9], [4, 3, 3, 1, 0, 2, 1, 4, 2, 0], [94, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(tf.math.add(beta, grad), alpha)))), tf.math.square(tf.math.add(tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.sqrt(beta), tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07106062769889832, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 5, 5, 2, 5, 2, 1, 8, 6, 5, 8, 9], [4, 3, 3, 1, 0, 2, 3, 4, 2, 0], [94, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 2, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, beta))", "other_info": {"loss": [2.302774796538176, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0936468094587326, 0.09087307006120682, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9712321417672294, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03966666758060455, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 5, 5, 2, 5, 2, 1, 8, 6, 5, 8, 9], [5, 3, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 8, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09628847241401672, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 5, 2, 1, 8, 6, 5, 8, 9], [3, 3, 3, 1, 0, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [2, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 1, 1, 0, 0, 0, 0, 6, 3, 3, 2], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.square(tf.math.add(beta, tf.math.add(grad, grad))))), alpha), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(beta, tf.math.sqrt(beta)), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 5, 5, 2, 5, 2, 1, 8, 6, 5, 8, 9], [4, 3, 3, 1, 0, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.square(tf.math.add(grad, tf.math.add(beta, tf.math.square(grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07106062769889832, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 5, 5, 1, 8, 6, 5, 8, 9], [0, 3, 3, 3, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [7, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 9, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.3032059880169613, 2.302904404322894, 2.302887371612688, 2.3030646741665777, 2.303006125604944, 2.3030285353453372, 2.303060260132052, 2.3030498455449684], "accuracy": [0.09074098616838455, 0.09417514503002167, 0.0956280529499054, 0.09549596905708313, 0.09298639744520187, 0.09430722147226334, 0.0948355570435524, 0.0944393053650856], "val_loss": [1.9736520222255163, 1.9736245700291224, 1.9736456871032715, 1.9736944607325964, 1.9736310413905553, 1.9736402375357491, 1.9736880574907576, 1.9736574717930384], "val_accuracy": [0.09966666996479034, 0.1003333330154419, 0.10199999809265137, 0.09833333641290665, 0.10199999809265137, 0.09799999743700027, 0.10000000149011612, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 5, 5, 1, 8, 6, 5, 8, 9], [4, 2, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 4, 5, 0, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, beta))), grad), tf.math.add(beta, tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(alpha), tf.math.pow(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06960771232843399, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 3, 5, 2, 1, 8, 6, 5, 8, 9], [3, 3, 3, 3, 2, 2, 3, 4, 2, 0], [71, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [8, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 18, 18, 10, 8, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.square(tf.math.add(beta, tf.math.add(grad, grad))))), grad)), tf.math.add(beta, tf.math.subtract(tf.math.sqrt(tf.math.divide_no_nan(beta, tf.math.add(beta, beta))), grad))), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09628847241401672, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 3, 5, 8, 1, 5, 6, 5, 8, 9], [4, 3, 3, 1, 3, 2, 0, 4, 2, 0], [94, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 14, 14, 8, 6, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.square(tf.math.sqrt(grad))))), grad)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.square(grad))))), beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3028153738624715, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09628847241401672, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 5, 5, 1, 8, 6, 5, 8, 9], [2, 3, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [7, 0], [88, 19], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 0, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 4, 3, 2], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.math.negative(alpha)), tf.math.pow(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [153931420.61356863, 2911107514.6152425, 13517796993.775194, 37340500848.22613, 79047771337.93263, 147294103868.22137], "accuracy": [0.10011887550354004, 0.09866596013307571, 0.09840179979801178, 0.10302469879388809, 0.10738343745470047, 0.1002509593963623], "val_loss": [584584941.7142857, 4673866898.285714, 15771130733.714285, 37379777682.28571, 73002900333.71428, 126143884726.85715], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 5, 5, 1, 8, 6, 5, 8, 9], [3, 3, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [7, 0], [88, 19], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 8, 4, 4, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(alpha, tf.math.negative(tf.math.pow(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), beta)", "other_info": {"loss": [5.264536468753756, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.15889579057693481, 0.10751552134752274, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [3.8142852783203125, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 9, 5, 8, 1, 8, 6, 5, 8, 9], [4, 3, 3, 1, 0, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 1, 1, 0, 0, 0, 0, 6, 3, 3, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), grad)), tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3026529760125163, 2.3024441353822223, 2.302453001366473, 2.302408939969223, 2.302456176795854, 2.3024884740579807, 2.302592333801324], "accuracy": [0.10289261490106583, 0.10236428678035736, 0.10540219396352768, 0.10513802617788315, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736484118870325, 1.9736442565917969, 1.9736644199916296, 1.9736847196306502, 1.9737279755728585, 1.9738152367728097, 1.9739696638924735], "val_accuracy": [0.09933333098888397, 0.10199999809265137, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 6, 2, 5, 2, 9, 8, 6, 5, 8, 9], [4, 3, 3, 1, 0, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [0, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 2, 1, 0, 0, 0, 0, 4, 2, 2, 2], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.square(tf.math.add(beta, tf.math.add(grad, grad))))), tf.math.add(beta, alpha)), tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [53438746.694865696, 1010178161.7815348, 4690164054.325189, 12954998331.443666, 27424130082.760006, 51099798675.01994], "accuracy": [0.10011887550354004, 0.09866596013307571, 0.09840179979801178, 0.10302469879388809, 0.1072513535618782, 0.1002509593963623], "val_loss": [202891012.57142857, 1621735021.7142856, 5471795638.857142, 12968371053.714285, 25326704347.42857, 43761776347.42857], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 5, 5, 2, 5, 2, 1, 8, 6, 5, 8, 9], [4, 3, 3, 1, 0, 2, 3, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [1, 57]], "fitness": -0.034285712987184525, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 4, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.negative(tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.3030570474487835, 2.303055954678593, 2.3052650413115137, 2.303891550863203, 2.3035934786707766, 2.3056545309528556], "accuracy": [0.09311848133802414, 0.09272222965955734, 0.08215559273958206, 0.08519349992275238, 0.0886276587843895, 0.08585391938686371], "val_loss": [1.9718689918518066, 1.9725125857761927, 1.9731486184256417, 1.973794596535819, 1.9744377136230469, 1.9750813756670271], "val_accuracy": [0.035999998450279236, 0.03266666829586029, 0.028999999165534973, 0.026333333924412727, 0.02500000037252903, 0.023666666820645332]}}]