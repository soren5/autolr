[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 6, 3, 6, 9, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 0, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [47, 70, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8371428847312927, "mapping_values": [1, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1301212310791016, 2.094242811203003, 1.6739332675933838, 1.0827970504760742, 0.8842787146568298, 0.7724527716636658, 0.737226128578186, 0.674161434173584, 0.6785432696342468, 0.6249369978904724, 0.6350334286689758, 0.6412909626960754, 0.5817954540252686, 0.5530374050140381, 0.5500568747520447, 0.5413866639137268, 0.5366743206977844, 0.538145124912262, 0.5026310682296753, 0.5051965117454529, 0.5032361149787903, 0.48886480927467346, 0.46161746978759766, 0.4726692736148834, 0.48317593336105347, 0.4678598642349243, 0.4582414925098419, 0.43381431698799133], "accuracy": [0.28661999106407166, 0.3185840845108032, 0.41989168524742126, 0.6110157370567322, 0.6637167930603027, 0.7086250185966492, 0.7248712182044983, 0.744419515132904, 0.7429665923118591, 0.7666094303131104, 0.7577598690986633, 0.7592127919197083, 0.7750627398490906, 0.7965922355651855, 0.7946110367774963, 0.7998943328857422, 0.7976489067077637, 0.7980451583862305, 0.817461371421814, 0.8096684813499451, 0.8084797263145447, 0.8156121969223022, 0.832650899887085, 0.8265751004219055, 0.8193105459213257, 0.8244617581367493, 0.8330471515655518, 0.8442742228507996], "val_loss": [2.008247137069702, 1.6287115812301636, 1.179132342338562, 0.9391050338745117, 0.6840431094169617, 0.6563544273376465, 0.6108176112174988, 0.6201719641685486, 0.559231162071228, 0.6739844083786011, 0.5269699096679688, 0.5380082130432129, 0.5226688385009766, 0.48652589321136475, 0.47741052508354187, 0.49204713106155396, 0.5041238069534302, 0.47238048911094666, 0.45481932163238525, 0.4488675892353058, 0.44482654333114624, 0.4426439106464386, 0.41710391640663147, 0.4608848989009857, 0.44918256998062134, 0.41716161370277405, 0.4375063478946686, 0.3997757136821747], "val_accuracy": [0.4736666679382324, 0.4659999907016754, 0.5746666789054871, 0.5806666612625122, 0.7303333282470703, 0.7333333492279053, 0.7570000290870667, 0.7516666650772095, 0.7893333435058594, 0.7363333106040955, 0.7883333563804626, 0.7833333611488342, 0.7916666865348816, 0.8013333082199097, 0.812333345413208, 0.8146666884422302, 0.809333324432373, 0.8146666884422302, 0.8330000042915344, 0.8296666741371155, 0.8246666789054871, 0.8356666564941406, 0.8503333330154419, 0.8356666564941406, 0.8336666822433472, 0.8416666388511658, 0.8379999995231628, 0.8503333330154419]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [2, 0, 6, 6, 9, 9, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 0, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [86, 70, 65, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [2, 6, 1, 9, 7], [0, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [0, 2, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8342857360839844, "mapping_values": [1, 8, 8, 6, 2, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))))), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.1296181678771973, 2.093834161758423, 1.659409999847412, 1.111058235168457, 0.8949136734008789, 0.7910963892936707, 0.7153487205505371, 0.6866442561149597, 0.680139422416687, 0.6140894293785095, 0.6389861702919006, 0.6260014176368713, 0.5896398425102234, 0.5711063742637634, 0.548047661781311, 0.5455796718597412, 0.5328922867774963, 0.5413863062858582, 0.5073422193527222, 0.5129598379135132, 0.49589258432388306, 0.4901285171508789, 0.4623100757598877, 0.4680296778678894, 0.48310208320617676, 0.45589253306388855, 0.4564039707183838, 0.43694838881492615], "accuracy": [0.28661999106407166, 0.3183199167251587, 0.42966583371162415, 0.6087703108787537, 0.6666226387023926, 0.7012283802032471, 0.7301545143127441, 0.7363624572753906, 0.7360982894897461, 0.7716285586357117, 0.7577598690986633, 0.761590301990509, 0.77677983045578, 0.787082314491272, 0.7927618622779846, 0.793422281742096, 0.7991018295288086, 0.7972526550292969, 0.8117818236351013, 0.8068947196006775, 0.8129705190658569, 0.817989706993103, 0.8317263126373291, 0.824329674243927, 0.8201030492782593, 0.8308017253875732, 0.8362171649932861, 0.8407079577445984], "val_loss": [2.007114887237549, 1.6367099285125732, 0.9175255298614502, 0.8971458077430725, 0.6978728771209717, 0.6822425723075867, 0.6371161937713623, 0.6178956031799316, 0.5795139670372009, 0.5457488894462585, 0.5188533663749695, 0.5370235443115234, 0.5740598440170288, 0.48710963129997253, 0.47368791699409485, 0.4868297576904297, 0.46978315711021423, 0.48630017042160034, 0.45762088894844055, 0.438681960105896, 0.4426927864551544, 0.4543309807777405, 0.4176512062549591, 0.4561500549316406, 0.42231836915016174, 0.419084757566452, 0.4337608218193054, 0.3926452100276947], "val_accuracy": [0.4763333201408386, 0.46666666865348816, 0.6633333563804626, 0.6576666831970215, 0.7246666550636292, 0.7276666760444641, 0.7403333187103271, 0.7566666603088379, 0.7799999713897705, 0.7833333611488342, 0.7883333563804626, 0.7889999747276306, 0.7746666669845581, 0.8023333549499512, 0.8080000281333923, 0.8223333358764648, 0.8130000233650208, 0.8016666769981384, 0.8259999752044678, 0.8373333215713501, 0.8246666789054871, 0.8259999752044678, 0.8516666889190674, 0.8303333520889282, 0.8453333377838135, 0.8413333296775818, 0.8366666436195374, 0.8503333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [8, 6, 3, 4, 9, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 0, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [38, 70, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8322857022285461, "mapping_values": [1, 8, 8, 5, 3, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1297316551208496, 2.095449447631836, 1.7040610313415527, 1.1152063608169556, 0.8822280764579773, 0.794409990310669, 0.7224746942520142, 0.6817018985748291, 0.6755619645118713, 0.627484917640686, 0.6207792162895203, 0.6391509771347046, 0.577722430229187, 0.5514062643051147, 0.5456938743591309, 0.5385745167732239, 0.526013970375061, 0.5330989956855774, 0.5106673836708069, 0.5083562731742859, 0.4901091158390045, 0.47768861055374146, 0.4661431610584259, 0.45908331871032715, 0.4662715792655945, 0.46215566992759705, 0.4550860524177551, 0.4358164668083191, 0.445012629032135, 0.4352535009384155, 0.42755448818206787, 0.39567792415618896, 0.43072977662086487, 0.393652081489563, 0.4009677767753601], "accuracy": [0.2868841588497162, 0.31699907779693604, 0.4171179533004761, 0.5864483118057251, 0.6734909415245056, 0.7024171352386475, 0.7220974564552307, 0.7401928305625916, 0.746268630027771, 0.7647602558135986, 0.7623828053474426, 0.7617223858833313, 0.7812706232070923, 0.7975168228149414, 0.7972526550292969, 0.7964601516723633, 0.7992339134216309, 0.7993659973144531, 0.8100647330284119, 0.8094043135643005, 0.81548011302948, 0.8238013386726379, 0.828820526599884, 0.8298771381378174, 0.8296129703521729, 0.8255184292793274, 0.8302733898162842, 0.8403117060661316, 0.8370096683502197, 0.8407079577445984, 0.8470479249954224, 0.8552370667457581, 0.8417646288871765, 0.8544445633888245, 0.8545766472816467], "val_loss": [2.0110385417938232, 1.6350387334823608, 1.2681920528411865, 0.8529936671257019, 0.6788583993911743, 0.6155890226364136, 0.6289902329444885, 0.5937140583992004, 0.5543203353881836, 0.6300191283226013, 0.5216357707977295, 0.5312793254852295, 0.5092171430587769, 0.5001594424247742, 0.4703526496887207, 0.4767727851867676, 0.47571271657943726, 0.5156729817390442, 0.4627275764942169, 0.4336087107658386, 0.4307686388492584, 0.48728489875793457, 0.4183390438556671, 0.4418317377567291, 0.497403085231781, 0.43084919452667236, 0.45229649543762207, 0.3871190547943115, 0.4121321141719818, 0.39475324749946594, 0.3901882767677307, 0.4033326804637909, 0.38394635915756226, 0.40549707412719727, 0.4095739722251892], "val_accuracy": [0.47466665506362915, 0.4620000123977661, 0.5176666378974915, 0.652999997138977, 0.7223333120346069, 0.7570000290870667, 0.7553333044052124, 0.7609999775886536, 0.7963333129882812, 0.7419999837875366, 0.8043333292007446, 0.7863333225250244, 0.8026666641235352, 0.8009999990463257, 0.812333345413208, 0.8259999752044678, 0.809333324432373, 0.7929999828338623, 0.8196666836738586, 0.8363333344459534, 0.8343333601951599, 0.7950000166893005, 0.8513333201408386, 0.8383333086967468, 0.7926666736602783, 0.8366666436195374, 0.8303333520889282, 0.8543333411216736, 0.8356666564941406, 0.8579999804496765, 0.8503333330154419, 0.8463333249092102, 0.8533333539962769, 0.8546666502952576, 0.8443333506584167]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 6, 3, 6, 9, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 0, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [47, 70, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8311428427696228, "mapping_values": [1, 8, 8, 5, 3, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.129603385925293, 2.09104585647583, 1.6656684875488281, 1.0820268392562866, 0.8611697554588318, 0.8126600980758667, 0.7468060851097107, 0.6765438914299011, 0.6801181435585022, 0.6154161691665649, 0.6352459192276001, 0.6373488306999207, 0.5839130878448486, 0.5654982328414917, 0.5582778453826904, 0.5478458404541016, 0.5325685143470764, 0.5307007431983948, 0.5109182000160217, 0.515919029712677, 0.49258196353912354, 0.4976131319999695, 0.46104946732521057, 0.48319876194000244, 0.4781414568424225, 0.46819934248924255, 0.4509996771812439, 0.4396788775920868, 0.4507392644882202, 0.4461340308189392, 0.42281630635261536, 0.4065570831298828, 0.4322473108768463, 0.3976980149745941, 0.4145822525024414], "accuracy": [0.2868841588497162, 0.3183199167251587, 0.4267600178718567, 0.6017699241638184, 0.6756042838096619, 0.698190450668335, 0.7211728692054749, 0.7417778372764587, 0.7477215528488159, 0.7711002230644226, 0.7544577717781067, 0.7611940503120422, 0.7794214487075806, 0.7910447716712952, 0.7921014428138733, 0.7998943328857422, 0.7971205711364746, 0.8009510040283203, 0.8086118102073669, 0.8035926818847656, 0.8140271902084351, 0.8162726163864136, 0.8322546482086182, 0.8214238286018372, 0.8190463781356812, 0.8216879963874817, 0.8359529972076416, 0.8387266993522644, 0.8345000743865967, 0.8356888294219971, 0.8494254350662231, 0.8511425256729126, 0.8445383906364441, 0.8545766472816467, 0.8486329317092896], "val_loss": [2.0075435638427734, 1.6216950416564941, 0.9855652451515198, 0.9495843648910522, 0.6657640337944031, 0.6463724374771118, 0.6010848879814148, 0.6121132969856262, 0.570829451084137, 0.5528707504272461, 0.5183371305465698, 0.5478425621986389, 0.5599076151847839, 0.5209864974021912, 0.48560938239097595, 0.47327741980552673, 0.4894648790359497, 0.5102176070213318, 0.4630957543849945, 0.4490049183368683, 0.44083699584007263, 0.44760432839393616, 0.4191014766693115, 0.4570322334766388, 0.4533819258213043, 0.41885441541671753, 0.4264421761035919, 0.40172508358955383, 0.4093393087387085, 0.39781510829925537, 0.3981778919696808, 0.4098726511001587, 0.3921678960323334, 0.42955806851387024, 0.4019315540790558], "val_accuracy": [0.47466665506362915, 0.4620000123977661, 0.6336666941642761, 0.6326666474342346, 0.7286666631698608, 0.7400000095367432, 0.7593333125114441, 0.7553333044052124, 0.7940000295639038, 0.7710000276565552, 0.7950000166893005, 0.7833333611488342, 0.7829999923706055, 0.79666668176651, 0.8106666803359985, 0.8286666870117188, 0.8063333630561829, 0.7929999828338623, 0.8276666402816772, 0.8303333520889282, 0.824999988079071, 0.8289999961853027, 0.8450000286102295, 0.8299999833106995, 0.8233333230018616, 0.8403333425521851, 0.8413333296775818, 0.8479999899864197, 0.8393333554267883, 0.859666645526886, 0.8450000286102295, 0.8443333506584167, 0.8516666889190674, 0.8356666564941406, 0.8476666808128357]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 6, 3, 3, 8, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 0, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [47, 91, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1], [9, 6, 1, 9, 7], [0, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8251428604125977, "mapping_values": [1, 11, 11, 6, 5, 3, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), grad))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.129608392715454, 2.0919036865234375, 1.6618001461029053, 1.0552597045898438, 0.8690775036811829, 0.8066446781158447, 0.7307133078575134, 0.6787612438201904, 0.6684058904647827, 0.6155059933662415, 0.6207634210586548, 0.6220292448997498, 0.596176266670227, 0.5653151869773865, 0.557165801525116, 0.5490725636482239, 0.5321608185768127, 0.5336422920227051, 0.5180272459983826, 0.5216182470321655, 0.5018734931945801, 0.48702916502952576, 0.46673205494880676, 0.4722740650177002, 0.4735274612903595, 0.4732903242111206, 0.4601389169692993, 0.43728432059288025], "accuracy": [0.2868841588497162, 0.3206973969936371, 0.43164706230163574, 0.6123365759849548, 0.6758684515953064, 0.7004358768463135, 0.7226257920265198, 0.7436270117759705, 0.7491744756698608, 0.7716285586357117, 0.7668735980987549, 0.7677981853485107, 0.7721568942070007, 0.7885351777076721, 0.7940827012062073, 0.7910447716712952, 0.8006868362426758, 0.8034605979919434, 0.809140145778656, 0.8026680946350098, 0.81548011302948, 0.8202351331710815, 0.8290846943855286, 0.8261788487434387, 0.8226125836372375, 0.821820080280304, 0.8286884427070618, 0.8422929644584656], "val_loss": [2.0075979232788086, 1.633719563484192, 0.9404221773147583, 0.9248363971710205, 0.7423087358474731, 0.6291791796684265, 0.6061220765113831, 0.6064744591712952, 0.5656533241271973, 0.5318211317062378, 0.581514835357666, 0.5602220892906189, 0.5470383167266846, 0.5183210372924805, 0.47304728627204895, 0.48065125942230225, 0.47368982434272766, 0.5489786267280579, 0.4761791229248047, 0.45308393239974976, 0.43887799978256226, 0.4576913118362427, 0.4188002943992615, 0.4672791659832001, 0.43156567215919495, 0.42292630672454834, 0.44260868430137634, 0.401670902967453], "val_accuracy": [0.4749999940395355, 0.4673333466053009, 0.6493333578109741, 0.5830000042915344, 0.7336666584014893, 0.7369999885559082, 0.7643333077430725, 0.7609999775886536, 0.7879999876022339, 0.7929999828338623, 0.7670000195503235, 0.7693333625793457, 0.7886666655540466, 0.7986666560173035, 0.8140000104904175, 0.8266666531562805, 0.8130000233650208, 0.7773333191871643, 0.812333345413208, 0.8270000219345093, 0.8246666789054871, 0.8230000138282776, 0.8523333072662354, 0.8326666951179504, 0.8413333296775818, 0.8386666774749756, 0.82833331823349, 0.8476666808128357]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 6, 8, 4, 9, 9, 6, 0, 3, 3, 2, 2, 3, 2, 5, 4, 2, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 0, 6, 0, 7, 0], [2, 0, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [47, 70, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [7, 6, 1, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8197143077850342, "mapping_values": [1, 8, 8, 6, 2, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.pow(grad, tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1300010681152344, 2.098825454711914, 1.7195549011230469, 1.1173360347747803, 0.8977819085121155, 0.792391300201416, 0.7325292825698853, 0.6817752718925476, 0.6748517751693726, 0.6291054487228394, 0.647135317325592, 0.6401516199111938, 0.5781790614128113, 0.5582610964775085, 0.5518973469734192, 0.5458046793937683, 0.528437614440918, 0.5394735932350159, 0.5027981996536255, 0.5222679376602173, 0.4899909198284149, 0.49799036979675293, 0.46338212490081787, 0.4715578258037567, 0.4804183840751648, 0.4647344946861267, 0.45685499906539917, 0.4377692639827728], "accuracy": [0.28661999106407166, 0.31805574893951416, 0.41104212403297424, 0.5840708017349243, 0.6645092964172363, 0.7028133869171143, 0.7259278893470764, 0.739928662776947, 0.7454761862754822, 0.7660810947418213, 0.7535332441329956, 0.7572315335273743, 0.7824593782424927, 0.7910447716712952, 0.7946110367774963, 0.7961959838867188, 0.8038568496704102, 0.7984414100646973, 0.8153480291366577, 0.8016114234924316, 0.8161405324935913, 0.8132346868515015, 0.8280280232429504, 0.8272355198860168, 0.822348415851593, 0.8247259259223938, 0.8314621448516846, 0.8404437899589539], "val_loss": [2.0073208808898926, 1.6576831340789795, 1.14456045627594, 0.881350576877594, 0.6827086806297302, 0.6723820567131042, 0.6146273016929626, 0.6044835448265076, 0.5629911422729492, 0.7029703855514526, 0.5302273035049438, 0.52541184425354, 0.5248739123344421, 0.505121111869812, 0.4728761911392212, 0.4863602817058563, 0.5122607946395874, 0.4918936789035797, 0.4568159580230713, 0.44674819707870483, 0.439573734998703, 0.44136467576026917, 0.4150712788105011, 0.46689075231552124, 0.454359769821167, 0.4209044277667999, 0.43502265214920044, 0.39789852499961853], "val_accuracy": [0.4749999940395355, 0.46666666865348816, 0.5730000138282776, 0.6570000052452087, 0.7386666536331177, 0.718999981880188, 0.7543333172798157, 0.7620000243186951, 0.7919999957084656, 0.7350000143051147, 0.7846666574478149, 0.7953333258628845, 0.7940000295639038, 0.796999990940094, 0.8069999814033508, 0.8293333053588867, 0.8090000152587891, 0.8019999861717224, 0.8293333053588867, 0.8349999785423279, 0.8326666951179504, 0.8370000123977661, 0.8519999980926514, 0.8270000219345093, 0.8273333311080933, 0.8433333039283752, 0.8370000123977661, 0.8516666889190674]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 6, 3, 6, 9, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 0, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [47, 70, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8182857036590576, "mapping_values": [1, 8, 8, 5, 3, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1303296089172363, 2.10501766204834, 1.593666434288025, 1.218595027923584, 0.8398798108100891, 0.8120037913322449, 0.7210375070571899, 0.6911600232124329, 0.6717005372047424, 0.6262115836143494, 0.611568033695221, 0.5888116955757141, 0.600400984287262, 0.5591395497322083, 0.5593187212944031, 0.5387413501739502, 0.5439698696136475, 0.5259265303611755, 0.5142033696174622, 0.5191245675086975, 0.4985496401786804, 0.4947877526283264, 0.4677687883377075, 0.46385058760643005, 0.46650370955467224, 0.4467054605484009, 0.4507196247577667, 0.4322066903114319, 0.44254371523857117, 0.4400876760482788, 0.4303545653820038, 0.416565477848053, 0.4222241938114166], "accuracy": [0.2864879071712494, 0.313300758600235, 0.45145952701568604, 0.5521067380905151, 0.689869225025177, 0.6939638257026672, 0.7277770638465881, 0.7371549606323242, 0.7449478507041931, 0.7638356685638428, 0.7664773464202881, 0.7853652238845825, 0.7700436115264893, 0.7917051911354065, 0.7861577272415161, 0.8035926818847656, 0.7926297783851624, 0.8042530417442322, 0.8115176558494568, 0.8058380484580994, 0.8161405324935913, 0.8183859586715698, 0.830669641494751, 0.826310932636261, 0.8274996876716614, 0.8313300609588623, 0.8372738361358643, 0.8400475382804871, 0.8352925777435303, 0.8384625315666199, 0.8453308939933777, 0.8492933511734009, 0.8438779711723328], "val_loss": [2.013298749923706, 1.6792693138122559, 1.4668598175048828, 0.8588978052139282, 0.7163910269737244, 0.6142831444740295, 0.5987520217895508, 0.5979800224304199, 0.5603846311569214, 0.5358641147613525, 0.5257027745246887, 0.5400203466415405, 0.5450131297111511, 0.4922381043434143, 0.503136157989502, 0.4877052307128906, 0.47908341884613037, 0.5172563195228577, 0.4740263819694519, 0.44054675102233887, 0.4533534646034241, 0.4456595480442047, 0.4188452661037445, 0.4414569139480591, 0.40936973690986633, 0.4186258018016815, 0.4272811710834503, 0.3946046531200409, 0.4299604892730713, 0.39739543199539185, 0.4025672972202301, 0.401212602853775, 0.39473408460617065], "val_accuracy": [0.47066667675971985, 0.45533332228660583, 0.44066667556762695, 0.643666684627533, 0.7243333458900452, 0.7513333559036255, 0.7593333125114441, 0.7633333206176758, 0.7846666574478149, 0.7870000004768372, 0.7896666526794434, 0.777999997138977, 0.7856666445732117, 0.8006666898727417, 0.8043333292007446, 0.8186666369438171, 0.8096666932106018, 0.7929999828338623, 0.8090000152587891, 0.8316666483879089, 0.8183333277702332, 0.8360000252723694, 0.8453333377838135, 0.8299999833106995, 0.8513333201408386, 0.843666672706604, 0.8416666388511658, 0.8560000061988831, 0.8360000252723694, 0.8543333411216736, 0.843666672706604, 0.8443333506584167, 0.847000002861023]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 6, 3, 2, 9, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [1, 2, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [47, 70, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8182857036590576, "mapping_values": [1, 8, 8, 5, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), grad)), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.129939556121826, 2.098724365234375, 1.6251262426376343, 1.1331878900527954, 0.8948483467102051, 0.7902175784111023, 0.7075295448303223, 0.6790024638175964, 0.6635967493057251, 0.6125363111495972, 0.5919909477233887, 0.6445424556732178, 0.5743683576583862, 0.5479401350021362, 0.5424089431762695, 0.5307158827781677, 0.5268552899360657, 0.5114144682884216, 0.5169088244438171, 0.5123006701469421, 0.49810591340065], "accuracy": [0.2867520749568939, 0.3160744905471802, 0.4377228915691376, 0.5857878923416138, 0.6679434776306152, 0.7119271159172058, 0.7341170310974121, 0.7408532500267029, 0.7508915662765503, 0.7693831920623779, 0.7781006693840027, 0.7544577717781067, 0.7878747582435608, 0.7969884872436523, 0.8004226684570312, 0.8034605979919434, 0.8004226684570312, 0.8119139075279236, 0.8092722296714783, 0.8099326491355896, 0.8169330358505249], "val_loss": [2.012150287628174, 1.6451655626296997, 1.2086583375930786, 0.8030961751937866, 0.7280083298683167, 0.6841813325881958, 0.6139633655548096, 0.6003462076187134, 0.5550920367240906, 0.5240199565887451, 0.5132995843887329, 0.5388138294219971, 0.4931242763996124, 0.4809964597225189, 0.46880191564559937, 0.4667668342590332, 0.46745577454566956, 0.5313765406608582, 0.48862898349761963, 0.4460887312889099, 0.4417075514793396], "val_accuracy": [0.47200000286102295, 0.4596666693687439, 0.5613333582878113, 0.6826666593551636, 0.7229999899864197, 0.7223333120346069, 0.7616666555404663, 0.7580000162124634, 0.7926666736602783, 0.793666660785675, 0.7913333177566528, 0.7856666445732117, 0.8086666464805603, 0.8029999732971191, 0.8149999976158142, 0.8330000042915344, 0.8119999766349792, 0.7903333306312561, 0.7986666560173035, 0.8309999704360962, 0.8230000138282776]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 6, 3, 2, 9, 9, 6, 0, 3, 3, 2, 2, 3, 2, 5, 4, 2, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 0, 6, 0, 7, 0], [2, 2, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [47, 70, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [2, 0, 6], [18, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.808571457862854, "mapping_values": [1, 8, 8, 5, 3, 1, 1, 1, 0, 1, 0, 5, 4, 2, 2, 1, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(grad, tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), grad)), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, beta), tf.math.add(sigma, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.129585027694702, 2.0911865234375, 1.6529457569122314, 1.0664300918579102, 0.8546428084373474, 0.7785254120826721, 0.7492042183876038, 0.6806670427322388, 0.6699485182762146, 0.6138750314712524, 0.6447629332542419, 0.5938012599945068, 0.6071804761886597, 0.5537253618240356, 0.5497894287109375, 0.5440403819084167, 0.5282516479492188, 0.5355203747749329, 0.5040127038955688, 0.5062785744667053, 0.5027235746383667], "accuracy": [0.2867520749568939, 0.3203011453151703, 0.42583543062210083, 0.6015057563781738, 0.6730946898460388, 0.7086250185966492, 0.7239466309547424, 0.7417778372764587, 0.7469290494918823, 0.7730814814567566, 0.7536653280258179, 0.7808743715286255, 0.7681944370269775, 0.7955356240272522, 0.7944789528846741, 0.7940827012062073, 0.8010830879211426, 0.8012151718139648, 0.8125742673873901, 0.8095363974571228, 0.8117818236351013], "val_loss": [2.0074551105499268, 1.6246007680892944, 1.0293790102005005, 0.8571378588676453, 0.6905412077903748, 0.6362935900688171, 0.6219017505645752, 0.6106622815132141, 0.5670573711395264, 0.5664272308349609, 0.5482585430145264, 0.5649142861366272, 0.5264453887939453, 0.49600788950920105, 0.47191089391708374, 0.4696100950241089, 0.4871690273284912, 0.4908945858478546, 0.46056604385375977, 0.4552268981933594, 0.43577051162719727], "val_accuracy": [0.4753333330154419, 0.46533334255218506, 0.609000027179718, 0.6326666474342346, 0.734666645526886, 0.7419999837875366, 0.7546666860580444, 0.7556666731834412, 0.7879999876022339, 0.7693333625793457, 0.7846666574478149, 0.7636666893959045, 0.7943333387374878, 0.8009999990463257, 0.809333324432373, 0.8289999961853027, 0.8109999895095825, 0.7979999780654907, 0.8246666789054871, 0.8270000219345093, 0.82833331823349]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1], [5, 6, 3, 1, 9, 9, 6, 0, 3, 3, 2, 2, 3, 2, 5, 4, 2, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 0, 6, 0, 7, 0], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [47, 70, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [0, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.7902857065200806, "mapping_values": [1, 8, 8, 6, 2, 3, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.subtract(grad, tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.421549081802368, 1.8000435829162598, 1.854850172996521, 1.4236687421798706, 1.1041115522384644, 0.9996999502182007, 0.9171744585037231, 0.8495151996612549, 0.8105811476707458, 0.7524413466453552, 0.7415758371353149, 0.6994178891181946, 0.6661278605461121, 0.6772352457046509, 0.615547776222229, 0.6200928688049316, 0.6215206980705261, 0.6011303067207336, 0.5661587119102478, 0.577086329460144], "accuracy": [0.2588825821876526, 0.3755118250846863, 0.40430590510368347, 0.5325584411621094, 0.600581169128418, 0.618280291557312, 0.64667809009552, 0.6757363677024841, 0.6832650899887085, 0.7129837274551392, 0.7137762308120728, 0.733588695526123, 0.7430986762046814, 0.7363624572753906, 0.7604015469551086, 0.7658169269561768, 0.759609043598175, 0.7720248103141785, 0.7898560166358948, 0.7791573405265808], "val_loss": [2.047520399093628, 1.311822772026062, 1.6627334356307983, 0.9150843024253845, 0.9825807213783264, 0.8489733338356018, 0.718406081199646, 0.7537472248077393, 0.6721433401107788, 0.6906201243400574, 0.6469572186470032, 0.5962083339691162, 0.5792712569236755, 0.5890126824378967, 0.5332402586936951, 0.5420423746109009, 0.6061661839485168, 0.5342048406600952, 0.5212189555168152, 0.5500546097755432], "val_accuracy": [0.41733333468437195, 0.5416666865348816, 0.5040000081062317, 0.6753333210945129, 0.5920000076293945, 0.6539999842643738, 0.718999981880188, 0.6923333406448364, 0.7379999756813049, 0.7233333587646484, 0.7333333492279053, 0.7620000243186951, 0.7743333578109741, 0.7590000033378601, 0.7889999747276306, 0.7870000004768372, 0.7556666731834412, 0.7826666831970215, 0.7846666574478149, 0.7883333563804626]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 0, 5, 3, 9, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 2, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [47, 70, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1], [3, 6, 8, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [54, 57, 40, 62]], "fitness": -0.33714285492897034, "mapping_values": [1, 6, 6, 5, 1, 2, 1, 1, 0, 1, 0, 6, 3, 3, 0, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.sqrt(sigma)))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.423856258392334, 2.2989234924316406, 2.2906997203826904, 2.287425994873047, 2.075697660446167, 2.2939298152923584, 2.2103395462036133, 2.2690210342407227, 2.3073275089263916], "accuracy": [0.1954827606678009, 0.10738343745470047, 0.15334829688072205, 0.1398758441209793, 0.27961960434913635, 0.13419628143310547, 0.15955619513988495, 0.15612204372882843, 0.10289261490106583], "val_loss": [2.304131507873535, 2.2546682357788086, 2.3035199642181396, 1.9560452699661255, 2.1256320476531982, 2.1756930351257324, 2.303908586502075, 2.3093137741088867, 2.2970707416534424], "val_accuracy": [0.09933333098888397, 0.2150000035762787, 0.09866666793823242, 0.30799999833106995, 0.20466665923595428, 0.22766666114330292, 0.10300000011920929, 0.09933333098888397, 0.14100000262260437]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 6, 3, 3, 9, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 0, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [47, 70, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 1, 1, 1, 1], [0, 0, 0, 1, 1, 1], [7, 1, 8, 9, 7], [4, 0, 6], [24, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.30657142400741577, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 6, 3, 3, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.sqrt(sigma)), sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.023808479309082, 2.3032968044281006, 2.4118175506591797, 2.304365873336792, 2.3032891750335693, 2.3028650283813477, 2.3031272888183594], "accuracy": [0.1732928305864334, 0.12851670384407043, 0.20803064107894897, 0.09760929644107819, 0.09325055778026581, 0.10051512718200684, 0.09153348207473755], "val_loss": [2.3103957176208496, 2.270066976547241, 2.305915117263794, 2.3031740188598633, 2.3028249740600586, 2.3026657104492188, 2.3025782108306885], "val_accuracy": [0.09933333098888397, 0.4050000011920929, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 6, 3, 6, 9, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 0, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [47, 70, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(grad, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07568352669477463, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [2, 6, 8, 0, 6, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [47, 70, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [7, 6, 1, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [5, 3, 2, 4, 2, 1, 2, 3], [2, 1, 0, 2, 3, 3, 2], [19, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 6, 5, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))))), grad)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(beta, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 6, 3, 0, 9, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 2, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [47, 70, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [4, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 6, 3, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 3, 4, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 6, 3, 6, 9, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 0, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [47, 70, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [0, 2, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 5, 3, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [68766832.0, 1262309120.0, 5915450368.0, 16148557824.0, 34583056384.0, 63389270016.0], "accuracy": [0.09893012791872025, 0.09985470771789551, 0.10157178342342377, 0.10038304328918457, 0.09919429570436478, 0.0948355570435524], "val_loss": [297679200.0, 2379542016.0, 8028807168.0, 19028754432.0, 37162500096.0, 64213458944.0], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [5, 6, 3, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 0, 2, 1, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1, 1, 3, 2, 3], [47, 70, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 1, 9, 7], [4, 0, 6], [24, 44], [1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [4, 3, 2, 4, 2, 1, 2, 3], [2, 2, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07568352669477463, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 4, 8, 0, 6, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [47, 70, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [7, 6, 1, 9, 7], [4, 0, 6], [24, 44], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 5, 3, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 8, 4, 4, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), beta))", "other_info": {"loss": [44.32786178588867, 1.5128530955901338e+17, 2.306467056274414, 2.3045053482055664, 2.303650379180908, 2.3030779361724854], "accuracy": [0.2324659824371338, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.162000309556347e+18, 2.3075106143951416, 2.3048386573791504, 2.3036575317382812, 2.3030669689178467, 2.302778959274292], "val_accuracy": [0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [8, 6, 2, 3, 9, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 0, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [46, 11, 89, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [7, 6, 1, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 2, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303057909011841, 2.302957773208618, 2.3028876781463623, 2.302961587905884, 2.3030600547790527, 2.3028204441070557], "accuracy": [0.09655263274908066, 0.09721305221319199, 0.09747721254825592, 0.09509972482919693, 0.09721305221319199, 0.0956280529499054], "val_loss": [2.302608013153076, 2.3026952743530273, 2.3025870323181152, 2.302518606185913, 2.3026089668273926, 2.3025991916656494], "val_accuracy": [0.10133333504199982, 0.09700000286102295, 0.10133333504199982, 0.10133333504199982, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 9, 9, 3, 9, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 0, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [47, 70, 60, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1], [7, 6, 1, 9, 7], [4, 0, 6], [24, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.07285714149475098, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 0, 7, 5, 3, 2, 1, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), sigma)), tf.math.add(sigma, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3019750118255615, 2.302196741104126, 2.3026769161224365, 2.3002407550811768, 2.3011815547943115, 2.3009471893310547, 2.2997031211853027, 2.3006837368011475, 2.299882173538208, 2.300382614135742, 2.2998082637786865, 2.2996842861175537, 2.3010005950927734, 2.299586772918701, 2.3016719818115234, 2.3008902072906494, 2.300457239151001], "accuracy": [0.09694888442754745, 0.09126931428909302, 0.09259014576673508, 0.10210011899471283, 0.09708096832036972, 0.09219389408826828, 0.09589222073554993, 0.09589222073554993, 0.09945846349000931, 0.09589222073554993, 0.1022322028875351, 0.09879804402589798, 0.09259014576673508, 0.1026284471154213, 0.09536388516426086, 0.0936468094587326, 0.0956280529499054], "val_loss": [2.2992255687713623, 2.2988390922546387, 2.2985503673553467, 2.298370122909546, 2.298523187637329, 2.2985689640045166, 2.298466682434082, 2.2982919216156006, 2.2981770038604736, 2.298210620880127, 2.2983131408691406, 2.298447847366333, 2.29862904548645, 2.299025297164917, 2.299177408218384, 2.299381732940674, 2.299637794494629], "val_accuracy": [0.04933333396911621, 0.05366666615009308, 0.05766666680574417, 0.06066666543483734, 0.06199999898672104, 0.06533333659172058, 0.070333331823349, 0.07400000095367432, 0.07666666805744171, 0.07999999821186066, 0.07999999821186066, 0.0846666693687439, 0.08299999684095383, 0.07800000160932541, 0.07633333653211594, 0.070333331823349, 0.06733333319425583]}}]