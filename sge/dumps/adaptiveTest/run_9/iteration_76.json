[{"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7962856888771057, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 2, 1, 1, 4, 2, 2, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2903820206192838, 2.2647079230142135, 2.232334095961571, 2.1927961225853525, 2.139812528874502, 2.064520720209916, 1.9686263950981753, 1.8473293054782483, 1.7058738844190937, 1.588751138303699, 1.4755864108573995, 1.3787983312362442, 1.3039137445751388, 1.2381876496402044, 1.1785688109606358, 1.136329624331969, 1.0978942851600804, 1.0656090193042949, 1.0307613899206771, 1.0008755442394226, 0.9848978776721402, 0.9595215801770078, 0.947839018321072, 0.934751012739079, 0.912718312048468, 0.9045263361527762, 0.8840867532730858, 0.8751943746357546, 0.8631433545952665, 0.8525907040398119, 0.8378972275350639, 0.8346465850440093, 0.8300965371117411, 0.8218058992717024, 0.8085317792689024, 0.8059320651686597, 0.8017939535728488, 0.793236985954201, 0.7946160377890537, 0.775943347924673, 0.7857268156943588, 0.76226334041372, 0.7650201270420003, 0.7554387800477168, 0.7503728575600043, 0.7466943886427753, 0.7471649636288266, 0.737885106823873, 0.7369706457742311, 0.7302217895029527, 0.7255359044353393, 0.7184237674589186, 0.7260381011222221, 0.7228923967611741, 0.7137611963414812, 0.704518099227019, 0.7146631523744383, 0.7082795018785114, 0.6938027945239987, 0.7011795485606992, 0.6932159838911376, 0.6896038660047675, 0.6910859309230356, 0.6851737199048828, 0.6818026388798407, 0.6852859731961897, 0.6801285604759214, 0.6712734750658372, 0.6717360895213166, 0.6663675023391183, 0.664219971047007, 0.6604369588579091, 0.6577053392772677, 0.6553601282399644, 0.6571774707809179, 0.6685299866817662, 0.6453048069369067, 0.648732673214915, 0.6516190373965258, 0.6531133021440457, 0.6515468848049207, 0.6352385077509882, 0.6264603700006107], "accuracy": [0.12310130894184113, 0.18993528187274933, 0.2658829689025879, 0.3127724230289459, 0.3599260449409485, 0.39307886362075806, 0.4131554663181305, 0.4535728394985199, 0.47946110367774963, 0.49332982301712036, 0.518161416053772, 0.5439175963401794, 0.5595033764839172, 0.5752212405204773, 0.5886936783790588, 0.6033549308776855, 0.6144498586654663, 0.6239598393440247, 0.6392814517021179, 0.64667809009552, 0.6473385095596313, 0.6501122713088989, 0.6653017997741699, 0.6630563735961914, 0.6763967871665955, 0.6818121671676636, 0.685510516166687, 0.6763967871665955, 0.6911900639533997, 0.6964733600616455, 0.7003037929534912, 0.695813000202179, 0.6951525807380676, 0.7012283802032471, 0.7034738063812256, 0.7063795924186707, 0.707568347454071, 0.7121912837028503, 0.7042662501335144, 0.7170783281326294, 0.7121912837028503, 0.7210407853126526, 0.7165499925613403, 0.7239466309547424, 0.7217012047767639, 0.7288337349891663, 0.7190595865249634, 0.7304186820983887, 0.7298903465270996, 0.7345132827758789, 0.7289658188819885, 0.7374191284179688, 0.735041618347168, 0.7341170310974121, 0.7349095344543457, 0.7363624572753906, 0.7313432693481445, 0.7372870445251465, 0.7445515990257263, 0.7313432693481445, 0.7412495017051697, 0.7433628439903259, 0.7456082701683044, 0.7400607466697693, 0.7424382567405701, 0.7454761862754822, 0.7456082701683044, 0.7516840696334839, 0.750231146812439, 0.7516840696334839, 0.755118191242218, 0.7528728246688843, 0.7540615797042847, 0.7580240368843079, 0.7572315335273743, 0.7524765729904175, 0.7589486241340637, 0.7531369924545288, 0.7543256878852844, 0.7574957013130188, 0.7516840696334839, 0.7594769597053528, 0.7685906887054443], "val_loss": [1.9462793895176478, 1.9197493280683244, 1.886728082384382, 1.8422893796648299, 1.781388282775879, 1.6985627583095007, 1.592066832951137, 1.4661341394696916, 1.3311995097569056, 1.206430537360055, 1.1000855650220598, 1.014347723552159, 0.9473047937665667, 0.893204825265067, 0.8504749706813267, 0.8154136453356061, 0.7868862662996564, 0.7619952304022652, 0.7420182738985334, 0.7229620558874947, 0.7071381296430316, 0.6926641464233398, 0.6800337348665509, 0.6694868121828351, 0.6599393572126117, 0.6516112600054059, 0.6430179561887469, 0.6340067727225167, 0.6278108698981149, 0.6238010270254952, 0.61501487663814, 0.6103131600788662, 0.6045750038964408, 0.5984623261860439, 0.5943452971322196, 0.5915939978190831, 0.5864683730261666, 0.5821899856839862, 0.5798883267811367, 0.5758108922413417, 0.57246994972229, 0.5703845364706857, 0.5655461038861956, 0.5617214952196393, 0.5591194799968174, 0.556906018938337, 0.5547508341925484, 0.5505731616701398, 0.5475633995873588, 0.5448320593152728, 0.5425394432885307, 0.5416890723364693, 0.5383910621915545, 0.536446111542838, 0.5358114072254726, 0.5323011704853603, 0.5303280012948173, 0.5292068890162877, 0.5266343525477818, 0.525249787739345, 0.5243005241666522, 0.5217605658939907, 0.5205444438116891, 0.5189894948686872, 0.5158508334841047, 0.515282222202846, 0.5123683043888637, 0.5113419464656285, 0.5088762044906616, 0.5079709121159145, 0.5063627447400775, 0.506492052759443, 0.5042539664677211, 0.5016635145459857, 0.5011640105928693, 0.49856620175497873, 0.4998652424131121, 0.4979264225278582, 0.4952887977872576, 0.4956885746547154, 0.49489218848092215, 0.4929454667227609, 0.4904343741280692], "val_accuracy": [0.23499999940395355, 0.36399999260902405, 0.4193333387374878, 0.45366665720939636, 0.49533334374427795, 0.5296666622161865, 0.5473333597183228, 0.5663333535194397, 0.5879999995231628, 0.609666645526886, 0.6383333206176758, 0.6589999794960022, 0.6679999828338623, 0.6769999861717224, 0.6836666464805603, 0.6826666593551636, 0.690666675567627, 0.6990000009536743, 0.6959999799728394, 0.706333339214325, 0.7076666951179504, 0.7133333086967468, 0.7176666855812073, 0.7203333377838135, 0.721666693687439, 0.7210000157356262, 0.7319999933242798, 0.731333315372467, 0.731333315372467, 0.7246666550636292, 0.7350000143051147, 0.7419999837875366, 0.7406666874885559, 0.7456666827201843, 0.7443333268165588, 0.7426666617393494, 0.7486666440963745, 0.7480000257492065, 0.7516666650772095, 0.7549999952316284, 0.7540000081062317, 0.7516666650772095, 0.7559999823570251, 0.7586666941642761, 0.7633333206176758, 0.7573333382606506, 0.7609999775886536, 0.762333333492279, 0.7663333415985107, 0.7649999856948853, 0.7649999856948853, 0.765333354473114, 0.765999972820282, 0.7666666507720947, 0.7683333158493042, 0.7713333368301392, 0.7683333158493042, 0.7689999938011169, 0.7713333368301392, 0.7716666460037231, 0.7693333625793457, 0.7753333449363708, 0.7733333110809326, 0.7736666798591614, 0.7733333110809326, 0.7739999890327454, 0.7760000228881836, 0.777999997138977, 0.7770000100135803, 0.7756666541099548, 0.7786666750907898, 0.7803333401679993, 0.7770000100135803, 0.7799999713897705, 0.781333327293396, 0.7786666750907898, 0.7799999713897705, 0.7846666574478149, 0.7803333401679993, 0.7823333144187927, 0.7829999923706055, 0.7836666703224182, 0.7833333611488342]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 2], [88, 19], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 0, 0, 2, 2, 0], [28, 57, 68]], "fitness": -0.35199999809265137, "mapping_values": [1, 9, 9, 5, 4, 0, 3, 3, 2, 1, 1, 3, 3, 1, 2, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.square(tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), alpha))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3488805248059963, 2.2905437631094383, 2.3035666768765957, 2.303141678675464, 2.303123854595704, 2.3029514354816154], "accuracy": [0.20195482671260834, 0.15031039714813232, 0.09179764986038208, 0.09338264167308807, 0.08955223858356476, 0.09681680053472519], "val_loss": [1.8361904280526298, 1.974806581224714, 1.9738414628165108, 1.9736781120300293, 1.973634992327009, 1.9737080846514021], "val_accuracy": [0.3153333365917206, 0.09833333641290665, 0.09833333641290665, 0.10000000149011612, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 0, 1], [2, 9, 1, 3, 5], [3, 4, 3], [8, 0, 19], [0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 9, 0, 4, 7], [1, 0, 0, 1, 3, 3], [91, 57]], "fitness": -0.18000000715255737, "mapping_values": [1, 3, 3, 1, 2, 0, 8, 8, 5, 3, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.327172722216248, 2.7745309070967066, 3.241192190733096, 3.8924044825224247, 5.285160330985406, 9.557865517187617], "accuracy": [0.16259410977363586, 0.13049794733524323, 0.11927089840173721, 0.12059172987937927, 0.1266675442457199, 0.1262712925672531], "val_loss": [2.1300710950578963, 2.506746768951416, 2.9339094161987305, 3.70599787575858, 5.326365607125418, 22.50793511526925], "val_accuracy": [0.17266666889190674, 0.15433333814144135, 0.11400000005960464, 0.10866666585206985, 0.10100000351667404, 0.10433333367109299]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 1, 1], [2, 9], [2, 4, 3], [8, 0, 19], [1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1], [2, 0, 8, 9, 7], [4, 7], [90, 19], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 2, 4], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.1591428518295288, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.327271661990197, 2.775092486267029, 3.2413294905794925, 3.8868743272080257, 5.216628113568908, 8.099239183092603, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.16259410977363586, 0.13049794733524323, 0.11913882195949554, 0.11993131786584854, 0.12495046854019165, 0.12191256135702133, 0.10289261490106583, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.1302253859383717, 2.508157661982945, 2.932798521859305, 3.685250691005162, 5.260795593261719, 64.54618835449219, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.17266666889190674, 0.15433333814144135, 0.1133333370089531, 0.1080000028014183, 0.10199999809265137, 0.18000000715255737, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1], [4, 1, 3, 7, 8], [1, 2, 1, 1], [61], [0, 1, 1, 0, 0, 0, 1], [0, 1, 1, 0, 1, 1], [6, 9], [4, 3, 3, 4], [8, 0, 19], [1, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 1, 1], [2, 3, 8, 9, 7], [7], [88, 19], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 0, 0, 1, 3, 1], [28, 57, 68]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 3, 4, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, alpha), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(grad, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1244455831.8561573, 23708346884.936733, 108916871780.96632, 305626407503.8669, 659747259279.0638, 1218382827825.6716], "accuracy": [0.09576013684272766, 0.09642054885625839, 0.10315678268671036, 0.1022322028875351, 0.09906221181154251, 0.09747721254825592], "val_loss": [4796584082.285714, 38364772059.42857, 129472247515.42857, 306888872521.1429, 599381807689.1428, 1035712631369.1428], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 1, 1, 0, 1], [1, 1, 5, 4, 8], [1, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1], [2, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1], [3, 3, 0, 4, 7, 0, 2, 2, 3, 2, 3, 1, 3, 1, 3, 0, 5, 7, 4, 1, 9], [1, 0, 0, 1, 3, 3, 0, 0, 2, 1, 1, 2, 2, 3, 0, 1], [28, 57, 68, 9, 19, 30]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 37, 21, 16, 6], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.negative(alpha), tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha), sigma))), sigma)), tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), beta)), alpha), alpha), tf.math.negative(tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.subtract(beta, sigma), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))))), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 1, 5, 7, 8], [0, 0, 1, 1], [50, 34], [1, 1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 1, 1], [2, 9], [4, 4, 3, 4], [8, 0, 19], [0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1], [2, 2, 8, 9, 7], [4, 7], [88, 19], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 6, 2, 9], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 2, 1, 1, 0, 1, 0, 6, 4, 3, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.sqrt(sigma)), tf.math.add(sigma, grad))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.302635623070038, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09787346422672272, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [0, 1, 1, 1], [81], [0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1, 1], [2, 7, 9, 1], [3, 4, 2], [42, 0, 19], [0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [2, 3, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 8, 0, 4, 7], [1, 0, 0, 1, 3, 1], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 7, 7, 4, 3, 1, 5, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(grad, tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1239294036.247651, 23596990952.533615, 108386434522.33206, 304108733277.2907, 656446174447.2625, 1212250286662.3992], "accuracy": [0.09589222073554993, 0.09668471664190292, 0.10315678268671036, 0.10210011899471283, 0.09906221181154251, 0.09747721254825592], "val_loss": [4772742436.571428, 38170536228.57143, 128812126793.14285, 305319313408.0, 596301540790.8572, 1030398747794.2858], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [4, 1, 5, 7, 8], [0, 1, 1, 1], [54], [0, 1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 1, 1], [2, 9], [4, 4, 3, 4], [8, 0, 19], [0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1], [2, 1, 8, 9, 7], [4, 7], [88, 19], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 6, 2, 9], [0, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 6, 3, 3, 0, 0, 2, 1, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.sqrt(sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2886.5925129590773, 51799.12477195053, 234503.93941107515, 654042.5791837274, 1407138.3827763835, 2593248.05735702], "accuracy": [0.09589222073554993, 0.09694888442754745, 0.10315678268671036, 0.1022322028875351, 0.09919429570436478, 0.09747721254825592], "val_loss": [10688.111328125, 82992.62276785714, 277608.3214285714, 655220.25, 1276514.2857142857, 2202174.9285714286], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 2, 1, 1], [50], [1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 1, 1], [9, 9], [3, 4, 3], [42, 0, 19], [0, 0, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1], [2, 5, 4, 8, 7], [4, 7], [88, 19], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 1, 0, 1, 3, 3, 1, 2, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [65920.46140013698, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.15229164063930511, 0.10210011899471283, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [5.21239216234397e+33, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 2, 1, 1], [50], [1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 8, 1, 2, 7], [1, 0, 0, 1, 3, 3], [28, 35]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(alpha, tf.math.add(alpha, grad)), tf.math.square(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [3.6142294093027335e+23, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.17091533541679382, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 1, 1, 1, 0, 1], [1, 1, 8, 7, 8], [1, 2, 1, 1], [61], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [1, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 1, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [4, 9, 0, 4, 7], [2, 0, 0, 2, 2, 0], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(alpha, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07555144280195236, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [4, 1, 5, 7, 8], [0, 1, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [0, 1, 1, 0, 1, 1], [2, 9], [4, 4, 3, 4], [8, 0, 19], [0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 6, 2, 9], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 0, 4, 2, 2, 0, 0, 13, 7, 6, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(alpha), tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(alpha, sigma), sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 1, 8, 7, 8], [1, 2, 1, 1], [61], [0, 1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 1, 1], [2, 9], [4, 4, 3], [8, 0, 19], [1, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 1, 1], [2, 0, 8, 9, 7], [4, 2], [88, 19], [1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 0, 4, 7, 2, 7], [0, 0, 0, 1, 3, 3], [61, 57, 68]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(alpha, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302635623070038, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09787346422672272, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 2, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 1, 1], [2, 9], [0, 4, 3], [8, 0, 19], [0, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 0, 4, 7, 2, 7], [0, 0, 0, 1, 3, 3], [28, 57, 25]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 1, 2, 2], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302635623070038, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09787346422672272, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 0, 1, 1], [50], [0, 0, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [1, 0, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1], [2, 8, 4, 8, 7], [4, 7], [88, 19], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 1], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [491254752.18878573, 1.3381440974566132e+16, 2.7964294383476588e+23, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09377889335155487, 0.09800554811954498, 0.10632677376270294, 0.09959053993225098, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [213692322377.14285, 4.187524119245357e+18, 1.7481481823614382e+26, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.10133333504199982, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 1, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [1, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [0, 2, 0, 1, 3, 3], [28, 18, 25]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(alpha, tf.math.add(alpha, alpha)), tf.math.square(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302635623070038, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09787346422672272, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 1, 0, 1], [5, 1, 3, 7, 8], [1, 2, 3, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [3, 9], [4, 4, 3, 4], [8, 0, 19], [1, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 1, 1], [2, 0, 8, 9, 7], [4, 3], [88, 19], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 5, 0, 3, 2, 7], [1, 0, 0, 1, 3, 3, 3], [88, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.square(alpha), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.301400284552382, 2.3026042911653994, 2.302082247596139, 2.30697552727324, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.08638224750757217, 0.09126931428909302, 0.08347642421722412, 0.09536388516426086, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9712515558515276, 1.9714690617152624, 1.9728222574506487, 1.9799549239022392, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03966666758060455, 0.03799999877810478, 0.028999999165534973, 0.09266666322946548, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 8, 9, 7, 8], [2, 2, 1, 1], [61], [0, 0, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [4, 4, 3], [8, 0, 19], [1, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 1, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [0, 0, 0, 1, 3, 3], [9, 57, 68]], "fitness": -0.09971428662538528, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.4611271717891308, 4.303285830969729, 8.756597993553685, 16.22139809245305, 26.60679289989499, 40.44965222879817], "accuracy": [0.0940430611371994, 0.0956280529499054, 0.10249637067317963, 0.10210011899471283, 0.10011887550354004, 0.09774138033390045], "val_loss": [2.3488807678222656, 4.342896052769253, 8.160712378365654, 13.78551265171596, 21.41109357561384, 31.267357962472097], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1], [8, 1, 5, 7, 8], [1, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [0, 1, 1, 0, 1, 1], [3, 9], [3, 0, 3], [8, 0, 19], [0, 0, 1, 1, 1, 1, 0], [1, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 3], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 2, 4], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 13, 7, 6, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(grad, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.pow(alpha, sigma), sigma)))))", "other_info": {"loss": [2.3013973474156164, 2.3025251587762052, 2.3014402288755074, 2.302678548900789, 2.3028753634850743, 2.303079392884496], "accuracy": [0.09655263274908066, 0.08625016361474991, 0.09179764986038208, 0.09034473448991776, 0.08875974267721176, 0.08968432247638702], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]