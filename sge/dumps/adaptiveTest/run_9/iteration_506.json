[{"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 6, 1, 0, 1, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 2, 2, 2, 0, 2, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [95, 56, 82, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2, 3, 3, 3], [47, 57, 40, 62]], "fitness": -0.817714273929596, "mapping_values": [1, 8, 8, 4, 4, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.subtract(grad, tf.math.negative(tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.064589738845825, 1.9280946254730225, 1.7072876691818237, 1.2819236516952515, 0.9485818147659302, 0.8184330463409424, 0.7552217245101929, 0.7330289483070374, 0.7052670121192932, 0.6492066383361816, 0.64192134141922, 0.6029890775680542, 0.5859142541885376, 0.5685513019561768, 0.548049807548523, 0.5582983493804932, 0.5364719033241272, 0.538191556930542, 0.5153721570968628, 0.4962064325809479, 0.4958621561527252, 0.4793216288089752, 0.476295530796051, 0.4749544858932495, 0.46870237588882446, 0.45578092336654663, 0.4284176230430603, 0.41701051592826843, 0.4561001658439636, 0.4216555058956146, 0.42238083481788635, 0.4006026089191437, 0.4254344701766968, 0.38402754068374634, 0.408618688583374, 0.3751991093158722], "accuracy": [0.30603620409965515, 0.33245277404785156, 0.4303262531757355, 0.5511821508407593, 0.6503764390945435, 0.6888125538825989, 0.7177387475967407, 0.7207766771316528, 0.7290979027748108, 0.7564390301704407, 0.7640998363494873, 0.7800818681716919, 0.7810064554214478, 0.791441023349762, 0.7955356240272522, 0.7968564033508301, 0.8014793395996094, 0.7985734939575195, 0.8104609847068787, 0.8131026029586792, 0.8137630224227905, 0.828820526599884, 0.8248580098152161, 0.8314621448516846, 0.8240655064582825, 0.8309338092803955, 0.842028796672821, 0.8521991968154907, 0.832650899887085, 0.847840428352356, 0.8451988101005554, 0.8558974862098694, 0.8433496356010437, 0.8578787446022034, 0.8473120927810669, 0.86553955078125], "val_loss": [1.979012370109558, 1.9358124732971191, 1.437613606452942, 0.8437461853027344, 0.8505442142486572, 0.7304821610450745, 0.6576268076896667, 0.6422357559204102, 0.5683117508888245, 0.5308149456977844, 0.5509498119354248, 0.5148288607597351, 0.4884447455406189, 0.5241466760635376, 0.47269320487976074, 0.5355831384658813, 0.5146990418434143, 0.4784606993198395, 0.44992920756340027, 0.4466525912284851, 0.46941816806793213, 0.4405164420604706, 0.4153720736503601, 0.40332457423210144, 0.3943904638290405, 0.39477863907814026, 0.40808698534965515, 0.47159382700920105, 0.3950450122356415, 0.4513746201992035, 0.3731200397014618, 0.37495312094688416, 0.36906322836875916, 0.4161948263645172, 0.38170793652534485, 0.3849908411502838], "val_accuracy": [0.29100000858306885, 0.35766667127609253, 0.47099998593330383, 0.6513333320617676, 0.6806666851043701, 0.7146666646003723, 0.7429999709129333, 0.7409999966621399, 0.7906666398048401, 0.7950000166893005, 0.7993333339691162, 0.8106666803359985, 0.7990000247955322, 0.7826666831970215, 0.8143333196640015, 0.7889999747276306, 0.7766666412353516, 0.7996666431427002, 0.8166666626930237, 0.8370000123977661, 0.8090000152587891, 0.8259999752044678, 0.8543333411216736, 0.8386666774749756, 0.8586666584014893, 0.859333336353302, 0.8383333086967468, 0.812333345413208, 0.843999981880188, 0.8213333487510681, 0.8676666617393494, 0.8579999804496765, 0.8629999756813049, 0.8416666388511658, 0.8523333072662354, 0.8543333411216736]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 6, 8, 0, 2, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 2, 2, 2, 0, 2, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [95, 56, 82, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 0, 3, 3, 2, 3, 3, 3], [36, 57, 40, 62]], "fitness": -0.8168571591377258, "mapping_values": [1, 10, 10, 6, 4, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 8, 4, 4, 3], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.add(tf.math.pow(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [1.9576884508132935, 1.6196333169937134, 1.0709397792816162, 0.9327170848846436, 0.8233269453048706, 0.770548939704895, 0.7429134249687195, 0.7188094854354858, 0.675762951374054, 0.6722418665885925, 0.6883959174156189, 0.6495509147644043, 0.6117414832115173, 0.6229484677314758, 0.6145459413528442, 0.6084550619125366, 0.567130446434021, 0.5635197162628174, 0.5591464042663574, 0.5559793710708618, 0.5319801568984985, 0.5519664287567139, 0.5334465503692627, 0.5039235353469849, 0.5262445211410522, 0.5096175670623779, 0.49439701437950134, 0.48789724707603455, 0.4898431599140167, 0.4723287522792816, 0.47496259212493896, 0.4738593101501465, 0.47291702032089233, 0.4685865640640259, 0.43841180205345154, 0.44163981080055237], "accuracy": [0.3415665030479431, 0.47193238139152527, 0.6156386137008667, 0.6507726907730103, 0.6988508701324463, 0.7047945857048035, 0.7205125093460083, 0.7253995537757874, 0.7396644949913025, 0.7467969655990601, 0.7391361594200134, 0.7548540234565735, 0.7693831920623779, 0.7619865536689758, 0.7656848430633545, 0.7708360552787781, 0.7876105904579163, 0.789459764957428, 0.7913089394569397, 0.7844406366348267, 0.8043851256370544, 0.7866860628128052, 0.8001585006713867, 0.8169330358505249, 0.8039889335632324, 0.8101968169212341, 0.8164047002792358, 0.8190463781356812, 0.8224804997444153, 0.828820526599884, 0.8252542614936829, 0.8256505131721497, 0.8247259259223938, 0.8319904804229736, 0.8381983637809753, 0.8383304476737976], "val_loss": [1.9373111724853516, 0.9887879490852356, 0.7642835378646851, 0.7113831639289856, 0.7271249890327454, 0.686456561088562, 0.6251288056373596, 0.6035130023956299, 0.6323519945144653, 0.6010582447052002, 0.6046893000602722, 0.5711196064949036, 0.5429702401161194, 0.5291865468025208, 0.533429741859436, 0.5348033308982849, 0.495597779750824, 0.5108020901679993, 0.4825651943683624, 0.5007007718086243, 0.4707965552806854, 0.4916650652885437, 0.46688222885131836, 0.4548706114292145, 0.4634784460067749, 0.4569470286369324, 0.45993009209632874, 0.44005534052848816, 0.43215620517730713, 0.4581153690814972, 0.42921704053878784, 0.42803817987442017, 0.4197840690612793, 0.4176897704601288, 0.4319048523902893, 0.40680888295173645], "val_accuracy": [0.31200000643730164, 0.6669999957084656, 0.715666651725769, 0.7253333330154419, 0.7126666903495789, 0.7273333072662354, 0.7599999904632568, 0.7400000095367432, 0.7603333592414856, 0.7823333144187927, 0.7423333525657654, 0.7706666588783264, 0.777999997138977, 0.7846666574478149, 0.7896666526794434, 0.7879999876022339, 0.7979999780654907, 0.8103333115577698, 0.8053333163261414, 0.8100000023841858, 0.8216666579246521, 0.8076666593551636, 0.8173333406448364, 0.8213333487510681, 0.8193333148956299, 0.8383333086967468, 0.8176666498184204, 0.8356666564941406, 0.8266666531562805, 0.8226666450500488, 0.8479999899864197, 0.8429999947547913, 0.8426666855812073, 0.8456666469573975, 0.8349999785423279, 0.8389999866485596]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 2, 2, 7, 9, 0, 1, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 56, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [3, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8128571510314941, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0645196437835693, 1.9298241138458252, 1.6277729272842407, 1.1796905994415283, 0.9382273554801941, 0.7998020052909851, 0.7722837924957275, 0.7136111855506897, 0.7067120671272278, 0.7186601161956787, 0.6433982253074646, 0.6264247894287109, 0.5934418439865112, 0.5686315894126892, 0.5628403425216675, 0.5540757179260254, 0.5346656441688538, 0.5058344006538391, 0.5213773846626282, 0.5080177783966064, 0.5011255145072937, 0.4835812747478485, 0.46915191411972046, 0.4729866087436676, 0.46159452199935913, 0.47012922167778015, 0.4261089563369751, 0.4146725833415985, 0.46308964490890503, 0.4283618927001953, 0.43145552277565, 0.4090174734592438, 0.3986627161502838, 0.4104907512664795, 0.3968856632709503, 0.386198490858078], "accuracy": [0.3061682879924774, 0.33179235458374023, 0.448949933052063, 0.5666358470916748, 0.6564522385597229, 0.6929071545600891, 0.707040011882782, 0.7317395210266113, 0.7329282760620117, 0.7337207794189453, 0.7553823590278625, 0.763967752456665, 0.77677983045578, 0.7890635132789612, 0.7881389260292053, 0.8010830879211426, 0.8017435073852539, 0.811649739742279, 0.8082155585289001, 0.8117818236351013, 0.8115176558494568, 0.8285563588142395, 0.828292191028595, 0.8280280232429504, 0.8269713521003723, 0.8261788487434387, 0.8429533839225769, 0.854708731174469, 0.8301413059234619, 0.8467837572097778, 0.8413683772087097, 0.8506141901016235, 0.8560295701026917, 0.8510104417800903, 0.8552370667457581, 0.8584070801734924], "val_loss": [1.978824496269226, 1.7976213693618774, 1.6219971179962158, 0.7596526741981506, 0.7209215760231018, 0.7315401434898376, 0.701328456401825, 0.6025614142417908, 0.5833679437637329, 0.5551917552947998, 0.538332462310791, 0.5486645698547363, 0.5190444588661194, 0.4851660132408142, 0.49732136726379395, 0.4758478105068207, 0.48238247632980347, 0.4593166410923004, 0.45688924193382263, 0.45090070366859436, 0.4818938076496124, 0.4229916036128998, 0.4328155815601349, 0.3990348279476166, 0.40442997217178345, 0.40658077597618103, 0.3892209529876709, 0.42025935649871826, 0.3803664445877075, 0.4401051104068756, 0.37995824217796326, 0.378846675157547, 0.38890933990478516, 0.4056221544742584, 0.390481561422348, 0.3785722553730011], "val_accuracy": [0.29100000858306885, 0.28299999237060547, 0.4476666748523712, 0.7099999785423279, 0.7123333215713501, 0.6990000009536743, 0.7123333215713501, 0.765999972820282, 0.7803333401679993, 0.7760000228881836, 0.8033333420753479, 0.7749999761581421, 0.7860000133514404, 0.809333324432373, 0.8033333420753479, 0.8063333630561829, 0.8066666722297668, 0.8183333277702332, 0.8163333535194397, 0.8336666822433472, 0.8056666851043701, 0.8429999947547913, 0.8330000042915344, 0.8450000286102295, 0.8529999852180481, 0.859333336353302, 0.8500000238418579, 0.840666651725769, 0.8533333539962769, 0.8270000219345093, 0.8709999918937683, 0.8579999804496765, 0.8476666808128357, 0.840666651725769, 0.847000002861023, 0.8550000190734863]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 6, 2, 7, 6, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 56, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [3, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.7908571362495422, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0690133571624756, 1.7237259149551392, 1.3269394636154175, 1.0136046409606934, 0.8846539855003357, 0.8120330572128296, 0.7463801503181458, 0.7063957452774048, 0.6713036298751831, 0.6644738912582397, 0.6314440369606018, 0.5772688984870911, 0.5868141651153564, 0.5543386936187744, 0.5604710578918457, 0.5485306978225708], "accuracy": [0.310130774974823, 0.4154008626937866, 0.5233126282691956, 0.6205257177352905, 0.6716417670249939, 0.6877558827400208, 0.7191916704177856, 0.7351737022399902, 0.7450799345970154, 0.7494386434555054, 0.7660810947418213, 0.783119797706604, 0.7784969210624695, 0.7947431206703186, 0.789988100528717, 0.7959318161010742], "val_loss": [1.7935289144515991, 1.6342066526412964, 0.9512441158294678, 0.7278478145599365, 0.7588966488838196, 0.6879497170448303, 0.6102535724639893, 0.6511027216911316, 0.5984609127044678, 0.5517196655273438, 0.5143669843673706, 0.5478581786155701, 0.5012066960334778, 0.5193262696266174, 0.5431647300720215, 0.49769914150238037], "val_accuracy": [0.33666667342185974, 0.45133334398269653, 0.6206666827201843, 0.7289999723434448, 0.6853333115577698, 0.7139999866485596, 0.7609999775886536, 0.722000002861023, 0.7616666555404663, 0.8016666769981384, 0.8119999766349792, 0.7713333368301392, 0.796999990940094, 0.796999990940094, 0.781000018119812, 0.7993333339691162]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 6, 2, 7, 6, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 41, 16, 78, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 0, 3, 3, 2], [27, 57, 40, 62]], "fitness": -0.7668571472167969, "mapping_values": [1, 11, 11, 5, 6, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2926599979400635, 2.270237684249878, 2.249866485595703, 2.2193028926849365, 2.1841235160827637, 2.137960195541382, 2.08050799369812, 2.0060460567474365, 1.9184284210205078, 1.8102476596832275, 1.6981589794158936, 1.5947813987731934, 1.493694543838501, 1.4087913036346436, 1.331609845161438, 1.2779020071029663, 1.2209111452102661, 1.1854032278060913, 1.1493839025497437, 1.1170662641525269, 1.0722893476486206, 1.0537254810333252, 1.0362682342529297, 0.9961257576942444, 0.9841879606246948, 0.9591911435127258, 0.9476547241210938, 0.9386498928070068, 0.9267742037773132, 0.9080849885940552, 0.8996294736862183, 0.8910821676254272, 0.8658334016799927, 0.8700050711631775, 0.8585055470466614, 0.8493475317955017, 0.8449616432189941, 0.8330464363098145, 0.8354959487915039, 0.8285712599754333, 0.8114076256752014, 0.8161637187004089, 0.7974302768707275, 0.8009886145591736, 0.7919396758079529, 0.7862350940704346, 0.7873697280883789, 0.779030442237854, 0.7802205085754395, 0.7652564644813538, 0.7665171027183533, 0.7642631530761719, 0.7580595016479492, 0.7494416236877441, 0.7600410580635071, 0.7456120848655701, 0.7429410815238953, 0.7415791749954224, 0.7315350770950317, 0.7326950430870056, 0.7405803203582764, 0.7259246706962585, 0.7220317125320435, 0.7293028235435486, 0.7130821347236633, 0.7275375723838806, 0.7141097187995911, 0.7193946242332458, 0.7040383219718933, 0.6990138292312622, 0.7013757824897766, 0.7023211121559143, 0.6947093605995178, 0.6956415176391602], "accuracy": [0.10910051316022873, 0.17857614159584045, 0.22097477316856384, 0.28160083293914795, 0.32941487431526184, 0.3553031384944916, 0.38185179233551025, 0.4107779562473297, 0.4245145916938782, 0.45528993010520935, 0.47946110367774963, 0.502971887588501, 0.5215955376625061, 0.5386342406272888, 0.5581825375556946, 0.5620129704475403, 0.5835424661636353, 0.5934486985206604, 0.603090763092041, 0.6127327680587769, 0.6252806782722473, 0.6326773166656494, 0.6379606127738953, 0.6501122713088989, 0.6516972780227661, 0.6676793098449707, 0.6627922058105469, 0.6593580842018127, 0.670320987701416, 0.6758684515953064, 0.681547999382019, 0.6853784322738647, 0.6890767216682434, 0.6884163022041321, 0.6926429867744446, 0.691850483417511, 0.6989829540252686, 0.7028133869171143, 0.6983225345611572, 0.7008321285247803, 0.7100779414176941, 0.7042662501335144, 0.7154933214187622, 0.7152291536331177, 0.7129837274551392, 0.7172104120254517, 0.7147008180618286, 0.7224937081336975, 0.7213049530982971, 0.720380425453186, 0.7289658188819885, 0.7206445932388306, 0.7230220437049866, 0.7263241410255432, 0.7271166443824768, 0.7285695672035217, 0.7301545143127441, 0.7320036888122559, 0.7312111854553223, 0.7298903465270996, 0.7284374833106995, 0.7343811988830566, 0.7372870445251465, 0.7337207794189453, 0.7417778372764587, 0.7345132827758789, 0.735569953918457, 0.7372870445251465, 0.7391361594200134, 0.7453441023826599, 0.7382115721702576, 0.741909921169281, 0.7483819723129272, 0.7436270117759705], "val_loss": [2.2764453887939453, 2.251574754714966, 2.2233612537384033, 2.188532829284668, 2.1438710689544678, 2.085048198699951, 2.0101287364959717, 1.9159672260284424, 1.805202603340149, 1.6798232793807983, 1.5498968362808228, 1.4262490272521973, 1.3157379627227783, 1.222403645515442, 1.1439757347106934, 1.0806937217712402, 1.0285344123840332, 0.9855512976646423, 0.9484378099441528, 0.9184802770614624, 0.8921920657157898, 0.8676598072052002, 0.8488196730613708, 0.8294633626937866, 0.8133025765419006, 0.799527108669281, 0.7875720858573914, 0.7780370116233826, 0.7661396265029907, 0.7582448124885559, 0.746995210647583, 0.7397853136062622, 0.7318300604820251, 0.7251191139221191, 0.7166484594345093, 0.7094660401344299, 0.7040727734565735, 0.6976107358932495, 0.6925387978553772, 0.6886821389198303, 0.6842450499534607, 0.6770743727684021, 0.6740196943283081, 0.6675609350204468, 0.6653220057487488, 0.6613835692405701, 0.6578923463821411, 0.6522371768951416, 0.6488096714019775, 0.6450788378715515, 0.640551745891571, 0.6372894644737244, 0.6356729865074158, 0.6314330697059631, 0.6291229128837585, 0.6256827116012573, 0.6237335801124573, 0.6220239400863647, 0.6198099851608276, 0.6158224940299988, 0.6136854887008667, 0.609756588935852, 0.6093190908432007, 0.6055424213409424, 0.6056413650512695, 0.6021819710731506, 0.600679337978363, 0.5988625288009644, 0.5957567691802979, 0.592928409576416, 0.5905233025550842, 0.5897964239120483, 0.5851555466651917, 0.5833277106285095], "val_accuracy": [0.22100000083446503, 0.343666672706604, 0.38233333826065063, 0.4246666729450226, 0.4580000042915344, 0.4833333194255829, 0.5116666555404663, 0.5320000052452087, 0.5543333292007446, 0.5649999976158142, 0.5893333554267883, 0.6003333330154419, 0.625333309173584, 0.6586666703224182, 0.6663333177566528, 0.6809999942779541, 0.6803333163261414, 0.6933333277702332, 0.6973333358764648, 0.7013333439826965, 0.7043333053588867, 0.7046666741371155, 0.7070000171661377, 0.7120000123977661, 0.7143333554267883, 0.7193333506584167, 0.7223333120346069, 0.718999981880188, 0.7250000238418579, 0.7303333282470703, 0.7300000190734863, 0.734333336353302, 0.7316666841506958, 0.7360000014305115, 0.7413333058357239, 0.7436666488647461, 0.7440000176429749, 0.7440000176429749, 0.7459999918937683, 0.7450000047683716, 0.7490000128746033, 0.7543333172798157, 0.7509999871253967, 0.7566666603088379, 0.7563333511352539, 0.7549999952316284, 0.7570000290870667, 0.7606666684150696, 0.7609999775886536, 0.7583333253860474, 0.762666642665863, 0.7620000243186951, 0.762333333492279, 0.7649999856948853, 0.7633333206176758, 0.762333333492279, 0.7663333415985107, 0.7663333415985107, 0.7646666765213013, 0.7703333497047424, 0.7693333625793457, 0.7693333625793457, 0.7646666765213013, 0.7749999761581421, 0.7713333368301392, 0.7739999890327454, 0.7739999890327454, 0.7736666798591614, 0.781333327293396, 0.7763333320617676, 0.7756666541099548, 0.7773333191871643, 0.7803333401679993, 0.777999997138977]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 6, 2, 2, 6, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 1, 0, 0, 2, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 41, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 0, 3, 3, 2], [51, 57, 40, 62]], "fitness": -0.39257141947746277, "mapping_values": [1, 12, 12, 7, 5, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 14, 7, 7, 3], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.negative(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.math.pow(tf.math.add(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), sigma), sigma)), beta))", "other_info": {"loss": [2.1509294509887695, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.2690529525279999, 0.2226918488740921, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.8327281475067139, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.35199999809265137, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 6, 2, 7, 6, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [39, 56, 49, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [3, 0, 6], [24, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.3134285807609558, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.6338887214660645, 2.3816423416137695, 2.303727388381958, 2.302154541015625, 2.3994505405426025, 2.3113949298858643], "accuracy": [0.21872936189174652, 0.1438383311033249, 0.09615638852119446, 0.10527011007070541, 0.18121780455112457, 0.09932637959718704], "val_loss": [1.8849951028823853, 2.303524971008301, 2.3023269176483154, 2.2992374897003174, 2.3300628662109375, 2.30387020111084], "val_accuracy": [0.33266666531562805, 0.09933333098888397, 0.10066666454076767, 0.10199999809265137, 0.10199999809265137, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 6, 2, 7, 6, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [39, 56, 49, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [1, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [1, 0, 6], [24, 44], [1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2, 3, 3, 3], [47, 57, 40, 62]], "fitness": -0.31114286184310913, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.6335999965667725, 2.3924379348754883, 2.3036506175994873, 2.2962048053741455, 2.3043110370635986, 2.304537057876587], "accuracy": [0.21899352967739105, 0.13974376022815704, 0.10342095047235489, 0.12574297189712524, 0.14212125539779663, 0.09576013684272766], "val_loss": [1.8839111328125, 2.303407669067383, 2.3018181324005127, 2.2065610885620117, 2.3047776222229004, 2.3028972148895264], "val_accuracy": [0.3343333303928375, 0.09933333098888397, 0.10066666454076767, 0.16433332860469818, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 6, 2, 7, 6, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 1, 0, 0, 2, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 56, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 2, 2, 3, 3, 2], [52, 57, 40, 62]], "fitness": -0.29600000381469727, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 14, 7, 7, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.math.add(tf.math.pow(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, sigma), sigma))), beta)))", "other_info": {"loss": [2.6509811878204346, 2.235199213027954, 2.3025946617126465, 2.299252510070801, 2.253361463546753, 2.577418327331543], "accuracy": [0.2160876989364624, 0.14317791163921356, 0.09972262382507324, 0.12389380484819412, 0.19019944965839386, 0.120459645986557], "val_loss": [1.916436791419983, 2.302947521209717, 2.29866886138916, 2.292206287384033, 3.9570207595825195, 2.3071835041046143], "val_accuracy": [0.3109999895095825, 0.09933333098888397, 0.10066666454076767, 0.1679999977350235, 0.21033333241939545, 0.09733333438634872]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [9, 6, 2, 0, 1, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 1, 0, 1, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 56, 33, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 6, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2, 3, 3, 3], [47, 57, 40, 62]], "fitness": -0.2822857201099396, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.6337649822235107, 2.284949541091919, 2.303715467453003, 2.3026154041290283, 2.261538505554199, 2.352695941925049], "accuracy": [0.21833311021327972, 0.13908334076404572, 0.09642054885625839, 0.10817593336105347, 0.16299036145210266, 0.10011887550354004], "val_loss": [1.8411786556243896, 2.3031837940216064, 2.302570343017578, 2.3007147312164307, 2.4578073024749756, 2.303605079650879], "val_accuracy": [0.31833332777023315, 0.09933333098888397, 0.10066666454076767, 0.1756666600704193, 0.23466666042804718, 0.09733333438634872]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 6, 2, 2, 6, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 1, 0, 0, 2, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 41, 16, 78, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 3, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [17, 57, 40, 62]], "fitness": -0.23914285004138947, "mapping_values": [1, 12, 12, 7, 5, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 8, 4, 4, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), grad)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.math.add(tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), beta)))", "other_info": {"loss": [2.301002264022827, 2.2988386154174805, 2.3013436794281006, 2.2962536811828613, 2.293501377105713, 2.290870428085327, 2.288748264312744, 2.28674578666687, 2.2822694778442383, 2.27687931060791, 2.273834466934204, 2.2685940265655518, 2.2634074687957764, 2.260774850845337, 2.254413604736328, 2.2536070346832275, 2.2593870162963867, 2.2904090881347656, 2.377497357362135e+18, 2.9571468830108643], "accuracy": [0.08928807079792023, 0.10236428678035736, 0.09655263274908066, 0.09813763201236725, 0.107647605240345, 0.11596883088350296, 0.11953506618738174, 0.1228371411561966, 0.12772421538829803, 0.13934750854969025, 0.14238542318344116, 0.15070664882659912, 0.14529123902320862, 0.1546691358089447, 0.15361246466636658, 0.15678246319293976, 0.15176330506801605, 0.14132875204086304, 0.11213842034339905, 0.09998679161071777], "val_loss": [2.2982211112976074, 2.296264886856079, 2.2944133281707764, 2.291574001312256, 2.288341760635376, 2.284292221069336, 2.2794766426086426, 2.2745413780212402, 2.268996477127075, 2.2628674507141113, 2.2564587593078613, 2.2498903274536133, 2.2427656650543213, 2.2358264923095703, 2.229067325592041, 2.2250590324401855, 2.2284462451934814, 2.2698326110839844, NaN, 4.121730327606201], "val_accuracy": [0.04899999871850014, 0.05833333358168602, 0.06300000101327896, 0.07533333450555801, 0.08866667002439499, 0.10166666656732559, 0.12300000339746475, 0.13866665959358215, 0.15566666424274445, 0.17000000178813934, 0.18199999630451202, 0.19200000166893005, 0.1979999989271164, 0.20466665923595428, 0.2096666693687439, 0.20266667008399963, 0.19900000095367432, 0.1899999976158142, 0.09933333098888397, 0.09733333438634872]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 6, 4, 0, 1, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 2, 2, 0, 0, 2, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [95, 56, 82, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2, 3, 3, 3], [47, 57, 40, 62]], "fitness": -0.13742856681346893, "mapping_values": [1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 8, 4, 4, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(sigma, tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), beta))", "other_info": {"loss": [2.201371192932129, 1.3916372657616663e+20, 2.309776544570923, 2.306011915206909, 2.3042526245117188, 2.303617000579834], "accuracy": [0.2591467499732971, 0.1418570876121521, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.2593533992767334, 2.311805486679077, 2.306731700897217, 2.3044774532318115, 2.3035085201263428, 2.3030004501342773], "val_accuracy": [0.10199999809265137, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 6, 2, 7, 6, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [39, 56, 49, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [1, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2, 3, 3, 3], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [Infinity, 2.533510684967041, 3.2214901447296143, 5.171339511871338, 7.79923152923584, 10.504765510559082], "accuracy": [0.06353189796209335, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.4384267330169678, 2.7825889587402344, 4.186324119567871, 6.708075046539307, 9.415241241455078, 12.128833770751953], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 6, 2, 7, 6, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [39, 56, 49, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [3, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [2, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2, 3, 3, 3], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 3, 4, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3022518157958984, 2.302464008331299, 2.3031370639801025, 2.3068511486053467, 2.3251399993896484, 2.44149112701416], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3027777671813965, 2.3033785820007324, 2.3054440021514893, 2.3144774436950684, 2.3619565963745117, 2.732818603515625], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 6, 2, 7, 6, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 1, 0, 0, 2, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [39, 56, 49, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [1, 0, 6], [24, 44], [1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2, 3, 3, 3], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07251353561878204, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 6, 2, 7, 3, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 56, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [3, 0, 6], [24, 44], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [51, 8, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 8, 4, 4, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.math.add(tf.math.pow(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.17316074669361115, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 6, 2, 7, 6, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 2, 2, 2, 2, 2, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [95, 56, 82, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 6, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2, 3, 3, 3], [47, 57, 40, 62]], "fitness": -0.09285714477300644, "mapping_values": [1, 8, 8, 4, 4, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 8, 4, 4, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(sigma, tf.math.add(tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), beta)))", "other_info": {"loss": [1230707456.0, 98573934592.0, 733128425472.0, 2397564829696.0, 5823503794176.0, 11080044642304.0, 19299410378752.0, 31138923937792.0, 46102304784384.0, 67501165641728.0, 91086164852736.0, 120609476444160.0], "accuracy": [0.13974376022815704, 0.09919429570436478, 0.09879804402589798, 0.10381719470024109, 0.09919429570436478, 0.1014397069811821, 0.10579843819141388, 0.107647605240345, 0.10619468986988068, 0.10817593336105347, 0.10593052208423615, 0.10447761416435242], "val_loss": [5318159872.0, 121369141248.0, 566578118656.0, 1545159966720.0, 3253934489600.0, 5905802854400.0, 9737756213248.0, 14995105513472.0, 21946192363520.0, 30786675802112.0, 41764857577472.0, 55111640416256.0], "val_accuracy": [0.10833333432674408, 0.09333333373069763, 0.09733333438634872, 0.1106666699051857, 0.12600000202655792, 0.1340000033378601, 0.14033333957195282, 0.13766667246818542, 0.1303333342075348, 0.12433333694934845, 0.11833333224058151, 0.1146666631102562]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 6, 2, 7, 6, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 2, 2, 2, 0, 2, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 56, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [5, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [5, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.04085714370012283, "mapping_values": [1, 2, 2, 1, 1, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3016107082366943, 2.301093101501465, 2.304509162902832, 2.3016955852508545, 2.301567316055298, 2.301623821258545], "accuracy": [0.08849557489156723, 0.0956280529499054, 0.08915598690509796, 0.08730682730674744, 0.09192973375320435, 0.09272222965955734], "val_loss": [2.299954414367676, 2.2999541759490967, 2.2999541759490967, 2.2999541759490967, 2.2999541759490967, 2.2999541759490967], "val_accuracy": [0.04466666653752327, 0.04466666653752327, 0.04466666653752327, 0.04466666653752327, 0.04466666653752327, 0.04466666653752327]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [9, 6, 1, 7, 2, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [1, 1, 0, 0, 2, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 41, 16, 78, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [17, 57, 40, 62]], "fitness": -0.04085714370012283, "mapping_values": [1, 1, 1, 1, 0, 1, 6, 6, 3, 3, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), beta)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3016107082366943, 2.301093101501465, 2.304509401321411, 2.3016958236694336, 2.301567316055298, 2.301624059677124], "accuracy": [0.08849557489156723, 0.0956280529499054, 0.08915598690509796, 0.08730682730674744, 0.09192973375320435, 0.09272222965955734], "val_loss": [2.299954414367676, 2.299954414367676, 2.299954414367676, 2.299954414367676, 2.299954414367676, 2.299954414367676], "val_accuracy": [0.04466666653752327, 0.04466666653752327, 0.04466666653752327, 0.04466666653752327, 0.04466666653752327, 0.04466666653752327]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 6, 2, 2, 4, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 1, 0, 0, 1, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 41, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 0, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [36, 57, 40, 62]], "fitness": -0.04085714370012283, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3016107082366943, 2.301093101501465, 2.304509401321411, 2.3016958236694336, 2.301567316055298, 2.301624059677124], "accuracy": [0.08849557489156723, 0.0956280529499054, 0.08915598690509796, 0.08730682730674744, 0.09192973375320435, 0.09272222965955734], "val_loss": [2.299954414367676, 2.299954414367676, 2.299954414367676, 2.299954414367676, 2.299954414367676, 2.299954414367676], "val_accuracy": [0.04466666653752327, 0.04466666653752327, 0.04466666653752327, 0.04466666653752327, 0.04466666653752327, 0.04466666653752327]}}]