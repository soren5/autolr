[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [1, 2, 2, 4, 1, 5, 1, 3, 6, 0, 2, 9, 0, 9, 8, 6, 7], [3, 3, 3, 3, 0, 2, 2, 4, 2, 0], [52, 47, 0, 81, 53, 45], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.8397142887115479, "mapping_values": [1, 1, 1, 0, 1, 0, 27, 27, 17, 10, 4, 3, 2, 2, 0, 0, 4, 2, 2, 1], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.square(tf.math.subtract(tf.math.multiply(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.math.negative(tf.math.add(grad, tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), grad)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.sqrt(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))))), beta)), tf.math.add(beta, beta))), tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, beta))), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1212218221246983, 1.6994430676206953, 1.5189984392622253, 1.1505843672250413, 0.8164815739350249, 0.7796730810640794, 0.7212070860347539, 0.6819915324626676, 0.6417115651825872, 0.631974453671639, 0.601682904374094, 0.5858915607690842, 0.5759805510576611, 0.5548518788009948, 0.5625679008224779, 0.5232075100616772, 0.5007890315812261, 0.5191954767715032, 0.49840619100823363, 0.4665185531502654, 0.47111859258297273, 0.45720551949544996, 0.4713213618924951, 0.43453937528029785, 0.44589764999675713, 0.44053122511849724, 0.4375554288398824, 0.4330524223284746, 0.4045302476888918, 0.4080415961961579, 0.4057255455208744, 0.3813318079331327, 0.3901934314948724, 0.3774461967282843, 0.36925857250307215, 0.3758427261274882, 0.36248373421207475, 0.36464097865615713, 0.35155225888912184, 0.34290302968484976, 0.36634486489733054], "accuracy": [0.2985074520111084, 0.4714040458202362, 0.47866860032081604, 0.5801082849502563, 0.6929071545600891, 0.7077004313468933, 0.7206445932388306, 0.7294940948486328, 0.755118191242218, 0.7568352818489075, 0.7668735980987549, 0.7738739848136902, 0.7832518815994263, 0.7905164361000061, 0.7889314293861389, 0.8043851256370544, 0.8133667707443237, 0.8049134612083435, 0.8072909712791443, 0.8248580098152161, 0.8257825970649719, 0.824329674243927, 0.8260467648506165, 0.8376700282096863, 0.8370096683502197, 0.8348963260650635, 0.833179235458374, 0.8385946154594421, 0.8498216867446899, 0.8494254350662231, 0.8453308939933777, 0.858671247959137, 0.8512746095657349, 0.860652506351471, 0.8602562546730042, 0.8577466607093811, 0.8615770936012268, 0.8623695969581604, 0.8669924736022949, 0.8684453964233398, 0.8627657890319824], "val_loss": [1.3016854694911413, 1.8634215763636999, 0.9335152762276786, 0.6921178443091256, 0.6426669529506138, 0.6101711307253156, 0.6128714765821185, 0.5306655849729266, 0.5327338831765311, 0.4977427210126604, 0.4927042382104056, 0.44807732105255127, 0.45822370052337646, 0.5029220240456718, 0.4263890470777239, 0.41409418412617277, 0.5183481829507011, 0.44981370653424946, 0.4282902904919216, 0.4183208431516375, 0.40323835611343384, 0.4382883480616978, 0.4017329045704433, 0.3738149574824742, 0.43030883584703716, 0.4068943091801235, 0.3982022489820208, 0.3637808561325073, 0.37468994515282766, 0.3665985805647714, 0.3596220186778477, 0.37634039776665823, 0.35425656182425364, 0.3442023822239467, 0.3585588335990906, 0.34168065445763723, 0.34481786830084665, 0.3451678582600185, 0.3445876581328256, 0.34310161215918406, 0.3349604180880955], "val_accuracy": [0.4623333215713501, 0.37466666102409363, 0.5609999895095825, 0.6856666803359985, 0.7080000042915344, 0.7253333330154419, 0.6970000267028809, 0.765333354473114, 0.7463333606719971, 0.7766666412353516, 0.7753333449363708, 0.8106666803359985, 0.8043333292007446, 0.7693333625793457, 0.8116666674613953, 0.8180000185966492, 0.7616666555404663, 0.8026666641235352, 0.8040000200271606, 0.8006666898727417, 0.8256666660308838, 0.8113333582878113, 0.8193333148956299, 0.8343333601951599, 0.8199999928474426, 0.8166666626930237, 0.8299999833106995, 0.8433333039283752, 0.8399999737739563, 0.843666672706604, 0.8396666646003723, 0.8383333086967468, 0.8483333587646484, 0.8536666631698608, 0.8399999737739563, 0.856333315372467, 0.8510000109672546, 0.8503333330154419, 0.8486666679382324, 0.8519999980926514, 0.8556666374206543]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [2, 2, 2, 0, 1, 5, 1, 3, 2, 0, 2, 9, 0, 6, 8, 6], [3, 3, 3, 1, 1, 2, 1, 4, 2, 2], [52, 47, 0, 81, 53, 45], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.8274285793304443, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 13, 8, 1, 3, 3, 2, 1, 0, 4, 2, 2, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(grad, tf.math.add(beta, tf.math.negative(grad)))), alpha))), alpha)))), beta), tf.math.add(tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), alpha))), tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.121079889759018, 1.7117916067058163, 1.8704491054629133, 1.2094841911304328, 0.940363606929842, 0.8490989791907655, 0.7729878633124024, 0.735520709184466, 0.705825749098302, 0.6465956880557869, 0.6299227868025848, 0.634824646328576, 0.5789072756376155, 0.5941688155044639, 0.5758386703451406, 0.5449319044990373, 0.5320351855188958, 0.5342597873093445, 0.4962770395495589, 0.4981988319206263, 0.4767561430519189, 0.48435025338121396, 0.48002107176310227, 0.4727509925669651, 0.45902014000698277, 0.4401563840606162], "accuracy": [0.29863953590393066, 0.4640074074268341, 0.3520010709762573, 0.5588429570198059, 0.6495839357376099, 0.678642213344574, 0.7063795924186707, 0.7074362635612488, 0.7306828498840332, 0.7515519857406616, 0.7581561207771301, 0.7549861073493958, 0.7817989587783813, 0.7777044177055359, 0.7823272943496704, 0.7944789528846741, 0.7979130744934082, 0.796328067779541, 0.8168009519577026, 0.8150838613510132, 0.8269713521003723, 0.817461371421814, 0.8226125836372375, 0.8157442808151245, 0.8289526104927063, 0.8302733898162842], "val_loss": [1.3004390171595983, 1.8719566208975655, 1.1266163757869176, 0.7290383577346802, 0.6862069027764457, 0.6777851751872471, 0.5922405038561139, 0.6444723435810634, 0.5327496358326503, 0.5298405374799456, 0.47122539792742046, 0.4674801656178066, 0.4768658195223127, 0.48191256182534353, 0.4494478702545166, 0.4219141347067697, 0.5579339776720319, 0.48168078490665983, 0.44250002929142546, 0.39820702586855206, 0.3983493958200727, 0.4343764100755964, 0.4404735735484532, 0.40201765298843384, 0.41528381620134625, 0.40525361469813753], "val_accuracy": [0.4620000123977661, 0.195333331823349, 0.49033331871032715, 0.6883333325386047, 0.6943333148956299, 0.703000009059906, 0.7120000123977661, 0.7009999752044678, 0.7493333220481873, 0.7633333206176758, 0.7853333353996277, 0.7923333048820496, 0.7940000295639038, 0.7839999794960022, 0.8080000281333923, 0.8106666803359985, 0.7396666407585144, 0.7973333597183228, 0.7956666946411133, 0.8336666822433472, 0.8339999914169312, 0.812666654586792, 0.8036666512489319, 0.8080000281333923, 0.8246666789054871, 0.8183333277702332]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [2, 2, 2, 0, 1, 5, 1, 3, 2, 0, 2, 9, 0, 6, 8, 6], [3, 3, 3, 1, 0, 2, 2, 4, 2, 2], [52, 47, 0, 81, 53, 45], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.8134285807609558, "mapping_values": [1, 1, 1, 0, 1, 0, 23, 23, 14, 9, 2, 3, 3, 2, 1, 0, 4, 2, 2, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(grad, tf.math.negative(grad))), alpha))), tf.math.add(beta, tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(beta, beta)))), tf.math.add(beta, grad))), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.121154956845339, 1.6735937213223797, 1.3296516742909101, 0.9797212793181176, 0.8402551480839202, 0.7877732738212839, 0.7580814396606035, 0.6954793825188585, 0.6566497640303648, 0.6653819765869526, 0.6005459951293184, 0.6183565339124466, 0.5644621242621571, 0.567599148199842, 0.5525878653503002, 0.5374890440616625, 0.5063873616428172, 0.5196979656242786, 0.5050256409271597, 0.48222397244397, 0.472528526693555, 0.4571656544706715, 0.46811959798136693, 0.43130678736365247, 0.46338107839094855, 0.42735055170873565, 0.43452045027810693, 0.4389664194154355, 0.4142784715887578, 0.41393896818885306, 0.3924552441399095, 0.39294988589673513, 0.3914033783984269, 0.3845165758801489, 0.36859493468337134, 0.38797516822657485, 0.3689518703792105, 0.3590375888522401, 0.3466742765618479, 0.3520434817751684, 0.3760486267277782, 0.3170565728419461, 0.3402577229045905, 0.3307831985736961, 0.31847068798099576, 0.3057252132755623], "accuracy": [0.29877161979675293, 0.4753665328025818, 0.5414080023765564, 0.6387531161308289, 0.6826046705245972, 0.6946242451667786, 0.7084929347038269, 0.7322678565979004, 0.7514199018478394, 0.741909921169281, 0.7707040309906006, 0.7697794437408447, 0.7877426743507385, 0.7841764688491821, 0.7857614755630493, 0.7987055778503418, 0.8132346868515015, 0.7987055778503418, 0.8083476424217224, 0.8153480291366577, 0.82683926820755, 0.8251221776008606, 0.8272355198860168, 0.8401796221733093, 0.8236692547798157, 0.844010055065155, 0.837537944316864, 0.8341038227081299, 0.8422929644584656, 0.8479725122451782, 0.8514066934585571, 0.8531237840652466, 0.8549728989601135, 0.8581429123878479, 0.8631620407104492, 0.8516708612442017, 0.8584070801734924, 0.8677849769592285, 0.869502067565918, 0.8663320541381836, 0.8574824929237366, 0.884691596031189, 0.8733324408531189, 0.8775591254234314, 0.8829745054244995, 0.885219931602478], "val_loss": [1.3010964053017753, 1.644258873803275, 0.902573789869036, 0.7182765177318028, 0.6110672950744629, 0.6498666150229317, 0.5424872466496059, 0.5732043981552124, 0.6153092043740409, 0.48690102781568256, 0.4689171995435442, 0.45375217710222515, 0.49565017223358154, 0.46582426343645367, 0.4385543039866856, 0.421012214251927, 0.460183961050851, 0.48458012512751986, 0.4436833347593035, 0.4022250090326582, 0.3983951807022095, 0.40913091387067524, 0.41416326590946745, 0.4490409067698887, 0.40508452483585905, 0.37141850164958407, 0.40211963653564453, 0.36639913490840365, 0.38587709835597445, 0.3607729247638157, 0.37368237120764597, 0.38724556991032194, 0.35706121580941336, 0.34823123046330046, 0.3514768992151533, 0.38028476919446674, 0.3470433098929269, 0.3430172290120806, 0.35564195258276804, 0.36932261501039776, 0.3369902116911752, 0.3826516015189035, 0.354955860546657, 0.3391002927507673, 0.32336407048361643, 0.3315141201019287], "val_accuracy": [0.46266666054725647, 0.4673333466053009, 0.5979999899864197, 0.6660000085830688, 0.737666666507721, 0.706333339214325, 0.7576666474342346, 0.7250000238418579, 0.70333331823349, 0.7820000052452087, 0.7889999747276306, 0.7973333597183228, 0.7733333110809326, 0.7943333387374878, 0.8059999942779541, 0.8176666498184204, 0.796999990940094, 0.7900000214576721, 0.7986666560173035, 0.8193333148956299, 0.8263333439826965, 0.8203333616256714, 0.8206666707992554, 0.7910000085830688, 0.8243333101272583, 0.8346666693687439, 0.8246666789054871, 0.8389999866485596, 0.8336666822433472, 0.8486666679382324, 0.8356666564941406, 0.8366666436195374, 0.8496666550636292, 0.8479999899864197, 0.843999981880188, 0.8309999704360962, 0.8556666374206543, 0.8553333282470703, 0.847000002861023, 0.8413333296775818, 0.8613333106040955, 0.8259999752044678, 0.8486666679382324, 0.859333336353302, 0.859666645526886, 0.8533333539962769]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1], [4, 3, 9, 2, 6, 8, 1, 3, 2, 0, 8, 9], [3, 1, 3, 1, 2, 3, 2, 2, 2], [68, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [29, 57]], "fitness": -0.7771428823471069, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, grad), tf.math.multiply(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2899001365513487, 2.2569421785949415, 2.2162035946612346, 2.156897168165153, 2.0745496898515587, 1.9549327597972692, 1.8034495481993182, 1.6406198176945899, 1.4940073500219953, 1.385286522516249, 1.2862420438255822, 1.2137920317349418, 1.1615371734805315, 1.1002584841462049, 1.0601145956478792, 1.025774817740078, 0.987353787587823, 0.963838925120412, 0.9411995878560967, 0.9186077036987977, 0.9023950705045187, 0.8830092604197153, 0.8811350054728939, 0.856322351794406, 0.8512461187659695, 0.8407276877007858, 0.8230577644072409, 0.821847455667829, 0.8092046001205954, 0.7997067853554507, 0.7878987137447212, 0.7878514446319134, 0.772665667960578, 0.771600488918238, 0.7636476472982594, 0.746107925450435, 0.7504789710218062, 0.7489390184519991, 0.738068467346338, 0.7404940512674423, 0.7327005214159593, 0.7348680310733661, 0.7234049632785153, 0.7159320712089539, 0.7160576156511157], "accuracy": [0.12389380484819412, 0.20776647329330444, 0.284110426902771, 0.3471139967441559, 0.38422930240631104, 0.419759601354599, 0.4583278298377991, 0.48012152314186096, 0.5135384798049927, 0.5410117506980896, 0.5622771382331848, 0.5799762010574341, 0.5954299569129944, 0.6129969358444214, 0.6320168972015381, 0.6373002529144287, 0.6520935297012329, 0.6561880707740784, 0.6643772125244141, 0.6732267737388611, 0.6775855422019958, 0.6869634389877319, 0.6856426000595093, 0.6906617283821106, 0.6942279934883118, 0.7003037929534912, 0.6975300312042236, 0.7041342258453369, 0.7028133869171143, 0.705058753490448, 0.7099458575248718, 0.7145687341690063, 0.7180029153823853, 0.715889573097229, 0.7213049530982971, 0.724739134311676, 0.7228899598121643, 0.7197200059890747, 0.7296261787414551, 0.7276449799537659, 0.7264562249183655, 0.7276449799537659, 0.7323999404907227, 0.7317395210266113, 0.7387399077415466], "val_loss": [1.9411155155726842, 1.9073078291756767, 1.8615335055759974, 1.7940818241664342, 1.6961515971592493, 1.5628883838653564, 1.4042574678148543, 1.2434497560773576, 1.1063434055873327, 1.0054526329040527, 0.9285002776554653, 0.8698583330426898, 0.8232920340129307, 0.786469714982169, 0.7565017087118966, 0.7333837406975883, 0.7127599034990583, 0.697221211024693, 0.6788726874760219, 0.6687479019165039, 0.6573425361088344, 0.6471011298043388, 0.6380588156836373, 0.6266065665653774, 0.6212544952120099, 0.6139408690588815, 0.6061858109065464, 0.6003596612385341, 0.5952436242784772, 0.5902131114687238, 0.5852011442184448, 0.5811272008078439, 0.5751769712993077, 0.5712017502103534, 0.5662673882075718, 0.563691224370684, 0.5595942905970982, 0.5574727569307599, 0.5511813504355294, 0.5523965358734131, 0.5464973620006016, 0.5498804875782558, 0.5437044416155133, 0.537377119064331, 0.5353753226143974], "val_accuracy": [0.2879999876022339, 0.3919999897480011, 0.44733333587646484, 0.47566667199134827, 0.5286666750907898, 0.5569999814033508, 0.5736666917800903, 0.6016666889190674, 0.6460000276565552, 0.6616666913032532, 0.6679999828338623, 0.6740000247955322, 0.6869999766349792, 0.6913333535194397, 0.6933333277702332, 0.70333331823349, 0.7036666870117188, 0.7179999947547913, 0.718666672706604, 0.7196666598320007, 0.718999981880188, 0.7233333587646484, 0.7329999804496765, 0.7363333106040955, 0.7289999723434448, 0.7319999933242798, 0.7413333058357239, 0.7429999709129333, 0.7459999918937683, 0.7516666650772095, 0.7509999871253967, 0.746666669845581, 0.7540000081062317, 0.7546666860580444, 0.7596666812896729, 0.7513333559036255, 0.7576666474342346, 0.7616666555404663, 0.7620000243186951, 0.7666666507720947, 0.7646666765213013, 0.7570000290870667, 0.7663333415985107, 0.7663333415985107, 0.7666666507720947]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 2, 2, 3, 1, 5, 1, 3, 2, 0, 2, 9, 0, 6, 8, 6], [3, 3, 3, 1, 0, 3, 2, 2, 2, 2], [52, 47, 0, 81, 53, 45], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.7645714282989502, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 11, 10, 1, 3, 3, 2, 1, 0, 4, 2, 2, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.square(tf.math.subtract(tf.math.add(beta, grad), tf.math.multiply(grad, tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad))), beta))), tf.math.negative(tf.math.add(beta, beta)))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2401226620868746, 1.9218481036382595, 1.4217431122490507, 1.1489393212114736, 0.9889271141767596, 0.8748275722258788, 0.8728949814550692, 0.834809782671623, 0.7351410690788044, 0.7319810642636825, 0.6523759997972739, 0.6485560686203152, 0.6775414385988948, 0.6380529348655951, 0.6142542520770465], "accuracy": [0.2779025137424469, 0.3726060092449188, 0.5112931132316589, 0.5805045366287231, 0.6473385095596313, 0.6728305220603943, 0.6789063811302185, 0.6936996579170227, 0.7273808121681213, 0.726192057132721, 0.7504953145980835, 0.7621186375617981, 0.7515519857406616, 0.7582882046699524, 0.7738739848136902], "val_loss": [1.7014421735491072, 1.5302298750196184, 1.029878752572196, 0.9250828538622174, 0.6732442719595773, 0.8157250540597099, 0.7849503585270473, 0.5621861730303083, 0.6914010047912598, 0.5217804227556501, 0.5150931392397199, 0.5256409304482597, 0.5055697815758842, 0.5634609460830688, 0.5795630897794452], "val_accuracy": [0.37566667795181274, 0.4323333203792572, 0.5793333053588867, 0.6146666407585144, 0.703000009059906, 0.628000020980835, 0.6803333163261414, 0.7516666650772095, 0.6946666836738586, 0.7639999985694885, 0.7613333463668823, 0.7636666893959045, 0.762333333492279, 0.7269999980926514, 0.7266666889190674]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [2, 2, 2, 2, 6, 5, 1, 3, 2, 0, 8, 9], [3, 1, 3, 1, 0, 2, 2, 2, 2], [45, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.3522857129573822, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 7, 7, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.square(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))))), tf.math.subtract(beta, beta)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.295727227672909, 2.2295746952236257, 2.3147846143700113, 2.2988142403849614, 2.677384360433963, 2.30706692557561], "accuracy": [0.2086910605430603, 0.18557654321193695, 0.18399155139923096, 0.12429005652666092, 0.14515915513038635, 0.09840179979801178], "val_loss": [1.586273091179984, 1.9334474291120256, 1.9730161939348494, 1.931145259312221, 1.9796390533447266, 1.9740352630615234], "val_accuracy": [0.3529999852180481, 0.20333333313465118, 0.19499999284744263, 0.1446666717529297, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1], [5, 8, 8, 0, 6, 5, 1, 2, 2, 0, 8, 9], [3, 1, 3, 1, 0, 2, 2], [3, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10457143187522888, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.369543002092953, 2.3180999185871753, 2.352144576208608, 2.335892461939983, 2.3154780153648145, 2.3369894632652626], "accuracy": [0.26720380783081055, 0.12798838317394257, 0.09998679161071777, 0.10236428678035736, 0.10130762308835983, 0.09998679161071777], "val_loss": [1.9803400039672852, 1.9853230203901018, 2.000319685254778, 1.9880851336887904, 2.000918524605887, 1.9842254093715124], "val_accuracy": [0.11933333426713943, 0.10300000011920929, 0.09933333098888397, 0.09799999743700027, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0], [2, 8, 2, 0, 6, 5, 1, 2, 2, 0, 8, 9], [3, 1, 3, 1, 0, 2, 2], [57, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1], [5, 8, 8, 0, 6, 5, 1, 2, 2, 0, 8, 9], [5, 1, 3, 1, 0, 2, 2], [3, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 3, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0], [5, 8, 8, 0, 6, 5, 1, 2, 2, 0, 8, 9], [3, 3, 3, 1, 0, 2, 2, 4, 2, 2], [57, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 13, 7, 6, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, sigma), sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], [2, 2, 2, 0, 1, 5, 1, 3, 2, 0, 2, 9, 0, 6, 8, 6], [3, 3, 3, 1, 0, 2, 2, 4, 2, 2], [52, 47, 0, 81, 53, 45], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [0, 1, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 9, 8, 1, 3, 3, 2, 1, 0, 1, 0, 1, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.negative(grad), tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)), tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, grad)))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302678513851274, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09998679161071777, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1], [4, 3, 6, 2, 9, 8, 1, 4, 2, 0, 8, 9], [3, 1, 3, 1, 2, 2, 2, 4], [3, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, grad)), tf.math.add(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3029860670162527, 2.302925686621474, 2.30292102012337, 2.3030114772218706, 2.303029840176116, 2.303049845041112, 2.3030525663068753, 2.302925372183551, 2.30299876822992], "accuracy": [0.0944393053650856, 0.09760929644107819, 0.09774138033390045, 0.0952318087220192, 0.09087307006120682, 0.09219389408826828, 0.09259014576673508, 0.09509972482919693, 0.09932637959718704], "val_loss": [1.9736808368137904, 1.9736764771597726, 1.9736643518720354, 1.9736640793936593, 1.973698684147426, 1.9736463682992118, 1.973708016531808, 1.9737554277692522, 1.9736209596906389], "val_accuracy": [0.09966666996479034, 0.10066666454076767, 0.09799999743700027, 0.10366666316986084, 0.09966666996479034, 0.09799999743700027, 0.09799999743700027, 0.1003333330154419, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0], [6, 8, 6, 0, 2, 5, 0, 2, 2, 0, 8, 9], [3, 1, 3, 1, 0, 2, 2], [57, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 9, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 7, 4, 0, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.negative(tf.math.add(tf.math.square(tf.math.add(beta, grad)), tf.math.negative(alpha))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.3029860355252243, 2.302925686621474, 2.3029209571413123, 2.3030115402039284, 2.3030298626292196, 2.3030497505680256, 2.303052597797904, 2.3029253406925223, 2.3029987997209487], "accuracy": [0.0944393053650856, 0.09760929644107819, 0.09774138033390045, 0.0952318087220192, 0.09087307006120682, 0.09219389408826828, 0.09259014576673508, 0.09509972482919693, 0.09932637959718704], "val_loss": [1.9736808368137904, 1.9736764771597726, 1.9736642837524414, 1.9736640793936593, 1.973698684147426, 1.9736463682992118, 1.9737080846514021, 1.9737554277692522, 1.9736209596906389], "val_accuracy": [0.09966666996479034, 0.10066666454076767, 0.09799999743700027, 0.10366666316986084, 0.09966666996479034, 0.09799999743700027, 0.09799999743700027, 0.1003333330154419, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1], [6, 9, 8, 0, 2, 5, 1, 2, 2, 0, 8, 9], [3, 1, 3, 1, 0, 2, 2], [3, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 7, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [2, 2, 2, 9, 1, 5, 1, 3, 9, 0, 2, 9, 5, 6, 8, 6], [3, 3, 3, 1, 0, 2, 2, 4, 2, 2], [72, 47, 0, 81, 53, 45], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [1, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [2, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 10, 5, 3, 4, 3, 2, 1, 0, 3, 1, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.multiply(tf.math.add(beta, grad), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), grad))), tf.math.negative(grad)))), alpha)), tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3023501539337414, 2.3023422993153724, 2.302834673958243, 2.305033901190918, 2.3173887326559606, 2.406754343091788], "accuracy": [0.10355303436517715, 0.1026284471154213, 0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973769051688058, 1.9740453447614397, 1.9750915254865373, 1.9799878937857491, 2.008139337812151, 2.2755765233721053], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1], [4, 8, 8, 0, 6, 5, 1, 2, 2, 0, 8, 9], [3, 1, 3, 1, 0, 2, 2], [3, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 0, 4, 2, 1, 2, 3], [1, 3, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 3, 2, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(alpha, sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0], [6, 8, 6, 0, 2, 5, 1, 2, 2, 0, 8, 9], [3, 1, 3, 1, 0, 2, 2], [57, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [3, 2, 0, 1, 3, 3], [75, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 1, 1, 0, 0, 0, 0, 13, 7, 6, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.negative(tf.math.add(tf.math.square(tf.math.add(beta, grad)), tf.math.subtract(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.negative(tf.math.pow(tf.math.add(beta, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, sigma), sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0], [6, 8, 6, 0, 2, 5, 1, 2, 2, 0, 8, 9], [2, 1, 3, 1, 0, 2, 2], [57, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 4, 2, 1, 2, 3], [2, 0, 0, 1, 3, 3], [10, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 5, 5, 4, 1, 1, 12, 12, 7, 5, 1, 1, 0, 0, 0, 0, 8, 4, 4, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.negative(alpha))))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))), tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.negative(tf.math.add(tf.math.square(tf.math.add(beta, grad)), tf.math.subtract(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(beta, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [2.3033286785137825, 2.3033044345154345, 2.3038546429365665, 2.302307721378466, 2.3030549448872635, 2.3032001169870053], "accuracy": [0.09008057415485382, 0.09311848133802414, 0.08506141602993011, 0.09351472556591034, 0.09272222965955734, 0.0866464152932167], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1], [6, 3, 2, 4, 6, 8, 1, 3, 2, 0, 8, 9], [3, 1, 3, 1, 0, 1, 1, 3, 0], [3, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 19, 19, 10, 9, 2, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, alpha), tf.math.pow(tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.subtract(alpha, tf.math.multiply(tf.math.add(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha)), tf.math.add(beta, alpha)))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.negative(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3033286785137825, 2.3033044345154345, 2.3038546429365665, 2.302307721378466, 2.3030549448872635, 2.3032001169870053], "accuracy": [0.09008057415485382, 0.09311848133802414, 0.08506141602993011, 0.09351472556591034, 0.09272222965955734, 0.0866464152932167], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1], [5, 8, 8, 0, 6, 5, 1, 2, 2, 0, 8, 9], [3, 1, 3, 1, 0, 2, 2], [57, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 3, 0, 1, 3, 3], [48, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, sigma))", "other_info": {"loss": [2.3033286785137825, 2.3033044345154345, 2.3038546429365665, 2.302307721378466, 2.3030549448872635, 2.3032001169870053], "accuracy": [0.09008057415485382, 0.09311848133802414, 0.08506141602993011, 0.09351472556591034, 0.09272222965955734, 0.0866464152932167], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]