[{"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [7, 4, 8, 8, 8, 1, 7, 0, 3, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 0, 4], [2, 2, 2, 2, 1, 1, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [82, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7985714077949524, "mapping_values": [1, 39, 39, 25, 14, 5, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(grad))), tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(tf.math.add(tf.math.add(alpha, grad), grad), tf.math.negative(grad))))), tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.negative(alpha)), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))))))), grad))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2919254728107403, 2.2648724142932903, 2.2359189284932675, 2.195373799775365, 2.1445505264460087, 2.068889831240151, 1.9754741170922478, 1.8518370273736457, 1.7273763159656286, 1.6041878308161548, 1.4774412729516242, 1.3879295458111545, 1.3121763894019771, 1.2344392713318253, 1.1818604653206926, 1.1349667240332273, 1.0965480496933464, 1.0777122347251913, 1.0357641204000858, 1.0178369471835045, 0.9720401072845388, 0.957115543855416, 0.9423156286652661, 0.932302725911849, 0.920771211334554, 0.8977169944247738, 0.8820673799895812, 0.8675157815048707, 0.857642147204407, 0.858684920623806, 0.8430844669832671, 0.8317703550691067, 0.8295667913958004, 0.8195204621591997, 0.812938657466368, 0.7964686724125921, 0.7967842250546727, 0.7889058140164684, 0.7886911046865547, 0.7825614534600882, 0.7809197912599117, 0.7589717881790699, 0.7680253718570397, 0.7576382660972854, 0.7558070799189945, 0.7434604293666165, 0.7500648085136675, 0.7384930281764434, 0.7389884549455714, 0.7281229774304164, 0.7321915149594248, 0.7256094452617128, 0.7220141388610716, 0.7121954374797687, 0.7133808406258083, 0.6999116015078416, 0.7095410620862341, 0.7093522727387126, 0.7030603394626768, 0.6956273412125032, 0.6876731911717688, 0.6865199863902802, 0.6909871686089072, 0.6930386469805355, 0.6814973132642757, 0.6837783233915669, 0.6759444351886572, 0.6700704063422581, 0.6705915473235234, 0.6742471022187695, 0.6635063848538311, 0.6599515723734957, 0.6614221797847887, 0.6606346250698315, 0.6498544877861249, 0.6559048919488158, 0.6531413757506614, 0.652584815817329, 0.6409533393853817, 0.6584932199716096, 0.6469544363437533, 0.6435932631915224, 0.6498233485672185, 0.6440622728372594], "accuracy": [0.120459645986557, 0.18293488025665283, 0.2565050721168518, 0.3163386583328247, 0.3517369031906128, 0.3883238732814789, 0.41328755021095276, 0.4461762011051178, 0.46546030044555664, 0.49068814516067505, 0.5233126282691956, 0.5361247062683105, 0.5577862858772278, 0.5753533244132996, 0.5914674401283264, 0.6034870147705078, 0.6173557043075562, 0.620261549949646, 0.6409985423088074, 0.6318848133087158, 0.6560559868812561, 0.6577730774879456, 0.6613393425941467, 0.6618676781654358, 0.667811393737793, 0.6753401160240173, 0.6882842183113098, 0.6841896772384644, 0.6930392384529114, 0.6922467350959778, 0.7005679607391357, 0.6954167485237122, 0.6971337795257568, 0.700171709060669, 0.7016246318817139, 0.7148329019546509, 0.7123233675956726, 0.713379979133606, 0.7091533541679382, 0.7168141603469849, 0.7201162576675415, 0.7240787148475647, 0.7161537408828735, 0.7269845604896545, 0.7226257920265198, 0.7304186820983887, 0.7325320243835449, 0.7309470176696777, 0.7224937081336975, 0.7325320243835449, 0.7312111854553223, 0.7289658188819885, 0.7272487282752991, 0.7351737022399902, 0.737022876739502, 0.7412495017051697, 0.7371549606323242, 0.7362303733825684, 0.7458723783493042, 0.7430986762046814, 0.7401928305625916, 0.7446836829185486, 0.7405890822410583, 0.7403249144554138, 0.7454761862754822, 0.7474573850631714, 0.7448157668113708, 0.7523444890975952, 0.7494386434555054, 0.7489103078842163, 0.7516840696334839, 0.7523444890975952, 0.7514199018478394, 0.7490423917770386, 0.7565711140632629, 0.7514199018478394, 0.755118191242218, 0.7528728246688843, 0.7578919529914856, 0.7524765729904175, 0.7609298825263977, 0.7650244235992432, 0.7528728246688843, 0.7572315335273743], "val_loss": [1.9468023436410087, 1.9205820901053292, 1.8881344114031111, 1.8443379402160645, 1.7848076820373535, 1.703122854232788, 1.5979909556252616, 1.4723637785230363, 1.3402987207685197, 1.2155452796391077, 1.1068846498216902, 1.0195489951542445, 0.9511885302407401, 0.8963724885668073, 0.8522130932126727, 0.8161138125828334, 0.786846467426845, 0.7649318490709577, 0.7421441418784005, 0.7264126028333392, 0.7090250423976353, 0.6936789921351841, 0.6812416996274676, 0.6720088379723685, 0.6620056118283953, 0.6518192291259766, 0.6440156868525914, 0.6370145082473755, 0.6297180652618408, 0.6221622398921421, 0.6153062241418021, 0.6102531467165265, 0.6060232945850917, 0.600858177457537, 0.5957858732768467, 0.5912212984902518, 0.5879451717649188, 0.5826809746878487, 0.5798456839152745, 0.5753366947174072, 0.5715518508638654, 0.5681729487010411, 0.565771085875375, 0.5625592810767037, 0.5590743507657733, 0.5567588124956403, 0.5539416755948748, 0.552093642098563, 0.548637866973877, 0.5466417755399432, 0.5437943254198346, 0.5416015386581421, 0.5387608323778424, 0.5395323038101196, 0.5338905709130424, 0.5332425321851458, 0.5310380458831787, 0.5291458879198346, 0.5266493899481637, 0.525870680809021, 0.5228091478347778, 0.519531215940203, 0.5183662176132202, 0.5171724387577602, 0.5169249432427543, 0.5140010799680438, 0.5138051169259208, 0.5102112122944423, 0.5096701213291713, 0.5090646573475429, 0.5064663716724941, 0.5057426691055298, 0.5047673157283238, 0.5030140025275094, 0.5017761843545097, 0.5012531791414533, 0.49931338855198454, 0.4976857900619507, 0.49815891470227924, 0.49660745688847135, 0.49612859317234587, 0.4960577147347586, 0.4913746288844517, 0.49126849855695454], "val_accuracy": [0.23466666042804718, 0.36766666173934937, 0.41200000047683716, 0.445333331823349, 0.4909999966621399, 0.5306666493415833, 0.5529999732971191, 0.5713333487510681, 0.5776666402816772, 0.6053333282470703, 0.6323333382606506, 0.6476666927337646, 0.6666666865348816, 0.6736666560173035, 0.6769999861717224, 0.6856666803359985, 0.6933333277702332, 0.6973333358764648, 0.7043333053588867, 0.7009999752044678, 0.7036666870117188, 0.7193333506584167, 0.7170000076293945, 0.721666693687439, 0.7223333120346069, 0.7276666760444641, 0.7246666550636292, 0.731333315372467, 0.7319999933242798, 0.734000027179718, 0.737333357334137, 0.7386666536331177, 0.7426666617393494, 0.7440000176429749, 0.7453333139419556, 0.7463333606719971, 0.746999979019165, 0.7490000128746033, 0.7563333511352539, 0.753000020980835, 0.7523333430290222, 0.7580000162124634, 0.7586666941642761, 0.7576666474342346, 0.7609999775886536, 0.7616666555404663, 0.7590000033378601, 0.7606666684150696, 0.7663333415985107, 0.7649999856948853, 0.768666684627533, 0.7636666893959045, 0.7666666507720947, 0.765333354473114, 0.7689999938011169, 0.7689999938011169, 0.7689999938011169, 0.7726666927337646, 0.7723333239555359, 0.7716666460037231, 0.7713333368301392, 0.7763333320617676, 0.7730000019073486, 0.7760000228881836, 0.7730000019073486, 0.7789999842643738, 0.7746666669845581, 0.777999997138977, 0.7760000228881836, 0.7789999842643738, 0.7796666622161865, 0.7799999713897705, 0.778333306312561, 0.7803333401679993, 0.7826666831970215, 0.7796666622161865, 0.7786666750907898, 0.7826666831970215, 0.7886666655540466, 0.7833333611488342, 0.781333327293396, 0.7820000052452087, 0.7886666655540466, 0.7863333225250244]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [5, 4, 8, 8, 8, 0, 7, 1, 1, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 9, 4], [1, 2, 2, 1, 1, 2, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7985714077949524, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.pow(alpha, tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2919254728107403, 2.264872513238103, 2.2359188970022386, 2.1953735794326366, 2.1445509896790425, 2.068886511455894, 1.9754671222262017, 1.8518330735332693, 1.727378859700717, 1.604198839166586, 1.477459763995629, 1.3879808186382556, 1.3122145449244478, 1.2344719459981872, 1.181905119615287, 1.1349974648040189, 1.0965450545815965, 1.0777267598992468, 1.0357612399786629, 1.017829882312901, 0.9720340728948712, 0.9571437459926658, 0.9423544832570852, 0.9323057744717476, 0.9207651466190256, 0.8977006561940987, 0.8820613534096887, 0.8675171707552248, 0.8576150058818264, 0.858650819713004, 0.8430877524265571, 0.8317739912043662, 0.82960347290194, 0.8195596275674731, 0.8129718520338698, 0.7965248379221115, 0.7967288118264678, 0.788940314091806, 0.7887504092454438, 0.7825112387866644, 0.7810180530556283, 0.759075844064286, 0.7680711442169937, 0.7577589735567861, 0.7558307403570877, 0.7434500600636328, 0.7499974700343639, 0.7384945984608493, 0.7389234516047815, 0.7282292913955988, 0.7322391252066749, 0.725580321759942, 0.7220087147990333, 0.7122613539186845, 0.71344619449324, 0.6998349198449825, 0.70955353515527, 0.709443288598283, 0.7030583623535425, 0.6954994039796268, 0.6876820502988478, 0.6864212511348182, 0.6908845495963535, 0.69303925341115, 0.6815306042651805, 0.6837402946126144, 0.6759144500529746, 0.6700493826243887, 0.6705672797147766, 0.674235396963998, 0.6634811947075225, 0.6599111516698319, 0.661513789541544, 0.6606746915466577, 0.6497942074462171, 0.6558323436881793, 0.6531595592768973, 0.652484360214836, 0.6410066029099961, 0.6584892644936996, 0.6468732342932911, 0.643379200246466, 0.6498401700985855, 0.6440919958101272], "accuracy": [0.120459645986557, 0.18293488025665283, 0.2565050721168518, 0.3163386583328247, 0.3517369031906128, 0.3883238732814789, 0.413419634103775, 0.4461762011051178, 0.4655923843383789, 0.4905560612678528, 0.5233126282691956, 0.535860538482666, 0.5575221180915833, 0.575089156627655, 0.5915995240211487, 0.6034870147705078, 0.6172236204147339, 0.6203936338424683, 0.6413947939872742, 0.6320168972015381, 0.6563201546669006, 0.6577730774879456, 0.661471426486969, 0.6618676781654358, 0.6680755615234375, 0.6754721999168396, 0.6882842183113098, 0.6844538450241089, 0.6930392384529114, 0.6923788189888, 0.700700044631958, 0.6944921612739563, 0.69673752784729, 0.700171709060669, 0.7012283802032471, 0.7145687341690063, 0.7124554514884949, 0.7140403985977173, 0.7094175219535828, 0.7169462442398071, 0.7195879220962524, 0.7251353859901428, 0.7150970697402954, 0.7272487282752991, 0.7224937081336975, 0.7310791015625, 0.7325320243835449, 0.7312111854553223, 0.7228899598121643, 0.7329282760620117, 0.7310791015625, 0.728701651096344, 0.72672039270401, 0.7351737022399902, 0.7363624572753906, 0.7412495017051697, 0.7375511527061462, 0.7364945411682129, 0.7454761862754822, 0.7421740889549255, 0.7396644949913025, 0.7448157668113708, 0.7404569983482361, 0.7403249144554138, 0.7446836829185486, 0.7477215528488159, 0.7454761862754822, 0.7518161535263062, 0.7498348951339722, 0.748778223991394, 0.7519482374191284, 0.7524765729904175, 0.752212405204773, 0.750231146812439, 0.7567031979560852, 0.7514199018478394, 0.7547219395637512, 0.7532690763473511, 0.7580240368843079, 0.7528728246688843, 0.7601373791694641, 0.7651565074920654, 0.752740740776062, 0.7568352818489075], "val_loss": [1.9468022755214147, 1.9205820219857352, 1.8881340026855469, 1.8443375996180944, 1.784808840070452, 1.7031169618879045, 1.5979804652077811, 1.4723666395459856, 1.3403064182826452, 1.2155519212995256, 1.1069152014596122, 1.0195983478001185, 0.9512382575443813, 0.8964160510471889, 0.8522674185889108, 0.8161391190120152, 0.7868457521711077, 0.7649128096444267, 0.7421642030988421, 0.7264293772833688, 0.7090476751327515, 0.69367516040802, 0.681240439414978, 0.6720323732921055, 0.6619844266346523, 0.6518271480287824, 0.6440627234322684, 0.6370476995195661, 0.6297170434679303, 0.6221798488071987, 0.6152941499437604, 0.6103086641856602, 0.605954783303397, 0.6008742196219308, 0.5958364180156163, 0.5912793534142631, 0.587943400655474, 0.5827340398515973, 0.5798602955681937, 0.5752926553998675, 0.5715560572487968, 0.5681717566081456, 0.5657516547611782, 0.5624676431928363, 0.5590408018657139, 0.5566941670009068, 0.5539546523775373, 0.5521692548479352, 0.5486622026988438, 0.546613165310451, 0.5437205348696027, 0.5415726900100708, 0.5387447731835502, 0.5395539147513253, 0.5339331115995135, 0.5331633601869855, 0.5309818472181048, 0.5291445936475482, 0.526729839188712, 0.5258101224899292, 0.5227281025477818, 0.5194734675543649, 0.5183924095971244, 0.5171059540339878, 0.5168052230562482, 0.5140645674296788, 0.5138969761984689, 0.5103652988161359, 0.5097363335745675, 0.5091319935662406, 0.5064169338771275, 0.5057154212679181, 0.5048549345561436, 0.5030801636832101, 0.5017383779798236, 0.5012697662625994, 0.4992835691996983, 0.4977118458066668, 0.4982484919684274, 0.4966325078691755, 0.4963306188583374, 0.49619644028799875, 0.4914311851773943, 0.49127818856920513], "val_accuracy": [0.23466666042804718, 0.36766666173934937, 0.41200000047683716, 0.445333331823349, 0.4909999966621399, 0.5306666493415833, 0.5526666641235352, 0.5713333487510681, 0.5776666402816772, 0.6053333282470703, 0.6323333382606506, 0.6480000019073486, 0.6666666865348816, 0.6736666560173035, 0.6769999861717224, 0.6856666803359985, 0.6933333277702332, 0.6973333358764648, 0.7043333053588867, 0.7006666660308838, 0.7039999961853027, 0.7193333506584167, 0.7176666855812073, 0.722000002861023, 0.722000002861023, 0.7276666760444641, 0.7243333458900452, 0.7310000061988831, 0.7323333621025085, 0.734000027179718, 0.737333357334137, 0.7383333444595337, 0.7426666617393494, 0.7443333268165588, 0.7446666955947876, 0.7459999918937683, 0.746666669845581, 0.7483333349227905, 0.7559999823570251, 0.753000020980835, 0.753000020980835, 0.7580000162124634, 0.7593333125114441, 0.7570000290870667, 0.7606666684150696, 0.7613333463668823, 0.7593333125114441, 0.7603333592414856, 0.765999972820282, 0.7646666765213013, 0.7683333158493042, 0.7630000114440918, 0.7666666507720947, 0.765333354473114, 0.7683333158493042, 0.7689999938011169, 0.7696666717529297, 0.7716666460037231, 0.7723333239555359, 0.7720000147819519, 0.7720000147819519, 0.7766666412353516, 0.7730000019073486, 0.7760000228881836, 0.7730000019073486, 0.7793333530426025, 0.7756666541099548, 0.7776666879653931, 0.7766666412353516, 0.7789999842643738, 0.7799999713897705, 0.7793333530426025, 0.7786666750907898, 0.7806666493415833, 0.7816666960716248, 0.7796666622161865, 0.7786666750907898, 0.7816666960716248, 0.7879999876022339, 0.7826666831970215, 0.781000018119812, 0.7816666960716248, 0.7879999876022339, 0.7863333225250244]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [5, 4, 8, 0, 8, 0, 7, 1, 1, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 9, 4], [1, 2, 2, 1, 1, 2, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7917143106460571, "mapping_values": [1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.pow(alpha, tf.math.add(alpha, tf.math.sqrt(grad))))), lambda shape,  alpha, beta, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2919254728107403, 2.2648725986732643, 2.2359192073463277, 2.1953756488026124, 2.144554673940467, 2.068891194297842, 1.975474616665929, 1.8518386025391613, 1.727374026536343, 1.6041723219568325, 1.4774278759909123, 1.3879242402813485, 1.3121568697035164, 1.2344185088399127, 1.1818452400223391, 1.134951315756251, 1.0965192789383347, 1.077701120124029, 1.0357660278904282, 1.017842225190151, 0.9720642203431891, 0.957165250161289, 0.9423700601606478, 0.9322856785898054, 0.9207651562080439, 0.8976822551278358, 0.8820318355615097, 0.867493013325715, 0.8576400380612617, 0.8586630224866669, 0.8430472554516216, 0.831721387912789, 0.8295159133323636, 0.8194982839408504, 0.8129518125129964, 0.7964726778116555, 0.7967502363070427, 0.7888488736386943, 0.7886797513991394, 0.7824980258595249, 0.7809050524192259, 0.7589764281932184, 0.7680390015679454, 0.7576675217905222, 0.7557419977246683, 0.7433615620141615, 0.7500296207372429, 0.738488441264042, 0.7390968639065545, 0.7281562222733458, 0.7321454286968955, 0.7255637001178803, 0.7219592632713288, 0.7122151284343169, 0.7133266942187103, 0.69986358051523, 0.7095504272269094, 0.709421086147587, 0.7031049544643402, 0.6955322648918058, 0.6876396112879112, 0.6863709925550275, 0.6908585312517328, 0.6930207415043387, 0.6815491734856644, 0.6837129535345653, 0.6758295530656294, 0.6701202584279763, 0.6706446231694789, 0.6742233640450717, 0.6635551970821598], "accuracy": [0.120459645986557, 0.18293488025665283, 0.2566371560096741, 0.3163386583328247, 0.3517369031906128, 0.3883238732814789, 0.41328755021095276, 0.44630828499794006, 0.4655923843383789, 0.4908202290534973, 0.5233126282691956, 0.535860538482666, 0.5576542019844055, 0.5753533244132996, 0.591731607913971, 0.6034870147705078, 0.6172236204147339, 0.6203936338424683, 0.6409985423088074, 0.6316206455230713, 0.6565843224525452, 0.6576409935951233, 0.6612072587013245, 0.6619997620582581, 0.6686038970947266, 0.6754721999168396, 0.6882842183113098, 0.6837934255599976, 0.6929071545600891, 0.6923788189888, 0.7003037929534912, 0.695813000202179, 0.6975300312042236, 0.7003037929534912, 0.7022850513458252, 0.7148329019546509, 0.7125874757766724, 0.7137762308120728, 0.7091533541679382, 0.7169462442398071, 0.719852089881897, 0.7244749665260315, 0.7160216569900513, 0.7268524765968323, 0.7219653725624084, 0.7306828498840332, 0.7329282760620117, 0.7308149337768555, 0.7220974564552307, 0.7327961921691895, 0.7312111854553223, 0.728701651096344, 0.72672039270401, 0.7353057861328125, 0.735569953918457, 0.7411174178123474, 0.7368907928466797, 0.7367587089538574, 0.7457403540611267, 0.7428345084190369, 0.7404569983482361, 0.7449478507041931, 0.7408532500267029, 0.7396644949913025, 0.7458723783493042, 0.7471932172775269, 0.7450799345970154, 0.7518161535263062, 0.7498348951339722, 0.7483819723129272, 0.752212405204773], "val_loss": [1.9468023436410087, 1.9205824307032995, 1.8881350925990514, 1.8443429129464286, 1.7848123822893416, 1.7031244550432478, 1.5979857444763184, 1.4723552976335799, 1.3402748107910156, 1.2155142511640276, 1.1068739891052246, 1.0195356437138148, 0.9511725561959403, 0.8963642120361328, 0.8522294248853411, 0.8161157880510602, 0.786831293787275, 0.7649242026465279, 0.7421589578901019, 0.7264370407376971, 0.7090397902897426, 0.6936774253845215, 0.6812302555356707, 0.6720277922494071, 0.6619783129010882, 0.6518229416438511, 0.6440166745867048, 0.6370009013584682, 0.629670432635716, 0.6221177237374442, 0.6152842555727277, 0.6102094309670585, 0.6060376848493304, 0.6008446557181222, 0.5958073479788644, 0.5912303754261562, 0.5879370144435337, 0.5826452629906791, 0.5798009463718959, 0.575303145817348, 0.5715793711798531, 0.5682399102619716, 0.5657649721418109, 0.5625567436218262, 0.5590996061052594, 0.5568315471921649, 0.5539282730647496, 0.5522509813308716, 0.5487324340002877, 0.5466000693184989, 0.5437757287706647, 0.541555643081665, 0.5387093850544521, 0.5396079506192889, 0.5339019128254482, 0.53306702205113, 0.5309019259044102, 0.5291304418018886, 0.5266363280160087, 0.5257629837308612, 0.5227329390389579, 0.5194771800722394, 0.5183421203068325, 0.5170748063496181, 0.5168411731719971, 0.5139894996370588, 0.5138239349637713, 0.5103561537606376, 0.5097849879946027, 0.5090421097619193, 0.506461671420506], "val_accuracy": [0.23466666042804718, 0.36766666173934937, 0.41200000047683716, 0.4449999928474426, 0.4909999966621399, 0.5306666493415833, 0.5529999732971191, 0.5709999799728394, 0.5776666402816772, 0.6050000190734863, 0.6323333382606506, 0.6483333110809326, 0.6666666865348816, 0.6736666560173035, 0.6769999861717224, 0.6856666803359985, 0.6933333277702332, 0.6973333358764648, 0.7043333053588867, 0.7006666660308838, 0.70333331823349, 0.7193333506584167, 0.7176666855812073, 0.721666693687439, 0.7223333120346069, 0.7279999852180481, 0.7250000238418579, 0.731333315372467, 0.7326666712760925, 0.734000027179718, 0.7369999885559082, 0.7383333444595337, 0.7426666617393494, 0.7440000176429749, 0.7450000047683716, 0.7463333606719971, 0.746999979019165, 0.7483333349227905, 0.7563333511352539, 0.7536666393280029, 0.7519999742507935, 0.7573333382606506, 0.7586666941642761, 0.7573333382606506, 0.7609999775886536, 0.7606666684150696, 0.7586666941642761, 0.7606666684150696, 0.7666666507720947, 0.7646666765213013, 0.7683333158493042, 0.7636666893959045, 0.7670000195503235, 0.765666663646698, 0.7683333158493042, 0.7689999938011169, 0.7689999938011169, 0.7716666460037231, 0.7723333239555359, 0.7720000147819519, 0.7716666460037231, 0.7766666412353516, 0.7733333110809326, 0.7763333320617676, 0.7730000019073486, 0.7789999842643738, 0.7749999761581421, 0.777999997138977, 0.7756666541099548, 0.7789999842643738, 0.7786666750907898]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [7, 4, 8, 8, 8, 1, 7, 0, 3, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 5, 6, 8, 9, 0, 4], [0, 2, 2, 1, 1, 2, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [24, 8, 14, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7908571362495422, "mapping_values": [1, 10, 10, 6, 4, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.pow(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))), tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), alpha))))), lambda shape,  alpha, beta, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2919254728107403, 2.2648724502560453, 2.2359188970022386, 2.1953734714498987, 2.1445517049347798, 2.06889072193241, 1.9754765235421963, 1.851842884090929, 1.7273915692909976, 1.604214542357047, 1.4774686872778064, 1.387967383242743, 1.3122160723023268, 1.2344659237798021, 1.1818997677306866, 1.1350034172225385, 1.096548311116122, 1.0777302049863073, 1.0357704660943188, 1.017815058950294, 0.9720056293159034, 0.9571220303775297, 0.9423368031385632, 0.9322592873362943, 0.9207826480810685, 0.897737969544113, 0.8820568331637954, 0.867493908324372, 0.8576737013412363, 0.8586525748497491, 0.843084371494595, 0.8317777967456152, 0.82955020790512, 0.8195277824614104, 0.8129193795796446, 0.7964887222467775, 0.7967408453437237, 0.7889008479284619, 0.7886780909086814, 0.7825881011371741, 0.7809435605939825, 0.7590078862981553, 0.76804455545175, 0.7577154323598413, 0.7557650484649528, 0.7433890685696942, 0.7500225647786006, 0.7384733874500861, 0.7389966714116073, 0.7282428180521128, 0.7322393374404635, 0.7255856453262347, 0.7218546106153712, 0.7121835290448792, 0.713371769516869, 0.6998298486792857, 0.7095228110668509, 0.7094019753128987, 0.7030883064957784, 0.6954749524081624, 0.6875699780730838, 0.6864619496523381, 0.6908025949654121, 0.6930662663684246, 0.68148527500762, 0.6837546995932856, 0.6757702777461605, 0.6700118216604148, 0.670619099541048, 0.6742548812271786, 0.6635155137094445], "accuracy": [0.120459645986557, 0.18293488025665283, 0.2565050721168518, 0.3163386583328247, 0.3517369031906128, 0.3883238732814789, 0.41328755021095276, 0.4461762011051178, 0.46572446823120117, 0.4905560612678528, 0.5235767960548401, 0.5357284545898438, 0.5576542019844055, 0.575089156627655, 0.5918636918067932, 0.6034870147705078, 0.6170915365219116, 0.6205257177352905, 0.6411306262016296, 0.6320168972015381, 0.6561880707740784, 0.6576409935951233, 0.6613393425941467, 0.6622639298439026, 0.6686038970947266, 0.6753401160240173, 0.6886804699897766, 0.6839255094528198, 0.6931713223457336, 0.6923788189888, 0.700700044631958, 0.6956809163093567, 0.6972658634185791, 0.700700044631958, 0.7018887996673584, 0.7144366502761841, 0.7125874757766724, 0.7141724824905396, 0.7091533541679382, 0.7172104120254517, 0.7194558382034302, 0.724739134311676, 0.7156254053115845, 0.7275128960609436, 0.7224937081336975, 0.7304186820983887, 0.7326641082763672, 0.7314753532409668, 0.7224937081336975, 0.7323999404907227, 0.7309470176696777, 0.7283053994178772, 0.7277770638465881, 0.7360982894897461, 0.735569953918457, 0.7413815855979919, 0.7366266250610352, 0.7371549606323242, 0.7454761862754822, 0.7425703406333923, 0.7397965788841248, 0.7445515990257263, 0.7408532500267029, 0.7400607466697693, 0.7452120184898376, 0.7473253011703491, 0.7450799345970154, 0.7523444890975952, 0.7499669790267944, 0.7490423917770386, 0.752212405204773], "val_loss": [1.9468022755214147, 1.9205820219857352, 1.8881340708051408, 1.8443383489336287, 1.7848103387015206, 1.7031223773956299, 1.5979956899370467, 1.4723832947867257, 1.3403262751443046, 1.2155581883021764, 1.1069023949759347, 1.019580943243844, 0.9512296744755336, 0.8964148930140904, 0.8522955860410418, 0.8161526918411255, 0.786853585924421, 0.7649400063923427, 0.7421691077096122, 0.7264479058129447, 0.7090257917131696, 0.6936835220881871, 0.6812245334897723, 0.6720155647822789, 0.6619808673858643, 0.6518318482807705, 0.6440389156341553, 0.6370179653167725, 0.6297030619212559, 0.6221427576882499, 0.6153138194765363, 0.6102451426642281, 0.6060280970164708, 0.6008537326540265, 0.5957705463681903, 0.5911596161978585, 0.5879030738558088, 0.5826952968324933, 0.5797723191125053, 0.5753185067858014, 0.5715063640049526, 0.5681561061314174, 0.5657967839922223, 0.5626332930156163, 0.5591320650918143, 0.5568257399967739, 0.5539947748184204, 0.5522692033222744, 0.5487642628805978, 0.5466967139925275, 0.5438362530299595, 0.5415388345718384, 0.5386880806514195, 0.5395933049065726, 0.5338766404560634, 0.5330788578305926, 0.5308956248419625, 0.5291557822908673, 0.5266890525817871, 0.525844761303493, 0.5228081601006644, 0.5195115464074271, 0.5184211390359061, 0.5171276160648891, 0.5168616090502057, 0.5139788218906948, 0.5137878826686314, 0.5103528329304287, 0.5098113673073905, 0.5090713671275547, 0.506457873753139], "val_accuracy": [0.23466666042804718, 0.36766666173934937, 0.41200000047683716, 0.445333331823349, 0.4909999966621399, 0.5306666493415833, 0.5526666641235352, 0.5709999799728394, 0.5776666402816772, 0.6050000190734863, 0.6323333382606506, 0.6480000019073486, 0.6666666865348816, 0.6736666560173035, 0.6769999861717224, 0.6856666803359985, 0.6933333277702332, 0.6973333358764648, 0.7046666741371155, 0.7006666660308838, 0.70333331823349, 0.7196666598320007, 0.7173333168029785, 0.7213333249092102, 0.7226666808128357, 0.7279999852180481, 0.7246666550636292, 0.731333315372467, 0.7323333621025085, 0.734000027179718, 0.737666666507721, 0.7383333444595337, 0.7426666617393494, 0.7443333268165588, 0.7446666955947876, 0.7463333606719971, 0.746666669845581, 0.7483333349227905, 0.7563333511352539, 0.753000020980835, 0.7523333430290222, 0.7580000162124634, 0.7593333125114441, 0.7570000290870667, 0.7603333592414856, 0.7609999775886536, 0.7590000033378601, 0.7603333592414856, 0.765666663646698, 0.7643333077430725, 0.7683333158493042, 0.7636666893959045, 0.7666666507720947, 0.765666663646698, 0.768666684627533, 0.7680000066757202, 0.7693333625793457, 0.7716666460037231, 0.7726666927337646, 0.7716666460037231, 0.7706666588783264, 0.7773333191871643, 0.7726666927337646, 0.7766666412353516, 0.7730000019073486, 0.7793333530426025, 0.7753333449363708, 0.7776666879653931, 0.7763333320617676, 0.7789999842643738, 0.7793333530426025]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [7, 7, 8, 1, 8, 1, 7, 0, 3, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 9, 4], [3, 2, 2, 1, 1, 2, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7902857065200806, "mapping_values": [1, 23, 23, 14, 9, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.sqrt(grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.multiply(grad, alpha)), alpha)), tf.math.add(alpha, tf.math.multiply(grad, tf.math.multiply(grad, grad))))))))))), tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2919254728107403, 2.2648726930518777, 2.2359201881344197, 2.195377146767871, 2.1445606433483966, 2.0689001639190683, 1.9754849008171707, 1.8518451198595012, 1.7274075984136068, 1.6042061272141106, 1.4774617434587178, 1.3879752268077612, 1.3122051456711155, 1.2344613412210357, 1.1818987653869852, 1.135002913932916, 1.0965559684431958, 1.0777375412623424, 1.0357963780779895, 1.0178411673120205, 0.9720378415522527, 0.957157835803248, 0.9423748394596169, 0.9323320704570237, 0.9207786702996373, 0.8976947270317037, 0.8820739689441389, 0.8675164170961779, 0.8576255206261265, 0.8586400558510476, 0.8431131524212089, 0.8317636439608482, 0.8296276707108216, 0.8195493916841058, 0.8129375207425739, 0.7965031171188284, 0.7967526739409823, 0.7888948818664541, 0.7887014960332585, 0.7824669649036978, 0.7809467116020705, 0.7590676164897898, 0.7679956984353056, 0.7577743364315715, 0.7557863810310873, 0.7433981768852842, 0.7500341636094403, 0.7384675370152631, 0.7389686853815426, 0.728134287551504, 0.7321753166040268, 0.725552169787901, 0.7219589328438363, 0.7122069564178682, 0.7132589763354915, 0.6997764773923707, 0.7095154609426358, 0.709469472136968, 0.7030606684179638, 0.695505241660583, 0.6875874466506198, 0.6863609264476692, 0.690866725752776, 0.693039555260534, 0.6814873420236417, 0.6836667806480885, 0.6758155589799021, 0.6699808357083455, 0.6705716486698947, 0.6741826918697974, 0.6634881001311743], "accuracy": [0.120459645986557, 0.18293488025665283, 0.2566371560096741, 0.3163386583328247, 0.3516048192977905, 0.3883238732814789, 0.41328755021095276, 0.4461762011051178, 0.4655923843383789, 0.49068814516067505, 0.5235767960548401, 0.5359926223754883, 0.5575221180915833, 0.5748249888420105, 0.591731607913971, 0.6033549308776855, 0.6173557043075562, 0.6203936338424683, 0.6409985423088074, 0.6316206455230713, 0.6564522385597229, 0.6576409935951233, 0.661471426486969, 0.6619997620582581, 0.667811393737793, 0.6754721999168396, 0.6880200505256653, 0.6840575933456421, 0.6927750706672668, 0.6919825673103333, 0.7004358768463135, 0.6948884129524231, 0.6972658634185791, 0.7000396251678467, 0.7013604640960693, 0.7148329019546509, 0.7124554514884949, 0.7140403985977173, 0.7096816897392273, 0.7166820764541626, 0.719852089881897, 0.7246070504188538, 0.7154933214187622, 0.7272487282752991, 0.7228899598121643, 0.7306828498840332, 0.7331924438476562, 0.7314753532409668, 0.7224937081336975, 0.7322678565979004, 0.7316074371337891, 0.7290979027748108, 0.7271166443824768, 0.7353057861328125, 0.7364945411682129, 0.7408532500267029, 0.7376832365989685, 0.737022876739502, 0.7453441023826599, 0.7429665923118591, 0.7396644949913025, 0.7450799345970154, 0.7405890822410583, 0.7400607466697693, 0.7449478507041931, 0.7475894689559937, 0.7456082701683044, 0.7518161535263062, 0.7499669790267944, 0.7483819723129272, 0.7519482374191284], "val_loss": [1.9468022755214147, 1.920583724975586, 1.8881361825125558, 1.8443502698625838, 1.7848213059561593, 1.7031351838793074, 1.5979926586151123, 1.4723758356911796, 1.340308359691075, 1.2155605724879675, 1.1069279738834925, 1.019592182976859, 0.9512366226741246, 0.8964147908346993, 0.8522651706423078, 0.8161424568721226, 0.7868522916521344, 0.7649422543389457, 0.74217689037323, 0.7264337709971836, 0.7090240546635219, 0.6936624731336322, 0.6812295573098319, 0.6720512764794486, 0.6620274441582816, 0.6518661805561611, 0.6440620081765311, 0.6370925051825387, 0.629724519593375, 0.622195839881897, 0.6152815989085606, 0.6102534873144967, 0.6059515987123761, 0.6008671862738473, 0.595801659992763, 0.5912459577832904, 0.588016288621085, 0.5827235153743199, 0.5798371859959194, 0.5753260850906372, 0.5715982573372977, 0.568091630935669, 0.5657594714845929, 0.5625307559967041, 0.5590440034866333, 0.5567545379911151, 0.5539747646876744, 0.5521758454186576, 0.5487023932593209, 0.546632034437997, 0.5438384328569684, 0.5416045529501778, 0.5387066773005894, 0.5395499638148716, 0.5338882207870483, 0.5331354822431292, 0.5308617694037301, 0.5291176523481097, 0.5266773530415126, 0.5257086072649274, 0.5227937698364258, 0.519424557685852, 0.5182962417602539, 0.5170386859348842, 0.5168110132217407, 0.5140540599822998, 0.5138609409332275, 0.5103532757077899, 0.5098484413964408, 0.5091759477342878, 0.5064587763377598], "val_accuracy": [0.23466666042804718, 0.36766666173934937, 0.41200000047683716, 0.4449999928474426, 0.4906666576862335, 0.5306666493415833, 0.5529999732971191, 0.5709999799728394, 0.5776666402816772, 0.6050000190734863, 0.6323333382606506, 0.6480000019073486, 0.6666666865348816, 0.6736666560173035, 0.6769999861717224, 0.6856666803359985, 0.6933333277702332, 0.6973333358764648, 0.7043333053588867, 0.7003333568572998, 0.70333331823349, 0.7193333506584167, 0.7173333168029785, 0.722000002861023, 0.7223333120346069, 0.7273333072662354, 0.7246666550636292, 0.7306666374206543, 0.7329999804496765, 0.7356666922569275, 0.737333357334137, 0.737333357334137, 0.7426666617393494, 0.7446666955947876, 0.7443333268165588, 0.7463333606719971, 0.746666669845581, 0.7483333349227905, 0.7566666603088379, 0.7543333172798157, 0.7523333430290222, 0.7573333382606506, 0.7590000033378601, 0.7570000290870667, 0.7613333463668823, 0.7613333463668823, 0.7586666941642761, 0.7606666684150696, 0.7666666507720947, 0.7636666893959045, 0.7680000066757202, 0.7633333206176758, 0.7666666507720947, 0.765666663646698, 0.768666684627533, 0.768666684627533, 0.7693333625793457, 0.7720000147819519, 0.7726666927337646, 0.7720000147819519, 0.7716666460037231, 0.7773333191871643, 0.7730000019073486, 0.7756666541099548, 0.7730000019073486, 0.7796666622161865, 0.7753333449363708, 0.777999997138977, 0.7770000100135803, 0.7789999842643738, 0.7789999842643738]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [5, 4, 8, 8, 8, 0, 7, 1, 1, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 9, 4], [1, 2, 1, 1, 1, 2, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 0, 4, 7, 8, 4], [3, 1, 0, 1, 3, 3], [28, 57]], "fitness": -0.7002857327461243, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 13, 7, 6, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.negative(sigma), tf.math.pow(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma)))), sigma)", "other_info": {"loss": [2.301711618026423, 2.2988823260046694, 2.2984917489781025, 2.2945917529389686, 2.293243645425045, 2.2897881689702735, 2.288287252876595, 2.2825354163074505, 2.2812340732547254, 2.2796885063462113, 2.2734743639966517, 2.270019998734323, 2.267254889334166, 2.2610463503093263, 2.256418745137634, 2.249220825819339, 2.243330172701377, 2.2407804494048342, 2.231382930692885, 2.2216355205763128, 2.208420698747596, 2.1929571477413616, 2.1789962443945163, 2.1623816429395655, 2.1397778782877923, 2.116821182118966, 2.0766179114757293, 2.0350474127216613, 1.9857227142067193, 1.9321829589791601, 1.8821102089460546, 1.819390485331115, 1.7745497424321293, 1.7146198094686291, 1.6776815960829552, 1.6369131126612908, 1.6198195234942887, 1.5999080610785423, 1.5821951133322172, 1.5701164650391153, 1.5502157234134706, 1.5007958376428092, 1.523354481680833, 1.5097902967882288, 1.5000503892675603, 1.4659016686596844, 1.476412789192749, 1.4571091676385033, 1.4623525505918695, 1.445761170826253, 1.4465477162537368, 1.4450370860594202, 1.4303194851592516, 1.4072855898669807, 1.4185330936417777, 1.3853325221705761, 1.400846661388945, 1.416464523285954, 1.4115822928661306, 1.3922103111848791, 1.3781554552983173, 1.3828131256637604, 1.406148301249781, 1.3884056576522366, 1.3652598807651448, 1.3566104891970645, 1.3740875444958915, 1.3656597104070682, 1.351792554892506, 1.3573370262962747, 1.3616939394024652, 1.3490320028740386, 1.3689834462212314, 1.3500976143196952, 1.3356967327097513], "accuracy": [0.09668471664190292, 0.09747721254825592, 0.09509972482919693, 0.1138555034995079, 0.11028926074504852, 0.1212521493434906, 0.12653546035289764, 0.1320829540491104, 0.13591335713863373, 0.14317791163921356, 0.15281997621059418, 0.15136705338954926, 0.1530841439962387, 0.16629242897033691, 0.17738740146160126, 0.18861444294452667, 0.19033153355121613, 0.2005019187927246, 0.19865275919437408, 0.20895522832870483, 0.22533351182937622, 0.23722097277641296, 0.2436930388212204, 0.23946638405323029, 0.25637298822402954, 0.27327960729599, 0.2895258367061615, 0.30999869108200073, 0.31699907779693604, 0.3319244384765625, 0.3539822995662689, 0.36943599581718445, 0.3789459764957428, 0.39426758885383606, 0.40681546926498413, 0.4177783727645874, 0.42226919531822205, 0.4290054142475128, 0.44445911049842834, 0.44023245573043823, 0.44564786553382874, 0.4687623679637909, 0.4559503495693207, 0.46810197830200195, 0.462950736284256, 0.4785365164279938, 0.47510236501693726, 0.483819842338562, 0.48329150676727295, 0.48474442958831787, 0.48725399374961853, 0.4884427487850189, 0.5017831325531006, 0.4959714710712433, 0.4967639744281769, 0.5103685259819031, 0.5069343447685242, 0.4970281422138214, 0.5044247508049011, 0.5025756359100342, 0.5095760226249695, 0.5130101442337036, 0.5075947642326355, 0.5131422281265259, 0.5176330804824829, 0.5140668153762817, 0.5107647776603699, 0.5198785066604614, 0.5227842926979065, 0.5243692994117737, 0.523048460483551, 0.5242372155189514, 0.524501383304596, 0.5165764093399048, 0.531898021697998], "val_loss": [1.9689014979771204, 1.9664894512721471, 1.964104175567627, 1.9616633823939733, 1.9593330792018346, 1.9567617688860213, 1.9540574891226632, 1.9510750770568848, 1.9482432774135046, 1.9451500347682409, 1.9415839059012276, 1.9376717976161413, 1.9332136426653181, 1.9283603940691267, 1.922924518585205, 1.9166502271379744, 1.9098993028913225, 1.9024883678981237, 1.8938001905168806, 1.8836259841918945, 1.8709979738507951, 1.855762141091483, 1.83760404586792, 1.8156087739127023, 1.7892011914934431, 1.7572966984340124, 1.7155467101505824, 1.6613884653363908, 1.5959765229906355, 1.523554767881121, 1.4465422289712089, 1.368788685117449, 1.2971673011779785, 1.234938723700387, 1.1802163464682442, 1.1343341214316232, 1.0971441609518868, 1.0690482003348214, 1.0429281507219588, 1.0209216730935233, 1.0002290861947196, 0.9831303528376988, 0.9677676473345075, 0.9562389510018485, 0.9447194167545864, 0.9337386063167027, 0.9249872820717948, 0.9168595586504255, 0.9066716943468366, 0.8990439687456403, 0.8914575917380196, 0.885396923337664, 0.8783046177455357, 0.8749923706054688, 0.8656754493713379, 0.8588223116738456, 0.8557502201625279, 0.8487885338919503, 0.8467245442526681, 0.8416517972946167, 0.8371035882404873, 0.8309723479407174, 0.8278214931488037, 0.8259789262499128, 0.820141213280814, 0.8180756228310722, 0.8149198804582868, 0.8107865708214896, 0.8073172398975917, 0.8048366478511265, 0.8061351265226092, 0.8043540375573295, 0.8001035962785993, 0.7969930682863507, 0.7952863318579537], "val_accuracy": [0.05299999937415123, 0.06533333659172058, 0.08166666328907013, 0.09566666930913925, 0.11100000143051147, 0.12800000607967377, 0.14166666567325592, 0.15600000321865082, 0.1693333387374878, 0.1860000044107437, 0.19833333790302277, 0.21266666054725647, 0.22866666316986084, 0.24433332681655884, 0.26233333349227905, 0.27533334493637085, 0.2906666696071625, 0.3076666593551636, 0.3243333399295807, 0.34566667675971985, 0.3623333275318146, 0.38100001215934753, 0.3970000147819519, 0.4129999876022339, 0.43166667222976685, 0.4620000123977661, 0.492000013589859, 0.5189999938011169, 0.5406666398048401, 0.562666654586792, 0.5743333101272583, 0.5876666903495789, 0.5993333458900452, 0.6086666584014893, 0.6196666955947876, 0.6343333125114441, 0.6446666717529297, 0.6433333158493042, 0.6549999713897705, 0.6553333401679993, 0.6566666960716248, 0.6579999923706055, 0.6626666784286499, 0.6623333096504211, 0.6646666526794434, 0.6696666479110718, 0.6669999957084656, 0.6653333306312561, 0.6660000085830688, 0.6656666398048401, 0.6710000038146973, 0.6660000085830688, 0.6696666479110718, 0.6726666688919067, 0.6756666898727417, 0.6736666560173035, 0.6740000247955322, 0.6759999990463257, 0.6733333468437195, 0.675000011920929, 0.6776666641235352, 0.6763333082199097, 0.6779999732971191, 0.6786666512489319, 0.6766666769981384, 0.6819999814033508, 0.6790000200271606, 0.6786666512489319, 0.6800000071525574, 0.6846666932106018, 0.6823333501815796, 0.6796666383743286, 0.6816666722297668, 0.6813333630561829, 0.6793333292007446]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [7, 4, 8, 8, 8, 1, 7, 0, 3, 3, 3, 0, 9, 9, 3, 4, 5, 6, 7, 8, 7, 8, 9, 9, 0, 4], [2, 2, 2, 2, 1, 1, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [82, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [0, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(grad))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3035153564508044, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1002509593963623, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [2, 4, 8, 8, 8, 1, 7, 0, 3, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 9, 4], [0, 2, 0, 1, 1, 2, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [2, 5, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.pow(tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.sqrt(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.square(sigma), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3035146238750013, 2.3025806213744704, 2.3025851394238646, 2.302583073864303, 2.302581805657591, 2.3025855151433294], "accuracy": [0.09932637959718704, 0.10011887550354004, 0.10117553919553757, 0.1010434553027153, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736426217215401, 1.9736417361668177, 1.9736494336809431, 1.973649161202567, 1.9736506598336356, 1.9736496380397253], "val_accuracy": [0.10366666316986084, 0.10066666454076767, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 4, 2, 8, 1, 7, 0, 1, 3, 3, 7, 8, 2, 6, 4, 6, 2, 7, 8, 7, 1, 4, 9, 9, 4], [1, 2, 1, 1, 1, 2, 2, 2, 0, 2, 2, 0, 3, 2, 3, 0], [18, 8, 39, 58, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [81, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.pow(alpha, tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha)))))))))), lambda shape,  alpha, beta, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07832518965005875, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [7, 4, 8, 8, 8, 1, 7, 4, 3, 5, 3, 2, 0, 9, 3, 4, 5, 1, 6, 8, 7, 6, 1, 9, 0, 4], [2, 2, 2, 2, 0, 1, 2, 2, 0, 0, 2, 1, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [82, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 32, 32, 20, 12, 4, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), grad)), grad), grad)))))), tf.math.multiply(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.add(tf.math.negative(alpha), tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), grad)))))), tf.math.multiply(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))), tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1277888186.998498, 23805101855.750626, 111176471779.36018, 303546466892.6208, 664487603344.856, 1215498274626.9165], "accuracy": [0.09787346422672272, 0.09998679161071777, 0.1010434553027153, 0.1026284471154213, 0.10566636174917221, 0.09959053993225098], "val_loss": [4777248036.571428, 38206605604.57143, 128935502994.28572, 305606791753.1429, 596870112402.2858, 1031372874898.2858], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [7, 8, 8, 8, 8, 1, 7, 0, 3, 3, 3, 2, 0, 9, 1, 4, 5, 1, 9, 8, 7, 1, 8, 9, 0, 4], [0, 2, 2, 2, 1, 1, 2, 2, 0, 0, 2, 0, 3, 0, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [2, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 8, 4, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.sqrt(tf.math.sqrt(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(tf.math.add(tf.math.add(alpha, grad), grad), tf.math.negative(grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [7, 3, 8, 8, 6, 1, 7, 0, 3, 3, 3, 0, 6, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 1, 0, 4, 5, 3], [1, 2, 3, 1, 1, 2, 0, 2, 1, 1, 2, 2, 3, 2, 3, 0, 0, 0, 2], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [82, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [0, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [81, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 47, 47, 28, 19, 5, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 4, 3, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(alpha))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(tf.math.add(alpha, grad), grad), tf.math.negative(alpha)), tf.math.multiply(alpha, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), alpha))), tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))))))), tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, grad))), tf.math.add(alpha, grad))), tf.math.pow(tf.math.square(grad), tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))))))))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.negative(sigma)))", "other_info": {"loss": [2.3035153564508044, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1002509593963623, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [8, 3, 8, 8, 8, 1, 7, 1, 3, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 0, 4], [1, 2, 2, 1, 1, 2, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [2, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [9, 3, 0, 4, 7, 8, 4], [3, 3, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 32, 32, 20, 12, 4, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(alpha))), tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(grad, tf.math.multiply(alpha, alpha))), tf.math.add(tf.math.negative(grad), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.pow(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, grad))))), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3035153564508044, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1002509593963623, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [7, 4, 8, 8, 8, 1, 7, 0, 3, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 9, 4], [1, 2, 2, 1, 1, 2, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 8, 5, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 12, 7, 5, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.math.sqrt(grad))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(tf.math.negative(tf.math.add(alpha, alpha)), alpha))))), lambda shape,  alpha, beta, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(sigma), tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [5, 4, 8, 8, 8, 0, 7, 1, 1, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 9, 4], [1, 2, 2, 1, 1, 2, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 12, 7, 5, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.pow(tf.math.sqrt(tf.math.add(alpha, alpha)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [7, 4, 8, 8, 8, 5, 7, 0, 3, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 0, 4], [2, 0, 2, 2, 1, 1, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [18, 8, 39, 58, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [82, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [81, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 12, 7, 5, 2], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.sqrt(tf.math.sqrt(grad)), tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.multiply(grad, tf.math.add(alpha, grad)))))))), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(sigma), tf.math.pow(tf.math.add(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1], [7, 4, 8, 8, 8, 1, 7, 0, 3, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 0, 4, 2, 3, 8, 7, 3, 9, 6], [2, 1, 2, 2, 1, 1, 2, 2, 2, 0, 0, 0, 3, 2, 3, 0, 1, 3, 1], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [82, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 2, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 52, 52, 33, 19, 7, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 44, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(grad))), tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), grad)), tf.math.negative(tf.math.add(alpha, grad)))))), tf.math.multiply(alpha, tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(tf.math.negative(alpha), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, grad)), tf.math.add(tf.math.multiply(grad, tf.math.sqrt(grad)), tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(alpha, grad), alpha)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, beta))", "other_info": {"loss": [2.3033038939404338, 2.304646434407303, 2.3091695990780985, 2.31012722857325, 2.3142011062013412, 2.316774965198584, 2.323927066109168, 2.324989460494304, 2.335150572381645, 2.353522729376099, 2.392718491442782, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09351472556591034, 0.08545766770839691, 0.07740060985088348, 0.08281600475311279, 0.07766477018594742, 0.07594769448041916, 0.0742306187748909, 0.07885351777076721, 0.07264561951160431, 0.07885351777076721, 0.08294808864593506, 0.09668471664190292, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9723925590515137, 1.9738757269723075, 1.975672926221575, 1.9776771409170968, 1.9799485887799944, 1.9827323641095842, 1.9863341876438685, 1.990452698298863, 1.9976402691432409, 2.0143939426967075, 2.1305300167628696, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03200000151991844, 0.027666667476296425, 0.026000000536441803, 0.02500000037252903, 0.03133333474397659, 0.03566666692495346, 0.04866666719317436, 0.06733333319425583, 0.0846666693687439, 0.09866666793823242, 0.09933333098888397, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [5, 5, 8, 8, 8, 0, 7, 1, 1, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 9, 4], [1, 2, 2, 1, 1, 2, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [1, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 7, 0, 4, 7, 8, 4], [1, 0, 0, 1, 3, 3], [65, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3027065943701706, 2.302305587609336, 2.3044422753908065, 2.303049830744185, 2.3037939052130834, 2.3031156816975065], "accuracy": [0.0940430611371994, 0.08994849026203156, 0.08149518072605133, 0.09628847241401672, 0.08968432247638702, 0.0882314071059227], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [7, 4, 8, 8, 8, 1, 7, 0, 3, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 0, 4], [2, 2, 2, 2, 1, 1, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [81, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 15, 15, 9, 6, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 3, 2, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))), grad), alpha))))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(sigma))", "other_info": {"loss": [2.3027065943701706, 2.302305587609336, 2.3044422753908065, 2.303049830744185, 2.3037939052130834, 2.3031156816975065], "accuracy": [0.0940430611371994, 0.08994849026203156, 0.08149518072605133, 0.09628847241401672, 0.08968432247638702, 0.0882314071059227], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 4, 8, 8, 8, 1, 7, 0, 3, 3, 3, 2, 0, 1, 3, 0, 5, 1, 0, 8, 7, 1, 6, 9, 9, 4], [2, 2, 2, 2, 1, 1, 2, 2, 0, 2, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [77, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [33, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 12, 12, 8, 4, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, grad))))), tf.math.subtract(tf.math.add(tf.math.add(alpha, grad), grad), tf.math.negative(grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3027065943701706, 2.302305587609336, 2.3044422753908065, 2.303049830744185, 2.3037939052130834, 2.3031156816975065], "accuracy": [0.0940430611371994, 0.08994849026203156, 0.08149518072605133, 0.09628847241401672, 0.08968432247638702, 0.0882314071059227], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]