[{"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 1, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 2, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [6, 2, 0, 2, 6, 5, 5, 9], [0, 4, 3, 0, 3, 0, 2, 5, 2], [38, 0, 19], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [43, 57]], "fitness": -0.8254285454750061, "mapping_values": [1, 5, 5, 3, 2, 2, 12, 12, 7, 5, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, alpha), tf.math.subtract(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.square(grad))), tf.math.add(beta, tf.math.square(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9647178554641982, 1.4265332091926914, 1.049579020598939, 0.929522395236318, 0.8064406721378755, 0.7550035346579385, 0.7697692187533733, 0.7227614187781742, 0.7156139968518866, 0.670285493745591, 0.6571629945281757, 0.6458631173699303, 0.6281208365805286, 0.5986939409799139, 0.6273783955985308, 0.570970230720708, 0.5751667865798646, 0.5764700636147603, 0.553675328302755, 0.5643157210206438, 0.5495613636027049, 0.5217876942433922, 0.5366315286015602, 0.5047336805411585, 0.5005608310064604, 0.5010916961497477, 0.49469300929376747, 0.49817407115843193, 0.4722388736945983, 0.46794806673715394, 0.4888319782317354, 0.45623554222619356, 0.45498846799406817, 0.45865464605722667, 0.43391967435806433, 0.47774683687161335], "accuracy": [0.34024566411972046, 0.5178972482681274, 0.6178840398788452, 0.6507726907730103, 0.7003037929534912, 0.715889573097229, 0.7053229212760925, 0.7284374833106995, 0.7283053994178772, 0.7466648817062378, 0.7508915662765503, 0.7534011602401733, 0.7629110813140869, 0.7754589915275574, 0.7640998363494873, 0.7857614755630493, 0.7815347909927368, 0.7788931727409363, 0.7959318161010742, 0.7911768555641174, 0.7951393723487854, 0.8043851256370544, 0.7992339134216309, 0.8096684813499451, 0.8141592741012573, 0.8168009519577026, 0.8169330358505249, 0.8165367841720581, 0.8257825970649719, 0.826310932636261, 0.8153480291366577, 0.8300092220306396, 0.8276317715644836, 0.828820526599884, 0.839519202709198, 0.8240655064582825], "val_loss": [1.6358581611088343, 0.8793372086116246, 0.7491395473480225, 0.6510198286601475, 0.5833646399634225, 0.5937161615916661, 0.6028297628675189, 0.561170152255467, 0.5465713739395142, 0.5443499939782279, 0.5429366316114154, 0.5447216544832502, 0.48901322909763884, 0.4944451706750052, 0.4736252171652658, 0.47471295084272114, 0.4894792522702898, 0.463493926184518, 0.45390025206974577, 0.4624725069318499, 0.447290301322937, 0.4454660585948399, 0.4293570859091623, 0.4183081643921988, 0.42234898465020315, 0.4330294983727591, 0.4254313366753714, 0.4132768511772156, 0.4036346418516977, 0.39152815512248446, 0.38992754902158466, 0.3881778461592538, 0.4299376351492746, 0.3883532626288278, 0.4375981092453003, 0.38966762168066843], "val_accuracy": [0.3656666576862335, 0.5920000076293945, 0.6846666932106018, 0.7236666679382324, 0.7393333315849304, 0.7223333120346069, 0.7206666469573975, 0.7553333044052124, 0.7639999985694885, 0.7456666827201843, 0.7490000128746033, 0.7383333444595337, 0.7850000262260437, 0.7796666622161865, 0.793666660785675, 0.778333306312561, 0.7876666784286499, 0.8006666898727417, 0.8109999895095825, 0.8033333420753479, 0.8026666641235352, 0.7990000247955322, 0.8199999928474426, 0.8243333101272583, 0.8163333535194397, 0.8069999814033508, 0.8146666884422302, 0.8176666498184204, 0.8296666741371155, 0.8316666483879089, 0.8373333215713501, 0.8303333520889282, 0.7953333258628845, 0.8230000138282776, 0.7986666560173035, 0.8346666693687439]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 0, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [89, 42, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [6, 2, 0, 4, 6, 5, 5, 9], [0, 4, 3, 0, 3, 0, 2, 5, 2], [56, 0, 19], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [43, 57]], "fitness": -0.8188571333885193, "mapping_values": [1, 3, 3, 3, 0, 1, 12, 12, 7, 5, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.pow(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.square(grad)), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))))))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9647597247866782, 1.4206645471733859, 1.05966381764667, 0.9269000561859913, 0.8129247885810984, 0.7589510740258864, 0.7505765659005147, 0.7430787405333483, 0.6919300420456527, 0.669101332393163, 0.6497735408366144, 0.6447407826692705, 0.6145333419418008, 0.6066989692572857, 0.6254322446490072, 0.5716819309082959, 0.5748970453466139, 0.5703109767710638, 0.5551683132706097, 0.5626360854027436, 0.5306543365855022, 0.5235265708240489, 0.5264499159599922, 0.5103635661369932, 0.5021595358021932, 0.49143764795077366, 0.5075659977918949, 0.4920950118639781, 0.4684351709115428, 0.4882955934983738, 0.485686473960748, 0.4561763670678782, 0.4532668305079478, 0.4701852374277756, 0.43777288049518503, 0.46964710652080305], "accuracy": [0.3403777480125427, 0.521067202091217, 0.6180161237716675, 0.6534143686294556, 0.6975300312042236, 0.7108704447746277, 0.7186633348464966, 0.7209087014198303, 0.7339849472045898, 0.7450799345970154, 0.7560427784919739, 0.7564390301704407, 0.7763835787773132, 0.7736098170280457, 0.76106196641922, 0.7876105904579163, 0.7816668748855591, 0.7799497842788696, 0.7979130744934082, 0.7924976944923401, 0.8034605979919434, 0.8050455451011658, 0.8057059645652771, 0.8079513907432556, 0.8128384351730347, 0.8238013386726379, 0.8072909712791443, 0.8190463781356812, 0.8280280232429504, 0.8161405324935913, 0.817461371421814, 0.8302733898162842, 0.8265751004219055, 0.826310932636261, 0.8411042094230652, 0.8304054737091064], "val_loss": [1.632622514452253, 0.878089462007795, 0.7105942113058907, 0.6520253760474068, 0.5895307745252337, 0.6166940416608538, 0.6113734756197248, 0.5460823263440814, 0.5442355530602592, 0.5421122823442731, 0.5183364834104266, 0.5378552675247192, 0.4894661562783377, 0.5304806402751377, 0.47639358043670654, 0.47101894446781706, 0.48087988580976215, 0.4622243813105992, 0.4544595990862165, 0.44022507326943533, 0.4608773333685739, 0.4341750144958496, 0.432504619870867, 0.4222200768334525, 0.41791326659066336, 0.41797048704964773, 0.4098454543522426, 0.4161970445087978, 0.41494572162628174, 0.39345335960388184, 0.38801764590399607, 0.3871882217270987, 0.4478156736918858, 0.40103901284081594, 0.4306131260735648, 0.39118264402662006], "val_accuracy": [0.36533331871032715, 0.5893333554267883, 0.7056666612625122, 0.7229999899864197, 0.7310000061988831, 0.7056666612625122, 0.7103333473205566, 0.7599999904632568, 0.7716666460037231, 0.7493333220481873, 0.7766666412353516, 0.7486666440963745, 0.7846666574478149, 0.7536666393280029, 0.7973333597183228, 0.7820000052452087, 0.7886666655540466, 0.8063333630561829, 0.7990000247955322, 0.8143333196640015, 0.7900000214576721, 0.8013333082199097, 0.8183333277702332, 0.8166666626930237, 0.8199999928474426, 0.8119999766349792, 0.8206666707992554, 0.8153333067893982, 0.8209999799728394, 0.8273333311080933, 0.8386666774749756, 0.8286666870117188, 0.7900000214576721, 0.8166666626930237, 0.8056666851043701, 0.8316666483879089]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 1, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 42, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [6, 2, 0, 2, 6, 5, 5, 9], [0, 4, 3, 0, 3], [56, 0, 47], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [35, 57]], "fitness": -0.8031428456306458, "mapping_values": [1, 5, 5, 3, 2, 2, 12, 12, 8, 4, 3, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.subtract(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), tf.math.square(grad))), tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))))), grad), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.258559675484978, 2.066036631859147, 1.6357403214833426, 1.265797535819841, 1.089808103934633, 0.9960471435529114, 0.9184393194121392, 0.8910344616139585, 0.8497370192403444, 0.8145030268809075, 0.7961059358881732, 0.7800900424476218, 0.7529613292055076, 0.7486342125565006, 0.7354794456863982, 0.7025093482769145, 0.7059236263098293, 0.6878804146196423, 0.6816474408474202, 0.6700467713016797, 0.6645793350318231, 0.6480953831556782, 0.6517826507844473, 0.6407601058428014, 0.6361278505404675, 0.6337317265712857, 0.6184588562165269, 0.6156358416794376, 0.6113492612431881, 0.610119982229295, 0.6087497469141593, 0.6029322297424137, 0.601067652209182, 0.5959088729829553, 0.588951809980047, 0.589183501177901, 0.5889495214088922, 0.5765614009190072, 0.5712404458624513, 0.577876025147804, 0.5695612277762292, 0.5566767799446469, 0.5619911132802297, 0.5717262787243252, 0.5491178789080221], "accuracy": [0.19402985274791718, 0.3917580246925354, 0.48487651348114014, 0.5711266398429871, 0.6197332143783569, 0.6482630968093872, 0.6777176260948181, 0.678642213344574, 0.6946242451667786, 0.700171709060669, 0.7033417224884033, 0.7148329019546509, 0.7214370369911194, 0.7289658188819885, 0.7253995537757874, 0.7474573850631714, 0.7415136694908142, 0.7420420050621033, 0.7499669790267944, 0.7580240368843079, 0.7559106945991516, 0.7671377658843994, 0.7578919529914856, 0.7584202885627747, 0.7660810947418213, 0.7655527591705322, 0.7714964747428894, 0.7729493975639343, 0.7758552432060242, 0.7725531458854675, 0.7755910754203796, 0.7746664881706238, 0.7769119143486023, 0.7790252566337585, 0.7827235460281372, 0.7795535326004028, 0.7796856164932251, 0.7928939461708069, 0.7895918488502502, 0.7858935594558716, 0.7910447716712952, 0.7956677079200745, 0.7935543656349182, 0.7882710099220276, 0.7973847389221191], "val_loss": [1.85652528490339, 1.5317027568817139, 1.0636296612875802, 0.8495340517589024, 0.7461268901824951, 0.6963158845901489, 0.6746177332741874, 0.635715092931475, 0.6207571710859027, 0.5950742449079242, 0.5838378327233451, 0.5916990893227714, 0.562243001801627, 0.5505678994315011, 0.5458871807370868, 0.5316439185823713, 0.5280114242008754, 0.5223647696631295, 0.5172759805406842, 0.5157380785260882, 0.5072050094604492, 0.5110559293201992, 0.5066531215395246, 0.4919210502079555, 0.4859717573438372, 0.48496128831590923, 0.48251921789986746, 0.4833762305123465, 0.4815820796149118, 0.47580030986240934, 0.468577367918832, 0.467254570552281, 0.4794623851776123, 0.4679449796676636, 0.4766521453857422, 0.46353610924312044, 0.4556657927376883, 0.4553927183151245, 0.4671250752040318, 0.4613168580191476, 0.4520139353615897, 0.44817711625780376, 0.4567643233707973, 0.4512261152267456, 0.44433322974613737], "val_accuracy": [0.4593333303928375, 0.5699999928474426, 0.6413333415985107, 0.6800000071525574, 0.6869999766349792, 0.715666651725769, 0.7133333086967468, 0.7196666598320007, 0.7363333106040955, 0.7480000257492065, 0.746999979019165, 0.7360000014305115, 0.7570000290870667, 0.7599999904632568, 0.7680000066757202, 0.7773333191871643, 0.7723333239555359, 0.7753333449363708, 0.7736666798591614, 0.777999997138977, 0.7799999713897705, 0.778333306312561, 0.784333348274231, 0.7839999794960022, 0.7896666526794434, 0.7900000214576721, 0.7889999747276306, 0.7856666445732117, 0.7929999828338623, 0.7956666946411133, 0.79666668176651, 0.7993333339691162, 0.7850000262260437, 0.7926666736602783, 0.7850000262260437, 0.8019999861717224, 0.8063333630561829, 0.8040000200271606, 0.796999990940094, 0.8100000023841858, 0.8069999814033508, 0.8080000281333923, 0.8050000071525574, 0.8016666769981384, 0.8073333501815796]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 1, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 61, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [6, 2, 0, 2, 6, 5, 5, 9], [0, 4, 3, 0, 3], [9, 0, 19], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [35, 57]], "fitness": -0.8019999861717224, "mapping_values": [1, 5, 5, 3, 2, 2, 12, 12, 7, 5, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.subtract(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.square(grad))), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))))))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2585593201402094, 2.066032753235093, 1.6357698198700656, 1.2658947150405875, 1.0898830306969298, 0.9960513319069794, 0.9189387094532069, 0.8915360905254648, 0.8501098004188583, 0.814120309015291, 0.7952606476072811, 0.7797453569666805, 0.753327711981679, 0.7482308432993211, 0.7358581859122933, 0.7027888340862467, 0.7057075925538443, 0.6862077400228052, 0.6824407252133593, 0.6699816231100298, 0.6680844103686955, 0.6483188992430899, 0.6529697070205531, 0.6405909765807472, 0.6365505633904021, 0.6337518582742732, 0.6186056541980863, 0.6153812964106469, 0.6120338200137222, 0.6112155729454302, 0.6086405679581581, 0.6043899073938983, 0.6016972662278013, 0.595669656995895, 0.5888752081312004, 0.5886439839374309, 0.5889309018027623, 0.5772401107662878, 0.5716499654907576, 0.5775354749900381, 0.570474866658091, 0.556312426867628, 0.5611562574024702, 0.5709970821132592, 0.5476806493105275], "accuracy": [0.19402985274791718, 0.3910976052284241, 0.48487651348114014, 0.5717870593070984, 0.6196011304855347, 0.6478668451309204, 0.6770572066307068, 0.6783780455589294, 0.6944921612739563, 0.6999075412750244, 0.7038700580596924, 0.7144366502761841, 0.7213049530982971, 0.7284374833106995, 0.7256637215614319, 0.7474573850631714, 0.7429665923118591, 0.7432307600975037, 0.750759482383728, 0.7578919529914856, 0.7553823590278625, 0.7650244235992432, 0.7600052952766418, 0.7598732113838196, 0.7648923397064209, 0.7667415142059326, 0.7685906887054443, 0.7728173136711121, 0.7744023203849792, 0.7700436115264893, 0.774798572063446, 0.7733456492424011, 0.7755910754203796, 0.778232753276825, 0.7820631265640259, 0.7817989587783813, 0.78113853931427, 0.7903843522071838, 0.7887993454933167, 0.7844406366348267, 0.7878747582435608, 0.7956677079200745, 0.7947431206703186, 0.7889314293861389, 0.7976489067077637], "val_loss": [1.8565349578857422, 1.5317309924534388, 1.063584327697754, 0.8495484079633441, 0.7459127051489693, 0.6967565161841256, 0.6741892099380493, 0.6358720064163208, 0.6206209659576416, 0.596017599105835, 0.5844397033963885, 0.5937552111489433, 0.5634149823869977, 0.550551278250558, 0.5460955585752215, 0.5313748121261597, 0.5275673185076032, 0.521794285093035, 0.5169699702944074, 0.5141462768827166, 0.506672842161996, 0.5132186583110264, 0.5034138304846627, 0.4915028469903128, 0.4859945944377354, 0.48580498354775564, 0.48309665066855295, 0.4827472312109811, 0.4830954926354544, 0.47493466309138704, 0.4688805171421596, 0.46795243876320974, 0.47834445749010357, 0.4682235206876482, 0.47624809401375906, 0.4635180745806013, 0.4569363423756191, 0.45483393328530447, 0.4662965876715524, 0.4605741671153477, 0.450690610068185, 0.44848878043038504, 0.45654995100838797, 0.4475832836968558, 0.4448253427233015], "val_accuracy": [0.45899999141693115, 0.5690000057220459, 0.6413333415985107, 0.6806666851043701, 0.6866666674613953, 0.7143333554267883, 0.7139999866485596, 0.7193333506584167, 0.7356666922569275, 0.746666669845581, 0.7509999871253967, 0.734333336353302, 0.7559999823570251, 0.7613333463668823, 0.7670000195503235, 0.7773333191871643, 0.7730000019073486, 0.7773333191871643, 0.7749999761581421, 0.7803333401679993, 0.7773333191871643, 0.7733333110809326, 0.7889999747276306, 0.7863333225250244, 0.7900000214576721, 0.7903333306312561, 0.7889999747276306, 0.7856666445732117, 0.793666660785675, 0.7950000166893005, 0.7973333597183228, 0.796999990940094, 0.7886666655540466, 0.7913333177566528, 0.784333348274231, 0.8050000071525574, 0.8056666851043701, 0.8063333630561829, 0.7960000038146973, 0.8090000152587891, 0.8053333163261414, 0.8050000071525574, 0.8040000200271606, 0.8040000200271606, 0.8066666722297668]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [4, 1, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [23, 42, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [6, 2, 0, 2, 6, 2, 5, 9], [0, 4, 3, 0, 3, 0], [56, 0, 47], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [35, 57]], "fitness": -0.7928571701049805, "mapping_values": [1, 5, 5, 3, 2, 2, 13, 13, 7, 6, 3, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, grad), tf.math.subtract(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(grad, tf.math.square(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))))))), grad), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2569140367000298, 2.06472950695906, 1.62725818171367, 1.2701887267061969, 1.0908140212695014, 0.9928025740752713, 0.9320054581105166, 0.8812733071748812, 0.8351054763938804, 0.8097824591923352, 0.783582552383762, 0.7796349624333491, 0.7577326164789141, 0.7318198496340257, 0.7187846962723199, 0.7103338467761463, 0.6983685237683357, 0.6911000496738733, 0.6702218141144514, 0.6748854380557093, 0.6573868528285975, 0.6528371749552816, 0.6438341803711954, 0.6297868398501495, 0.6326436206192593, 0.633271297679806, 0.6321726149382797, 0.6166038424929986, 0.6067056506065219, 0.6034703149126033, 0.5969372082616297, 0.6016444663849678], "accuracy": [0.20116232335567474, 0.3715493381023407, 0.49293357133865356, 0.5605600476264954, 0.6140536069869995, 0.6483951807022095, 0.672170102596283, 0.6782459616661072, 0.6992471218109131, 0.7055870890617371, 0.7137762308120728, 0.7218332886695862, 0.722229540348053, 0.7304186820983887, 0.7360982894897461, 0.7358341217041016, 0.7404569983482361, 0.7464007139205933, 0.755118191242218, 0.7450799345970154, 0.7614582180976868, 0.7585523724555969, 0.7597411274909973, 0.7656848430633545, 0.7648923397064209, 0.7660810947418213, 0.7644960880279541, 0.7692511081695557, 0.7769119143486023, 0.7783648371696472, 0.7798177003860474, 0.7781006693840027], "val_loss": [1.854243346623012, 1.5276333604540144, 1.0657247815813338, 0.849010671888079, 0.7697234664644513, 0.6956431354795184, 0.6533835274832589, 0.6405759028026036, 0.6073592390332904, 0.5858498811721802, 0.5863285405295235, 0.5633058377674648, 0.5542356627328056, 0.5472273996898106, 0.5542750869478498, 0.5413379158292498, 0.5382888487407139, 0.5345724480492728, 0.5218193701335362, 0.5018359592982701, 0.5014677728925433, 0.497180700302124, 0.500301616532462, 0.4926455872399466, 0.49476667812892366, 0.4800936664853777, 0.4852168389729091, 0.47682305744716097, 0.47200584411621094, 0.4706109421593802, 0.46951208795819965, 0.4712841510772705], "val_accuracy": [0.40966665744781494, 0.5363333225250244, 0.6269999742507935, 0.6700000166893005, 0.6893333196640015, 0.703000009059906, 0.7179999947547913, 0.734666645526886, 0.7406666874885559, 0.7423333525657654, 0.7513333559036255, 0.7559999823570251, 0.7630000114440918, 0.7583333253860474, 0.7486666440963745, 0.7730000019073486, 0.7586666941642761, 0.753000020980835, 0.7676666378974915, 0.7773333191871643, 0.7853333353996277, 0.7879999876022339, 0.7860000133514404, 0.7916666865348816, 0.7913333177566528, 0.7910000085830688, 0.7976666688919067, 0.7900000214576721, 0.7950000166893005, 0.7893333435058594, 0.7929999828338623, 0.7933333516120911]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 1, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 42, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [2, 2, 0, 2, 6, 5, 5, 9], [0, 4, 3, 0, 3, 0, 2, 5, 2], [56, 0, 9], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [43, 57]], "fitness": -0.7811428308486938, "mapping_values": [1, 5, 5, 3, 2, 2, 12, 12, 8, 4, 3, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.subtract(tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), tf.math.square(grad))), tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))))), grad)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9647674693753927, 1.4217608866044764, 1.052775671949413, 0.9184089295616271, 0.8420038163591101, 0.7664024547704884, 0.7760734929148516, 0.7112426466363029, 0.6792986466191495, 0.6892462917889555, 0.6472170871514308, 0.6212706629468812, 0.63544706632401, 0.61748753465036], "accuracy": [0.3403777480125427, 0.521067202091217, 0.6199973821640015, 0.6519614458084106, 0.6880200505256653, 0.7038700580596924, 0.7082287669181824, 0.733588695526123, 0.7448157668113708, 0.739928662776947, 0.7523444890975952, 0.7677981853485107, 0.7567031979560852, 0.7631752490997314], "val_loss": [1.6332494531358992, 0.8780927658081055, 0.7188103880201068, 0.7471774135317121, 0.6012961864471436, 0.6203136444091797, 0.6096956389290946, 0.5404612847736904, 0.5314695324216571, 0.5438375983919416, 0.5363981383187431, 0.5297462940216064, 0.5197809934616089, 0.5213711942945208], "val_accuracy": [0.36533331871032715, 0.5910000205039978, 0.6823333501815796, 0.6460000276565552, 0.7196666598320007, 0.7043333053588867, 0.7196666598320007, 0.7639999985694885, 0.7663333415985107, 0.7473333477973938, 0.7516666650772095, 0.7620000243186951, 0.7509999871253967, 0.765999972820282]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 1, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 1, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1, 2, 2, 0, 2, 0, 0], [86, 42, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [6, 2, 0, 2, 6, 5, 5, 3], [5, 3, 1, 0, 3], [56, 89, 19], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [2, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 0, 7, 8, 4], [3, 0, 0, 1, 3, 3], [35, 57]], "fitness": -0.6365714073181152, "mapping_values": [1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 4, 3, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(sigma, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.119739609513505, 1.2397228227220962, 0.8628962606392391, 0.7788002122945915, 0.7340060006578633, 0.666858989667143, 0.6203523887587796, 0.5988538273415939, 0.5793598721433924, 0.562835315171801, 0.5447346306299065, 0.5414959684087144, 0.5328365724242012, 0.5249522692098153, 0.4960407247286368, 0.47994263844719304, 0.47928687760842836, 0.4740493809542305, 0.46793825966318947, 0.4617276811179326, 0.4721457280691951, 0.4690914622245605, 0.46530126393227106, 0.46968949055627607, 0.4641037362323477], "accuracy": [0.2793554365634918, 0.577070415019989, 0.6767930388450623, 0.6973979473114014, 0.7169462442398071, 0.7390040755271912, 0.7552502751350403, 0.763439416885376, 0.7753269076347351, 0.7848368883132935, 0.7865539789199829, 0.7955356240272522, 0.8057059645652771, 0.7994980812072754, 0.8092722296714783, 0.8131026029586792, 0.8162726163864136, 0.8198388814926147, 0.8208954930305481, 0.8193105459213257, 0.8227446675300598, 0.8198388814926147, 0.8191784620285034, 0.8253863453865051, 0.8232730031013489], "val_loss": [1.0944900172097343, 0.7128797599247524, 0.6147094283785138, 0.5818631138120379, 0.5256576708384922, 0.49604332447052, 0.46956370558057514, 0.48660458837236675, 0.45024809667042326, 0.45119199582508634, 0.4509889909199306, 0.445432824747903, 0.44641389165605816, 0.4137705479349409, 0.4175892642566136, 0.428995566708701, 0.41953793593815397, 0.4287804535457066, 0.4156244567462376, 0.40952149459293913, 0.42968807901654926, 0.46723878383636475, 0.4255530153002058, 0.453547545841762, 0.446591854095459], "val_accuracy": [0.5986666679382324, 0.7196666598320007, 0.7160000205039978, 0.7400000095367432, 0.7649999856948853, 0.7639999985694885, 0.7863333225250244, 0.7896666526794434, 0.7976666688919067, 0.8100000023841858, 0.8026666641235352, 0.8116666674613953, 0.8113333582878113, 0.8159999847412109, 0.8213333487510681, 0.8306666612625122, 0.8349999785423279, 0.8240000009536743, 0.8330000042915344, 0.8399999737739563, 0.8320000171661377, 0.8330000042915344, 0.8320000171661377, 0.8289999961853027, 0.8306666612625122]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 1, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 42, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [6, 2, 0, 2, 0, 1, 5, 9], [0, 0, 3, 0, 3], [11, 0, 47, 79], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [35, 57]], "fitness": -0.3685714304447174, "mapping_values": [1, 5, 5, 3, 2, 2, 12, 12, 8, 4, 4, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.subtract(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.4813911684468564, 2.2981062164364583, 2.2600624430622043, 2.3939059634391957, 2.297821354321233, 2.2226461511104807, 2.3047336366875393, 2.3035467839307158], "accuracy": [0.22097477316856384, 0.13393211364746094, 0.16338661313056946, 0.18597279489040375, 0.12191256135702133, 0.17963281273841858, 0.09642054885625839, 0.09509972482919693], "val_loss": [1.7620998791285925, 1.9709039415631975, 1.426091262272426, 1.9726029804774694, 1.9737074715750558, 1.975853102547782, 1.9743047441755022, 1.9738591739109583], "val_accuracy": [0.3269999921321869, 0.1003333330154419, 0.3723333477973938, 0.09799999743700027, 0.12033333629369736, 0.09966666996479034, 0.09966666996479034, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 9, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 42, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [6, 2, 0, 2, 6, 5, 5, 9], [0, 4, 3, 0, 3], [56, 80, 74], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 4, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [43, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 12, 12, 8, 4, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.square(tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))), grad)), tf.math.add(beta, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))))), grad), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07555144280195236, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [5, 0, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [50, 42, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [2, 0, 0, 2, 6, 0, 5, 9], [0, 0, 3, 0, 3], [47, 0, 47], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [0, 2, 0, 1, 3, 3], [79, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 4, 4, 2, 2, 2, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2669915077.0179462, 418213897088.9975, 6928498108139.272, 49939379539310.67, 217260620030022.34, 722434626557365.2], "accuracy": [0.09813763201236725, 0.10210011899471283, 0.09721305221319199, 0.09813763201236725, 0.10394927859306335, 0.10210011899471283], "val_loss": [23110961444.57143, 1245710834541.7144, 13370042651209.143, 72888998391222.86, 273021167655789.72, 805374991606930.2], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 1, 9, 5, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 42, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [6, 2, 0, 2, 6, 5, 5, 9], [0, 4, 3, 0, 3], [56, 0, 47], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [40, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07555144280195236, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 0, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 42, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0], [0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [6, 2, 8, 2, 6, 5, 5, 9], [3, 4, 3, 0, 3], [56, 0, 74], [0, 0, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [43, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 3, 0, 1, 6, 6, 3, 3, 0, 3, 2, 1, 1, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(grad, tf.math.add(beta, grad)), tf.math.add(beta, tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [5.917972295039586, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12812046706676483, 0.09774138033390045, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [98742.33705357143, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 1, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [47, 42, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1], [6, 2, 0, 2, 6, 5, 5, 9], [0, 4, 3, 0, 3], [56, 0, 19], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [0, 0, 0, 1, 3, 3], [43, 57, 10]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 5, 0, 2, 12, 12, 8, 4, 3, 1, 1, 0, 1, 0, 12, 7, 5, 3], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))), grad)), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.pow(tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma))))))", "other_info": {"loss": [2.3028310387283506, 2.3026361254779117, 2.3026611092635085, 2.302725148884344, 2.302801163504231, 2.3028001470053123, 2.302892514759004], "accuracy": [0.09549596905708313, 0.0956280529499054, 0.09377889335155487, 0.09470347315073013, 0.09879804402589798, 0.09998679161071777, 0.09602430462837219], "val_loss": [1.9736486162458147, 1.9736356054033553, 1.9736360822405135, 1.973630700792585, 1.9736597878592355, 1.973670278276716, 1.9736720493861608], "val_accuracy": [0.09966666996479034, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.1003333330154419, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [5, 9, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 42, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [6, 2, 0, 2, 6, 5, 5, 9], [0, 4, 3, 0, 3], [56, 0, 74], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [43, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 2, 0, 1, 12, 12, 7, 5, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.square(grad))), tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))))), tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07555144280195236, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 1, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 42, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [6, 2, 0, 2, 8, 5, 5, 9, 7], [3, 4, 3, 0, 3], [56, 0, 19], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 0, 7, 8, 4], [0, 0, 0, 1, 3, 3], [43, 57, 42]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 3, 1, 1, 13, 13, 9, 4, 2, 1, 1, 0, 1, 0, 6, 3, 3, 3], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), alpha))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))))), grad))), tf.math.add(beta, tf.math.add(grad, grad))), tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1102790507.8568711, 21575832142.243824, 99106972181.43759, 277461846437.1777, 590019109986.0583, 1093833482645.7588], "accuracy": [0.09813763201236725, 0.10210011899471283, 0.09721305221319199, 0.09813763201236725, 0.10394927859306335, 0.1022322028875351], "val_loss": [4303957577.142858, 34421126875.42857, 116158669970.28572, 275324993536.0, 537729190180.5714, 929177010176.0], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 9, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 42, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [6, 2, 0, 2, 6, 5, 5, 9], [0, 4, 3, 0, 3], [56, 0, 74], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [43, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 12, 7, 5, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 0, 4, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 42, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [6, 2, 0, 2, 6, 5, 5, 9], [3, 4, 3, 2, 3, 0, 2, 5, 2], [38, 0, 19], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [4, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [43, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 11, 11, 6, 5, 0, 1, 1, 0, 1, 0, 8, 4, 4, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.negative(tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.math.square(grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(sigma, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 0, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 42, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1], [2, 2, 0, 2, 2, 5, 5, 9], [0, 4, 3, 0, 3, 0, 2, 5, 2], [56, 0, 47], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [3, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [35, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 10, 10, 5, 5, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), grad)))), tf.math.add(beta, grad)), tf.math.add(tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2713336231.5911202, 18507745737.366894, 376233237.64308816, 2.849964340680059, 3.0645279619813737, 3.3706484053191916], "accuracy": [0.09576013684272766, 0.09245806187391281, 0.10051512718200684, 0.09879804402589798, 0.10011887550354004, 0.09800554811954498], "val_loss": [2290470034.285714, 2389521042.285714, 2.262728759220668, 2.4063610349382674, 2.6074816840035573, 2.871854373386928], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [0, 0, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 1, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1, 2, 2, 0, 2, 0, 0], [86, 42, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [6, 2, 0, 2, 3, 5, 5, 9, 8], [0, 4, 3, 3, 3, 0, 2, 5, 2], [56, 89, 19], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [2, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [0, 0, 0, 1, 3, 3], [1, 57, 80]], "fitness": -0.09971428662538528, "mapping_values": [1, 3, 3, 3, 0, 1, 13, 13, 9, 4, 2, 1, 1, 0, 1, 0, 4, 2, 2, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))), tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.sqrt(grad))))), grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.307546526134573, 2.3396304577978735, 2.4361346698219846, 2.6088594719246, 2.880677522338849, 3.274565642803667, 3.74353996769879, 4.39494663562757, 5.124534822143285, 5.963080155079501], "accuracy": [0.08942015469074249, 0.09866596013307571, 0.09787346422672272, 0.09681680053472519, 0.10051512718200684, 0.10051512718200684, 0.09760929644107819, 0.10394927859306335, 0.1002509593963623, 0.10236428678035736], "val_loss": [1.9776874269757951, 2.0034787314278737, 2.064963068280901, 2.1736012867518832, 2.3422429902212962, 2.581182139260428, 2.8966067859104703, 3.290252208709717, 3.760727746146066, 4.304919106619699], "val_accuracy": [0.070333331823349, 0.09300000220537186, 0.09733333438634872, 0.09733333438634872, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [5, 1, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [69, 42, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [6, 2, 0, 2, 6, 5, 5, 9], [0, 4, 3, 0, 3], [56, 0, 47], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [1, 0, 0, 1, 3, 3], [31, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.301317439559838, 2.3020441571183885, 2.30228492710112, 2.3017240409538684, 2.302694379598426, 2.3029610182331726], "accuracy": [0.08770307898521423, 0.09391097724437714, 0.09470347315073013, 0.0940430611371994, 0.09377889335155487, 0.09206181764602661], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]