[{"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [5, 4, 8, 8, 8, 0, 7, 1, 1, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 9, 4], [1, 2, 2, 1, 1, 2, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7854285836219788, "mapping_values": [1, 14, 14, 9, 5, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(alpha))), tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.subtract(tf.math.subtract(grad, alpha), alpha))))))))), lambda shape,  alpha, beta, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2926383528018497, 2.2653568149982837, 2.2374819379047457, 2.196098570306587, 2.142477225854239, 2.0699759597523872, 1.9727032767027408, 1.8544030540954042, 1.7250978434641662, 1.5996902331133183, 1.4850879400759924, 1.3914266471865313, 1.3082363822629912, 1.2314888952021208, 1.1920309219031586, 1.145582981570018, 1.0967885955544259, 1.066756299379369, 1.0320430320598162, 1.0175813133407026, 0.9802180787103366, 0.968159728794365, 0.93438366355047, 0.9312882046768174, 0.9093113836280391, 0.9029173768349233, 0.8827756436477956, 0.8782530398086046, 0.8626498428113456, 0.8464896679869292, 0.8419483655227441, 0.8386862681778336, 0.8226303376966951, 0.8134962697511556, 0.8214858818079392, 0.8040792707753864, 0.7950892356077851, 0.7962211477537637, 0.7822085368225461, 0.7761459147153892, 0.7658447450288393, 0.7640337410257824, 0.7620464330808503, 0.7579460263630151, 0.7636701567077586, 0.7479687497411437, 0.742416876402545, 0.7379119153728795, 0.7297788950682411, 0.7350786113704374, 0.7252378412808378, 0.7231799396683181, 0.7129282476391539, 0.721096275079803, 0.7057413923553015, 0.7089239591384497, 0.7084144888269336, 0.7095930482638653, 0.6943510501391978, 0.6995573335036531, 0.6939932791989288, 0.692997363926539, 0.6911994281257259, 0.6947303720909953, 0.6878673912921145], "accuracy": [0.1154404953122139, 0.1850482076406479, 0.24659886956214905, 0.3097345232963562, 0.35345396399497986, 0.38647469878196716, 0.41751420497894287, 0.4411570429801941, 0.4691586196422577, 0.49768856167793274, 0.516180157661438, 0.5354642868041992, 0.5602958798408508, 0.5724474787712097, 0.5842028856277466, 0.5935807824134827, 0.6170915365219116, 0.6273940205574036, 0.6330735683441162, 0.6386210322380066, 0.6543388962745667, 0.6485272645950317, 0.667811393737793, 0.6736230254173279, 0.6750759482383728, 0.6741513609886169, 0.6856426000595093, 0.6831330060958862, 0.6902654767036438, 0.693831741809845, 0.6983225345611572, 0.6985867023468018, 0.6993792057037354, 0.709549605846405, 0.7014925479888916, 0.7091533541679382, 0.7125874757766724, 0.7107383608818054, 0.7194558382034302, 0.7136441469192505, 0.7190595865249634, 0.7169462442398071, 0.7191916704177856, 0.7205125093460083, 0.7152291536331177, 0.724739134311676, 0.7271166443824768, 0.7251353859901428, 0.7292299270629883, 0.720380425453186, 0.7351737022399902, 0.7317395210266113, 0.7338528633117676, 0.7296261787414551, 0.7449478507041931, 0.7413815855979919, 0.7446836829185486, 0.7337207794189453, 0.7427024245262146, 0.7424382567405701, 0.7392682433128357, 0.7411174178123474, 0.7416457533836365, 0.7395324110984802, 0.7421740889549255], "val_loss": [1.9466838155473982, 1.9203036853245325, 1.8883467401776994, 1.845097201211112, 1.7852351324898856, 1.7040795258113317, 1.5992907796587263, 1.4754729270935059, 1.343104566846575, 1.2166735104152135, 1.1067169053213937, 1.0213522570473808, 0.9517077377864293, 0.8957189832414899, 0.8517304318291801, 0.8172331707818168, 0.7882855790002006, 0.7642350196838379, 0.7426837342126029, 0.7267817599432809, 0.709930453981672, 0.6941894803728376, 0.6812710080827985, 0.670879602432251, 0.660997714315142, 0.652861475944519, 0.6439306225095477, 0.6380429949079242, 0.6293879917689732, 0.6239114659173148, 0.6168310642242432, 0.6094881977353778, 0.6050049407141549, 0.5988658326012748, 0.5955296754837036, 0.5910941021783012, 0.5876777853284564, 0.5840438434055873, 0.5784606422696795, 0.5769590139389038, 0.5721545389720372, 0.5693266051156181, 0.5641826561519078, 0.562804102897644, 0.5610867057527814, 0.5563893147877285, 0.5535743406840733, 0.5524663243974958, 0.5491860083171299, 0.5471865279333932, 0.5438085453850883, 0.5414915084838867, 0.537726879119873, 0.5371540103639875, 0.5371691158839634, 0.5327062095914569, 0.5297236612864903, 0.5273465429033551, 0.5279004233224052, 0.5243745020457676, 0.5236450263432094, 0.5201781477246966, 0.5194752216339111, 0.5185501405170986, 0.5157659734998431], "val_accuracy": [0.23133333027362823, 0.3643333315849304, 0.40799999237060547, 0.4449999928474426, 0.4896666705608368, 0.5296666622161865, 0.550000011920929, 0.574999988079071, 0.5903333425521851, 0.6156666874885559, 0.6343333125114441, 0.6466666460037231, 0.6683333516120911, 0.6756666898727417, 0.6809999942779541, 0.687666654586792, 0.6890000104904175, 0.6996666789054871, 0.6990000009536743, 0.7020000219345093, 0.7126666903495789, 0.715666651725769, 0.7153333425521851, 0.7153333425521851, 0.7250000238418579, 0.7273333072662354, 0.7283333539962769, 0.7256666421890259, 0.7306666374206543, 0.7360000014305115, 0.7366666793823242, 0.7406666874885559, 0.7416666746139526, 0.7450000047683716, 0.7426666617393494, 0.7429999709129333, 0.7459999918937683, 0.7459999918937683, 0.7540000081062317, 0.75, 0.75, 0.7586666941642761, 0.7553333044052124, 0.7586666941642761, 0.7573333382606506, 0.7646666765213013, 0.7636666893959045, 0.7593333125114441, 0.7649999856948853, 0.7609999775886536, 0.7636666893959045, 0.7649999856948853, 0.7689999938011169, 0.7639999985694885, 0.7633333206176758, 0.7716666460037231, 0.7699999809265137, 0.7676666378974915, 0.7713333368301392, 0.7770000100135803, 0.7739999890327454, 0.7756666541099548, 0.7770000100135803, 0.7749999761581421, 0.7749999761581421]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 4, 2, 8, 8, 1, 7, 0, 1, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9, 9, 4], [1, 2, 3, 1, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [18, 8, 39, 58, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7848571538925171, "mapping_values": [1, 7, 7, 4, 3, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2926383528018497, 2.265356752016226, 2.23748225728676, 2.196099213542341, 2.142477810674135, 2.0699769765032343, 1.9727015088751112, 1.8544032046540129, 1.7251062034820568, 1.5997058806906224, 1.4851074945877856, 1.3914483404587823, 1.3082557900108445, 1.231508854798763, 1.1920404609609132, 1.1456041748277137, 1.0967915208663104, 1.0667547719857444, 1.0320279448338787, 1.0175782748815516, 0.9801964983098055, 0.9681268109621515, 0.9343754728598412, 0.9312859076739397, 0.9092805108232364, 0.9028990969461393, 0.8827635147127225, 0.8782611924895616, 0.8627020565037872, 0.8465046742730499, 0.8419182716564118, 0.8387020063941915, 0.8226309407498968, 0.8136119983766561, 0.8214738968341043, 0.8040860537697909, 0.7950948486396145, 0.7961928571975777, 0.7822562313712804, 0.7762006233711882, 0.7659589361363492, 0.7640327963579002, 0.7621148849254775, 0.7579903475218887, 0.7637352559387314, 0.7479130178316, 0.7424532532093626, 0.7379207183593268, 0.7298821412010152, 0.7351297035256334, 0.7253501693869563, 0.7232491659718167, 0.7129360207666133, 0.7211188806471587, 0.7057194322438177, 0.7090485212730773, 0.7084038320659662, 0.7095148113850573, 0.6944231499046021, 0.6995921036224355, 0.6939677402107487, 0.69293472112965, 0.6911848042115496, 0.6948061136836625, 0.6879234565105798], "accuracy": [0.1154404953122139, 0.1850482076406479, 0.24659886956214905, 0.3097345232963562, 0.3535860478878021, 0.38660678267478943, 0.41764628887176514, 0.44089287519454956, 0.46889445185661316, 0.49768856167793274, 0.516180157661438, 0.5352001190185547, 0.5605600476264954, 0.5721833109855652, 0.5843349695205688, 0.5937128663063049, 0.6172236204147339, 0.627129852771759, 0.6330735683441162, 0.6383568644523621, 0.6543388962745667, 0.6481310129165649, 0.6679434776306152, 0.6736230254173279, 0.6756042838096619, 0.6744155287742615, 0.6853784322738647, 0.6828688383102417, 0.6892088055610657, 0.6940959095954895, 0.6984546184539795, 0.698718786239624, 0.6996433734893799, 0.7098137736320496, 0.7014925479888916, 0.7088891863822937, 0.7127195596694946, 0.7112666964530945, 0.7195879220962524, 0.7140403985977173, 0.7189275026321411, 0.7172104120254517, 0.719852089881897, 0.7207766771316528, 0.7148329019546509, 0.7252674698829651, 0.7268524765968323, 0.7260599732398987, 0.7288337349891663, 0.7210407853126526, 0.7353057861328125, 0.7318716049194336, 0.7338528633117676, 0.7288337349891663, 0.7450799345970154, 0.7412495017051697, 0.7448157668113708, 0.7339849472045898, 0.7421740889549255, 0.7428345084190369, 0.7391361594200134, 0.7405890822410583, 0.7412495017051697, 0.7404569983482361, 0.7425703406333923], "val_loss": [1.946683747427804, 1.9203033447265625, 1.8883469445364816, 1.8450987679617745, 1.7852351324898856, 1.7040752683367049, 1.5992893150874548, 1.4754835537501745, 1.3431272847311837, 1.2166815485273088, 1.1067428929465157, 1.0213566848209925, 0.9517085552215576, 0.8957206181117466, 0.8517489262989589, 0.8172227825437274, 0.7882978234972272, 0.7642454930714199, 0.7427012920379639, 0.7267982108252389, 0.7099445036479405, 0.6941955430167062, 0.6813273429870605, 0.670912333897182, 0.6610674517495292, 0.6528639963694981, 0.6439501898629325, 0.6380855015345982, 0.6295082909720284, 0.623953035899571, 0.6168564558029175, 0.6094933748245239, 0.6050549915858677, 0.598905188696725, 0.595556378364563, 0.5911408322198051, 0.5877065658569336, 0.5840453250067574, 0.578421814101083, 0.5769364322934832, 0.5721494640622821, 0.5693912165505546, 0.5642434699194772, 0.5628405468804496, 0.5611038378306797, 0.5564299481255668, 0.5536236081804548, 0.5525527851922172, 0.5492030552455357, 0.547237924167088, 0.5438499791281564, 0.5414919342313494, 0.5377319369997297, 0.5371308326721191, 0.5370800495147705, 0.5326333897454398, 0.529684168951852, 0.5273618016924176, 0.5279245546885899, 0.5244077614375523, 0.5235076120921544, 0.5201139109475272, 0.519466621535165, 0.5186055387769427, 0.5158275365829468], "val_accuracy": [0.23133333027362823, 0.3643333315849304, 0.40799999237060547, 0.4449999928474426, 0.4896666705608368, 0.5296666622161865, 0.5496666431427002, 0.5746666789054871, 0.5899999737739563, 0.6156666874885559, 0.6346666812896729, 0.6466666460037231, 0.6683333516120911, 0.6756666898727417, 0.6809999942779541, 0.687666654586792, 0.6890000104904175, 0.6996666789054871, 0.6986666917800903, 0.7020000219345093, 0.7129999995231628, 0.715666651725769, 0.7153333425521851, 0.7153333425521851, 0.7243333458900452, 0.7276666760444641, 0.7283333539962769, 0.7250000238418579, 0.7310000061988831, 0.7356666922569275, 0.7366666793823242, 0.7413333058357239, 0.7413333058357239, 0.7446666955947876, 0.7426666617393494, 0.7429999709129333, 0.7456666827201843, 0.7463333606719971, 0.7546666860580444, 0.75, 0.7509999871253967, 0.7583333253860474, 0.7549999952316284, 0.7586666941642761, 0.7570000290870667, 0.7639999985694885, 0.7633333206176758, 0.7586666941642761, 0.7643333077430725, 0.7609999775886536, 0.7633333206176758, 0.7646666765213013, 0.7696666717529297, 0.7643333077430725, 0.7639999985694885, 0.7720000147819519, 0.7710000276565552, 0.7683333158493042, 0.7710000276565552, 0.7766666412353516, 0.7746666669845581, 0.7749999761581421, 0.7766666412353516, 0.7753333449363708, 0.7753333449363708]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 4, 2, 8, 8, 1, 7, 0, 1, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9, 9, 4], [1, 2, 1, 1, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [18, 8, 39, 58, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7760000228881836, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2926383528018497, 2.2653568149982837, 2.2374822033426276, 2.1960991505602836, 2.1424786519884607, 2.069976697177809, 1.9726987045045228, 1.8543945202155434, 1.7250997154641192, 1.5997011373858994, 1.485102550779682, 1.3914458671376344, 1.308267267640587, 1.231507462108014, 1.1920416337812991, 1.1455521377448346, 1.0967447594282507, 1.0667495768319946, 1.032004410769284, 1.0175381658288545, 0.980152072317297, 0.9680891125555823, 0.9342682368530809, 0.9311595513379459, 0.9091826282818525, 0.9028515886668406, 0.8826796462853602, 0.8781706849739237, 0.8626726203905735, 0.8464697048475461, 0.8418866082299671, 0.8386920884836147, 0.8225889100358943, 0.8135592661765525, 0.821508323039361, 0.8041133785197417, 0.7950734650029041, 0.7961957481055133, 0.7822331460853373, 0.7761966583908604, 0.7658811592627447, 0.7640625634575722, 0.7621230524229635, 0.757996090257393, 0.7637092478601861, 0.747892194845421, 0.7424499211042407, 0.7378982934166396, 0.7297574557396462, 0.7350808309604936, 0.7253527734509831], "accuracy": [0.1154404953122139, 0.1850482076406479, 0.24659886956214905, 0.3097345232963562, 0.35345396399497986, 0.38647469878196716, 0.41764628887176514, 0.4410249590873718, 0.46929070353507996, 0.4979526996612549, 0.516180157661438, 0.5350680351257324, 0.5602958798408508, 0.572579562664032, 0.5843349695205688, 0.5934486985206604, 0.617751955986023, 0.6272619366645813, 0.6326773166656494, 0.6382247805595398, 0.6547351479530334, 0.6478668451309204, 0.6680755615234375, 0.6733588576316833, 0.6754721999168396, 0.6738871932029724, 0.6856426000595093, 0.6831330060958862, 0.6889446377754211, 0.6939638257026672, 0.6979262828826904, 0.6985867023468018, 0.6997754573822021, 0.709549605846405, 0.7014925479888916, 0.7086250185966492, 0.7128516435623169, 0.7111346125602722, 0.7193237543106079, 0.7137762308120728, 0.7187954187393188, 0.7177387475967407, 0.7194558382034302, 0.7207766771316528, 0.7147008180618286, 0.7251353859901428, 0.7269845604896545, 0.7257958054542542, 0.7293620109558105, 0.7206445932388306, 0.7351737022399902], "val_loss": [1.9466838836669922, 1.9203036853245325, 1.8883470126560755, 1.8450993810381209, 1.7852354730878557, 1.7040756770542689, 1.599276099886213, 1.4754721437181746, 1.3431230272565569, 1.2166789259229387, 1.1067440850394112, 1.0213756220681327, 0.9517253467014858, 0.8957319940839495, 0.85172586781638, 0.817215119089399, 0.7882683277130127, 0.7642396688461304, 0.742667555809021, 0.7267575093678066, 0.7098553010395595, 0.6941391229629517, 0.6812759467533657, 0.6708294493811471, 0.6609877177647182, 0.6527715751102993, 0.6438301971980503, 0.638005222593035, 0.6294340917042324, 0.6239066805158343, 0.6168439388275146, 0.6094578334263393, 0.6050336360931396, 0.5988925354821342, 0.5955561910356794, 0.5911574193409511, 0.5876641614096505, 0.5840680428913662, 0.5785138096128192, 0.5770029170172555, 0.5721024956021991, 0.5692918470927647, 0.564227989741734, 0.5628024509974888, 0.5610943862370082, 0.5564849546977452, 0.5536438737596784, 0.5525377988815308, 0.5491415773119245, 0.5472543409892491, 0.5437782662255424], "val_accuracy": [0.23133333027362823, 0.3643333315849304, 0.40799999237060547, 0.4449999928474426, 0.4896666705608368, 0.5296666622161865, 0.550000011920929, 0.5746666789054871, 0.5899999737739563, 0.6153333187103271, 0.6349999904632568, 0.6466666460037231, 0.6683333516120911, 0.6756666898727417, 0.6813333630561829, 0.687333345413208, 0.6886666417121887, 0.6996666789054871, 0.6986666917800903, 0.7020000219345093, 0.7129999995231628, 0.715666651725769, 0.7149999737739563, 0.7153333425521851, 0.7246666550636292, 0.7279999852180481, 0.7289999723434448, 0.7260000109672546, 0.7316666841506958, 0.7360000014305115, 0.7366666793823242, 0.7416666746139526, 0.7409999966621399, 0.7446666955947876, 0.7426666617393494, 0.7426666617393494, 0.7459999918937683, 0.746666669845581, 0.7536666393280029, 0.7506666779518127, 0.7506666779518127, 0.7576666474342346, 0.7553333044052124, 0.7586666941642761, 0.7576666474342346, 0.7649999856948853, 0.7636666893959045, 0.7593333125114441, 0.7646666765213013, 0.7609999775886536, 0.7636666893959045]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 8, 8, 8, 1, 7, 0, 3, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 9, 4], [1, 2, 2, 1, 1, 2, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [4, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7760000228881836, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2926383528018497, 2.2653567790355287, 2.2374816950144405, 2.1960984082852435, 2.1424782514540652, 2.0699794099724853, 1.9727081325564009, 1.8544104243345139, 1.7251125714719382, 1.5997117224181758, 1.4851170044533566, 1.391442791723761, 1.3082564411980837, 1.2314965312412591, 1.1920350357809433, 1.14556280186683, 1.096742127376572, 1.0667099257690749, 1.0319929291559264, 1.0175554461372747, 0.9801387261358692, 0.9680828578625499, 0.9343326839757019, 0.9312040764563403, 0.9092630455050218, 0.9028395887977491, 0.8827225612044697, 0.8782331976183906, 0.8626596101790592, 0.8464839010663147, 0.8419087668608964, 0.8386973123493101, 0.8226082136114244, 0.8134960730266987, 0.8214707186807495, 0.8040652363181602, 0.7950855146908032, 0.7962208259469403, 0.7822386712257053, 0.7761428777992985, 0.7659066976683409, 0.7640323655370078, 0.7620220959477846, 0.7579377960802903, 0.763719548575709, 0.7479035121700814, 0.74243937275114, 0.7379330147558184, 0.7297509320502457, 0.735119142324193, 0.72533968246498], "accuracy": [0.1154404953122139, 0.1850482076406479, 0.24646678566932678, 0.3097345232963562, 0.3535860478878021, 0.38647469878196716, 0.4177783727645874, 0.4410249590873718, 0.46889445185661316, 0.49768856167793274, 0.5160480737686157, 0.5349359512329102, 0.5605600476264954, 0.5724474787712097, 0.5844670534133911, 0.5934486985206604, 0.6176198720932007, 0.6275261044502258, 0.6332056522369385, 0.6380926966667175, 0.6543388962745667, 0.6482630968093872, 0.667811393737793, 0.6730946898460388, 0.6756042838096619, 0.6744155287742615, 0.6861709356307983, 0.6831330060958862, 0.6897371411323547, 0.6939638257026672, 0.698190450668335, 0.6980583667755127, 0.6997754573822021, 0.709549605846405, 0.7013604640960693, 0.7088891863822937, 0.7117950320243835, 0.7107383608818054, 0.7193237543106079, 0.713908314704895, 0.7191916704177856, 0.7172104120254517, 0.719852089881897, 0.7205125093460083, 0.7147008180618286, 0.724739134311676, 0.7273808121681213, 0.7256637215614319, 0.7292299270629883, 0.7207766771316528, 0.7347774505615234], "val_loss": [1.94668367930821, 1.9203034809657507, 1.8883463314601354, 1.8450984954833984, 1.7852371760777064, 1.7040817056383406, 1.5992987837110246, 1.4754901613507951, 1.3431414876665388, 1.2167015756879533, 1.1067521231515067, 1.0213751792907715, 0.9517187050410679, 0.8957220145634243, 0.8517329352242606, 0.8171863555908203, 0.788296103477478, 0.7642429215567452, 0.7426684583936419, 0.7267534221921649, 0.7098802328109741, 0.6941595929009574, 0.6812734433582851, 0.6708283254078456, 0.6609623943056379, 0.6527973583766392, 0.6438642399651664, 0.6379932676042829, 0.6293585300445557, 0.623905965260097, 0.6168091467448643, 0.6094761916569301, 0.6050444160188947, 0.5988625458308628, 0.5955884626933506, 0.591098393712725, 0.5876647063664028, 0.5840528181621006, 0.5784007651465279, 0.5769869770322528, 0.572121398789542, 0.5694166421890259, 0.5642613172531128, 0.5627739429473877, 0.561170152255467, 0.5564533131463187, 0.5535734380994525, 0.5524093082972935, 0.5490861279623849, 0.5471601997103009, 0.5438295091901507], "val_accuracy": [0.23133333027362823, 0.3643333315849304, 0.40799999237060547, 0.4449999928474426, 0.4896666705608368, 0.5296666622161865, 0.550000011920929, 0.5746666789054871, 0.5903333425521851, 0.6156666874885559, 0.6343333125114441, 0.6466666460037231, 0.6683333516120911, 0.6756666898727417, 0.6809999942779541, 0.687333345413208, 0.6886666417121887, 0.699999988079071, 0.6986666917800903, 0.7020000219345093, 0.7129999995231628, 0.7149999737739563, 0.7146666646003723, 0.7153333425521851, 0.7250000238418579, 0.7276666760444641, 0.7283333539962769, 0.7260000109672546, 0.7310000061988831, 0.7360000014305115, 0.7369999885559082, 0.7409999966621399, 0.7409999966621399, 0.7443333268165588, 0.7426666617393494, 0.7423333525657654, 0.746999979019165, 0.7459999918937683, 0.7543333172798157, 0.750333309173584, 0.7513333559036255, 0.7586666941642761, 0.7553333044052124, 0.7583333253860474, 0.7576666474342346, 0.765666663646698, 0.7636666893959045, 0.7593333125114441, 0.7649999856948853, 0.7609999775886536, 0.7636666893959045]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [0, 4, 2, 8, 6, 1, 3, 0, 5, 3, 3, 7, 8, 9, 3, 4, 6, 2, 7, 8, 7, 1, 4, 6, 9, 4, 0, 5], [1, 1, 2, 1, 1, 2, 2, 2, 0, 2, 0, 0, 3, 2, 3, 0, 3], [30, 66, 39, 2, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7760000228881836, "mapping_values": [1, 45, 45, 28, 17, 6, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.add(alpha, grad)))))), tf.math.add(alpha, alpha))), alpha)))), tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, grad)), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), grad)))))), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), grad))), tf.math.add(alpha, grad))), tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))))), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2926383528018497, 2.2653568149982837, 2.2374818074689045, 2.1960987681962116, 2.1424800326496367, 2.0699875964118255, 1.9727186885224577, 1.8544267318378176, 1.7251383466113435, 1.599759497804381, 1.4851652615105928, 1.3914821635084917, 1.3082759370578356, 1.231529299483213, 1.192071095181809, 1.1455901359538707, 1.0968240615698357, 1.0667771333559173, 1.03205935149822, 1.0175975229856344, 0.9802259153866922, 0.9681500209053321, 0.9344128134810866, 0.9312707743451359, 0.9093419816263789, 0.9029146454605397, 0.8827852197704912, 0.8782987119247412, 0.862694735209609, 0.8463983612840894, 0.8420307361659215, 0.83884394880551, 0.822572026160163, 0.8136326612781902, 0.8215605158296322, 0.8041143929008889, 0.7951138866198078, 0.7962152732834131, 0.7822393555100159, 0.7762326292861895, 0.7659340716151514, 0.7640105195568853, 0.7620898235144947, 0.7579788399441777, 0.7637149737716084, 0.7479561769557651, 0.7424108625765191, 0.737908276836429, 0.7298388635209995, 0.7351211189137253, 0.7253437426269425], "accuracy": [0.1154404953122139, 0.1850482076406479, 0.24646678566932678, 0.3097345232963562, 0.35345396399497986, 0.38660678267478943, 0.4177783727645874, 0.4410249590873718, 0.46929070353507996, 0.49768856167793274, 0.5163122415542603, 0.5354642868041992, 0.5605600476264954, 0.572579562664032, 0.5843349695205688, 0.5935807824134827, 0.6173557043075562, 0.6272619366645813, 0.6333377361297607, 0.6384889483451843, 0.6547351479530334, 0.6485272645950317, 0.6679434776306152, 0.6738871932029724, 0.6752080321311951, 0.6745476126670837, 0.6857746839523315, 0.6826046705245972, 0.6897371411323547, 0.6947563290596008, 0.6992471218109131, 0.6983225345611572, 0.6999075412750244, 0.7096816897392273, 0.7017567157745361, 0.709021270275116, 0.7125874757766724, 0.7104741930961609, 0.7191916704177856, 0.7141724824905396, 0.7191916704177856, 0.7173424959182739, 0.719852089881897, 0.7206445932388306, 0.7152291536331177, 0.7246070504188538, 0.7265883088111877, 0.7257958054542542, 0.7289658188819885, 0.7209087014198303, 0.7343811988830566], "val_loss": [1.94668367930821, 1.9203036172049386, 1.8883464676993233, 1.8450989723205566, 1.7852428981236048, 1.704091991697039, 1.599311249596732, 1.4755140713282995, 1.3431715624673026, 1.2167576381138392, 1.1067936079842704, 1.021407229559762, 0.9517506190708706, 0.8957502501351493, 0.8517405646187919, 0.8172178949628558, 0.7882964611053467, 0.7642416954040527, 0.74268867288317, 0.7267624991280692, 0.709888049534389, 0.6941580942698887, 0.6812999759401593, 0.670891284942627, 0.6610091584069389, 0.6528451783316476, 0.6439389501299176, 0.6380770036152431, 0.6294299534388951, 0.6239715984889439, 0.6168956926890782, 0.6095326457704816, 0.6050891365323748, 0.598918046270098, 0.5955629689352853, 0.5911884818758283, 0.5877386331558228, 0.584050008228847, 0.5784174033573696, 0.5769388335091727, 0.5721234594072614, 0.569347620010376, 0.5642465693610055, 0.5628271273204258, 0.5610679388046265, 0.5563939639500209, 0.5535955088479179, 0.5525522742952619, 0.5491303375789097, 0.5471741812569755, 0.543764454977853], "val_accuracy": [0.23133333027362823, 0.3643333315849304, 0.40799999237060547, 0.4449999928474426, 0.4896666705608368, 0.5293333530426025, 0.550000011920929, 0.574999988079071, 0.5899999737739563, 0.6156666874885559, 0.6346666812896729, 0.6466666460037231, 0.6679999828338623, 0.6756666898727417, 0.6806666851043701, 0.687333345413208, 0.6890000104904175, 0.699999988079071, 0.6990000009536743, 0.7020000219345093, 0.7129999995231628, 0.7153333425521851, 0.7149999737739563, 0.715666651725769, 0.7246666550636292, 0.7269999980926514, 0.7283333539962769, 0.7256666421890259, 0.7306666374206543, 0.7360000014305115, 0.7363333106040955, 0.7409999966621399, 0.7409999966621399, 0.7440000176429749, 0.7426666617393494, 0.7423333525657654, 0.7463333606719971, 0.7463333606719971, 0.7536666393280029, 0.749666690826416, 0.7509999871253967, 0.7583333253860474, 0.7549999952316284, 0.7586666941642761, 0.7573333382606506, 0.765666663646698, 0.7636666893959045, 0.7586666941642761, 0.7649999856948853, 0.7620000243186951, 0.7639999985694885]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 8, 2, 8, 8, 1, 5, 4, 3, 3, 6, 2, 5, 9, 3, 2, 6, 9, 7, 8, 7, 8, 4, 3, 9, 4], [2, 2, 3, 0, 1, 2, 2, 1, 0, 1, 2, 0, 3, 2, 3, 0], [18, 8, 39, 58, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7757142782211304, "mapping_values": [1, 9, 9, 6, 3, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2926383528018497, 2.265356783507255, 2.2374817759778756, 2.1960989616141107, 2.142479776438626, 2.069979711467595, 1.9727064098239244, 1.8544051005871478, 1.725101469120786, 1.5997086679773276, 1.4851152548905235, 1.3914436919735471, 1.3082435878040202, 1.2314991216460522, 1.1920514552348547, 1.1455721983174607, 1.0967678172540167, 1.06673673014552, 1.032026584075033, 1.0175630639273618, 0.9801920453366224, 0.9680846460176387, 0.9343622702538865, 0.931226689124923, 0.9092740607047519, 0.90288648449781, 0.8827445780706601, 0.8782407298001158, 0.8627186414509276, 0.8464982950881078, 0.8419278269556645, 0.8387048284076287, 0.8226275778937853, 0.8135713094166634, 0.8214989213061102, 0.8041376051901511, 0.7951141958066013, 0.796202408654925, 0.7822523843563465, 0.7762095324666571, 0.765924859780677, 0.7640489239923203, 0.7621555711772416, 0.7580367848306615, 0.763748354758128, 0.7480081892237136, 0.7423954830193611, 0.7379237241465355, 0.7298855988372508, 0.7352131270319952, 0.7253490298132241], "accuracy": [0.1154404953122139, 0.1850482076406479, 0.24659886956214905, 0.3097345232963562, 0.3535860478878021, 0.38647469878196716, 0.41764628887176514, 0.4410249590873718, 0.4690265357494354, 0.497820645570755, 0.516180157661438, 0.5352001190185547, 0.5606921315193176, 0.5723153948783875, 0.5845991373062134, 0.5939770340919495, 0.6173557043075562, 0.6273940205574036, 0.632941484451294, 0.6383568644523621, 0.6547351479530334, 0.6482630968093872, 0.667811393737793, 0.6730946898460388, 0.6752080321311951, 0.6738871932029724, 0.6859067678451538, 0.683000922203064, 0.6890767216682434, 0.6939638257026672, 0.6983225345611572, 0.698718786239624, 0.6997754573822021, 0.7094175219535828, 0.7016246318817139, 0.709021270275116, 0.7131158113479614, 0.71100252866745, 0.7194558382034302, 0.7136441469192505, 0.7191916704177856, 0.7177387475967407, 0.7191916704177856, 0.7207766771316528, 0.7148329019546509, 0.7251353859901428, 0.7264562249183655, 0.7260599732398987, 0.7284374833106995, 0.7207766771316528, 0.7354378700256348], "val_loss": [1.9466838155473982, 1.9203034809657507, 1.8883465358189173, 1.8450991766793388, 1.7852380616324288, 1.704080581665039, 1.5992931638445174, 1.4754821232386999, 1.3431350163051061, 1.2167000770568848, 1.1067518506731306, 1.021367379597255, 0.9517200674329486, 0.8957369327545166, 0.8517506292888096, 0.8172553777694702, 0.7882756505693708, 0.7642275265284947, 0.7426833595548358, 0.7267874138695853, 0.7099018778119769, 0.6941462074007306, 0.6812823670251029, 0.6708863122122628, 0.6610088859285627, 0.6528324059077671, 0.6439463921955654, 0.6380541324615479, 0.6294916527611869, 0.6239438056945801, 0.6168782200132098, 0.6094593831471035, 0.6049937009811401, 0.5988906962530953, 0.5955462966646466, 0.5911655085427421, 0.5877343927110944, 0.584090164729527, 0.5784804480416434, 0.5770287684031895, 0.5721930265426636, 0.5693949631282261, 0.5642813103539603, 0.5628606932503837, 0.5611710888998849, 0.5564600229263306, 0.5536404507500785, 0.5525326728820801, 0.5492465496063232, 0.547288077218192, 0.5438566378184727], "val_accuracy": [0.23133333027362823, 0.3643333315849304, 0.40799999237060547, 0.4449999928474426, 0.4896666705608368, 0.5296666622161865, 0.550000011920929, 0.5746666789054871, 0.5903333425521851, 0.6156666874885559, 0.6346666812896729, 0.6466666460037231, 0.6683333516120911, 0.6759999990463257, 0.6813333630561829, 0.687333345413208, 0.6886666417121887, 0.6996666789054871, 0.6990000009536743, 0.7023333311080933, 0.7126666903495789, 0.715666651725769, 0.7146666646003723, 0.7153333425521851, 0.7250000238418579, 0.7276666760444641, 0.7286666631698608, 0.7256666421890259, 0.7316666841506958, 0.7360000014305115, 0.7363333106040955, 0.7409999966621399, 0.7416666746139526, 0.7446666955947876, 0.7429999709129333, 0.7426666617393494, 0.7456666827201843, 0.7456666827201843, 0.7540000081062317, 0.7506666779518127, 0.7506666779518127, 0.7573333382606506, 0.7553333044052124, 0.7586666941642761, 0.7566666603088379, 0.7649999856948853, 0.7633333206176758, 0.7593333125114441, 0.7649999856948853, 0.7609999775886536, 0.7633333206176758]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 5, 8, 1, 7, 0, 0, 3, 3, 7, 8, 9, 3, 4, 6, 4, 7, 8, 7, 1, 2, 1, 9, 4], [1, 2, 3, 2, 2, 2, 2, 2, 1, 1, 2, 2, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 0, 0, 1, 1, 0, 1, 1], [5, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 1, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 8, 4, 4, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(alpha)), lambda shape,  alpha, beta, grad: tf.math.square(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.subtract(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [2.3024805014427265, 2.302590117147806, 2.30264233695738, 2.3027688392857835, 2.3028069607821973, 2.3029742890565688, 2.303194958095175, 2.303623948791921, 2.3041558129959703, 2.3049609465857914, 2.3062930637425625], "accuracy": [0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09932637959718704, 0.10038304328918457, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736347879682268, 1.9736604690551758, 1.9737252507890974, 1.9738044057573592, 1.973921298980713, 1.974095344543457, 1.9743522916521346, 1.9747405052185059, 1.9753415925162179, 1.976252555847168, 1.9776483263288225], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.09966666996479034, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 5, 8, 1, 7, 0, 0, 3, 3, 7, 8, 9, 3, 4, 6, 4, 7, 8, 7, 1, 2, 1, 9, 4], [1, 2, 3, 2, 2, 2, 2, 2, 1, 1, 2, 2, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(alpha)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08360850811004639, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 8, 2, 8, 8, 1, 5, 4, 3, 3, 6, 2, 5, 9, 3, 2, 6, 9, 7, 8, 7, 8, 4, 3, 9, 4], [1, 2, 3, 1, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [18, 8, 39, 58, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [2, 3, 0, 4, 7, 8, 4], [3, 3, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 13, 7, 6, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(sigma, tf.math.negative(tf.math.pow(tf.math.add(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma))))), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0], [0, 2, 2, 5, 8, 1, 7, 0, 0, 3, 3, 7, 8, 9, 3, 4, 6, 4, 1, 8, 7, 1, 2, 1, 9, 4, 6, 8, 2, 2, 6, 6, 5, 0, 2, 8, 3, 9], [1, 2, 3, 2, 2, 2, 2, 2, 1, 2, 1, 2, 3, 2, 3, 2, 0, 2, 0, 2, 3, 3, 2], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 1, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 60, 60, 38, 22, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 52, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(alpha)), tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.negative(tf.math.negative(tf.math.add(alpha, grad))))), tf.math.multiply(grad, tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.sqrt(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), grad), tf.math.multiply(tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))), alpha)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, grad))), tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.negative(grad))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), grad)))), tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, grad)))))))))))))))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [5, 4, 9, 4, 8, 1, 2, 0, 3, 3, 0, 7, 8, 9, 3, 4, 6, 9, 7, 8, 0, 1, 4, 9, 3, 4, 1, 3, 1, 4, 8, 1, 3, 7, 9, 2, 6, 3, 1, 8, 2, 4, 6, 5], [1, 2, 0, 1, 1, 2, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [94, 4, 39, 58, 98, 52, 94, 1], [1, 1, 1, 0, 0, 1, 1, 1, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1], [2, 9, 7, 9, 7, 5, 5, 9], [3, 4, 3, 4], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [2, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 10, 6, 2, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 13, 7, 6, 2], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, grad), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), alpha))), tf.math.add(alpha, alpha)))), grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.math.pow(alpha, sigma)), sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 5, 8, 6, 1, 2, 0, 5, 3, 3, 7, 8, 9, 3, 4, 6, 2, 7, 8, 7, 1, 4, 9, 9, 4, 0, 5], [1, 1, 3, 2, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [30, 66, 39, 2, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 4, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 16, 16, 10, 6, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.add(alpha, alpha), grad)))), grad)), tf.math.add(alpha, alpha))))), grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [2, 8, 2, 8, 8, 1, 5, 4, 3, 3, 6, 2, 5, 9, 3, 2, 6, 9, 7, 8, 7, 8, 4, 3, 9, 4], [2, 0, 3, 0, 1, 2, 2, 1, 0, 1, 2, 0, 3, 2, 3, 0], [18, 8, 39, 58, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 2, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 8, 5, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))))))), tf.math.add(alpha, tf.math.square(tf.math.pow(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, beta))", "other_info": {"loss": [2.3054088236176815, 2.328478038397605, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08492933213710785, 0.07911768555641174, 0.09549596905708313, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9776341574532645, 2.031156199319022, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.02266666665673256, 0.09933333098888397, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [2, 4, 9, 8, 8, 1, 7, 0, 3, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 9, 4], [1, 2, 3, 1, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 3, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, sigma))", "other_info": {"loss": [2.304087714905815, 2.305633276429363, 2.3096802112779375, 2.3100536804252125, 2.312011349202777, 2.3161436795338095, 2.3190158853252503, 2.3271499312769515, 2.33410568987421, 2.348416299017555, 2.386312862633557, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0870426595211029, 0.08796724677085876, 0.08321225643157959, 0.08281600475311279, 0.07977809756994247, 0.07700435817241669, 0.07924976944923401, 0.07515519857406616, 0.07489103078842163, 0.07555144280195236, 0.07740060985088348, 0.09470347315073013, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9724222591945104, 1.974022729056222, 1.9757637977600098, 1.9776998247419084, 1.979922090257917, 1.982527732849121, 1.9851947511945451, 1.9895384652273995, 1.9964679309300013, 2.010875565665109, 2.0910031454903737, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03400000184774399, 0.028333334252238274, 0.026000000536441803, 0.02433333359658718, 0.03166666626930237, 0.03999999910593033, 0.0573333315551281, 0.07066666334867477, 0.08766666799783707, 0.09866666793823242, 0.09933333098888397, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 6, 2, 8, 8, 3, 7, 0, 3, 3, 3, 7, 8, 9, 3, 2, 2, 9, 7, 8, 7, 1, 4, 9], [1, 2, 3, 1, 1, 1, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0, 0, 1, 1, 2, 0, 2, 3, 0, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [4, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [38, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(sigma, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 5, 8, 6, 1, 7, 0, 5, 3, 3, 7, 8, 9, 3, 4, 6, 2, 7, 8, 7, 1, 4, 9, 9, 4, 0, 5], [1, 2, 1, 1, 1, 2, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 66, 39, 2, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.09971428662538528, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 12, 7, 5, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(sigma), tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma)))))", "other_info": {"loss": [2.3703198486457113, 2.614898176618996, 4.272080092051593, 19.780647175045313, 162.39123593200515, 1544.9802668849475, 14866.347452450138, 144519.76069046362, 1443563.160711927, 14831287.521859728], "accuracy": [0.02549200877547264, 0.014793289825320244, 0.030379077419638634, 0.05138026550412178, 0.0936468094587326, 0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.0918264389038086, 2.544534683227539, 6.49843556540353, 44.651907784598215, 404.83890206473217, 3914.3747209821427, 37878.689732142855, 373837.41964285716, 3769288.4285714286, 36101120.0], "val_accuracy": [0.00566666666418314, 0.025333333760499954, 0.03466666489839554, 0.09066666662693024, 0.09833333641290665, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0], [0, 4, 5, 8, 6, 1, 7, 0, 5, 3, 3, 7, 8, 9, 3, 4, 9, 2, 7, 4, 7, 1, 4, 9, 9, 4, 5, 2], [1, 2, 0, 1, 1, 2, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 29, 25, 2, 98, 88, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.09971428662538528, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 12, 7, 5, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(sigma), tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma)))))", "other_info": {"loss": [2.3703222088668294, 2.6144925898029316, 4.26194939407391, 19.63159639859606, 160.07436516262584, 1514.552946172071, 14617.57672471437, 141392.80464931976, 1384731.9346519613, 14117484.815744288], "accuracy": [0.02549200877547264, 0.014661206863820553, 0.02945449762046337, 0.050851933658123016, 0.09259014576673508, 0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.091835226331438, 2.5425316946847096, 6.463211604527065, 44.20744868687221, 397.961661202567, 3846.9641462053573, 37208.20200892857, 364731.25, 3606768.8571428573, 36663843.428571425], "val_accuracy": [0.00566666666418314, 0.025333333760499954, 0.03533333167433739, 0.09000000357627869, 0.09833333641290665, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0], [0, 4, 9, 8, 6, 1, 7, 0, 5, 3, 0, 7, 8, 9, 3, 1, 6, 2, 7, 1, 1, 1, 4, 9, 2, 4, 0, 5], [1, 2, 3, 1, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [30, 29, 39, 2, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [1, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.07428571581840515, "mapping_values": [1, 13, 13, 9, 4, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), tf.math.add(alpha, grad))), tf.math.square(tf.math.add(alpha, grad)))), tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [12.07801017155343, 5.108164292883329, 40035.22029303207, 2.3147361885995883, 1.086224757634066e+16, 2.3175442417803818, 2.3064763826575057], "accuracy": [0.09734513610601425, 0.09760929644107819, 0.10540219396352768, 0.09496764093637466, 0.10196803510189056, 0.09391097724437714, 0.09840179979801178], "val_loss": [1.9842500686645508, 267084.41964285716, 1.9894965716770716, 7480600137.142858, 1.9940905570983887, 1.978586265019008, 1.9746652330671037], "val_accuracy": [0.09799999743700027, 0.1653333306312561, 0.09799999743700027, 0.11900000274181366, 0.09799999743700027, 0.10066666454076767, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 8, 2, 8, 8, 1, 5, 4, 3, 3, 6, 2, 5, 9, 3, 2, 6, 9, 7, 8, 7, 8, 4, 3, 9, 4], [3, 2, 3, 0, 1, 2, 2, 1, 0, 1, 2, 0, 3, 2, 3, 0], [18, 8, 39, 58, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [1, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 3, 3, 2, 1, 0, 7, 7, 4, 3, 1, 1, 0, 0, 0, 0, 12, 7, 5, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.sqrt(grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, grad))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma))))))", "other_info": {"loss": [2.3034601327434836, 2.303190676134024, 2.3048171911729622, 2.302988538589649, 2.302385505605226, 2.3028430482730604], "accuracy": [0.08836349099874496, 0.09377889335155487, 0.08691058307886124, 0.09351472556591034, 0.08836349099874496, 0.0870426595211029], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [4, 4, 2, 8, 8, 1, 7, 0, 1, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9, 9, 4], [1, 2, 3, 1, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [18, 8, 39, 58, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [4, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [2, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 2, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 1, 3, 1, 1, 0, 0, 4, 2, 2, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, beta))", "other_info": {"loss": [2.3034601327434836, 2.303190676134024, 2.3048171911729622, 2.302988538589649, 2.302385505605226, 2.3028430482730604], "accuracy": [0.08836349099874496, 0.09377889335155487, 0.08691058307886124, 0.09351472556591034, 0.08836349099874496, 0.0870426595211029], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]