[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 1, 9, 1, 8, 6, 5, 8, 9], [4, 0, 0, 5, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [0, 0, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.834857165813446, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 2, 3, 3, 1, 2, 1, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.028310997674116, 1.6263474571611967, 1.191178677442949, 0.8995721202878558, 0.8070818724302867, 0.7442218858127219, 0.6974192501657501, 0.6819038475824148, 0.6378532891590928, 0.6382423536872914, 0.5810233914872611, 0.5767004002181373, 0.551433258918865, 0.5594822076986873, 0.5353201003421677, 0.5099489849713721, 0.5277498747773095, 0.498443575858629, 0.4620073611836124, 0.480698243049252, 0.4753060391581904, 0.4561645465874322, 0.4460448824875957, 0.42969566347844346, 0.42915364451979005, 0.43035629292079847, 0.4040174864349647, 0.3917948369612358], "accuracy": [0.3159424066543579, 0.44208163022994995, 0.5963544845581055, 0.6695284843444824, 0.7016246318817139, 0.7098137736320496, 0.7326641082763672, 0.7354378700256348, 0.7553823590278625, 0.7605336308479309, 0.7823272943496704, 0.7816668748855591, 0.7955356240272522, 0.7881389260292053, 0.8034605979919434, 0.8068947196006775, 0.8037247657775879, 0.8164047002792358, 0.8293488025665283, 0.8212917447090149, 0.822348415851593, 0.8281601071357727, 0.8338396549224854, 0.8401796221733093, 0.8418967127799988, 0.8417646288871765, 0.8492933511734009, 0.8577466607093811], "val_loss": [1.3571956157684326, 1.120581899370466, 0.7906647409711566, 0.7834595101220267, 0.6195557458060128, 0.570358293397086, 0.5961029529571533, 0.4957024369921003, 0.5333621501922607, 0.46997482436043875, 0.5041583776473999, 0.45423475333622526, 0.5269334486552647, 0.42454557759421213, 0.41874563694000244, 0.41460317373275757, 0.4111715044294085, 0.43786610875810894, 0.3872786249433245, 0.37837148564202444, 0.3859478746141706, 0.3776681678635733, 0.36751476355961393, 0.3831240449632917, 0.37774473428726196, 0.36986310141427176, 0.3749564630644662, 0.37135547399520874], "val_accuracy": [0.4583333432674408, 0.6203333139419556, 0.6306666731834412, 0.668666660785675, 0.7070000171661377, 0.7269999980926514, 0.7386666536331177, 0.7749999761581421, 0.765333354473114, 0.7923333048820496, 0.7689999938011169, 0.8056666851043701, 0.75, 0.8133333325386047, 0.8203333616256714, 0.824999988079071, 0.8243333101272583, 0.8003333210945129, 0.8316666483879089, 0.8373333215713501, 0.8209999799728394, 0.8393333554267883, 0.8433333039283752, 0.8259999752044678, 0.8286666870117188, 0.8399999737739563, 0.8330000042915344, 0.8316666483879089]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 5, 2, 1, 8, 6, 5, 8, 9], [4, 3, 3, 1, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 4], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.8299999833106995, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 0, 3, 2, 1, 1, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(grad)), tf.math.add(tf.math.subtract(grad, tf.math.sqrt(grad)), alpha))), grad), beta), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0283207990993772, 1.6262739103672732, 1.1617176710276036, 0.9117323534442386, 0.8239628582141812, 0.7500464135566643, 0.7060152442148884, 0.6631927039991391, 0.6512661756163559, 0.6163218319061772, 0.600935774724308, 0.5895983061738821, 0.5594843709237383, 0.5574812823715872, 0.5141834623982736, 0.5234158099083428, 0.507893998483389, 0.4951985912583744, 0.48164760743653723, 0.46317432780449086, 0.47141817555357013, 0.46713908882881783, 0.4500670393208282, 0.4299670722128425, 0.43175116972192057, 0.4358999996279146, 0.3966188163112388, 0.38702751536883256, 0.381561537302874, 0.4357572502707919, 0.37826383453570556, 0.39492883486298047, 0.37416633052313253, 0.3686557633765637, 0.3567846401957095, 0.3547337669753726, 0.34629086887343624, 0.35611961098032824, 0.32887208432632276, 0.33215807781180434, 0.3150701054634278, 0.33989419492795375, 0.34038084255721607, 0.31232631928837923, 0.3136389686242228], "accuracy": [0.3160744905471802, 0.4423457980155945, 0.6009774208068848, 0.6560559868812561, 0.6955488324165344, 0.7132478952407837, 0.7243428826332092, 0.7446836829185486, 0.7494386434555054, 0.7647602558135986, 0.7725531458854675, 0.7744023203849792, 0.7873464822769165, 0.789988100528717, 0.8107251524925232, 0.8034605979919434, 0.8076872229576111, 0.8165367841720581, 0.8231409192085266, 0.8308017253875732, 0.8261788487434387, 0.8231409192085266, 0.8301413059234619, 0.8426892161369324, 0.8412362933158875, 0.8384625315666199, 0.8532558679580688, 0.859199583530426, 0.8576145768165588, 0.8321225643157959, 0.8634262084960938, 0.8527275323867798, 0.8627657890319824, 0.8673887252807617, 0.8713511824607849, 0.86553955078125, 0.8677849769592285, 0.8664641380310059, 0.8784837126731873, 0.8800686597824097, 0.885219931602478, 0.8745211958885193, 0.8746532797813416, 0.884691596031189, 0.8838990926742554], "val_loss": [1.3567204475402832, 1.0940746239253454, 0.7671554429190499, 0.8921617439814976, 0.7074599606650216, 0.586814114025661, 0.6210394075938633, 0.5508791037968227, 0.5608960730688912, 0.495093720299857, 0.48837266649518696, 0.47500460488455637, 0.5410201549530029, 0.4227312547819955, 0.4269231472696577, 0.4485663175582886, 0.4052291342190334, 0.4866793836866106, 0.39233832699911936, 0.42618835823876516, 0.39848005771636963, 0.38041673387799946, 0.36914546149117605, 0.3870610169001988, 0.3716501934187753, 0.3690112829208374, 0.36905101367405485, 0.36737862655094694, 0.3767097166606358, 0.35425192969185965, 0.37872592891965595, 0.34846419947487967, 0.3602893352508545, 0.382459248815264, 0.3459717205592564, 0.3549238017627171, 0.3946265918867929, 0.3393236994743347, 0.33198910100119455, 0.32372662850788664, 0.34045365027018953, 0.3911394476890564, 0.3521732347352164, 0.34560151611055645, 0.3792280469621931], "val_accuracy": [0.4583333432674408, 0.6186666488647461, 0.668666660785675, 0.6696666479110718, 0.675000011920929, 0.7160000205039978, 0.7096666693687439, 0.7446666955947876, 0.7526666522026062, 0.7853333353996277, 0.7763333320617676, 0.7873333096504211, 0.7490000128746033, 0.8159999847412109, 0.8130000233650208, 0.7929999828338623, 0.8243333101272583, 0.7553333044052124, 0.8333333134651184, 0.8013333082199097, 0.8153333067893982, 0.8413333296775818, 0.8373333215713501, 0.8320000171661377, 0.8346666693687439, 0.843999981880188, 0.8446666598320007, 0.8386666774749756, 0.8320000171661377, 0.8433333039283752, 0.8403333425521851, 0.8493333458900452, 0.8410000205039978, 0.8403333425521851, 0.8496666550636292, 0.8473333120346069, 0.82833331823349, 0.8513333201408386, 0.859000027179718, 0.8610000014305115, 0.8536666631698608, 0.8376666903495789, 0.8503333330154419, 0.8519999980926514, 0.8386666774749756]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 5, 3, 2, 1, 9, 1, 8, 6, 5, 8, 9], [4, 0, 0, 5, 2, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 4], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.828000009059906, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 6, 3, 3, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0283140414709964, 1.6319466859846226, 1.1532840802291318, 0.9779261666014367, 0.7918916184904395, 0.7385840611986244, 0.6976306683603705, 0.6784432029144686, 0.6203604043514155, 0.6459790742345348, 0.616069879915736, 0.5778724661813105, 0.5363860797132594, 0.5565280460560279, 0.5106501250990693, 0.5259762131668684, 0.495932102482852, 0.49490576029894545, 0.4817295053442629, 0.4673552700061178, 0.4791445111822159, 0.4501787662159702, 0.45448265001600946, 0.430574466783483, 0.4433377521338165, 0.4151120508477641, 0.3910373635083268, 0.3963009122970192, 0.38076565777699645, 0.4328781167246237, 0.379657671613275], "accuracy": [0.3159424066543579, 0.44010037183761597, 0.6085061430931091, 0.6371681690216064, 0.7025492191314697, 0.7197200059890747, 0.7302865982055664, 0.7353057861328125, 0.7621186375617981, 0.752212405204773, 0.7626469135284424, 0.78113853931427, 0.7989697456359863, 0.7915731072425842, 0.8094043135643005, 0.8017435073852539, 0.813498854637146, 0.8124422430992126, 0.8197067975997925, 0.8297450542449951, 0.8222163319587708, 0.833179235458374, 0.8314621448516846, 0.8388587832450867, 0.8345000743865967, 0.8488970994949341, 0.8573504090309143, 0.8549728989601135, 0.8569541573524475, 0.8317263126373291, 0.8581429123878479], "val_loss": [1.3573435715266637, 1.1354072093963623, 0.840221609388079, 0.5976950441087995, 0.6473069872174945, 0.5646178041185651, 0.586286153112139, 0.5019810540335519, 0.5568311044148037, 0.5058618273053851, 0.5010873930794852, 0.4678922210420881, 0.49794617721012663, 0.42569756507873535, 0.43185144662857056, 0.4114723205566406, 0.41537364040102276, 0.4148455687931606, 0.40368536540440153, 0.38121328183582853, 0.3862320695604597, 0.3817578213555472, 0.3746768151010786, 0.3988233804702759, 0.39900720970971243, 0.3557774339403425, 0.3856362870761326, 0.3781788774899074, 0.3665985039302281, 0.36786668641226633, 0.36350929737091064], "val_accuracy": [0.4580000042915344, 0.6183333396911621, 0.609333336353302, 0.737666666507721, 0.734000027179718, 0.7360000014305115, 0.718666672706604, 0.781333327293396, 0.7403333187103271, 0.7733333110809326, 0.7716666460037231, 0.7856666445732117, 0.7643333077430725, 0.8146666884422302, 0.8136666417121887, 0.8199999928474426, 0.8166666626930237, 0.8143333196640015, 0.8209999799728394, 0.8330000042915344, 0.8276666402816772, 0.8349999785423279, 0.8349999785423279, 0.8173333406448364, 0.8206666707992554, 0.8483333587646484, 0.8306666612625122, 0.8289999961853027, 0.8330000042915344, 0.8389999866485596, 0.8453333377838135]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 6, 3, 2, 5, 5, 1, 8, 6, 5, 8, 9], [4, 0, 0, 5, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [0, 0, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [0, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [27, 57]], "fitness": -0.797428548336029, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 8, 6, 2, 3, 3, 1, 2, 1, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))), tf.math.square(tf.math.subtract(grad, tf.math.add(beta, tf.math.sqrt(grad))))), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2941007169482415, 2.271789948355489, 2.248318531383786, 2.2193431652075644, 2.1864342836892177, 2.1392973432325495, 2.0825500877510366, 2.0092843872854314, 1.9164966183914216, 1.8205382659246012, 1.6945170634269338, 1.5993119185516596, 1.5016559260065656, 1.4163241041429353, 1.3426062638308347, 1.2888841123912218, 1.2288246421041804, 1.1855766118210478, 1.1600841255298837, 1.1286614120219125, 1.092440197039841, 1.0584811876793547, 1.0380454446110254, 1.020644318378833, 0.9910883360834264, 0.9756325825078533, 0.9464821853988505, 0.9445617607855101, 0.9288694667164298, 0.9150097343852696, 0.9035532427438734, 0.8941630629059693, 0.8784210602951529, 0.8790481946708, 0.8652812766282472, 0.8501017928879259, 0.8512100703239819, 0.8385893830281869, 0.8334718645209445, 0.8249816791555585, 0.8214793292412653, 0.8073854020258785, 0.7965908952833812, 0.7935260885962563, 0.7898313139156029, 0.7906670011643957, 0.7921143216211971, 0.7753027383331074, 0.7841144369310156, 0.7653942973763951, 0.7735138600292365, 0.7661279056207961, 0.7672452972297734, 0.7557821125638421, 0.7493878658878144, 0.7473926036711523, 0.7543416293604877, 0.7464359625455584, 0.7378910383008584, 0.7334864401404789, 0.7343013128033246, 0.7367407592800016, 0.7184543949249886, 0.7144461361141001, 0.7168037849504871, 0.7138689924476799, 0.7160232357849078, 0.7127728794055954, 0.7106214669544022, 0.7105972603122871, 0.696666229851352, 0.6950530783375256, 0.6921027217401317, 0.6971714654776241, 0.6880855120530517, 0.6911148270044691, 0.6800730602616222, 0.6817998049785401, 0.68167049871255, 0.679930856750311, 0.679201002000361, 0.6721278997050805, 0.672214434084214, 0.6731200069326845, 0.6680732577893523, 0.6633289682866718, 0.6651123935410124, 0.6625163263695792, 0.6581637624500135, 0.6523737898749635, 0.6582402950264695, 0.6529972009324378, 0.644290830740729, 0.6498108328986933, 0.6517551393241867, 0.6483427243398999, 0.6483873419159549, 0.6461710120236255, 0.6493498613301868, 0.6426892981568915], "accuracy": [0.11596883088350296, 0.17012283205986023, 0.23035265505313873, 0.280940443277359, 0.3163386583328247, 0.354510635137558, 0.3843613862991333, 0.4037775695323944, 0.43230748176574707, 0.44366663694381714, 0.48064985871315, 0.4934619069099426, 0.5171047449111938, 0.5357284545898438, 0.5481442213058472, 0.5606921315193176, 0.5805045366287231, 0.5884295105934143, 0.59661865234375, 0.6083740592002869, 0.6198652982711792, 0.6320168972015381, 0.633469820022583, 0.641791045665741, 0.652621865272522, 0.6539427042007446, 0.6592260003089905, 0.6629242897033691, 0.6659622192382812, 0.672170102596283, 0.6748117804527283, 0.6790384650230408, 0.6892088055610657, 0.6831330060958862, 0.6865671873092651, 0.6976621150970459, 0.6971337795257568, 0.6976621150970459, 0.7034738063812256, 0.7021529674530029, 0.7024171352386475, 0.702681303024292, 0.7103421092033386, 0.7078325152397156, 0.7161537408828735, 0.7154933214187622, 0.7116629481315613, 0.7127195596694946, 0.7102100253105164, 0.7182670831680298, 0.7141724824905396, 0.7231541275978088, 0.7177387475967407, 0.7219653725624084, 0.7223616242408752, 0.722757875919342, 0.717870831489563, 0.7277770638465881, 0.7279091477394104, 0.7308149337768555, 0.7281733155250549, 0.7305507659912109, 0.7388719916343689, 0.7363624572753906, 0.7297582626342773, 0.7376832365989685, 0.7372870445251465, 0.7371549606323242, 0.7383436560630798, 0.7338528633117676, 0.7423061728477478, 0.7412495017051697, 0.7453441023826599, 0.7395324110984802, 0.739400327205658, 0.7436270117759705, 0.7470611333847046, 0.7467969655990601, 0.7429665923118591, 0.7409853339195251, 0.7479857206344604, 0.7465327978134155, 0.7483819723129272, 0.752212405204773, 0.7519482374191284, 0.7541936039924622, 0.7518161535263062, 0.7553823590278625, 0.7541936039924622, 0.7577598690986633, 0.7567031979560852, 0.7537974119186401, 0.7530049085617065, 0.7588165402412415, 0.757099449634552, 0.7556465268135071, 0.755118191242218, 0.7569673657417297, 0.7584202885627747, 0.7581561207771301], "val_loss": [1.9510369982038225, 1.9302246911185128, 1.906097684587751, 1.8766988345554896, 1.838864462716239, 1.7892461504255022, 1.725714956011091, 1.646303449358259, 1.550750391823905, 1.4459825583866663, 1.335503203528268, 1.23103894506182, 1.1383442878723145, 1.0605203764779227, 0.9949389185224261, 0.9420835631234306, 0.8971635954720634, 0.860202431678772, 0.8303423609052386, 0.8055149487086705, 0.78228873865945, 0.7602991546903338, 0.7431267670222691, 0.7284059183938163, 0.7146688529423305, 0.7019604103905814, 0.6910085507801601, 0.6831715277263096, 0.6722329173769269, 0.6645429474966866, 0.6564641680036273, 0.6497552054268974, 0.6412768193653652, 0.635305506842477, 0.6300115755626133, 0.6244622128350394, 0.6200119086674282, 0.615575739315578, 0.6105245692389352, 0.606150712285723, 0.6018211841583252, 0.5996120657239642, 0.5947002853666034, 0.5892296007701329, 0.5860695838928223, 0.584499546459743, 0.5807481322969709, 0.5787190880094256, 0.575013382094247, 0.5715770721435547, 0.5684424638748169, 0.5656126737594604, 0.5642120497567313, 0.5603426354272025, 0.5581451484135219, 0.5560393503734044, 0.5555222715650286, 0.5502287490027291, 0.5483026845114571, 0.5465944835117885, 0.5446649449212211, 0.5432098082133702, 0.5408829280308315, 0.5389423540660313, 0.5382071733474731, 0.535043546131679, 0.5350004945482526, 0.5334044013704572, 0.5311475992202759, 0.5281302077429635, 0.5271392038890294, 0.5249317032950265, 0.5260202714375087, 0.5226858854293823, 0.5221449647630964, 0.5202986512865339, 0.519335184778486, 0.5166605881282261, 0.5165607929229736, 0.5146791424070086, 0.5129303080695016, 0.5118516683578491, 0.5111583641597203, 0.510386620249067, 0.5068267583847046, 0.5068516560963222, 0.5037285259791783, 0.5043482950755528, 0.5039228030613491, 0.502366270337786, 0.5001592636108398, 0.5006811278206962, 0.498435309955052, 0.49724018573760986, 0.49795561177389963, 0.49627087797437397, 0.4964935098375593, 0.49494188172476633, 0.4937157120023455, 0.4934021404811314], "val_accuracy": [0.20333333313465118, 0.33899998664855957, 0.3779999911785126, 0.41333332657814026, 0.44733333587646484, 0.4636666774749756, 0.49966666102409363, 0.5289999842643738, 0.5543333292007446, 0.5653333067893982, 0.5843333601951599, 0.596666693687439, 0.6296666860580444, 0.643666684627533, 0.659333348274231, 0.6656666398048401, 0.6723333597183228, 0.6793333292007446, 0.6853333115577698, 0.6903333067893982, 0.690666675567627, 0.6953333616256714, 0.6993333101272583, 0.7056666612625122, 0.7086666822433472, 0.715666651725769, 0.715666651725769, 0.7120000123977661, 0.7210000157356262, 0.7203333377838135, 0.7283333539962769, 0.7253333330154419, 0.7323333621025085, 0.7326666712760925, 0.7336666584014893, 0.737333357334137, 0.7329999804496765, 0.7423333525657654, 0.7429999709129333, 0.7436666488647461, 0.7453333139419556, 0.7379999756813049, 0.7463333606719971, 0.7463333606719971, 0.7450000047683716, 0.749666690826416, 0.7506666779518127, 0.7509999871253967, 0.7509999871253967, 0.7543333172798157, 0.7559999823570251, 0.753333330154419, 0.7540000081062317, 0.7576666474342346, 0.7603333592414856, 0.7580000162124634, 0.7636666893959045, 0.7609999775886536, 0.762333333492279, 0.765666663646698, 0.7673333287239075, 0.7663333415985107, 0.7699999809265137, 0.7649999856948853, 0.7670000195503235, 0.7680000066757202, 0.7703333497047424, 0.7683333158493042, 0.7703333497047424, 0.7723333239555359, 0.7739999890327454, 0.7730000019073486, 0.7739999890327454, 0.7749999761581421, 0.7730000019073486, 0.7776666879653931, 0.778333306312561, 0.7770000100135803, 0.7726666927337646, 0.7746666669845581, 0.7773333191871643, 0.7786666750907898, 0.7770000100135803, 0.7773333191871643, 0.777999997138977, 0.7796666622161865, 0.781000018119812, 0.781000018119812, 0.7803333401679993, 0.7816666960716248, 0.781000018119812, 0.7806666493415833, 0.7836666703224182, 0.7829999923706055, 0.7806666493415833, 0.7853333353996277, 0.7833333611488342, 0.781000018119812, 0.7836666703224182, 0.7793333530426025]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 1, 9, 1, 8, 6, 5, 8, 9], [4, 0, 0, 5, 3, 2, 2, 4, 2, 0], [9, 14, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1], [0, 0, 8, 9, 7], [0, 4], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [65, 57]], "fitness": -0.7657142877578735, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 5, 6, 2, 2, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), grad)), tf.math.subtract(grad, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3.67315761033082, 2.623254639550349, 2.3034588873677677, 2.3025994116304855, 2.301307100803152, 2.2942461843708517, 2.190628949504062, 2.0780656049437667, 2.1121890671800205, 1.8737976825342768, 2.149117041966226, 1.7051761315058187, 1.6306906477524195, 1.6051406542449627, 1.2072287644566546, 1.0832750274756833, 0.9047318690205137, 0.8350151168782052, 0.8326457477736986, 0.8050263094832758, 0.7534305228297076, 0.6984297424779199, 0.6942861148583938, 0.666835889462325, 0.658024441635352, 0.6772365345143686, 0.6223079109582383, 0.6129110000703817, 0.6010183464377044, 0.5886737825202589, 0.5565482607103216, 0.5714829201554075, 0.5533850550761769, 0.5439069617174053, 0.5419925599325885, 0.5273495348075189, 0.5192004938828491, 0.5129885865893772, 0.4885468360352998, 0.49265748357665756, 0.4750193331645008], "accuracy": [0.22652225196361542, 0.09893012791872025, 0.10355303436517715, 0.09879804402589798, 0.11610091477632523, 0.13168670237064362, 0.23457930982112885, 0.29322415590286255, 0.2763175368309021, 0.39202219247817993, 0.24342887103557587, 0.4303262531757355, 0.45991283655166626, 0.4768194556236267, 0.5864483118057251, 0.6156386137008667, 0.6573768258094788, 0.6931713223457336, 0.6921146512031555, 0.6915863156318665, 0.7145687341690063, 0.7354378700256348, 0.735041618347168, 0.7518161535263062, 0.7515519857406616, 0.7429665923118591, 0.7623828053474426, 0.7696473598480225, 0.7717606425285339, 0.774798572063446, 0.7905164361000061, 0.7911768555641174, 0.7924976944923401, 0.7952714562416077, 0.7985734939575195, 0.8009510040283203, 0.7955356240272522, 0.8082155585289001, 0.8096684813499451, 0.8156121969223022, 0.821820080280304], "val_loss": [3.7378309794834683, 1.9747665950230189, 1.973597867148263, 1.9728915350777763, 1.9706993103027344, 1.9185816901070731, 1.7547752516610282, 1.9154579980032784, 1.684962340763637, 1.9953671864100866, 1.550312076296125, 1.3494996002742223, 1.0307799407414027, 1.104692084448678, 0.9364665576389858, 0.7233000993728638, 0.6088092497416905, 0.7401005710874285, 0.6039578403745379, 0.6217458759035382, 0.5393623454230172, 0.5238277741840908, 0.49960269246782574, 0.5432889972414289, 0.50032981804439, 0.4666997194290161, 0.4805651903152466, 0.4533245733806065, 0.4759175607136318, 0.4458316053662981, 0.49068267004830496, 0.4651473420006888, 0.44526095049721853, 0.49497646944863455, 0.41430555071149555, 0.4105375409126282, 0.43332832200186594, 0.3977757181440081, 0.4078190582139151, 0.4241514035633632, 0.4303808297429766], "val_accuracy": [0.09933333098888397, 0.09833333641290665, 0.10199999809265137, 0.1263333261013031, 0.13866665959358215, 0.23600000143051147, 0.3656666576862335, 0.37033334374427795, 0.33000001311302185, 0.10100000351667404, 0.4569999873638153, 0.49300000071525574, 0.5979999899864197, 0.5683333277702332, 0.5696666836738586, 0.6933333277702332, 0.7316666841506958, 0.6783333420753479, 0.737333357334137, 0.7266666889190674, 0.7689999938011169, 0.7689999938011169, 0.7833333611488342, 0.7453333139419556, 0.7756666541099548, 0.7919999957084656, 0.7876666784286499, 0.8006666898727417, 0.7903333306312561, 0.8033333420753479, 0.7893333435058594, 0.7933333516120911, 0.8016666769981384, 0.7760000228881836, 0.8169999718666077, 0.8309999704360962, 0.8053333163261414, 0.82833331823349, 0.8236666917800903, 0.8183333277702332, 0.7996666431427002]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 9, 3, 2, 1, 9, 1, 8, 6, 5, 8, 9], [4, 3, 0, 1, 3, 2, 2, 4, 2, 0], [98, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.5, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 9, 5, 3, 3, 2, 1, 1, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(grad, tf.math.subtract(tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.sqrt(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.divide_no_nan(alpha, grad))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.214289815906741, 1.857742532999162, 1.4318111656584744, 1.4789231395551383, 4.875284272036327, 2.669146595314871, 2.5051276259308306, 2.6321784255841876], "accuracy": [0.2731475234031677, 0.3991546630859375, 0.5054814219474792, 0.49953770637512207, 0.3011491298675537, 0.11028926074504852, 0.10157178342342377, 0.10051512718200684], "val_loss": [1.7046805449894495, 1.0239056178501673, 1.0528763702937536, 1.2501470020839147, 2.3045578684125627, 2.0833514077322826, 2.28815712247576, 2.0837453433445523], "val_accuracy": [0.37433332204818726, 0.5486666560173035, 0.590666651725769, 0.45233333110809326, 0.19966666400432587, 0.10000000149011612, 0.09799999743700027, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 1, 9, 1, 8, 6, 5, 8, 9], [1, 0, 0, 5, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [0, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.12685714662075043, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 8, 4, 4, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(alpha, tf.math.add(beta, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.negative(alpha), tf.math.pow(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), beta)", "other_info": {"loss": [2.3021365580951154, 2.2978155843774797, 2.2962169372929937, 2.295451745318069, 2.296373575685708, 2.2962420108280224, 2.297407757289626, 2.2972660500533104], "accuracy": [0.09655263274908066, 0.10672302544116974, 0.11728965491056442, 0.1150442510843277, 0.11161009222269058, 0.11253467202186584, 0.10949676483869553, 0.109232597053051], "val_loss": [1.968452044895717, 1.9661790984017509, 1.9666823659624373, 1.9677037511553084, 1.9683002063206263, 1.9687271118164062, 1.9692274502345495, 1.9697329657418388], "val_accuracy": [0.05900000035762787, 0.1003333330154419, 0.12666666507720947, 0.11599999666213989, 0.11633333563804626, 0.1133333370089531, 0.11033333092927933, 0.11833333224058151]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 1, 5, 0, 8, 6, 5, 8, 9], [4, 3, 0, 5, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [0, 0, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 4], [88, 19], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 1, 3, 3, 1, 2, 0, 7, 4, 3, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.multiply(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.subtract(tf.math.square(grad), tf.math.negative(beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(alpha, tf.math.negative(tf.math.pow(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [1445749.2531854722, 2.313889295984615, 2.3053510738889758, 2.30333974581542, 2.3030496073468267, 2.3030331942855944, 2.303060995069682, 2.302837966628724, 2.3031864602725425, 2.303057700352284, 2.3030760021509513], "accuracy": [0.1014397069811821, 0.09391097724437714, 0.09774138033390045, 0.0940430611371994, 0.09747721254825592, 0.09708096832036972, 0.0944393053650856, 0.09245806187391281, 0.09906221181154251, 0.09219389408826828, 0.09470347315073013], "val_loss": [1.9891456876482283, 1.9774132456098283, 1.9743353979928153, 1.9739223888942175, 1.9737060410635812, 1.9737403052193778, 1.9736895561218262, 1.9737073353358678, 1.9736548151288713, 1.9736988203866142, 1.9736936432974679], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09966666996479034, 0.09933333098888397, 0.09966666996479034, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 1, 9, 1, 8, 6, 5, 8, 9], [4, 0, 0, 5, 3, 2, 2, 4, 2, 0], [44, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 4], [88, 19], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 3, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0746268630027771, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 6, 2, 2, 0, 9, 1, 8, 6, 5, 8, 9], [5, 2, 3, 0, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [0, 0, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 4, 2, 1, 2, 3], [3, 2, 0, 2, 3, 3, 2], [41, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 2, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.add(beta, tf.math.negative(grad))), tf.math.add(beta, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08241976052522659, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 3, 9, 1, 8, 6, 5, 8, 9], [5, 3, 1, 5, 3, 2, 2, 4, 2, 0], [9, 14, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1], [9, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [0, 1, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 6, 2, 3, 4, 9, 1, 8, 6, 5, 8, 9], [5, 3, 3, 4, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [9, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [0, 1, 0, 2, 3, 3, 2], [41, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302291174196942, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.0956280529499054, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 6, 2, 2, 0, 9, 1, 8, 6, 5, 8, 9], [4, 3, 0, 1, 3, 2, 2, 4, 2, 0], [9, 85, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 4], [88, 19], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 3, 2, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 1, 6, 2, 6, 9, 1, 8, 6, 5, 8, 9], [3, 3, 3, 5, 3, 2, 2, 4, 2, 0], [9, 14, 79, 81, 53, 45], [0, 0, 1, 0, 0, 1], [1, 1, 1, 0, 0, 1], [0, 0, 8, 9, 7], [0, 4], [88, 19], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [0, 1, 0, 2, 3, 3, 2], [41, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 1, 1, 1, 0, 1, 1, 2, 1, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, grad)))), tf.math.add(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [4455414.143799134, 83748905.0387003, 389561628.4791969, 1073847842.3542464, 2333003968.295866, 4257896074.0256243], "accuracy": [0.09998679161071777, 0.09893012791872025, 0.10527011007070541, 0.09893012791872025, 0.09747721254825592, 0.10342095047235489], "val_loss": [16983229.14285714, 135595414.85714287, 457333110.85714287, 1083696530.2857144, 2116180406.857143, 3656285842.285714], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 8, 1, 9, 1, 8, 6, 5, 8, 9], [3, 3, 3, 5, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [0, 1, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 4], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 2, 0, 2, 3, 3, 2], [41, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 3, 1, 1, 0, 0, 4, 2, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, grad), grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, beta))", "other_info": {"loss": [13088042.798824256, 1321702856063833.8, 6.020636741044115e+23, 3.7638641454274266e+32, NaN, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08849557489156723, 0.10315678268671036, 0.10157178342342377, 0.09747721254825592, 0.09813763201236725, 0.09919429570436478, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1179820690.2857144, 1.7595152762397373e+17, 8.077369378900147e+25, 4.417703911025525e+34, NaN, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.09966666996479034, 0.1003333330154419, 0.09966666996479034, 0.09799999743700027, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 1, 9, 1, 8, 6, 5, 8, 9], [0, 5, 3, 5, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [0, 0, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [9, 0, 8, 9, 7], [4, 7], [37, 19], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [9, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [41, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), grad)), grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302291174196942, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.0956280529499054, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 6, 9, 2, 5, 9, 1, 8, 6, 5, 8, 9], [4, 1, 0, 5, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [0, 0, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [7, 0, 8, 9, 7], [6, 7], [88, 19], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [5, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.0674285739660263, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 6, 1, 2, 3, 3, 1, 2, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.square(grad), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.3026514706468664, 2.3012913354494002, 2.301181499779484, 2.299271034888934, 2.3010362123281034, 2.3002073388168323, 2.300375205493323, 2.300319152721687, 2.2996710422504782, 2.3004214038088056, 2.298713350245635, 2.300183893966322, 2.299371023723525, 2.3001335894096293, 2.3001598267271186], "accuracy": [0.0944393053650856, 0.0956280529499054, 0.09272222965955734, 0.10579843819141388, 0.09787346422672272, 0.09457138925790787, 0.09589222073554993, 0.09549596905708313, 0.10434553027153015, 0.09549596905708313, 0.10460969805717468, 0.09998679161071777, 0.09668471664190292, 0.09840179979801178, 0.1006472036242485], "val_loss": [1.970419202532087, 1.9698303767613001, 1.9695662089756556, 1.9696339879717146, 1.9696674346923828, 1.9697485651288713, 1.9697486332484655, 1.9696348735264368, 1.9696165493556432, 1.969587939126151, 1.9698193413870675, 1.9700489044189453, 1.9703813280378069, 1.9705582346235002, 1.9708642278398787], "val_accuracy": [0.044333335012197495, 0.05299999937415123, 0.060333333909511566, 0.06233333423733711, 0.05999999865889549, 0.06533333659172058, 0.0716666653752327, 0.07500000298023224, 0.07666666805744171, 0.07800000160932541, 0.07500000298023224, 0.07266666740179062, 0.07400000095367432, 0.07266666740179062, 0.07133333384990692]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 6, 2, 1, 9, 1, 8, 6, 5, 8, 9], [3, 3, 0, 5, 3, 1, 2, 4, 2, 0], [9, 14, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1], [1, 0, 1, 0, 0, 1], [0, 9, 8, 9, 7], [4, 4], [88, 19], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 0, 4, 2, 1, 2, 3], [1, 3, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 9, 7, 2, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(grad, tf.math.subtract(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.subtract(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(grad, grad))), tf.math.add(beta, alpha)))))), beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, sigma)", "other_info": {"loss": [2.30314045540645, 2.302803830605425, 2.3033280245395873, 2.30132777790714, 2.3034906568087608, 2.302506816417093], "accuracy": [0.0940430611371994, 0.09179764986038208, 0.08875974267721176, 0.09813763201236725, 0.09417514503002167, 0.08374059200286865], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 6, 2, 2, 0, 9, 2, 8, 6, 5, 8, 9], [5, 3, 3, 5, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [9, 0, 8, 9, 7], [4, 4], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [8, 3, 0, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [24, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 9, 6, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.negative(grad)), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), grad)), tf.math.add(beta, tf.math.add(tf.math.sqrt(grad), tf.math.divide_no_nan(grad, grad)))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(beta, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.30314045540645, 2.302803830605425, 2.3033280245395873, 2.30132777790714, 2.3034906568087608, 2.302506816417093], "accuracy": [0.0940430611371994, 0.09179764986038208, 0.08875974267721176, 0.09813763201236725, 0.09417514503002167, 0.08374059200286865], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 1, 2, 1, 9, 0, 8, 6, 5, 8, 9], [4, 0, 0, 2, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [0, 0, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 4], [88, 19], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [41, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 2, 5, 5, 4, 1, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.30314045540645, 2.302803830605425, 2.3033280245395873, 2.30132777790714, 2.3034906568087608, 2.302506816417093], "accuracy": [0.0940430611371994, 0.09179764986038208, 0.08875974267721176, 0.09813763201236725, 0.09417514503002167, 0.08374059200286865], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]