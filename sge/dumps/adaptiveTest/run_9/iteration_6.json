[{"genotype": [[0], [1, 1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 1], [2, 3, 5, 0], [2, 1, 1], [50], [1], [1], [], [0], [8], [1], [], [], [], [], [0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7], [1, 1, 0, 2], [81, 57]], "fitness": -0.6854285597801208, "mapping_values": [1, 7, 7, 4, 3, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 9, 5, 4, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.square(tf.math.add(alpha, tf.math.negative(alpha))))), lambda shape,  alpha, beta, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.math.negative(tf.math.square(alpha))), tf.math.add(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3012040127474696, 2.284803189590166, 2.2420038694498357, 1.930382820798138, 1.4386631417283922, 1.1484758619146733, 1.0320819972874922, 0.9400923954434383, 0.8725316894367748, 0.8536719500569777, 0.8107656914371273, 0.7783535673255855, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.13089419901371002, 0.19574692845344543, 0.32267865538597107, 0.49531105160713196, 0.5717870593070984, 0.6131290197372437, 0.6534143686294556, 0.6687359809875488, 0.6820763349533081, 0.6911900639533997, 0.6993792057037354, 0.4017963409423828, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.963282653263637, 1.9388906615121024, 1.8198998314993722, 1.0063419001443046, 0.799598114831107, 0.7424952472959246, 0.6541409833090646, 0.6519989626748222, 0.5899018219539097, 0.5843383244105748, 0.5441111837114606, 0.5339655024664742, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.22633333504199982, 0.42766666412353516, 0.5706666707992554, 0.6116666793823242, 0.6513333320617676, 0.7149999737739563, 0.7026666402816772, 0.7233333587646484, 0.7253333330154419, 0.7409999966621399, 0.7546666860580444, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 1], [2, 3, 5, 0], [2, 1, 1], [50], [1], [1], [], [0], [1], [1], [], [], [], [], [0, 0, 1, 0, 0, 1, 1], [6, 3, 0, 5], [1, 0, 0], [81, 57]], "fitness": -0.5260000228881836, "mapping_values": [1, 7, 7, 4, 3, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, alpha), tf.math.square(tf.math.add(alpha, tf.math.negative(alpha))))), lambda shape,  alpha, beta, grad: tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.math.negative(tf.math.square(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.208176846045072, 2.2286713560731926, 2.33973123957657, 2.3049900999725486, 2.307686932948854, 2.303763689948835], "accuracy": [0.20776647329330444, 0.23814556002616882, 0.09906221181154251, 0.12891295552253723, 0.09087307006120682, 0.09945846349000931], "val_loss": [1.478851079940796, 2.1521076474870955, 1.9732277733939034, 1.9824393817356654, 1.9742607389177596, 1.9737732751028878], "val_accuracy": [0.5036666393280029, 0.10199999809265137, 0.09799999743700027, 0.09799999743700027, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 1], [2, 3, 5, 0], [2, 1, 1], [50], [1], [1], [], [0], [1], [0], [1], [], [6], [], [0, 0, 1, 0, 0, 1, 1, 1], [6, 3, 0, 7], [1, 0, 2, 0], [81, 57]], "fitness": -0.49057143926620483, "mapping_values": [1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 8, 4, 4, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, alpha), alpha)), lambda shape,  alpha, beta, grad: tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.math.negative(tf.math.add(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), beta))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.2094733250564698, 201239180.9462132, NaN, NaN, NaN, NaN], "accuracy": [0.20301149785518646, 0.22454100847244263, 0.1014397069811821, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.476242985044207, 2.151669661874054e+23, NaN, NaN, NaN, NaN], "val_accuracy": [0.44866666197776794, 0.13366666436195374, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 1], [2, 3, 5, 0], [2, 1, 1], [50], [1], [1], [3], [1, 0], [1], [1], [], [], [], [], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0], [6, 3, 3, 5, 2, 0, 0, 9], [1, 2, 3, 1, 2], [81, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 12, 8, 4, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.square(tf.math.negative(alpha)))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.math.negative(beta))), sigma), tf.math.negative(alpha)), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302546527328713, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09113723784685135, 0.09470347315073013, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9712321417672294, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03966666758060455, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 1], [1], [1, 2, 8, 9], [3, 2, 3], [50], [1], [1], [], [0], [31], [1], [], [], [], [], [0, 0, 1, 0, 0, 1, 1], [2, 5, 9], [1, 0], [67]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.square(alpha), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302630875073152, 2.3025929156295724, 2.3025799071579374, 2.3025920263544095, 2.302594989156364, 2.302586715455383, 2.302599995883543], "accuracy": [0.10210011899471283, 0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973641804286412, 1.9736383301871163, 1.9736382620675224, 1.973637308393206, 1.973640033176967, 1.9736437797546387, 1.973651681627546], "val_accuracy": [0.10066666454076767, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 1, 0, 1], [0, 1, 0, 1, 0], [8], [3, 2, 3], [50], [1], [1], [], [0], [31], [1], [], [], [], [], [0, 0, 1, 0, 0, 1, 1], [5, 9], [3, 2], [61]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 2, 0, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3026275928576925, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09906221181154251, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1], [9, 3, 5, 0], [2, 1, 3], [50], [1], [0], [9], [0], [1], [0, 0], [0, 1], [0], [0], [93], [0, 0, 1, 0, 0, 1, 1], [6, 3, 0, 5], [1, 0, 0], [81, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 2, 2, 1, 1, 1, 7, 4, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.math.negative(tf.math.square(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3026275928576925, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09906221181154251, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1], [1, 1, 0, 1, 0, 0, 1], [4, 9, 5, 0], [2, 1, 1], [50], [1, 0, 1, 1, 1, 0, 1, 0, 1, 0], [1], [], [0], [88, 59], [1], [], [], [], [], [1, 0, 1], [8, 5], [2, 0], [67]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [50849298874.5369, 7903338552533.564, 132744667875299.06, 937669101358643.6, 4129212642923650.0, 1.364416067634138e+16], "accuracy": [0.10038304328918457, 0.09681680053472519, 0.1010434553027153, 0.10540219396352768, 0.09919429570436478, 0.1018359512090683], "val_loss": [436416413696.0, 23527010561462.855, 252513878016000.0, 1376633578436315.5, 5155641774721317.0, 1.5208708975886336e+16], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 1, 1, 0, 1], [5], [2, 1, 1], [50], [1], [1], [], [0], [8], [1], [], [], [], [], [1, 1, 1, 0, 0, 1, 1], [6, 3, 0, 5], [1, 0, 2], [48, 75, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0816272646188736, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1], [1, 8, 5, 0, 1, 3, 2, 8, 3, 1, 4, 3, 3, 1, 6, 5], [1, 1, 1, 1, 2, 2, 0, 2, 1, 0, 0, 2, 3], [50, 89, 70, 46, 48], [1], [1], [], [5, 0], [8], [1], [], [], [], [], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1], [8, 1, 3, 1, 5, 5], [1, 2, 2, 3], [81, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 10, 6, 4, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), alpha)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.subtract(tf.math.multiply(tf.math.subtract(tf.math.square(tf.math.square(alpha)), beta), beta), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1], [1, 1, 1, 1, 1, 0, 1], [5], [0, 1, 1, 0, 2, 1, 3, 0, 1, 2, 0, 0, 2], [50, 89, 70, 46], [1], [1], [], [0], [8], [1], [1], [], [1], [], [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1], [3, 5, 7, 9, 8, 4, 5, 8, 1, 5, 6, 1, 9, 9], [1, 1, 0, 3, 0], [48, 75, 38, 73]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 18, 14, 4, 4], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.math.square(tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.pow(alpha, tf.math.square(tf.math.sqrt(tf.math.subtract(tf.math.square(tf.math.divide_no_nan(tf.math.subtract(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), sigma))))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0], [2, 1, 5, 0, 1, 3, 6, 2, 7, 1, 4, 3, 3, 4, 6, 5], [2, 1, 2, 0, 3, 0, 2, 1, 2, 1, 3, 3, 1], [50, 89, 70, 46], [1], [1], [], [0], [52], [1], [1], [], [1], [], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [0], [1], [81, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 27, 27, 14, 13, 2, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), grad)))))))))))), tf.math.add(alpha, tf.math.subtract(tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.multiply(tf.math.pow(tf.math.add(alpha, grad), grad), tf.math.add(alpha, alpha)))))))), lambda shape,  alpha, beta, grad: tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 0, 1, 0, 1, 1, 1], [2, 1, 5, 7], [2, 1, 1, 1], [50], [1], [1], [], [0], [15], [1], [], [], [], [], [0, 1, 0, 0, 1, 0, 1, 0], [6, 4, 4, 5, 9], [1, 0, 0], [81, 57, 71]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 8, 5, 3, 3], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(tf.math.add(alpha, alpha), alpha))), alpha)), lambda shape,  alpha, beta, grad: tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.math.pow(tf.math.pow(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3039791450807843, 2.3219442834250756, 1.8605659828615616e+18, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08677849918603897, 0.07555144280195236, 0.09140139818191528, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9759580067225866, 1.9968998772757394, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.023333333432674408, 0.07400000095367432, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 0, 1], [2, 1, 5, 7], [2, 1, 0, 2], [50], [1], [1], [], [1], [15], [1], [], [], [1], [], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 5, 7, 9, 8, 4, 5], [1, 0, 0], [81, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), alpha), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08334434032440186, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0], [0, 1, 0, 1, 0, 0, 1, 1], [2, 1, 5, 7], [2, 1, 2, 1], [50], [1], [1], [], [0], [1], [1], [], [], [], [], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [6, 3, 0, 5, 1, 0, 0, 7, 6, 7, 2], [1, 0, 0, 1, 1, 2, 2, 3], [81, 57, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 15, 9, 6, 2], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.subtract(tf.math.add(alpha, alpha), tf.math.square(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.math.multiply(tf.math.negative(tf.math.square(tf.math.subtract(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.negative(tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(alpha, alpha))))))), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 1], [2, 3, 5, 0, 7, 7, 0, 8, 0, 3, 6, 5, 1, 0, 8, 9], [1, 1, 1, 0, 2, 3, 0], [50], [0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [3, 2, 2, 0, 2, 7, 0, 7, 6, 0, 1], [0, 3, 1, 2, 2, 0, 1, 4, 4], [8, 3], [1], [0], [], [], [], [1, 0, 1], [8, 5], [2, 0], [81, 57]], "fitness": -0.09971428662538528, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.452757977822107, 4.2951550451582765, 8.90570859791911, 16.160382727432907, 26.484379505484473, 40.120618614365064], "accuracy": [0.09959053993225098, 0.09708096832036972, 0.1006472036242485, 0.10447761416435242, 0.09866596013307571, 0.10091137140989304], "val_loss": [2.3454959051949635, 4.323543003627232, 8.114387784685407, 13.698877607073102, 21.26800319126674, 31.049453735351562], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [2, 3, 5, 0, 3, 2, 3, 6, 3, 3, 4, 9, 7, 9, 7, 8, 3, 0, 1, 2, 4, 5, 2, 2, 2, 6, 9, 4, 6, 8, 3, 5], [2, 1, 1, 0, 1, 3, 3, 3, 3, 3, 1, 1, 0, 2, 3, 1, 2, 1, 1, 2], [50, 88, 8, 26, 49], [1], [1], [], [0], [31], [1], [], [], [], [], [1, 0, 1, 0, 1, 1, 1], [6, 3, 0, 5], [3, 2, 3], [81, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 52, 52, 32, 20, 5, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha))), tf.math.add(grad, grad))))), tf.math.sqrt(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, alpha), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))))), alpha)), tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))))))))))))), tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.sqrt(grad), alpha)), tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302546527328713, 2.304236253428028, 2.302582119182274, 2.3035451537031366, 2.30246876413796, 2.3043139111238338], "accuracy": [0.09113723784685135, 0.08149518072605133, 0.09259014576673508, 0.09708096832036972, 0.0878351628780365, 0.09021265059709549], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 1], [3, 7], [0, 2, 1], [50], [1, 0, 1, 1, 1, 0, 1, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1], [9], [0], [31], [1], [], [], [], [], [0, 0, 1, 0, 0, 1, 1], [8, 5], [3, 2], [57]], "fitness": -0.03685714304447174, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 3, 2, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.square(sigma))", "other_info": {"loss": [2.302546527328713, 2.304236253428028, 2.302582119182274, 2.3035451537031366, 2.30246876413796, 2.3043139111238338], "accuracy": [0.09113723784685135, 0.08149518072605133, 0.09259014576673508, 0.09708096832036972, 0.0878351628780365, 0.09021265059709549], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 1, 1, 0, 1], [2, 3, 5, 0], [2], [50], [1], [1], [], [0], [31], [1], [], [], [1], [], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [6, 5, 7, 9, 8, 4, 5], [1, 3, 0], [81, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, sigma)", "other_info": {"loss": [2.302546527328713, 2.304236253428028, 2.302582119182274, 2.3035451537031366, 2.30246876413796, 2.3043139111238338], "accuracy": [0.09113723784685135, 0.08149518072605133, 0.09259014576673508, 0.09708096832036972, 0.0878351628780365, 0.09021265059709549], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 1], [1, 1, 0, 1, 0], [2, 3, 5, 0, 7, 7, 0, 8, 0, 3, 6, 5, 1, 0, 8, 9], [1, 1, 1], [50], [1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [1, 3, 1, 1, 5, 1], [0, 1, 0, 1, 4, 0], [1, 38, 47], [0], [1], [], [5], [], [1, 0, 0, 1, 1, 0, 1, 1], [6, 3, 2, 5], [1, 0, 0], [81, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302546527328713, 2.304236253428028, 2.302582119182274, 2.3035451537031366, 2.30246876413796, 2.3043139111238338], "accuracy": [0.09113723784685135, 0.08149518072605133, 0.09259014576673508, 0.09708096832036972, 0.0878351628780365, 0.09021265059709549], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]