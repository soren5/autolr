[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0], [5, 8, 8, 0, 6, 5, 1, 2, 2, 0, 8, 9], [3, 1, 3, 1, 0, 2, 2], [57, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.8294285535812378, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1424200543323133, 2.0483695775794, 1.8564473429313189, 1.3825580596199534, 1.0710039974487122, 0.8877462807222521, 0.7958592186278325, 0.7453348490193913, 0.6983654095181511, 0.687391684386299, 0.6455740053041846, 0.604183643170635, 0.6321761845959775, 0.6028586828618899, 0.5673111688978936, 0.572033330245088, 0.5416269826378883, 0.5516290404871864, 0.5403212790145314, 0.5008196574255082, 0.5017086574508844, 0.4856320142375952, 0.4867568410989111, 0.4980286890332095, 0.47571978809464766, 0.4613427623325036], "accuracy": [0.2891295850276947, 0.31158366799354553, 0.3877955377101898, 0.5218597054481506, 0.6229031682014465, 0.667811393737793, 0.694360077381134, 0.7209087014198303, 0.7293620109558105, 0.737947404384613, 0.7520803213119507, 0.7775723338127136, 0.7705719470977783, 0.772288978099823, 0.7889314293861389, 0.7852331399917603, 0.7917051911354065, 0.7923656105995178, 0.7967243194580078, 0.8145555257797241, 0.8068947196006775, 0.817989706993103, 0.8175934553146362, 0.8158763647079468, 0.8276317715644836, 0.8244617581367493], "val_loss": [1.88444151197161, 1.843756811959403, 1.5575251919882638, 0.6825762135641915, 0.6987598793847221, 0.5937349625996181, 0.5699104240962437, 0.5531657082693917, 0.5190876211438861, 0.5138863154820034, 0.5217644316809518, 0.5668765476771763, 0.47574559279850553, 0.4739066873277937, 0.5220108372824532, 0.4528646639415196, 0.4551625762666975, 0.43770669187818256, 0.4199087108884539, 0.42757844073431833, 0.41362452507019043, 0.4219154970986502, 0.48571278367723736, 0.42610239131110056, 0.42097778831209454, 0.4046526721545628], "val_accuracy": [0.3283333480358124, 0.3773333430290222, 0.3779999911785126, 0.7183333039283752, 0.6463333368301392, 0.7409999966621399, 0.7556666731834412, 0.7413333058357239, 0.765333354473114, 0.7613333463668823, 0.781000018119812, 0.7553333044052124, 0.7940000295639038, 0.7853333353996277, 0.749666690826416, 0.8006666898727417, 0.7929999828338623, 0.809333324432373, 0.8149999976158142, 0.8130000233650208, 0.824999988079071, 0.8169999718666077, 0.7916666865348816, 0.8096666932106018, 0.8169999718666077, 0.8143333196640015]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1], [2, 1, 2, 2, 6, 5, 1, 3, 2, 0, 8, 9], [3, 3, 3, 1, 0, 2, 2, 4, 2], [3, 62, 0, 81, 53, 45], [0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.8234285712242126, "mapping_values": [1, 1, 1, 0, 1, 0, 19, 19, 10, 9, 1, 4, 3, 3, 0, 0, 4, 2, 2, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, grad)), tf.math.subtract(alpha, tf.math.multiply(tf.math.add(tf.math.add(beta, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)), beta))), tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.sqrt(sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1422858611703814, 2.072422076115566, 1.923236705198453, 1.4569242283054362, 1.3415070740207626, 1.0073732145552812, 0.9059233118624593, 0.7970525365164881, 0.7134655713090303, 0.7124662110597986, 0.6764905016892433, 0.6564342684009529, 0.6251482237142705, 0.6139536854802279, 0.6027838665150128, 0.5792345388800697, 0.5701246843550892, 0.5526217632778033, 0.5331771783132154, 0.5255593206856969, 0.5050155597985806, 0.4899967582533467, 0.48018302803404217, 0.4848458785123325, 0.47071419799364067, 0.4749180114366879, 0.46690160236842343, 0.4494533671356227, 0.4404544846658237, 0.43313939984542915, 0.42576492873511657, 0.4390398678589396, 0.43875759538485, 0.4104982955683145, 0.40539088589388383, 0.42980018904448153, 0.3952540489093991, 0.4015626835273541, 0.3655231670145471, 0.3741391293164242], "accuracy": [0.2884691655635834, 0.29243165254592896, 0.39268261194229126, 0.4897635579109192, 0.5278034806251526, 0.6263373494148254, 0.6568484902381897, 0.6975300312042236, 0.7264562249183655, 0.7265883088111877, 0.7347774505615234, 0.7485140562057495, 0.7650244235992432, 0.7644960880279541, 0.7720248103141785, 0.7781006693840027, 0.7876105904579163, 0.7956677079200745, 0.7989697456359863, 0.7985734939575195, 0.8083476424217224, 0.8230088353157043, 0.8227446675300598, 0.8185180425643921, 0.8244617581367493, 0.824329674243927, 0.8323867321014404, 0.8393871188163757, 0.8327829837799072, 0.8408400416374207, 0.8453308939933777, 0.8376700282096863, 0.8376700282096863, 0.8471800088882446, 0.8512746095657349, 0.842028796672821, 0.852331280708313, 0.8518029451370239, 0.8639545440673828, 0.8636903762817383], "val_loss": [1.890418188912528, 1.854768889290946, 1.0439520563398088, 1.127032722745623, 0.8856579916817802, 0.7256126574107579, 0.6652976955686297, 0.5518230540411813, 0.5822388785226005, 0.5761863333838326, 0.5478260006223407, 0.5226550783429827, 0.5401692049843925, 0.4785891090120588, 0.4972942726952689, 0.48163293089185444, 0.4505518845149449, 0.4651776892798288, 0.4483976023537772, 0.4131759660584586, 0.41487311465399607, 0.40019605840955463, 0.4331655502319336, 0.39671051502227783, 0.48459151812962126, 0.38918179273605347, 0.43391162157058716, 0.3921055793762207, 0.3771897724696568, 0.36171622787203106, 0.4023872784205845, 0.3778755153928484, 0.3648857814925058, 0.3548482826777867, 0.35315159388950895, 0.35070851019450594, 0.3639422740255083, 0.3491371529442923, 0.38892669337136404, 0.3552171162196568], "val_accuracy": [0.3316666781902313, 0.5223333239555359, 0.6086666584014893, 0.5336666703224182, 0.6420000195503235, 0.6489999890327454, 0.6853333115577698, 0.7440000176429749, 0.7393333315849304, 0.7336666584014893, 0.7363333106040955, 0.7476666569709778, 0.7426666617393494, 0.7876666784286499, 0.7639999985694885, 0.7760000228881836, 0.8073333501815796, 0.7960000038146973, 0.7993333339691162, 0.8136666417121887, 0.8149999976158142, 0.8289999961853027, 0.8056666851043701, 0.8309999704360962, 0.7760000228881836, 0.8339999914169312, 0.8063333630561829, 0.8293333053588867, 0.8323333263397217, 0.8479999899864197, 0.8233333230018616, 0.8373333215713501, 0.8446666598320007, 0.8489999771118164, 0.8546666502952576, 0.8443333506584167, 0.8416666388511658, 0.8529999852180481, 0.8516666889190674, 0.8453333377838135]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0], [9, 8, 2, 0, 6, 5, 1, 2, 2, 0, 8, 9], [1, 3, 3, 1, 0, 2, 2], [57, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.8131428360939026, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.142371466257128, 2.049868970357542, 1.6612242073698475, 1.1784748253789576, 0.9502762036159165, 0.8200493533582011, 0.7564804419203992, 0.6934481070041971, 0.6823285181115191, 0.6243757679950229, 0.621379552035835, 0.6141132265270315, 0.5908494230274669, 0.5975149176014003, 0.5413139371383208, 0.5385370197124202, 0.5333244334657856, 0.5167474736390789, 0.510047861275152, 0.48378620534966005, 0.4696010738717504], "accuracy": [0.2884691655635834, 0.3175274133682251, 0.45991283655166626, 0.5791836977005005, 0.6435081362724304, 0.6880200505256653, 0.7098137736320496, 0.7445515990257263, 0.7413815855979919, 0.7635715007781982, 0.7680623531341553, 0.7670056819915771, 0.7721568942070007, 0.7777044177055359, 0.7976489067077637, 0.7927618622779846, 0.802800178527832, 0.8063663840293884, 0.8082155585289001, 0.8166688680648804, 0.8235371708869934], "val_loss": [1.8921651159014021, 1.475642374583653, 0.8922777857099261, 0.7401090519768851, 0.6365710326603481, 0.5944893700735909, 0.5606678894587925, 0.5640602282115391, 0.5086574384144374, 0.5166101285389492, 0.5303421531404767, 0.4600459337234497, 0.47635206154414583, 0.44539245537349154, 0.4685805695397513, 0.4081472839627947, 0.46111038752964567, 0.4725669963019235, 0.4273862498147147, 0.39305284193583895, 0.4164115531103952], "val_accuracy": [0.33533334732055664, 0.4466666579246521, 0.6119999885559082, 0.6613333225250244, 0.7026666402816772, 0.7256666421890259, 0.7546666860580444, 0.7396666407585144, 0.765999972820282, 0.7663333415985107, 0.7476666569709778, 0.7979999780654907, 0.7720000147819519, 0.8040000200271606, 0.7789999842643738, 0.8296666741371155, 0.7950000166893005, 0.7673333287239075, 0.8040000200271606, 0.8273333311080933, 0.8263333439826965]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [2, 1, 2, 0, 6, 5, 1, 9, 2, 0, 8, 9], [3, 2, 3, 1, 0, 2, 2], [57, 7, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.8014285564422607, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 10, 6, 2, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, grad)), tf.math.subtract(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(beta)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.142281426383268, 2.069268855089997, 1.824775917434642, 1.3383681534492675, 1.0487690892800239, 0.9088899394335638, 0.7920454540398804, 0.7191193592137413, 0.7043154107628403, 0.6623949610546139, 0.6419265856438655, 0.6134764030782413, 0.593776603865192, 0.6161740617571947, 0.5585893409568021, 0.5570266138860153, 0.5485821543447157, 0.5239244419522904, 0.5183894865784615, 0.49491098516841747, 0.47436543538223686, 0.47742253839536636, 0.4583765038795569, 0.4646800205361464, 0.4522403580417187, 0.44691031405623755, 0.4484623847951223, 0.4356351815997617, 0.4256092660328841], "accuracy": [0.28860124945640564, 0.2977149784564972, 0.4081363081932068, 0.5288601517677307, 0.602562427520752, 0.6522256135940552, 0.6944921612739563, 0.7280412316322327, 0.7260599732398987, 0.7500990629196167, 0.7543256878852844, 0.7689869403839111, 0.7741381525993347, 0.7677981853485107, 0.7902522683143616, 0.789988100528717, 0.7952714562416077, 0.7997622489929199, 0.8012151718139648, 0.8150838613510132, 0.8206313848495483, 0.8212917447090149, 0.8339717388153076, 0.8269713521003723, 0.8290846943855286, 0.8310658931732178, 0.8300092220306396, 0.8339717388153076, 0.8409721255302429], "val_loss": [1.890352385384696, 1.8213304792131697, 1.247448444366455, 0.7487407752445766, 0.665337256022862, 0.60971656867436, 0.590895448412214, 0.5524522577013288, 0.5114242860249111, 0.5115776572908673, 0.525144100189209, 0.48070708342960905, 0.4658487694604056, 0.45814790044512066, 0.4939820425851004, 0.44892001152038574, 0.4706412042890276, 0.45123168400355745, 0.4449119567871094, 0.39294618368148804, 0.4014098899705069, 0.3820316791534424, 0.4117409246308463, 0.3822259988103594, 0.44780729498182026, 0.4225741795131138, 0.3801555803843907, 0.3807005456515721, 0.36478746788842337], "val_accuracy": [0.3319999873638153, 0.5086666941642761, 0.5170000195503235, 0.6573333144187927, 0.6899999976158142, 0.7139999866485596, 0.718666672706604, 0.7360000014305115, 0.7580000162124634, 0.7670000195503235, 0.7666666507720947, 0.7786666750907898, 0.7860000133514404, 0.7923333048820496, 0.7596666812896729, 0.7993333339691162, 0.7853333353996277, 0.7833333611488342, 0.8003333210945129, 0.8263333439826965, 0.8240000009536743, 0.8286666870117188, 0.8149999976158142, 0.8363333344459534, 0.7910000085830688, 0.8009999990463257, 0.828000009059906, 0.8293333053588867, 0.8339999914169312]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [2, 2, 2, 0, 1, 5, 1, 2, 2, 0, 2, 9, 0, 4, 8, 6], [2, 3, 2, 2, 0, 1, 2, 5, 3, 2], [38, 47, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.7808571457862854, "mapping_values": [1, 1, 1, 0, 1, 0, 26, 26, 16, 10, 2, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(tf.math.add(beta, beta), tf.math.add(grad, beta)), beta))), tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))))))), tf.math.add(beta, tf.math.negative(tf.math.pow(alpha, tf.math.add(beta, beta))))), tf.math.add(beta, grad))), tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1503429923941195, 1.9453376835017016, 1.6455206065177288, 1.084341639619635, 0.8398228974279994, 0.7965420245368483, 0.7269720527332504, 0.6485828254295614, 0.6347816519339827, 0.6474999591595997, 0.5952609045677779, 0.5756058009576803, 0.5629607554377031, 0.5485238464139063, 0.5427661896491992], "accuracy": [0.2728833854198456, 0.3673226833343506, 0.46506404876708984, 0.6161669492721558, 0.6917183995246887, 0.6973979473114014, 0.7276449799537659, 0.761590301990509, 0.7611940503120422, 0.7541936039924622, 0.7781006693840027, 0.78113853931427, 0.7911768555641174, 0.7993659973144531, 0.8004226684570312], "val_loss": [1.6912805352892195, 1.699563911982945, 0.9287894453321185, 0.6750392232622419, 0.6766532148633685, 0.5684205974851336, 0.551830359867641, 0.4992084673472813, 0.48038361753736225, 0.46341698510306223, 0.4640836204801287, 0.46959073202950613, 0.5424970388412476, 0.45324672971452984, 0.4722923380987985], "val_accuracy": [0.33266666531562805, 0.45100000500679016, 0.5803333520889282, 0.7103333473205566, 0.6700000166893005, 0.7419999837875366, 0.765333354473114, 0.7789999842643738, 0.7826666831970215, 0.8029999732971191, 0.7953333258628845, 0.7793333530426025, 0.7523333430290222, 0.7900000214576721, 0.7799999713897705]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [2, 1, 2, 0, 6, 6, 1, 9, 3, 1, 8, 9], [3, 2, 3, 1, 0, 2, 2], [68, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [85, 57]], "fitness": -0.774571418762207, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3.1756575823995368, 2.2627643193267732, 2.267742778457875, 2.30396000284954, 2.302499369072199, 3.2828711148943364, 2.1337259168464904, 1.9265824796154893, 2.0952374034506724, 1.7051749962542302, 1.6378876081688876, 1.4419986962673765, 1.4003094313340243, 1.201213337993735, 1.1123251221388117, 1.0578288983643693, 0.8708510791164238, 0.8560177654543605, 0.8092343713692104, 0.7813151359495123, 0.6810779898724992, 0.7804194703833963, 0.6516690417334955, 0.6388875510257706, 0.6204719860335509, 0.5996042609041582, 0.5851055068299598, 0.5423190050105597, 0.533483922898793, 0.5316173478659858, 0.5172366381652005, 0.49821604760158267, 0.4746147408666171, 0.49931844944935655, 0.458078533005579, 0.4345444236228715, 0.4669144212010829, 0.4372418282007135, 0.43053414163934617, 0.4151058175883131, 0.4105771206326221, 0.3931522882412989, 0.4070997802281597, 0.38385170412778447, 0.37080983269043005, 0.4106814523713779, 0.36332813926014557, 0.34832450747096294, 0.40194527289382753, 0.36973712058067953, 0.37055220486717516, 0.33848795967095124, 0.3430260757980503, 0.36937713457718974, 0.3231395727505443, 0.33644342241805575, 0.3240016906205705, 0.3077718856753202, 0.31959164050497385], "accuracy": [0.1838594675064087, 0.15863162279129028, 0.1460837423801422, 0.09681680053472519, 0.10038304328918457, 0.19614318013191223, 0.21661603450775146, 0.3607185184955597, 0.26178839802742004, 0.42491084337234497, 0.44406285881996155, 0.5065380930900574, 0.5128780603408813, 0.5875049233436584, 0.6083740592002869, 0.6255448460578918, 0.6877558827400208, 0.6773213744163513, 0.7040021419525146, 0.7145687341690063, 0.7452120184898376, 0.7129837274551392, 0.7537974119186401, 0.7561748623847961, 0.7663452625274658, 0.7709681391716003, 0.7808743715286255, 0.7952714562416077, 0.7954035401344299, 0.798309326171875, 0.8031964302062988, 0.8067626357078552, 0.8165367841720581, 0.8061022162437439, 0.8245938420295715, 0.8333113193511963, 0.8236692547798157, 0.8342359066009521, 0.8352925777435303, 0.8411042094230652, 0.8482366800308228, 0.8494254350662231, 0.8432175517082214, 0.8544445633888245, 0.8603883385658264, 0.8444063067436218, 0.8582749962806702, 0.8654074668884277, 0.8455950617790222, 0.856689989566803, 0.8557654023170471, 0.8677849769592285, 0.8651432991027832, 0.8585391640663147, 0.873860776424408, 0.868049144744873, 0.8739928603172302, 0.8812574148178101, 0.8761062026023865], "val_loss": [1.9566089085170202, 1.9735716411045618, 1.9752437727791923, 1.973914963858468, 1.9547240393502372, 1.8579624039786202, 1.6236082485743932, 1.9020237922668457, 1.4541948522840227, 1.300957202911377, 1.1839510372706823, 1.1168854917798723, 1.0993782792772566, 0.7588837657655988, 0.8241885049002511, 0.6162363801683698, 0.9143057550702777, 0.5592203991753715, 0.6404907022203717, 0.522431765283857, 0.6350395338875907, 0.4941199847630092, 0.5201351983206612, 0.5092736823218209, 0.4949777637209211, 0.4441993406840733, 0.4473585912159511, 0.4419483372143337, 0.5257937226976667, 0.4632511820111956, 0.44369183267865864, 0.43692903007779804, 0.4665179763521467, 0.41354717527117046, 0.4222542217799595, 0.4255980849266052, 0.4128847633089338, 0.43945337193352835, 0.4369193911552429, 0.39652516160692486, 0.3969660145895822, 0.3869672843388149, 0.4031074217387608, 0.39445323603493826, 0.42831023250307354, 0.3914022275379726, 0.3749280742236546, 0.4882971388953073, 0.43633053983960834, 0.3885823743683951, 0.3881063291004726, 0.3922854151044573, 0.4375940390995571, 0.3648379445075989, 0.3978197830063956, 0.4438668489456177, 0.38394761085510254, 0.39755317994526457, 0.38019602639334543], "val_accuracy": [0.19900000095367432, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.2486666738986969, 0.2226666659116745, 0.3636666536331177, 0.24266666173934937, 0.41100001335144043, 0.44200000166893005, 0.5130000114440918, 0.5666666626930237, 0.5486666560173035, 0.6650000214576721, 0.6576666831970215, 0.721666693687439, 0.5943333506584167, 0.7516666650772095, 0.7143333554267883, 0.7680000066757202, 0.7136666774749756, 0.781000018119812, 0.750333309173584, 0.7743333578109741, 0.777999997138977, 0.8053333163261414, 0.8063333630561829, 0.8069999814033508, 0.7643333077430725, 0.7913333177566528, 0.8163333535194397, 0.8036666512489319, 0.8063333630561829, 0.8186666369438171, 0.8270000219345093, 0.8220000267028809, 0.8243333101272583, 0.8103333115577698, 0.8153333067893982, 0.8360000252723694, 0.8373333215713501, 0.8416666388511658, 0.8330000042915344, 0.8366666436195374, 0.8223333358764648, 0.8450000286102295, 0.8423333168029785, 0.8059999942779541, 0.8230000138282776, 0.8523333072662354, 0.846666693687439, 0.846666693687439, 0.8403333425521851, 0.8533333539962769, 0.847000002861023, 0.8349999785423279, 0.8510000109672546, 0.8486666679382324, 0.8529999852180481]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [2, 8, 6, 0, 2, 5, 1, 2, 2, 0, 8, 9], [3, 0, 2, 3, 0, 0, 3], [3, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [81, 57]], "fitness": -0.24799999594688416, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(beta, grad)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3.1670107285989952, 2.2559404741613984, 2.2862816821818717, 2.360843589135511, 2.3046064849196486, 2.303442098964963], "accuracy": [0.1896711140871048, 0.17091533541679382, 0.15334829688072205, 0.14978206157684326, 0.09496764093637466, 0.09126931428909302], "val_loss": [1.9420922824314661, 1.9642670495169503, 1.9294418607439314, 1.9756642069135393, 1.9745360783168249, 1.9738965034484863], "val_accuracy": [0.24533332884311676, 0.09966666996479034, 0.11666666716337204, 0.09799999743700027, 0.09966666996479034, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0], [2, 5, 0, 0, 6, 4, 1, 4, 5, 8, 5, 4, 3, 3, 9, 3, 8, 3, 4, 3, 6, 5, 3, 0, 8, 1], [1, 0, 5, 3, 0, 1, 2], [45, 62, 0, 81, 53, 45], [1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1], [5, 5, 8, 9, 7], [7, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.22714285552501678, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.173829162440453, 2.2303182459967155, 2.30524565023816, 2.3043854027502353, 2.303370188413405, 2.3031838322202245], "accuracy": [0.18544445931911469, 0.24276845157146454, 0.1356491893529892, 0.09747721254825592, 0.09985470771789551, 0.09642054885625839], "val_loss": [1.9582868303571428, 1.9730726650782995, 1.9756885937282018, 1.9741244997297014, 1.9738739558628626, 1.97373138155256], "val_accuracy": [0.19766665995121002, 0.1836666613817215, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [8, 3, 4, 0, 1, 5, 1, 2, 2, 0, 8, 9], [3, 2, 3, 1, 3, 2, 2], [45, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.2151428610086441, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.171060055632082, 2.275878953171633, 2.2619467817671057, 2.3066350267453357, 2.304052032169145, 2.3032990452982194], "accuracy": [0.18478403985500336, 0.15731078386306763, 0.15770703554153442, 0.09840179979801178, 0.09760929644107819, 0.09893012791872025], "val_loss": [1.9575373104640417, 1.972330025264195, 1.980501447405134, 1.9746757916041784, 1.9739995683942522, 1.9738149642944336], "val_accuracy": [0.19966666400432587, 0.10499999672174454, 0.09966666996479034, 0.09966666996479034, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0], [2, 1, 2, 0, 6, 5, 1, 9, 2, 0, 8, 9], [0, 2, 3, 1, 0, 2, 2], [45, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 5, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.15857142210006714, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.38025531364454, 2.2461116901242013, 2.3255356720110774, 2.2700536808459324, 2.239853432527733, 2.3346727391622006, 2.616485476730018, 4.969404685219886e+16, NaN], "accuracy": [0.2502971887588501, 0.24276845157146454, 0.10091137140989304, 0.1356491893529892, 0.21661603450775146, 0.11940298229455948, 0.16933034360408783, 0.11451591551303864, 0.09985470771789551], "val_loss": [1.86122499193464, 1.9915738105773926, 1.9827587945120675, 1.6366981097630091, 2.0358452115740096, 1.834873948778425, 24.57071086338588, NaN, NaN], "val_accuracy": [0.26899999380111694, 0.09833333641290665, 0.09966666996479034, 0.2916666567325592, 0.1003333330154419, 0.2746666669845581, 0.22366666793823242, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0], [2, 5, 0, 0, 6, 4, 1, 4, 5, 8, 5, 4, 3, 3, 9, 3, 8, 3, 4, 3, 6, 5, 3, 0, 8, 1], [1, 0, 3, 3, 0, 1, 2], [45, 62, 0, 81, 53, 45], [1, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1], [5, 4, 8, 9, 7], [7, 7], [88, 19], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [0, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3021879151134823, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1006472036242485, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [2, 5, 2, 0, 6, 5, 1, 9, 2, 0, 8, 9], [3, 2, 3, 1, 0, 2, 2], [57, 7, 0, 81, 53, 45], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [2, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 10, 10, 6, 4, 0, 3, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.negative(tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, grad)), alpha))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0], [2, 5, 8, 0, 6, 4, 1, 4, 5, 8, 5, 4, 3, 3, 9, 3, 8, 3, 4, 3, 6, 5, 3, 0, 8, 1], [4, 0, 3, 3, 0, 1, 2], [57, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1], [2, 2, 2, 0, 6, 5, 1, 9, 2, 0, 8, 9], [2, 2, 3, 1, 0, 2, 2], [57, 7, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [80, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 8, 4, 4, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [2, 5, 0, 0, 6, 4, 1, 4, 5, 8, 5, 4, 3, 3, 9, 3, 8, 3, 4, 3, 6, 5, 3, 0, 8, 1], [1, 0, 5, 3, 0, 1, 2], [57, 7, 0, 81, 53, 45], [1, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1], [5, 5, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 1, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, alpha))", "other_info": {"loss": [1249837052.9393182, 24049559432.165897, 110901277995.85576, 305711620105.7382, 656451857329.9591, 1222173706423.1326], "accuracy": [0.1006472036242485, 0.09760929644107819, 0.09708096832036972, 0.10011887550354004, 0.09945846349000931, 0.10236428678035736], "val_loss": [4779431789.714286, 38224087332.57143, 128993235529.14285, 305747197952.0, 597142742162.2858, 1031845707776.0], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0], [1, 5, 0, 0, 6, 4, 1, 4, 5, 8, 5, 4, 3, 3, 9, 3, 8, 3, 4, 3, 6, 5, 3, 0, 8, 1], [4, 2, 3, 1, 0, 2, 2], [57, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, grad), beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07475894689559937, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0], [2, 5, 0, 0, 6, 4, 1, 4, 5, 8, 5, 4, 3, 3, 9, 3, 8, 3, 4, 3, 6, 5, 3, 0, 8, 1], [4, 0, 3, 3, 3, 2, 2, 1, 3, 0, 4, 0, 2], [45, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1], [5, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 1, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 13, 7, 6, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(alpha), tf.math.pow(tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, alpha), sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07740060985088348, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0], [2, 5, 0, 0, 6, 4, 1, 4, 5, 8, 5, 4, 3, 3, 9, 3, 8, 3, 4, 3, 6, 5, 3, 0, 8, 1], [1, 0, 5, 3, 0, 1, 2], [57, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [3, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3022579568929173, 2.302376042614051, 2.303463834419447, 2.3034960402631173, 2.302947737899486, 2.303749086173172], "accuracy": [0.08928807079792023, 0.09179764986038208, 0.09126931428909302, 0.08955223858356476, 0.0956280529499054, 0.09087307006120682], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0], [2, 5, 0, 0, 6, 4, 1, 4, 5, 8, 5, 4, 3, 3, 9, 3, 8, 3, 4, 3, 6, 5, 3, 0, 8, 1], [4, 0, 3, 3, 0, 1, 2], [45, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [3, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.math.negative(tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3022579568929173, 2.302376042614051, 2.303463834419447, 2.3034960402631173, 2.302947737899486, 2.303749086173172], "accuracy": [0.08928807079792023, 0.09179764986038208, 0.09126931428909302, 0.08955223858356476, 0.0956280529499054, 0.09087307006120682], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0], [5, 5, 0, 0, 6, 4, 1, 4, 5, 8, 5, 4, 3, 3, 9, 3, 8, 3, 4, 3, 6, 5, 3, 0, 8, 1], [3, 2, 3, 1, 0, 2, 2], [57, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 2, 0, 1, 3, 3], [48, 57]], "fitness": -0.036571428179740906, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, beta))", "other_info": {"loss": [2.302294599161235, 2.3025068914287234, 2.3036732496665437, 2.303792180701364, 2.3033310428917164, 2.3042074964188504], "accuracy": [0.08928807079792023, 0.09140139818191528, 0.09100515395402908, 0.08836349099874496, 0.09470347315073013, 0.09021265059709549], "val_loss": [1.9713164738246374, 1.971395696912493, 1.9714722633361816, 1.971548216683524, 1.9716290746416365, 1.9717044149126326], "val_accuracy": [0.03933333232998848, 0.039000000804662704, 0.038333334028720856, 0.038333334028720856, 0.03733333200216293, 0.03700000047683716]}}]