[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 3, 2, 3, 2, 8, 5, 6, 9, 6, 8, 9], [2, 2, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [18, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8408571481704712, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.sqrt(tf.math.multiply(beta, tf.math.add(grad, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2458116400274917, 2.139317420652876, 1.9354199741368816, 1.5538723125370848, 1.1223593712671793, 0.9045650300065115, 0.9279698997031366, 0.7863005307513993, 0.7726785818725261, 0.6931358464972501, 0.6791271904219947, 0.6790379609067788, 0.6683053424991022, 0.6228607963923655, 0.607197941546238, 0.5820919798271075, 0.57819061958086, 0.580892688350088, 0.545798857993674, 0.5390964790720115, 0.5282742664751329, 0.5182880084780087, 0.5003425443192924, 0.5196155411156964, 0.49039887725370057, 0.5154739908018857, 0.4750635837952789, 0.4688351623189448, 0.48737798062975, 0.46558239417163655, 0.45736044792530006], "accuracy": [0.2849029302597046, 0.26984545588493347, 0.3349623680114746, 0.4633469879627228, 0.6052040457725525, 0.6653017997741699, 0.6576409935951233, 0.6992471218109131, 0.7078325152397156, 0.7388719916343689, 0.7446836829185486, 0.735569953918457, 0.7510236501693726, 0.7637035846710205, 0.763439416885376, 0.7791573405265808, 0.7781006693840027, 0.7794214487075806, 0.7906485199928284, 0.7997622489929199, 0.7996301651000977, 0.8047813773155212, 0.8064984679222107, 0.8059701323509216, 0.8178576231002808, 0.806630551815033, 0.8235371708869934, 0.824329674243927, 0.8212917447090149, 0.8245938420295715, 0.8261788487434387], "val_loss": [1.2392166001456124, 1.935239315032959, 1.4361845765795027, 0.7735695157732282, 0.7042545761380877, 0.6312966857637677, 0.6692045416150775, 0.6688535724367414, 0.5870753186089652, 0.5884718894958496, 0.5463359866823468, 0.5044702291488647, 0.5032075473240444, 0.4988061359950474, 0.46953591278621126, 0.4526063714708601, 0.4600863116128104, 0.4587827410016741, 0.49436618600572857, 0.44000072138650076, 0.41984144278935026, 0.4231628349849156, 0.4425166164125715, 0.4156069074358259, 0.4610975129263742, 0.39632988827569143, 0.407207863671439, 0.43968299457005094, 0.393439097063882, 0.42115134852273123, 0.42351063660212923], "val_accuracy": [0.5736666917800903, 0.1926666647195816, 0.3330000042915344, 0.6713333129882812, 0.7239999771118164, 0.7103333473205566, 0.6970000267028809, 0.6840000152587891, 0.7556666731834412, 0.7300000190734863, 0.7413333058357239, 0.7823333144187927, 0.7863333225250244, 0.7703333497047424, 0.7956666946411133, 0.7983333468437195, 0.8013333082199097, 0.8003333210945129, 0.7649999856948853, 0.8029999732971191, 0.8186666369438171, 0.8100000023841858, 0.7943333387374878, 0.8220000267028809, 0.793666660785675, 0.8303333520889282, 0.8286666870117188, 0.8080000281333923, 0.8256666660308838, 0.8133333325386047, 0.7986666560173035]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 8, 3, 2, 3, 2, 1, 5, 4, 1, 2, 8, 9, 7], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [1, 0, 7], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8385714292526245, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 6, 3, 3, 1, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.246123587167211, 2.1510972237275214, 2.0064475536976256, 1.591431694149798, 1.1718135864632933, 0.9581389090860871, 0.8749640546281497, 0.7583142646142221, 0.7122668552990713, 0.7025356994344731, 0.6435707997274343, 0.6429419517832, 0.6250321696526056, 0.5979138490325818, 0.6155694137396137, 0.5670557579643392, 0.5718291920047978, 0.5681439211828014, 0.5250361362751905, 0.523948047966013, 0.5270517547494936, 0.5112797681091169, 0.5131775940555733, 0.5056930008565651, 0.49356571618103945, 0.4783539611547536, 0.46218721694745374, 0.4677013074126714, 0.46519855175350855, 0.45682794344958977, 0.45042206087778147, 0.43250214228887035, 0.43631118417904124, 0.4410914943604311, 0.4213219329059368, 0.4119283602639527, 0.44943532451993173, 0.3983712721974732], "accuracy": [0.2847708463668823, 0.26601505279541016, 0.30999869108200073, 0.47285696864128113, 0.5758816599845886, 0.6429798007011414, 0.6659622192382812, 0.7143045663833618, 0.7297582626342773, 0.7339849472045898, 0.7544577717781067, 0.7553823590278625, 0.7663452625274658, 0.7744023203849792, 0.7644960880279541, 0.7886672616004944, 0.778232753276825, 0.7862898111343384, 0.8037247657775879, 0.8037247657775879, 0.8026680946350098, 0.8078193068504333, 0.8087438941001892, 0.8150838613510132, 0.8120459914207458, 0.8210275769233704, 0.82683926820755, 0.826310932636261, 0.8252542614936829, 0.8318583965301514, 0.8314621448516846, 0.8380662798881531, 0.8397833704948425, 0.837537944316864, 0.8441421389579773, 0.8506141901016235, 0.8315942287445068, 0.8514066934585571], "val_loss": [1.2385070323944092, 1.9464470318385534, 1.7869574001857214, 0.9032360145023891, 0.7475261177335467, 0.6210459130150932, 0.606011050088065, 0.5927411999021258, 0.5932776927947998, 0.5377001081194196, 0.5539555209023612, 0.5561010326657977, 0.4744724716459002, 0.5525335073471069, 0.4619863714490618, 0.44907448972974506, 0.4802008867263794, 0.46475958824157715, 0.4446901593889509, 0.49863856179373606, 0.4222335304532732, 0.4237091711589268, 0.42933984313692364, 0.42771704707826885, 0.41296192577907015, 0.3956994499479021, 0.3996320962905884, 0.43851140567234587, 0.3779723473957607, 0.40375436203820364, 0.4094001906258719, 0.4204659376825605, 0.3839761529650007, 0.39972295079912457, 0.39635115010397776, 0.38658279180526733, 0.3779582806995937, 0.3858249953814915], "val_accuracy": [0.5786666870117188, 0.18400000035762787, 0.4206666648387909, 0.640666663646698, 0.6850000023841858, 0.7403333187103271, 0.7393333315849304, 0.7093333601951599, 0.7326666712760925, 0.7720000147819519, 0.7409999966621399, 0.7423333525657654, 0.7950000166893005, 0.7440000176429749, 0.8006666898727417, 0.7983333468437195, 0.7789999842643738, 0.7923333048820496, 0.8036666512489319, 0.7723333239555359, 0.8186666369438171, 0.8159999847412109, 0.8076666593551636, 0.8180000185966492, 0.8196666836738586, 0.824999988079071, 0.8253333568572998, 0.8029999732971191, 0.8320000171661377, 0.8159999847412109, 0.8073333501815796, 0.8059999942779541, 0.8349999785423279, 0.8256666660308838, 0.8286666870117188, 0.82833331823349, 0.8309999704360962, 0.8316666483879089]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 8, 3, 2, 3, 2, 1, 5, 4, 1, 2, 8, 9, 7], [2, 3, 3, 3, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 1, 1], [6, 3, 8, 9, 7], [6, 0, 3], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8339999914169312, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2458118745411833, 2.1377937383403585, 1.974953203625793, 1.3964088070803566, 1.1487711876800046, 0.9453278497666447, 0.9149476621270951, 0.7831478171329047, 0.7339235711028437, 0.7310096481850654, 0.7094096186185919, 0.6508509648742141, 0.6456147946103405, 0.6335466787594972, 0.6124991474055879, 0.5680593463093172, 0.5818336715378294, 0.5598176341204202, 0.5475413126322604, 0.532333511292832, 0.5295931372612915, 0.5114733974860565, 0.5367628985770139, 0.5156205889098853, 0.5057997868250327, 0.48125677009331724, 0.47467332620977204, 0.47365206380435865, 0.4697435164747615], "accuracy": [0.2849029302597046, 0.27037379145622253, 0.33562275767326355, 0.533879280090332, 0.5962224006652832, 0.6540747880935669, 0.6548672318458557, 0.7010962963104248, 0.7199841737747192, 0.7215691208839417, 0.7265883088111877, 0.7490423917770386, 0.7511557340621948, 0.7564390301704407, 0.7609298825263977, 0.7808743715286255, 0.7829877138137817, 0.7878747582435608, 0.7880068421363831, 0.8009510040283203, 0.7987055778503418, 0.8125742673873901, 0.7994980812072754, 0.8141592741012573, 0.8053097128868103, 0.8171972036361694, 0.8220842480659485, 0.8231409192085266, 0.829216718673706], "val_loss": [1.2389973572322301, 1.9334592819213867, 1.1499004023415702, 0.877941404070173, 0.7187620912279401, 0.6748780863625663, 0.6021213190896171, 0.677509239741734, 0.6690895727702549, 0.6722270590918404, 0.5534006016595023, 0.48470681054251535, 0.5032935312816075, 0.5065910134996686, 0.48584083148411344, 0.4804956912994385, 0.4597723143441336, 0.5063578230994088, 0.4793638161250523, 0.4432506561279297, 0.4327587570462908, 0.44148329326084684, 0.42656671149390085, 0.40625213725226267, 0.41104323523385183, 0.40068831614085604, 0.4167820726122175, 0.4210966570036752, 0.40360428605760845], "val_accuracy": [0.5733333230018616, 0.19366666674613953, 0.6156666874885559, 0.6736666560173035, 0.7243333458900452, 0.6986666917800903, 0.7369999885559082, 0.687333345413208, 0.7133333086967468, 0.6966666579246521, 0.7419999837875366, 0.7839999794960022, 0.7710000276565552, 0.7583333253860474, 0.7710000276565552, 0.7860000133514404, 0.796999990940094, 0.7706666588783264, 0.7850000262260437, 0.796999990940094, 0.812333345413208, 0.8050000071525574, 0.8073333501815796, 0.831333339214325, 0.8293333053588867, 0.8289999961853027, 0.8143333196640015, 0.8143333196640015, 0.8109999895095825]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 1, 3, 2, 3, 4, 1, 5, 9, 9, 6, 8, 9], [1, 3, 3, 1, 3, 0, 3, 3, 0, 3, 1, 0, 5, 0], [49, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8337143063545227, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 10, 5, 2, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.pow(alpha, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha)), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2458084518127532, 2.1373957864612465, 1.9711568299821183, 1.5432544752213428, 1.1214349708694429, 0.9105223177556647, 0.8749967541409333, 0.8039086091677432, 0.732489309479705, 0.7089814898864137, 0.6774902587018198, 0.6344733560452167, 0.6418806737707811, 0.6408526305477806, 0.6300143949690433, 0.5640542642976693, 0.5737436717417199, 0.5792685102918884, 0.5366379343216303, 0.5433543204017335, 0.5343653918131389, 0.5310273734554245, 0.5165568044424655, 0.5087008385090795, 0.5004487608669771, 0.5075199750546435, 0.4805580850022895, 0.47368835666790265, 0.47638218671481025, 0.4669595147128654, 0.46984697862024777, 0.44572669752222627], "accuracy": [0.2847708463668823, 0.2697133719921112, 0.33681151270866394, 0.4799894392490387, 0.5885615944862366, 0.657508909702301, 0.6733588576316833, 0.7003037929534912, 0.7224937081336975, 0.7236824631690979, 0.7388719916343689, 0.7564390301704407, 0.7543256878852844, 0.76106196641922, 0.7556465268135071, 0.7864218950271606, 0.7825914621353149, 0.7777044177055359, 0.7957997918128967, 0.793422281742096, 0.7981772422790527, 0.7981772422790527, 0.8026680946350098, 0.8128384351730347, 0.8127063512802124, 0.8113855719566345, 0.81548011302948, 0.8244617581367493, 0.8265751004219055, 0.8241975903511047, 0.8181217908859253, 0.8347642421722412], "val_loss": [1.239241089139666, 1.933049133845738, 1.1701111112322127, 1.1068528039114816, 0.7953535999570575, 0.6365750517163958, 0.684802668435233, 0.6319880655833653, 0.5418418305260795, 0.5572472470147269, 0.5254376445497785, 0.4857755388532366, 0.5102024248668126, 0.5570880515234811, 0.48700378622327534, 0.47407545362200054, 0.43678230898720877, 0.46505115713391987, 0.4515420028141567, 0.43616155215672087, 0.44543101106371197, 0.42684692995888845, 0.4299774595669338, 0.4224624293191092, 0.4160809006009783, 0.40465125867298674, 0.40287405252456665, 0.4673092705862863, 0.3924615553447178, 0.4161368693624224, 0.4098513296672276, 0.3993472627231053], "val_accuracy": [0.5730000138282776, 0.19366666674613953, 0.6060000061988831, 0.48533332347869873, 0.6613333225250244, 0.7093333601951599, 0.7123333215713501, 0.7099999785423279, 0.7543333172798157, 0.7543333172798157, 0.7673333287239075, 0.7879999876022339, 0.7730000019073486, 0.7396666407585144, 0.777999997138977, 0.7883333563804626, 0.8080000281333923, 0.8040000200271606, 0.8029999732971191, 0.8036666512489319, 0.8109999895095825, 0.812333345413208, 0.8083333373069763, 0.8180000185966492, 0.8236666917800903, 0.8253333568572998, 0.8326666951179504, 0.7846666574478149, 0.8293333053588867, 0.8130000233650208, 0.8206666707992554, 0.8186666369438171]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 3, 2, 3, 2, 8, 5, 6, 9, 6, 8, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8299999833106995, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.245818291342159, 2.1381621619005244, 1.9383459253522777, 1.5602663606936669, 1.0913042443665562, 0.9540866286196272, 0.8527615789361933, 0.7699335937203354, 0.7258218926855003, 0.7399977122268279, 0.6599486198376167, 0.6552067702047388, 0.6632456914970132, 0.6209202020427476, 0.604800403039406, 0.5597496584516396, 0.5835831903305981, 0.5810233599804868, 0.5412456477755931, 0.5455473641740837, 0.535122605441442, 0.51456094967486, 0.5203369749047422, 0.5222180890621305, 0.4977512716924226, 0.5058971950642862, 0.4809544776818378, 0.47023737221944445, 0.4767953459069619, 0.4592646252776748, 0.46456957254285713, 0.45122015336879007, 0.43398991507813756, 0.4285410164786903, 0.43725101442904507, 0.4215351830832852, 0.4295562334056575, 0.4041051983660112, 0.40559011194306344], "accuracy": [0.2847708463668823, 0.27103421092033386, 0.33866068720817566, 0.46268656849861145, 0.6038832664489746, 0.6473385095596313, 0.6807554960250854, 0.7086250185966492, 0.7263241410255432, 0.7172104120254517, 0.7471932172775269, 0.7489103078842163, 0.7494386434555054, 0.7644960880279541, 0.7666094303131104, 0.7907806038856506, 0.7765156626701355, 0.7755910754203796, 0.7938185334205627, 0.7938185334205627, 0.7991018295288086, 0.8112534880638123, 0.7993659973144531, 0.8105930685997009, 0.8165367841720581, 0.8108572363853455, 0.8124422430992126, 0.8248580098152161, 0.8230088353157043, 0.8274996876716614, 0.8235371708869934, 0.8342359066009521, 0.8436138033866882, 0.844010055065155, 0.8362171649932861, 0.8492933511734009, 0.8436138033866882, 0.8520671129226685, 0.847840428352356], "val_loss": [1.2389730725969588, 1.9343952451433455, 1.4984135627746582, 0.8019208056586129, 0.7787645714623588, 0.6822318008967808, 0.5987956012998309, 0.7004073517663139, 0.5846190111977714, 0.5550201620374408, 0.5198666538511004, 0.5023489509310041, 0.493820207459586, 0.47580017362322125, 0.4881928137370518, 0.48224946430751253, 0.46264428751809256, 0.4729714053017752, 0.4498659202030727, 0.4555433818272182, 0.4346429109573364, 0.4405487435204642, 0.4339126603943961, 0.42010479313986643, 0.42288895164217266, 0.4079940744808742, 0.4078666056905474, 0.47402398926871164, 0.384051365511758, 0.4315009372574942, 0.4176485964230129, 0.37668051038469585, 0.37410526616232737, 0.3662413614136832, 0.4015335440635681, 0.39811756781169344, 0.38496982199805124, 0.38026757751192364, 0.36029144695826937], "val_accuracy": [0.5733333230018616, 0.19200000166893005, 0.3643333315849304, 0.6660000085830688, 0.6606666445732117, 0.7133333086967468, 0.7333333492279053, 0.6733333468437195, 0.737666666507721, 0.7436666488647461, 0.762666642665863, 0.7699999809265137, 0.7803333401679993, 0.7820000052452087, 0.777999997138977, 0.7919999957084656, 0.7893333435058594, 0.7896666526794434, 0.8009999990463257, 0.7940000295639038, 0.8090000152587891, 0.8023333549499512, 0.812333345413208, 0.8159999847412109, 0.8206666707992554, 0.8240000009536743, 0.8243333101272583, 0.7823333144187927, 0.8323333263397217, 0.8080000281333923, 0.8100000023841858, 0.8336666822433472, 0.8413333296775818, 0.846666693687439, 0.8223333358764648, 0.8216666579246521, 0.831333339214325, 0.8389999866485596, 0.8426666855812073]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [5, 8, 3, 2, 3, 2, 1, 5, 2, 9, 6, 8, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 1, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8285714387893677, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2465487493893663, 2.147952851208682, 2.0025600147694487, 1.5440327518604466, 1.1991245030191644, 1.061651580739314, 0.8763266438112723, 0.7840116276969022, 0.7609026672077721, 0.7244148718572296, 0.7090629667118478, 0.679989559728204, 0.6673065431287118, 0.6310817760137, 0.6030203913653516, 0.5677055330119664, 0.637764756170325, 0.5755238334705266, 0.5535130627269301, 0.5362985544452861, 0.5251457572038447, 0.5443101725825827, 0.5361121568532117, 0.5382443184645389, 0.4982280723446506, 0.5008370867258585, 0.4953220925586508, 0.4670426708722017, 0.4783629807364971, 0.4731374472052965, 0.47403587615249054, 0.4548093535802179], "accuracy": [0.2845066785812378, 0.2681283950805664, 0.30722492933273315, 0.4826310873031616, 0.5843349695205688, 0.6153744459152222, 0.681547999382019, 0.7029454708099365, 0.7116629481315613, 0.7217012047767639, 0.7236824631690979, 0.7404569983482361, 0.7466648817062378, 0.7569673657417297, 0.769911527633667, 0.7857614755630493, 0.7588165402412415, 0.7828556299209595, 0.7921014428138733, 0.7972526550292969, 0.8050455451011658, 0.7932901978492737, 0.7957997918128967, 0.8012151718139648, 0.8120459914207458, 0.8146876096725464, 0.8109893202781677, 0.828292191028595, 0.817461371421814, 0.8251221776008606, 0.8210275769233704, 0.8302733898162842], "val_loss": [1.2396976607186454, 1.9436485426766532, 1.6689550195421492, 0.9546065330505371, 0.8621361255645752, 0.6418461118425641, 0.7066937685012817, 0.7458178315843854, 0.5507899011884417, 0.6505562748227801, 0.5430350473948887, 0.5437474250793457, 0.4994570187159947, 0.47490908418382916, 0.4736682517187936, 0.5170613186700004, 0.4643397842134748, 0.4850987025669643, 0.44782257080078125, 0.44880902767181396, 0.4605856793267386, 0.42653389487947735, 0.4330938032695225, 0.42445593220846994, 0.4481792620250157, 0.4022525463785444, 0.41077316658837454, 0.4298716357776097, 0.39897437606539043, 0.4105519567217146, 0.41330621923719135, 0.4053043467657907], "val_accuracy": [0.5759999752044678, 0.18566666543483734, 0.5040000081062317, 0.6666666865348816, 0.574999988079071, 0.7269999980926514, 0.6706666946411133, 0.6616666913032532, 0.7643333077430725, 0.7070000171661377, 0.753333330154419, 0.7506666779518127, 0.7836666703224182, 0.7863333225250244, 0.7873333096504211, 0.762666642665863, 0.7883333563804626, 0.7770000100135803, 0.79666668176651, 0.7923333048820496, 0.7979999780654907, 0.812666654586792, 0.8113333582878113, 0.8186666369438171, 0.8013333082199097, 0.8263333439826965, 0.8316666483879089, 0.8033333420753479, 0.8220000267028809, 0.8180000185966492, 0.8133333325386047, 0.8173333406448364]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 3, 2, 3, 2, 8, 2, 6, 9, 6, 8, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8225714564323425, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 10, 7, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.sqrt(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.multiply(grad, tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, beta)))), tf.math.add(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))))), tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2460175326408693, 2.1418936241572135, 2.0583197374889295, 1.593415607629498, 1.1533705842587862, 1.0233196828028688, 0.9002454628592957, 0.7888925235347977, 0.7471026098093636, 0.7660673044030504, 0.695267803113789, 0.7024584496891998, 0.6558286945471249, 0.6278933831304213, 0.6248185997783327, 0.6088331658543219, 0.6014830690364891, 0.5953713262778673, 0.5745182391391407, 0.5591385496794792, 0.5437493125413938, 0.5542822372344948, 0.550037781568078, 0.5232591610999706, 0.51169676145999, 0.5108654256809216, 0.5249494983141905, 0.4888873890941767, 0.4830194895199151, 0.4884656370119128], "accuracy": [0.2847708463668823, 0.270109623670578, 0.3003566265106201, 0.4653282165527344, 0.6040153503417969, 0.6347906589508057, 0.6634526252746582, 0.7021529674530029, 0.7152291536331177, 0.7092854380607605, 0.7371549606323242, 0.7316074371337891, 0.7498348951339722, 0.7606657147407532, 0.7614582180976868, 0.7737419009208679, 0.774798572063446, 0.7720248103141785, 0.7832518815994263, 0.791969358921051, 0.7946110367774963, 0.787082314491272, 0.7965922355651855, 0.8090080618858337, 0.8038568496704102, 0.8058380484580994, 0.8042530417442322, 0.8165367841720581, 0.8216879963874817, 0.8164047002792358], "val_loss": [1.2397898265293665, 1.9401440620422363, 1.602146829877581, 1.011331353868757, 0.798150931085859, 0.7970455033438546, 0.6237977232251849, 0.6397125891276768, 0.6670013325554984, 0.5977263791220528, 0.51188063621521, 0.5195787123271397, 0.5116295303617205, 0.5459076166152954, 0.4768475294113159, 0.4778259311403547, 0.4639583144869123, 0.4648526055472238, 0.4450350318636213, 0.44774484634399414, 0.4487872634615217, 0.46440303325653076, 0.43720085280282156, 0.43216722352164133, 0.4225866624287197, 0.42290416785648893, 0.41709973982402254, 0.4111531802586147, 0.4405100005013602, 0.409037641116551], "val_accuracy": [0.578000009059906, 0.18799999356269836, 0.4426666796207428, 0.6193333268165588, 0.6433333158493042, 0.6483333110809326, 0.7289999723434448, 0.7049999833106995, 0.7206666469573975, 0.7303333282470703, 0.7736666798591614, 0.7603333592414856, 0.7646666765213013, 0.7409999966621399, 0.784333348274231, 0.7839999794960022, 0.7953333258628845, 0.7950000166893005, 0.8016666769981384, 0.7973333597183228, 0.8109999895095825, 0.7889999747276306, 0.8080000281333923, 0.8169999718666077, 0.8216666579246521, 0.8206666707992554, 0.8176666498184204, 0.8213333487510681, 0.7976666688919067, 0.8216666579246521]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 8, 3, 2, 3, 2, 1, 5, 4, 1, 2, 8, 9, 7], [2, 3, 3, 3, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [6, 3, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8037142753601074, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.square(tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [1.9817776264940916, 1.4196193083134687, 1.0688905399929909, 0.8783269024654198, 0.8632087435200859, 0.7552282712116627, 0.7253399176084921, 0.7306570269884828, 0.6876414834846831, 0.67356024491017, 0.6471866091654017, 0.6127416257293957, 0.6346604398149998, 0.6070102995349872, 0.5925401623663791, 0.5796099516221513, 0.5732899685388448, 0.5606304987578139], "accuracy": [0.34024566411972046, 0.5115572810173035, 0.6136573553085327, 0.6763967871665955, 0.6787742972373962, 0.7140403985977173, 0.7256637215614319, 0.7189275026321411, 0.7366266250610352, 0.7452120184898376, 0.7580240368843079, 0.7656848430633545, 0.7597411274909973, 0.7750627398490906, 0.7734777331352234, 0.7836481332778931, 0.7876105904579163, 0.7890635132789612], "val_loss": [1.332188538142613, 0.9629026140485492, 0.7269155127661568, 0.6686815704618182, 0.5951902525765556, 0.5730107852390834, 0.6108637877873012, 0.5615168469292777, 0.548197729246957, 0.5586326803479876, 0.506008505821228, 0.5186394112450736, 0.48458043166569303, 0.4954038347516741, 0.49400503294808523, 0.4721554858343942, 0.5015643664768764, 0.48173788615635466], "val_accuracy": [0.39666667580604553, 0.5889999866485596, 0.6726666688919067, 0.6956666707992554, 0.7409999966621399, 0.7536666393280029, 0.7303333282470703, 0.7379999756813049, 0.7509999871253967, 0.7443333268165588, 0.7733333110809326, 0.7649999856948853, 0.7926666736602783, 0.7820000052452087, 0.7706666588783264, 0.7889999747276306, 0.765999972820282, 0.7746666669845581]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [7, 8, 3, 2, 3, 2, 1, 5, 4, 1, 2, 8, 9, 7], [2, 3, 3, 3, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [6, 3, 8, 9, 7], [1, 0], [88, 19], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [2, 57]], "fitness": -0.345714271068573, "mapping_values": [1, 1, 1, 0, 1, 0, 22, 22, 12, 10, 3, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, beta), tf.math.sqrt(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))), tf.math.pow(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(beta, grad), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.sqrt(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.989385113566858, 2.535114411680438, 2.304811797200602, 2.303486945779962, 2.302267049423629, 2.244157088163459], "accuracy": [0.1888786107301712, 0.17884030938148499, 0.09998679161071777, 0.1422533392906189, 0.10421344637870789, 0.18835029006004333], "val_loss": [1.6322456768580846, 1.9780562264578683, 1.9722112246922083, 1.9753658430916923, 1.9634340831211634, 1.9752930232456751], "val_accuracy": [0.35233333706855774, 0.09966666996479034, 0.09933333098888397, 0.09799999743700027, 0.10000000149011612, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 8, 3, 2, 3, 2, 1, 5, 2, 9, 6, 8, 9], [3, 3, 0, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 77, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 1, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [24, 57]], "fitness": -0.34371429681777954, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.square(tf.math.pow(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.3024439723216754, 2.302848497134284, 2.3015887028411113, 2.3000921419882077, 2.3008131671969005, 2.301200356324115, 2.3001497330966014, 2.298983527779217, 2.298588381026478, 2.298400958767499, 2.297314369006164, 2.298274278357328, 2.296610885276739, 2.2976448414678727, 2.295477333857383, 2.2966385404778005, 2.2963163572736405, 2.2958548493184403, 2.2933152921447633, 2.293977242482258, 2.2924788711471265, 2.2935185938180003, 2.2935392849984786, 2.2936411375036454, 2.2911413439890618, 2.2922538541106814, 2.29079156648749, 2.2906587776364966, 2.2891872169760163, 2.288914905515849, 2.289738950129781, 2.2897905432363905, 2.2877334242153005, 2.2883138276204584, 2.287459936376261, 2.286816933372033, 2.286180758126707, 2.2872450833212916, 2.285934203808822, 2.2844871135986775, 2.2853076883736003, 2.285572988891551, 2.284337636549333, 2.2839949169431017, 2.283128050387323, 2.2836470533088056, 2.2818809579691286, 2.2836307343112763, 2.280326968942415, 2.2808774745443854, 2.2824832127787387, 2.2796644581590804, 2.2795762135887725, 2.2796483712504334, 2.278745281477457, 2.2784479471828174, 2.2787329184144576, 2.276709715924196, 2.2770772392188303, 2.27541181975352, 2.276279059729918, 2.2754659265055395, 2.274886178208254, 2.272626222321512, 2.274088718950662, 2.274986195258807, 2.2748933302932617, 2.2729918168536143, 2.2728486822234357, 2.2718318195201936, 2.2715154493710052, 2.2713831234696267, 2.272469264074418, 2.2702712111107157, 2.2689415038679064, 2.269318827422634, 2.2698944083546224, 2.2702485235879575, 2.2674912001242364, 2.268003022681768, 2.2678466752661595, 2.266043918102236, 2.2677490558165756, 2.2656579425447982, 2.265198542158192, 2.2627878036355424, 2.2652642618883965, 2.264104072711629, 2.263399363823728, 2.264638420802066, 2.262042638506352, 2.262504045532805, 2.262205675687174, 2.261219513461952, 2.2607945182524682, 2.2607597396547265, 2.259179005801103, 2.2583702028136226, 2.259046370216947, 2.258997694092845], "accuracy": [0.09126931428909302, 0.08955223858356476, 0.08968432247638702, 0.09853387624025345, 0.09589222073554993, 0.09655263274908066, 0.09536388516426086, 0.09285431355237961, 0.09708096832036972, 0.10513802617788315, 0.10685510188341141, 0.09826971590518951, 0.10408136248588562, 0.1088363528251648, 0.10157178342342377, 0.10421344637870789, 0.10632677376270294, 0.10011887550354004, 0.11345925182104111, 0.1080438494682312, 0.1088363528251648, 0.11306300014257431, 0.11411966383457184, 0.10976093262434006, 0.12402588874101639, 0.11293092370033264, 0.11940298229455948, 0.11940298229455948, 0.12389380484819412, 0.12574297189712524, 0.12323339283466339, 0.12217672914266586, 0.13010171055793762, 0.1310262829065323, 0.12812046706676483, 0.12970545887947083, 0.13274335861206055, 0.13300752639770508, 0.12917712330818176, 0.13380002975463867, 0.13697001338005066, 0.13142253458499908, 0.14278165996074677, 0.13842293620109558, 0.13934750854969025, 0.13340377807617188, 0.14172500371932983, 0.14000792801380157, 0.14859332144260406, 0.14119666814804077, 0.1402720957994461, 0.15176330506801605, 0.14951789379119873, 0.1484612375497818, 0.146479994058609, 0.14832915365695953, 0.15731078386306763, 0.15915995836257935, 0.1550653874874115, 0.16378284990787506, 0.15942411124706268, 0.16457535326480865, 0.16919825971126556, 0.16734910011291504, 0.16642451286315918, 0.1624620258808136, 0.16074495017528534, 0.15797120332717896, 0.1682736724615097, 0.16933034360408783, 0.1702549159526825, 0.17236824333667755, 0.17157575488090515, 0.17342491447925568, 0.17897239327430725, 0.17831197381019592, 0.1760665625333786, 0.1760665625333786, 0.1868973672389984, 0.1838594675064087, 0.17434948682785034, 0.18518029153347015, 0.18121780455112457, 0.1806894689798355, 0.18478403985500336, 0.19310526549816132, 0.18742570281028748, 0.19984149932861328, 0.19178444147109985, 0.1888786107301712, 0.1904636174440384, 0.19574692845344543, 0.19601109623908997, 0.20340773463249207, 0.19997358322143555, 0.19614318013191223, 0.20433232188224792, 0.20393607020378113, 0.2016906589269638, 0.19640734791755676], "val_loss": [1.9708170890808105, 1.9704016957964217, 1.9699851444789342, 1.9695717266627721, 1.9691570826939173, 1.9687414169311523, 1.9683316775730677, 1.9679227556501115, 1.9675141062055315, 1.967104434967041, 1.9666934694562639, 1.966282844543457, 1.9658726964678084, 1.965465681893485, 1.9650565556117467, 1.9646449089050293, 1.9642346927097865, 1.9638266563415527, 1.9634215491158622, 1.9630143301827567, 1.962606566292899, 1.9621996198381697, 1.9617931502205985, 1.9613909040178572, 1.9609824589320592, 1.9605750356401717, 1.9601661818368095, 1.9597584179469518, 1.9593534469604492, 1.9589458874293737, 1.9585374423435755, 1.9581339699881417, 1.957730770111084, 1.9573242323739188, 1.956916059766497, 1.9565125874110632, 1.9560996464320592, 1.9556920187813895, 1.9552793502807617, 1.954871382032122, 1.954463277544294, 1.9540625980922155, 1.9536538805280412, 1.953245026724679, 1.9528416906084334, 1.9524318831307548, 1.9520220075334822, 1.9516154016767229, 1.951207092830113, 1.950800963810512, 1.9503953797476632, 1.9499855041503906, 1.9495765141078405, 1.9491684096200126, 1.9487576484680176, 1.948347840990339, 1.9479308809552873, 1.947519029889788, 1.9471045221601213, 1.9466944422040666, 1.9462830679757255, 1.9458729199000768, 1.9454562323434013, 1.9450373649597168, 1.9446227209908622, 1.9442077364240373, 1.9437932968139648, 1.9433736119951521, 1.9429541996547155, 1.9425328799656458, 1.9421130589076452, 1.9416883332388741, 1.9412736211504256, 1.9408471243722099, 1.940424578530448, 1.940002168927874, 1.9395782606942313, 1.9391529900687081, 1.9387283325195312, 1.9383017676217216, 1.9378745896475655, 1.9374391692025321, 1.937007222856794, 1.9365744590759277, 1.9361393111092704, 1.9356976917811803, 1.9352619307381767, 1.9348249435424805, 1.9343921116420202, 1.933957781110491, 1.9335171835763114, 1.9330743380955286, 1.9326319694519043, 1.9321891239711217, 1.931741714477539, 1.9312942368643624, 1.930844511304583, 1.9303901536124093, 1.929938520703997, 1.9294866834368025], "val_accuracy": [0.04333333298563957, 0.045666664838790894, 0.04866666719317436, 0.050999999046325684, 0.05400000140070915, 0.056333333253860474, 0.05833333358168602, 0.06066666543483734, 0.061666667461395264, 0.06366666406393051, 0.06499999761581421, 0.06700000166893005, 0.07066666334867477, 0.07366666942834854, 0.07599999755620956, 0.08033332973718643, 0.08366666734218597, 0.08699999749660492, 0.08900000154972076, 0.09166666865348816, 0.09266666322946548, 0.0949999988079071, 0.09700000286102295, 0.10066666454076767, 0.10566666722297668, 0.10966666787862778, 0.11366666853427887, 0.11966666579246521, 0.12066666781902313, 0.12399999797344208, 0.12700000405311584, 0.1313333362340927, 0.1340000033378601, 0.1379999965429306, 0.14166666567325592, 0.1446666717529297, 0.14933332800865173, 0.1509999930858612, 0.15433333814144135, 0.15800000727176666, 0.16200000047683716, 0.16500000655651093, 0.17033334076404572, 0.17466667294502258, 0.17866666615009308, 0.1836666613817215, 0.18733333051204681, 0.19233334064483643, 0.195333331823349, 0.1979999989271164, 0.20133332908153534, 0.20666666328907013, 0.20999999344348907, 0.21400000154972076, 0.22033333778381348, 0.2253333330154419, 0.2280000001192093, 0.2303333282470703, 0.23233333230018616, 0.23499999940395355, 0.23633334040641785, 0.23866666853427887, 0.24400000274181366, 0.24666666984558105, 0.25, 0.2536666691303253, 0.2563333213329315, 0.26233333349227905, 0.2669999897480011, 0.27000001072883606, 0.273333340883255, 0.27666667103767395, 0.2796666622161865, 0.2823333442211151, 0.28700000047683716, 0.28833332657814026, 0.2930000126361847, 0.29600000381469727, 0.2966666519641876, 0.29866665601730347, 0.3019999861717224, 0.30300000309944153, 0.3050000071525574, 0.3070000112056732, 0.3100000023841858, 0.3140000104904175, 0.3149999976158142, 0.3186666667461395, 0.32066667079925537, 0.3243333399295807, 0.3256666660308838, 0.3266666531562805, 0.328000009059906, 0.33033332228660583, 0.3319999873638153, 0.3346666693687439, 0.3370000123977661, 0.3386666774749756, 0.34033334255218506, 0.3413333296775818]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 8, 3, 2, 3, 2, 1, 5, 4, 1, 2, 8, 9, 7], [2, 2, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [0, 0, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 1], [6, 3, 8, 8, 7], [6, 0], [88, 19], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [2, 1, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 13, 8, 3, 7, 6, 4, 2, 1, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.sqrt(tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, beta), grad))))), tf.math.add(beta, tf.math.sqrt(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), grad), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 8, 3, 2, 3, 2, 1, 5, 4, 1, 2, 8, 9, 7], [2, 0, 1, 2, 3, 0, 3, 3, 0, 3, 1, 0, 5, 0], [49, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [8, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 9, 7, 2, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(alpha, tf.math.subtract(tf.math.add(beta, beta), tf.math.square(tf.math.add(beta, grad))))))), tf.math.pow(tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(alpha, tf.math.square(tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 3, 2, 3, 1, 8, 5, 6, 2, 6, 8, 9], [2, 2, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [4, 0, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 13, 8, 3, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.sqrt(tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, beta), tf.math.sqrt(tf.math.add(beta, beta))), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))), tf.math.divide_no_nan(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.sqrt(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))), grad)), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.negative(alpha), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [5, 8, 3, 2, 3, 2, 1, 5, 2, 9, 6, 8, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [2, 2, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, beta))", "other_info": {"loss": [2.302626322855992, 2.303441614790395, 2.302334674014675, 2.3001492402305095, 4528995506264.012, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09034473448991776, 0.08889182657003403, 0.08915598690509796, 0.10038304328918457, 0.09734513610601425, 0.09985470771789551, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9712209020342146, 1.9710843903677804, 1.970461641039167, 1.967860221862793, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03966666758060455, 0.041333332657814026, 0.03799999877810478, 0.07733333110809326, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 8, 3, 2, 3, 2, 1, 5, 4, 1, 2, 8, 9, 7], [1, 3, 3, 3, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [6, 3, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [7, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 6, 3, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.301967200979722, 2.3024897633951733, 2.302462886872781, 2.302431765013304, 2.302459067136951, 2.3024634162054842], "accuracy": [0.10632677376270294, 0.10210011899471283, 0.10474177449941635, 0.10394927859306335, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736401012965612, 1.9736371040344238, 1.9736359460013253, 1.9736574717930384, 1.9736550194876534, 1.9736716406685966], "val_accuracy": [0.10366666316986084, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 8, 3, 2, 3, 2, 1, 5, 4, 1, 2, 8, 9, 7], [2, 3, 3, 3, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [6, 3, 8, 9, 7], [1, 0], [88, 19], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 22, 22, 12, 10, 3, 1, 0, 0, 0, 0, 14, 7, 7, 2], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.sqrt(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))), tf.math.pow(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(beta, grad), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.sqrt(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.square(tf.math.pow(tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(beta, sigma), sigma)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 8, 3, 2, 3, 2, 1, 5, 2, 9, 6, 8, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 1, 1], [2, 3, 1, 9, 7], [1, 0, 4], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 1, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 20, 20, 12, 8, 3, 7, 6, 3, 3, 1, 4, 2, 2, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.sqrt(tf.math.multiply(grad, tf.math.add(beta, grad))), tf.math.add(tf.math.multiply(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))))))), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.sqrt(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), sigma)))), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 3, 2, 3, 8, 8, 5, 6, 1, 6, 8, 9], [2, 3, 3, 0, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [6, 3, 8, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 20, 20, 12, 8, 3, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.sqrt(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(beta, grad), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.sqrt(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302100747945743, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09985470771789551, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [5, 8, 3, 2, 3, 2, 1, 5, 2, 9, 6, 8, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 1, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [32, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0758156105875969, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [5, 8, 3, 2, 3, 2, 1, 5, 4, 1, 2, 8, 9, 7], [5, 3, 3, 3, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.054571427404880524, "mapping_values": [1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.math.square(tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.3025520952890073, 2.303182298134756, 2.302196163747604, 2.301019833340164, 2.3019467065866834, 2.3025695871069227, 2.301869662556556, 2.3010136214198216, 2.3008504966309578, 2.3010815187231772, 2.300417847369467, 2.3016022647045955, 2.300583083411375, 2.301774430410375, 2.300102367849555, 2.301608825545537, 2.301337420334197, 2.3016349655872386, 2.299491976450904, 2.3006911507025687, 2.300151319646124, 2.3009891649829934, 2.3011564746146758, 2.301682814536487, 2.300444320334325, 2.3013047325833127, 2.3004757175198667, 2.3006926320405636], "accuracy": [0.09074098616838455, 0.08942015469074249, 0.08928807079792023, 0.09681680053472519, 0.0936468094587326, 0.09298639744520187, 0.08981640636920929, 0.09219389408826828, 0.09153348207473755, 0.09602430462837219, 0.10051512718200684, 0.09232597798109055, 0.09417514503002167, 0.09919429570436478, 0.09074098616838455, 0.09206181764602661, 0.09311848133802414, 0.08889182657003403, 0.09774138033390045, 0.0944393053650856, 0.09285431355237961, 0.09576013684272766, 0.09800554811954498, 0.08638224750757217, 0.09906221181154251, 0.08902391046285629, 0.09417514503002167, 0.09272222965955734], "val_loss": [1.971100125994001, 1.9709245136805944, 1.9708033970424108, 1.9706992421831404, 1.9705845969063895, 1.970463480268206, 1.9703572137015206, 1.9702770369393485, 1.97018187386649, 1.970118522644043, 1.9700729506356376, 1.9700123241969518, 1.9699912071228027, 1.9699444770812988, 1.9699340547834123, 1.9699268341064453, 1.9698921612330846, 1.9698679787772042, 1.9698715891156877, 1.9698821476527624, 1.9699336460658483, 1.9699506759643555, 1.9699522427150182, 1.9699570110866003, 1.9699972016470773, 1.9699981553213937, 1.9700061934334892, 1.9700146402631487], "val_accuracy": [0.041333332657814026, 0.0416666679084301, 0.0430000014603138, 0.043666668236255646, 0.044333335012197495, 0.045666664838790894, 0.04699999839067459, 0.04833333194255829, 0.04833333194255829, 0.04933333396911621, 0.05066666752099991, 0.05233333259820938, 0.05299999937415123, 0.054666668176651, 0.05533333495259285, 0.0560000017285347, 0.0560000017285347, 0.05666666850447655, 0.05666666850447655, 0.05666666850447655, 0.05700000002980232, 0.05700000002980232, 0.05766666680574417, 0.05666666850447655, 0.05766666680574417, 0.0573333315551281, 0.056333333253860474, 0.0573333315551281]}}]