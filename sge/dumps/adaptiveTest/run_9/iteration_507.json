[{"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 6, 1, 0, 1, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 2, 2, 2, 0, 2, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [95, 56, 82, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2, 3, 3, 3], [47, 57, 40, 62]], "fitness": -0.8282856941223145, "mapping_values": [1, 8, 8, 4, 4, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.subtract(grad, tf.math.negative(tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.116422176361084, 1.4352754354476929, 1.072788953781128, 0.8893027305603027, 0.7742466926574707, 0.7277640104293823, 0.7364699244499207, 0.6704572439193726, 0.6746841073036194, 0.6663563847541809, 0.6139479875564575, 0.6034554243087769, 0.5976871252059937, 0.5720635652542114, 0.5590904951095581, 0.5240572690963745, 0.5452343821525574, 0.5227859020233154, 0.5017369389533997, 0.5223357677459717, 0.5008425712585449, 0.48552340269088745, 0.47067105770111084, 0.46642717719078064, 0.45352262258529663, 0.45299217104911804, 0.45341092348098755, 0.4428912401199341, 0.4345487654209137, 0.4131244122982025, 0.4230777323246002, 0.39626118540763855, 0.38566383719444275, 0.41409286856651306, 0.3927060067653656, 0.3856627941131592, 0.3800085783004761, 0.37912046909332275], "accuracy": [0.2876766622066498, 0.502971887588501, 0.5962224006652832, 0.6744155287742615, 0.707040011882782, 0.7252674698829651, 0.7150970697402954, 0.7452120184898376, 0.746268630027771, 0.7412495017051697, 0.7681944370269775, 0.7709681391716003, 0.7738739848136902, 0.7819310426712036, 0.791969358921051, 0.8075551390647888, 0.7936864495277405, 0.8043851256370544, 0.8137630224227905, 0.8070268034934998, 0.8166688680648804, 0.8206313848495483, 0.8280280232429504, 0.8329150676727295, 0.8319904804229736, 0.8314621448516846, 0.8300092220306396, 0.8339717388153076, 0.8387266993522644, 0.8492933511734009, 0.8446704745292664, 0.858671247959137, 0.8626337051391602, 0.8455950617790222, 0.8537842035293579, 0.8622375130653381, 0.8607845902442932, 0.86118084192276], "val_loss": [1.3936785459518433, 1.2654364109039307, 0.7915384769439697, 0.7074703574180603, 0.6640844941139221, 0.6654866337776184, 0.6483412384986877, 0.5908389687538147, 0.627577543258667, 0.5741295218467712, 0.5492633581161499, 0.5983567833900452, 0.5238222479820251, 0.507779061794281, 0.45943936705589294, 0.5263552665710449, 0.4670078456401825, 0.4340861141681671, 0.44524604082107544, 0.4356822073459625, 0.4320240020751953, 0.41600969433784485, 0.41801485419273376, 0.4062831699848175, 0.4354763925075531, 0.39353710412979126, 0.4229288697242737, 0.4569741189479828, 0.4333346486091614, 0.378123939037323, 0.3750629127025604, 0.39511141180992126, 0.368299275636673, 0.37494733929634094, 0.3673969805240631, 0.3678845167160034, 0.41511014103889465, 0.3999738097190857], "val_accuracy": [0.48133334517478943, 0.5426666736602783, 0.6883333325386047, 0.7089999914169312, 0.7183333039283752, 0.75, 0.7323333621025085, 0.7703333497047424, 0.7480000257492065, 0.7696666717529297, 0.7673333287239075, 0.7576666474342346, 0.7900000214576721, 0.7976666688919067, 0.8339999914169312, 0.7923333048820496, 0.812333345413208, 0.8309999704360962, 0.8226666450500488, 0.8366666436195374, 0.8356666564941406, 0.8403333425521851, 0.8429999947547913, 0.8393333554267883, 0.8399999737739563, 0.8496666550636292, 0.8306666612625122, 0.812666654586792, 0.8233333230018616, 0.8610000014305115, 0.8636666536331177, 0.8493333458900452, 0.8693333268165588, 0.862333357334137, 0.8606666922569275, 0.8603333234786987, 0.8386666774749756, 0.8503333330154419]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 2, 2, 7, 9, 0, 1, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 56, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8220000267028809, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.116421937942505, 1.4269659519195557, 1.1392951011657715, 0.9107566475868225, 0.7952480316162109, 0.7304402589797974, 0.7263995409011841, 0.6748762726783752, 0.6549828052520752, 0.6699808835983276, 0.6291259527206421, 0.5933736562728882, 0.6017043590545654, 0.5674936175346375, 0.5575292110443115, 0.5354119539260864, 0.5407968163490295, 0.5202003121376038, 0.4947834312915802, 0.5177470445632935, 0.5027442574501038, 0.48682090640068054, 0.4844743609428406, 0.4626619517803192, 0.4538240432739258, 0.46253907680511475, 0.46089184284210205, 0.4465673863887787, 0.4382067620754242], "accuracy": [0.28741249442100525, 0.5038964748382568, 0.59661865234375, 0.6539427042007446, 0.6942279934883118, 0.7201162576675415, 0.7191916704177856, 0.7391361594200134, 0.7499669790267944, 0.7433628439903259, 0.763439416885376, 0.7753269076347351, 0.767930269241333, 0.7841764688491821, 0.7923656105995178, 0.8017435073852539, 0.7971205711364746, 0.8034605979919434, 0.8186501264572144, 0.8061022162437439, 0.8171972036361694, 0.8191784620285034, 0.8211596608161926, 0.8330471515655518, 0.8304054737091064, 0.8301413059234619, 0.8290846943855286, 0.8300092220306396, 0.8407079577445984], "val_loss": [1.3933050632476807, 1.3951772451400757, 0.8327602744102478, 0.7028258442878723, 0.6607820391654968, 0.7139876484870911, 0.6593635678291321, 0.5616461038589478, 0.5814693570137024, 0.5630579590797424, 0.5151888132095337, 0.5777332186698914, 0.5157257914543152, 0.5007482171058655, 0.4565121531486511, 0.5554502606391907, 0.460293710231781, 0.42793017625808716, 0.44627681374549866, 0.4378610849380493, 0.43102002143859863, 0.41736721992492676, 0.414242684841156, 0.4024806320667267, 0.4743747413158417, 0.39961543679237366, 0.4385814666748047, 0.45900461077690125, 0.44277676939964294], "val_accuracy": [0.4819999933242798, 0.5473333597183228, 0.687333345413208, 0.718666672706604, 0.7223333120346069, 0.7153333425521851, 0.7286666631698608, 0.7829999923706055, 0.7543333172798157, 0.7870000004768372, 0.7866666913032532, 0.768666684627533, 0.7979999780654907, 0.8019999861717224, 0.8343333601951599, 0.7766666412353516, 0.8216666579246521, 0.8363333344459534, 0.8226666450500488, 0.8386666774749756, 0.8293333053588867, 0.8433333039283752, 0.8453333377838135, 0.8483333587646484, 0.8143333196640015, 0.847000002861023, 0.8273333311080933, 0.8103333115577698, 0.8209999799728394]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [9, 2, 2, 8, 9, 0, 1, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [4, 56, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [27, 57, 40, 62]], "fitness": -0.774571418762207, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2932424545288086, 2.2703940868377686, 2.2480080127716064, 2.220120668411255, 2.1830084323883057, 2.1363565921783447, 2.078664541244507, 2.003997802734375, 1.9114683866500854, 1.8124226331710815, 1.7008147239685059, 1.5909483432769775, 1.4907182455062866, 1.4058103561401367, 1.3308547735214233, 1.2810603380203247, 1.2249233722686768, 1.1767325401306152, 1.1342312097549438, 1.0933215618133545, 1.0813826322555542, 1.0465878248214722, 1.031091332435608, 0.9983387589454651, 0.9793093204498291, 0.9617551565170288, 0.9563971757888794, 0.9351558685302734, 0.9254317879676819, 0.919518232345581, 0.8986973166465759, 0.8830262422561646, 0.876590371131897, 0.8719320893287659, 0.8644883632659912, 0.8642934560775757, 0.8443471193313599, 0.8350062370300293, 0.8259307742118835, 0.8143006563186646, 0.8191530704498291, 0.8073332905769348, 0.8018161058425903, 0.7905436754226685, 0.7838502526283264, 0.7844663858413696, 0.7940136194229126, 0.7800717949867249, 0.7759740948677063, 0.761744499206543, 0.7720489501953125, 0.7675822377204895, 0.75160151720047, 0.7600681185722351, 0.745259702205658, 0.7471794486045837, 0.7512179613113403, 0.7355789542198181, 0.736470639705658, 0.7340983152389526, 0.7374752163887024, 0.7253065705299377, 0.7139827013015747, 0.7171748876571655, 0.7235576510429382, 0.7217196226119995, 0.7085762619972229, 0.7132773399353027, 0.7026129364967346, 0.7093949317932129, 0.6951601505279541, 0.6928989291191101, 0.699167788028717, 0.6948362588882446, 0.6897241473197937, 0.698832631111145, 0.6968916654586792, 0.6824586987495422, 0.6864196062088013, 0.6718019247055054, 0.6712887287139893, 0.6753575801849365, 0.6805958151817322, 0.6686108112335205, 0.6746354103088379, 0.6666715145111084, 0.6700407862663269, 0.6713123321533203, 0.6542234420776367, 0.6518895030021667, 0.6659027338027954, 0.663066565990448, 0.6586146950721741, 0.6577537059783936, 0.6597199440002441], "accuracy": [0.11359133571386337, 0.17421740293502808, 0.2262580841779709, 0.2769779562950134, 0.3199048936367035, 0.3609826862812042, 0.3910976052284241, 0.41843879222869873, 0.43666622042655945, 0.4501386880874634, 0.47747984528541565, 0.49649980664253235, 0.5194822549819946, 0.5396909117698669, 0.5556729435920715, 0.5713908076286316, 0.5810328722000122, 0.5926561951637268, 0.6073173880577087, 0.6197332143783569, 0.6235635876655579, 0.6308281421661377, 0.6387531161308289, 0.650640606880188, 0.652621865272522, 0.6588297486305237, 0.665830135345459, 0.6671509742736816, 0.6737551093101501, 0.6728305220603943, 0.6831330060958862, 0.684982180595398, 0.6884163022041321, 0.6907938122749329, 0.6914542317390442, 0.6900013089179993, 0.6996433734893799, 0.7010962963104248, 0.7065116763114929, 0.7055870890617371, 0.7043983340263367, 0.7086250185966492, 0.7116629481315613, 0.71100252866745, 0.7181349992752075, 0.7131158113479614, 0.7150970697402954, 0.7197200059890747, 0.7257958054542542, 0.726192057132721, 0.7181349992752075, 0.7250033020973206, 0.7327961921691895, 0.7252674698829651, 0.7255316376686096, 0.7248712182044983, 0.7213049530982971, 0.7272487282752991, 0.735041618347168, 0.7341170310974121, 0.7312111854553223, 0.7349095344543457, 0.7371549606323242, 0.7383436560630798, 0.7353057861328125, 0.7371549606323242, 0.7397965788841248, 0.7408532500267029, 0.7429665923118591, 0.7442874312400818, 0.743891179561615, 0.744419515132904, 0.7382115721702576, 0.746268630027771, 0.7456082701683044, 0.7433628439903259, 0.7450799345970154, 0.7457403540611267, 0.7489103078842163, 0.7535332441329956, 0.7569673657417297, 0.7534011602401733, 0.7456082701683044, 0.7531369924545288, 0.7541936039924622, 0.7537974119186401, 0.7564390301704407, 0.7553823590278625, 0.7515519857406616, 0.7586844563484192, 0.7499669790267944, 0.7563069462776184, 0.7598732113838196, 0.7578919529914856, 0.757099449634552], "val_loss": [2.2763583660125732, 2.2515416145324707, 2.223146438598633, 2.1884498596191406, 2.1429953575134277, 2.0838072299957275, 2.0085949897766113, 1.91437566280365, 1.8023462295532227, 1.6778203248977661, 1.5478514432907104, 1.4235100746154785, 1.3129311800003052, 1.2206265926361084, 1.143935203552246, 1.0806180238723755, 1.0268840789794922, 0.9826186299324036, 0.9462047815322876, 0.9142627120018005, 0.8893381953239441, 0.8649975061416626, 0.8465955257415771, 0.8285086154937744, 0.8131777048110962, 0.7999529838562012, 0.7889634370803833, 0.7762691974639893, 0.7652572989463806, 0.7561253309249878, 0.7486788630485535, 0.7394050359725952, 0.7331656217575073, 0.7236096858978271, 0.7170739769935608, 0.7088342905044556, 0.7032187581062317, 0.6977035403251648, 0.6910941004753113, 0.6869471073150635, 0.6816093921661377, 0.6767187714576721, 0.6715335845947266, 0.6671521067619324, 0.661562979221344, 0.6577271223068237, 0.6542192101478577, 0.6518189907073975, 0.6483237743377686, 0.6467117667198181, 0.6427512168884277, 0.63929283618927, 0.6350027322769165, 0.6324412226676941, 0.6285006403923035, 0.6288226842880249, 0.6238462328910828, 0.6196474432945251, 0.6174381375312805, 0.6155839562416077, 0.613701581954956, 0.6103236675262451, 0.6080836653709412, 0.6042011976242065, 0.6036290526390076, 0.6010753512382507, 0.6000872850418091, 0.5972985625267029, 0.5935183167457581, 0.593212366104126, 0.5904309153556824, 0.5879519581794739, 0.5863677859306335, 0.5837913155555725, 0.5809674263000488, 0.5828192830085754, 0.5789154767990112, 0.5770325660705566, 0.5759835839271545, 0.5718211531639099, 0.5713223814964294, 0.5700384378433228, 0.5703515410423279, 0.5657081007957458, 0.5650784373283386, 0.565572202205658, 0.5630483627319336, 0.5609103441238403, 0.5592789053916931, 0.558219850063324, 0.5571097731590271, 0.5553619265556335, 0.5555068254470825, 0.552298903465271, 0.5513999462127686], "val_accuracy": [0.2226666659116745, 0.3413333296775818, 0.3880000114440918, 0.43299999833106995, 0.4646666646003723, 0.49166667461395264, 0.5193333625793457, 0.5370000004768372, 0.5569999814033508, 0.5720000267028809, 0.5886666774749756, 0.6083333492279053, 0.6276666522026062, 0.640999972820282, 0.6610000133514404, 0.6790000200271606, 0.6863333582878113, 0.6913333535194397, 0.6940000057220459, 0.6996666789054871, 0.703000009059906, 0.7056666612625122, 0.7110000252723694, 0.7129999995231628, 0.7110000252723694, 0.7173333168029785, 0.7133333086967468, 0.7206666469573975, 0.7250000238418579, 0.7316666841506958, 0.7256666421890259, 0.7276666760444641, 0.737333357334137, 0.737333357334137, 0.7416666746139526, 0.7426666617393494, 0.7493333220481873, 0.7506666779518127, 0.750333309173584, 0.7516666650772095, 0.7519999742507935, 0.7513333559036255, 0.7556666731834412, 0.7583333253860474, 0.7606666684150696, 0.7606666684150696, 0.7603333592414856, 0.7609999775886536, 0.7603333592414856, 0.7609999775886536, 0.7649999856948853, 0.7616666555404663, 0.7609999775886536, 0.762333333492279, 0.765999972820282, 0.7599999904632568, 0.7683333158493042, 0.7699999809265137, 0.7676666378974915, 0.7706666588783264, 0.768666684627533, 0.768666684627533, 0.7723333239555359, 0.7746666669845581, 0.7676666378974915, 0.7710000276565552, 0.7716666460037231, 0.7726666927337646, 0.7753333449363708, 0.7716666460037231, 0.777999997138977, 0.7776666879653931, 0.7763333320617676, 0.7760000228881836, 0.7793333530426025, 0.7753333449363708, 0.7770000100135803, 0.7773333191871643, 0.7753333449363708, 0.7853333353996277, 0.7796666622161865, 0.7826666831970215, 0.7839999794960022, 0.7879999876022339, 0.7820000052452087, 0.7860000133514404, 0.7886666655540466, 0.7889999747276306, 0.7879999876022339, 0.7893333435058594, 0.7853333353996277, 0.7889999747276306, 0.7826666831970215, 0.7879999876022339, 0.7879999876022339]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 6, 8, 0, 6, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 2, 2, 2, 0, 2, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [95, 56, 82, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 0, 3, 3, 2, 3, 3, 3], [36, 57, 40, 62]], "fitness": -0.7739999890327454, "mapping_values": [1, 10, 10, 6, 4, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(grad)), grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.246563673019409, 1.9531865119934082, 1.4317882061004639, 1.1412835121154785, 1.0203361511230469, 0.929139256477356, 0.9021786451339722, 0.8414053320884705, 0.8183771967887878, 0.7700724601745605, 0.7537869811058044, 0.7493866682052612, 0.7225097417831421, 0.7304047346115112, 0.7003864049911499, 0.7004607319831848, 0.6799889802932739, 0.6919944882392883], "accuracy": [0.2145027071237564, 0.4205521047115326, 0.5362567901611328, 0.599128246307373, 0.6408664584159851, 0.6675472259521484, 0.6783780455589294, 0.6956809163093567, 0.7022850513458252, 0.7131158113479614, 0.7265883088111877, 0.7244749665260315, 0.7363624572753906, 0.7308149337768555, 0.7367587089538574, 0.7397965788841248, 0.7495707273483276, 0.7376832365989685], "val_loss": [2.1179680824279785, 1.5427814722061157, 1.0750224590301514, 0.9171075224876404, 0.7961171865463257, 0.8015581965446472, 0.7035279273986816, 0.6984070539474487, 0.6707699298858643, 0.645861804485321, 0.6210007071495056, 0.6248321533203125, 0.5923761129379272, 0.5943503379821777, 0.6188793778419495, 0.5775874853134155, 0.5779427886009216, 0.5745620727539062], "val_accuracy": [0.4690000116825104, 0.5730000138282776, 0.652999997138977, 0.6710000038146973, 0.7123333215713501, 0.7016666531562805, 0.7419999837875366, 0.7329999804496765, 0.7400000095367432, 0.753000020980835, 0.7596666812896729, 0.7630000114440918, 0.7796666622161865, 0.7756666541099548, 0.7526666522026062, 0.777999997138977, 0.7726666927337646, 0.7753333449363708]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 6, 8, 0, 2, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 2, 2, 2, 0, 2, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [95, 56, 82, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 0, 3, 3, 2, 3, 3, 3], [13, 57, 40, 62]], "fitness": -0.39257141947746277, "mapping_values": [1, 5, 5, 2, 3, 1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 8, 4, 4, 3], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(alpha, grad), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.add(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.627678871154785, 2.3037781715393066, 2.302670955657959, 2.302197217941284, 2.297536611557007, 2.1409215927124023, 2.428035020828247, 2.267784595489502, 2.305427074432373, 2.3045785427093506, 2.3033745288848877], "accuracy": [0.2001056671142578, 0.10011887550354004, 0.09826971590518951, 0.11372341960668564, 0.1398758441209793, 0.2530709207057953, 0.14357416331768036, 0.18557654321193695, 0.10328886657953262, 0.09232597798109055, 0.09932637959718704], "val_loss": [2.3045380115509033, 2.3023977279663086, 2.3021013736724854, 2.300875663757324, 2.241542100906372, 2.873858690261841, 2.2858550548553467, 2.3077170848846436, 2.303162097930908, 2.3026881217956543, 2.302778720855713], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.36399999260902405, 0.40299999713897705, 0.18966667354106903, 0.09700000286102295, 0.09700000286102295, 0.10233332961797714, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 6, 2, 7, 6, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 0, 2, 2, 2, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 40, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 1, 0, 2, 3, 3, 2], [27, 57, 40, 62]], "fitness": -0.2825714349746704, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.5332136154174805, 2.3033270835876465, 2.29740571975708, 2.328028678894043, 2.35611891746521, 2.3072195053100586, 2.30373477935791, 2.3033337593078613], "accuracy": [0.1978602558374405, 0.1022322028875351, 0.1254788041114807, 0.19363360106945038, 0.2001056671142578, 0.10170386731624603, 0.10051512718200684, 0.09377889335155487], "val_loss": [2.3041999340057373, 2.301454544067383, 2.2638039588928223, 2.2998058795928955, 2.3133413791656494, 2.303851842880249, 2.302744150161743, 2.3027150630950928], "val_accuracy": [0.10233332961797714, 0.1003333330154419, 0.2763333320617676, 0.13199999928474426, 0.09700000286102295, 0.10199999809265137, 0.10199999809265137, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 6, 2, 7, 6, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [39, 56, 49, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.23514285683631897, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.5286993980407715, 2.303370952606201, 2.2992968559265137, 2.238332509994507, 2.5347368717193604, 2.320500612258911, 2.303283452987671, 2.3025906085968018], "accuracy": [0.19812442362308502, 0.10130762308835983, 0.1212521493434906, 0.19442610442638397, 0.20538897812366486, 0.0936468094587326, 0.09998679161071777, 0.09840179979801178], "val_loss": [2.304184675216675, 2.3017842769622803, 2.2836761474609375, 2.24888014793396, 2.3851566314697266, 2.303539276123047, 2.3024206161499023, 2.3015732765197754], "val_accuracy": [0.10233332961797714, 0.10199999809265137, 0.2849999964237213, 0.1599999964237213, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.09866666793823242]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [4, 6, 1, 0, 1, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 2, 0, 2, 0, 2, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [95, 56, 82, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 5, 2, 4, 2, 1, 2, 3], [3, 0, 0, 0, 3, 3, 2, 3, 3, 3], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 6, 6, 3, 3, 0, 5, 4, 2, 2, 1, 3, 2, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10527011007070541, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 6, 2, 7, 6, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [39, 56, 49, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [3, 0, 6], [24, 44], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 8, 4, 4, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.20935148000717163, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 2, 1, 5, 1, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 2, 2, 1, 0, 2, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [95, 56, 82, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [1, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [0, 0, 0, 2, 3, 3, 2, 3, 3, 3], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 5, 5, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.subtract(tf.math.square(tf.math.subtract(tf.math.add(alpha, grad), alpha)), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [63784216.0, 1259458176.0, 5783436288.0, 16418811904.0, 34871894016.0, 63003541504.0], "accuracy": [0.1002509593963623, 0.10117553919553757, 0.10777968913316727, 0.10038304328918457, 0.10302469879388809, 0.10249637067317963], "val_loss": [297679200.0, 2379542016.0, 8028807168.0, 19028754432.0, 37162500096.0, 64213458944.0], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 6, 0, 7, 0, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 24, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 2, 4, 2, 1, 2, 3], [2, 0, 0, 0, 3, 3, 2], [27, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [8.327896118164062, 2.6067757606506348, 3.4272186756134033, 3.8450467586517334, 3213648.25, 2.319824695587158, 2.3078367710113525, 2.304104804992676, 2.303229331970215], "accuracy": [0.09536388516426086, 0.10421344637870789, 0.09589222073554993, 0.10328886657953262, 0.0956280529499054, 0.09206181764602661, 0.0948355570435524, 0.09338264167308807, 0.09377889335155487], "val_loss": [2.3078558444976807, 2.3041207790374756, 2.303281784057617, 2.303161859512329, 2.3290858268737793, 2.3112170696258545, 2.30490779876709, 2.3032171726226807, 2.3028008937835693], "val_accuracy": [0.09866666793823242, 0.09700000286102295, 0.09700000286102295, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.09733333438634872, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 2, 2, 7, 9, 0, 1, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 56, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [3, 0, 6], [24, 44], [1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 1, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), grad)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0746268630027771, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 6, 8, 0, 2, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 1, 1, 2, 0, 2, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [95, 56, 82, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [2, 9, 2, 4, 2, 1, 2, 3], [0, 0, 0, 2, 3, 3, 2, 3, 3, 3], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 6, 6, 3, 3, 0, 5, 4, 2, 2, 1, 3, 2, 1, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302213191986084, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 2, 2, 7, 9, 0, 1, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 56, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [3, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [8, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 6, 2, 7, 6, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [39, 56, 49, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 2, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [1, 0, 6], [24, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2, 3, 3, 3], [47, 57, 40, 62]], "fitness": -0.06914285570383072, "mapping_values": [1, 11, 11, 6, 5, 2, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, alpha), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.301741361618042, 2.3007051944732666, 2.300931215286255, 2.3011560440063477, 2.3000495433807373, 2.3005287647247314, 2.300434112548828, 2.300629138946533, 2.300625801086426, 2.3000576496124268, 2.300412654876709, 2.299816370010376, 2.2996625900268555, 2.300783157348633, 2.3008930683135986], "accuracy": [0.09126931428909302, 0.09391097724437714, 0.09259014576673508, 0.09760929644107819, 0.0952318087220192, 0.09576013684272766, 0.09760929644107819, 0.10038304328918457, 0.09866596013307571, 0.10051512718200684, 0.09642054885625839, 0.09800554811954498, 0.09430722147226334, 0.09655263274908066, 0.09509972482919693], "val_loss": [2.299152374267578, 2.298740863800049, 2.2984416484832764, 2.298480272293091, 2.298469305038452, 2.298400640487671, 2.298266649246216, 2.298065662384033, 2.297943592071533, 2.2978708744049072, 2.2979183197021484, 2.2980456352233887, 2.2981417179107666, 2.298448085784912, 2.298762321472168], "val_accuracy": [0.050333332270383835, 0.054666668176651, 0.05999999865889549, 0.06233333423733711, 0.06333333253860474, 0.07133333384990692, 0.07266666740179062, 0.07766667008399963, 0.08399999886751175, 0.08699999749660492, 0.08366666734218597, 0.08266666531562805, 0.08100000023841858, 0.07633333653211594, 0.07400000095367432]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 2, 2, 7, 9, 0, 1, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 2, 2, 2, 0, 2, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 56, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [3, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.06542856991291046, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302039623260498, 2.3013293743133545, 2.3019332885742188, 2.3020646572113037, 2.30100154876709, 2.3012776374816895, 2.3013417720794678, 2.3019216060638428, 2.3020265102386475, 2.3019204139709473, 2.302572011947632, 2.301856756210327, 2.301731586456299, 2.302788734436035, 2.3026483058929443, 2.3032426834106445, 2.3015010356903076, 2.301614284515381, 2.3015682697296143, 2.3003506660461426, 2.3014976978302, 2.301287889480591, 2.3008508682250977, 2.30079984664917, 2.3007798194885254, 2.300457000732422, 2.301182746887207, 2.301011085510254, 2.3006489276885986], "accuracy": [0.09074098616838455, 0.09285431355237961, 0.08955223858356476, 0.09496764093637466, 0.09219389408826828, 0.09549596905708313, 0.09166556596755981, 0.09338264167308807, 0.0940430611371994, 0.09391097724437714, 0.08730682730674744, 0.09325055778026581, 0.0878351628780365, 0.09008057415485382, 0.08981640636920929, 0.08955223858356476, 0.0952318087220192, 0.09259014576673508, 0.1006472036242485, 0.09668471664190292, 0.09681680053472519, 0.09602430462837219, 0.09721305221319199, 0.09338264167308807, 0.0948355570435524, 0.10157178342342377, 0.0956280529499054, 0.09826971590518951, 0.09708096832036972], "val_loss": [2.2997097969055176, 2.2995617389678955, 2.2994065284729004, 2.299304962158203, 2.299198865890503, 2.299126625061035, 2.299128532409668, 2.2991511821746826, 2.299192428588867, 2.299203395843506, 2.2992095947265625, 2.299191951751709, 2.2991766929626465, 2.2991816997528076, 2.2991716861724854, 2.2991015911102295, 2.2990472316741943, 2.2989375591278076, 2.298877000808716, 2.298830509185791, 2.2987477779388428, 2.298673152923584, 2.2986090183258057, 2.2985634803771973, 2.2985455989837646, 2.2985634803771973, 2.2985947132110596, 2.2986698150634766, 2.2987523078918457], "val_accuracy": [0.047333333641290665, 0.04766666516661644, 0.04833333194255829, 0.04933333396911621, 0.050999999046325684, 0.052666667848825455, 0.052666667848825455, 0.05299999937415123, 0.05366666615009308, 0.05433333292603493, 0.05533333495259285, 0.05700000002980232, 0.05666666850447655, 0.05766666680574417, 0.05833333358168602, 0.061000000685453415, 0.06300000101327896, 0.06566666811704636, 0.06533333659172058, 0.06666667014360428, 0.0663333311676979, 0.06933332979679108, 0.07199999690055847, 0.07500000298023224, 0.07400000095367432, 0.07366666942834854, 0.07333333045244217, 0.07199999690055847, 0.0716666653752327]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 2, 2, 7, 9, 0, 1, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 56, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 1, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [3, 0, 6], [24, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 0, 3, 3, 2, 3, 3, 3], [8, 57, 40, 62]], "fitness": -0.04085714370012283, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.negative(beta))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3021771907806396, 2.3016135692596436, 2.302534818649292, 2.3027052879333496, 2.301910400390625, 2.3021914958953857], "accuracy": [0.09060890227556229, 0.09100515395402908, 0.09034473448991776, 0.09391097724437714, 0.08928807079792023, 0.09377889335155487], "val_loss": [2.299954414367676, 2.299954414367676, 2.299954414367676, 2.299954414367676, 2.299954414367676, 2.299954414367676], "val_accuracy": [0.04466666653752327, 0.04466666653752327, 0.04466666653752327, 0.04466666653752327, 0.04466666653752327, 0.04466666653752327]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 6, 6, 0, 1, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 2, 2, 2, 0, 2, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [95, 56, 82, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 1, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2, 3, 3, 3], [47, 57, 40, 62]], "fitness": -0.04085714370012283, "mapping_values": [1, 10, 10, 5, 5, 1, 6, 6, 3, 3, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.negative(tf.math.subtract(tf.math.add(alpha, grad), grad)), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, grad)), alpha)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3021771907806396, 2.3016135692596436, 2.302534818649292, 2.3027052879333496, 2.301910400390625, 2.3021914958953857], "accuracy": [0.09060890227556229, 0.09100515395402908, 0.09034473448991776, 0.09391097724437714, 0.08928807079792023, 0.09377889335155487], "val_loss": [2.299954414367676, 2.299954414367676, 2.299954414367676, 2.299954414367676, 2.299954414367676, 2.299954414367676], "val_accuracy": [0.04466666653752327, 0.04466666653752327, 0.04466666653752327, 0.04466666653752327, 0.04466666653752327, 0.04466666653752327]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 2, 2, 7, 9, 0, 1, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [5, 41, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [3, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [51, 57, 40, 62]], "fitness": -0.04085714370012283, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3021771907806396, 2.3016135692596436, 2.302534818649292, 2.3027052879333496, 2.301910400390625, 2.3021914958953857], "accuracy": [0.09060890227556229, 0.09100515395402908, 0.09034473448991776, 0.09391097724437714, 0.08928807079792023, 0.09377889335155487], "val_loss": [2.299954414367676, 2.299954414367676, 2.299954414367676, 2.299954414367676, 2.299954414367676, 2.299954414367676], "val_accuracy": [0.04466666653752327, 0.04466666653752327, 0.04466666653752327, 0.04466666653752327, 0.04466666653752327, 0.04466666653752327]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 6, 3, 0, 4, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 2, 2, 2, 0, 2, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [95, 56, 82, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [2, 0, 6], [24, 44], [1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 0, 3, 3, 2, 3, 3, 3], [36, 57, 40, 62]], "fitness": -0.035999998450279236, "mapping_values": [1, 11, 11, 6, 5, 1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.add(alpha, tf.math.negative(grad)), grad))), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.302706718444824, 2.303330898284912, 2.3063106536865234, 2.308516502380371, 2.310194492340088, 2.3139123916625977], "accuracy": [0.09034473448991776, 0.08809932321310043, 0.08387266844511032, 0.08308017253875732, 0.07607977837324142, 0.08096684515476227], "val_loss": [2.301213502883911, 2.302685260772705, 2.3045761585235596, 2.306800365447998, 2.309333324432373, 2.312464475631714], "val_accuracy": [0.03733333200216293, 0.029666665941476822, 0.027666667476296425, 0.0273333340883255, 0.028999999165534973, 0.033666666597127914]}}]