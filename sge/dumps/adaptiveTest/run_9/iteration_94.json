[{"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1], [1, 1, 5, 7, 8], [2, 2, 1, 1], [48], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [5, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7657142877578735, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, grad))), tf.math.square(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2926117733343325, 2.2639977211461577, 2.2352273587647713, 2.1944220062921453, 2.1435807541676044, 2.0711350482862074, 1.9749557783323084, 1.8520584832628437, 1.7243483865486238, 1.5904238104835997, 1.4827819038076706, 1.391684565215362, 1.300330344664816, 1.243533733624509, 1.186487403795814, 1.1378734307187723, 1.0940294058063735, 1.0495850370544657, 1.0387650315535775, 1.006244693575849, 0.9826178583470885, 0.956628755910002, 0.9522303531844114, 0.9308748105655272, 0.9107859088224805, 0.8980825414605318, 0.8895945690563405, 0.8751955383079966, 0.8610314703053802, 0.8468417276118677, 0.832520996086696, 0.8351160479952331, 0.8305454749189364, 0.8113158066684323, 0.8136376259097365, 0.8044662655557168, 0.7981876370267876, 0.7921141325411875, 0.7862359774725202, 0.7806371821860879, 0.7798913166255621, 0.7626916523921948, 0.7591536761731551, 0.7526330516055244, 0.7615485009956889], "accuracy": [0.11861048638820648, 0.19653943181037903, 0.25518426299095154, 0.3015453815460205, 0.34962356090545654, 0.3800026476383209, 0.42068418860435486, 0.4523840844631195, 0.4695548713207245, 0.4893673360347748, 0.5243692994117737, 0.5291243195533752, 0.5597675442695618, 0.5666358470916748, 0.5872408151626587, 0.603090763092041, 0.6180161237716675, 0.6346585750579834, 0.6388852000236511, 0.64231938123703, 0.6513010263442993, 0.6627922058105469, 0.6627922058105469, 0.6672830581665039, 0.6719059348106384, 0.6752080321311951, 0.6816800832748413, 0.6897371411323547, 0.6931713223457336, 0.6946242451667786, 0.6989829540252686, 0.7024171352386475, 0.6992471218109131, 0.7043983340263367, 0.7088891863822937, 0.7036058902740479, 0.707040011882782, 0.7127195596694946, 0.7083608508110046, 0.7086250185966492, 0.711530864238739, 0.7218332886695862, 0.7202483415603638, 0.726192057132721, 0.7224937081336975], "val_loss": [1.9465552057538713, 1.9203243255615234, 1.8880478995186942, 1.8445313998631068, 1.7849034581865584, 1.7049226420266288, 1.599935599735805, 1.4729812485831124, 1.3400410924639021, 1.2138503279004778, 1.1054123469761439, 1.019799334662301, 0.9505334922245571, 0.8966279711042132, 0.8522778238568988, 0.814288888658796, 0.7846283912658691, 0.7596486977168492, 0.7404153517314366, 0.7222883531025478, 0.7059402295521328, 0.6932718583515712, 0.6830141884940011, 0.6732898950576782, 0.6618801014763969, 0.6525252035685948, 0.6425752299172538, 0.6372814348765782, 0.6283939906529018, 0.6208069154194423, 0.6151012522833688, 0.611000657081604, 0.6034267289297921, 0.5995705468314034, 0.5957460744040353, 0.5916080134255546, 0.5884325504302979, 0.5826303618294852, 0.5782416377748761, 0.5760057142802647, 0.5714076246534076, 0.5666178124291557, 0.5669901030404227, 0.5618558100291661, 0.5625717810222081], "val_accuracy": [0.23499999940395355, 0.3583333194255829, 0.41466665267944336, 0.45266667008399963, 0.49433332681655884, 0.5366666913032532, 0.5583333373069763, 0.5663333535194397, 0.5833333134651184, 0.6079999804496765, 0.6240000128746033, 0.6463333368301392, 0.6646666526794434, 0.6723333597183228, 0.6806666851043701, 0.6866666674613953, 0.6956666707992554, 0.6990000009536743, 0.7020000219345093, 0.7083333134651184, 0.7143333554267883, 0.7163333296775818, 0.7143333554267883, 0.7239999771118164, 0.7166666388511658, 0.7196666598320007, 0.7236666679382324, 0.737666666507721, 0.7360000014305115, 0.7306666374206543, 0.7386666536331177, 0.7406666874885559, 0.7390000224113464, 0.7423333525657654, 0.7390000224113464, 0.7416666746139526, 0.75, 0.7483333349227905, 0.7543333172798157, 0.7580000162124634, 0.7516666650772095, 0.7556666731834412, 0.7543333172798157, 0.7573333382606506, 0.7546666860580444]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [0, 3, 3, 1], [55], [0, 1, 1, 0, 0, 0, 1, 1], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7651428580284119, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2926117733343325, 2.2639977211461577, 2.2352273362171946, 2.194423441180873, 2.1435821622259756, 2.0711405811025134, 1.9749594422347825, 1.8520582449859742, 1.724341712450197, 1.5904196784512368, 1.4827973510233041, 1.391699726807364, 1.3003435603001838, 1.2435187258976734, 1.1864791495247982, 1.1378619482709023, 1.094020021086151, 1.049575384802208, 1.0387581567155875, 1.0062406645191502, 0.9826337633320621, 0.9566338284455586, 0.9522130781271202, 0.9308530381090842, 0.9107843345544594, 0.8980448069337525, 0.8895844313541282, 0.8751815972531618, 0.8610335546178494, 0.8468502478088764, 0.8325210123833034, 0.8351346707740842, 0.8305784560008812, 0.811318161260529, 0.81368560770389, 0.804505886473849, 0.798225035237252, 0.7920666040682663, 0.7863027734086341, 0.7805766916278174, 0.7798921259135114, 0.7626849128947738, 0.7591448687386, 0.7526297872218599, 0.7615635894182855], "accuracy": [0.11861048638820648, 0.19653943181037903, 0.25518426299095154, 0.3015453815460205, 0.34962356090545654, 0.38026681542396545, 0.4205521047115326, 0.45225200057029724, 0.46968695521354675, 0.48910316824913025, 0.524501383304596, 0.529388427734375, 0.5596354603767395, 0.5665037631988525, 0.5871087312698364, 0.6033549308776855, 0.617751955986023, 0.6346585750579834, 0.6388852000236511, 0.6425835490226746, 0.6514331102371216, 0.6627922058105469, 0.6627922058105469, 0.6679434776306152, 0.6724342703819275, 0.6749438643455505, 0.6818121671676636, 0.6896050572395325, 0.6927750706672668, 0.6944921612739563, 0.6992471218109131, 0.7021529674530029, 0.6992471218109131, 0.7042662501335144, 0.7091533541679382, 0.7029454708099365, 0.7073041796684265, 0.7124554514884949, 0.7086250185966492, 0.7087571024894714, 0.7113987803459167, 0.7218332886695862, 0.7199841737747192, 0.7263241410255432, 0.7231541275978088], "val_loss": [1.9465552057538713, 1.9203242574419295, 1.8880488531930106, 1.8445324897766113, 1.7849064554486955, 1.7049265589032854, 1.59993805204119, 1.4729787622179304, 1.3400416374206543, 1.2138553346906389, 1.105438198362078, 1.0198081220899309, 0.9505528381892613, 0.8966521195002964, 0.8522907325199672, 0.8142910173961094, 0.7846167428152901, 0.7596359082630703, 0.7404110942568097, 0.7223269598824638, 0.7059593030384609, 0.6932367086410522, 0.683018514088222, 0.6732627664293561, 0.6618557146617344, 0.6525125844138009, 0.6425668852669852, 0.6373109817504883, 0.6283784934452602, 0.620806166103908, 0.6151268993105207, 0.6110069751739502, 0.6034917490822929, 0.5995677028383527, 0.5956655740737915, 0.5915332351412091, 0.5884591000420707, 0.582662684576852, 0.5783138445445469, 0.5759587798799787, 0.5713721513748169, 0.5666589736938477, 0.5668565716062274, 0.5618455750601632, 0.5623845032283238], "val_accuracy": [0.23499999940395355, 0.3583333194255829, 0.41466665267944336, 0.45266667008399963, 0.49399998784065247, 0.5366666913032532, 0.5583333373069763, 0.5663333535194397, 0.5833333134651184, 0.6079999804496765, 0.6240000128746033, 0.6463333368301392, 0.6650000214576721, 0.6726666688919067, 0.6803333163261414, 0.6863333582878113, 0.6956666707992554, 0.6990000009536743, 0.7020000219345093, 0.7083333134651184, 0.7143333554267883, 0.7163333296775818, 0.7143333554267883, 0.7233333587646484, 0.7166666388511658, 0.7196666598320007, 0.7239999771118164, 0.7369999885559082, 0.7363333106040955, 0.7310000061988831, 0.7390000224113464, 0.7403333187103271, 0.7390000224113464, 0.7423333525657654, 0.7390000224113464, 0.7419999837875366, 0.7509999871253967, 0.7486666440963745, 0.7540000081062317, 0.7580000162124634, 0.7516666650772095, 0.7546666860580444, 0.7543333172798157, 0.7573333382606506, 0.7553333044052124]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [0, 3, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7651428580284119, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.square(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2926117733343325, 2.2639976401827226, 2.2352270169296538, 2.1944177510038956, 2.1435701423522078, 2.071120010217766, 1.9749364190491483, 1.852040707380103, 1.724329787852537, 1.5904042232526276, 1.4827575597623242, 1.3916748622153114, 1.300325111217975, 1.2435118858257792, 1.1864707213918122, 1.1378419700473166, 1.0940110436708952, 1.0495647506439265, 1.0387302377614143, 1.0062031565309595, 0.9825975934842858, 0.9566255002257342, 0.9522074591671046, 0.9309026161126331, 0.9107559482812912, 0.8980650584049953, 0.8896148759832849, 0.8752124858270972, 0.8610400730482481, 0.8468562337968327, 0.8325239883642533, 0.8351408582888794, 0.8305925595179336, 0.8114503954915229, 0.8136504757846776, 0.8045237694575786, 0.7981989072093779, 0.7921180460336832, 0.7863078511087194, 0.780647602803703, 0.7798729866030604, 0.7626935455305008, 0.7591797244185077, 0.7526677441382846, 0.761626234301455], "accuracy": [0.11861048638820648, 0.19653943181037903, 0.25518426299095154, 0.3016774654388428, 0.349359393119812, 0.3801347315311432, 0.4204200208187103, 0.4523840844631195, 0.469819039106369, 0.48910316824913025, 0.5242372155189514, 0.5291243195533752, 0.5597675442695618, 0.5665037631988525, 0.5872408151626587, 0.6033549308776855, 0.6178840398788452, 0.6347906589508057, 0.6386210322380066, 0.64231938123703, 0.651168942451477, 0.6627922058105469, 0.6627922058105469, 0.6676793098449707, 0.6724342703819275, 0.6748117804527283, 0.6818121671676636, 0.689869225025177, 0.6922467350959778, 0.694360077381134, 0.6992471218109131, 0.702681303024292, 0.6989829540252686, 0.7043983340263367, 0.7092854380607605, 0.7036058902740479, 0.7065116763114929, 0.7127195596694946, 0.7084929347038269, 0.7086250185966492, 0.7119271159172058, 0.722229540348053, 0.7201162576675415, 0.7260599732398987, 0.722229540348053], "val_loss": [1.9465552057538713, 1.9203242574419295, 1.8880468777247839, 1.8445230211530412, 1.784888403756278, 1.7049036366598946, 1.5999104976654053, 1.4729652745383126, 1.3400227001735143, 1.2138166427612305, 1.1053948402404785, 1.0197907515934534, 0.9505345821380615, 0.8966294697352818, 0.852278505052839, 0.8142790624073574, 0.7845848458153861, 0.7596280234200614, 0.740372930254255, 0.7222691263471331, 0.7059554883411953, 0.6932420900889805, 0.6830437013081142, 0.6732757772718158, 0.6618888037545341, 0.6525540351867676, 0.642547573362078, 0.6372387749808175, 0.628410952431815, 0.6207958800452096, 0.6150821958269391, 0.6110458374023438, 0.6034637178693499, 0.5995568207332066, 0.5956325701304844, 0.5915349721908569, 0.5884617056165423, 0.5826764277049473, 0.5782703161239624, 0.5760306460516793, 0.5713655608040946, 0.5666687318256923, 0.5668988398143223, 0.5618472099304199, 0.5625377893447876], "val_accuracy": [0.23499999940395355, 0.3583333194255829, 0.41466665267944336, 0.453000009059906, 0.49433332681655884, 0.5366666913032532, 0.5583333373069763, 0.5663333535194397, 0.5833333134651184, 0.6079999804496765, 0.6240000128746033, 0.6463333368301392, 0.6650000214576721, 0.6726666688919067, 0.6806666851043701, 0.6863333582878113, 0.6956666707992554, 0.6990000009536743, 0.7020000219345093, 0.7083333134651184, 0.7139999866485596, 0.7163333296775818, 0.7143333554267883, 0.7233333587646484, 0.7166666388511658, 0.7200000286102295, 0.7243333458900452, 0.7366666793823242, 0.7360000014305115, 0.7306666374206543, 0.7386666536331177, 0.7409999966621399, 0.7393333315849304, 0.7426666617393494, 0.7393333315849304, 0.7419999837875366, 0.7506666779518127, 0.7483333349227905, 0.7540000081062317, 0.7580000162124634, 0.7513333559036255, 0.7559999823570251, 0.7543333172798157, 0.7576666474342346, 0.7546666860580444]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [0, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7648571133613586, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.square(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2926117733343325, 2.2639977526371866, 2.2352272778013362, 2.1944216193618744, 2.1435817392384764, 2.0711386065835162, 1.9749647236424603, 1.8520742302573259, 1.72435821751247, 1.5904342595218683, 1.4828020950365752, 1.3917023115595177, 1.300349008815006, 1.2435238906310897, 1.186494458557797, 1.1378681301645488, 1.0940394923514096, 1.0496049238753404, 1.0387678793030581, 1.0062562897693148, 0.9826453768613395, 0.9566608966066066, 0.9522331739460803, 0.9308678383100396, 0.9107499193395716, 0.8980942529347815, 0.88961631928799, 0.8752570452313492, 0.8610094423858387, 0.8468905092230437, 0.8325316102088104, 0.8350743322230098, 0.830604447263217, 0.8113600634045337, 0.8136665184169382, 0.8044797778838125, 0.7982446784750188, 0.7921117010716167, 0.7863428665819799, 0.7806161804174656, 0.7799058121429411, 0.7627181510852233, 0.7592161342279234, 0.75268467068436, 0.7615971277339851], "accuracy": [0.11861048638820648, 0.19653943181037903, 0.25518426299095154, 0.3015453815460205, 0.34962356090545654, 0.3801347315311432, 0.4208162724971771, 0.4525161683559418, 0.469819039106369, 0.4893673360347748, 0.5242372155189514, 0.5291243195533752, 0.5597675442695618, 0.5665037631988525, 0.5871087312698364, 0.6033549308776855, 0.6180161237716675, 0.6347906589508057, 0.6384889483451843, 0.6424514651298523, 0.6515651941299438, 0.6626601219177246, 0.6626601219177246, 0.6676793098449707, 0.6723021864891052, 0.6750759482383728, 0.6820763349533081, 0.6892088055610657, 0.6925109028816223, 0.6948884129524231, 0.6989829540252686, 0.7024171352386475, 0.6991150379180908, 0.7049266695976257, 0.7092854380607605, 0.703209638595581, 0.7063795924186707, 0.7127195596694946, 0.7087571024894714, 0.709021270275116, 0.711530864238739, 0.7210407853126526, 0.7201162576675415, 0.7259278893470764, 0.7223616242408752], "val_loss": [1.9465552057538713, 1.9203243255615234, 1.888047422681536, 1.844531808580671, 1.7849065916878837, 1.7049261501857214, 1.5999483721596854, 1.472991636821202, 1.3400542395455497, 1.2138725348881312, 1.1054314885820662, 1.0198139463152205, 0.9505471161433628, 0.8966514723641532, 0.8523140975407192, 0.8143093075071063, 0.7846295492989677, 0.7596805265971592, 0.7404036181313651, 0.7222973619188581, 0.705946683883667, 0.6932557991572789, 0.6830617530005318, 0.6732858419418335, 0.6618806975228446, 0.6525395257132394, 0.6425948313304356, 0.6372671978814262, 0.6283836535045079, 0.6207956927163261, 0.6151406254087176, 0.6109465871538434, 0.6035124063491821, 0.5995899438858032, 0.5957037551062447, 0.591648783002581, 0.5884755338941302, 0.5826910052980695, 0.5783000332968575, 0.5759859766278949, 0.5714288098471505, 0.5666581562587193, 0.566971983228411, 0.5618914706366402, 0.5624111720493862], "val_accuracy": [0.23499999940395355, 0.3583333194255829, 0.41466665267944336, 0.45266667008399963, 0.49399998784065247, 0.5366666913032532, 0.5583333373069763, 0.5663333535194397, 0.5833333134651184, 0.6079999804496765, 0.6240000128746033, 0.6463333368301392, 0.6650000214576721, 0.6726666688919067, 0.6803333163261414, 0.6863333582878113, 0.6953333616256714, 0.6990000009536743, 0.7020000219345093, 0.7083333134651184, 0.7143333554267883, 0.7163333296775818, 0.7139999866485596, 0.7236666679382324, 0.7166666388511658, 0.7196666598320007, 0.7236666679382324, 0.7363333106040955, 0.7360000014305115, 0.7310000061988831, 0.7386666536331177, 0.7400000095367432, 0.7393333315849304, 0.7426666617393494, 0.7393333315849304, 0.7419999837875366, 0.750333309173584, 0.749666690826416, 0.7543333172798157, 0.7576666474342346, 0.7519999742507935, 0.7553333044052124, 0.7543333172798157, 0.7570000290870667, 0.7556666731834412]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [0, 2, 1, 1], [93], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7648571133613586, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2926117733343325, 2.2639977526371866, 2.235226841493132, 2.194420786991001, 2.1435806911855466, 2.0711361010942824, 1.9749543190380334, 1.8520600574363917, 1.724337477993263, 1.590417675873733, 1.4827672366405664, 1.3916765167697105, 1.3003134552860272, 1.2435104136516735, 1.1864885905352345, 1.1378778058618775, 1.094027655582229, 1.0495817201988744, 1.0387769732981027, 1.0062482100688173, 0.9826079299421264, 0.9566399335719497, 0.952245243685892, 0.9309021696800632, 0.9107629913915937, 0.8980452174429313, 0.8895948495941707, 0.8752568121111357, 0.8610287601795683, 0.8468275084046483, 0.8325039789881673, 0.8350951996981397, 0.8305948469160476, 0.8113494687596207, 0.8136863038839366, 0.8044640478472495, 0.7982474266813573, 0.7920943832652538, 0.7862344947882836, 0.7805884513463232, 0.779815030513643, 0.762684682963027, 0.7591816849633608, 0.7526594882533535, 0.7616180117733963], "accuracy": [0.11861048638820648, 0.19653943181037903, 0.25518426299095154, 0.3015453815460205, 0.34962356090545654, 0.3800026476383209, 0.42068418860435486, 0.45225200057029724, 0.46968695521354675, 0.4892352521419525, 0.5243692994117737, 0.5291243195533752, 0.5597675442695618, 0.5665037631988525, 0.5872408151626587, 0.6032228469848633, 0.6178840398788452, 0.6346585750579834, 0.6384889483451843, 0.6419231295585632, 0.6514331102371216, 0.6629242897033691, 0.6630563735961914, 0.6674151420593262, 0.6720380187034607, 0.6749438643455505, 0.6819442510604858, 0.6893408894538879, 0.6927750706672668, 0.6946242451667786, 0.6995112895965576, 0.7022850513458252, 0.6989829540252686, 0.7047945857048035, 0.7086250185966492, 0.7034738063812256, 0.7065116763114929, 0.7129837274551392, 0.7082287669181824, 0.7094175219535828, 0.7112666964530945, 0.7218332886695862, 0.720380425453186, 0.7256637215614319, 0.722229540348053], "val_loss": [1.9465552057538713, 1.9203241893223353, 1.8880464690072196, 1.844531536102295, 1.784905024937221, 1.7049181801932198, 1.5999336242675781, 1.4729786600385393, 1.3400297505514962, 1.2138426985059465, 1.1054046835218156, 1.0197826794215612, 0.9505237170628139, 0.896646227155413, 0.8523122412817818, 0.8143188272203717, 0.7846182414463588, 0.759642515863691, 0.7403781754629952, 0.7223116840635028, 0.7059324128287179, 0.6932810034070697, 0.6830726180757795, 0.6732821464538574, 0.6618865217481341, 0.6525271449770246, 0.6425443036215646, 0.6372751338141305, 0.628415754863194, 0.6208117519106183, 0.6151288236890521, 0.6109768663133893, 0.603477052279881, 0.5996074335915702, 0.5957388026373727, 0.5916062252862113, 0.588442291532244, 0.5827037606920514, 0.5782915694372994, 0.5760390588215419, 0.5714614050728934, 0.5665575436183384, 0.5669725622449603, 0.5618759053094047, 0.5625411101749965], "val_accuracy": [0.23499999940395355, 0.3583333194255829, 0.41466665267944336, 0.45266667008399963, 0.49433332681655884, 0.5366666913032532, 0.5583333373069763, 0.5663333535194397, 0.5833333134651184, 0.6079999804496765, 0.6240000128746033, 0.6463333368301392, 0.6646666526794434, 0.6726666688919067, 0.6803333163261414, 0.6866666674613953, 0.6956666707992554, 0.6993333101272583, 0.7016666531562805, 0.7083333134651184, 0.7143333554267883, 0.7163333296775818, 0.7139999866485596, 0.7239999771118164, 0.7166666388511658, 0.7196666598320007, 0.7239999771118164, 0.7366666793823242, 0.7363333106040955, 0.7310000061988831, 0.7386666536331177, 0.7403333187103271, 0.7390000224113464, 0.7426666617393494, 0.7396666407585144, 0.7426666617393494, 0.750333309173584, 0.7490000128746033, 0.7543333172798157, 0.7573333382606506, 0.7519999742507935, 0.7546666860580444, 0.7543333172798157, 0.7570000290870667, 0.7556666731834412]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [0, 3, 1, 1], [48], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [1, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [9, 6, 0, 4, 7, 3, 6], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302889535235313, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09615638852119446, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [0, 3, 1, 1], [33], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [1, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [2, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [9, 2, 0, 4, 7, 3, 6], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(alpha, grad), alpha)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302889535235313, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09615638852119446, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 1, 1, 1, 0, 1], [7, 1, 5, 7, 8], [0, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 0, 4, 7, 3, 6], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 7, 7, 4, 3, 1, 1, 0, 0, 0, 0, 13, 7, 6, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(alpha), tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.divide_no_nan(alpha, sigma), sigma))))", "other_info": {"loss": [4462275392.143824, 85002246916.29428, 399018282727.2149, 1103634243407.6301, 2361058744064.372, 4350732565943.7075], "accuracy": [0.09866596013307571, 0.09721305221319199, 0.10381719470024109, 0.09893012791872025, 0.09800554811954498, 0.0952318087220192], "val_loss": [17018755364.571428, 136122887606.85715, 459385358628.5714, 1088887493193.1428, 2126690610614.8572, 3674877797522.2856], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [0, 3, 1, 1], [50], [0, 0, 1, 0, 0, 0, 1, 1], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [1, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [3, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 0, 2], [2, 1, 0, 2, 0, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, alpha))", "other_info": {"loss": [5.848610750396995e+33, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 0, 1, 0, 1], [7, 1, 5, 7, 8], [0, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [4, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 4, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.square(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [3, 2, 1, 1], [48], [1, 0, 0, 0, 0, 0, 1, 1], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [7, 7], [88, 19], [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 5, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07436270266771317, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1], [7, 8, 5, 7, 8], [2, 2, 0, 1], [48], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 1, 0, 1, 3, 3], [39, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08598599582910538, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 2, 5, 7, 8], [0, 1, 1, 1], [9], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.square(tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07449477910995483, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 1, 5, 7, 8], [0, 3, 0, 1], [48, 54], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [9, 0, 8, 9, 7], [5, 7], [88, 19], [1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 9, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 2, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(alpha, grad), tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07449477910995483, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 1, 3, 7, 8], [0, 3, 1, 1], [50], [0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [5, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [3, 7], [88, 19], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [9, 3, 0, 4, 7, 1, 8, 9], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 3, 4, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, alpha), alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07449477910995483, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 1, 1, 1, 0, 1], [7, 1, 5, 7, 8], [0, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 1, 8], [2, 0, 0, 2, 1, 3], [83, 57, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(beta), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07449477910995483, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [0, 3, 1, 1], [50], [0, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [1, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 4, 7, 3, 6], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3032403089240905, 2.3030198628104768, 2.302821174509978, 2.3029692324476, 2.302888438843654, 2.303070410225984], "accuracy": [0.09602430462837219, 0.09166556596755981, 0.09470347315073013, 0.09694888442754745, 0.09628847241401672, 0.09166556596755981], "val_loss": [1.973619052342006, 1.9736482756478446, 1.9736646924700056, 1.9736975942339217, 1.9737434387207031, 1.9736924171447754], "val_accuracy": [0.09966666996479034, 0.09933333098888397, 0.09933333098888397, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [0, 3, 1, 1], [40], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [1, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 0, 4, 7, 3, 6], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 9, 5, 4, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.square(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), alpha))))", "other_info": {"loss": [894668.0614868479, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [0, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 3, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 8, 4, 4, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.square(alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [5.821899777687254e+31, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10236428678035736, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 1, 5, 7, 8], [0, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [1, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 1, 0, 2, 0, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 6, 6, 3, 3, 1, 3, 3, 2, 1, 2, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.square(alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, alpha))", "other_info": {"loss": [2.3035476228832144, 2.302087338309892, 2.303468371174512, 2.302462950106767, 2.3037093030211317, 2.3026383631359457], "accuracy": [0.09166556596755981, 0.0948355570435524, 0.09496764093637466, 0.09576013684272766, 0.08717474341392517, 0.09734513610601425], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]