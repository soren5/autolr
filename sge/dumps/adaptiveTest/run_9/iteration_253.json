[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 1, 9, 1, 8, 6, 5, 8, 9], [4, 0, 0, 5, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [0, 0, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.8234285712242126, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 2, 3, 3, 1, 2, 1, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.244972599369896, 2.058796355579791, 1.5888137214329612, 1.1214628219919403, 0.9834627496756898, 0.8383407075848199, 0.7843737680804004, 0.7111349259511182, 0.6945065818741778, 0.6439417258796596, 0.6625410361123706, 0.6570768959455171, 0.5972652366337381, 0.5879480461355655, 0.5487640727276437, 0.5678067433993106, 0.5568727148270421, 0.5493086923256747, 0.5124674487690238, 0.511340310253629, 0.5098631967642934, 0.48879450144328146, 0.488772712316275, 0.48163594470252735, 0.47424632205766, 0.4649801376772563, 0.45197109321656087], "accuracy": [0.24659886956214905, 0.31303659081459045, 0.47893276810646057, 0.5954299569129944, 0.637828528881073, 0.6865671873092651, 0.6996433734893799, 0.739400327205658, 0.7343811988830566, 0.7547219395637512, 0.7477215528488159, 0.7508915662765503, 0.7709681391716003, 0.7749306559562683, 0.7947431206703186, 0.7910447716712952, 0.7878747582435608, 0.7950072884559631, 0.8072909712791443, 0.809140145778656, 0.8099326491355896, 0.8169330358505249, 0.8198388814926147, 0.817989706993103, 0.8239334225654602, 0.8231409192085266, 0.8313300609588623], "val_loss": [1.9285666601998466, 1.1669925621577673, 1.0494497162955148, 0.968585593359811, 0.6656929424830845, 0.6585100548607963, 0.6051516703196934, 0.5933910097394671, 0.5780627727508545, 0.5548807723181588, 0.6033161367688861, 0.5019919191087995, 0.4570351839065552, 0.4666287728718349, 0.47013560363224577, 0.449405312538147, 0.5238983120237078, 0.42460341112954275, 0.4347426210130964, 0.46328364099775043, 0.41505783796310425, 0.41262889759881155, 0.4352130378995623, 0.4019252061843872, 0.4277890069144113, 0.44418794768197195, 0.4052924854414804], "val_accuracy": [0.1850000023841858, 0.5846666693687439, 0.609333336353302, 0.6129999756813049, 0.7116666436195374, 0.7026666402816772, 0.7319999933242798, 0.7323333621025085, 0.7310000061988831, 0.7459999918937683, 0.7110000252723694, 0.765666663646698, 0.7993333339691162, 0.8050000071525574, 0.7886666655540466, 0.809333324432373, 0.7513333559036255, 0.812666654586792, 0.8076666593551636, 0.7889999747276306, 0.8220000267028809, 0.8306666612625122, 0.8063333630561829, 0.8230000138282776, 0.8076666593551636, 0.8169999718666077, 0.8183333277702332]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 5, 9, 1, 8, 6, 5, 8, 9], [4, 3, 0, 1, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 4], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.8157142996788025, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 8, 5, 2, 3, 2, 1, 1, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(grad, tf.math.square(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))))), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(alpha, tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2449763490696784, 2.0578298361514618, 1.6334736966154657, 1.174016493225866, 1.0227198569592924, 0.8855433459799004, 0.8094007015747874, 0.7388630926947568, 0.6972494322027686, 0.6940087975055598, 0.6547937527733897, 0.6352812450764407, 0.6064849139724221, 0.5945592476565525, 0.569438113449524, 0.5608588272176477, 0.5504092965867966, 0.5512703247215801, 0.5166329367600727, 0.5290152315907017, 0.4973407803336312, 0.4992657296449092, 0.48544549224414785, 0.49095156831338876, 0.47111241788502617, 0.47343814421433816, 0.4436849038582972, 0.4405194178170469, 0.4711385261955798, 0.4508998885036318, 0.43708775325647165, 0.4367161907414089, 0.41366780061668895, 0.4153084759667502, 0.4167418772786001, 0.4172883189829853, 0.3978786402532154, 0.3882128320641254, 0.3867901601236825, 0.3847941395085738, 0.3728905513168184], "accuracy": [0.2467309534549713, 0.3159424066543579, 0.472989022731781, 0.59225994348526, 0.6169594526290894, 0.6737551093101501, 0.694360077381134, 0.7264562249183655, 0.7333245277404785, 0.7236824631690979, 0.7518161535263062, 0.7552502751350403, 0.7676661014556885, 0.7732135653495789, 0.7845727205276489, 0.7918372750282288, 0.7971205711364746, 0.7885351777076721, 0.8070268034934998, 0.8014793395996094, 0.8164047002792358, 0.8124422430992126, 0.8222163319587708, 0.8169330358505249, 0.8280280232429504, 0.8245938420295715, 0.8362171649932861, 0.8363492488861084, 0.8252542614936829, 0.8278959393501282, 0.8374059200286865, 0.835160493850708, 0.8485008478164673, 0.8459912538528442, 0.8455950617790222, 0.8426892161369324, 0.8533879518508911, 0.8584070801734924, 0.8543124794960022, 0.8576145768165588, 0.86553955078125], "val_loss": [1.9287165233067103, 1.1376159191131592, 0.8317668948854718, 0.8261047261101859, 0.8730041640145438, 0.7521696431296212, 0.6201020649501255, 0.6016197715486798, 0.5876460926873344, 0.5255555936268398, 0.5374910661152431, 0.46626278332301546, 0.46502409662519184, 0.4831922394888742, 0.47444725036621094, 0.47362782273973736, 0.4419970342091152, 0.4519028833934239, 0.4945003645760672, 0.4664558172225952, 0.40316746064594816, 0.40185822759355816, 0.42863867964063374, 0.4092126318386623, 0.4423238720212664, 0.46420274462018696, 0.384645198072706, 0.4451579877308437, 0.3890363574028015, 0.39979500429970877, 0.4028146096638271, 0.373308071068355, 0.3755925042288644, 0.37645788703645977, 0.36457669734954834, 0.3619811620031084, 0.3767130034310477, 0.349597556250436, 0.37718407596860615, 0.37625913109098164, 0.3482431173324585], "val_accuracy": [0.18433333933353424, 0.5903333425521851, 0.6473333239555359, 0.6543333530426025, 0.621999979019165, 0.637666642665863, 0.7170000076293945, 0.7333333492279053, 0.7286666631698608, 0.7720000147819519, 0.7546666860580444, 0.800000011920929, 0.7903333306312561, 0.7953333258628845, 0.7763333320617676, 0.7826666831970215, 0.8059999942779541, 0.7979999780654907, 0.7893333435058594, 0.7860000133514404, 0.8256666660308838, 0.8289999961853027, 0.8103333115577698, 0.8196666836738586, 0.8059999942779541, 0.8083333373069763, 0.8379999995231628, 0.796999990940094, 0.82833331823349, 0.8203333616256714, 0.8196666836738586, 0.8403333425521851, 0.8426666855812073, 0.8399999737739563, 0.8429999947547913, 0.846666693687439, 0.8446666598320007, 0.8460000157356262, 0.8339999914169312, 0.8363333344459534, 0.8456666469573975]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 1, 9, 1, 8, 6, 5, 8, 9], [3, 3, 0, 5, 3, 1, 2, 4, 2, 0], [9, 14, 79, 81, 53, 45], [0, 0, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1], [0, 0, 8, 9, 7], [4, 4], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.8125714063644409, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 2, 3, 3, 2, 1, 0, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(grad, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))), tf.math.add(grad, tf.math.subtract(tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2457790336021892, 2.0366744826955094, 1.3990709297629615, 1.1409936851640152, 1.0358428866273424, 0.8912667583528054, 0.8045441247389978, 0.7339052358843222, 0.7019957923350664, 0.6984737149051404, 0.6565460508856334, 0.6505513554629617, 0.606132614543299, 0.6051068897213304, 0.5755170800383254, 0.5837253817808453, 0.5504554250000679, 0.544432709159128, 0.5205916748338482, 0.5268371815474246, 0.5130851838441022, 0.5038548910488715, 0.4999315998164056, 0.49883818552006254, 0.46526810165488286, 0.44199042680193923, 0.46140283391444503, 0.46590272860047743, 0.4719321589900707, 0.4605610995142451, 0.4315125025487012], "accuracy": [0.24659886956214905, 0.3273015320301056, 0.5251618027687073, 0.5962224006652832, 0.620261549949646, 0.6668868064880371, 0.6940959095954895, 0.7223616242408752, 0.7308149337768555, 0.7243428826332092, 0.7481178045272827, 0.7565711140632629, 0.7734777331352234, 0.7666094303131104, 0.7862898111343384, 0.7872143983840942, 0.7946110367774963, 0.7965922355651855, 0.806630551815033, 0.8049134612083435, 0.8123101592063904, 0.8123101592063904, 0.8119139075279236, 0.8152159452438354, 0.8334434032440186, 0.8387266993522644, 0.8274996876716614, 0.8207634687423706, 0.8280280232429504, 0.8285563588142395, 0.8366134166717529], "val_loss": [1.9318193708147322, 1.1627930573054723, 1.0026548249380929, 1.0241273471287318, 0.7738445486341204, 0.6939566646303449, 0.6444603034428188, 0.5424911294664655, 0.5509729896272931, 0.5514801570347377, 0.5198876517159599, 0.47056290081569124, 0.4785865715571812, 0.4889270918709891, 0.46180897099631174, 0.46144729001181467, 0.5060098000935146, 0.44311550685337614, 0.47409938062940327, 0.4912764174597604, 0.4437895842960903, 0.43330725601741243, 0.43899525914873394, 0.39989722626549856, 0.39111591236931936, 0.39013086897986277, 0.40746647119522095, 0.40851599829537527, 0.4055987170764378, 0.4066000495638166, 0.4010967867715018], "val_accuracy": [0.18466666340827942, 0.5943333506584167, 0.5523333549499512, 0.5973333120346069, 0.6690000295639038, 0.6856666803359985, 0.7103333473205566, 0.7556666731834412, 0.7526666522026062, 0.749666690826416, 0.7646666765213013, 0.7900000214576721, 0.7913333177566528, 0.777999997138977, 0.7996666431427002, 0.8019999861717224, 0.7639999985694885, 0.8040000200271606, 0.7836666703224182, 0.7699999809265137, 0.8029999732971191, 0.8026666641235352, 0.8073333501815796, 0.828000009059906, 0.8299999833106995, 0.8410000205039978, 0.8206666707992554, 0.8149999976158142, 0.8203333616256714, 0.8116666674613953, 0.8243333101272583]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 6, 2, 2, 0, 9, 1, 8, 6, 5, 8, 9], [5, 3, 3, 5, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [9, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [0, 1, 0, 2, 3, 3, 2], [41, 57]], "fitness": -0.8094285726547241, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, grad), grad)), tf.math.add(grad, tf.math.add(beta, tf.math.negative(grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [2.0888395779766755, 1.441238415948215, 1.0741064786092245, 0.9299192358048962, 0.867183421730696, 0.7790177496133652, 0.7608748926714568, 0.7360329223645913, 0.7026624590839456, 0.677808355559227, 0.6561104421917284, 0.684023178760575, 0.6352845273233911, 0.6236021096097669, 0.6269971076539321, 0.6076031846534685, 0.6007922297896426, 0.5908495860171592, 0.6054955197363135, 0.5815608377359672, 0.5674217028735006, 0.5663189209447546, 0.5444301291542472, 0.5421937627169466, 0.5331791116576925, 0.5238729459876319, 0.5141040863787352, 0.5290357529794252, 0.5191726349348311, 0.5393052881010583, 0.49562540141393985, 0.49817180553242796, 0.4815112063322935, 0.49369383813635453, 0.48264306117640887, 0.48417096183426295, 0.47857513213280467, 0.47686064893606395, 0.4563081768824676, 0.45328140979933623, 0.46611779553464155, 0.45317445931386136, 0.4442925231371101, 0.4296272234508248, 0.4313361089243125, 0.4406531609603679, 0.42551324603627183, 0.4314288744844891, 0.420979434205336, 0.42466700698611065], "accuracy": [0.3147536516189575, 0.5099722743034363, 0.6124686598777771, 0.6643772125244141, 0.672698438167572, 0.7088891863822937, 0.7080966830253601, 0.7264562249183655, 0.7405890822410583, 0.7469290494918823, 0.7460044622421265, 0.7404569983482361, 0.7582882046699524, 0.7614582180976868, 0.7625148296356201, 0.7730814814567566, 0.7675340175628662, 0.7729493975639343, 0.7750627398490906, 0.7758552432060242, 0.7956677079200745, 0.7869502305984497, 0.802800178527832, 0.7972526550292969, 0.8004226684570312, 0.8030643463134766, 0.804649293422699, 0.8020076751708984, 0.8113855719566345, 0.7977809906005859, 0.8161405324935913, 0.8136309385299683, 0.8216879963874817, 0.8220842480659485, 0.819970965385437, 0.8234050869941711, 0.8249900937080383, 0.8267071843147278, 0.8329150676727295, 0.833179235458374, 0.830669641494751, 0.8285563588142395, 0.8379341959953308, 0.8408400416374207, 0.8445383906364441, 0.8362171649932861, 0.8405758738517761, 0.8378021121025085, 0.8459912538528442, 0.8461233377456665], "val_loss": [1.1829774720328194, 0.8684232575552804, 0.8328842435564313, 0.6899930579321725, 0.6451987028121948, 0.6304554428373065, 0.5840152502059937, 0.5621365479060582, 0.5810028995786395, 0.5325523444584438, 0.5766947610037667, 0.5117107970373971, 0.4953723634992327, 0.5467471565519061, 0.5057063613619123, 0.5199395077569144, 0.47683838435581755, 0.5316871404647827, 0.5373787369046893, 0.4642065763473511, 0.4717996801648821, 0.4664289781025478, 0.4603027786527361, 0.44854449374335154, 0.4578519718987601, 0.4489014148712158, 0.49143316064562115, 0.45228563036237446, 0.437034010887146, 0.43393645967756, 0.43722247225897654, 0.43099571977342876, 0.4150743229048593, 0.4068877696990967, 0.40744208438055857, 0.40473722560065134, 0.42368584871292114, 0.3949923174721854, 0.39133574281420025, 0.42443967717034475, 0.4021133780479431, 0.3816689763750349, 0.39369509901319233, 0.3791631885937282, 0.3860844544001988, 0.3792862466403416, 0.3745054858071463, 0.387589088508061, 0.3886934093066624, 0.40583745922361103], "val_accuracy": [0.5929999947547913, 0.5963333249092102, 0.6323333382606506, 0.6883333325386047, 0.7076666951179504, 0.6990000009536743, 0.7409999966621399, 0.7369999885559082, 0.7390000224113464, 0.7736666798591614, 0.7360000014305115, 0.7683333158493042, 0.781333327293396, 0.7486666440963745, 0.7630000114440918, 0.7730000019073486, 0.7896666526794434, 0.7576666474342346, 0.7459999918937683, 0.7953333258628845, 0.7990000247955322, 0.7913333177566528, 0.7960000038146973, 0.7983333468437195, 0.7953333258628845, 0.8053333163261414, 0.7756666541099548, 0.8036666512489319, 0.8149999976158142, 0.8140000104904175, 0.8073333501815796, 0.8116666674613953, 0.8169999718666077, 0.8203333616256714, 0.8199999928474426, 0.8246666789054871, 0.8199999928474426, 0.8320000171661377, 0.831333339214325, 0.8090000152587891, 0.8289999961853027, 0.8339999914169312, 0.82833331823349, 0.8323333263397217, 0.8356666564941406, 0.8326666951179504, 0.8343333601951599, 0.8263333439826965, 0.8303333520889282, 0.8176666498184204]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 1, 9, 0, 8, 6, 5, 8, 9], [4, 3, 0, 5, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [0, 0, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 4], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [41, 57]], "fitness": -0.8054285645484924, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 8, 5, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(grad, tf.math.subtract(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))), tf.math.negative(grad)), tf.math.add(beta, tf.math.sqrt(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0888553164843255, 1.4399626029244723, 1.0741322634321209, 0.9403538323349374, 0.8561764149114109, 0.7792098066511093, 0.7619733200679759, 0.7385242055703495, 0.7028001374525086, 0.6731959430296911, 0.6539155521869596, 0.6806296790674331, 0.6329498811641059, 0.6423967384375664, 0.6173071501560813, 0.6076967847062266, 0.597461987212507, 0.6053833649410721, 0.5809701375595377, 0.5819433159863456, 0.5621610426033619, 0.5650235350971854, 0.5463690836793947, 0.536544841990857, 0.5352161459131736, 0.5160947224294284, 0.5142679532379475, 0.5341142788145599, 0.5203388783406147, 0.5344599407535771], "accuracy": [0.3148857355117798, 0.5107647776603699, 0.611411988735199, 0.6593580842018127, 0.6783780455589294, 0.7071720957756042, 0.7067758440971375, 0.7238145470619202, 0.7387399077415466, 0.7475894689559937, 0.7481178045272827, 0.7441553473472595, 0.7609298825263977, 0.7519482374191284, 0.7675340175628662, 0.7730814814567566, 0.7714964747428894, 0.7662131786346436, 0.7836481332778931, 0.7759873270988464, 0.7987055778503418, 0.7840443849563599, 0.8054417967796326, 0.7985734939575195, 0.7998943328857422, 0.8026680946350098, 0.8050455451011658, 0.8001585006713867, 0.8113855719566345, 0.7991018295288086], "val_loss": [1.1832200799669539, 0.8669726848602295, 0.8506185327257428, 0.6951611893517631, 0.6472196919577462, 0.6324436153684344, 0.5880006040845599, 0.5639532634190151, 0.5800313949584961, 0.5353316238948277, 0.5679226432527814, 0.5067981651851109, 0.4999730246407645, 0.5018634455544608, 0.5146946396146502, 0.5185547726494926, 0.5040731430053711, 0.4761193650109427, 0.5446159328733172, 0.47052548612867084, 0.4742371695382254, 0.4802673203604562, 0.45533062730516705, 0.4593022721154349, 0.4387707199369158, 0.4458249296460833, 0.47843306405203684, 0.4577452114650181, 0.4360224689756121, 0.4388763563973563], "val_accuracy": [0.5923333168029785, 0.5953333377838135, 0.6136666536331177, 0.687666654586792, 0.7036666870117188, 0.6963333487510681, 0.7369999885559082, 0.7356666922569275, 0.7396666407585144, 0.7743333578109741, 0.7386666536331177, 0.7766666412353516, 0.7793333530426025, 0.7860000133514404, 0.7559999823570251, 0.7706666588783264, 0.7649999856948853, 0.7876666784286499, 0.7390000224113464, 0.7923333048820496, 0.79666668176651, 0.781333327293396, 0.8009999990463257, 0.7940000295639038, 0.8159999847412109, 0.8056666851043701, 0.7839999794960022, 0.800000011920929, 0.8149999976158142, 0.812333345413208]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 1, 9, 1, 8, 6, 5, 8, 9], [4, 3, 0, 5, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [0, 0, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 4], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.7828571200370789, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 8, 6, 2, 3, 3, 1, 2, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(grad, tf.math.subtract(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))), tf.math.subtract(grad, tf.math.sqrt(grad))), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.079788997928779, 2.061142596192663, 1.6362835666554212, 1.2194203883901547, 0.9615028261540037, 0.8198260997485145, 0.756737786836124, 0.7196591547246874, 0.6800156635552224, 0.6225096047861449, 0.6269857855426354, 0.5968593537154026, 0.5808398317210568, 0.5713941145724215], "accuracy": [0.3008849620819092, 0.34183067083358765, 0.436930388212204, 0.5606921315193176, 0.648659348487854, 0.6922467350959778, 0.7140403985977173, 0.7256637215614319, 0.737022876739502, 0.7586844563484192, 0.763967752456665, 0.7685906887054443, 0.7791573405265808, 0.778232753276825], "val_loss": [1.8656906400408064, 1.3008160931723458, 0.9628239699772426, 0.7838241883686611, 0.6898983716964722, 0.5874153205326625, 0.6300114222935268, 0.5780842304229736, 0.5109029156821114, 0.5589015143258231, 0.5071926287242344, 0.510562573160444, 0.5009332895278931, 0.5191305194582257], "val_accuracy": [0.30000001192092896, 0.527999997138977, 0.5833333134651184, 0.6579999923706055, 0.6800000071525574, 0.7369999885559082, 0.715666651725769, 0.7083333134651184, 0.7683333158493042, 0.7413333058357239, 0.7620000243186951, 0.762666642665863, 0.7526666522026062, 0.7549999952316284]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 1, 6, 2, 2, 9, 1, 8, 6, 5, 8, 9], [3, 3, 3, 5, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [0, 0, 1, 0, 0, 1], [1, 1, 1, 0, 0, 1], [9, 0, 8, 9, 7], [2, 7], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [0, 1, 0, 2, 3, 3, 2], [41, 57]], "fitness": -0.7717142701148987, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad))), grad), tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [2.0775194106683315, 1.4337685193525502, 1.0964443081594524, 0.9183078751493486, 0.8424923516078758, 0.7945307239470875, 0.7586709557743498, 0.7185568309825378, 0.7121338250772151, 0.6819976841957813, 0.6617079863395863, 0.684711118077306, 0.6531299251402216], "accuracy": [0.32465988397598267, 0.4920089840888977, 0.600581169128418, 0.6592260003089905, 0.6909258961677551, 0.698718786239624, 0.7104741930961609, 0.7189275026321411, 0.724210798740387, 0.7403249144554138, 0.7469290494918823, 0.7305507659912109, 0.7428345084190369], "val_loss": [1.1877600806100028, 0.935159512928554, 0.7115994351250785, 0.6725659540721348, 0.6091093506131854, 0.5809938907623291, 0.5845424788338798, 0.5525092567716327, 0.5550374984741211, 0.5405023779187884, 0.56865165914808, 0.524703962462289, 0.5397903067725045], "val_accuracy": [0.5576666593551636, 0.625, 0.70333331823349, 0.7070000171661377, 0.7400000095367432, 0.746999979019165, 0.7326666712760925, 0.7603333592414856, 0.746999979019165, 0.7450000047683716, 0.7416666746139526, 0.7566666603088379, 0.7459999918937683]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 1, 9, 1, 8, 6, 5, 8, 9], [4, 3, 0, 5, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [0, 0, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 4], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.7394285798072815, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 8, 6, 2, 3, 3, 1, 2, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(grad, tf.math.subtract(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))), tf.math.subtract(grad, tf.math.add(beta, tf.math.sqrt(grad)))), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.4312429438492624, 2.2958546023343014, 2.1180568607082426, 1.7136462483470938, 1.3833545061890413, 1.1510279756637218, 0.9229504846310996, 0.8987021835614598, 0.8452442360119561, 0.7733944280823665, 0.7206903891068377, 0.7121411314997549], "accuracy": [0.23365473747253418, 0.13313961029052734, 0.28860124945640564, 0.41883501410484314, 0.535860538482666, 0.5803724527359009, 0.6519614458084106, 0.6653017997741699, 0.6791704893112183, 0.6999075412750244, 0.7275128960609436, 0.7272487282752991], "val_loss": [1.9751843043736048, 1.920229366847447, 1.590282951082502, 1.1120149408067976, 1.0923670019422258, 0.7538730757577079, 0.6519688027245658, 0.6713982479912894, 0.67438691002982, 0.5869922297341483, 0.6604442596435547, 0.5746384348188128], "val_accuracy": [0.10366666316986084, 0.2563333213329315, 0.4416666626930237, 0.5693333148956299, 0.5493333339691162, 0.671999990940094, 0.7316666841506958, 0.6863333582878113, 0.684333324432373, 0.7210000157356262, 0.6959999799728394, 0.7310000061988831]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 6, 2, 2, 5, 9, 1, 8, 6, 5, 8, 9], [4, 1, 0, 5, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [1, 0, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1], [7, 0, 8, 9, 7], [6, 7], [88, 19], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.35285714268684387, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 8, 5, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(grad)), tf.math.add(beta, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))), alpha)), tf.math.subtract(tf.math.sqrt(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3708037334646703, 2.3544453252906483, 2.3027419239034614, 2.291657619031665, 2.2739528484190807, 2.1896966270814087, 2.024954698467141], "accuracy": [0.19482234120368958, 0.1636507660150528, 0.23444722592830658, 0.13974376022815704, 0.1644432693719864, 0.26099589467048645, 0.3307357132434845], "val_loss": [1.7738486698695592, 1.8296498571123396, 1.978994301387242, 1.6037123203277588, 1.9323359216962541, 1.878507341657366, 4.385269982474191], "val_accuracy": [0.25466665625572205, 0.3700000047683716, 0.09833333641290665, 0.3256666660308838, 0.19333332777023315, 0.36766666173934937, 0.13866665959358215]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 2, 2, 2, 0, 9, 1, 9, 6, 5, 8, 9], [3, 3, 3, 5, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [0, 0, 1, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 4], [88, 19], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [9, 3, 0, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [41, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 8, 4, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(grad, tf.math.negative(grad))))), tf.math.add(beta, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))), tf.math.subtract(grad, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302672939939175, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09536388516426086, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 4, 4, 2, 0, 9, 1, 8, 6, 5, 8, 9], [4, 2, 0, 5, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [41, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))))), grad), tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0796460211277008, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 5, 9, 1, 8, 6, 5, 8, 9], [4, 0, 0, 5, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [9, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 2, 1, 0, 0, 0, 0, 3, 2, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), tf.math.add(grad, tf.math.add(beta, tf.math.square(grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0796460211277008, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 6, 2, 2, 0, 9, 1, 8, 6, 5, 8, 9], [3, 3, 3, 5, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [9, 0, 8, 9, 7], [1, 7], [88, 19], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [0, 1, 0, 2, 3, 3, 2], [41, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.pow(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09536388516426086, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 6, 2, 2, 0, 9, 1, 8, 6, 5, 8, 9], [4, 3, 2, 5, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [0, 0, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [7, 0, 8, 9, 7], [2, 5], [88, 19], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [0, 1, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 0, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), beta))), tf.math.add(grad, tf.math.negative(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [93515365.5963875, 1850278264.3074892, 8573556865.031303, 23541535003.219654, 50236055719.17263, 92465251943.26562], "accuracy": [0.09826971590518951, 0.09840179979801178, 0.10593052208423615, 0.09787346422672272, 0.10421344637870789, 0.10566636174917221], "val_loss": [368101211.4285714, 2942741211.428571, 9929427529.142857, 23533703168.0, 45960715117.71429, 79416751835.42857], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 5, 9, 1, 8, 6, 5, 8, 9], [4, 0, 0, 5, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07898560166358948, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 5, 9, 1, 8, 6, 5, 8, 9], [4, 3, 0, 5, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [1, 0, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [2, 0], [81, 19], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 7, 7, 3, 4, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09536388516426086, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 1, 2, 1, 9, 1, 8, 6, 5, 8, 9], [4, 3, 0, 5, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [0, 0, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 4], [88, 19], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 8, 6, 2, 3, 3, 1, 2, 0, 7, 4, 3, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(grad, tf.math.subtract(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.subtract(grad, tf.math.sqrt(tf.math.add(beta, grad)))))), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.negative(tf.math.pow(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [9.879859033698546e+24, 2.971736786246158, 5.302869589415996, 8.77976346346586, 12.343352676681823, 15.9157402299068], "accuracy": [0.07713644206523895, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.211771079472133, 3.4318933486938477, 6.27146543775286, 9.324177605765206, 12.388906478881836, 15.446730477469307], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 1, 9, 1, 8, 6, 5, 8, 9], [4, 0, 0, 5, 3, 2, 2, 4, 2, 0], [78, 47, 79, 81, 53, 45], [0, 0, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1], [2, 0, 8, 9, 7], [1, 4], [88, 19], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.0705714300274849, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 5, 6, 2, 5, 5, 4, 1, 1, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.subtract(grad, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.5116033375523017, 2.4185245144148357, 2.2787701240887714, 2.2810021422684326, 2.464365393620094, 23.924484144758004, NaN, NaN], "accuracy": [0.1826707124710083, 0.10077928751707077, 0.15889579057693481, 0.20472857356071472, 0.15057456493377686, 0.09681680053472519, 0.09576013684272766, 0.10011887550354004], "val_loss": [2.0249026843479703, 2.0119737216404507, 1.881263187953404, 1.9351295062473841, 2.0776114463806152, 2.02094909123012, NaN, NaN], "val_accuracy": [0.09966666996479034, 0.10000000149011612, 0.18033333122730255, 0.15466666221618652, 0.10366666316986084, 0.1133333370089531, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 6, 2, 2, 2, 9, 1, 8, 6, 5, 8, 9], [4, 3, 0, 5, 3, 2, 2, 4, 2, 0], [9, 65, 79, 81, 53, 45], [0, 0, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 1], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [5, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.06428571790456772, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 2, 3, 3, 1, 2, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(grad, tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.subtract(grad, grad))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3010460738697387, 2.3035778624585372, 2.303155919359565, 2.3022270381505763, 2.301349044964062, 2.3012055028084797, 2.302086135573029, 2.301347227112933, 2.3015589811042663, 2.301951969902765, 2.300075249665008, 2.301291908302705, 2.3012645951571984, 2.3002285387978625, 2.3013450938791506, 2.300721042427987, 2.3012979746085307, 2.299572376196552, 2.301743536294018, 2.2997164924650804, 2.3009475531784016, 2.3011467290859904, 2.2995325518227556, 2.3001339241277745, 2.2995555393605454, 2.2998529691359844, 2.2994238179924467, 2.3010097390168442, 2.3005380764644947, 2.3005866775454753, 2.30086233820252, 2.3005380182060913, 2.301169000486294, 2.3000255820458637, 2.300522832633671, 2.299994378939533, 2.300247677218692, 2.299838026390887, 2.2999094365499966, 2.2997165522980354, 2.300093466280442, 2.300768149669034, 2.2989830670654654, 2.300053735560965, 2.2994761566491633, 2.2999756529881985, 2.2994500460200826, 2.3002662790008994, 2.299161788605113, 2.2997722377583116], "accuracy": [0.09681680053472519, 0.08968432247638702, 0.0866464152932167, 0.09602430462837219, 0.09576013684272766, 0.09298639744520187, 0.0956280529499054, 0.0956280529499054, 0.09166556596755981, 0.09126931428909302, 0.09760929644107819, 0.09602430462837219, 0.09642054885625839, 0.09602430462837219, 0.09417514503002167, 0.09826971590518951, 0.09747721254825592, 0.09959053993225098, 0.09417514503002167, 0.10038304328918457, 0.09602430462837219, 0.09325055778026581, 0.10077928751707077, 0.09589222073554993, 0.10051512718200684, 0.10011887550354004, 0.10091137140989304, 0.09615638852119446, 0.09430722147226334, 0.09311848133802414, 0.09800554811954498, 0.09549596905708313, 0.09602430462837219, 0.09879804402589798, 0.09589222073554993, 0.09774138033390045, 0.09496764093637466, 0.09840179979801178, 0.10500594228506088, 0.10117553919553757, 0.09760929644107819, 0.09787346422672272, 0.09813763201236725, 0.09985470771789551, 0.10130762308835983, 0.10038304328918457, 0.10051512718200684, 0.09576013684272766, 0.10236428678035736, 0.09998679161071777], "val_loss": [1.9710973330906458, 1.9709006718226842, 1.9707613672528947, 1.9706370489937919, 1.9705527850559779, 1.9704831668308802, 1.970339230128697, 1.97025237764631, 1.970203059060233, 1.9701053755623954, 1.970071724482945, 1.969984803880964, 1.9699112347194128, 1.9698610305786133, 1.9698247909545898, 1.9697977474757604, 1.9697752680097307, 1.9697794233049666, 1.9697657993861608, 1.9697683879307337, 1.969757352556501, 1.9697306496756417, 1.969749995640346, 1.9697527885437012, 1.9697700228009904, 1.9697791508265905, 1.9697954995291573, 1.969789641244071, 1.9698008809770857, 1.9697978155953544, 1.9697977474757604, 1.969784872872489, 1.9697813306535994, 1.9697511536734444, 1.96972622190203, 1.9697042192731584, 1.9696791512625558, 1.9696732248578752, 1.969665254865374, 1.969658511025565, 1.969632829938616, 1.969592707497733, 1.9695828982761927, 1.9695612362452917, 1.9695418221609933, 1.969536576952253, 1.9695347377232142, 1.9695265633719308, 1.9695497240339006, 1.969557421548026], "val_accuracy": [0.0416666679084301, 0.04233333468437195, 0.043666668236255646, 0.04399999976158142, 0.04466666653752327, 0.04533333331346512, 0.047333333641290665, 0.04800000041723251, 0.04833333194255829, 0.05000000074505806, 0.050333332270383835, 0.05233333259820938, 0.05433333292603493, 0.05533333495259285, 0.05533333495259285, 0.055666666477918625, 0.056333333253860474, 0.05700000002980232, 0.0573333315551281, 0.05700000002980232, 0.05700000002980232, 0.05666666850447655, 0.05766666680574417, 0.057999998331069946, 0.05833333358168602, 0.05833333358168602, 0.05833333358168602, 0.057999998331069946, 0.05833333358168602, 0.05999999865889549, 0.06066666543483734, 0.06133333221077919, 0.06266666948795319, 0.06400000303983688, 0.06533333659172058, 0.06700000166893005, 0.0689999982714653, 0.0689999982714653, 0.06966666877269745, 0.07000000029802322, 0.07133333384990692, 0.0716666653752327, 0.0716666653752327, 0.07333333045244217, 0.07466666400432587, 0.07466666400432587, 0.07466666400432587, 0.07400000095367432, 0.07400000095367432, 0.07333333045244217]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 5, 9, 1, 8, 6, 5, 8, 9], [3, 3, 3, 5, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [9, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [14, 57]], "fitness": -0.019428571686148643, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 1, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(grad)), grad)), tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.negative(tf.math.pow(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.303572733231256, 2.312498079362153, 2.3185858825068384, 2.3244976214508513, 2.3305760855530515, 2.3381004616285535], "accuracy": [0.09021265059709549, 0.0746268630027771, 0.05692775174975395, 0.05507858842611313, 0.04847444221377373, 0.03936071693897247], "val_loss": [1.976759910583496, 1.982468741280692, 1.988381998879569, 1.9945712770734514, 2.0010435921805247, 2.007993153163365], "val_accuracy": [0.019333332777023315, 0.009999999776482582, 0.006666666828095913, 0.004666666500270367, 0.004000000189989805, 0.003666666569188237]}}]