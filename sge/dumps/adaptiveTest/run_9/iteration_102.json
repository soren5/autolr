[{"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7954285740852356, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2913665356117705, 2.265410281569179, 2.2329548687872522, 2.194711962553646, 2.1390459745346893, 2.0652507112609113, 1.9690894236921745, 1.853321937049747, 1.7205491298382796, 1.5857683101649518, 1.4796351233902956, 1.3698737833714363, 1.2976433935418594, 1.23325894562607, 1.175472050263598, 1.1396481104971568, 1.10123824119064, 1.070306422073985, 1.033232120443502, 1.0018563399682066, 0.9886915799082231, 0.9575791124182134, 0.9489086071466489, 0.9205590864497563, 0.9070771926224995, 0.8953743859478007, 0.8842889802598557, 0.8724722711952717, 0.8607057110587163, 0.8469100824405079, 0.8431482037784968, 0.8319873211957272, 0.81690805135638, 0.8249719168500279, 0.816767427521674, 0.7988327130067145, 0.7987039916550935, 0.780120771401405, 0.7886025396792833, 0.7766355582279316, 0.7850806487943393, 0.7725380069276424, 0.7680430784280258, 0.7585783688194795, 0.7608843320758508, 0.7496285795173498, 0.7455277396167951, 0.744248590968808, 0.736679139193637, 0.7298356869815599, 0.7199484174041512, 0.7158502663887093, 0.7225803754837001, 0.7139740507868161, 0.7067112765134586, 0.7121092389996939, 0.7087336600007886, 0.7053557408799144, 0.7048208842329802, 0.7023765932709045, 0.6923912669516132, 0.6847032581841894, 0.6918146780941385, 0.6910583428057382, 0.6897823945122813, 0.6838227498721863, 0.675907010226564, 0.674651972015599, 0.6760492538810642, 0.6775557036255613, 0.6678825816489671, 0.6619267634208003, 0.6543808641639667, 0.658432919390843, 0.658744363303922, 0.659769295646278, 0.6628727897944593, 0.6479794046095003, 0.651179797700399, 0.6514392915324386, 0.6445314013065206, 0.6451494742960836, 0.6422197953380252, 0.635133451128113], "accuracy": [0.12574297189712524, 0.18663319945335388, 0.26218464970588684, 0.3156782388687134, 0.35662394762039185, 0.39506009221076965, 0.42583543062210083, 0.43785497546195984, 0.4721965491771698, 0.5008585453033447, 0.5221238732337952, 0.5423325896263123, 0.5522388219833374, 0.5727116465568542, 0.5967507362365723, 0.5978074073791504, 0.6140536069869995, 0.6229031682014465, 0.6339981555938721, 0.6454893946647644, 0.6515651941299438, 0.6510368585586548, 0.6642451286315918, 0.6737551093101501, 0.6729626059532166, 0.6769251227378845, 0.6826046705245972, 0.6843217611312866, 0.6947563290596008, 0.6926429867744446, 0.6934354901313782, 0.6964733600616455, 0.7083608508110046, 0.6991150379180908, 0.702681303024292, 0.71100252866745, 0.7080966830253601, 0.7230220437049866, 0.7125874757766724, 0.7157574892044067, 0.7166820764541626, 0.715889573097229, 0.7165499925613403, 0.722757875919342, 0.713908314704895, 0.7265883088111877, 0.7288337349891663, 0.7285695672035217, 0.7317395210266113, 0.7248712182044983, 0.7353057861328125, 0.7321357727050781, 0.7338528633117676, 0.7329282760620117, 0.7368907928466797, 0.7360982894897461, 0.7405890822410583, 0.7391361594200134, 0.733060359954834, 0.7383436560630798, 0.741909921169281, 0.7446836829185486, 0.739928662776947, 0.743891179561615, 0.7446836829185486, 0.7411174178123474, 0.7475894689559937, 0.7477215528488159, 0.7473253011703491, 0.7486461400985718, 0.7489103078842163, 0.7483819723129272, 0.7577598690986633, 0.7523444890975952, 0.7479857206344604, 0.7557786107063293, 0.7557786107063293, 0.752740740776062, 0.7586844563484192, 0.7561748623847961, 0.7621186375617981, 0.7593448758125305, 0.7604015469551086, 0.7625148296356201], "val_loss": [1.9466426031930106, 1.920407703944615, 1.8880043029785156, 1.8442327635628837, 1.7834439277648926, 1.7010932990482874, 1.5950426033564977, 1.4692307199750627, 1.3358231953212194, 1.2083544049944197, 1.1022508825574602, 1.0147850854056222, 0.9466161046709333, 0.8955507278442383, 0.8496103286743164, 0.8148009777069092, 0.7864970649991717, 0.7635197298867362, 0.7420178481510707, 0.7221466984067645, 0.7067887953349522, 0.6929609264646258, 0.6817330632890973, 0.6705459186008998, 0.6620613506862095, 0.650573560169765, 0.6426935706819806, 0.6347549642835345, 0.6284093345914569, 0.6200053180967059, 0.6161086218697684, 0.6117996658597674, 0.6051240989140102, 0.6019276039940971, 0.5957723685673305, 0.5926223823002407, 0.5874935899462018, 0.5812754290444511, 0.5799018825803485, 0.5747701610837664, 0.5738634041377476, 0.5705709457397461, 0.5666066237858364, 0.5627653428486415, 0.5595455510275704, 0.5572471959250314, 0.5549041373389108, 0.5517080000468663, 0.548364349773952, 0.5461415733609881, 0.5442421947206769, 0.5417642423084804, 0.5398383481161935, 0.5370928219386509, 0.5350631134850639, 0.5322481734412057, 0.5319199732371739, 0.5310834305627006, 0.5286966051374163, 0.5273753745215279, 0.5236390147890363, 0.5210450036185128, 0.5195477690015521, 0.5188201665878296, 0.5185906887054443, 0.519413982118879, 0.513644848551069, 0.5133581842694964, 0.5120405980518886, 0.5120879581996373, 0.5081808056150164, 0.5056543690817696, 0.5055813619068691, 0.5024401290076119, 0.50283225945064, 0.5028456108910697, 0.49853880064828054, 0.4983118772506714, 0.4980773074286325, 0.4965606076376779, 0.4957294464111328, 0.49505368300846647, 0.49401709011622835, 0.4929778575897217], "val_accuracy": [0.2356666624546051, 0.3636666536331177, 0.41100001335144043, 0.4583333432674408, 0.4970000088214874, 0.5233333110809326, 0.5479999780654907, 0.5743333101272583, 0.5879999995231628, 0.612333357334137, 0.637666642665863, 0.6579999923706055, 0.6679999828338623, 0.6740000247955322, 0.6803333163261414, 0.6853333115577698, 0.6916666626930237, 0.6943333148956299, 0.6990000009536743, 0.70333331823349, 0.7093333601951599, 0.7136666774749756, 0.7183333039283752, 0.7196666598320007, 0.7183333039283752, 0.7256666421890259, 0.7306666374206543, 0.7323333621025085, 0.7276666760444641, 0.7353333234786987, 0.7369999885559082, 0.734333336353302, 0.7419999837875366, 0.7440000176429749, 0.7463333606719971, 0.7443333268165588, 0.746999979019165, 0.753333330154419, 0.750333309173584, 0.7553333044052124, 0.7543333172798157, 0.753333330154419, 0.7546666860580444, 0.7559999823570251, 0.7599999904632568, 0.7580000162124634, 0.762333333492279, 0.7630000114440918, 0.7613333463668823, 0.7649999856948853, 0.7613333463668823, 0.7676666378974915, 0.7663333415985107, 0.768666684627533, 0.7683333158493042, 0.7663333415985107, 0.7683333158493042, 0.7649999856948853, 0.7726666927337646, 0.7713333368301392, 0.7716666460037231, 0.7723333239555359, 0.7723333239555359, 0.7730000019073486, 0.7796666622161865, 0.7683333158493042, 0.7773333191871643, 0.7696666717529297, 0.7770000100135803, 0.7820000052452087, 0.7773333191871643, 0.7793333530426025, 0.7789999842643738, 0.7823333144187927, 0.7793333530426025, 0.7826666831970215, 0.781333327293396, 0.7789999842643738, 0.7860000133514404, 0.7806666493415833, 0.7839999794960022, 0.7799999713897705, 0.7806666493415833, 0.7839999794960022]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0], [3, 4, 2, 7, 8, 0, 1, 0, 0, 3, 8, 5, 8, 9, 8, 2, 6, 5, 2, 8, 7, 2, 4, 9], [2, 2, 3, 2, 1, 3, 2, 2, 1, 3, 1, 2, 2, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7951428294181824, "mapping_values": [1, 19, 19, 12, 7, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.add(alpha, grad)))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.subtract(tf.math.negative(grad), tf.math.add(alpha, alpha))))))), tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(grad), tf.math.square(grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2913665356117705, 2.2654102185871214, 2.2329542524763277, 2.1947108154614305, 2.139046149971211, 2.0652543593706345, 1.969094977387033, 1.8533266286462007, 1.720552400386313, 1.5857671498465045, 1.4796266286537836, 1.3698997453943518, 1.2976807987748231, 1.2333033491576022, 1.1754946083267368, 1.1396755514017674, 1.101253292060185, 1.07032423711582, 1.0332657926669289, 1.0018498976594972, 0.9886870110637996, 0.9575477760024846, 0.9489227301487755, 0.9205497550438455, 0.9070723286126631, 0.8953884723573518, 0.8843018604055481, 0.8725065420159196, 0.8606785461099912, 0.8468437324645985, 0.8431395241896459, 0.8318766760174247, 0.8168085846824101, 0.8249183469098305, 0.816632011712676, 0.7987831084562284, 0.7986837780124492, 0.7800581675904097, 0.788434104833778, 0.7764933769965232, 0.7850826352405637, 0.7724796524137286, 0.7681016318235321, 0.7585485087897815, 0.7609056385516679, 0.7495935583757041, 0.7454563872358503, 0.7443131687713258, 0.7366010865767114, 0.7299222658260262, 0.7198081953792272, 0.7158167645160028, 0.7225365007573965, 0.7139409036841674, 0.7066754075624624, 0.7120520135651269, 0.7087480022040938, 0.7052535195045814, 0.7047437464934235, 0.7024121911235064, 0.6923567531225688, 0.6846620858920138, 0.6917387237087169, 0.6912004812329657, 0.6898817169022299, 0.6840030106382127, 0.6757807941831036, 0.6746734632729003, 0.6760331083833581, 0.6776000944425905, 0.6679216198177386, 0.6618912971140986, 0.6544553359438793, 0.6582995576944176, 0.6588205666889084, 0.6596825302174661, 0.6626536834902846, 0.6478670683393326, 0.6511346492407076, 0.6515086701659164, 0.6443666364097671, 0.6451228953639137, 0.6420842437554565, 0.6351138501040703], "accuracy": [0.12574297189712524, 0.18663319945335388, 0.26218464970588684, 0.3156782388687134, 0.35662394762039185, 0.3949280083179474, 0.4259675145149231, 0.4377228915691376, 0.4721965491771698, 0.5011227130889893, 0.5223880410194397, 0.54220050573349, 0.5526350736618042, 0.5723153948783875, 0.5964865684509277, 0.5972790718078613, 0.613789439201355, 0.6229031682014465, 0.6339981555938721, 0.6454893946647644, 0.6515651941299438, 0.651168942451477, 0.6645092964172363, 0.6741513609886169, 0.6729626059532166, 0.677189290523529, 0.6827367544174194, 0.6841896772384644, 0.6944921612739563, 0.6926429867744446, 0.6926429867744446, 0.6970016956329346, 0.7082287669181824, 0.6997754573822021, 0.7033417224884033, 0.7111346125602722, 0.7079645991325378, 0.7231541275978088, 0.7128516435623169, 0.7160216569900513, 0.7165499925613403, 0.7166820764541626, 0.7160216569900513, 0.7226257920265198, 0.7136441469192505, 0.7264562249183655, 0.7284374833106995, 0.7289658188819885, 0.7320036888122559, 0.7256637215614319, 0.7354378700256348, 0.7318716049194336, 0.7338528633117676, 0.733060359954834, 0.7367587089538574, 0.7359662055969238, 0.7400607466697693, 0.7390040755271912, 0.7343811988830566, 0.7383436560630798, 0.7425703406333923, 0.7441553473472595, 0.7405890822410583, 0.7442874312400818, 0.7450799345970154, 0.7403249144554138, 0.7481178045272827, 0.7473253011703491, 0.7477215528488159, 0.7490423917770386, 0.7491744756698608, 0.7485140562057495, 0.7573636174201965, 0.7528728246688843, 0.748249888420105, 0.7547219395637512, 0.7556465268135071, 0.7535332441329956, 0.759080708026886, 0.7559106945991516, 0.7623828053474426, 0.759080708026886, 0.7606657147407532, 0.7614582180976868], "val_loss": [1.9466426031930106, 1.920407703944615, 1.8880036217825753, 1.8442322186061315, 1.7834446770804269, 1.7010993616921561, 1.5950538090297155, 1.469238247190203, 1.335820504597255, 1.2083587305886405, 1.102268968309675, 1.0148149558476038, 0.9466994149344308, 0.8955768176487514, 0.849628039768764, 0.8148140226091657, 0.7865081003734044, 0.7635057483400617, 0.7420118365968976, 0.7221240827015468, 0.7067311831883022, 0.6929168701171875, 0.6816700526646206, 0.6705068690436227, 0.6620465687343052, 0.6505718401500157, 0.6426456996372768, 0.634670649256025, 0.6283706086022514, 0.619901214327131, 0.6160428524017334, 0.6118070738656181, 0.6050986051559448, 0.601966415132795, 0.5957989862986973, 0.5926147018160138, 0.5874597174780709, 0.5812419142041888, 0.5798940147672381, 0.5747757468904767, 0.5738810641424996, 0.5705489942005703, 0.5665959800992694, 0.5626966272081647, 0.5594905955450875, 0.5571933814457485, 0.554906930242266, 0.5516484975814819, 0.5484083720615932, 0.5461972270693097, 0.5442486490522113, 0.5417403663907733, 0.5397876501083374, 0.5371473176138741, 0.5350667919431414, 0.5322068418775286, 0.5318811961582729, 0.5310534409114293, 0.5286413090569633, 0.5272920301982335, 0.5236553464617048, 0.520992466381618, 0.519527622631618, 0.5188244581222534, 0.5188391038349697, 0.5193741151264736, 0.5136113848005023, 0.5134411198752267, 0.5119626862662179, 0.5120712007795062, 0.5082148824419294, 0.5056998389107841, 0.5055618967328753, 0.5026069709232875, 0.5028286320822579, 0.502916966165815, 0.49868146010807585, 0.49839881488255094, 0.4980872699192592, 0.49656128883361816, 0.4957238435745239, 0.49513728278023855, 0.49404282229287283, 0.4930264779499599], "val_accuracy": [0.2356666624546051, 0.3636666536331177, 0.41100001335144043, 0.4583333432674408, 0.4970000088214874, 0.5236666798591614, 0.5479999780654907, 0.5743333101272583, 0.5883333086967468, 0.612333357334137, 0.6383333206176758, 0.6586666703224182, 0.6683333516120911, 0.6733333468437195, 0.6803333163261414, 0.6853333115577698, 0.6916666626930237, 0.6946666836738586, 0.6993333101272583, 0.70333331823349, 0.7093333601951599, 0.7136666774749756, 0.7183333039283752, 0.7196666598320007, 0.7183333039283752, 0.7253333330154419, 0.7306666374206543, 0.7323333621025085, 0.7279999852180481, 0.7356666922569275, 0.7366666793823242, 0.734000027179718, 0.7423333525657654, 0.7436666488647461, 0.746666669845581, 0.7446666955947876, 0.746999979019165, 0.7526666522026062, 0.75, 0.7549999952316284, 0.7543333172798157, 0.753333330154419, 0.7553333044052124, 0.7563333511352539, 0.7603333592414856, 0.7576666474342346, 0.7613333463668823, 0.7613333463668823, 0.7609999775886536, 0.7646666765213013, 0.762666642665863, 0.768666684627533, 0.765999972820282, 0.768666684627533, 0.768666684627533, 0.7666666507720947, 0.7693333625793457, 0.765333354473114, 0.7723333239555359, 0.7720000147819519, 0.7716666460037231, 0.7720000147819519, 0.7720000147819519, 0.7730000019073486, 0.7803333401679993, 0.768666684627533, 0.7773333191871643, 0.7693333625793457, 0.7776666879653931, 0.7816666960716248, 0.7773333191871643, 0.7796666622161865, 0.7796666622161865, 0.7829999923706055, 0.7786666750907898, 0.7826666831970215, 0.7803333401679993, 0.7789999842643738, 0.7856666445732117, 0.781000018119812, 0.7836666703224182, 0.7799999713897705, 0.7799999713897705, 0.7833333611488342]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1], [3, 4, 0, 7, 8, 0, 7, 4, 3, 3, 3, 3, 2, 9, 6, 0, 6, 5, 7, 8, 7, 3, 4, 6, 9], [2, 2, 3, 1, 2, 1, 2, 2, 2, 0, 2, 1, 0, 1, 3, 0], [30, 8, 57, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7788571715354919, "mapping_values": [1, 41, 41, 25, 16, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 46, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, alpha), grad), tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, tf.math.multiply(grad, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, alpha))))))))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), grad)))), tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2913665671027994, 2.2654102500781503, 2.232954333439763, 2.1947103791532263, 2.139040356377695, 2.0652401395021034, 1.9690787674429362, 1.8533027132409927, 1.7205191105427036, 1.585715554724469, 1.4795795036832875, 1.369820158463648, 1.2976089454897013, 1.2332180572806286, 1.1754345746954213, 1.1396097976612518, 1.1012179318388864, 1.0702880617964774, 1.03322714668743, 1.0018036293473305, 0.9886446781382663, 0.9575195507508196, 0.9489161156313751, 0.920534694341227, 0.9070595830675003, 0.8953322733571233, 0.8843157739372238, 0.8724897533375684, 0.8607513318366032, 0.8468529020853487, 0.8431308950021865, 0.8319657530137151, 0.8168060195255493, 0.82493112556781, 0.8167550320150421, 0.7988072888190799, 0.7986899016713107, 0.7801176243296956, 0.7885559125819526, 0.7766641484291295, 0.7850416153570948, 0.7725719795754841, 0.76803743742429, 0.7585353046958756, 0.7608927422038411, 0.7495855545528404, 0.7455305721009995, 0.7443459259678014, 0.7366153784573527, 0.7298939523916077, 0.7198995303059015, 0.7158863700029794, 0.7226603310641327, 0.7139341764288839, 0.7066608545424649, 0.7120155883329797, 0.708717886144459], "accuracy": [0.12574297189712524, 0.18663319945335388, 0.26218464970588684, 0.31581032276153564, 0.3563597798347473, 0.39506009221076965, 0.42583543062210083, 0.4375908076763153, 0.4721965491771698, 0.5012547969818115, 0.5221238732337952, 0.5423325896263123, 0.5526350736618042, 0.5724474787712097, 0.59661865234375, 0.5978074073791504, 0.6139215230941772, 0.6230352520942688, 0.6343944072723389, 0.6452252268791199, 0.6518293619155884, 0.6509047746658325, 0.6642451286315918, 0.6736230254173279, 0.6725663542747498, 0.6770572066307068, 0.6824725866317749, 0.6844538450241089, 0.6946242451667786, 0.6929071545600891, 0.6935675740242004, 0.6970016956329346, 0.7084929347038269, 0.6989829540252686, 0.7033417224884033, 0.71100252866745, 0.7083608508110046, 0.7228899598121643, 0.7123233675956726, 0.7157574892044067, 0.7165499925613403, 0.7166820764541626, 0.7162858247756958, 0.722229540348053, 0.7141724824905396, 0.7269845604896545, 0.7288337349891663, 0.7284374833106995, 0.7322678565979004, 0.7250033020973206, 0.7354378700256348, 0.7317395210266113, 0.733588695526123, 0.7334566116333008, 0.7376832365989685, 0.7362303733825684, 0.7400607466697693], "val_loss": [1.9466426031930106, 1.920407772064209, 1.8880038261413574, 1.8442268371582031, 1.7834313937595911, 1.7010833535875594, 1.595024824142456, 1.4692087854657854, 1.3357745919908797, 1.2083075387137276, 1.1022088527679443, 1.0147419657026018, 0.9465712479182652, 0.8955026694706508, 0.8495669535228184, 0.8147623879568917, 0.7864758968353271, 0.7634960753577096, 0.7420114278793335, 0.7221300601959229, 0.7067680869783673, 0.6929280757904053, 0.6816902501242501, 0.6705129998070853, 0.662025945527213, 0.6505491392953056, 0.6426807812282017, 0.634743503161839, 0.6284244401114327, 0.6199526275907244, 0.6160640886851719, 0.6118095602308001, 0.6051361220223563, 0.6019628388541085, 0.595852153641837, 0.5926715135574341, 0.5874633959361485, 0.5812616859163556, 0.5798859085355487, 0.5748158693313599, 0.5739244733537946, 0.5705330201557705, 0.5665241820471627, 0.5627403429576329, 0.5595364400318691, 0.5571851560047695, 0.5548198052815029, 0.5516716071537563, 0.5483685220990863, 0.5461813722337995, 0.5442471504211426, 0.5417682102748326, 0.5398222208023071, 0.5370997190475464, 0.5350265843527657, 0.5322084256580898, 0.5318012407847813], "val_accuracy": [0.2356666624546051, 0.3636666536331177, 0.41100001335144043, 0.4583333432674408, 0.4970000088214874, 0.5236666798591614, 0.5479999780654907, 0.5743333101272583, 0.5879999995231628, 0.612333357334137, 0.6383333206176758, 0.6583333611488342, 0.6676666736602783, 0.6736666560173035, 0.6800000071525574, 0.6853333115577698, 0.6916666626930237, 0.6949999928474426, 0.6996666789054871, 0.703000009059906, 0.7093333601951599, 0.7139999866485596, 0.7183333039283752, 0.7203333377838135, 0.718666672706604, 0.7253333330154419, 0.7306666374206543, 0.7326666712760925, 0.7273333072662354, 0.7353333234786987, 0.7363333106040955, 0.734000027179718, 0.7416666746139526, 0.7433333396911621, 0.746999979019165, 0.7450000047683716, 0.7473333477973938, 0.753000020980835, 0.750333309173584, 0.7553333044052124, 0.7536666393280029, 0.7526666522026062, 0.7553333044052124, 0.7559999823570251, 0.7596666812896729, 0.7576666474342346, 0.7613333463668823, 0.7616666555404663, 0.7616666555404663, 0.7643333077430725, 0.7620000243186951, 0.7693333625793457, 0.765666663646698, 0.7683333158493042, 0.768666684627533, 0.7673333287239075, 0.7689999938011169]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1], [3, 4, 5, 7, 4, 0, 7, 4, 3, 6, 3, 3, 8, 6, 3, 2, 6, 5, 7, 8, 5, 5, 4, 6, 8, 2, 4], [2, 2, 3, 0, 2, 1, 0, 0, 2, 0, 2, 0, 2, 0, 1, 0, 0, 2], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7785714268684387, "mapping_values": [1, 38, 38, 22, 16, 7, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.negative(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.multiply(tf.math.add(alpha, grad), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.multiply(alpha, tf.math.multiply(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), grad))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.square(alpha))))))), tf.math.add(alpha, tf.math.square(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2913666030655544, 2.2654102185871214, 2.232954077039806, 2.1947107704607505, 2.139045830589197, 2.065251750275916, 1.9690938725872693, 1.8533282149910313, 1.7205566014942475, 1.5857778267853484, 1.4796322813406912, 1.3699008422426309, 1.2976738968073118, 1.233307062784411, 1.175483854848947, 1.1396807083254084, 1.101250609890534, 1.0703670439577184, 1.0332941525742332, 1.0019078822482956, 0.9887694189529913, 0.9576241409521943, 0.9489784431007198, 0.9205886670438101, 0.9071418582771149, 0.8953821693570811, 0.8843268789414953, 0.8725393350176949, 0.8607506502290302, 0.8469353023222204, 0.843173400679631, 0.8320394080029409, 0.8168990332547149, 0.8249570686567446, 0.8167609291195697, 0.7988839828972771, 0.7987243852925858, 0.780198249590474, 0.7885593037721172, 0.7767018117704381, 0.7850625390909477, 0.7725894043568717, 0.7681108489248809, 0.7585573277106894, 0.7608370454382856, 0.7496694410560532, 0.7455037774159183, 0.7442132176787326, 0.7367067309953848, 0.7299127480562069, 0.7199018575008032, 0.7159079717623008, 0.7226409900615149, 0.7140145259227231, 0.7067500742088613, 0.7120491626665435, 0.7088418975246108], "accuracy": [0.12574297189712524, 0.18663319945335388, 0.26218464970588684, 0.3156782388687134, 0.35662394762039185, 0.3949280083179474, 0.4259675145149231, 0.43785497546195984, 0.4721965491771698, 0.5011227130889893, 0.5226522088050842, 0.5423325896263123, 0.5526350736618042, 0.5720512270927429, 0.59661865234375, 0.5971469879150391, 0.6140536069869995, 0.6230352520942688, 0.6343944072723389, 0.6454893946647644, 0.6514331102371216, 0.6510368585586548, 0.6643772125244141, 0.6737551093101501, 0.6736230254173279, 0.67666095495224, 0.6822084188461304, 0.6840575933456421, 0.6944921612739563, 0.6922467350959778, 0.6933034062385559, 0.6973979473114014, 0.7088891863822937, 0.6992471218109131, 0.7028133869171143, 0.7104741930961609, 0.7086250185966492, 0.7232862114906311, 0.7127195596694946, 0.715889573097229, 0.7162858247756958, 0.7168141603469849, 0.7169462442398071, 0.7224937081336975, 0.7144366502761841, 0.7265883088111877, 0.7290979027748108, 0.7285695672035217, 0.7314753532409668, 0.724739134311676, 0.7351737022399902, 0.7321357727050781, 0.7341170310974121, 0.7326641082763672, 0.7371549606323242, 0.7362303733825684, 0.7400607466697693], "val_loss": [1.9466426031930106, 1.920407703944615, 1.8880036217825753, 1.8442321504865373, 1.783442565373012, 1.7010962963104248, 1.5950523785182409, 1.4692404951368059, 1.3358262947627477, 1.2083583218710763, 1.1022731917245048, 1.0148173400333949, 0.9466962133135114, 0.8955723898751395, 0.849623475755964, 0.8147996834346226, 0.7865022250584194, 0.7635177203587123, 0.7420309782028198, 0.7221605607441494, 0.70679886000497, 0.6929314477103097, 0.6817068713051933, 0.6705365862165179, 0.6620621340615409, 0.6505379165921893, 0.6427269833428519, 0.6347849028451102, 0.6283855608531407, 0.619928240776062, 0.616058315549578, 0.611716457775661, 0.6051209654126849, 0.60198404107775, 0.5958625759397235, 0.5926451172147479, 0.5874602283750262, 0.5813028982707432, 0.5798150641577584, 0.5747729880469186, 0.5739010572433472, 0.5704661778041294, 0.5665934596742902, 0.5627167224884033, 0.5594846521105085, 0.5571253980909076, 0.5548640489578247, 0.5517127684184483, 0.5484045233045306, 0.5461620943886893, 0.5442737000329154, 0.541718568120684, 0.5398340054920742, 0.5371188606534686, 0.5350358145577567, 0.5322896071842739, 0.5318900346755981], "val_accuracy": [0.2356666624546051, 0.3636666536331177, 0.41100001335144043, 0.4583333432674408, 0.4970000088214874, 0.5236666798591614, 0.5479999780654907, 0.5743333101272583, 0.5879999995231628, 0.612333357334137, 0.6383333206176758, 0.6586666703224182, 0.6683333516120911, 0.6733333468437195, 0.6803333163261414, 0.6853333115577698, 0.6916666626930237, 0.6949999928474426, 0.7003333568572998, 0.7023333311080933, 0.7093333601951599, 0.7136666774749756, 0.7179999947547913, 0.7196666598320007, 0.7183333039283752, 0.7256666421890259, 0.7303333282470703, 0.7326666712760925, 0.7273333072662354, 0.7353333234786987, 0.7363333106040955, 0.734000027179718, 0.7423333525657654, 0.7433333396911621, 0.746666669845581, 0.7450000047683716, 0.7473333477973938, 0.7526666522026062, 0.75, 0.7553333044052124, 0.7540000081062317, 0.7526666522026062, 0.7546666860580444, 0.7553333044052124, 0.7596666812896729, 0.7576666474342346, 0.7613333463668823, 0.7620000243186951, 0.7609999775886536, 0.7646666765213013, 0.762333333492279, 0.7689999938011169, 0.765333354473114, 0.768666684627533, 0.7680000066757202, 0.7663333415985107, 0.7683333158493042]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0], [2, 4, 0, 7, 8, 0, 7, 4, 3, 3, 3, 2, 2, 9, 8, 2, 6, 5, 7, 5, 7, 0, 4, 6, 5, 2], [2, 2, 3, 1, 1, 3, 2, 3, 1, 3, 1, 2, 2, 2, 3, 0], [71, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7785714268684387, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2913666030655544, 2.2654102500781503, 2.232954283967356, 2.1947097538043763, 2.139039420684756, 2.0652371977991386, 1.9690755105462638, 1.8532928836627518, 1.7205061836170876, 1.5857048855954, 1.4795606345894818, 1.3698417021850033, 1.297656880031566, 1.2332779993990142, 1.17545067420048, 1.1396622432142658, 1.101234853322779, 1.0703199176173626, 1.0332551206091942, 1.0018694430782558, 0.9887156827244162, 0.9575733291616277, 0.9489640571878665, 0.9205759777258794, 0.9071053693464891, 0.895379903916087, 0.8843472812941298, 0.8724414006893141, 0.8607703431360222, 0.8468481609220155, 0.8431686468175406, 0.8319711567797854, 0.8168765682082024, 0.8249738605156897, 0.8167044448421112, 0.7987749769057517, 0.7986644522987257, 0.7800704525241667, 0.7885620431452222, 0.7767363817479869, 0.7850764597553413, 0.7726388804948152, 0.7680237971323985, 0.7585571630913364, 0.760900236202694, 0.7497638249835004, 0.7456030203854923, 0.7442650746801636, 0.7366125584514684, 0.7299038424877332, 0.7198578846720719, 0.7157064980724311, 0.7226528687137639, 0.7139782436283556, 0.7066713323950248, 0.7119862759480182, 0.7087310788386124], "accuracy": [0.12574297189712524, 0.18663319945335388, 0.26218464970588684, 0.31581032276153564, 0.35662394762039185, 0.3949280083179474, 0.42583543062210083, 0.4375908076763153, 0.47193238139152527, 0.5012547969818115, 0.5221238732337952, 0.5423325896263123, 0.5526350736618042, 0.5719191431999207, 0.5963544845581055, 0.5971469879150391, 0.6139215230941772, 0.6227710843086243, 0.6345264911651611, 0.6454893946647644, 0.6519614458084106, 0.650640606880188, 0.6643772125244141, 0.6741513609886169, 0.6732267737388611, 0.6767930388450623, 0.6824725866317749, 0.6843217611312866, 0.6944921612739563, 0.6927750706672668, 0.6934354901313782, 0.6964733600616455, 0.7086250185966492, 0.6993792057037354, 0.7029454708099365, 0.7112666964530945, 0.7082287669181824, 0.7231541275978088, 0.7120591998100281, 0.7154933214187622, 0.7168141603469849, 0.7161537408828735, 0.7160216569900513, 0.7219653725624084, 0.7143045663833618, 0.7265883088111877, 0.7289658188819885, 0.728701651096344, 0.7313432693481445, 0.7250033020973206, 0.7357020378112793, 0.7317395210266113, 0.7337207794189453, 0.7333245277404785, 0.7376832365989685, 0.7366266250610352, 0.739928662776947], "val_loss": [1.9466426031930106, 1.920407772064209, 1.8880036899021693, 1.844226292201451, 1.7834297588893346, 1.7010795048304967, 1.595015491758074, 1.469195978982108, 1.3357578686305456, 1.2082714012690954, 1.102212837764195, 1.0147578035082137, 0.9466593946729388, 0.8955458232334682, 0.8496149437768119, 0.814790163721357, 0.7865017822810582, 0.7635072469711304, 0.7419950451169696, 0.722136105809893, 0.7067696877888271, 0.6929111480712891, 0.681686452456883, 0.6705257381711688, 0.6620268481118339, 0.6505062920706612, 0.6427035672324044, 0.6348026650292533, 0.6284255300249372, 0.6199836560658046, 0.6160691976547241, 0.6116923264094761, 0.6051238604954311, 0.6018852846963065, 0.5958492074693952, 0.5926205941608974, 0.5875035864966256, 0.581255282674517, 0.5798441001347133, 0.5747580187661308, 0.5738286801746914, 0.5704513788223267, 0.5664882489613124, 0.5627704518181937, 0.5594662938799176, 0.5570965664727348, 0.5549011911664691, 0.5517458915710449, 0.5484037228993007, 0.5461853061403547, 0.544242433139256, 0.5417284624917167, 0.5397885526929583, 0.537102494921003, 0.5349527938025338, 0.5321660041809082, 0.5318880251475743], "val_accuracy": [0.2356666624546051, 0.3636666536331177, 0.41100001335144043, 0.4586666524410248, 0.4970000088214874, 0.5236666798591614, 0.5479999780654907, 0.5743333101272583, 0.5883333086967468, 0.6119999885559082, 0.637666642665863, 0.6579999923706055, 0.6683333516120911, 0.6736666560173035, 0.6803333163261414, 0.6853333115577698, 0.6916666626930237, 0.6949999928474426, 0.6993333101272583, 0.7026666402816772, 0.7093333601951599, 0.7136666774749756, 0.7179999947547913, 0.7196666598320007, 0.7183333039283752, 0.7253333330154419, 0.7306666374206543, 0.7326666712760925, 0.7276666760444641, 0.7356666922569275, 0.7369999885559082, 0.734000027179718, 0.7419999837875366, 0.7436666488647461, 0.7463333606719971, 0.7450000047683716, 0.746999979019165, 0.753333330154419, 0.749666690826416, 0.7549999952316284, 0.7540000081062317, 0.753333330154419, 0.7549999952316284, 0.7553333044052124, 0.7606666684150696, 0.7580000162124634, 0.7620000243186951, 0.7613333463668823, 0.7616666555404663, 0.7649999856948853, 0.762333333492279, 0.7693333625793457, 0.765333354473114, 0.768666684627533, 0.7683333158493042, 0.7663333415985107, 0.768666684627533]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [3, 4, 0, 7, 8, 0, 7, 4, 3, 3, 3, 3, 2, 9, 8, 0, 6, 5, 7, 8, 7, 3, 4, 6, 9], [2, 2, 3, 1, 2, 1, 2, 0, 2, 0, 2, 2, 0, 0, 3], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7777143120765686, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2913665356117705, 2.2654101870960925, 2.232953964585342, 2.1947108199331566, 2.1390469102276284, 2.0652510304539793, 1.969089538713157, 1.8533205583410146, 1.7205443749291125, 1.585752590851084, 1.479615887016621, 1.3698653542937194, 1.2976264213574105, 1.2332522398476682, 1.175466411889363, 1.1396441514135243, 1.101245841550443, 1.0703178947596361, 1.033254950321456, 1.0018712971361952, 0.9887270755015817, 0.9575917922809628, 0.9489773531253579, 0.9205989749550332, 0.907108469614657, 0.8953950753017991, 0.8843480294028828, 0.8724707399203777, 0.860660505206625, 0.8468719116842521, 0.8431679947721707, 0.8319458009119378, 0.8168310527992979, 0.8249657545123102, 0.8166898630078222, 0.7988019929963837, 0.7987263073554018, 0.7801080964512561, 0.7885937868895359, 0.7767113031507751, 0.7850658841152642, 0.7726425257231093, 0.7680494581246972, 0.758704834956818, 0.7609581900090117, 0.7496159053387312, 0.7455076032767537, 0.744368509680383, 0.7366666182582373, 0.7299596195239212, 0.719939262434602, 0.7158428305380411, 0.7227195270577002, 0.7139398262894716, 0.7066039886645921, 0.7119969110116667, 0.7087787041858108], "accuracy": [0.12574297189712524, 0.18663319945335388, 0.26218464970588684, 0.31581032276153564, 0.35662394762039185, 0.3947959244251251, 0.42583543062210083, 0.43785497546195984, 0.4721965491771698, 0.5012547969818115, 0.5222559571266174, 0.54220050573349, 0.5526350736618042, 0.572579562664032, 0.5967507362365723, 0.5976753234863281, 0.6140536069869995, 0.6229031682014465, 0.6342623233795166, 0.6453573107719421, 0.6516972780227661, 0.6510368585586548, 0.6642451286315918, 0.6738871932029724, 0.6733588576316833, 0.6770572066307068, 0.6823405027389526, 0.6847180128097534, 0.6950204968452454, 0.6923788189888, 0.6930392384529114, 0.6968696117401123, 0.7083608508110046, 0.6991150379180908, 0.7030775547027588, 0.7112666964530945, 0.7087571024894714, 0.7234182953834534, 0.7123233675956726, 0.7157574892044067, 0.7164179086685181, 0.7164179086685181, 0.7165499925613403, 0.722757875919342, 0.7145687341690063, 0.7271166443824768, 0.7284374833106995, 0.7289658188819885, 0.7314753532409668, 0.7252674698829651, 0.7351737022399902, 0.7323999404907227, 0.733588695526123, 0.7334566116333008, 0.737022876739502, 0.7358341217041016, 0.7401928305625916], "val_loss": [1.9466426031930106, 1.920407703944615, 1.8880035536629813, 1.844233853476388, 1.783442565373012, 1.7010937758854456, 1.5950422286987305, 1.4692288466862269, 1.335815191268921, 1.2083310059138708, 1.1022436618804932, 1.014765841620309, 0.946601118360247, 0.8955435752868652, 0.8496036529541016, 0.8147728783743722, 0.7864716053009033, 0.7634891271591187, 0.7420017548969814, 0.7221327679497855, 0.7067673206329346, 0.6929024117333549, 0.6816843577793666, 0.6705375398908343, 0.6620665618351528, 0.6505984749112811, 0.6426988840103149, 0.6347630023956299, 0.6283857141222272, 0.6199248007365635, 0.6160557270050049, 0.6117325680596488, 0.6051028626305717, 0.6019520248685565, 0.5957772050585065, 0.592585836138044, 0.5874299832752773, 0.5811953374317714, 0.579903210912432, 0.5747242314474923, 0.573814834867205, 0.5704525368554252, 0.5664823395865304, 0.5627231257302421, 0.5595720325197492, 0.557205046926226, 0.5549857786723545, 0.5517316545758929, 0.548385603087289, 0.5461213759013585, 0.5442015443529401, 0.541617614882333, 0.539782200540815, 0.5371016774858747, 0.5350091287067958, 0.5322446652821132, 0.5318895408085415], "val_accuracy": [0.2356666624546051, 0.3636666536331177, 0.41100001335144043, 0.4583333432674408, 0.4970000088214874, 0.5236666798591614, 0.5479999780654907, 0.5743333101272583, 0.5879999995231628, 0.612333357334137, 0.6383333206176758, 0.6583333611488342, 0.6676666736602783, 0.6736666560173035, 0.6800000071525574, 0.6853333115577698, 0.6916666626930237, 0.6949999928474426, 0.699999988079071, 0.70333331823349, 0.7093333601951599, 0.7136666774749756, 0.7179999947547913, 0.7196666598320007, 0.7183333039283752, 0.7256666421890259, 0.7300000190734863, 0.7329999804496765, 0.7269999980926514, 0.7353333234786987, 0.7366666793823242, 0.734000027179718, 0.7419999837875366, 0.7443333268165588, 0.746666669845581, 0.7443333268165588, 0.746999979019165, 0.753333330154419, 0.7490000128746033, 0.7556666731834412, 0.7536666393280029, 0.7523333430290222, 0.7553333044052124, 0.7556666731834412, 0.7593333125114441, 0.7580000162124634, 0.762333333492279, 0.7620000243186951, 0.7616666555404663, 0.7643333077430725, 0.762333333492279, 0.768666684627533, 0.765333354473114, 0.768666684627533, 0.7683333158493042, 0.7666666507720947, 0.7683333158493042]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [3, 4, 4, 7, 8, 0, 7, 0, 3, 3, 3, 5, 8, 9, 8, 2, 6, 5, 2, 8, 7, 2, 4, 9], [2, 2, 3, 1, 2, 1, 2, 0, 2, 0, 2, 2, 0, 0, 3], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [5, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.6548571586608887, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2719878011045203, 2.015497937162775, 1.4552845885299845, 1.1937859560268398, 0.934153941368556, 0.8333065688429003, 0.8221279818226617, 0.7875799475927332, 0.7620165855530908, 0.724770098094061, 0.6884055893261514, 0.6603717361584851, 0.6229763303875624, 0.6229979152047104, 0.5873273803557639, 0.5872468702655506, 0.5641623482318713, 0.5337852547039933, 0.5428057764625474, 0.5149101599403392, 0.5017069091673745, 0.4899871664008822, 0.4923002188074401, 0.4931117602036126, 0.46400901466989874, 0.4668944493071939, 0.46391267893635885, 0.453948282137397, 0.4420910926582224, 0.42638252367905305, 0.4259888535288457, 0.4203801551326202, 0.41466858735048007, 0.4002262693409749, 0.3994149358997476, 0.38810916680543966, 0.3919236146070072, 0.39299261630203397, 0.392787905751659, 0.3827813434137912, 0.37534010905111626, 0.363328215299171, 0.3729424296534214, 0.347876262430974, 0.3483922809712749, 0.36372350755620864, 0.34078201915310546, 0.33919713121946254], "accuracy": [0.17580240964889526, 0.37907806038856506, 0.5061418414115906, 0.6004490852355957, 0.6540747880935669, 0.6913221478462219, 0.7020208835601807, 0.6964733600616455, 0.715889573097229, 0.7186633348464966, 0.7420420050621033, 0.7436270117759705, 0.7648923397064209, 0.7623828053474426, 0.7744023203849792, 0.7714964747428894, 0.7862898111343384, 0.7955356240272522, 0.7932901978492737, 0.7977809906005859, 0.8035926818847656, 0.8141592741012573, 0.8128384351730347, 0.8141592741012573, 0.8230088353157043, 0.8215559124946594, 0.8203672170639038, 0.8239334225654602, 0.8293488025665283, 0.8384625315666199, 0.8352925777435303, 0.8350284099578857, 0.8433496356010437, 0.8418967127799988, 0.8469158411026001, 0.8455950617790222, 0.844010055065155, 0.8506141901016235, 0.8451988101005554, 0.8557654023170471, 0.852331280708313, 0.8558974862098694, 0.8622375130653381, 0.8628978729248047, 0.8589354157447815, 0.8593316674232483, 0.8704266548156738, 0.8643507957458496], "val_loss": [1.8677870205470495, 1.3033546039036341, 0.8165295464651925, 0.6885521922792707, 0.680743966783796, 0.6222567728587559, 0.6101768016815186, 0.5924180746078491, 0.5763800655092511, 0.5445325885500226, 0.5069655179977417, 0.47563263348170687, 0.49461562292916433, 0.4809788295200893, 0.4615522963660104, 0.4614753723144531, 0.4425468444824219, 0.4324858954974583, 0.4278515407017299, 0.4211341312953404, 0.4230161564690726, 0.42157346861703054, 0.41555438722882954, 0.4139395611626761, 0.40062229122434345, 0.4014573948723929, 0.4068030204091753, 0.3967066832951137, 0.3847152165004185, 0.3906045045171465, 0.3994509407452175, 0.4009260960987636, 0.39695606912885395, 0.38527508292879376, 0.37714909655707224, 0.38069967712674824, 0.3881787657737732, 0.3963690229824611, 0.39343985489436556, 0.3856721350124904, 0.39284173931394306, 0.40388921328953337, 0.39504983595439364, 0.3852754235267639, 0.4011270489011492, 0.40159159898757935, 0.39595368930271696, 0.41677337884902954], "val_accuracy": [0.4033333361148834, 0.5653333067893982, 0.637333333492279, 0.6800000071525574, 0.7366666793823242, 0.7253333330154419, 0.7229999899864197, 0.7390000224113464, 0.7450000047683716, 0.7580000162124634, 0.768666684627533, 0.7870000004768372, 0.7766666412353516, 0.7889999747276306, 0.8040000200271606, 0.8056666851043701, 0.8036666512489319, 0.8063333630561829, 0.8143333196640015, 0.8206666707992554, 0.8243333101272583, 0.8176666498184204, 0.8190000057220459, 0.824999988079071, 0.8316666483879089, 0.8270000219345093, 0.8356666564941406, 0.8376666903495789, 0.8456666469573975, 0.8510000109672546, 0.840666651725769, 0.8453333377838135, 0.8463333249092102, 0.8536666631698608, 0.8526666760444641, 0.8503333330154419, 0.8533333539962769, 0.8529999852180481, 0.8543333411216736, 0.8579999804496765, 0.8566666841506958, 0.8546666502952576, 0.8613333106040955, 0.8560000061988831, 0.8566666841506958, 0.859333336353302, 0.859666645526886, 0.8566666841506958]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1], [9, 2, 8, 7, 8, 4, 2, 5, 7, 3, 7, 0, 7, 9, 1, 2, 8, 8, 1, 8, 5, 6, 0, 8], [2, 2, 3, 1, 1, 3, 2, 3, 0, 3, 2, 0, 3], [49], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [4, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.22457142174243927, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.188261433426163, 2.3048591576295205, 2.303363495908472, 2.302605598137568, 2.290436073427171, 2.2353116772225534, 2.3047363185265346, 2.3035586702510304, 2.3034765769808345, 2.3032892602168022], "accuracy": [0.1744815707206726, 0.09998679161071777, 0.09708096832036972, 0.09879804402589798, 0.13498876988887787, 0.21093647181987762, 0.09708096832036972, 0.09998679161071777, 0.09642054885625839, 0.09325055778026581], "val_loss": [1.9762571879795618, 1.973930903843471, 1.9734881946018763, 1.9724406514848982, 1.7859580176217216, 1.9762673377990723, 1.9742237499782018, 1.97377347946167, 1.973881449018206, 1.9736850602286202], "val_accuracy": [0.09833333641290665, 0.09933333098888397, 0.09966666996479034, 0.10000000149011612, 0.22433333098888397, 0.10000000149011612, 0.09799999743700027, 0.10066666454076767, 0.09700000286102295, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [3, 4, 0, 7, 8, 0, 7, 4, 3, 3, 3, 3, 2, 9, 8, 0, 6, 5, 7, 8, 7, 3, 4, 6, 9], [2, 2, 3, 1, 2, 1, 2, 0, 2, 0, 2, 2, 0, 0, 3], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.1948571354150772, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.306666230040613, 2.3272193863785198, 2.4127394292395836, 2.568513551644519, 2.744648072319953, 2.9858555191338825], "accuracy": [0.16589617729187012, 0.1472724825143814, 0.1286487877368927, 0.11293092370033264, 0.09457138925790787, 0.10077928751707077], "val_loss": [1.956484590257917, 2.052011013031006, 2.162631102970668, 2.3111802509852817, 2.5069564410618375, 2.7530409949166432], "val_accuracy": [0.21400000154972076, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1], [3, 4, 0, 7, 8, 0, 7, 4, 3, 1, 3, 3, 8, 6, 8, 2, 6, 5, 7, 8, 5, 5, 4, 6, 8, 2, 4], [2, 2, 3, 2, 1, 2, 2, 2, 0, 3, 2, 0, 1, 2, 3, 0], [49, 65], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10542856901884079, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3021376205709365, 2.3024350659659256, 2.3004611407320152, 2.300759681038585, 2.300517868450872, 2.300194107262749, 2.3003158767099596, 2.3015678851926613, 2.3011716336401586, 2.2997705411791345, 2.3013510726084245, 2.300671056497524, 2.3006848824447754, 2.300895598050925, 2.301010438023211, 2.3010730765137013, 2.3012568084334872], "accuracy": [0.09800554811954498, 0.09087307006120682, 0.09655263274908066, 0.09589222073554993, 0.09840179979801178, 0.09496764093637466, 0.09893012791872025, 0.09074098616838455, 0.09470347315073013, 0.09932637959718704, 0.1018359512090683, 0.10394927859306335, 0.10117553919553757, 0.10408136248588562, 0.09906221181154251, 0.10276053100824356, 0.1026284471154213], "val_loss": [1.9709907940455846, 1.9707856178283691, 1.9706380026681083, 1.970573834010533, 1.9705849375043596, 1.9706579617091589, 1.9707983561924525, 1.9710113661629813, 1.9712750571114677, 1.9715398379734583, 1.9717971256801061, 1.9720244407653809, 1.9722279139927454, 1.9724038669041224, 1.97254855292184, 1.9726801599775041, 1.972797053200858], "val_accuracy": [0.04633333161473274, 0.052666667848825455, 0.05833333358168602, 0.06499999761581421, 0.07400000095367432, 0.08100000023841858, 0.08833333104848862, 0.0949999988079071, 0.09933333098888397, 0.10100000351667404, 0.10066666454076767, 0.10166666656732559, 0.0976666659116745, 0.09600000083446503, 0.09799999743700027, 0.09600000083446503, 0.09166666865348816]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [3, 4, 0, 7, 8, 0, 7, 4, 3, 3, 3, 3, 8, 9, 8, 2, 6, 5, 7, 8, 7, 3, 4, 6], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [0, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 3, 1, 1, 0, 0, 4, 2, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1615.8890613731753, 28688.398451946574, 131256.44290714568, 368435.26203605864, 773290.7400607582, 1409545.0583146217], "accuracy": [0.09760929644107819, 0.10011887550354004, 0.1010434553027153, 0.10315678268671036, 0.10355303436517715, 0.09826971590518951], "val_loss": [5976.017438616072, 46012.28571428572, 153558.1205357143, 362050.4910714286, 704927.8928571428, 1215628.5714285714], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [3, 4, 0, 7, 8, 0, 7, 4, 3, 3, 3, 3, 8, 9, 8, 2, 6, 5, 7, 8, 7, 3, 4, 6], [2, 2, 3, 1, 2, 1, 2, 0, 2, 0, 2, 2, 0, 0, 3], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [5, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 7, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [12.16537573271109, 2.545996444478184, 2.5130830516495237, 364946916.252558, 2.310859258920289, 2.3048409903920195, 136979476865743.08], "accuracy": [0.09325055778026581, 0.10130762308835983, 0.09906221181154251, 0.09021265059709549, 0.09668471664190292, 0.09509972482919693, 0.09259014576673508], "val_loss": [2.0004581042698453, 1.9851879392351424, 1036.1451241629463, 1.9849929128374373, 1.9764759199959892, 82221243245.71428, 1.981067180633545], "val_accuracy": [0.10066666454076767, 0.10199999809265137, 0.03400000184774399, 0.10199999809265137, 0.10199999809265137, 0.09799999743700027, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], [3, 4, 4, 7, 8, 0, 7, 4, 8, 3, 3, 3, 2, 9, 8, 0, 6, 4, 7, 8, 7, 3, 4, 6, 9, 4, 1, 5], [2, 2, 3, 1, 2, 1, 1, 0, 2, 0, 2, 2, 0, 0, 3, 1, 0, 2], [49, 8, 39, 25, 31, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 6, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 46, 46, 28, 18, 7, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.negative(grad))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.sqrt(grad), tf.math.add(alpha, alpha)))))), tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha))))), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))))), tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(grad, tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.subtract(alpha, tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))))))))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10500594228506088, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 7], [88, 19], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07660810649394989, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9, 2, 7, 2, 0, 6, 5, 8, 9, 0], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [1, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 49, 49, 33, 16, 7, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 12, 7, 5, 2], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, grad), grad), alpha))), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.sqrt(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))), tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.add(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))))))))), tf.math.add(tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.sqrt(tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))), grad))), tf.math.negative(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(beta), tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1], [9, 2, 8, 7, 8, 4, 2, 5, 7, 3, 7, 0, 7, 9, 1, 2, 8, 8, 1, 8, 5, 6, 0, 8], [2, 2, 3, 1, 1, 3, 2, 3, 0, 3, 2, 0, 3], [49], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [5, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 3, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07660810649394989, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [3, 2, 9, 7, 8, 0, 7, 2, 3, 3, 3, 3, 2, 9, 8, 5, 6, 5, 7, 3, 7, 3, 4, 6, 9, 3], [2, 2, 1, 1, 2, 0, 2, 0, 2, 0, 2, 2, 0, 0, 3, 3], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [8, 3, 0, 4, 7, 8, 4], [3, 2, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 42, 42, 26, 16, 8, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.negative(grad))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(tf.math.multiply(alpha, tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), grad)), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(tf.math.multiply(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))))))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(sigma, beta))", "other_info": {"loss": [2.3023258277123175, 2.303171621101439, 2.30111423368231, 2.301998469587393, 2.3016261983273636, 2.3014825960239165], "accuracy": [0.09721305221319199, 0.08796724677085876, 0.09272222965955734, 0.09153348207473755, 0.09391097724437714, 0.0944393053650856], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1], [9, 2, 8, 7, 8, 4, 2, 5, 7, 3, 7, 0, 7, 9, 1, 2, 8, 8, 1, 8, 5, 6, 0, 8], [1, 2, 3, 1, 1, 3, 2, 3, 0, 3, 2, 0, 3], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [5, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 1, 0, 1, 3, 3], [45, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3023258277123175, 2.303171621101439, 2.30111423368231, 2.301998469587393, 2.3016261983273636, 2.3014825960239165], "accuracy": [0.09721305221319199, 0.08796724677085876, 0.09272222965955734, 0.09153348207473755, 0.09391097724437714, 0.0944393053650856], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [1, 2, 3, 1, 2, 1, 2, 0, 2, 0, 2, 2, 0, 0, 1, 0, 0, 2], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 8, 3, 2, 3, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(tf.math.square(tf.math.add(beta, tf.math.square(grad))), tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3023258277123175, 2.303171621101439, 2.30111423368231, 2.301998469587393, 2.3016261983273636, 2.3014825960239165], "accuracy": [0.09721305221319199, 0.08796724677085876, 0.09272222965955734, 0.09153348207473755, 0.09391097724437714, 0.0944393053650856], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [3, 4, 0, 7, 8, 0, 7, 4, 3, 5, 3, 3, 8, 6, 8, 2, 6, 5, 7, 8, 5, 5, 4, 6, 8, 2, 4], [2, 2, 3, 1, 2, 1, 2, 0, 2, 0, 2, 2, 0, 0, 1, 0, 0, 2], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [5, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 3, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, sigma))", "other_info": {"loss": [2.3023258277123175, 2.303171621101439, 2.30111423368231, 2.301998469587393, 2.3016261983273636, 2.3014825960239165], "accuracy": [0.09721305221319199, 0.08796724677085876, 0.09272222965955734, 0.09153348207473755, 0.09391097724437714, 0.0944393053650856], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]