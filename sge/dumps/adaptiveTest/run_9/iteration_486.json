[{"genotype": [[0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 6, 1, 3, 6, 0, 4, 9, 3, 3, 1, 4, 3, 4, 3, 4, 2, 1, 7, 5, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [10, 40, 16, 37, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8431428670883179, "mapping_values": [1, 48, 48, 28, 20, 12, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 53, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.divide_no_nan(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), grad), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.negative(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), alpha)), tf.math.add(alpha, tf.math.pow(grad, tf.math.multiply(tf.math.pow(tf.math.multiply(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.add(grad, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))))), alpha))), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, grad)))))))), tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.288639783859253, 1.8185653686523438, 1.4200557470321655, 1.1502670049667358, 0.9278075695037842, 0.9117667078971863, 0.8605647683143616, 0.7707273364067078, 0.7093520760536194, 0.6884570717811584, 0.6740202307701111, 0.6337239742279053, 0.6253883838653564, 0.6079503893852234, 0.5931251049041748, 0.5709201693534851, 0.5672767758369446, 0.5380717515945435, 0.5411102175712585, 0.5375324487686157, 0.508499026298523, 0.5270596742630005, 0.4930732250213623, 0.4779380261898041, 0.48219427466392517, 0.47384557127952576, 0.4601798355579376, 0.4527948498725891, 0.4295847713947296, 0.434841126203537, 0.42954549193382263, 0.43852561712265015, 0.4180092513561249, 0.4304826855659485, 0.4040936529636383, 0.3892103135585785, 0.3891245126724243, 0.3708936274051666, 0.3970894515514374, 0.378585547208786, 0.37495800852775574, 0.37471261620521545], "accuracy": [0.2852991819381714, 0.3793422281742096, 0.5077268481254578, 0.565711259841919, 0.6539427042007446, 0.6507726907730103, 0.6763967871665955, 0.7074362635612488, 0.722229540348053, 0.7383436560630798, 0.7452120184898376, 0.7627789974212646, 0.7589486241340637, 0.7729493975639343, 0.7733456492424011, 0.7845727205276489, 0.7841764688491821, 0.7947431206703186, 0.8004226684570312, 0.8013472557067871, 0.8131026029586792, 0.8041210174560547, 0.8224804997444153, 0.8197067975997925, 0.8216879963874817, 0.8214238286018372, 0.8290846943855286, 0.8317263126373291, 0.8401796221733093, 0.8354246616363525, 0.8445383906364441, 0.8407079577445984, 0.8482366800308228, 0.8385946154594421, 0.8507462739944458, 0.8577466607093811, 0.8565579056739807, 0.8663320541381836, 0.8518029451370239, 0.86118084192276, 0.8609166741371155, 0.8589354157447815], "val_loss": [1.5527424812316895, 1.3002732992172241, 1.1533399820327759, 0.9006760120391846, 0.8714118599891663, 0.714841902256012, 0.6704243421554565, 0.6249590516090393, 0.6315117478370667, 0.6213771104812622, 0.5865545868873596, 0.5563254356384277, 0.5717572569847107, 0.5213149785995483, 0.5441329479217529, 0.5166022777557373, 0.5254092812538147, 0.4928026497364044, 0.47507941722869873, 0.4992600977420807, 0.5024475455284119, 0.4881531894207001, 0.4481174647808075, 0.4519214332103729, 0.45090019702911377, 0.4669136106967926, 0.414417564868927, 0.422406405210495, 0.4182093143463135, 0.42555883526802063, 0.43777668476104736, 0.40040135383605957, 0.44688114523887634, 0.4126148223876953, 0.40902242064476013, 0.3822776675224304, 0.3795851171016693, 0.3880902826786041, 0.43075457215309143, 0.40040144324302673, 0.391780287027359, 0.40275242924690247], "val_accuracy": [0.4440000057220459, 0.5220000147819519, 0.5583333373069763, 0.653333306312561, 0.6596666574478149, 0.718999981880188, 0.7379999756813049, 0.7583333253860474, 0.7540000081062317, 0.7493333220481873, 0.7703333497047424, 0.7699999809265137, 0.7900000214576721, 0.7946666479110718, 0.7799999713897705, 0.7919999957084656, 0.7710000276565552, 0.7913333177566528, 0.8100000023841858, 0.7976666688919067, 0.8090000152587891, 0.8023333549499512, 0.8270000219345093, 0.8226666450500488, 0.8146666884422302, 0.8166666626930237, 0.8416666388511658, 0.8410000205039978, 0.8450000286102295, 0.8383333086967468, 0.8330000042915344, 0.846666693687439, 0.8259999752044678, 0.843666672706604, 0.8376666903495789, 0.8536666631698608, 0.8556666374206543, 0.8553333282470703, 0.8386666774749756, 0.8486666679382324, 0.8510000109672546, 0.8399999737739563]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 2, 8, 3, 6, 0, 4, 9, 3, 3, 2, 4, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 2, 2, 0, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 40, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [1, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8357142806053162, "mapping_values": [1, 47, 47, 26, 21, 12, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.pow(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(grad, tf.math.multiply(tf.math.pow(tf.math.multiply(tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), tf.math.square(grad)), tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.pow(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))))), grad), grad))))))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, alpha), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.288797378540039, 1.8097927570343018, 1.551331877708435, 1.19655442237854, 0.9961884021759033, 0.8852213621139526, 0.811388373374939, 0.7750247120857239, 0.7307134866714478, 0.6826061010360718, 0.6828674077987671, 0.6514130234718323, 0.6267704963684082, 0.6317593455314636, 0.5834892392158508, 0.5952283143997192, 0.5834344625473022, 0.5513192415237427, 0.5543839931488037, 0.5470084547996521, 0.512564480304718, 0.5488369464874268, 0.5061681270599365, 0.48909443616867065, 0.4889177680015564, 0.4835462272167206, 0.4583796560764313, 0.46260887384414673, 0.4426603317260742, 0.4526592195034027, 0.4456920623779297, 0.4425537586212158, 0.42779844999313354, 0.4327608048915863, 0.4229750633239746, 0.39804697036743164], "accuracy": [0.2852991819381714, 0.3875313699245453, 0.49372607469558716, 0.5629374980926514, 0.6305639743804932, 0.663848876953125, 0.6914542317390442, 0.7036058902740479, 0.717870831489563, 0.7428345084190369, 0.7384757399559021, 0.7580240368843079, 0.759080708026886, 0.76106196641922, 0.7798177003860474, 0.774798572063446, 0.7771760821342468, 0.7891955971717834, 0.7950072884559631, 0.7989697456359863, 0.8072909712791443, 0.7950072884559631, 0.8166688680648804, 0.8198388814926147, 0.8201030492782593, 0.8137630224227905, 0.8321225643157959, 0.8309338092803955, 0.8341038227081299, 0.8354246616363525, 0.8391229510307312, 0.8360850811004639, 0.844010055065155, 0.8399154543876648, 0.8469158411026001, 0.8519350290298462], "val_loss": [1.5529659986495972, 1.2915525436401367, 1.5298011302947998, 1.1262623071670532, 0.843553364276886, 0.7295534014701843, 0.7364758849143982, 0.6498812437057495, 0.633020281791687, 0.622990071773529, 0.5791288018226624, 0.5843318104743958, 0.5645750761032104, 0.5143052935600281, 0.5665835738182068, 0.582733690738678, 0.5175389647483826, 0.4917750656604767, 0.472929984331131, 0.5040035247802734, 0.48700353503227234, 0.5059854388237, 0.45262694358825684, 0.4406796097755432, 0.44424673914909363, 0.4630638062953949, 0.4191713333129883, 0.43934378027915955, 0.4184514880180359, 0.42886972427368164, 0.4100801944732666, 0.39966675639152527, 0.43604016304016113, 0.43275517225265503, 0.4109067916870117, 0.4317593574523926], "val_accuracy": [0.45100000500679016, 0.531000018119812, 0.46000000834465027, 0.518666684627533, 0.6416666507720947, 0.7106666564941406, 0.7243333458900452, 0.7379999756813049, 0.7493333220481873, 0.7406666874885559, 0.7723333239555359, 0.7576666474342346, 0.781333327293396, 0.7929999828338623, 0.7793333530426025, 0.7616666555404663, 0.7753333449363708, 0.7910000085830688, 0.8100000023841858, 0.7923333048820496, 0.8169999718666077, 0.7893333435058594, 0.8213333487510681, 0.828000009059906, 0.8173333406448364, 0.8166666626930237, 0.8403333425521851, 0.8296666741371155, 0.8320000171661377, 0.8353333473205566, 0.8516666889190674, 0.8510000109672546, 0.831333339214325, 0.8336666822433472, 0.840666651725769, 0.8309999704360962]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 6, 8, 2, 9, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 2, 2, 0, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 40, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8342857360839844, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2885396480560303, 1.8196362257003784, 1.3606294393539429, 1.213922381401062, 0.944210946559906, 0.8711335062980652, 0.7910100221633911, 0.7708323001861572, 0.7773975133895874, 0.6983475685119629, 0.6811122298240662, 0.6452502608299255, 0.6316199898719788, 0.617970883846283, 0.5971359610557556, 0.5742897391319275, 0.5843784809112549, 0.5469968914985657, 0.5488047003746033, 0.5422542095184326, 0.5065068602561951, 0.5488695502281189, 0.5046507716178894, 0.4812067449092865, 0.4838380813598633, 0.4759848713874817, 0.4654020667076111, 0.45161810517311096, 0.43730247020721436, 0.437116414308548, 0.43254706263542175, 0.44510456919670105, 0.42973101139068604, 0.4400358200073242, 0.4115844666957855, 0.3929778039455414, 0.41050979495048523, 0.3965664505958557, 0.39766836166381836, 0.3760811686515808, 0.3736681640148163, 0.3799700438976288, 0.3772493898868561, 0.3820090889930725], "accuracy": [0.28543123602867126, 0.37683266401290894, 0.520142674446106, 0.5374455451965332, 0.6446968913078308, 0.6649055480957031, 0.7054550051689148, 0.707040011882782, 0.7000396251678467, 0.7362303733825684, 0.7425703406333923, 0.7593448758125305, 0.7604015469551086, 0.7707040309906006, 0.7750627398490906, 0.7872143983840942, 0.7783648371696472, 0.7898560166358948, 0.7965922355651855, 0.7992339134216309, 0.8137630224227905, 0.796328067779541, 0.8149517774581909, 0.8182538747787476, 0.8222163319587708, 0.8197067975997925, 0.8251221776008606, 0.8334434032440186, 0.8354246616363525, 0.8372738361358643, 0.8461233377456665, 0.8341038227081299, 0.8454629778862, 0.8337075710296631, 0.8519350290298462, 0.8582749962806702, 0.8481045961380005, 0.859199583530426, 0.8537842035293579, 0.863558292388916, 0.863029956817627, 0.8599920868873596, 0.8603883385658264, 0.8570862412452698], "val_loss": [1.5515142679214478, 1.4259487390518188, 1.42704439163208, 0.9292459487915039, 0.8333967328071594, 0.8249487280845642, 0.6824508905410767, 0.6934466361999512, 0.6795150637626648, 0.6057802438735962, 0.6099532246589661, 0.5634356141090393, 0.5582399964332581, 0.5327496528625488, 0.5355747938156128, 0.5469859838485718, 0.5210133194923401, 0.4847572445869446, 0.47258976101875305, 0.48356810212135315, 0.47674763202667236, 0.5051494836807251, 0.43513232469558716, 0.4420938789844513, 0.4486203193664551, 0.44846034049987793, 0.4095157980918884, 0.4399213194847107, 0.41539257764816284, 0.4229872226715088, 0.46197038888931274, 0.40038996934890747, 0.4312388002872467, 0.4161936342716217, 0.40102025866508484, 0.4279080331325531, 0.38914185762405396, 0.40141651034355164, 0.3847729563713074, 0.37205997109413147, 0.3938768804073334, 0.3952796757221222, 0.375804603099823, 0.3768894374370575], "val_accuracy": [0.44600000977516174, 0.4749999940395355, 0.47333332896232605, 0.6380000114440918, 0.6446666717529297, 0.6850000023841858, 0.7350000143051147, 0.7263333201408386, 0.7416666746139526, 0.7536666393280029, 0.7616666555404663, 0.7696666717529297, 0.7919999957084656, 0.7940000295639038, 0.7870000004768372, 0.7833333611488342, 0.7789999842643738, 0.7963333129882812, 0.8186666369438171, 0.8116666674613953, 0.8193333148956299, 0.7960000038146973, 0.8286666870117188, 0.8246666789054871, 0.8159999847412109, 0.8226666450500488, 0.8413333296775818, 0.8266666531562805, 0.8416666388511658, 0.8333333134651184, 0.8206666707992554, 0.843999981880188, 0.8336666822433472, 0.8426666855812073, 0.8450000286102295, 0.831333339214325, 0.8523333072662354, 0.8519999980926514, 0.8610000014305115, 0.8603333234786987, 0.8479999899864197, 0.8413333296775818, 0.8560000061988831, 0.8586666584014893]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 2, 0, 4, 6, 0, 4, 9, 3, 3, 2, 4, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 2, 2, 0, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 40, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.828000009059906, "mapping_values": [1, 47, 47, 26, 21, 12, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.divide_no_nan(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.negative(grad)))), tf.math.pow(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(grad, tf.math.multiply(tf.math.pow(tf.math.multiply(tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), tf.math.square(grad)), tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.pow(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))))), grad), grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2886388301849365, 1.8168023824691772, 1.4565880298614502, 1.1243668794631958, 0.9549309611320496, 0.8496047854423523, 0.778209388256073, 0.7866542339324951, 0.7157267332077026, 0.6804252862930298, 0.6897533535957336, 0.6398912072181702, 0.6210806965827942, 0.6012811660766602, 0.6036244630813599, 0.5776840448379517, 0.5788546800613403, 0.5472407341003418, 0.5437712073326111, 0.5438103079795837, 0.5185341238975525, 0.5348140597343445, 0.5012680292129517, 0.47642508149147034, 0.48177021741867065, 0.4766709804534912, 0.45954445004463196, 0.45670148730278015, 0.4370034337043762, 0.43732401728630066, 0.4272327125072479, 0.4430045187473297], "accuracy": [0.2852991819381714, 0.37987056374549866, 0.48949941992759705, 0.5898824334144592, 0.6409985423088074, 0.6754721999168396, 0.7112666964530945, 0.6963412761688232, 0.7197200059890747, 0.7421740889549255, 0.7360982894897461, 0.7585523724555969, 0.7586844563484192, 0.7741381525993347, 0.7711002230644226, 0.7862898111343384, 0.7808743715286255, 0.7885351777076721, 0.7977809906005859, 0.7987055778503418, 0.8064984679222107, 0.8050455451011658, 0.8146876096725464, 0.8253863453865051, 0.8236692547798157, 0.8203672170639038, 0.8269713521003723, 0.8285563588142395, 0.8385946154594421, 0.8360850811004639, 0.8477083444595337, 0.8358209133148193], "val_loss": [1.552780270576477, 1.2541545629501343, 1.3386986255645752, 0.8825235366821289, 0.7930545210838318, 0.7709892392158508, 0.7377201318740845, 0.6731984615325928, 0.6365296840667725, 0.6300169229507446, 0.5644539594650269, 0.5621156692504883, 0.5620166659355164, 0.5445367693901062, 0.5493423938751221, 0.5242050886154175, 0.5224348306655884, 0.48598188161849976, 0.4760236144065857, 0.4929516911506653, 0.4909261167049408, 0.49094998836517334, 0.44657474756240845, 0.4442535936832428, 0.4536738693714142, 0.48105236887931824, 0.41401082277297974, 0.4378146827220917, 0.4233163297176361, 0.4144055247306824, 0.4467359185218811, 0.40196940302848816], "val_accuracy": [0.445333331823349, 0.5306666493415833, 0.48899999260902405, 0.6430000066757202, 0.6976666450500488, 0.6996666789054871, 0.7239999771118164, 0.7416666746139526, 0.7509999871253967, 0.7419999837875366, 0.777999997138977, 0.765333354473114, 0.7923333048820496, 0.7850000262260437, 0.7836666703224182, 0.7873333096504211, 0.7753333449363708, 0.7960000038146973, 0.8056666851043701, 0.8069999814033508, 0.812666654586792, 0.800000011920929, 0.8246666789054871, 0.82833331823349, 0.8140000104904175, 0.8113333582878113, 0.8463333249092102, 0.831333339214325, 0.8376666903495789, 0.843999981880188, 0.8243333101272583, 0.843666672706604]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 2, 1, 3, 6, 0, 4, 9, 3, 3, 2, 4, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 2, 2, 0, 2, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [53, 40, 16, 37, 98, 52, 94, 1, 97, 93, 55, 76, 16], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8222857117652893, "mapping_values": [1, 11, 11, 5, 6, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), grad), tf.math.subtract(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), grad)))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2886314392089844, 1.817260503768921, 1.5356274843215942, 1.1841078996658325, 0.9479075074195862, 0.8700838088989258, 0.9275497794151306, 0.7861484885215759, 0.7319609522819519, 0.6986541748046875, 0.6712900400161743, 0.6466866731643677, 0.6175031065940857, 0.6219119429588318, 0.6088582873344421, 0.5876028537750244, 0.5798817873001099, 0.5495873689651489, 0.5441093444824219, 0.5414330363273621, 0.5061855912208557, 0.540805995464325, 0.5118144750595093, 0.4824245274066925, 0.4943838119506836, 0.4815804362297058, 0.462795615196228, 0.4478212594985962, 0.4564681947231293, 0.43838104605674744, 0.43844708800315857, 0.4454832077026367, 0.4336039423942566, 0.4381328821182251, 0.40107274055480957, 0.40040212869644165, 0.3970017731189728], "accuracy": [0.2851670980453491, 0.3809272348880768, 0.4768194556236267, 0.557390034198761, 0.6366398334503174, 0.6696605682373047, 0.6502443552017212, 0.6968696117401123, 0.7180029153823853, 0.7358341217041016, 0.7471932172775269, 0.7598732113838196, 0.7644960880279541, 0.7648923397064209, 0.7652885913848877, 0.7771760821342468, 0.7766477465629578, 0.7909126877784729, 0.7972526550292969, 0.7975168228149414, 0.8109893202781677, 0.7972526550292969, 0.8101968169212341, 0.8220842480659485, 0.8115176558494568, 0.8204993009567261, 0.8293488025665283, 0.8385946154594421, 0.826310932636261, 0.8355567455291748, 0.8400475382804871, 0.835160493850708, 0.8399154543876648, 0.8354246616363525, 0.8553691506385803, 0.8507462739944458, 0.8565579056739807], "val_loss": [1.5521920919418335, 1.2473689317703247, 1.1771637201309204, 0.9595375061035156, 0.7691079378128052, 0.7010732293128967, 0.6870231032371521, 0.6537548899650574, 0.6313385367393494, 0.5906231999397278, 0.5869271755218506, 0.5623972415924072, 0.5578205585479736, 0.5805464386940002, 0.5151624083518982, 0.5408540964126587, 0.5136749744415283, 0.4820246696472168, 0.48635250329971313, 0.5014475584030151, 0.46832534670829773, 0.5082938075065613, 0.44290977716445923, 0.4437612295150757, 0.45000284910202026, 0.46204474568367004, 0.41542568802833557, 0.4912475049495697, 0.4230213761329651, 0.4253532588481903, 0.449181467294693, 0.3996011018753052, 0.4451737105846405, 0.41001781821250916, 0.41751202940940857, 0.38480424880981445, 0.3974212110042572], "val_accuracy": [0.4463333189487457, 0.5410000085830688, 0.5690000057220459, 0.6066666841506958, 0.7059999704360962, 0.7260000109672546, 0.7310000061988831, 0.746666669845581, 0.7576666474342346, 0.7559999823570251, 0.7743333578109741, 0.7726666927337646, 0.7879999876022339, 0.7573333382606506, 0.7926666736602783, 0.7833333611488342, 0.7806666493415833, 0.7963333129882812, 0.8069999814033508, 0.8023333549499512, 0.8209999799728394, 0.7870000004768372, 0.8276666402816772, 0.8256666660308838, 0.8100000023841858, 0.8166666626930237, 0.8453333377838135, 0.7979999780654907, 0.8373333215713501, 0.8330000042915344, 0.8273333311080933, 0.8516666889190674, 0.8273333311080933, 0.8506666421890259, 0.8386666774749756, 0.8506666421890259, 0.8486666679382324]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 6, 8, 3, 6, 0, 4, 9, 3, 3, 2, 4, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 2, 2, 0, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 40, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [1, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.808571457862854, "mapping_values": [1, 10, 10, 5, 5, 3, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.28906512260437, 1.8056720495224, 1.484336256980896, 1.2048150300979614, 0.9670306444168091, 0.9146507978439331, 0.87103271484375, 0.7868499755859375, 0.7308679819107056, 0.6864970326423645, 0.6995779275894165, 0.6526916027069092, 0.6292277574539185, 0.6095763444900513, 0.6016000509262085, 0.5813605785369873, 0.5831901431083679, 0.5531094074249268, 0.5553111433982849, 0.5534842610359192, 0.5143149495124817, 0.5427301526069641, 0.5099127292633057, 0.4882422685623169, 0.491878479719162, 0.4812065064907074, 0.4656456708908081, 0.4603225886821747, 0.4421081840991974, 0.43713054060935974, 0.44098398089408875, 0.44769665598869324, 0.4325760006904602, 0.4548986256122589, 0.4045431613922119, 0.4021598994731903, 0.4063803553581238, 0.396555632352829, 0.40514758229255676, 0.37732988595962524, 0.37523022294044495, 0.39113205671310425, 0.39151450991630554, 0.37569692730903625, 0.35950180888175964, 0.3638648986816406, 0.3673510253429413, 0.35998398065567017, 0.3295992612838745, 0.34374046325683594], "accuracy": [0.2856954038143158, 0.38462555408477783, 0.4986131191253662, 0.5493329763412476, 0.6313564777374268, 0.6546030640602112, 0.6757363677024841, 0.6979262828826904, 0.7150970697402954, 0.7408532500267029, 0.7313432693481445, 0.7523444890975952, 0.7581561207771301, 0.7749306559562683, 0.7718927264213562, 0.7837802171707153, 0.7788931727409363, 0.7857614755630493, 0.7901201844215393, 0.7927618622779846, 0.8074230551719666, 0.7965922355651855, 0.816008448600769, 0.8191784620285034, 0.817989706993103, 0.8181217908859253, 0.8284242749214172, 0.8293488025665283, 0.8358209133148193, 0.8348963260650635, 0.839519202709198, 0.834632158279419, 0.8397833704948425, 0.8298771381378174, 0.8561616539955139, 0.8515387773513794, 0.8539162874221802, 0.8525954484939575, 0.848368763923645, 0.8626337051391602, 0.863029956817627, 0.8535200357437134, 0.8552370667457581, 0.8622375130653381, 0.8647470474243164, 0.8663320541381836, 0.8631620407104492, 0.8713511824607849, 0.8757099509239197, 0.8725399374961853], "val_loss": [1.553956389427185, 1.253443717956543, 1.1782783269882202, 0.9910704493522644, 0.8361415863037109, 0.7212828993797302, 0.6981246471405029, 0.6603406667709351, 0.6520357728004456, 0.6158034801483154, 0.588326632976532, 0.5708591341972351, 0.5739519000053406, 0.535088837146759, 0.5380961298942566, 0.5303133726119995, 0.512296199798584, 0.48566722869873047, 0.48543813824653625, 0.49367764592170715, 0.495677649974823, 0.5057297348976135, 0.45191043615341187, 0.4301445186138153, 0.43605244159698486, 0.4510761797428131, 0.4185248911380768, 0.4242475628852844, 0.42196255922317505, 0.4386439621448517, 0.4488365352153778, 0.4060347080230713, 0.45974278450012207, 0.41355040669441223, 0.43248021602630615, 0.4182754456996918, 0.39814600348472595, 0.4074558913707733, 0.3833621144294739, 0.3741207718849182, 0.39695000648498535, 0.3761054575443268, 0.3702619969844818, 0.36477068066596985, 0.3596785366535187, 0.3811863660812378, 0.3923649787902832, 0.37672802805900574, 0.36160826683044434, 0.3676559329032898], "val_accuracy": [0.45133334398269653, 0.5536666512489319, 0.6236666440963745, 0.590666651725769, 0.6523333191871643, 0.7146666646003723, 0.7266666889190674, 0.7406666874885559, 0.7423333525657654, 0.75, 0.765999972820282, 0.7666666507720947, 0.7886666655540466, 0.7896666526794434, 0.7829999923706055, 0.7839999794960022, 0.7793333530426025, 0.79666668176651, 0.8100000023841858, 0.8090000152587891, 0.8096666932106018, 0.7910000085830688, 0.8206666707992554, 0.8349999785423279, 0.8196666836738586, 0.8206666707992554, 0.8423333168029785, 0.8389999866485596, 0.8396666646003723, 0.8253333568572998, 0.8240000009536743, 0.8446666598320007, 0.8100000023841858, 0.8473333120346069, 0.8266666531562805, 0.8323333263397217, 0.8493333458900452, 0.8516666889190674, 0.8600000143051147, 0.859000027179718, 0.8533333539962769, 0.8573333621025085, 0.8613333106040955, 0.8643333315849304, 0.8726666569709778, 0.8576666712760925, 0.847000002861023, 0.8616666793823242, 0.871666669845581, 0.8686666488647461]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 2, 2, 0, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 2, 2, 0, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [47, 40, 97, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.801714301109314, "mapping_values": [1, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.negative(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.subtract(grad, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2886314392089844, 1.8192775249481201, 1.382940411567688, 1.1222693920135498, 1.0216701030731201, 0.8811744451522827, 0.8200806379318237, 0.7892826795578003, 0.7093296647071838, 0.6977591514587402, 0.658649742603302, 0.6436854004859924, 0.6245599389076233, 0.6129863858222961, 0.5867927670478821, 0.5746570229530334, 0.5776933431625366, 0.5430235862731934, 0.5445939898490906, 0.5426878929138184, 0.5049446821212769, 0.5413371324539185, 0.500032365322113, 0.4849326014518738, 0.4826642870903015, 0.47988611459732056, 0.45964959263801575, 0.4559974670410156, 0.4351354241371155, 0.455228716135025, 0.43302595615386963, 0.43974998593330383, 0.42244717478752136, 0.4365944266319275, 0.41168659925460815, 0.3994945287704468], "accuracy": [0.28543123602867126, 0.37987056374549866, 0.521067202091217, 0.5886936783790588, 0.6173557043075562, 0.6647734642028809, 0.6902654767036438, 0.6970016956329346, 0.7235503792762756, 0.7331924438476562, 0.750759482383728, 0.7576277852058411, 0.7585523724555969, 0.7707040309906006, 0.7800818681716919, 0.7840443849563599, 0.7783648371696472, 0.7938185334205627, 0.7998943328857422, 0.7991018295288086, 0.8136309385299683, 0.8004226684570312, 0.8198388814926147, 0.8191784620285034, 0.8238013386726379, 0.816008448600769, 0.8280280232429504, 0.8317263126373291, 0.8400475382804871, 0.8265751004219055, 0.8450667262077332, 0.8384625315666199, 0.8457271456718445, 0.8347642421722412, 0.8508783578872681, 0.8539162874221802], "val_loss": [1.5519859790802002, 1.3576120138168335, 1.0920987129211426, 1.016603946685791, 0.7935963273048401, 0.7164819240570068, 0.6677205562591553, 0.6289443373680115, 0.6527199149131775, 0.5823768973350525, 0.5950927734375, 0.5683177709579468, 0.579207181930542, 0.5158566236495972, 0.5210022926330566, 0.5214952826499939, 0.5070959329605103, 0.4892234802246094, 0.47565677762031555, 0.4974052309989929, 0.48450401425361633, 0.4881761968135834, 0.45411139726638794, 0.43394747376441956, 0.4383194148540497, 0.46079427003860474, 0.41868650913238525, 0.4299868643283844, 0.4157240092754364, 0.4241997003555298, 0.40840670466423035, 0.3972546458244324, 0.4610367715358734, 0.41667723655700684, 0.3968348801136017, 0.41378337144851685], "val_accuracy": [0.445333331823349, 0.5036666393280029, 0.5849999785423279, 0.6143333315849304, 0.6856666803359985, 0.7266666889190674, 0.7353333234786987, 0.7570000290870667, 0.7453333139419556, 0.7603333592414856, 0.7706666588783264, 0.7676666378974915, 0.7846666574478149, 0.7940000295639038, 0.7870000004768372, 0.7893333435058594, 0.7873333096504211, 0.7956666946411133, 0.8143333196640015, 0.8053333163261414, 0.8130000233650208, 0.8066666722297668, 0.8240000009536743, 0.8316666483879089, 0.8209999799728394, 0.8149999976158142, 0.8420000076293945, 0.8323333263397217, 0.8379999995231628, 0.8363333344459534, 0.8529999852180481, 0.8479999899864197, 0.8276666402816772, 0.843999981880188, 0.8500000238418579, 0.8426666855812073]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 0, 2, 2, 0, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 2, 1, 0, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [47, 40, 97, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [24, 57, 40, 62]], "fitness": -0.7511428594589233, "mapping_values": [1, 8, 8, 5, 3, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(grad))), alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.297576904296875, 2.285038709640503, 2.2736172676086426, 2.2613790035247803, 2.2483105659484863, 2.234706401824951, 2.216439723968506, 2.198434591293335, 2.177504062652588, 2.151794195175171, 2.1209168434143066, 2.0906171798706055, 2.051669120788574, 2.008856773376465, 1.9585434198379517, 1.9081467390060425, 1.8502380847930908, 1.7812947034835815, 1.7334917783737183, 1.6756889820098877, 1.6049394607543945, 1.5516701936721802, 1.5056332349777222, 1.4512622356414795, 1.4067654609680176, 1.3687940835952759, 1.3319478034973145, 1.2988812923431396, 1.2663321495056152, 1.23334801197052, 1.2141451835632324, 1.1944692134857178, 1.159974455833435, 1.1454981565475464, 1.1252214908599854, 1.1001349687576294, 1.1006014347076416, 1.064225435256958, 1.0616886615753174, 1.0424304008483887, 1.0284714698791504, 1.0182380676269531, 1.005017876625061, 0.9878275990486145, 0.984969437122345, 0.972950279712677, 0.959244430065155, 0.9540383815765381, 0.9419779181480408, 0.9365628361701965, 0.9264188408851624, 0.9392330646514893, 0.9260545969009399, 0.9169955253601074, 0.8982703685760498, 0.8996682167053223, 0.8961256146430969, 0.8839231729507446, 0.8846318125724792, 0.8894094824790955, 0.8667329549789429, 0.8624098896980286, 0.8621180057525635, 0.8417803645133972, 0.8478380441665649, 0.8425729274749756, 0.8551760911941528, 0.832623302936554, 0.8390085101127625, 0.8258759379386902, 0.8313544988632202, 0.8179605007171631, 0.8246809244155884, 0.8167688250541687, 0.8119975924491882, 0.8064128756523132, 0.8121519088745117, 0.8009276986122131, 0.8008908033370972, 0.7949693202972412, 0.8005287647247314, 0.7914385795593262, 0.7914689779281616, 0.789330005645752, 0.7819346785545349, 0.7736958265304565], "accuracy": [0.09774138033390045, 0.1394795924425125, 0.1674811840057373, 0.19812442362308502, 0.23405098915100098, 0.25941091775894165, 0.28305375576019287, 0.3065645098686218, 0.32782986760139465, 0.3575485348701477, 0.3699643313884735, 0.37762513756752014, 0.3975696861743927, 0.40430590510368347, 0.4225333631038666, 0.436930388212204, 0.4525161683559418, 0.4711398780345917, 0.47404569387435913, 0.4745740294456482, 0.5042926669120789, 0.5130101442337036, 0.5157839059829712, 0.5316338539123535, 0.5379738211631775, 0.5476158857345581, 0.5614846348762512, 0.5588429570198059, 0.5754854083061218, 0.5836745500564575, 0.583410382270813, 0.5820895433425903, 0.6004490852355957, 0.6085061430931091, 0.6104874014854431, 0.6159027814865112, 0.6111478209495544, 0.6342623233795166, 0.6305639743804932, 0.6339981555938721, 0.6380926966667175, 0.6407343745231628, 0.6473385095596313, 0.6552634835243225, 0.6553955674171448, 0.6610751748085022, 0.6606789231300354, 0.6625280380249023, 0.6734909415245056, 0.6668868064880371, 0.672170102596283, 0.6647734642028809, 0.6732267737388611, 0.6760005354881287, 0.6795667409896851, 0.6790384650230408, 0.6831330060958862, 0.6828688383102417, 0.6828688383102417, 0.6847180128097534, 0.6942279934883118, 0.6966054439544678, 0.6890767216682434, 0.7071720957756042, 0.6977941989898682, 0.7013604640960693, 0.6936996579170227, 0.6968696117401123, 0.6988508701324463, 0.7066437602043152, 0.7046625018119812, 0.7020208835601807, 0.7061154246330261, 0.7111346125602722, 0.7108704447746277, 0.7088891863822937, 0.709549605846405, 0.7111346125602722, 0.7103421092033386, 0.7086250185966492, 0.7137762308120728, 0.7106062769889832, 0.7161537408828735, 0.7166820764541626, 0.711530864238739, 0.7165499925613403], "val_loss": [2.2868900299072266, 2.273850679397583, 2.2606635093688965, 2.2466471195220947, 2.231350898742676, 2.2141592502593994, 2.194740056991577, 2.1725354194641113, 2.1468801498413086, 2.1169674396514893, 2.082030773162842, 2.042273759841919, 1.9971544742584229, 1.9461959600448608, 1.8891456127166748, 1.8266855478286743, 1.7603782415390015, 1.6896064281463623, 1.618941068649292, 1.5483989715576172, 1.4786593914031982, 1.4129711389541626, 1.3515244722366333, 1.2946542501449585, 1.2433100938796997, 1.197806477546692, 1.1565691232681274, 1.1195629835128784, 1.0861936807632446, 1.0550694465637207, 1.0279213190078735, 1.0038740634918213, 0.9813976287841797, 0.9608484506607056, 0.9423912763595581, 0.9250453114509583, 0.9097276329994202, 0.894174337387085, 0.8810338377952576, 0.8691571354866028, 0.8576284050941467, 0.8463194966316223, 0.8356721997261047, 0.8258062601089478, 0.8176616430282593, 0.8096591234207153, 0.8014944791793823, 0.7938821911811829, 0.7864838242530823, 0.7810623645782471, 0.7734181880950928, 0.768791675567627, 0.7638095617294312, 0.7587634921073914, 0.7540268301963806, 0.7480468153953552, 0.7439784407615662, 0.7397597432136536, 0.7356743216514587, 0.7308283448219299, 0.725669264793396, 0.7223154902458191, 0.7184339165687561, 0.7144548892974854, 0.7105717658996582, 0.7062996625900269, 0.7037181258201599, 0.6996970772743225, 0.6965041756629944, 0.69374680519104, 0.6910638213157654, 0.6879487037658691, 0.6861677765846252, 0.6833927631378174, 0.6794975399971008, 0.677675187587738, 0.6754821538925171, 0.6717264652252197, 0.670755922794342, 0.6680853366851807, 0.6654123067855835, 0.6632927656173706, 0.6607621312141418, 0.659444272518158, 0.657352089881897, 0.6542355418205261], "val_accuracy": [0.12566666305065155, 0.23999999463558197, 0.3186666667461395, 0.3616666793823242, 0.3843333423137665, 0.4046666622161865, 0.4323333203792572, 0.45233333110809326, 0.46799999475479126, 0.48100000619888306, 0.49799999594688416, 0.5106666684150696, 0.5253333449363708, 0.5346666574478149, 0.5429999828338623, 0.5533333420753479, 0.5583333373069763, 0.5653333067893982, 0.5726666450500488, 0.5856666564941406, 0.5943333506584167, 0.6006666421890259, 0.6190000176429749, 0.6336666941642761, 0.6420000195503235, 0.6480000019073486, 0.6610000133514404, 0.6673333048820496, 0.6736666560173035, 0.6833333373069763, 0.6866666674613953, 0.6893333196640015, 0.6926666498184204, 0.6936666369438171, 0.6973333358764648, 0.6980000138282776, 0.7009999752044678, 0.7003333568572998, 0.7056666612625122, 0.7043333053588867, 0.7096666693687439, 0.7093333601951599, 0.7120000123977661, 0.7120000123977661, 0.7149999737739563, 0.7176666855812073, 0.7193333506584167, 0.7166666388511658, 0.7183333039283752, 0.7196666598320007, 0.7210000157356262, 0.7206666469573975, 0.7269999980926514, 0.7246666550636292, 0.7260000109672546, 0.7310000061988831, 0.7333333492279053, 0.7350000143051147, 0.7333333492279053, 0.7360000014305115, 0.7396666407585144, 0.7369999885559082, 0.7369999885559082, 0.7393333315849304, 0.7393333315849304, 0.7436666488647461, 0.7443333268165588, 0.7446666955947876, 0.7476666569709778, 0.7463333606719971, 0.750333309173584, 0.7506666779518127, 0.7486666440963745, 0.7513333559036255, 0.753000020980835, 0.753333330154419, 0.7526666522026062, 0.7563333511352539, 0.7546666860580444, 0.7549999952316284, 0.7620000243186951, 0.7596666812896729, 0.7593333125114441, 0.7556666731834412, 0.7590000033378601, 0.7590000033378601]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 6, 8, 3, 6, 0, 4, 9, 3, 3, 2, 4, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 2, 2, 0, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 40, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.2768571376800537, "mapping_values": [1, 10, 10, 5, 5, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.1741716861724854, 2.295135259628296, 2.2691702842712402, 2.304128646850586, 2.3031880855560303, 2.3010928630828857], "accuracy": [0.1896711140871048, 0.14053626358509064, 0.15453705191612244, 0.10289261490106583, 0.09840179979801178, 0.11134592443704605], "val_loss": [2.084932327270508, 2.2874302864074707, 2.3046154975891113, 2.3030436038970947, 2.302081823348999, 2.2946739196777344], "val_accuracy": [0.2796666622161865, 0.10633333027362823, 0.10199999809265137, 0.09933333098888397, 0.09933333098888397, 0.18766666948795319]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 5, 8, 3, 6, 0, 4, 9, 3, 3, 2, 4, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 2, 2, 0, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 40, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [1, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [2, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.13914285600185394, "mapping_values": [1, 4, 4, 2, 2, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, grad: tf.math.multiply(alpha, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3013715744018555, 2.2959513664245605, 2.299743890762329, 2.3051116466522217, 2.3108971118927, 2.312520980834961, 2.316267728805542], "accuracy": [0.09021265059709549, 0.11953506618738174, 0.09642054885625839, 0.08677849918603897, 0.07674019038677216, 0.07951393723487854, 0.08902391046285629], "val_loss": [2.2944629192352295, 2.29762601852417, 2.3027381896972656, 2.3070123195648193, 2.3136348724365234, 2.303476333618164, 2.3144452571868896], "val_accuracy": [0.109333336353302, 0.11033333092927933, 0.0729999989271164, 0.06933332979679108, 0.07233333587646484, 0.06433333456516266, 0.08100000023841858]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 6, 4, 3, 6, 0, 4, 9, 3, 3, 2, 4, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 2, 2, 3, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 40, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [2, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 4, 2, 4, 2, 1, 2, 3], [3, 2, 0, 2, 3, 3, 2], [64, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 8, 4, 4, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.math.add(sigma, tf.math.pow(beta, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))), beta))", "other_info": {"loss": [1249869440.0, 23656900608.0, 110186840064.0, 303278325760.0, 656355098624.0, 1208274386944.0], "accuracy": [0.09549596905708313, 0.09549596905708313, 0.09681680053472519, 0.09602430462837219, 0.09959053993225098, 0.09853387624025345], "val_loss": [5578624000.0, 44615790592.0, 150562865152.0, 356873207808.0, 696996528128.0, 1204390854656.0], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 6, 8, 5, 6, 0, 4, 9, 3, 3, 2, 4, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 2, 2, 0, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 40, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [1, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [0, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, grad), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.square(grad)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3026211261749268, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 6, 8, 3, 6, 0, 4, 9, 3, 3, 2, 4, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 2, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 69, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [1, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [0, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [8, 9, 2, 4, 2, 1, 2, 3], [3, 1, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 48, 48, 28, 20, 12, 6, 6, 3, 3, 0, 3, 3, 1, 2, 1, 2, 2, 0, 1], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))), grad), grad))), tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, alpha)), tf.math.subtract(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(grad))))), alpha), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))), grad)))), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3026211261749268, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 6, 8, 3, 6, 0, 4, 9, 3, 3, 2, 4, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 2, 2, 0, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [53, 40, 16, 37, 98, 52, 94, 1, 97, 93, 55, 76, 16], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07753269374370575, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 6, 8, 3, 6, 0, 4, 9, 3, 3, 2, 4, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 2, 2, 0, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [67, 40, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [1, 0, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 5, 5, 3, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 6, 8, 2, 9, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 2, 2, 0, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 40, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [8, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 8, 4, 4, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.math.add(tf.math.pow(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), beta)))", "other_info": {"loss": [2.30733323097229, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08836349099874496, 0.09602430462837219, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.337427854537964, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 1, 2, 2, 0, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 2, 0, 0, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [47, 40, 97, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [5, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [24, 57, 40, 62]], "fitness": -0.07828571647405624, "mapping_values": [1, 9, 9, 5, 4, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), grad), tf.math.add(alpha, tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(beta)", "other_info": {"loss": [2.302102565765381, 2.3008601665496826, 2.3005530834198, 2.3006551265716553, 2.300671100616455, 2.3013696670532227, 2.3002941608428955, 2.299974203109741, 2.300008773803711, 2.299126625061035, 2.2988944053649902, 2.3006374835968018, 2.29953670501709, 2.299802303314209, 2.300175428390503, 2.3003575801849365, 2.2998104095458984, 2.3000385761260986], "accuracy": [0.08809932321310043, 0.09813763201236725, 0.09800554811954498, 0.09245806187391281, 0.09615638852119446, 0.09245806187391281, 0.09549596905708313, 0.09668471664190292, 0.09642054885625839, 0.10170386731624603, 0.10117553919553757, 0.10355303436517715, 0.10196803510189056, 0.09800554811954498, 0.09985470771789551, 0.09866596013307571, 0.09549596905708313, 0.09668471664190292], "val_loss": [2.2989919185638428, 2.298417091369629, 2.298149347305298, 2.298116445541382, 2.2982497215270996, 2.298156261444092, 2.297849655151367, 2.2976484298706055, 2.297537326812744, 2.297557830810547, 2.2976810932159424, 2.2979397773742676, 2.298264980316162, 2.298549175262451, 2.2987959384918213, 2.299022912979126, 2.2993226051330566, 2.299562454223633], "val_accuracy": [0.052666667848825455, 0.05766666680574417, 0.05999999865889549, 0.06333333253860474, 0.0663333311676979, 0.0716666653752327, 0.07433333247900009, 0.08133333176374435, 0.08299999684095383, 0.08566666394472122, 0.08399999886751175, 0.08299999684095383, 0.0860000029206276, 0.0860000029206276, 0.07866666465997696, 0.07966666668653488, 0.07400000095367432, 0.07533333450555801]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 6, 6, 6, 5, 0, 4, 8, 3, 3, 2, 4, 3, 4, 3, 5, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [1, 2, 2, 0, 0, 2, 2, 2, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 1, 2, 3], [47, 40, 75, 26, 98, 52, 79, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [2, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [24, 57, 40, 62]], "fitness": -0.04085714370012283, "mapping_values": [1, 32, 32, 18, 14, 6, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.square(alpha), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.negative(grad)))), tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.pow(grad, tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))))), grad))), grad)), tf.math.square(tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.30254864692688, 2.302006959915161, 2.3022027015686035, 2.3024709224700928, 2.3025014400482178, 2.3035802841186523], "accuracy": [0.08770307898521423, 0.09536388516426086, 0.09338264167308807, 0.08994849026203156, 0.09470347315073013, 0.08413683623075485], "val_loss": [2.299954414367676, 2.299954414367676, 2.299954414367676, 2.299954414367676, 2.299954414367676, 2.299954414367676], "val_accuracy": [0.04466666653752327, 0.04466666653752327, 0.04466666653752327, 0.04466666653752327, 0.04466666653752327, 0.04466666653752327]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 1, 8, 2, 0, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 2, 0, 0, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [47, 64, 97, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 2, 9, 9, 7], [0, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [24, 57, 40, 62]], "fitness": -0.04085714370012283, "mapping_values": [1, 5, 5, 3, 2, 1, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.subtract(tf.math.sqrt(tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.30254864692688, 2.302006959915161, 2.3022027015686035, 2.3024709224700928, 2.3025014400482178, 2.3035802841186523], "accuracy": [0.08770307898521423, 0.09536388516426086, 0.09338264167308807, 0.08994849026203156, 0.09470347315073013, 0.08413683623075485], "val_loss": [2.299954414367676, 2.299954414367676, 2.299954414367676, 2.299954414367676, 2.299954414367676, 2.299954414367676], "val_accuracy": [0.04466666653752327, 0.04466666653752327, 0.04466666653752327, 0.04466666653752327, 0.04466666653752327, 0.04466666653752327]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 6, 8, 3, 6, 0, 4, 9, 3, 3, 2, 4, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 2, 1, 0, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 40, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [1, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [1, 0, 6], [24, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.04085714370012283, "mapping_values": [1, 10, 10, 5, 5, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.30254864692688, 2.302006959915161, 2.3022027015686035, 2.3024709224700928, 2.3025014400482178, 2.3035802841186523], "accuracy": [0.08770307898521423, 0.09536388516426086, 0.09338264167308807, 0.08994849026203156, 0.09470347315073013, 0.08413683623075485], "val_loss": [2.299954414367676, 2.299954414367676, 2.299954414367676, 2.299954414367676, 2.299954414367676, 2.299954414367676], "val_accuracy": [0.04466666653752327, 0.04466666653752327, 0.04466666653752327, 0.04466666653752327, 0.04466666653752327, 0.04466666653752327]}}]