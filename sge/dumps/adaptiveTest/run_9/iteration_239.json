[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [9, 6, 0, 2, 5, 9, 1, 8, 6, 5, 8, 9], [1, 1, 3, 5, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [0, 1, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1], [7, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3, 2], [48, 57]], "fitness": -0.8220000267028809, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 3, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.4132328140201853, 2.219826147068509, 1.94749941235095, 1.879333062241846, 1.4072224694850217, 1.1408382317236054, 0.9611067684602743, 0.8696287195711813, 0.8540465034954835, 0.8005332403557097, 0.7459319692167545, 0.7117755734421369, 0.6841578378480234, 0.6647659761085959, 0.6402518570997837, 0.6475778687285269, 0.5993921277372198, 0.6097115422866568, 0.6106715688553028, 0.5690715689669196, 0.6006972009495438, 0.5340431519881089, 0.5367260514359354, 0.5287956576447492, 0.5205910662146072, 0.5167218469956201, 0.4825277093568136, 0.48524264101465037, 0.47940709286708527], "accuracy": [0.2502971887588501, 0.16629242897033691, 0.3599260449409485, 0.413419634103775, 0.5362567901611328, 0.5815612077713013, 0.6532822847366333, 0.6778497099876404, 0.6823405027389526, 0.7018887996673584, 0.7102100253105164, 0.7314753532409668, 0.7351737022399902, 0.7453441023826599, 0.7536653280258179, 0.7557786107063293, 0.7774402499198914, 0.7705719470977783, 0.7647602558135986, 0.7864218950271606, 0.7692511081695557, 0.7969884872436523, 0.7984414100646973, 0.7964601516723633, 0.8049134612083435, 0.8054417967796326, 0.8257825970649719, 0.8204993009567261, 0.8178576231002808], "val_loss": [1.9709434509277344, 1.500455277306693, 1.5079515661512102, 1.2481482028961182, 0.8335672106061663, 0.7601376942225865, 0.7406095606940133, 0.6523713724953788, 0.5914478131702968, 0.586341415132795, 0.5811047043119159, 0.5209665809358869, 0.5174898760659354, 0.49668518134525846, 0.533880489213126, 0.4837557588304792, 0.4892888239451817, 0.4632681608200073, 0.45591076782771517, 0.458959766796657, 0.4421616622379848, 0.45107318673815044, 0.431502708366939, 0.4043993864740644, 0.41822332995278494, 0.4151665653501238, 0.39773050376347135, 0.43242532866341726, 0.4776319605963571], "val_accuracy": [0.10366666316986084, 0.42766666412353516, 0.445333331823349, 0.47833332419395447, 0.590666651725769, 0.6926666498184204, 0.6430000066757202, 0.7073333263397217, 0.7453333139419556, 0.7459999918937683, 0.734666645526886, 0.7736666798591614, 0.7666666507720947, 0.7839999794960022, 0.7586666941642761, 0.7913333177566528, 0.7873333096504211, 0.8013333082199097, 0.800000011920929, 0.7973333597183228, 0.8006666898727417, 0.8016666769981384, 0.8130000233650208, 0.8316666483879089, 0.8140000104904175, 0.8190000057220459, 0.8306666612625122, 0.8119999766349792, 0.7926666736602783]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 6, 2, 2, 5, 9, 1, 8, 6, 5, 8, 9], [3, 5, 3, 3, 0, 2, 2, 4, 2, 0], [97, 47, 79, 81, 53, 45], [0, 1, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1], [7, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3, 2], [48, 57]], "fitness": -0.8199999928474426, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.4129836647470535, 2.2178732070940486, 1.895742394527062, 1.59515838727912, 1.2842486704250824, 1.0094810538697536, 0.9038781843889564, 0.8371959610574864, 0.8200016633677933, 0.7779844885158375, 0.8206184142458756, 0.7466518217467707, 0.7276381701132594, 0.6948174417231455, 0.7129554552660957, 0.6591369419081525, 0.6123096765685847, 0.6249262065053569, 0.6359954750485912, 0.5722376191227144, 0.5799026401555297, 0.5374346806577578, 0.5543467102427414, 0.5680001293978341, 0.5422094451863106, 0.5077705590511751, 0.5000680557977034, 0.5022199257111993, 0.5089893277570666, 0.4932991127532628, 0.4693068893019392], "accuracy": [0.2506934404373169, 0.16734910011291504, 0.3829084634780884, 0.48606523871421814, 0.5548804402351379, 0.6380926966667175, 0.653150200843811, 0.6841896772384644, 0.6989829540252686, 0.7104741930961609, 0.6923788189888, 0.7169462442398071, 0.726192057132721, 0.7392682433128357, 0.7305507659912109, 0.7483819723129272, 0.7705719470977783, 0.7611940503120422, 0.7602694630622864, 0.7902522683143616, 0.7749306559562683, 0.7998943328857422, 0.7951393723487854, 0.7861577272415161, 0.7921014428138733, 0.8080834746360779, 0.8144234418869019, 0.8133667707443237, 0.8062343001365662, 0.8131026029586792, 0.8274996876716614], "val_loss": [1.9707371847970145, 1.588574000767299, 1.1239005838121687, 1.0525756222861153, 0.7797657591956002, 0.7408208165849958, 0.7357495171683175, 0.7321315152304513, 0.6035805770329067, 0.6666441985539028, 0.6047733681542533, 0.5569803374154227, 0.5561471155711583, 0.5474003893988473, 0.5248682498931885, 0.5040560109274728, 0.49724483489990234, 0.533525994845799, 0.4703437600816999, 0.5267184461866107, 0.45246737343924387, 0.49628487655094694, 0.48421764373779297, 0.4398834194455828, 0.4433318717139108, 0.4186196838106428, 0.4376612901687622, 0.45954716205596924, 0.42933123452322824, 0.4158409833908081, 0.4470279557364328], "val_accuracy": [0.10366666316986084, 0.39533331990242004, 0.5730000138282776, 0.5559999942779541, 0.6370000243186951, 0.6600000262260437, 0.6793333292007446, 0.6690000295639038, 0.7400000095367432, 0.7116666436195374, 0.7236666679382324, 0.7390000224113464, 0.7570000290870667, 0.7473333477973938, 0.7706666588783264, 0.7799999713897705, 0.784333348274231, 0.7666666507720947, 0.7983333468437195, 0.753333330154419, 0.8036666512489319, 0.7670000195503235, 0.7929999828338623, 0.8086666464805603, 0.8080000281333923, 0.8190000057220459, 0.812333345413208, 0.7929999828338623, 0.8086666464805603, 0.8136666417121887, 0.8003333210945129]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 6, 2, 2, 5, 9, 1, 8, 6, 5, 8, 9], [1, 1, 3, 5, 3, 2, 2, 4, 2, 0], [52, 47, 79, 81, 53, 45], [1, 1, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1], [7, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3, 2], [48, 57]], "fitness": -0.8174285888671875, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.413196791999171, 2.2202769109459917, 2.0976771267728562, 1.5320168790595563, 1.3153346868443718, 1.1116352783706225, 0.9446081760348173, 0.8394399730914525, 0.8583841732921004, 0.781619092846874, 0.8000840660508881, 0.7614248252390493, 0.7275088960468462, 0.7043387964653254, 0.6931547115916952, 0.6842652016060149, 0.635686922067066, 0.6277302663875152, 0.625200240879074, 0.5868727113387808, 0.6064992718661324, 0.5606332655517322, 0.5675641407725392, 0.5506344358635428, 0.5619105921839017, 0.5228389833565826, 0.5311507843095298, 0.5157237201318954, 0.5068846803693378, 0.5091109747710938, 0.48629655258262855, 0.4812388197030405, 0.48019780270758244, 0.4784697804626079, 0.4662089167317033, 0.4496023889860819, 0.4649418066080456, 0.46454911422672807, 0.43032130672238555, 0.43702619680560356, 0.4477536482400646, 0.4156641118546298, 0.4201196222186577, 0.41249094204958703, 0.4149066370948431, 0.4255495327630016, 0.3873554470123097, 0.39656404681477203, 0.38542691428569076, 0.4106223614240099, 0.3946924527299843, 0.3837633105104374, 0.37006604814368815, 0.3719473199805941, 0.3648845544895555], "accuracy": [0.2502971887588501, 0.16616034507751465, 0.3238673806190491, 0.497820645570755, 0.5445780158042908, 0.6070532202720642, 0.6485272645950317, 0.6901333928108215, 0.6787742972373962, 0.705058753490448, 0.694360077381134, 0.7111346125602722, 0.7255316376686096, 0.7301545143127441, 0.7322678565979004, 0.7416457533836365, 0.7597411274909973, 0.7655527591705322, 0.7604015469551086, 0.7791573405265808, 0.7643640041351318, 0.7876105904579163, 0.7915731072425842, 0.7891955971717834, 0.7815347909927368, 0.7977809906005859, 0.7926297783851624, 0.8127063512802124, 0.8087438941001892, 0.8121780753135681, 0.817989706993103, 0.8251221776008606, 0.8186501264572144, 0.8170651197433472, 0.8238013386726379, 0.8323867321014404, 0.8296129703521729, 0.8264430165290833, 0.8399154543876648, 0.8429533839225769, 0.8342359066009521, 0.8457271456718445, 0.8405758738517761, 0.8485008478164673, 0.8466516733169556, 0.8403117060661316, 0.8601241707801819, 0.8512746095657349, 0.8595958352088928, 0.8455950617790222, 0.8524633646011353, 0.8613129258155823, 0.8607845902442932, 0.8634262084960938, 0.8623695969581604], "val_loss": [1.9710170882088798, 1.529221432549613, 1.174328190939767, 0.8509452513286045, 0.8344420705522809, 0.7312194619859967, 0.6602975981576102, 0.6217239413942609, 0.6146999086652484, 0.5902495384216309, 0.663165705544608, 0.5590850625719342, 0.5660489456994193, 0.5439667020525251, 0.521389194897243, 0.5041790008544922, 0.5222388846533639, 0.47665115765162874, 0.4890700578689575, 0.48692398411887033, 0.457723753792899, 0.4578958920070103, 0.4382261208125523, 0.4490781170981271, 0.4375013453619821, 0.4413723775318691, 0.4458591938018799, 0.4676483528954642, 0.4650132656097412, 0.4125038129942758, 0.4471985271998814, 0.4330277613231114, 0.43154120445251465, 0.3882097601890564, 0.38173901183264597, 0.43148658105305265, 0.4242890306881496, 0.4002293859209333, 0.3819055472101484, 0.40319953645978657, 0.392310414995466, 0.39768119369234356, 0.39772803442818777, 0.36760910068239483, 0.3897753953933716, 0.3693038650921413, 0.35197956221444265, 0.3797898718288967, 0.3990709441048758, 0.37359113352639334, 0.3970492311886379, 0.37669321468898226, 0.3525161147117615, 0.36151742935180664, 0.37272127185549053], "val_accuracy": [0.10366666316986084, 0.4183333218097687, 0.5646666884422302, 0.628000020980835, 0.6499999761581421, 0.6850000023841858, 0.6896666884422302, 0.7223333120346069, 0.7236666679382324, 0.7393333315849304, 0.6956666707992554, 0.7443333268165588, 0.7526666522026062, 0.7563333511352539, 0.7770000100135803, 0.7803333401679993, 0.7556666731834412, 0.79666668176651, 0.7803333401679993, 0.765999972820282, 0.7960000038146973, 0.8013333082199097, 0.8033333420753479, 0.7983333468437195, 0.8140000104904175, 0.7979999780654907, 0.8040000200271606, 0.7766666412353516, 0.7906666398048401, 0.8220000267028809, 0.8006666898727417, 0.8196666836738586, 0.8130000233650208, 0.8320000171661377, 0.8360000252723694, 0.812666654586792, 0.8046666383743286, 0.8333333134651184, 0.8366666436195374, 0.8240000009536743, 0.8296666741371155, 0.8289999961853027, 0.8326666951179504, 0.8379999995231628, 0.8336666822433472, 0.8356666564941406, 0.8446666598320007, 0.8299999833106995, 0.8226666450500488, 0.8453333377838135, 0.8309999704360962, 0.8339999914169312, 0.8443333506584167, 0.8403333425521851, 0.8393333554267883]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 6, 2, 2, 5, 9, 1, 8, 6, 5, 8, 9], [5, 3, 1, 3, 0, 2, 2, 4, 2, 0], [97, 47, 79, 81, 53, 45], [0, 1, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1], [7, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3, 2], [48, 57]], "fitness": -0.8165714144706726, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 1, 3, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.square(tf.math.add(beta, alpha)))), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.4132000956915123, 2.220051923148967, 2.0097968108492474, 1.603226838236582, 1.2491811171593274, 1.200372717509952, 1.0017727449065927, 0.8917913746289007, 0.8388557923058981, 0.8120819017745721, 0.779313705356728, 0.7534020006806229, 0.7105089678913611, 0.6858589618890324, 0.6562924889005989, 0.6537862778922365, 0.6180663798400486, 0.6077871390495003, 0.6057594551575293, 0.5607258742747763, 0.580563318696335, 0.5482362008853722, 0.5397387598688577, 0.5475813011845357, 0.5371651148531557, 0.5082914706439138, 0.5062515614779398, 0.5108924583988167, 0.49614828554567736, 0.5005255849873779], "accuracy": [0.2502971887588501, 0.16695284843444824, 0.35741645097732544, 0.47708359360694885, 0.5653150081634521, 0.5816932916641235, 0.639809787273407, 0.6728305220603943, 0.6889446377754211, 0.6950204968452454, 0.7084929347038269, 0.7189275026321411, 0.733060359954834, 0.735041618347168, 0.7436270117759705, 0.7512878179550171, 0.7693831920623779, 0.7676661014556885, 0.7711002230644226, 0.7928939461708069, 0.7770439982414246, 0.7909126877784729, 0.7960638999938965, 0.7923656105995178, 0.7961959838867188, 0.8062343001365662, 0.8094043135643005, 0.8148196935653687, 0.8086118102073669, 0.8140271902084351], "val_loss": [1.9709574835641044, 1.5111137798854284, 1.4953585011618478, 1.1925878865378243, 0.965956585747855, 0.7123219796589443, 0.6959833928516933, 0.6598369223730904, 0.6667044843946185, 0.5941262756075177, 0.6743499551500592, 0.5645629337855748, 0.5418128626687186, 0.5294896193913051, 0.5188429185322353, 0.5085271767207554, 0.511022550719125, 0.47203661714281353, 0.47849697726113455, 0.5045396600450788, 0.4477426154272897, 0.4689067602157593, 0.48422229290008545, 0.44518257890428814, 0.4417718989508493, 0.4318139638219561, 0.4732504572187151, 0.44762395109449116, 0.4688798189163208, 0.4211292266845703], "val_accuracy": [0.10366666316986084, 0.41999998688697815, 0.41066667437553406, 0.5529999732971191, 0.5706666707992554, 0.6746666431427002, 0.6946666836738586, 0.6966666579246521, 0.7076666951179504, 0.7419999837875366, 0.6793333292007446, 0.7416666746139526, 0.7566666603088379, 0.750333309173584, 0.7716666460037231, 0.7796666622161865, 0.7643333077430725, 0.8016666769981384, 0.7903333306312561, 0.75, 0.8036666512489319, 0.7850000262260437, 0.7816666960716248, 0.8056666851043701, 0.8143333196640015, 0.8100000023841858, 0.7860000133514404, 0.800000011920929, 0.7896666526794434, 0.8080000281333923]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 6, 2, 4, 9, 9, 1, 8, 6, 5, 8, 9], [3, 3, 1, 3, 0, 2, 2, 4, 2, 0], [97, 47, 79, 81, 53, 45], [1, 1, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1], [7, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3, 2], [48, 57]], "fitness": -0.7879999876022339, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 6, 3, 2, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha)))), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0684314173415133, 1.6961131142020587, 1.1365613069170266, 0.8912752295891371, 0.8370234322129082, 0.72966436362931, 0.6865205025597334, 0.6952514302429821, 0.6953694725694783, 0.606669027280058, 0.5937370305457498, 0.590094326556776, 0.5592868199532357, 0.5384101508678053, 0.5259679193509931, 0.5258644765409984], "accuracy": [0.31699907779693604, 0.4349491596221924, 0.5782591700553894, 0.6701889038085938, 0.6860388517379761, 0.7253995537757874, 0.7378153204917908, 0.7366266250610352, 0.7342491149902344, 0.772288978099823, 0.7728173136711121, 0.7800818681716919, 0.7887993454933167, 0.8009510040283203, 0.807158887386322, 0.8043851256370544], "val_loss": [1.7055014882768904, 0.9411588736942836, 0.9032488891056606, 0.7041475261960711, 0.5767487628119332, 0.6171737568719047, 0.6241950818470546, 0.518574697630746, 0.49389478138514925, 0.4828166791370937, 0.45979353359767366, 0.47380837372371126, 0.47932892186301096, 0.4910364661897932, 0.482887864112854, 0.5136476584843227], "val_accuracy": [0.22233332693576813, 0.5979999899864197, 0.6420000195503235, 0.6790000200271606, 0.7386666536331177, 0.7099999785423279, 0.6916666626930237, 0.7576666474342346, 0.7799999713897705, 0.7886666655540466, 0.7906666398048401, 0.7770000100135803, 0.7833333611488342, 0.7896666526794434, 0.7756666541099548, 0.75]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 6, 2, 4, 9, 9, 1, 8, 6, 5, 8, 9], [2, 1, 3, 5, 3, 2, 2, 4, 2, 0], [97, 7, 79, 81, 53, 45], [1, 1, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1], [7, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3, 2], [48, 57]], "fitness": -0.7845714092254639, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 6, 3, 2, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.068505036690767, 1.717515070582299, 1.094311795308999, 0.9639075037006847, 0.8262571290798664, 0.7572061578752878, 0.7179127830744829, 0.685649431038369, 0.6807004073827873, 0.611320816475434, 0.6028678493256645, 0.58836561211537, 0.5703772698111932, 0.5472275428783939, 0.5423887257232106, 0.5244427881441127], "accuracy": [0.31686699390411377, 0.43045833706855774, 0.5848633050918579, 0.6501122713088989, 0.6885483860969543, 0.7121912837028503, 0.7279091477394104, 0.7351737022399902, 0.7404569983482361, 0.7656848430633545, 0.769911527633667, 0.7812706232070923, 0.785629391670227, 0.7969884872436523, 0.7981772422790527, 0.798309326171875], "val_loss": [1.7040809222630091, 0.9629976408822196, 0.8807921409606934, 0.7477927889142718, 0.6451468127114433, 0.5849723815917969, 0.5414532593318394, 0.5204875639506749, 0.5089186770575387, 0.50629723072052, 0.46542697293417795, 0.5000120912279401, 0.48649396215166363, 0.5071387461253575, 0.4906823975699289, 0.4750016416822161], "val_accuracy": [0.22300000488758087, 0.5463333129882812, 0.6173333525657654, 0.6600000262260437, 0.7009999752044678, 0.7329999804496765, 0.7459999918937683, 0.7596666812896729, 0.7580000162124634, 0.7803333401679993, 0.7893333435058594, 0.7583333253860474, 0.7799999713897705, 0.7766666412353516, 0.765666663646698, 0.7710000276565552]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 6, 2, 2, 5, 9, 1, 8, 6, 5, 8, 9], [5, 3, 1, 3, 0, 2, 2, 4, 2, 0], [52, 47, 79, 81, 53, 45], [0, 1, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1], [7, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3, 2], [62, 57]], "fitness": -0.3911428451538086, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2592600953892283, 2.60344675632437, 2.305213730868379, 2.3033502079224655, 2.301208111115923, 2.273704525722473, 2.210029933084476, 2.2569508559164384, 2.3071670519945062, 2.305034353685511, 2.3037640307447487], "accuracy": [0.20261524617671967, 0.16576409339904785, 0.09615638852119446, 0.09853387624025345, 0.10632677376270294, 0.14489498734474182, 0.18557654321193695, 0.19297318160533905, 0.10328886657953262, 0.09787346422672272, 0.09285431355237961], "val_loss": [3.6650729860578264, 1.9772955349513464, 1.9744502476283483, 1.973074163709368, 1.9709923607962472, 1.4345568588801794, 1.5879034655434745, 1.9815941538129533, 1.9742770876203264, 1.9739228657313757, 1.9738866261073522], "val_accuracy": [0.15133333206176758, 0.09833333641290665, 0.09799999743700027, 0.13699999451637268, 0.10000000149011612, 0.4269999861717224, 0.36933332681655884, 0.09933333098888397, 0.10366666316986084, 0.10366666316986084, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 6, 2, 2, 5, 9, 1, 8, 6, 5, 8, 9], [1, 1, 3, 5, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [1, 1, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1], [7, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3, 2], [48, 57]], "fitness": -0.28057143092155457, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.606678716164255, 2.495296256070785, 2.5531581890754667, 2.338177104557447, 2.352717613767655, 2.3525489626181453, 2.349165998571474], "accuracy": [0.22493726015090942, 0.15215955674648285, 0.17712323367595673, 0.10381719470024109, 0.1356491893529892, 0.1620657742023468, 0.09893012791872025], "val_loss": [2.001556396484375, 1.6582932812826974, 2.0118165016174316, 2.221014772142683, 1.9477342878069197, 1.99324859891619, 2.031328405652727], "val_accuracy": [0.09833333641290665, 0.32733333110809326, 0.09799999743700027, 0.1693333387374878, 0.17633333802223206, 0.09833333641290665, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 6, 2, 4, 9, 9, 1, 8, 6, 5, 8, 9], [1, 1, 3, 5, 3, 2, 2, 4, 2, 0], [97, 47, 79, 81, 53, 45], [0, 1, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1], [7, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3, 2], [76, 57]], "fitness": -0.20828571915626526, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 4, 5, 0, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(alpha, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad))), tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.237242026713861, 2.4565275711799734, 2.30415629723352, 2.3029228353922346, 2.2921277281000725, 2.258303711238302, 2.4327610653814404, 2.3043652838562236, 2.303514195061662, 2.303360006513534], "accuracy": [0.19891692698001862, 0.11438383162021637, 0.09906221181154251, 0.09602430462837219, 0.13710209727287292, 0.17051908373832703, 0.15955619513988495, 0.09496764093637466, 0.09087307006120682, 0.0956280529499054], "val_loss": [2.7102300098964145, 1.9755698612758092, 1.973691122872489, 1.9716006006513322, 1.8844263894217355, 2.8768164770943776, 1.9753680910382951, 1.9741520881652832, 1.9738586970738001, 1.973832607269287], "val_accuracy": [0.17366667091846466, 0.1003333330154419, 0.1003333330154419, 0.1720000058412552, 0.37599998712539673, 0.1993333399295807, 0.09833333641290665, 0.10199999809265137, 0.10066666454076767, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 6, 2, 1, 9, 9, 1, 8, 6, 5, 8, 9], [3, 3, 1, 3, 0, 2, 2, 4, 2, 0], [14, 47, 79, 81, 53, 45], [1, 1, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1], [7, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3, 2], [48, 57]], "fitness": -0.10314285755157471, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), alpha)), grad)), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.60668469338196, 2.4089559598637296, 2.3224198195944057, 2.306844034561502, 2.2820585549956283, 2.253199736865095, 2.173428967360886, 2.2065182756265993, 2.170061457883003, 2.1789759698718405, 2.2104333819745947, 2.286653618030954, 2.2630413209033162], "accuracy": [0.22480517625808716, 0.15532954037189484, 0.10011887550354004, 0.11293092370033264, 0.16312244534492493, 0.1550653874874115, 0.18676528334617615, 0.1674811840057373, 0.19376568496227264, 0.17738740146160126, 0.16166952252388, 0.15255580842494965, 0.12032756209373474], "val_loss": [2.0014945438929965, 1.986508914402553, 1.9893616267613001, 1.8234643936157227, 1.8909786088126046, 1.7940519196646554, 1.8253468785967146, 1.733835288456508, 1.779447283063616, 1.821901525769915, 1.783989361354283, 1.9276302882603236, 1.9278362137930733], "val_accuracy": [0.09833333641290665, 0.09966666996479034, 0.1003333330154419, 0.23766666650772095, 0.1589999943971634, 0.2446666657924652, 0.22566667199134827, 0.2526666522026062, 0.23733332753181458, 0.22200000286102295, 0.18799999356269836, 0.1326666623353958, 0.1340000033378601]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 6, 8, 4, 9, 9, 1, 8, 6, 5, 8, 9], [1, 1, 3, 5, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [1, 1, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1], [7, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 13, 7, 6, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(alpha), tf.math.pow(tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, sigma), sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07607977837324142, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [9, 6, 0, 2, 5, 9, 1, 8, 6, 5, 8, 9], [1, 1, 3, 5, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [0, 1, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1], [7, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 3, 1, 1, 0, 0, 13, 7, 6, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, sigma), sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07607977837324142, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [9, 6, 0, 2, 5, 9, 1, 8, 6, 5, 8, 9], [1, 1, 3, 5, 3, 2, 2, 4, 2, 0], [97, 47, 79, 81, 53, 45], [1, 1, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1], [7, 0, 8, 9, 7], [4, 7], [88, 19], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0742306187748909, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 6, 2, 4, 9, 9, 1, 8, 6, 5, 8, 9], [5, 1, 3, 5, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [0, 1, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1], [7, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 3, 1, 1, 0, 0, 13, 7, 6, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(grad, tf.math.add(beta, alpha)), tf.math.add(beta, grad))), tf.math.pow(tf.math.add(beta, grad), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(alpha), tf.math.pow(tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, sigma), sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07607977837324142, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 6, 2, 2, 9, 9, 1, 8, 6, 5, 8, 9], [1, 1, 3, 5, 3, 2, 2, 4, 2, 0], [97, 47, 79, 81, 53, 45], [1, 1, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1], [7, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 5, 0, 4, 2, 1, 2, 3], [2, 0, 0, 1, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 6, 3, 2, 1, 0, 0, 0, 0, 3, 2, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.divide_no_nan(alpha, tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad))), tf.math.add(tf.math.add(beta, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 6, 8, 4, 9, 9, 1, 8, 6, 5, 8, 9], [3, 3, 1, 3, 0, 2, 2, 4, 2, 0], [97, 47, 79, 81, 53, 45], [1, 1, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1], [7, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [8, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3, 2], [95, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 13, 7, 6, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.math.negative(alpha), tf.math.pow(tf.math.add(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, sigma), sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 0, 2, 5, 9, 1, 8, 6, 5, 8, 9], [1, 1, 3, 5, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [0, 1, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1], [7, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 3, 1, 1, 0, 0, 3, 2, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(alpha, alpha)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0742306187748909, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 6, 2, 4, 8, 9, 1, 8, 6, 5, 8, 9], [1, 1, 3, 5, 3, 2, 2, 4, 2, 0], [97, 47, 79, 81, 53, 45], [1, 1, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1], [7, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(alpha, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.add(beta, grad)))), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0742306187748909, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 6, 2, 4, 9, 9, 1, 8, 6, 5, 8, 9], [1, 1, 3, 5, 3, 2, 2, 4, 2, 0], [97, 47, 79, 81, 53, 45], [1, 1, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1], [7, 0, 8, 9, 7], [4, 7], [88, 19], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(alpha, tf.math.add(beta, alpha)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0742306187748909, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 6, 2, 4, 9, 9, 1, 8, 6, 5, 8, 9], [3, 5, 3, 3, 0, 2, 2, 4, 2, 0], [97, 47, 79, 81, 53, 45], [1, 1, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1], [7, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3, 2], [48, 57]], "fitness": -0.04171428456902504, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.6066851881060225, 2.4497400932402704, 2.3272624638385744, 2.3390824547879623, 2.3218317416995635, 2.3268905314535058, 2.312990731881862, 2.335516999914441, 2.3106144609515535, 2.3351715354871567, 2.3286077953868176, 2.3370799708753736, 2.3135305875328003, 2.332174145991162], "accuracy": [0.22480517625808716, 0.14489498734474182, 0.10011887550354004, 0.09708096832036972, 0.09642054885625839, 0.09813763201236725, 0.10342095047235489, 0.09826971590518951, 0.10460969805717468, 0.1138555034995079, 0.09919429570436478, 0.10077928751707077, 0.09549596905708313, 0.09932637959718704], "val_loss": [2.0014825548444475, 1.9905415262494768, 1.999232564653669, 1.9888076101030623, 1.9909816469464983, 1.9886751174926758, 1.9909654344831194, 1.9910415240696497, 1.942451340811593, 2.0045396259852817, 1.9897653715951102, 1.9891308375767298, 1.9896060398646764, 1.987257957458496], "val_accuracy": [0.09833333641290665, 0.09966666996479034, 0.09799999743700027, 0.1003333330154419, 0.10000000149011612, 0.10366666316986084, 0.1003333330154419, 0.09799999743700027, 0.15000000596046448, 0.10066666454076767, 0.1003333330154419, 0.09799999743700027, 0.09933333098888397, 0.10199999809265137]}}]