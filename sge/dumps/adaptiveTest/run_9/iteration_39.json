[{"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 0, 1, 0, 0, 0, 1], [0, 1, 0], [2, 9], [5, 4], [8, 0, 19], [0, 1, 0, 1], [1], [], [2], [], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 3], [28, 57]], "fitness": -0.7860000133514404, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.291137971016457, 2.2664001511072582, 2.2337625785321764, 2.1942956749285374, 2.1398598943419853, 2.0704939334840664, 1.9725054626246925, 1.8583833020298064, 1.719246149267802, 1.5910500072925917, 1.4651003449017646, 1.3725798539418774, 1.2945050272124712, 1.2384378996350116, 1.1878388215837037, 1.1371789320254322, 1.1004351108081432, 1.0627019359702998, 1.0209069837117475, 1.0067005417822783, 0.9852731795972915, 0.9641517138657489, 0.9385517752008384, 0.9193528571448164, 0.9089484929786524, 0.8935642961371828, 0.889821200590596, 0.8684136661178227, 0.8688215968111613, 0.8442277545548543, 0.8399450137174015, 0.8285513571728615, 0.8197067443799538, 0.8152952523688756, 0.812037958059297, 0.801033213799577, 0.7908314969703081, 0.7889790620864926, 0.7863179099180317, 0.7732464102721879, 0.7688877586250245, 0.7574621930161425, 0.7605988747250717, 0.7607534897640759, 0.7536425110434403, 0.7548169591927242, 0.7481768061031109, 0.7487134018578565, 0.7315547473599741, 0.7240748288782282, 0.7348507304689778, 0.728556563101267, 0.7248639318023801, 0.7116846498512809, 0.7037819832653937, 0.6999617801476558, 0.7025715962865208, 0.7059666904019422, 0.7087237854297402, 0.6974396225310524, 0.695795626530731, 0.6871998971636899, 0.6862128789178321, 0.6899628165281207, 0.6906344411537206], "accuracy": [0.11676132678985596, 0.1868973672389984, 0.25214633345603943, 0.3135649263858795, 0.3568881154060364, 0.3819838762283325, 0.41909918189048767, 0.4418174624443054, 0.47629112005233765, 0.4955752193927765, 0.5255580544471741, 0.5469554662704468, 0.5659754276275635, 0.5739004015922546, 0.5879011750221252, 0.5995244979858398, 0.6135252714157104, 0.6308281421661377, 0.6399418711662292, 0.6436402201652527, 0.6497160196304321, 0.6627922058105469, 0.6660943031311035, 0.6753401160240173, 0.6767930388450623, 0.6790384650230408, 0.6826046705245972, 0.687887966632843, 0.6913221478462219, 0.7003037929534912, 0.6973979473114014, 0.7004358768463135, 0.7086250185966492, 0.7053229212760925, 0.702681303024292, 0.707568347454071, 0.7084929347038269, 0.711530864238739, 0.7137762308120728, 0.7148329019546509, 0.7161537408828735, 0.7214370369911194, 0.7201162576675415, 0.7211728692054749, 0.7239466309547424, 0.7219653725624084, 0.7226257920265198, 0.7276449799537659, 0.7316074371337891, 0.733060359954834, 0.7321357727050781, 0.7300224304199219, 0.7371549606323242, 0.733588695526123, 0.7425703406333923, 0.739928662776947, 0.7404569983482361, 0.7371549606323242, 0.7314753532409668, 0.7397965788841248, 0.7413815855979919, 0.7436270117759705, 0.743891179561615, 0.7497028112411499, 0.7442874312400818], "val_loss": [1.9463310922895158, 1.9202393123081751, 1.887850557054792, 1.8441831724984306, 1.7838382720947266, 1.7024743216378349, 1.597018105643136, 1.472813606262207, 1.3383753299713135, 1.2109835147857666, 1.0999416623796736, 1.0123485497065954, 0.9449410097939628, 0.8928968225206647, 0.8511526925223214, 0.8145620482308524, 0.7874151468276978, 0.7631101778575352, 0.7408290931156704, 0.7222450971603394, 0.7064398016248431, 0.6928918531962803, 0.6798431362424578, 0.669046231678554, 0.658534049987793, 0.6513289042881557, 0.642007759639195, 0.6352408443178449, 0.6287842648369926, 0.6215289490563529, 0.617127673966544, 0.6095209292003086, 0.605292626789638, 0.6002454587391445, 0.5947021416255406, 0.5908460446766445, 0.5865395069122314, 0.5827515636171613, 0.5803346974509103, 0.5756070954459054, 0.572546294757298, 0.5681453262056623, 0.5639223371233258, 0.5630849429539272, 0.5599390438624791, 0.5563824857984271, 0.5541442462376186, 0.5514294930866787, 0.5500919818878174, 0.5451137678963798, 0.5434339216777256, 0.5408237150737217, 0.5391751868384225, 0.5366769007274083, 0.5330429588045392, 0.529992801802499, 0.5289395025798252, 0.5277314015797206, 0.5253760984965733, 0.5232119389942714, 0.5221117053713117, 0.520283613886152, 0.5189915554864066, 0.517982942717416, 0.516343184879848], "val_accuracy": [0.23466666042804718, 0.36399999260902405, 0.414000004529953, 0.45399999618530273, 0.4833333194255829, 0.5243333578109741, 0.5566666722297668, 0.581333339214325, 0.5929999947547913, 0.612666666507721, 0.6380000114440918, 0.659333348274231, 0.6643333435058594, 0.6733333468437195, 0.6826666593551636, 0.6899999976158142, 0.6926666498184204, 0.6946666836738586, 0.7043333053588867, 0.7073333263397217, 0.7126666903495789, 0.7123333215713501, 0.7160000205039978, 0.718999981880188, 0.7223333120346069, 0.722000002861023, 0.7286666631698608, 0.7279999852180481, 0.734666645526886, 0.7353333234786987, 0.7393333315849304, 0.7393333315849304, 0.7429999709129333, 0.7423333525657654, 0.7443333268165588, 0.7459999918937683, 0.746999979019165, 0.7513333559036255, 0.7516666650772095, 0.7523333430290222, 0.7566666603088379, 0.7566666603088379, 0.7549999952316284, 0.7563333511352539, 0.7556666731834412, 0.7590000033378601, 0.7580000162124634, 0.7636666893959045, 0.7636666893959045, 0.7639999985694885, 0.762666642665863, 0.765999972820282, 0.768666684627533, 0.7699999809265137, 0.7683333158493042, 0.7730000019073486, 0.7716666460037231, 0.7713333368301392, 0.7726666927337646, 0.7763333320617676, 0.7756666541099548, 0.7743333578109741, 0.7749999761581421, 0.7746666669845581, 0.7756666541099548]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [0, 1, 1], [1, 9], [5, 4], [8, 0, 19], [0, 1, 0, 1], [1], [], [2], [], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 4, 7], [1, 0, 0, 3], [28, 57]], "fitness": -0.6891428828239441, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 8, 4, 4, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(grad, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.2715437169151222, 2.0192359132442994, 1.442677361854016, 1.19394770932629, 0.933680652454151, 0.8388763989329637, 0.8323634332984493, 0.7794894610397914, 0.7647624256399566, 0.7297757629547703, 0.7056831856051676, 0.66850101835204, 0.6327394246189051, 0.6259094002681118, 0.5987774526926474, 0.5881001617867224, 0.5657314729570886, 0.5575826232616912, 0.535753491862953, 0.5396438451640563, 0.5296993473848064, 0.5134350490206347, 0.5002695730042385, 0.48936554766712154, 0.47704162263536437, 0.47203294740943796, 0.4598811605051918, 0.45490232579633466, 0.446008258310874, 0.43969455042519606, 0.4331257649227581, 0.4247370043553224, 0.43010846053557295, 0.4239932577710157, 0.4122728153604637, 0.4132393872528469, 0.39841043421258826], "accuracy": [0.16814158856868744, 0.3821159601211548, 0.5116893649101257, 0.6048077940940857, 0.6606789231300354, 0.6841896772384644, 0.6802271604537964, 0.6955488324165344, 0.7051908373832703, 0.7214370369911194, 0.7367587089538574, 0.7386078238487244, 0.7508915662765503, 0.7556465268135071, 0.7688548564910889, 0.7728173136711121, 0.7795535326004028, 0.7777044177055359, 0.7950072884559631, 0.7898560166358948, 0.7918372750282288, 0.7980451583862305, 0.8041210174560547, 0.8136309385299683, 0.8164047002792358, 0.821820080280304, 0.8201030492782593, 0.8220842480659485, 0.8329150676727295, 0.8280280232429504, 0.8330471515655518, 0.8317263126373291, 0.8360850811004639, 0.8388587832450867, 0.8407079577445984, 0.8354246616363525, 0.8469158411026001], "val_loss": [1.8689633096967424, 1.3054237025124686, 0.8214883804321289, 0.6867525747844151, 0.6818607194083077, 0.6263762882777623, 0.6019745213644845, 0.5923096111842564, 0.5752101625714984, 0.5646408455712455, 0.5152312857764108, 0.4989484207970755, 0.48061185223715647, 0.4802004950387137, 0.45570267949785503, 0.4536517688206264, 0.45879266943250385, 0.44222824914114817, 0.4447850840432303, 0.44253391878945486, 0.43270530870982576, 0.4358490450041635, 0.41890921763011385, 0.418761031968253, 0.4115912914276123, 0.4017303075109209, 0.3930799535342625, 0.3951057365962437, 0.3888066921915327, 0.3839208483695984, 0.38419645173209055, 0.3724352036203657, 0.386668929031917, 0.3829579864229475, 0.37861032145363943, 0.3835862619536264, 0.40468935455594746], "val_accuracy": [0.40166667103767395, 0.5680000185966492, 0.6286666393280029, 0.6883333325386047, 0.7223333120346069, 0.7153333425521851, 0.7353333234786987, 0.734666645526886, 0.7506666779518127, 0.7536666393280029, 0.7713333368301392, 0.7839999794960022, 0.781000018119812, 0.7816666960716248, 0.8023333549499512, 0.8029999732971191, 0.7903333306312561, 0.8050000071525574, 0.7996666431427002, 0.8016666769981384, 0.8069999814033508, 0.8090000152587891, 0.8220000267028809, 0.8240000009536743, 0.8370000123977661, 0.8396666646003723, 0.8296666741371155, 0.8373333215713501, 0.840666651725769, 0.8373333215713501, 0.8446666598320007, 0.8519999980926514, 0.843999981880188, 0.8456666469573975, 0.8506666421890259, 0.8483333587646484, 0.8496666550636292]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 0, 1, 0, 0, 0, 1], [0, 1, 1], [2, 9], [5, 4], [8, 0, 19], [0, 1, 0, 1], [1], [], [6], [], [0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 4, 7], [1, 0, 0, 3], [28, 57]], "fitness": -0.427142858505249, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 8, 4, 4, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.289597096208253, 2.2646525585734847, 2.2313294497620806, 2.1915010716291294, 2.1373727013012673, 2.078541347552536, 2.022458267722069, 2.0235956231947227], "accuracy": [0.1212521493434906, 0.19138818979263306, 0.2541275918483734, 0.31026285886764526, 0.3419627547264099, 0.35345396399497986, 0.3315281867980957, 0.2747325301170349], "val_loss": [1.945882865360805, 1.9191923822675432, 1.8856543132237025, 1.841202735900879, 1.7850806372506278, 1.7249361446925573, 1.6864748682294572, 1.711559534072876], "val_accuracy": [0.24566666781902313, 0.3610000014305115, 0.41200000047683716, 0.4073333442211151, 0.3903333246707916, 0.34299999475479126, 0.28700000047683716, 0.1979999989271164]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [9, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [2, 9, 6, 1, 6, 3], [5, 4, 2, 1, 3], [27, 0, 19], [0, 1, 0, 1], [1], [], [0], [80], [0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [8, 3, 0, 5, 7], [1, 0, 0, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.multiply(grad, tf.math.add(beta, beta)))), alpha)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 0, 1, 0, 0, 0, 1], [0, 1, 0], [2, 9], [5, 4], [9, 0, 19], [0, 1, 0, 1], [1], [], [2], [], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07634394615888596, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 0, 1, 0, 0, 0, 1], [1, 1, 0], [6, 9], [5, 4], [8, 0, 19], [1, 1, 0, 1], [1], [], [2], [], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0878351628780365, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 0, 1, 0, 0, 0, 1], [0, 1, 1], [4, 9], [5, 5], [8, 0, 19], [1, 1, 0, 1], [1], [], [2], [], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 0, 4, 7], [1, 0, 0, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [12.074328609382661, 1987688.8952088605, 2.33904530365611, 2.315592981868054, 2877127742557191.5, 2.314828163975061], "accuracy": [0.09879804402589798, 0.10394927859306335, 0.09734513610601425, 0.09509972482919693, 0.10170386731624603, 0.0956280529499054], "val_loss": [1.9897896221705846, 2.0177974700927734, 1.990642479487828, 1.9784650121416365, 1.9905685016087122, 1.9772717612130302], "val_accuracy": [0.10366666316986084, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 0, 1, 0, 0, 0, 1], [1, 1, 1], [2, 9], [5, 4], [8, 0, 19], [0, 1, 0, 1], [0], [0], [2], [], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 1, 0, 4, 7, 8, 2], [0, 1, 0, 3, 0, 1], [28, 54, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 13, 7, 6, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.subtract(tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(alpha, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(sigma, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 0, 1, 0, 0, 0, 1], [0, 1, 1], [4, 9], [1, 4], [8, 0, 19], [0, 1, 0, 1, 0, 1, 1], [0, 0, 0], [4, 3, 7], [5], [], [0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 4, 7], [1, 0, 0, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 7, 3, 3, 0, 0, 3, 1, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.add(sigma, sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0948355570435524, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 0, 1, 0, 0, 0, 1], [1, 1, 0], [4, 9], [0, 4], [40, 0, 19], [0, 1, 0, 1], [0], [0], [2], [], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [8, 3, 0, 4, 7], [1, 2, 0, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 0, 1, 0, 0, 0, 1], [0, 1, 0], [2, 9], [5, 4], [8, 0, 19], [0, 1, 0, 1], [1], [], [2], [], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 5, 2], [1, 0, 0, 3, 0], [28, 57, 77]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 12, 7, 5, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(alpha), tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(sigma, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [309710036.6377675, 44755318454.79435, 210833667837.1259, 561397426226.0436, 802918946062.6411, 1665930772542.7573], "accuracy": [0.0758156105875969, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [15307338313.142857, 82989173028.57143, 424465427894.8571, 597459655533.7142, 1156755039378.2856, 1673233320228.5715], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 0, 0, 0, 0, 0, 1], [1, 1, 1], [2, 9], [5, 4], [8, 0, 19], [0, 0, 0, 1], [0, 0, 0], [8, 8, 9], [5], [8], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 3, 0, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07634394615888596, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [0, 2, 1, 1], [50], [1, 0, 0, 0, 0, 0, 1], [0, 1, 0], [1, 9], [4, 4], [8, 0, 19], [1, 1, 0, 1], [1], [], [2], [], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7], [1, 1, 1, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 6, 3, 3, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, alpha), tf.math.negative(alpha))", "other_info": {"loss": [2.3030070912458513, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 3, 1, 1], [50], [1, 0, 1, 0, 0, 0, 1], [1, 1, 1], [2, 9], [5, 4], [8, 0, 19], [0, 1, 0, 1], [1], [], [2], [], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [9, 4, 0, 5, 7], [1, 0, 0, 3], [28, 54]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3030070912458513, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 0, 0, 0, 0, 0, 1], [0, 1, 1], [1, 9], [5, 4], [8, 0, 19], [0, 1, 0, 1], [1], [], [2], [], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 1, 4], [2, 0, 0, 3, 2, 2], [81, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 13, 7, 6, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(tf.math.pow(tf.math.add(beta, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.pow(sigma, beta), beta)))", "other_info": {"loss": [2.3030070912458513, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 1, 1], [2, 9], [5, 4], [8, 0, 19], [0, 1, 0, 1], [0], [8], [2], [], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7], [3, 0, 0, 3], [98, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 7, 4, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(sigma, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.302338634798823, 2.3038994258562684, 2.301639525425228, 2.3025318105002563, 2.3019750661160954, 2.3029588088855735], "accuracy": [0.09047681838274002, 0.09034473448991776, 0.09153348207473755, 0.08875974267721176, 0.09932637959718704, 0.08770307898521423], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1], [0, 0, 1], [1, 9], [4, 4], [8, 0, 19], [0, 1, 0, 1], [1], [], [2], [], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 6, 6, 3, 3, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 7, 4, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.math.square(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.negative(tf.math.pow(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.302338634798823, 2.3038994258562684, 2.301639525425228, 2.3025318105002563, 2.3019750661160954, 2.3029588088855735], "accuracy": [0.09047681838274002, 0.09034473448991776, 0.09153348207473755, 0.08875974267721176, 0.09932637959718704, 0.08770307898521423], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [1, 2, 1, 1], [50], [0, 0, 1, 0, 0, 0, 1], [0, 1, 1], [4, 9], [5, 4], [8, 0, 19], [0, 1, 0, 1], [1], [8], [5], [], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 9, 0, 5, 7], [1, 2, 0, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 5, 4, 1, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.square(alpha)))", "other_info": {"loss": [2.302338634798823, 2.3038994258562684, 2.301639525425228, 2.3025318105002563, 2.3019750661160954, 2.3029588088855735], "accuracy": [0.09047681838274002, 0.09034473448991776, 0.09153348207473755, 0.08875974267721176, 0.09932637959718704, 0.08770307898521423], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 0, 0, 0, 0, 0, 1], [0, 1, 1], [1, 9], [5, 4], [8, 0, 19], [1, 1, 0, 1], [0], [], [5], [], [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7], [1, 3, 0, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(alpha), sigma), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302338634798823, 2.3038994258562684, 2.301639525425228, 2.3025318105002563, 2.3019750661160954, 2.3029588088855735], "accuracy": [0.09047681838274002, 0.09034473448991776, 0.09153348207473755, 0.08875974267721176, 0.09932637959718704, 0.08770307898521423], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 0, 0, 0, 0, 0, 1], [0, 1, 1], [1, 9], [5, 4], [8, 0, 19], [0, 1, 0, 1], [1], [], [2], [], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 9, 5, 7], [1, 2, 0, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, beta), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302338634798823, 2.3038994258562684, 2.301639525425228, 2.3025318105002563, 2.3019750661160954, 2.3029588088855735], "accuracy": [0.09047681838274002, 0.09034473448991776, 0.09153348207473755, 0.08875974267721176, 0.09932637959718704, 0.08770307898521423], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]