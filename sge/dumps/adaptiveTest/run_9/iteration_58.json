[{"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 0, 0, 1], [0, 1, 0], [1, 8], [7], [], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7857142686843872, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 2, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.sqrt(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2922278042907775, 2.263830849806615, 2.233105341173544, 2.1968930643059243, 2.1413863015417345, 2.0663169079673382, 1.9675447077972226, 1.856617421285745, 1.725644553578399, 1.5982184810346192, 1.478336380000726, 1.3778593319282084, 1.3020601862567434, 1.2520097656619076, 1.1728674316481829, 1.143144192350476, 1.0962011825296747, 1.0524891037211017, 1.0306947571868201, 1.0038752668506323, 0.979513664987849, 0.9707554769774218, 0.9440631168377697, 0.9290235417866357, 0.9072922634694239, 0.899054142100196, 0.8898934628182178, 0.8733303219477545, 0.8613834345991018, 0.8517109615581383, 0.8522382348189343, 0.8381421429102274, 0.8118331506818812, 0.8222243219806912, 0.8182686470156695, 0.7974313686804418, 0.7921498913523103, 0.7765475991395455, 0.7902364894430856, 0.7802045476387804, 0.7772292652780102, 0.760824304915942, 0.7604164960456483, 0.7590767263641857, 0.7502471885393325, 0.7529084158926246, 0.749319994879468, 0.7338657113444835, 0.7333389165190154, 0.7276050273406272, 0.7326159143743891, 0.7212528473177385, 0.7188075663958086, 0.7201855387890486, 0.7083123135151029, 0.7127382440054343, 0.7036410068335109, 0.6979842190933958, 0.7097994460720727, 0.6840907720810292, 0.7003761427340459, 0.6875540698287887, 0.6887278180978301, 0.6876350517884505, 0.6780785153082506, 0.6783524747490647, 0.666793840121379, 0.6736117720666925], "accuracy": [0.11808215826749802, 0.19931316375732422, 0.2588825821876526, 0.3097345232963562, 0.351340651512146, 0.39347511529922485, 0.42147669196128845, 0.44366663694381714, 0.4695548713207245, 0.4983489513397217, 0.5251618027687073, 0.5415400862693787, 0.561880886554718, 0.5674283504486084, 0.5982036590576172, 0.600581169128418, 0.620261549949646, 0.6244881749153137, 0.633469820022583, 0.6491876840591431, 0.6553955674171448, 0.6499801874160767, 0.6637167930603027, 0.6692643165588379, 0.6708492636680603, 0.6748117804527283, 0.6814159154891968, 0.6828688383102417, 0.6922467350959778, 0.6885483860969543, 0.6903975605964661, 0.6940959095954895, 0.7071720957756042, 0.7030775547027588, 0.7088891863822937, 0.707040011882782, 0.7119271159172058, 0.7157574892044067, 0.7144366502761841, 0.7177387475967407, 0.7132478952407837, 0.7232862114906311, 0.7193237543106079, 0.7177387475967407, 0.7273808121681213, 0.726192057132721, 0.7264562249183655, 0.7281733155250549, 0.7318716049194336, 0.7273808121681213, 0.7313432693481445, 0.7327961921691895, 0.7354378700256348, 0.7308149337768555, 0.7341170310974121, 0.7358341217041016, 0.7395324110984802, 0.739928662776947, 0.7297582626342773, 0.7461365461349487, 0.7432307600975037, 0.7432307600975037, 0.743891179561615, 0.7413815855979919, 0.7454761862754822, 0.7454761862754822, 0.7515519857406616, 0.7528728246688843], "val_loss": [1.9466041837419783, 1.9203846114022392, 1.8881049156188965, 1.8450029236929757, 1.7844010761805944, 1.702197858265468, 1.5957252298082625, 1.4723355770111084, 1.3405680656433105, 1.2155732767922538, 1.106698751449585, 1.017946481704712, 0.9491913659232003, 0.8957488196236747, 0.8512097256524223, 0.8169198887688773, 0.7875224351882935, 0.7612452166421073, 0.7421829700469971, 0.7218078374862671, 0.7067175933292934, 0.6954785244805473, 0.6818600722721645, 0.6715445859091622, 0.6637673548289708, 0.6509852068764823, 0.6442147833960397, 0.6352335214614868, 0.6282649210521153, 0.622106637273516, 0.6174280643463135, 0.6101070812770298, 0.605813843863351, 0.6002187728881836, 0.5969505650656564, 0.5914473703929356, 0.5886240005493164, 0.58184472152165, 0.5783380610602242, 0.577118992805481, 0.5714011873517718, 0.5685693195887974, 0.5647169351577759, 0.5608458689280919, 0.5588732957839966, 0.5545351164681571, 0.5534871476037162, 0.5515310423714774, 0.5491446086338588, 0.5448783806392125, 0.5437621218817574, 0.5416208335331508, 0.5398122583116803, 0.5364000116075788, 0.5343554701123919, 0.5334027835300991, 0.5302197081702096, 0.5286873408726284, 0.5270494903836932, 0.5242054973329816, 0.5239536251340594, 0.5206934043339321, 0.5200902223587036, 0.51862290927342, 0.5151654822485787, 0.515183823449271, 0.5131302731377738, 0.5130057164600917], "val_accuracy": [0.2316666692495346, 0.3553333282470703, 0.406333327293396, 0.4449999928474426, 0.47966668009757996, 0.5116666555404663, 0.5423333048820496, 0.5720000267028809, 0.5946666598320007, 0.6206666827201843, 0.6370000243186951, 0.6553333401679993, 0.6650000214576721, 0.675000011920929, 0.6819999814033508, 0.6866666674613953, 0.6919999718666077, 0.6946666836738586, 0.6933333277702332, 0.7073333263397217, 0.706333339214325, 0.7123333215713501, 0.7200000286102295, 0.7223333120346069, 0.721666693687439, 0.7286666631698608, 0.7306666374206543, 0.7333333492279053, 0.7316666841506958, 0.7366666793823242, 0.737333357334137, 0.7406666874885559, 0.7436666488647461, 0.7436666488647461, 0.7423333525657654, 0.7486666440963745, 0.7486666440963745, 0.753333330154419, 0.7523333430290222, 0.753000020980835, 0.7570000290870667, 0.7546666860580444, 0.7543333172798157, 0.7599999904632568, 0.7586666941642761, 0.7630000114440918, 0.7593333125114441, 0.7620000243186951, 0.7590000033378601, 0.765999972820282, 0.765666663646698, 0.7646666765213013, 0.7639999985694885, 0.7703333497047424, 0.7693333625793457, 0.7699999809265137, 0.7680000066757202, 0.7716666460037231, 0.7730000019073486, 0.7766666412353516, 0.777999997138977, 0.7766666412353516, 0.7793333530426025, 0.777999997138977, 0.7733333110809326, 0.7773333191871643, 0.7773333191871643, 0.777999997138977]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 0, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 0, 0, 1, 1], [0, 1, 1], [1, 4], [7, 7], [], [0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7834285497665405, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 8, 4, 4, 2], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(beta), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [2.293311378471194, 2.26767950652534, 2.240877802219877, 2.210992121976742, 2.166402338077332, 2.107468822424076, 2.030617005002182, 1.9423655539991171, 1.831406732686302, 1.713123140018913, 1.5931869521510758, 1.4857045060938627, 1.3983057131935435, 1.3370922390401576, 1.250595026705259, 1.21389277545673, 1.1611140338326835, 1.1124296653634442, 1.0869196448831857, 1.0557702749381055, 1.028324606459233, 1.0182357101140636, 0.9890931247090304, 0.9711268441536328, 0.9456793765003938, 0.936263666350088, 0.926265121466763, 0.9065602797999626, 0.8931466697024757, 0.8823974783772317, 0.8820269128209045, 0.8671531116863236, 0.8398505548255601, 0.8497417828489083, 0.8442403014939711, 0.8234940961194218, 0.8163595968910795, 0.8009985833435074, 0.8150159397129653, 0.8038335156683216, 0.8013294196446905, 0.7832540587395757, 0.7831791445658176, 0.7810528458715698, 0.771518561282981, 0.7747145973538615, 0.7705417231341332, 0.7548035725295787, 0.7542041143201456, 0.7476357655313588, 0.7530794886313945, 0.7411467775834345, 0.7383018654445537, 0.7396288426434753, 0.7274020778236924, 0.7319802314991712, 0.7231900512880858, 0.7163946202260754, 0.7285604375448871, 0.7022114244151062, 0.7178867931190247, 0.7065481999452324, 0.7070926216378928, 0.7058051534616054, 0.6954557019816162, 0.6964885770699856], "accuracy": [0.11491216719150543, 0.18901069462299347, 0.2421080470085144, 0.2919033169746399, 0.3333773612976074, 0.3749834895133972, 0.4033813178539276, 0.42808082699775696, 0.448949933052063, 0.47364944219589233, 0.502971887588501, 0.5176330804824829, 0.5395588278770447, 0.548540472984314, 0.5786554217338562, 0.5831462144851685, 0.6042794585227966, 0.6071853041648865, 0.6161669492721558, 0.6284506916999817, 0.637828528881073, 0.6362435817718506, 0.6499801874160767, 0.654999315738678, 0.6590939164161682, 0.6634526252746582, 0.6695284843444824, 0.6715096831321716, 0.6816800832748413, 0.6799629926681519, 0.6831330060958862, 0.6868313550949097, 0.6970016956329346, 0.6950204968452454, 0.6984546184539795, 0.6988508701324463, 0.7053229212760925, 0.7057191729545593, 0.7069079279899597, 0.7103421092033386, 0.705058753490448, 0.7149649858474731, 0.713908314704895, 0.7107383608818054, 0.7181349992752075, 0.7185312509536743, 0.7202483415603638, 0.7224937081336975, 0.7252674698829651, 0.7211728692054749, 0.724210798740387, 0.7260599732398987, 0.7281733155250549, 0.726192057132721, 0.7280412316322327, 0.7317395210266113, 0.733588695526123, 0.7364945411682129, 0.7224937081336975, 0.7411174178123474, 0.7375511527061462, 0.7376832365989685, 0.7374191284179688, 0.7333245277404785, 0.7407211661338806, 0.7423061728477478], "val_loss": [1.949037960597447, 1.925828456878662, 1.8983824593680245, 1.8634206908089774, 1.8156630652291434, 1.7521635464259557, 1.6695097514561243, 1.5693868568965368, 1.4545064994267054, 1.3352181570870536, 1.2216034957340784, 1.120579413005284, 1.037675108228411, 0.9718843187604632, 0.9170832293374198, 0.8744539873940604, 0.8381214993340629, 0.8061499084745135, 0.7822761705943516, 0.759306822504316, 0.7409066132136753, 0.7271525859832764, 0.711543219430106, 0.6993153776441302, 0.6891077927180699, 0.675858701978411, 0.6674261774335589, 0.6576654229845319, 0.6495368821280343, 0.6424427373068673, 0.6368800742285592, 0.6290860176086426, 0.6238276277269635, 0.6176858629499163, 0.6135616643088204, 0.6080730983189174, 0.6043242727007184, 0.5977540867669242, 0.5941368511744908, 0.592449460710798, 0.5861122608184814, 0.5830419744764056, 0.5790469305855888, 0.5750663110188076, 0.5730352061135429, 0.5685533796037946, 0.5668544939586094, 0.564777033669608, 0.5622762611934117, 0.5576445204871041, 0.5564555951527187, 0.5537742376327515, 0.5517245871680123, 0.548488974571228, 0.5465725149427142, 0.5452706643513271, 0.542104993547712, 0.5404413597924369, 0.5383177655083793, 0.5356071165629795, 0.5348266192844936, 0.5320370026997158, 0.5311309950692313, 0.5295060362134661, 0.5257854121071952, 0.5258849348340716], "val_accuracy": [0.2133333384990692, 0.34566667675971985, 0.390666663646698, 0.4323333203792572, 0.46033334732055664, 0.49399998784065247, 0.5296666622161865, 0.5583333373069763, 0.5806666612625122, 0.5979999899864197, 0.6083333492279053, 0.6343333125114441, 0.6493333578109741, 0.6643333435058594, 0.6700000166893005, 0.6776666641235352, 0.6836666464805603, 0.6886666417121887, 0.6880000233650208, 0.6973333358764648, 0.6983333230018616, 0.703000009059906, 0.7096666693687439, 0.7146666646003723, 0.7123333215713501, 0.7210000157356262, 0.7223333120346069, 0.7273333072662354, 0.7246666550636292, 0.7300000190734863, 0.7323333621025085, 0.734333336353302, 0.7386666536331177, 0.7386666536331177, 0.7386666536331177, 0.7426666617393494, 0.7433333396911621, 0.7456666827201843, 0.746999979019165, 0.7450000047683716, 0.750333309173584, 0.75, 0.749666690826416, 0.7536666393280029, 0.753000020980835, 0.7576666474342346, 0.7540000081062317, 0.7586666941642761, 0.7553333044052124, 0.7583333253860474, 0.7580000162124634, 0.7586666941642761, 0.7616666555404663, 0.7643333077430725, 0.7633333206176758, 0.765666663646698, 0.7649999856948853, 0.7676666378974915, 0.7696666717529297, 0.7736666798591614, 0.7756666541099548, 0.7699999809265137, 0.7726666927337646, 0.7716666460037231, 0.7733333110809326, 0.7739999890327454]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [3, 1, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 0, 0, 1], [1, 1, 0], [1, 8], [3], [], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 1, 4, 7, 5, 9], [2, 0, 0, 1, 3, 3], [20, 57, 77]], "fitness": -0.33571428060531616, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3083811572766053, 2.4098672798485756, 2.520725311966557, 2.304749160851501, 2.282451973993072, 2.2900276329570586], "accuracy": [0.2052568942308426, 0.15532954037189484, 0.12613920867443085, 0.10936468094587326, 0.18121780455112457, 0.12772421538829803], "val_loss": [1.8870394570486886, 2.5371971130371094, 1.979710306440081, 1.962381294795445, 1.977550710950579, 1.8089934757777624], "val_accuracy": [0.29733332991600037, 0.2173333317041397, 0.10466666519641876, 0.17733334004878998, 0.10000000149011612, 0.2759999930858612]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [3, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 0, 0, 1], [1, 1, 0], [1, 8], [4], [61], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 1, 4, 7, 5, 9], [2, 0, 0, 1, 3, 3], [20, 57, 77]], "fitness": -0.3037142753601074, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3085487727491594, 2.561444719343799, 2.2491565459219536, 2.490723786526006, 2.3077467836645287, 2.303703816843039], "accuracy": [0.2044644057750702, 0.14951789379119873, 0.15770703554153442, 0.12112006545066833, 0.09708096832036972, 0.10474177449941635], "val_loss": [1.8272387640816825, 1.9706835746765137, 1.9649227687290736, 1.9807788303920202, 1.975325311933245, 1.9731467791966029], "val_accuracy": [0.3463333249092102, 0.16500000655651093, 0.19300000369548798, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1], [2, 9], [4, 4, 3], [8, 0, 19], [0, 0, 1, 0, 1, 1], [0, 1, 0, 0], [1, 6, 8], [5], [], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 2, 7], [1, 2, 0, 1, 3, 3], [28, 57]], "fitness": -0.18542857468128204, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 3, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.30840571552393, 2.389994111752009, 2.4452950118350443, 2.30748928429318, 2.2457735512817476, 2.2647615237998737, 2.307389384420745, 2.3032810617793804, 2.260230377035024, 2.28271227808141], "accuracy": [0.20538897812366486, 0.16616034507751465, 0.17870822548866272, 0.10302469879388809, 0.15982036292552948, 0.19231277704238892, 0.10381719470024109, 0.10698718577623367, 0.15915995836257935, 0.1760665625333786], "val_loss": [1.8905536106654577, 2.1189448492867604, 1.982457501547677, 1.9705098015921456, 1.9296554156712122, 1.9825923102242606, 1.9754908425467355, 1.9720237595694405, 1.8153950146266393, 1.9749246324811662], "val_accuracy": [0.2826666533946991, 0.2943333387374878, 0.09833333641290665, 0.12566666305065155, 0.3240000009536743, 0.09866666793823242, 0.10066666454076767, 0.12566666305065155, 0.2863333225250244, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [1, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 0, 1, 1, 1], [0, 1, 0], [1, 6], [7], [], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 4, 7, 9, 8], [2, 2, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 11, 7, 4, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.math.pow(beta, tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 0, 0, 1], [0, 1, 0], [1, 8], [7], [], [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 0, 7, 5, 5, 9], [0, 0, 0, 1, 3, 3], [28, 57, 82]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 2, 1, 1, 4, 3, 2, 1, 0, 10, 8, 2, 3], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.sqrt(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.negative(tf.math.add(tf.math.square(tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [8622.115876948686, 155531.4705991613, 717891.1705521067, 1987232.5207700436, 4306900.882908466, 7807922.277638357], "accuracy": [0.0952318087220192, 0.1026284471154213, 0.09826971590518951, 0.09879804402589798, 0.09932637959718704, 0.10038304328918457], "val_loss": [31990.316964285714, 251081.4732142857, 842413.4107142857, 1991124.4285714286, 3882348.714285714, 6701222.571428572], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 0, 0, 0], [0, 1, 0, 1], [1, 8], [7, 4], [], [0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 4, 6, 4, 5], [2, 3, 0, 1, 3, 3], [20, 57, 77]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 2, 1, 1, 4, 4, 2, 2, 0, 3, 1, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(beta, sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [0, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 0, 0, 0], [1, 1, 0], [1, 2], [4], [], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [21, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [30.613729456900415, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0936468094587326, 0.09377889335155487, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [92334.16517857143, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1], [4, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 0, 1, 1], [0, 1, 1], [1, 8], [0], [61], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [7, 8, 0, 4, 7, 9], [1, 3, 3, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 1, 9, 6, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.math.square(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.sqrt(alpha), tf.math.negative(tf.math.pow(tf.math.add(sigma, sigma), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [1, 0, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 0, 1, 0, 1, 1], [1, 1, 0], [1, 6, 8], [3], [], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 1, 4, 7, 5, 9], [1, 2, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.303273662804707, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10091137140989304, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [3, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 0, 0, 1], [1, 1, 0, 0], [1, 8], [4], [], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 2, 7], [1, 2, 0, 1, 3, 3], [21, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, beta))", "other_info": {"loss": [2.3039602304037143, 2.3039521707787474, 2.3060775528400015, 2.3104299809308873, 2.312874528725921, 2.3168333514869457, 2.3210405978418343, 2.3334341641855496, 2.3462517981075135, 2.38759307942575, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08915598690509796, 0.09206181764602661, 0.08651433140039444, 0.08360850811004639, 0.07858935743570328, 0.08347642421722412, 0.07779685407876968, 0.07660810649394989, 0.0754193663597107, 0.07687227427959442, 0.09549596905708313, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9723713057381767, 1.9737536566598075, 1.975578716823033, 1.9777609280177526, 1.9801968847002303, 1.9833882195608956, 1.987025192805699, 1.9941720962524414, 2.0082836832318987, 2.112294946398054, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03166666626930237, 0.0273333340883255, 0.024666666984558105, 0.024666666984558105, 0.03733333200216293, 0.050333332270383835, 0.06499999761581421, 0.07466666400432587, 0.09233333170413971, 0.09933333098888397, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [3, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 0, 0, 1, 1, 1], [1, 1, 0], [1, 8], [7], [], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 1, 4, 7, 5, 9], [2, 1, 0, 1, 3, 3], [20, 57, 77]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 11, 7, 4, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.math.subtract(tf.math.pow(tf.math.add(alpha, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 0, 1, 1], [0, 1, 0], [1, 6, 8], [7], [], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 2, 7], [1, 2, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, beta))", "other_info": {"loss": [2.303850369163083, 2.303612821657329, 2.305332617973214, 2.3093714618947385, 2.311426595154534, 2.314557363737875, 2.316882034350128, 2.3257307620521517, 2.3315126392677903, 2.3432102642983903, 2.3742945750375952, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08981640636920929, 0.09153348207473755, 0.08796724677085876, 0.08400475233793259, 0.07819310575723648, 0.0804385170340538, 0.07489103078842163, 0.07700435817241669, 0.07858935743570328, 0.0734381154179573, 0.07792893797159195, 0.1010434553027153, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9723655836922782, 1.9736172131129675, 1.9751452037266322, 1.9770912442888533, 1.9791976383754186, 1.9816389083862305, 1.9842895780290877, 1.9884148325238908, 1.9942740031651087, 2.0064712933131625, 2.0546110698154996, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03400000184774399, 0.029333332553505898, 0.0273333340883255, 0.02666666731238365, 0.03266666829586029, 0.03866666555404663, 0.052000001072883606, 0.06533333659172058, 0.08166666328907013, 0.09799999743700027, 0.09933333098888397, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [3, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1], [1, 1, 0], [1, 8], [7], [], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 9, 0, 4, 7], [0, 0, 0, 1, 3, 3], [20, 57, 77]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 2, 0, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [46.036417554382474, 526.0214645190246, 2147.523012486998, 5690.83916966261, 12077.968487768912, 21635.027576443008], "accuracy": [0.09536388516426086, 0.10315678268671036, 0.09787346422672272, 0.09866596013307571, 0.09932637959718704, 0.10077928751707077], "val_loss": [129.4148690359933, 780.1519949776786, 2447.3914620535716, 5623.310128348215, 10801.888671875, 18472.45089285714], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 0, 1, 1], [38], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 0, 0, 1, 1], [1, 1, 0], [1, 4], [7], [], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 5, 0, 4, 4, 9, 1], [2, 0, 0, 1, 3, 3], [20, 30, 77]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 9, 6, 3, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), alpha)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(beta, tf.math.square(tf.math.negative(tf.math.pow(tf.math.pow(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [3.1506730982220957e+28, 9.863074417678577, 18.89216815362501, 27.918819157423172, 36.951935067892926, 45.998200409133055], "accuracy": [0.07568352669477463, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [5.280752045767648, 13.00727026803153, 20.749658857073104, 28.496869768415177, 36.25700160435268, 44.00824737548828], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 0, 1, 1], [76], [1, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [1, 0, 0, 1, 1], [0, 1, 0], [1, 4], [7], [], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 3, 7, 3, 3], [3, 0, 3, 1, 3, 3, 2], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 14, 7, 7, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.multiply(tf.math.add(sigma, tf.math.multiply(tf.math.multiply(alpha, sigma), sigma)), beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09153348207473755, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 1, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 1, 0, 1, 1], [0, 1, 0], [1, 4], [4], [61], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [2, 3, 0, 4, 7, 8, 0], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 12, 7, 5, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.negative(alpha))), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [1, 4, 3], [8, 0, 19], [0, 0, 1, 1], [1, 1, 0], [1, 8], [7], [], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 1, 6], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.09314285963773727, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 13, 7, 6, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.divide_no_nan(alpha, sigma), sigma)))))", "other_info": {"loss": [4.55758241570432, 2.2178161157797733, 2.309835704341934, 2.300742154265628, 2.29818630927054, 2.257754698153642, 2.3066102369129853, 2.304017507200149, 2.304002974751666, 2.3034296783048713], "accuracy": [0.1760665625333786, 0.17936864495277405, 0.09668471664190292, 0.10302469879388809, 0.1146479994058609, 0.18755778670310974, 0.10011887550354004, 0.1018359512090683, 0.09496764093637466, 0.09576013684272766], "val_loss": [1.9765355246407645, 1.993192536490304, 1.9731957571847099, 1.9672025271824427, 1.96766574042184, 1.979694162096296, 1.9749397550310408, 1.9739888054983956, 1.9737474577767509, 1.9736785207475935], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.10366666316986084, 0.13600000739097595, 0.17266666889190674, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 0, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0], [6, 4, 0, 0], [7], [], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [3, 2, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, beta))", "other_info": {"loss": [2.303244718455399, 2.301531597009472, 2.3014382599619134, 2.3029678342144297, 2.302380811993346, 2.301925118352759], "accuracy": [0.09047681838274002, 0.09417514503002167, 0.09470347315073013, 0.09034473448991776, 0.08875974267721176, 0.09272222965955734], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]