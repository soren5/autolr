[{"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7862856984138489, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2936663864122138, 2.264391106983548, 2.2360497107988873, 2.1954127387159046, 2.141271143604531, 2.0709713365990394, 1.9774282842721007, 1.8533323527547614, 1.7246504449384592, 1.5936784937617612, 1.487517684221803, 1.3745576800325086, 1.3015067059964458, 1.2477449503210731, 1.181565987215129, 1.1287678695861862, 1.1023062902308727, 1.060830884668821, 1.0367348640665104, 1.0090589668331618, 0.9855389510950692, 0.9682040273662981, 0.9479876639836374, 0.9378460559783878, 0.9170591015510902, 0.8891821933491765, 0.8861155094503332, 0.8832373991697188, 0.8582745108622066, 0.8523776597980464, 0.8395768825120741, 0.8187506821460696, 0.8225383441036624, 0.8201424361629382, 0.8012415679879491, 0.8083752170372412, 0.7919368674143855, 0.8015430402273924, 0.7839900000440824, 0.771254102370648, 0.7676814864056851, 0.7715342277706481, 0.7579641349563477, 0.7548478338948613, 0.760323826796847, 0.7518322175645935, 0.7420392860873123, 0.7392962458756905, 0.7279704925390739, 0.7237588677109036, 0.7235653623613809, 0.72262803684089, 0.7190969098969977, 0.7096759502945355, 0.7118301757212407, 0.7066029130333938, 0.7184065894491054, 0.7044419957866853, 0.6983232822762725, 0.6864343048511888, 0.6864678737840412, 0.6831383756626992, 0.6933769883260499, 0.6922500665161698, 0.6873125019578602, 0.6697697559084481, 0.6781222714708308, 0.6717374928166696], "accuracy": [0.11557257920503616, 0.18980319797992706, 0.24884428083896637, 0.3078853487968445, 0.3571522831916809, 0.3875313699245453, 0.4193633496761322, 0.4500066041946411, 0.4678378105163574, 0.4950468838214874, 0.5164443254470825, 0.5522388219833374, 0.5585787892341614, 0.5795799493789673, 0.591731607913971, 0.6038832664489746, 0.6102232336997986, 0.6254127621650696, 0.635979413986206, 0.6383568644523621, 0.6441685557365417, 0.6609430909156799, 0.6662263870239258, 0.6651697158813477, 0.6742834448814392, 0.6782459616661072, 0.6826046705245972, 0.6828688383102417, 0.6966054439544678, 0.6960771083831787, 0.6977941989898682, 0.7053229212760925, 0.695813000202179, 0.7069079279899597, 0.7088891863822937, 0.7051908373832703, 0.7082287669181824, 0.7084929347038269, 0.7162858247756958, 0.713908314704895, 0.7201162576675415, 0.7172104120254517, 0.7238145470619202, 0.7294940948486328, 0.7177387475967407, 0.7224937081336975, 0.7248712182044983, 0.7289658188819885, 0.7296261787414551, 0.7301545143127441, 0.7289658188819885, 0.7378153204917908, 0.7368907928466797, 0.7391361594200134, 0.7374191284179688, 0.7372870445251465, 0.7374191284179688, 0.7397965788841248, 0.7437590956687927, 0.7461365461349487, 0.7383436560630798, 0.7442874312400818, 0.739928662776947, 0.7416457533836365, 0.737947404384613, 0.7470611333847046, 0.7500990629196167, 0.7489103078842163], "val_loss": [1.946843079158238, 1.9206444876534599, 1.88838529586792, 1.8449769020080566, 1.7847493716648646, 1.7039410046168737, 1.5999500751495361, 1.4738682338169642, 1.3416404042925154, 1.214984927858625, 1.1080565111977714, 1.0194004944392614, 0.9495994022914341, 0.8960773263658796, 0.8533155918121338, 0.8156877415520805, 0.7870463303157261, 0.7629637547901699, 0.7428335121699742, 0.7244578429630825, 0.7094594921384539, 0.6946925435747419, 0.6835603543690273, 0.6715910094124931, 0.6661737816674369, 0.6531290497098651, 0.6446825095585415, 0.6379122393471854, 0.6283079385757446, 0.6253238064902169, 0.6168766362326485, 0.6099820988518851, 0.6051267044884818, 0.6019928625651768, 0.5953707354409354, 0.5921154022216797, 0.5863966941833496, 0.5827404090336391, 0.5800410679408482, 0.5757590872900826, 0.5722406932285854, 0.5679959058761597, 0.5661165373665946, 0.5613586562020438, 0.559607880456107, 0.5561969450541905, 0.5544025216783796, 0.5530767270496914, 0.5472779273986816, 0.5467050927025932, 0.5440509830202375, 0.5398183209555489, 0.5418518441064017, 0.5368513890675136, 0.5342796870640346, 0.5349211863109044, 0.5307575464248657, 0.5284160716193063, 0.5267418282372611, 0.5256396361759731, 0.5224240507398333, 0.5202678612300328, 0.522585357938494, 0.5201343808855329, 0.5173338821956089, 0.5148312704903739, 0.5128038781029838, 0.5117935453142438], "val_accuracy": [0.2316666692495346, 0.36633333563804626, 0.4189999997615814, 0.45899999141693115, 0.4740000069141388, 0.5249999761581421, 0.5540000200271606, 0.5669999718666077, 0.5879999995231628, 0.6193333268165588, 0.643666684627533, 0.6539999842643738, 0.6673333048820496, 0.6723333597183228, 0.6823333501815796, 0.6869999766349792, 0.6949999928474426, 0.6976666450500488, 0.7006666660308838, 0.7086666822433472, 0.7123333215713501, 0.7143333554267883, 0.718666672706604, 0.7243333458900452, 0.7233333587646484, 0.7316666841506958, 0.7256666421890259, 0.7263333201408386, 0.7289999723434448, 0.7316666841506958, 0.7363333106040955, 0.7333333492279053, 0.7446666955947876, 0.7413333058357239, 0.7413333058357239, 0.746666669845581, 0.7486666440963745, 0.7523333430290222, 0.7523333430290222, 0.7563333511352539, 0.7546666860580444, 0.7576666474342346, 0.7546666860580444, 0.7563333511352539, 0.7573333382606506, 0.7606666684150696, 0.7649999856948853, 0.7616666555404663, 0.7633333206176758, 0.7630000114440918, 0.768666684627533, 0.768666684627533, 0.7639999985694885, 0.7683333158493042, 0.7710000276565552, 0.7636666893959045, 0.7693333625793457, 0.7733333110809326, 0.7716666460037231, 0.7756666541099548, 0.7723333239555359, 0.7723333239555359, 0.7796666622161865, 0.7739999890327454, 0.7713333368301392, 0.7756666541099548, 0.7773333191871643, 0.7763333320617676]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [1, 2, 3, 1, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7862856984138489, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2936663684308365, 2.264391219438012, 2.2360509028917828, 2.1954135709923053, 2.1412716565933905, 2.0709729109615336, 1.977433920693892, 1.853341570163148, 1.7246555892971795, 1.5936827788720151, 1.4875273425990658, 1.3745651147180087, 1.3014924345141183, 1.2477197705510585, 1.1815624731627155, 1.1287671464419462, 1.1022956069780772, 1.0608390026624097, 1.0367358127967352, 1.0090433968418797, 0.9855518953328781, 0.9681999916728651, 0.9479882029919592, 0.9378473572979167, 0.9170788114711105, 0.889173779694191, 0.8860963103148002, 0.8832504492173846, 0.8582765974499026, 0.8524038870069156, 0.8395624418048306, 0.8188021601923327, 0.8225402650091831, 0.8202351468775518, 0.8012921944853022, 0.8083630456837523, 0.7920008481233789, 0.8016219994395464, 0.783917031000319, 0.7712801969393038, 0.7677371144263248, 0.7715880210688401, 0.7579201143557259, 0.7549304082298858, 0.7603984980251906, 0.7518546996477525, 0.7420984305064471, 0.7392959787294203, 0.7279707016001414, 0.7238119375893091, 0.7236394242383171, 0.7226058929556349, 0.7190640835855867, 0.709666424392158, 0.7118052625621488, 0.7066581604770775, 0.7183431631947836, 0.7045010651312075, 0.6983225091400243, 0.6864346235246549, 0.6865795567334525, 0.6833070566027218, 0.6932809215810053, 0.692151986242616, 0.6873408785554097, 0.6698140967492147, 0.6780928467337513, 0.6719170647085682], "accuracy": [0.11557257920503616, 0.18980319797992706, 0.24884428083896637, 0.3078853487968445, 0.3571522831916809, 0.3875313699245453, 0.41949543356895447, 0.4500066041946411, 0.4678378105163574, 0.49491479992866516, 0.5163122415542603, 0.5519746541976929, 0.5585787892341614, 0.5795799493789673, 0.5914674401283264, 0.6036190986633301, 0.6100911498069763, 0.6255448460578918, 0.6362435817718506, 0.6383568644523621, 0.6441685557365417, 0.6610751748085022, 0.6664905548095703, 0.6649055480957031, 0.6742834448814392, 0.6782459616661072, 0.6828688383102417, 0.6828688383102417, 0.6963412761688232, 0.6960771083831787, 0.6977941989898682, 0.7055870890617371, 0.6955488324165344, 0.7067758440971375, 0.7088891863822937, 0.7058512568473816, 0.707568347454071, 0.7080966830253601, 0.7168141603469849, 0.7148329019546509, 0.7197200059890747, 0.7169462442398071, 0.7235503792762756, 0.7297582626342773, 0.7182670831680298, 0.7223616242408752, 0.724210798740387, 0.728701651096344, 0.7305507659912109, 0.7298903465270996, 0.7297582626342773, 0.7376832365989685, 0.7362303733825684, 0.7396644949913025, 0.7375511527061462, 0.7374191284179688, 0.7368907928466797, 0.7395324110984802, 0.7441553473472595, 0.7456082701683044, 0.7387399077415466, 0.7440232634544373, 0.7397965788841248, 0.7416457533836365, 0.7383436560630798, 0.7474573850631714, 0.7503632307052612, 0.7481178045272827], "val_loss": [1.946843147277832, 1.9206453732081823, 1.8883865901402064, 1.8449781281607491, 1.7847489629473006, 1.7039430482046944, 1.5999584538596017, 1.4738707883017403, 1.341646705354963, 1.2149880273001534, 1.108058146068028, 1.0194008690970284, 0.9495596204485212, 0.8960299491882324, 0.8532776491982597, 0.8156646149499076, 0.7870168175016131, 0.762966343334743, 0.742807149887085, 0.7244405405861991, 0.7094482694353376, 0.694699900490897, 0.6835520948682513, 0.6715860026223319, 0.6662336077008929, 0.6531694105693272, 0.6446878739765712, 0.6380283491952079, 0.6283560480390277, 0.6253479037966047, 0.6168346745627267, 0.6100357941218785, 0.6051091126033238, 0.6019950594220843, 0.5953776836395264, 0.5922243595123291, 0.5864348922457013, 0.582770654133388, 0.580040727342878, 0.5758528709411621, 0.572264381817409, 0.5680702243532453, 0.5662165199007306, 0.561401537486485, 0.5597161054611206, 0.5562922613961356, 0.5545784745897565, 0.5532271010535104, 0.5473336151668003, 0.5467465605054583, 0.5440316540854317, 0.5397990942001343, 0.5419528995241437, 0.536922982760838, 0.5343406541006905, 0.5350101845605033, 0.530838063785008, 0.5284431832177299, 0.5267054523740496, 0.5256321430206299, 0.5224023716790336, 0.5201952287128994, 0.5224884578159877, 0.5200494868414742, 0.5172856535230365, 0.5148250034877232, 0.5128281286784581, 0.5118264811379569], "val_accuracy": [0.2316666692495346, 0.36633333563804626, 0.4193333387374878, 0.45899999141693115, 0.4740000069141388, 0.5249999761581421, 0.5543333292007446, 0.5669999718666077, 0.5879999995231628, 0.6193333268165588, 0.643666684627533, 0.6543333530426025, 0.6673333048820496, 0.671999990940094, 0.6819999814033508, 0.6869999766349792, 0.6953333616256714, 0.6973333358764648, 0.7006666660308838, 0.7086666822433472, 0.7126666903495789, 0.7146666646003723, 0.718666672706604, 0.7236666679382324, 0.7229999899864197, 0.731333315372467, 0.7256666421890259, 0.7263333201408386, 0.7289999723434448, 0.7316666841506958, 0.737333357334137, 0.7336666584014893, 0.7446666955947876, 0.7409999966621399, 0.7413333058357239, 0.746999979019165, 0.7480000257492065, 0.7519999742507935, 0.7526666522026062, 0.7559999823570251, 0.7549999952316284, 0.7570000290870667, 0.7549999952316284, 0.7556666731834412, 0.7573333382606506, 0.7603333592414856, 0.765333354473114, 0.7616666555404663, 0.7633333206176758, 0.762666642665863, 0.7683333158493042, 0.7693333625793457, 0.7630000114440918, 0.7680000066757202, 0.7710000276565552, 0.7630000114440918, 0.7689999938011169, 0.7736666798591614, 0.7720000147819519, 0.7756666541099548, 0.7720000147819519, 0.7730000019073486, 0.7789999842643738, 0.7739999890327454, 0.7716666460037231, 0.7753333449363708, 0.7773333191871643, 0.7770000100135803]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [98, 8, 15, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7862856984138489, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2936663999218654, 2.264391219438012, 2.236050956835915, 2.1954144077404316, 2.1412739685702524, 2.070973387987638, 1.9774347595834083, 1.8533391505814405, 1.724648603327349, 1.5936668630541275, 1.4875088066960904, 1.3745452101519393, 1.3014882654640512, 1.2477337151407613, 1.1815545415487807, 1.1287659792584546, 1.1022870956772841, 1.06082686839748, 1.036733525146693, 1.0090644683316399, 0.985528746395693, 0.9681780897489297, 0.9479589590842399, 0.9378243080219651, 0.9170520900026714, 0.8890420444306759, 0.8861195761309387, 0.8831464231069361, 0.8582284353459909, 0.852329386302493, 0.8395092053467555, 0.8187781093205916, 0.8224826289001095, 0.8201649858967, 0.8012382395830231, 0.8083512761715365, 0.7919461004895588, 0.8015432067440801, 0.7839320623847897, 0.7712993981532449, 0.76763025508376, 0.7715274861239644, 0.7579598220158971, 0.7549166597899287, 0.7603361699260253, 0.7517828229333053, 0.7420427769702014, 0.7392819751097841, 0.7279945211781487, 0.7237444308219474, 0.723552223540505, 0.7226771226002949, 0.719055688809473, 0.7096053964316081, 0.7118183269067416, 0.7066009878608387, 0.7183191105359266, 0.7043926474314639, 0.69832145704837, 0.6863646498603151, 0.6865111048652071, 0.6832184411153314, 0.6932536961143956, 0.6921472489605521, 0.6873828143790697, 0.6698047608400868, 0.6780085651913276, 0.6718335734571307], "accuracy": [0.11557257920503616, 0.18980319797992706, 0.24884428083896637, 0.30801743268966675, 0.3571522831916809, 0.3875313699245453, 0.4193633496761322, 0.4500066041946411, 0.4679698944091797, 0.49491479992866516, 0.5164443254470825, 0.5522388219833374, 0.5583146214485168, 0.5795799493789673, 0.5914674401283264, 0.6040153503417969, 0.609959065914154, 0.6256769299507141, 0.6363756656646729, 0.6383568644523621, 0.6440364718437195, 0.6608110070228577, 0.6656980514526367, 0.6653017997741699, 0.6745476126670837, 0.6783780455589294, 0.6823405027389526, 0.6833971738815308, 0.6960771083831787, 0.6959450244903564, 0.6977941989898682, 0.7055870890617371, 0.6960771083831787, 0.7066437602043152, 0.7087571024894714, 0.7049266695976257, 0.7083608508110046, 0.7080966830253601, 0.7169462442398071, 0.7143045663833618, 0.719852089881897, 0.7165499925613403, 0.7234182953834534, 0.7289658188819885, 0.7176066637039185, 0.722229540348053, 0.7240787148475647, 0.7292299270629883, 0.7306828498840332, 0.7300224304199219, 0.7293620109558105, 0.7376832365989685, 0.737022876739502, 0.739400327205658, 0.7380794882774353, 0.7375511527061462, 0.7372870445251465, 0.739928662776947, 0.7436270117759705, 0.7457403540611267, 0.7388719916343689, 0.7440232634544373, 0.7397965788841248, 0.7417778372764587, 0.7384757399559021, 0.7474573850631714, 0.7504953145980835, 0.7481178045272827], "val_loss": [1.946843079158238, 1.920645305088588, 1.8883869988577706, 1.8449793543134416, 1.7847515514918737, 1.7039446490151542, 1.5999610424041748, 1.4738684041159493, 1.3416354656219482, 1.2149654456547327, 1.1080333505358015, 1.0193956920078822, 0.9495684078761509, 0.8960571970258441, 0.8532759462084089, 0.8156504801341465, 0.7870218583515712, 0.7629443917955671, 0.7428172826766968, 0.7244552033288139, 0.70945486000606, 0.6946467672075544, 0.6835223266056606, 0.6714787312916347, 0.666114057813372, 0.6530930314745221, 0.644688538142613, 0.6379810401371547, 0.628278408731733, 0.6252646105630058, 0.6168408223560878, 0.6099097558430263, 0.6050562347684588, 0.6019491638456073, 0.5952997377940586, 0.5921165432248797, 0.5863112381526402, 0.5827229193278721, 0.5800085748944964, 0.575747013092041, 0.572221211024693, 0.5680014746529716, 0.5661316428865705, 0.5613815103258405, 0.5596541847501483, 0.5562740053449359, 0.5545326811926705, 0.5531540768487113, 0.5473283018384661, 0.5468596560614449, 0.5441118819372994, 0.5399019036974225, 0.5420572417122977, 0.536882792200361, 0.5343283414840698, 0.5350594520568848, 0.5307480607713971, 0.528404814856393, 0.5267719881875175, 0.5256756203515189, 0.5224599497658866, 0.5203039305550712, 0.5224933283669608, 0.5200775521142142, 0.5173380204609462, 0.514911311013358, 0.5128845487322126, 0.511798586164202], "val_accuracy": [0.2316666692495346, 0.36633333563804626, 0.4193333387374878, 0.45899999141693115, 0.4740000069141388, 0.5249999761581421, 0.5540000200271606, 0.5669999718666077, 0.5879999995231628, 0.6193333268165588, 0.643666684627533, 0.6539999842643738, 0.6673333048820496, 0.671999990940094, 0.6823333501815796, 0.6869999766349792, 0.6953333616256714, 0.6976666450500488, 0.7006666660308838, 0.7086666822433472, 0.7123333215713501, 0.7143333554267883, 0.718666672706604, 0.7243333458900452, 0.7229999899864197, 0.7316666841506958, 0.7256666421890259, 0.7266666889190674, 0.7289999723434448, 0.7323333621025085, 0.7369999885559082, 0.7333333492279053, 0.7446666955947876, 0.7409999966621399, 0.7413333058357239, 0.7473333477973938, 0.7483333349227905, 0.7523333430290222, 0.7523333430290222, 0.7570000290870667, 0.7546666860580444, 0.7573333382606506, 0.7543333172798157, 0.7559999823570251, 0.7573333382606506, 0.7603333592414856, 0.7646666765213013, 0.7613333463668823, 0.7636666893959045, 0.7630000114440918, 0.768666684627533, 0.768666684627533, 0.7636666893959045, 0.7676666378974915, 0.7713333368301392, 0.7633333206176758, 0.768666684627533, 0.7733333110809326, 0.7716666460037231, 0.7760000228881836, 0.7720000147819519, 0.7723333239555359, 0.7793333530426025, 0.7736666798591614, 0.7703333497047424, 0.7749999761581421, 0.7770000100135803, 0.7760000228881836]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [51, 57]], "fitness": -0.3725714385509491, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.6586036764320493, 2.101591308024644, 2.222922929604575, 2.1726960479906126, 2.150501211573498, 2.298161156567065], "accuracy": [0.2086910605430603, 0.3078853487968445, 0.2292959988117218, 0.2401268035173416, 0.2382776439189911, 0.12032756209373474], "val_loss": [1.8812336921691895, 1.6329902921404158, 1.9538230895996094, 1.9692028590611048, 1.9781585420880998, 1.8681164469037737], "val_accuracy": [0.35333332419395447, 0.2706666588783264, 0.2423333376646042, 0.10000000149011612, 0.10000000149011612, 0.28466665744781494]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9, 7, 0, 9], [2, 2, 3, 1, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.2645714282989502, "mapping_values": [1, 40, 40, 27, 13, 6, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, grad), grad), alpha))), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.sqrt(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.negative(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))))))))))), tf.math.add(alpha, grad))), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.895488964457947, 2.2503097652837885, 2.6251938787701423, 2.308014868304336, 2.3038249421097645, 2.2991689456657034], "accuracy": [0.1578391194343567, 0.1414608359336853, 0.18874652683734894, 0.09972262382507324, 0.09576013684272766, 0.11649715900421143], "val_loss": [1.8221329280308314, 1.9573023659842355, 1.9814486503601074, 1.9753900936671667, 1.973254680633545, 1.950570515223912], "val_accuracy": [0.2653333246707916, 0.19066666066646576, 0.09966666996479034, 0.09966666996479034, 0.09799999743700027, 0.2633333206176758]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9, 3, 8, 4, 9], [2, 2, 3, 1, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [98, 8, 15, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [2, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 42, 42, 28, 14, 6, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 8, 4, 4, 2], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.negative(grad), tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, grad), grad), tf.math.add(alpha, alpha))))), tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), alpha)), tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(grad, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.sqrt(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))))))))))), tf.math.add(alpha, grad)), tf.math.pow(grad, tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9, 1, 8, 2], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [68, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 42, 42, 27, 15, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 12, 7, 5, 2], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.negative(grad), tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, grad), grad), tf.math.add(alpha, alpha))))), tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), alpha)), tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))), tf.math.add(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.sqrt(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))))))))))), tf.math.add(alpha, grad)), tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [3, 2, 3, 1, 1, 2, 2, 2, 2, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [0, 0, 0, 1, 3, 3], [43, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 2, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [6572674.010751787, 125773502.00290583, 577342748.5552768, 1620021131.9867916, 3435443871.733721, 6415934682.704002], "accuracy": [0.09985470771789551, 0.09179764986038208, 0.1014397069811821, 0.1002509593963623, 0.09536388516426086, 0.09734513610601425], "val_loss": [25246238.285714287, 201619021.7142857, 680072576.0, 1611562496.0, 3147040036.571429, 5437468964.571428], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9, 0, 1, 8, 8, 2, 9], [2, 2, 3, 1, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [1, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 7, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 44, 44, 30, 14, 6, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.negative(grad), tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, grad), grad), tf.math.add(alpha, alpha))))), tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), alpha)), tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.negative(grad)))))))))), tf.math.add(alpha, tf.math.subtract(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), tf.math.sqrt(tf.math.sqrt(tf.math.add(grad, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 7, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2890.1384441215505, 52232.08569087637, 236561.92143953903, 659976.7987633734, 1395290.5433397174, 2600703.680920618], "accuracy": [0.09945846349000931, 0.09166556596755981, 0.10157178342342377, 0.10038304328918457, 0.09549596905708313, 0.09734513610601425], "val_loss": [10688.111328125, 82992.62276785714, 277608.3214285714, 655220.25, 1276514.2857142857, 2202174.9285714286], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [3, 2, 3, 1, 1, 2, 2, 2, 2, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 8, 4, 7, 8, 3], [2, 2, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 31, 31, 20, 11, 2, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, grad), grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.sqrt(alpha)), alpha), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, grad))))))), grad)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), grad), tf.math.add(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, grad)))), grad))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07528728246688843, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [5, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 12, 7, 5, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(beta), tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07357019931077957, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [3, 5, 2, 8, 8, 0, 9, 0, 3, 3, 3, 0, 8, 9, 3, 4, 9, 6, 7, 8, 7, 1, 4, 9], [2, 2, 1, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 43, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3, 0], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [0, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 2, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(grad, tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2890.1384441215505, 52232.08569087637, 236561.92143953903, 659976.7987633734, 1395290.5433397174, 2600703.680920618], "accuracy": [0.09945846349000931, 0.09166556596755981, 0.10157178342342377, 0.10038304328918457, 0.09549596905708313, 0.09734513610601425], "val_loss": [10688.111328125, 82992.62276785714, 277608.3214285714, 655220.25, 1276514.2857142857, 2202174.9285714286], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 6, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 8, 6, 2, 7, 8, 7, 1, 4, 9, 3, 8, 2, 6, 0, 2, 2, 3, 4, 0], [2, 2, 3, 1, 1, 2, 1, 1, 0, 0, 2, 0, 3, 2, 3, 0, 1, 2, 2, 2, 0], [30, 8, 39, 25, 23, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [9, 0, 8, 9, 7], [5, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [43, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 55, 55, 34, 21, 7, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 2, 1, 1, 0], "tree_depth": 64, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.negative(grad), tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, grad))), tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), tf.math.multiply(alpha, tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(grad, alpha)))), tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))))))), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad)))))), tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.negative(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.math.pow(alpha, tf.math.negative(tf.math.add(alpha, grad)))), grad), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.30267649842543, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09668471664190292, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 9, 0, 4, 7, 8, 4], [3, 1, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 2, 0, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2890.1384441215505, 52232.08569087637, 236561.92143953903, 659976.7987633734, 1395290.5433397174, 2600703.680920618], "accuracy": [0.09945846349000931, 0.09166556596755981, 0.10157178342342377, 0.10038304328918457, 0.09549596905708313, 0.09734513610601425], "val_loss": [10688.111328125, 82992.62276785714, 277608.3214285714, 655220.25, 1276514.2857142857, 2202174.9285714286], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 4, 4, 8, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 8, 9, 3], [0, 2, 3, 1, 0, 2, 2, 2, 0, 2, 2, 0, 3, 2, 3, 0], [30, 8, 86, 49, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [2, 3, 4, 4, 7, 8, 4], [3, 3, 0, 1, 3, 3], [51, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 12, 6, 6, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(sigma, sigma), tf.math.pow(tf.math.pow(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), alpha), tf.math.add(tf.math.sqrt(sigma), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 0, 2, 0, 8, 1, 7, 0, 3, 2, 6, 7, 8, 9, 3, 4, 6, 4, 5, 8, 7, 1, 4, 9, 4], [0, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [5, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07528728246688843, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [0, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [0, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 2, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1638.2599347854855, 29033.103713491448, 130986.82139083344, 364868.6006554616, 770772.3501023643, 1435932.3923523973], "accuracy": [0.09945846349000931, 0.09179764986038208, 0.10157178342342377, 0.10038304328918457, 0.09549596905708313, 0.09734513610601425], "val_loss": [5976.017438616072, 46012.28571428572, 153558.1205357143, 362050.4910714286, 704927.8928571428, 1215628.5714285714], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 1, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3, 1], [8, 0, 19], [1, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [0, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [8, 3, 0, 4, 7, 8, 4], [2, 3, 0, 1, 3, 3], [51, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(grad, tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(beta, sigma))", "other_info": {"loss": [2.304486840518553, 2.302059159885387, 2.303903636364275, 2.302184072861566, 2.3018863643275402, 2.303010263022273], "accuracy": [0.08717474341392517, 0.09021265059709549, 0.08532558381557465, 0.0882314071059227, 0.09642054885625839, 0.09021265059709549], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 2, 2, 2, 2, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [51, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.304486840518553, 2.302059159885387, 2.303903636364275, 2.302184072861566, 2.3018863643275402, 2.303010263022273], "accuracy": [0.08717474341392517, 0.09021265059709549, 0.08532558381557465, 0.0882314071059227, 0.09642054885625839, 0.09021265059709549], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]