[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 3, 2, 3, 2, 8, 2, 6, 9, 6, 8, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [11, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8202857375144958, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1165170976278285, 1.8138579247476811, 1.1855085218791963, 0.9579761775414454, 0.8706004742728312, 0.7804753253992444, 0.740012196714474, 0.6946581070685447, 0.6716724083943532, 0.6413305379285977, 0.6457148010877807, 0.6127585454261724, 0.5831083179055551, 0.56261883652237, 0.5681152156457107, 0.5337689391035587, 0.5301648243354407, 0.5046250171208536, 0.5291850286711949, 0.4957931532741396, 0.4984424693150496, 0.4928557624189908, 0.45941880604751895, 0.43918872575135737, 0.4591759717569942, 0.44004849646116967, 0.43362351819004885, 0.4373735722659711, 0.42842135915052715, 0.4135816507705718, 0.4110081855056623, 0.40856054495307104, 0.4085816164349584, 0.3927807300798708, 0.3987082655380084, 0.36641064616494157, 0.364774292623992, 0.3676260536955553, 0.3672868133402142, 0.3610997028031826, 0.33929134868926786, 0.34352666256513104, 0.3417403261344415, 0.34062150937927366, 0.34943733308545477, 0.3198175184038006], "accuracy": [0.2911108136177063, 0.3531897962093353, 0.5733720660209656, 0.6429798007011414, 0.6712455153465271, 0.7079645991325378, 0.7268524765968323, 0.7364945411682129, 0.7457403540611267, 0.7582882046699524, 0.7514199018478394, 0.7700436115264893, 0.7796856164932251, 0.7917051911354065, 0.7889314293861389, 0.8025360107421875, 0.8000264167785645, 0.8113855719566345, 0.8033285140991211, 0.8165367841720581, 0.816008448600769, 0.8145555257797241, 0.8294808864593506, 0.8370096683502197, 0.8300092220306396, 0.8380662798881531, 0.8366134166717529, 0.8356888294219971, 0.8411042094230652, 0.8494254350662231, 0.8486329317092896, 0.852331280708313, 0.8485008478164673, 0.8548408150672913, 0.8498216867446899, 0.8672566413879395, 0.8656716346740723, 0.8618412613868713, 0.8651432991027832, 0.8672566413879395, 0.876370370388031, 0.8706908226013184, 0.8722757697105408, 0.874389111995697, 0.8732003569602966, 0.8792761564254761], "val_loss": [1.4301911422184534, 1.076967648097447, 0.7290505000523159, 0.6236701352255685, 0.6848210607256208, 0.6009454386574882, 0.5718840530940464, 0.5410972493035453, 0.513374754360744, 0.5310745239257812, 0.47759112289973665, 0.49129397528512136, 0.45029284272875103, 0.4476851054600307, 0.4672738824571882, 0.48490926197596956, 0.4191750969205584, 0.5350394248962402, 0.45965565953935894, 0.41908295665468487, 0.4397057976041521, 0.3803167854036604, 0.39393541642597746, 0.4049146515982492, 0.3807250772203718, 0.37246328592300415, 0.39969251837049213, 0.36755175249917166, 0.36314130680901663, 0.37273965563092915, 0.35594855887549265, 0.36022794246673584, 0.37441799470356535, 0.37556977782930645, 0.357941814831325, 0.3449876734188625, 0.3449148450578962, 0.34642412832805086, 0.3749401569366455, 0.33719702277864727, 0.34716151441846577, 0.353003340108054, 0.34095880814961027, 0.3931725876671927, 0.3446885943412781, 0.38413255555289133], "val_accuracy": [0.3256666660308838, 0.5413333177566528, 0.6766666769981384, 0.7246666550636292, 0.6959999799728394, 0.7160000205039978, 0.7286666631698608, 0.7516666650772095, 0.7566666603088379, 0.7606666684150696, 0.79666668176651, 0.7703333497047424, 0.8003333210945129, 0.8066666722297668, 0.7879999876022339, 0.7823333144187927, 0.8190000057220459, 0.753333330154419, 0.778333306312561, 0.8109999895095825, 0.7986666560173035, 0.8330000042915344, 0.8309999704360962, 0.8240000009536743, 0.8343333601951599, 0.8399999737739563, 0.82833331823349, 0.8429999947547913, 0.8399999737739563, 0.8383333086967468, 0.8456666469573975, 0.8510000109672546, 0.8333333134651184, 0.8356666564941406, 0.8473333120346069, 0.8513333201408386, 0.8523333072662354, 0.8510000109672546, 0.8370000123977661, 0.8536666631698608, 0.8586666584014893, 0.8503333330154419, 0.8539999723434448, 0.8370000123977661, 0.8516666889190674, 0.8289999961853027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 3, 2, 3, 2, 8, 2, 6, 9, 6, 8, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8199999928474426, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.sqrt(tf.math.multiply(tf.math.add(beta, grad), grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.116367451487405, 1.7844883492279204, 1.22830374392662, 1.0212633611818644, 0.8825196112072967, 0.7649437835612994, 0.758705942567156, 0.6816443806279684, 0.697450492289466, 0.6544883552795514, 0.6600802391354182, 0.6105444999088181, 0.5879033630896616, 0.5697727709587429, 0.5628287995244219, 0.5392820010127298, 0.5510743940904739, 0.5220502301717966, 0.49514006726367993, 0.5129885324523622, 0.5101171999701325, 0.4971237269138789, 0.4731103141766655, 0.4483697514893939, 0.46356333236196146, 0.4308205599191875, 0.46062025251468536], "accuracy": [0.29124289751052856, 0.35239729285240173, 0.5665037631988525, 0.627129852771759, 0.6656980514526367, 0.7071720957756042, 0.7136441469192505, 0.7390040755271912, 0.7387399077415466, 0.7535332441329956, 0.7430986762046814, 0.7709681391716003, 0.7769119143486023, 0.7845727205276489, 0.7902522683143616, 0.7965922355651855, 0.7947431206703186, 0.8063663840293884, 0.8182538747787476, 0.806630551815033, 0.8092722296714783, 0.8140271902084351, 0.8219521641731262, 0.8356888294219971, 0.8284242749214172, 0.8442742228507996, 0.830669641494751], "val_loss": [1.4333465780530656, 1.006415809903826, 0.8699244431086949, 0.8317042589187622, 0.5954485791070121, 0.6291108982903617, 0.5497524397713798, 0.5552498272487095, 0.5248121874673026, 0.5182775940213885, 0.47973738397870747, 0.48460982527051655, 0.4710031066622053, 0.46711160455431255, 0.44672558988843647, 0.45485428401402067, 0.4388230528150286, 0.44562041759490967, 0.4562765189579555, 0.41305982215063913, 0.4432684864316668, 0.3834262660571507, 0.41389587947300505, 0.4022136075156076, 0.38102311747414724, 0.37836651291166035, 0.4014701076916286], "val_accuracy": [0.32199999690055847, 0.5913333296775818, 0.6069999933242798, 0.6073333621025085, 0.7293333411216736, 0.7059999704360962, 0.7473333477973938, 0.7540000081062317, 0.7676666378974915, 0.762333333492279, 0.7886666655540466, 0.781333327293396, 0.793666660785675, 0.7903333306312561, 0.8033333420753479, 0.8063333630561829, 0.8066666722297668, 0.7979999780654907, 0.7879999876022339, 0.8149999976158142, 0.7993333339691162, 0.8309999704360962, 0.8190000057220459, 0.8253333568572998, 0.8296666741371155, 0.8289999961853027, 0.8256666660308838]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 3, 2, 3, 2, 8, 2, 6, 9, 6, 8, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8180000185966492, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.116502512447618, 1.8080075721163806, 1.1866229559609667, 1.0108705409970407, 0.8478939621408523, 0.7585180901958328, 0.7686023191060404, 0.6781070053364858, 0.6614864223967958, 0.6304600869329173, 0.6409604692455957, 0.6327395647776015, 0.585770983123477, 0.5668438384010492, 0.5681806786138116, 0.5406049825787435, 0.5251805623130965, 0.49788491513514643, 0.5309023491112217, 0.4997402648049701, 0.4995625077686164, 0.48193514446273156, 0.45190027680899003, 0.4445248064489696, 0.46131920944414656, 0.43289820608005014, 0.448982525042665, 0.4260353184906782, 0.42787847049625843, 0.4208015563654594, 0.40767635935884283, 0.38508789272214505, 0.4239975923733578, 0.39892514928016115, 0.3949717045570361, 0.36329032633645014, 0.3724906006273167], "accuracy": [0.2911108136177063, 0.35068023204803467, 0.570730447769165, 0.6375643610954285, 0.6757363677024841, 0.7074362635612488, 0.7099458575248718, 0.7404569983482361, 0.7511557340621948, 0.7663452625274658, 0.7584202885627747, 0.7633073329925537, 0.7779685854911804, 0.7866860628128052, 0.789459764957428, 0.7969884872436523, 0.8025360107421875, 0.8156121969223022, 0.8034605979919434, 0.8170651197433472, 0.813498854637146, 0.8211596608161926, 0.832650899887085, 0.8350284099578857, 0.8269713521003723, 0.8389908671379089, 0.8325188159942627, 0.8370096683502197, 0.8417646288871765, 0.8449346423149109, 0.8506141901016235, 0.8560295701026917, 0.8433496356010437, 0.8521991968154907, 0.8491612672805786, 0.8702945709228516, 0.8623695969581604], "val_loss": [1.430307354245867, 1.0940867832728796, 0.8883371693747384, 0.6724847214562553, 0.6441805703299386, 0.625143153326852, 0.5397153241293771, 0.557715722492763, 0.5079540014266968, 0.47922500542231966, 0.4870547226497105, 0.4915069341659546, 0.46466781411852154, 0.4588932820728847, 0.4769472735268729, 0.44887098244258333, 0.41902399914605276, 0.49705876622881207, 0.4408246619360788, 0.4038961785180228, 0.41787210532597135, 0.3807821784700666, 0.418832676751273, 0.414206291948046, 0.3958345821925572, 0.3755682706832886, 0.40400718791144236, 0.3703842077936445, 0.3603843705994742, 0.3638514535767691, 0.35936894587108065, 0.35180271523339407, 0.37747323513031006, 0.3794986605644226, 0.35775468179157804, 0.34563188893454416, 0.34360898392541067], "val_accuracy": [0.32633334398269653, 0.531000018119812, 0.5503333210945129, 0.7023333311080933, 0.6996666789054871, 0.7099999785423279, 0.7403333187103271, 0.7419999837875366, 0.7613333463668823, 0.7910000085830688, 0.7913333177566528, 0.7703333497047424, 0.7956666946411133, 0.8019999861717224, 0.7866666913032532, 0.8063333630561829, 0.8149999976158142, 0.7770000100135803, 0.7963333129882812, 0.8230000138282776, 0.8140000104904175, 0.8330000042915344, 0.8080000281333923, 0.8196666836738586, 0.8226666450500488, 0.8349999785423279, 0.824999988079071, 0.8433333039283752, 0.8420000076293945, 0.8443333506584167, 0.8403333425521851, 0.8529999852180481, 0.8336666822433472, 0.8299999833106995, 0.8493333458900452, 0.8510000109672546, 0.8493333458900452]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1], [3, 8, 5, 2, 3, 2, 8, 5, 9, 9, 6, 8, 9], [3, 3, 3, 3, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8174285888671875, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(grad, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.116224632539045, 1.692458676891934, 1.2810022514084658, 1.0966590035309676, 0.8882239878909809, 0.764036288193393, 0.748205890067895, 0.6671656376382442, 0.6557739706024313, 0.6591718057048729, 0.6507069376859336, 0.6049242097199978, 0.5868661907512467, 0.5512764544031009, 0.5604384181726532, 0.5506076860728596, 0.5412064895669562, 0.5081147997292073, 0.5263577773350262, 0.5110207360733329, 0.5093720264328375, 0.4825454578659774, 0.46327579167099864, 0.44972919438808284, 0.45545231624050164, 0.4381964929808306, 0.43981161273119396], "accuracy": [0.29137498140335083, 0.3743230700492859, 0.5425967574119568, 0.6118082404136658, 0.6655659675598145, 0.7077004313468933, 0.7190595865249634, 0.7401928305625916, 0.7578919529914856, 0.7539294958114624, 0.7458723783493042, 0.7733456492424011, 0.7788931727409363, 0.793422281742096, 0.789459764957428, 0.7903843522071838, 0.7992339134216309, 0.8117818236351013, 0.8041210174560547, 0.8088759779930115, 0.8120459914207458, 0.822348415851593, 0.8264430165290833, 0.8354246616363525, 0.8285563588142395, 0.8381983637809753, 0.839519202709198], "val_loss": [1.4331517900739397, 0.9937781265803746, 0.9315817015511649, 0.7063994407653809, 0.622584479195731, 0.632267986025129, 0.5422676971980503, 0.5561461959566388, 0.5217658962522235, 0.5054799829210553, 0.47516984598977224, 0.4847843817302159, 0.4610638107572283, 0.47161247049059185, 0.48482937472207205, 0.4447030169623239, 0.43547167096819195, 0.5395328657967704, 0.48246138436453684, 0.4161091957773481, 0.4085779445511954, 0.3811840925897871, 0.41971548965999056, 0.39786180428096224, 0.3868459718567984, 0.3882056644984654, 0.4006879414830889], "val_accuracy": [0.32766667008399963, 0.5823333263397217, 0.5559999942779541, 0.6866666674613953, 0.7103333473205566, 0.6943333148956299, 0.7513333559036255, 0.7506666779518127, 0.7633333206176758, 0.7733333110809326, 0.7873333096504211, 0.778333306312561, 0.8003333210945129, 0.7973333597183228, 0.7793333530426025, 0.8026666641235352, 0.8109999895095825, 0.7583333253860474, 0.7586666941642761, 0.8166666626930237, 0.8169999718666077, 0.8330000042915344, 0.8069999814033508, 0.8266666531562805, 0.8316666483879089, 0.8270000219345093, 0.828000009059906]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [5, 3, 3, 2, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8142856955528259, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 7, 4, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.square(tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [1.9873403006572419, 1.4697111508219927, 1.0261021143315316, 0.9419426354104187, 0.836306166686654, 0.8021198612052405, 0.7410007354180574, 0.7095683489446044, 0.6786139096015197, 0.6898861598376475, 0.6851029887317178, 0.6463847743474481, 0.638875574404931, 0.6055931141584021, 0.6151611403451541, 0.5837519116657379, 0.5606330582777806, 0.5690321203676969, 0.5749758855384244, 0.543738937861317, 0.5600527849463172, 0.5511864434537509, 0.5212765102766886, 0.5146420979228994, 0.5155644106110719, 0.49959186219016494, 0.48814995733895844, 0.49645382263137366, 0.4977374771377902, 0.4755203903170152, 0.4736277430190733, 0.469216268536689, 0.4674364942695644, 0.4607434951791422, 0.4549333726835446, 0.4435313542670798, 0.43781644403895115, 0.44620099709396427, 0.42520243585259293, 0.41654211609449526, 0.42769785430279894, 0.4178296446627031, 0.4045555013762237, 0.4175417158763013], "accuracy": [0.32479196786880493, 0.5132743120193481, 0.6336019039154053, 0.644300639629364, 0.6861709356307983, 0.6973979473114014, 0.7202483415603638, 0.7248712182044983, 0.7461365461349487, 0.7341170310974121, 0.7390040755271912, 0.7567031979560852, 0.763439416885376, 0.770439863204956, 0.7683265209197998, 0.7815347909927368, 0.7924976944923401, 0.7792893648147583, 0.7853652238845825, 0.8001585006713867, 0.7905164361000061, 0.7907806038856506, 0.8050455451011658, 0.8119139075279236, 0.8068947196006775, 0.8165367841720581, 0.8195747137069702, 0.8088759779930115, 0.8132346868515015, 0.8255184292793274, 0.8249900937080383, 0.8317263126373291, 0.8247259259223938, 0.8309338092803955, 0.8265751004219055, 0.8366134166717529, 0.842028796672821, 0.8384625315666199, 0.8418967127799988, 0.850350022315979, 0.8430854678153992, 0.8498216867446899, 0.8520671129226685, 0.8448025584220886], "val_loss": [1.535233633858817, 0.958857706614903, 0.7790811743055072, 0.7083574703761509, 0.5982668740408761, 0.613070181437901, 0.5492513350078038, 0.5580857481275286, 0.5358409030096871, 0.549067565373012, 0.5333787884031024, 0.5238212176731655, 0.5297686202185494, 0.4953011614935739, 0.49797400406428743, 0.48108553886413574, 0.4913470915385655, 0.4964505434036255, 0.45566931792667936, 0.45536930220467703, 0.4748838799340384, 0.432829099042075, 0.45664007323128836, 0.43970361777714323, 0.42288401297160555, 0.41070733751569477, 0.4196748988968985, 0.4077723281724112, 0.3993546962738037, 0.4135822483471462, 0.4023264135633196, 0.40385557072503225, 0.39871372495378765, 0.3989071249961853, 0.393852915082659, 0.37370547226497103, 0.37565921034131733, 0.3911974174635751, 0.3693104556628636, 0.37396312611443655, 0.3768816420010158, 0.3771181191716875, 0.37027391365596224, 0.40706467628479004], "val_accuracy": [0.3840000033378601, 0.6316666603088379, 0.6439999938011169, 0.6776666641235352, 0.737333357334137, 0.7166666388511658, 0.7566666603088379, 0.7546666860580444, 0.7670000195503235, 0.7509999871253967, 0.7546666860580444, 0.7706666588783264, 0.746666669845581, 0.7893333435058594, 0.7870000004768372, 0.7983333468437195, 0.7663333415985107, 0.7756666541099548, 0.8040000200271606, 0.7993333339691162, 0.7870000004768372, 0.8073333501815796, 0.7873333096504211, 0.8066666722297668, 0.8169999718666077, 0.8203333616256714, 0.8206666707992554, 0.8193333148956299, 0.8230000138282776, 0.8196666836738586, 0.8159999847412109, 0.8233333230018616, 0.8230000138282776, 0.8256666660308838, 0.8320000171661377, 0.8370000123977661, 0.8366666436195374, 0.8343333601951599, 0.8383333086967468, 0.8323333263397217, 0.8320000171661377, 0.8379999995231628, 0.8320000171661377, 0.824999988079071]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 4, 3, 2, 3, 2, 2, 5, 9, 9, 6, 8, 9], [3, 3, 1, 2, 0, 0, 3, 0, 0, 3, 1, 0, 5, 0], [11, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [1, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8031428456306458, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 9, 7, 3, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))))), beta), tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1165229768139606, 1.8301523652893599, 1.2384556879409632, 0.9901766086755223, 0.854067020278644, 0.7661736809487797, 0.7671690563704627, 0.6830018055028038, 0.6621461627726164, 0.6445457419903838, 0.6577375673457316, 0.6010319718028482, 0.5841905614089311, 0.5568210196658809, 0.5706429564091571, 0.5427552846247699, 0.5269427973171346, 0.5303389018379607, 0.49665128757232185, 0.5049297964379237, 0.5090730109896249], "accuracy": [0.2911108136177063, 0.3457931578159332, 0.5576542019844055, 0.6300356388092041, 0.6804913282394409, 0.7119271159172058, 0.709021270275116, 0.7392682433128357, 0.7483819723129272, 0.7576277852058411, 0.7448157668113708, 0.7745344042778015, 0.7766477465629578, 0.7976489067077637, 0.7852331399917603, 0.7972526550292969, 0.8020076751708984, 0.7979130744934082, 0.8156121969223022, 0.8109893202781677, 0.8079513907432556], "val_loss": [1.4308719635009766, 1.0787901197160994, 0.9038181304931641, 0.724822998046875, 0.6056220701762608, 0.6497547115598407, 0.5420347792761666, 0.557490621294294, 0.5049650839396885, 0.4965757131576538, 0.4798226867403303, 0.47394776344299316, 0.45111083984375, 0.4653777394975935, 0.48914832728249685, 0.4409314734595163, 0.42890683242252897, 0.44343107087271555, 0.4629201889038086, 0.4216475657054356, 0.4203099949019296], "val_accuracy": [0.3240000009536743, 0.5306666493415833, 0.6039999723434448, 0.6916666626930237, 0.7133333086967468, 0.6826666593551636, 0.7490000128746033, 0.7383333444595337, 0.7693333625793457, 0.7756666541099548, 0.7879999876022339, 0.7833333611488342, 0.8013333082199097, 0.7996666431427002, 0.7736666798591614, 0.8143333196640015, 0.8069999814033508, 0.7929999828338623, 0.7839999794960022, 0.8106666803359985, 0.8119999766349792]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 8, 2, 2, 3, 2, 8, 2, 6, 9, 4, 8, 9], [2, 2, 3, 1, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 26, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [1, 0], [88, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.27457141876220703, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.6167138655109174, 5.83694055451693, 2.314886111215499, 2.3058471892251946, 2.3036957234911806, 2.292423355927352], "accuracy": [0.18253862857818604, 0.1562541276216507, 0.10011887550354004, 0.09655263274908066, 0.09694888442754745, 0.15136705338954926], "val_loss": [1.8893092700413294, 1.9903547423226493, 1.9773070471627372, 1.9739698682512556, 1.9725075449262346, 1.861104897090367], "val_accuracy": [0.28333333134651184, 0.10066666454076767, 0.10066666454076767, 0.09833333641290665, 0.15833333134651184, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 3, 2, 3, 2, 8, 5, 9, 9, 6, 8, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [18, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.2734285593032837, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.6166859965172615, 21507.380117108776, 3.3226408760881574e+33, 2.3149288835589754, 2.3054918640435504, 2.3032379970731927], "accuracy": [0.1822744756937027, 0.1624620258808136, 0.1022322028875351, 0.09998679161071777, 0.09747721254825592, 0.09708096832036972], "val_loss": [1.8883350236075265, 2874344892605586.5, 1.991777011326381, 1.9779093606131417, 1.9743987492152624, 1.973832675388881], "val_accuracy": [0.2836666703224182, 0.052666667848825455, 0.09833333641290665, 0.09833333641290665, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 3, 2, 3, 2, 8, 2, 6, 9, 6, 8, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [18, 53, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 8, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.sqrt(alpha), tf.math.square(tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 3, 2, 3, 2, 8, 2, 6, 9, 6, 8, 9], [3, 1, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [11, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [1, 0], [88, 44], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 20, 20, 12, 8, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.add(tf.math.sqrt(tf.math.add(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.math.add(beta, alpha), grad))), tf.math.add(beta, beta)), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.sqrt(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07885351777076721, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 4, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [5, 3, 3, 2, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0, 1], [88, 44], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 7, 6, 3, 3, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, alpha))))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 3, 4, 3, 1, 2, 5, 9, 9, 6, 8, 9], [0, 3, 1, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [11, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [1, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [2, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 2, 1, 0, 0, 0, 0, 6, 3, 3, 2], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), grad)))), tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.add(beta, grad))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3017210969835493, 2.302438223067528, 2.302477174541497, 2.302503958669211, 2.3025057569644107, 2.302600564485559], "accuracy": [0.10315678268671036, 0.1018359512090683, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973646913255964, 1.9736566543579102, 1.973667894090925, 1.9737027032034737, 1.9737308365958077, 1.9737965720040458], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 8, 6, 2, 3, 0, 5, 9, 2, 8, 6, 8, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0, 3], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [51, 56]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 6, 3, 3, 1, 6, 3, 3, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, sigma))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07845727354288101, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 8, 2, 3, 2, 8, 2, 6, 9, 6, 8, 9], [2, 3, 3, 2, 3, 3, 3, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 5, 4, 2, 1, 2, 3], [1, 2, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 0, 1, 0, 0, 0, 0, 13, 7, 6, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.square(tf.math.pow(tf.math.add(alpha, beta), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(beta, sigma), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [9, 8, 3, 2, 3, 2, 8, 2, 6, 9, 6, 8, 9], [2, 3, 3, 2, 2, 0, 3, 0, 0, 3, 1, 0, 5, 0], [18, 53, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3018278151990685, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09813763201236725, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 3, 1, 3, 2, 8, 2, 6, 9, 6, 8, 9], [2, 3, 3, 2, 2, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0, 4], [88, 44], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 6, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 17, 17, 10, 7, 2, 7, 6, 3, 3, 1, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.sqrt(tf.math.multiply(tf.math.subtract(tf.math.multiply(tf.math.add(grad, tf.math.add(beta, grad)), tf.math.add(beta, beta)), tf.math.add(beta, beta)), tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 9, 2, 3, 2, 8, 5, 9, 9, 6, 8, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [4, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 3, 2, 3, 2, 8, 5, 9, 9, 6, 8, 9], [2, 3, 3, 2, 2, 0, 3, 0, 0, 3, 1, 0, 5, 0], [11, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [1, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3027426704927727, 2.3027900705374056, 2.3030141823012453, 2.303010505219776, 2.303521768780054, 2.304154562266779], "accuracy": [0.08717474341392517, 0.09087307006120682, 0.08809932321310043, 0.0882314071059227, 0.09192973375320435, 0.08545766770839691], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 3, 2, 3, 2, 8, 2, 3, 9, 6, 8, 9], [5, 2, 3, 2, 3, 2, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 4, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.square(alpha), tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3029956505235947, 2.303731483286398, 2.3045081283595534, 2.3054220495978526, 2.306802457774934, 2.3087826565886216], "accuracy": [0.08651433140039444, 0.08770307898521423, 0.08585391938686371, 0.08466517180204391, 0.08730682730674744, 0.07515519857406616], "val_loss": [1.9717204230172294, 1.9722822734287806, 1.9727868352617537, 1.9734599930899483, 1.9740679604666573, 1.9748804909842355], "val_accuracy": [0.03700000047683716, 0.03400000184774399, 0.028999999165534973, 0.02666666731238365, 0.024666666984558105, 0.023666666820645332]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 3, 2, 3, 2, 8, 2, 6, 9, 6, 8, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [18, 53, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.square(alpha), tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3029956190325658, 2.3037315462684558, 2.3045081913416112, 2.30542211257991, 2.3068025072473404, 2.308782427207968], "accuracy": [0.08651433140039444, 0.08770307898521423, 0.08585391938686371, 0.08466517180204391, 0.08730682730674744, 0.07515519857406616], "val_loss": [1.9717203548976354, 1.9722822053091866, 1.9727868352617537, 1.9734599930899483, 1.9740680967058455, 1.9748800141470773], "val_accuracy": [0.03700000047683716, 0.03400000184774399, 0.028999999165534973, 0.02666666731238365, 0.024666666984558105, 0.023666666820645332]}}]