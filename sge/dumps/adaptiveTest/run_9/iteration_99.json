[{"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [3, 4, 2, 7, 8, 0, 7, 4, 3, 3, 3, 7, 8, 9, 8, 2, 6, 5, 7, 8, 7, 3, 4, 9], [2, 2, 3, 1, 1, 3, 2, 3, 0, 3, 2, 0, 3, 0, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7922857403755188, "mapping_values": [1, 39, 39, 24, 15, 5, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)), tf.math.multiply(tf.math.add(alpha, alpha), tf.math.multiply(grad, tf.math.add(grad, tf.math.sqrt(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))))))))))), tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad)))), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2916239513744374, 2.266709821634541, 2.235959426838063, 2.198100214164491, 2.142713989863196, 2.0677198062184274, 1.9745801304309691, 1.8578754815096712, 1.7202303414772435, 1.6005999952369694, 1.476875699963064, 1.384502087412824, 1.3067612749096456, 1.2393332312308944, 1.188273000191263, 1.1413982928059025, 1.0994901034054487, 1.0582693104006438, 1.0316357045141524, 1.0128536691534646, 0.978771100828692, 0.9595902738963545, 0.9399980267733946, 0.9273434485804687, 0.9099289088075376, 0.9043886769228859, 0.8887547012160184, 0.8759528792072927, 0.8616624014284066, 0.8558756621553756, 0.845322399091538, 0.8322027283589665, 0.8273422084684778, 0.8227753655439072, 0.805273049267575, 0.7979241056905809, 0.8026899880563673, 0.7991893629293401, 0.7844900540971107, 0.7705088205593231, 0.7733353783095187, 0.7691713814737932, 0.7660098327401292, 0.7691196402097659, 0.753233036840943, 0.7488769499963663, 0.7397104277271935, 0.7372438413292867, 0.7392469022519962, 0.7321779348862532, 0.7279228674438037, 0.7245166172928987, 0.7117853113972296, 0.7056144012388945, 0.6993050027942267, 0.7028811232934397, 0.7129757314892871, 0.6991635671050526, 0.7014418705390539, 0.6935019914846631, 0.6878885892577191, 0.6971189588005233, 0.6844365464666374, 0.6846671667648203, 0.6731154734054497, 0.6794721773193182, 0.6773121339880228, 0.6814741919525956, 0.6713985883407053, 0.6654382820662222, 0.6647575711844982, 0.6635343635779771, 0.6522067013181763, 0.6612361880609026, 0.6529681409638177, 0.6524019356511446, 0.6595539623531195, 0.6506343853235906], "accuracy": [0.11821424216032028, 0.18451987206935883, 0.2566371560096741, 0.308149516582489, 0.35279354453086853, 0.3936071991920471, 0.4115704596042633, 0.4468366205692291, 0.474970281124115, 0.49689605832099915, 0.5163122415542603, 0.5425967574119568, 0.5605600476264954, 0.5736362338066101, 0.5840708017349243, 0.6026945114135742, 0.6148461103439331, 0.6292431354522705, 0.6343944072723389, 0.6390172839164734, 0.6493197679519653, 0.6639809608459473, 0.6701889038085938, 0.6707172393798828, 0.6705851554870605, 0.6758684515953064, 0.6777176260948181, 0.6869634389877319, 0.6951525807380676, 0.6884163022041321, 0.694360077381134, 0.7049266695976257, 0.7014925479888916, 0.6973979473114014, 0.707040011882782, 0.7073041796684265, 0.7073041796684265, 0.7051908373832703, 0.7108704447746277, 0.719852089881897, 0.7123233675956726, 0.7156254053115845, 0.7161537408828735, 0.718399167060852, 0.719852089881897, 0.7250033020973206, 0.7321357727050781, 0.7277770638465881, 0.7263241410255432, 0.728701651096344, 0.7292299270629883, 0.7375511527061462, 0.7366266250610352, 0.7363624572753906, 0.7452120184898376, 0.7333245277404785, 0.7316074371337891, 0.7366266250610352, 0.7404569983482361, 0.741909921169281, 0.7453441023826599, 0.7453441023826599, 0.7404569983482361, 0.7494386434555054, 0.7481178045272827, 0.748778223991394, 0.7479857206344604, 0.7427024245262146, 0.7466648817062378, 0.7539294958114624, 0.752740740776062, 0.7491744756698608, 0.7582882046699524, 0.7553823590278625, 0.7548540234565735, 0.7549861073493958, 0.754589855670929, 0.7556465268135071], "val_loss": [1.9466081346784319, 1.9204698971339635, 1.888437271118164, 1.8460402488708496, 1.786306585584368, 1.7042638233729772, 1.5996667998177665, 1.474397829600743, 1.3400515828813826, 1.2137367384774345, 1.105917521885463, 1.0192421504429408, 0.9517878804888044, 0.8970726217542376, 0.8536246844700405, 0.8174713509423392, 0.7882250036512103, 0.7635113341467721, 0.7427633319582257, 0.7244230338505336, 0.7083584751401629, 0.6968840701239449, 0.6811451401029315, 0.6730475425720215, 0.6619892120361328, 0.6523686477116176, 0.6447196517671857, 0.6369978359767369, 0.6308209044592721, 0.6233018807002476, 0.6178535223007202, 0.6116758244378226, 0.6052485023226056, 0.6000307117189679, 0.5955133949007306, 0.5909067051751273, 0.5875141280038017, 0.5851794310978481, 0.579666290964399, 0.5758082696369716, 0.5725360597882952, 0.5698924575533185, 0.5676137038639614, 0.5626411778586251, 0.560963647706168, 0.5581574440002441, 0.5538287673677716, 0.5507517542157855, 0.5484146560941424, 0.5452463456562587, 0.5448182650974819, 0.5410479647772652, 0.5388019766126361, 0.5358023473194667, 0.5343783242361886, 0.5336577211107526, 0.531647903578622, 0.5287482568195888, 0.525902509689331, 0.5247965029307774, 0.5215848514011928, 0.5208137035369873, 0.5187299251556396, 0.5194188696997506, 0.5162895406995501, 0.5146526098251343, 0.5139094761439732, 0.5111879110336304, 0.5092282806124006, 0.5105071919304984, 0.5072696208953857, 0.5083992310932705, 0.505296162196568, 0.5026127781186785, 0.5017228467123849, 0.501727717263358, 0.49910289900643484, 0.49851843288966585], "val_accuracy": [0.23600000143051147, 0.37166666984558105, 0.4153333306312561, 0.4480000138282776, 0.49000000953674316, 0.5216666460037231, 0.5496666431427002, 0.5696666836738586, 0.5913333296775818, 0.6106666922569275, 0.6399999856948853, 0.6523333191871643, 0.6696666479110718, 0.6703333258628845, 0.6793333292007446, 0.6840000152587891, 0.6923333406448364, 0.6953333616256714, 0.7009999752044678, 0.7036666870117188, 0.7110000252723694, 0.7080000042915344, 0.7153333425521851, 0.7183333039283752, 0.7246666550636292, 0.7273333072662354, 0.7239999771118164, 0.7310000061988831, 0.7319999933242798, 0.737333357334137, 0.7386666536331177, 0.7310000061988831, 0.7429999709129333, 0.7433333396911621, 0.7453333139419556, 0.7476666569709778, 0.7476666569709778, 0.7456666827201843, 0.7553333044052124, 0.7493333220481873, 0.7519999742507935, 0.7540000081062317, 0.7553333044052124, 0.7559999823570251, 0.7583333253860474, 0.7593333125114441, 0.762666642665863, 0.765666663646698, 0.7639999985694885, 0.765333354473114, 0.7636666893959045, 0.7680000066757202, 0.7663333415985107, 0.7699999809265137, 0.7693333625793457, 0.7649999856948853, 0.7730000019073486, 0.7723333239555359, 0.7713333368301392, 0.7749999761581421, 0.7746666669845581, 0.7720000147819519, 0.7743333578109741, 0.7746666669845581, 0.777999997138977, 0.7766666412353516, 0.7796666622161865, 0.7799999713897705, 0.777999997138977, 0.7746666669845581, 0.7803333401679993, 0.777999997138977, 0.7826666831970215, 0.781000018119812, 0.7789999842643738, 0.7793333530426025, 0.778333306312561, 0.777999997138977]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 1, 0, 1], [1, 1, 7, 7, 8], [2, 2, 3, 1], [48], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7919999957084656, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2916239513744374, 2.266709916107627, 2.235959638331812, 2.1981006685485456, 2.142713396194321, 2.0677196489522296, 1.9745754043518386, 1.8578662357908498, 1.7201994468570307, 1.6005333693839021, 1.4768082270328127, 1.3844405787889558, 1.306699762349399, 1.2392880608140833, 1.188236993490634, 1.141389189410786, 1.0994742511522029, 1.058244228363037, 1.0316241610839052, 1.0128131388610206, 0.9787869833054528, 0.9595935583161861, 0.9399935141798212, 0.9273066384177308, 0.9099275434273834, 0.9043988132788567, 0.8887117661898871, 0.8759609750705608, 0.8617063760599991, 0.8559149711627403, 0.8453520140108132, 0.8323632069960435, 0.8272461531153129, 0.8228195711307049, 0.8053297779075442, 0.797857957414711, 0.8027117398940593, 0.7992361079290826, 0.7845057950453153, 0.7705418682526667, 0.7733673136452516, 0.7692284389509579, 0.7660825693407363, 0.7691879413934385, 0.7532915827966936, 0.7489151717523432, 0.7397434667447587, 0.7372341039489053, 0.7392601112663754, 0.7322252306877078, 0.7279291333082787, 0.7246074115264811, 0.7117687965018827, 0.7055566520849003, 0.6992635167726767, 0.702932429508904, 0.7129820075253643, 0.6991503926599503, 0.7015574146349983, 0.693426038602938, 0.6880392100376114, 0.6970628234121731, 0.6845651793914496, 0.684781510312528, 0.6731183314052602, 0.6794464322459728, 0.6772657375388599, 0.6815203202950122, 0.6714391752776374, 0.665545604862258, 0.6647021248513493, 0.6635639241752277, 0.652350392316106, 0.6614814890988231, 0.6530082419941753, 0.6525746706832338, 0.6596193485697105, 0.6507061523547845], "accuracy": [0.11821424216032028, 0.18451987206935883, 0.2566371560096741, 0.308149516582489, 0.352529376745224, 0.3936071991920471, 0.4115704596042633, 0.4468366205692291, 0.474970281124115, 0.4967639744281769, 0.5160480737686157, 0.5425967574119568, 0.5604279637336731, 0.5735041499137878, 0.5842028856277466, 0.6026945114135742, 0.6147140264511108, 0.629507303237915, 0.6345264911651611, 0.6388852000236511, 0.6494518518447876, 0.663848876953125, 0.670320987701416, 0.6705851554870605, 0.6708492636680603, 0.6761326193809509, 0.6775855422019958, 0.6865671873092651, 0.6951525807380676, 0.6885483860969543, 0.693831741809845, 0.7049266695976257, 0.7009642124176025, 0.6973979473114014, 0.707568347454071, 0.7082287669181824, 0.7074362635612488, 0.7049266695976257, 0.7108704447746277, 0.7201162576675415, 0.7119271159172058, 0.7157574892044067, 0.7154933214187622, 0.7185312509536743, 0.7202483415603638, 0.7253995537757874, 0.7316074371337891, 0.7281733155250549, 0.7265883088111877, 0.7285695672035217, 0.7293620109558105, 0.7371549606323242, 0.7362303733825684, 0.7372870445251465, 0.7454761862754822, 0.733588695526123, 0.7317395210266113, 0.7368907928466797, 0.7416457533836365, 0.741909921169281, 0.7448157668113708, 0.7450799345970154, 0.7403249144554138, 0.7491744756698608, 0.7486461400985718, 0.7486461400985718, 0.748249888420105, 0.7430986762046814, 0.746268630027771, 0.7541936039924622, 0.752740740776062, 0.7495707273483276, 0.7577598690986633, 0.7555144429206848, 0.754589855670929, 0.7555144429206848, 0.754589855670929, 0.7549861073493958], "val_loss": [1.9466081346784319, 1.9204702377319336, 1.8884376798357283, 1.8460398401532854, 1.786306721823556, 1.7042644364493233, 1.5996631213596888, 1.4743775640215193, 1.3399824414934431, 1.2136448451450892, 1.1058624131338937, 1.01920485496521, 0.951756341116769, 0.8970589637756348, 0.8536304916654315, 0.8174738713673183, 0.7882339102881295, 0.7635041304997036, 0.7427586317062378, 0.7244138377053397, 0.7083760159356254, 0.69688652242933, 0.6811355011803764, 0.6730557339532035, 0.6619532108306885, 0.6523045982633319, 0.6447232961654663, 0.6369687829698835, 0.6308256728308541, 0.6233851569039481, 0.6178544078554425, 0.6116804565702166, 0.6053186995642525, 0.5999807289668492, 0.5954782111304147, 0.590862342289516, 0.5874440159116473, 0.5851573262895856, 0.5795692205429077, 0.5758363859994071, 0.5725832496370588, 0.5699523346764701, 0.5676753180367606, 0.5627296141215733, 0.5610220772879464, 0.5582840612956456, 0.5538170848573957, 0.55079185962677, 0.5484675339290074, 0.54526686668396, 0.5448298794882638, 0.5410471984318325, 0.5387598446437291, 0.5358204160417829, 0.534456593649728, 0.5337435007095337, 0.5316415343965802, 0.5286987849644252, 0.5259930065699986, 0.5248256581170219, 0.5216481345040458, 0.5209988525935582, 0.5188930715833392, 0.5195305177143642, 0.5163602147783551, 0.514724748475211, 0.513951301574707, 0.51112619468144, 0.5093770538057599, 0.5105110577174595, 0.5073238951819283, 0.5083868333271572, 0.5053565502166748, 0.5026301656450544, 0.5017375775745937, 0.5016613347189767, 0.4990919828414917, 0.498501181602478], "val_accuracy": [0.23600000143051147, 0.37166666984558105, 0.4153333306312561, 0.4480000138282776, 0.49000000953674316, 0.5220000147819519, 0.5496666431427002, 0.5696666836738586, 0.5913333296775818, 0.6106666922569275, 0.6399999856948853, 0.6523333191871643, 0.6693333387374878, 0.6703333258628845, 0.6800000071525574, 0.6840000152587891, 0.6923333406448364, 0.6956666707992554, 0.7009999752044678, 0.70333331823349, 0.7106666564941406, 0.7080000042915344, 0.7153333425521851, 0.7183333039283752, 0.7243333458900452, 0.7266666889190674, 0.7243333458900452, 0.7310000061988831, 0.7326666712760925, 0.737666666507721, 0.7386666536331177, 0.7310000061988831, 0.7426666617393494, 0.7440000176429749, 0.7453333139419556, 0.7473333477973938, 0.7480000257492065, 0.7450000047683716, 0.7553333044052124, 0.749666690826416, 0.7519999742507935, 0.7546666860580444, 0.7553333044052124, 0.7559999823570251, 0.7586666941642761, 0.7593333125114441, 0.7630000114440918, 0.765666663646698, 0.7636666893959045, 0.765333354473114, 0.7643333077430725, 0.7676666378974915, 0.7666666507720947, 0.7699999809265137, 0.768666684627533, 0.7646666765213013, 0.7720000147819519, 0.7713333368301392, 0.7713333368301392, 0.7739999890327454, 0.7749999761581421, 0.7720000147819519, 0.7739999890327454, 0.7743333578109741, 0.7773333191871643, 0.7773333191871643, 0.7796666622161865, 0.7799999713897705, 0.7786666750907898, 0.7746666669845581, 0.781000018119812, 0.778333306312561, 0.7829999923706055, 0.781000018119812, 0.7796666622161865, 0.7793333530426025, 0.7789999842643738, 0.777999997138977]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1], [9, 2, 8, 7, 8, 4, 2, 5, 7, 3, 7, 0, 7, 9, 1, 2, 8, 8, 1, 8, 5, 6, 0, 8], [2, 2, 3, 1, 1, 3, 2, 3, 0, 3, 2, 0, 3], [26, 46], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7228571176528931, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.271841995625716, 2.015600614103076, 1.444612550776412, 1.1803766340233819, 0.9176322101302796, 0.8483838133131114, 0.8157271571509543, 0.7500384960900743, 0.7426907207279031, 0.7136053943347465, 0.6885837141344214, 0.6660255399740383, 0.6259313675989139, 0.6023776429739642, 0.5999370488382334, 0.5663839514386841, 0.5635288571480038, 0.5432934613275711, 0.5361250660178872, 0.5300276306059383, 0.5173878489767539, 0.5136796544414107, 0.4942232776925769, 0.4919511974841974, 0.4847528572568111, 0.4846132020743421, 0.47323620986582626, 0.4429814072136141, 0.4586245117721588, 0.43604217910369814, 0.43993100743204955, 0.41845098633839234, 0.41450689679690483, 0.4247229274245711, 0.4010128880008463, 0.39316316534499485, 0.40658358880604706, 0.3826549395814532, 0.38212194193654986, 0.38104248583403405, 0.36861741951412264, 0.3639974868127525, 0.370633199242175], "accuracy": [0.16893409192562103, 0.3870030343532562, 0.5095760226249695, 0.6071853041648865, 0.6633205413818359, 0.6787742972373962, 0.6910579800605774, 0.7082287669181824, 0.7154933214187622, 0.7259278893470764, 0.7314753532409668, 0.7386078238487244, 0.7572315335273743, 0.7713643908500671, 0.7637035846710205, 0.7802139520645142, 0.7784969210624695, 0.7837802171707153, 0.7876105904579163, 0.7922335267066956, 0.7987055778503418, 0.8020076751708984, 0.805177628993988, 0.8059701323509216, 0.8078193068504333, 0.8070268034934998, 0.8124422430992126, 0.8260467648506165, 0.8335754871368408, 0.8277638554573059, 0.829216718673706, 0.8405758738517761, 0.8360850811004639, 0.8355567455291748, 0.8387266993522644, 0.848368763923645, 0.8445383906364441, 0.8502179384231567, 0.8491612672805786, 0.856689989566803, 0.8511425256729126, 0.859199583530426, 0.8581429123878479], "val_loss": [1.8665315083095007, 1.3042574269430978, 0.8325602497373309, 0.6850894178662982, 0.685254522732326, 0.6055210317884173, 0.5991125788007464, 0.5693553686141968, 0.5666886568069458, 0.532324126788548, 0.5002795287540981, 0.48976586546216694, 0.48571324348449707, 0.46308864865984234, 0.46782095091683523, 0.4537010022572109, 0.44388872385025024, 0.4352160521915981, 0.4384226288114275, 0.4291770202772958, 0.42417300598961966, 0.41898105825696674, 0.4291779398918152, 0.41708009583609446, 0.42159825563430786, 0.39955764157431467, 0.40325515610831125, 0.42167969260896954, 0.40990602118628366, 0.3919008459363665, 0.3918189065796988, 0.4008476052965437, 0.39803833620888845, 0.38921683175223215, 0.3905751960618155, 0.3913941298212324, 0.3785036291394915, 0.3848004255975996, 0.39362287521362305, 0.3853590488433838, 0.38721035208020893, 0.3908252886363438, 0.37801226547786165], "val_accuracy": [0.3893333375453949, 0.5776666402816772, 0.6303333044052124, 0.7053333520889282, 0.7120000123977661, 0.7273333072662354, 0.7243333458900452, 0.7456666827201843, 0.7506666779518127, 0.7583333253860474, 0.7839999794960022, 0.7753333449363708, 0.7789999842643738, 0.7873333096504211, 0.7896666526794434, 0.7993333339691162, 0.8016666769981384, 0.8100000023841858, 0.8130000233650208, 0.8143333196640015, 0.8169999718666077, 0.8226666450500488, 0.8206666707992554, 0.8196666836738586, 0.8186666369438171, 0.8349999785423279, 0.8349999785423279, 0.8333333134651184, 0.8343333601951599, 0.8356666564941406, 0.8366666436195374, 0.8386666774749756, 0.8426666855812073, 0.8506666421890259, 0.8500000238418579, 0.8526666760444641, 0.8496666550636292, 0.8556666374206543, 0.8550000190734863, 0.8483333587646484, 0.8489999771118164, 0.8519999980926514, 0.8516666889190674]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1], [1, 1, 5, 7, 8], [2, 2, 3, 1], [49], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [5, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [7, 0, 8, 9, 7], [5, 7], [88, 19], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.30628570914268494, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3878697936151636, 2.268889268155363, 2.1755924425136457, 2.325265337841118, 2.4529166839157726, 2.3077990570088516], "accuracy": [0.21952186524868011, 0.14714039862155914, 0.19944524765014648, 0.12402588874101639, 0.1578391194343567, 0.10170386731624603], "val_loss": [1.6710757868630546, 1.9713634763445174, 1.7929314885820662, 1.966123376573835, 1.9806299209594727, 1.9746636663164412], "val_accuracy": [0.27000001072883606, 0.09966666996479034, 0.2696666717529297, 0.1863333284854889, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [3, 4, 2, 7, 8, 3, 7, 4, 3, 3, 3, 7, 8, 9, 9, 2, 6, 7, 7, 8, 7, 3, 4, 9], [3, 2, 1, 1], [29, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 12, 7, 5, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(beta), tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10249637067317963, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 1, 0, 1], [1, 1, 7, 7, 8], [2, 2, 3, 1], [48], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [5, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 0, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(beta), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10196803510189056, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0], [1, 1, 1, 1, 0, 1, 1, 0, 1], [1, 1, 5, 7, 8], [3, 2, 3, 1, 1, 3, 2, 3, 0, 3, 2, 0, 3], [55, 46], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08215559273958206, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [1, 1, 5, 7, 8], [0, 2, 1, 1], [48], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 8, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10249637067317963, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [1, 1, 5, 7, 8], [1, 2, 1, 1], [48], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [5, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 6, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10196803510189056, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1], [9, 2, 8, 7, 8, 4, 2, 5, 7, 3, 7, 0, 7, 9, 1, 2, 8, 8, 1, 8, 5, 6, 0, 8], [0, 1, 1, 1, 0, 1, 0, 3, 1, 3, 1, 1, 2, 0, 0, 2], [48, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08215559273958206, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 1, 0, 1], [1, 1, 7, 7, 8], [2, 2, 3, 1], [48], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 9, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 2, 0, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2896.565387950298, 52057.41608605204, 237063.5407971206, 659350.4150624092, 1389387.135616167, 2581208.217573636], "accuracy": [0.10619468986988068, 0.09879804402589798, 0.1006472036242485, 0.09602430462837219, 0.09959053993225098, 0.10355303436517715], "val_loss": [10688.111328125, 82992.62276785714, 277608.3214285714, 655220.25, 1276514.2857142857, 2202174.9285714286], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1], [1, 4, 7, 7, 8, 5, 1], [2, 1, 3, 1, 1, 3, 2, 3, 0, 3, 2, 0, 3], [55, 46], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 4, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 7, 6, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha)))))), tf.math.add(alpha, tf.math.square(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10249637067317963, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0], [3, 4, 2, 7, 3, 3, 9, 4, 3, 3, 3, 7, 8, 9, 9, 2, 6, 7, 8, 8, 7, 3, 4, 9], [0, 1, 1, 1, 0, 1, 0, 3, 1, 3, 2, 1, 2, 0, 0, 2], [55, 50, 26, 86, 41, 5, 5, 3], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [0, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 32, 32, 20, 12, 6, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha))), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.multiply(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(tf.math.sqrt(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))))))), tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))))), tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1641.4719957770642, 28937.002780965195, 131265.1658982466, 364524.27687887993, 767512.9047186633, 1425171.701393475], "accuracy": [0.10632677376270294, 0.09879804402589798, 0.10051512718200684, 0.09602430462837219, 0.09959053993225098, 0.10355303436517715], "val_loss": [5976.017438616072, 46012.28571428572, 153558.1205357143, 362050.4910714286, 704927.8928571428, 1215628.5714285714], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1], [9, 2, 8, 7, 8, 4, 2, 5, 7, 3, 7, 0, 7, 9, 1, 2, 8, 8, 1, 8, 5, 6, 0, 8], [0, 2, 1, 1], [48], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [5, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 3, 0, 1, 3, 3], [64, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, sigma))", "other_info": {"loss": [2.3030164870036796, 2.30623409401991, 2.3075721649650602, 2.3107480202620576, 2.3117435664359713, 2.3146774283552594, 2.31940689525899, 2.3251243202268426, 2.332350110176327, 2.3470022351183455, 2.378649149210603, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0936468094587326, 0.08585391938686371, 0.08268392831087112, 0.08387266844511032, 0.08215559273958206, 0.0734381154179573, 0.07898560166358948, 0.07766477018594742, 0.07885351777076721, 0.07568352669477463, 0.08175934851169586, 0.10051512718200684, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9721557072230749, 1.9737535885402135, 1.9752822603498186, 1.9772295951843262, 1.9792539051600866, 1.981858730316162, 1.984907899584089, 1.9890289306640625, 1.995384761265346, 2.0084902899605885, 2.064840793609619, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03433333337306976, 0.027666667476296425, 0.02566666714847088, 0.02666666731238365, 0.03099999949336052, 0.03733333200216293, 0.05233333259820938, 0.06433333456516266, 0.08299999684095383, 0.09833333641290665, 0.09933333098888397, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1], [1, 1, 7, 7, 8], [0, 2, 1, 1], [49], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [5, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [3, 7], [88, 19], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 8, 4, 4, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(beta, tf.math.multiply(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10421344637870789, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 1, 7, 7, 8], [2, 2, 3, 1], [48], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [4, 3, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 8, 4, 4, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10249637067317963, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [1, 4, 2, 2, 8, 3, 7, 4, 3, 5], [0, 1, 1, 1, 0, 1, 0, 3, 1], [48, 91, 74], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 1, 1], [2, 9, 0, 1, 7, 5, 5, 9], [5, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.0868571400642395, "mapping_values": [1, 19, 19, 10, 9, 3, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.pow(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)))), alpha), tf.math.add(alpha, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))), grad)))))))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.571792238975135, 2.3577236058516444, 2.3484448149629067, 2.347038309697887, 5.05349914499539e+29, 3.440056654251546], "accuracy": [0.1702549159526825, 0.09496764093637466, 0.09906221181154251, 0.09655263274908066, 0.09972262382507324, 0.09893012791872025], "val_loss": [2.0429952485220775, 2.002652508871896, 1.9843314034598214, 187.39729963030135, 3.0964503288269043, 2.317368303026472], "val_accuracy": [0.10366666316986084, 0.10199999809265137, 0.10066666454076767, 0.10366666316986084, 0.09799999743700027, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0], [1, 1, 1, 1, 0, 1, 1, 0, 1], [1, 1, 7, 7, 8], [1, 2, 3, 1], [48], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [5, 3, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3025399238174273, 2.304065817681916, 2.303375758924473, 2.303877829277221, 2.302532653074223, 2.301797911475568], "accuracy": [0.0940430611371994, 0.09179764986038208, 0.08942015469074249, 0.09377889335155487, 0.0956280529499054, 0.0886276587843895], "val_loss": [1.9712321417672294, 1.9712319374084473, 1.9712318692888533, 1.9712317330496651, 1.971231528690883, 1.971231528690883], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 1, 7, 7, 8], [2, 2, 3, 1], [48], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 1, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, alpha))", "other_info": {"loss": [2.3025400047808624, 2.3040661190825524, 2.3033761772512995, 2.3038784635695233, 2.3025332918382513, 2.3017989461133195], "accuracy": [0.0940430611371994, 0.09179764986038208, 0.08942015469074249, 0.09377889335155487, 0.0956280529499054, 0.0886276587843895], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 1, 0, 1], [1, 1, 5, 7, 8], [1, 2, 3, 1], [48], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [5, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 3, 3, 1, 2, 0, 7, 7, 4, 3, 1, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, alpha), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3025400047808624, 2.3040661190825524, 2.3033761772512995, 2.3038784635695233, 2.3025332918382513, 2.3017989461133195], "accuracy": [0.0940430611371994, 0.09179764986038208, 0.08942015469074249, 0.09377889335155487, 0.0956280529499054, 0.0886276587843895], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]