[{"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1], [0, 1, 1], [2], [3, 4], [8], [0], [1], [], [2], [], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7], [1, 0, 0, 3], [28, 57]], "fitness": -0.7905714511871338, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 6, 3, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2899000215146206, 2.2556601188217784, 2.2157745229065804, 2.1571819002854116, 2.073630900068715, 1.9561600806360089, 1.80269363530796, 1.6441159738195004, 1.4982180925581385, 1.3765915157993032, 1.2857400616949513, 1.2199161557032683, 1.1457253026924492, 1.0990481312563705, 1.0595671507219802, 1.0221365028132443, 0.9941224360730528, 0.9624798614052009, 0.9382715262142958, 0.9378089580663742, 0.9069805482296408, 0.8904698266171823, 0.8677448221500665, 0.8662700174569989, 0.844581286149207, 0.8463841797401404, 0.8327256734612721, 0.8087613828398564, 0.8056174181770765, 0.8020826467606748, 0.80345954921472, 0.7854213951097235, 0.7794847173020667, 0.7729559000834907, 0.7729994982634522, 0.7594600594936503, 0.7460916001546999, 0.7437997723079203, 0.744458397192773, 0.7405766607543276, 0.7263362421304196, 0.7272029856507489, 0.7195736784441218, 0.7200163755954107, 0.7113042890419341, 0.707348546938039, 0.7088132421920926, 0.6987358903636108, 0.7007690519310968, 0.7030421592666174, 0.6907382224529112, 0.6898625961872313, 0.6883204547704849, 0.6815055330211239, 0.6738222721246224, 0.6705837286994001, 0.6746896488980499], "accuracy": [0.12296922504901886, 0.21080438792705536, 0.2852991819381714, 0.34103816747665405, 0.38805970549583435, 0.4225333631038666, 0.4678378105163574, 0.48791441321372986, 0.5190860033035278, 0.5400871634483337, 0.5589750409126282, 0.5810328722000122, 0.5946374535560608, 0.6135252714157104, 0.6262052655220032, 0.6384889483451843, 0.6485272645950317, 0.6567164063453674, 0.666358470916748, 0.6629242897033691, 0.6737551093101501, 0.6811517477035522, 0.6950204968452454, 0.6892088055610657, 0.69673752784729, 0.6946242451667786, 0.7009642124176025, 0.707568347454071, 0.7057191729545593, 0.7062475085258484, 0.7084929347038269, 0.7102100253105164, 0.7132478952407837, 0.715889573097229, 0.7148329019546509, 0.7236824631690979, 0.7301545143127441, 0.7280412316322327, 0.7257958054542542, 0.7243428826332092, 0.7305507659912109, 0.7325320243835449, 0.7314753532409668, 0.7372870445251465, 0.7342491149902344, 0.7368907928466797, 0.7338528633117676, 0.7421740889549255, 0.7397965788841248, 0.7364945411682129, 0.7437590956687927, 0.7464007139205933, 0.7396644949913025, 0.7452120184898376, 0.7473253011703491, 0.7497028112411499, 0.7519482374191284], "val_loss": [1.9412686484200614, 1.9074997901916504, 1.861950056893485, 1.7940224238804408, 1.6961298670087541, 1.563979148864746, 1.4052467346191406, 1.2476834229060583, 1.1102939333234514, 1.0052886009216309, 0.9255711010524205, 0.8684994493212018, 0.822069661957877, 0.7859696320125035, 0.7566274915422712, 0.7314611503056118, 0.7113628557750157, 0.6956111022404262, 0.6787691797528949, 0.6659169026783535, 0.6555720397404262, 0.6442041567393711, 0.6343023777008057, 0.6271688427243914, 0.6194097825459072, 0.6126705748694283, 0.6072790793010167, 0.5999365363802228, 0.5933128595352173, 0.5882750919886998, 0.5832461629595075, 0.5797157798494611, 0.5763339485440936, 0.5728238310132708, 0.5689148902893066, 0.562888537134443, 0.5604807649339948, 0.5559662410191127, 0.55405250617436, 0.5502617188862392, 0.5453910146440778, 0.5441537073680333, 0.5392546142850604, 0.5395503895623344, 0.5382473809378487, 0.5321833406175885, 0.5334229639598301, 0.526660851069859, 0.5260957820074899, 0.5261459350585938, 0.5220414229801723, 0.5178664071219308, 0.5177826711109706, 0.5142538888113839, 0.5118053300040108, 0.5102155719484601, 0.5083869525364467], "val_accuracy": [0.2953333258628845, 0.38866665959358215, 0.445333331823349, 0.4860000014305115, 0.5266666412353516, 0.5619999766349792, 0.5756666660308838, 0.6019999980926514, 0.6323333382606506, 0.6606666445732117, 0.6690000295639038, 0.6803333163261414, 0.6893333196640015, 0.6926666498184204, 0.6983333230018616, 0.70333331823349, 0.7136666774749756, 0.7153333425521851, 0.7210000157356262, 0.7229999899864197, 0.7179999947547913, 0.7319999933242798, 0.7329999804496765, 0.7300000190734863, 0.7356666922569275, 0.7383333444595337, 0.7379999756813049, 0.7419999837875366, 0.7416666746139526, 0.7480000257492065, 0.750333309173584, 0.7480000257492065, 0.7493333220481873, 0.7523333430290222, 0.7536666393280029, 0.7519999742507935, 0.7583333253860474, 0.7570000290870667, 0.7620000243186951, 0.7576666474342346, 0.765999972820282, 0.762333333492279, 0.7706666588783264, 0.7639999985694885, 0.7649999856948853, 0.7696666717529297, 0.7620000243186951, 0.7733333110809326, 0.7706666588783264, 0.7703333497047424, 0.7770000100135803, 0.7803333401679993, 0.7760000228881836, 0.7770000100135803, 0.7773333191871643, 0.7793333530426025, 0.7789999842643738]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 0, 0], [0, 1, 1], [2], [3, 4], [8], [0], [1], [], [5], [], [0, 0, 1, 0, 1, 1, 0, 1, 1], [6, 3, 0, 5, 7], [1, 0, 0, 3], [28, 57]], "fitness": -0.7902857065200806, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 6, 3, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.2899000530056495, 2.25566008733075, 2.2157746173796666, 2.1571824086135987, 2.0736297485047737, 1.956161252417191, 1.8026947688432875, 1.6441160797080847, 1.4982200878927059, 1.3765869998440625, 1.2857389030612738, 1.2199291936819974, 1.1457017360188941, 1.0990349954035241, 1.0596035686482086, 1.0221399009235625, 0.9940976952092523, 0.962500111664039, 0.9383218913439825, 0.9378740474878915, 0.907004650589214, 0.8904751390828873, 0.8677474515958626, 0.8663940547936313, 0.8445704721535328, 0.8464191035745072, 0.8327326219567786, 0.808803816922447, 0.8055397978532489, 0.8023107439897568, 0.8035217668905927, 0.7854279136188499, 0.7795139214444894, 0.7730303339324591, 0.7730014887090373, 0.7595068842759143, 0.7460964273279054, 0.7438122210501364, 0.7445290412302613, 0.740650200187223, 0.726319973691737, 0.727203220439987, 0.7196119741803981, 0.7200554691175381, 0.7114048486278042, 0.7074685125082648, 0.7087504639680343, 0.6988491895585847, 0.7008689819089552, 0.7031281518662186, 0.6905982249196588, 0.6899168426098368, 0.6883615093177037, 0.6816415648969913, 0.6740058763719049, 0.6705510426254131, 0.6747596763726853], "accuracy": [0.12296922504901886, 0.21080438792705536, 0.2852991819381714, 0.34103816747665405, 0.38805970549583435, 0.4224012792110443, 0.4678378105163574, 0.4880464971065521, 0.5189539194107056, 0.540219247341156, 0.5592392086982727, 0.5809007883071899, 0.5950337052345276, 0.6135252714157104, 0.6259410977363586, 0.6387531161308289, 0.6494518518447876, 0.6567164063453674, 0.666358470916748, 0.6626601219177246, 0.6734909415245056, 0.6806234121322632, 0.6947563290596008, 0.6892088055610657, 0.6970016956329346, 0.6946242451667786, 0.7000396251678467, 0.7066437602043152, 0.7053229212760925, 0.7065116763114929, 0.709549605846405, 0.7108704447746277, 0.7136441469192505, 0.715889573097229, 0.7141724824905396, 0.7230220437049866, 0.7297582626342773, 0.7279091477394104, 0.7252674698829651, 0.7244749665260315, 0.7308149337768555, 0.7331924438476562, 0.7312111854553223, 0.7367587089538574, 0.7337207794189453, 0.7367587089538574, 0.7345132827758789, 0.7416457533836365, 0.7392682433128357, 0.7362303733825684, 0.7436270117759705, 0.746268630027771, 0.7395324110984802, 0.7456082701683044, 0.7474573850631714, 0.7495707273483276, 0.7526086568832397], "val_loss": [1.9412686484200614, 1.9075000626700265, 1.8619507380894251, 1.7940218789236886, 1.6961306503840856, 1.5639780589512415, 1.4052479267120361, 1.2476914269583566, 1.1102933883666992, 1.0052900995526994, 0.9255649362291608, 0.8684682846069336, 0.8220544542585101, 0.7859242984226772, 0.7566370112555367, 0.7314822673797607, 0.7113259179251534, 0.6955942767007011, 0.6787613459995815, 0.6658663749694824, 0.6554564407893589, 0.6442062514168876, 0.6343625273023333, 0.627105576651437, 0.6193951027733939, 0.6127092838287354, 0.6072731358664376, 0.5999351058687482, 0.59311500617436, 0.5882661683218819, 0.5832545246396746, 0.5796477283750262, 0.5762607370104108, 0.5728795187813895, 0.56892158303942, 0.5630425895963397, 0.5605483225413731, 0.5558936766215733, 0.5541467836924961, 0.5503439732960292, 0.5454322610582624, 0.5442347356251308, 0.5392959458487374, 0.5395207064492362, 0.5381334679467338, 0.5319880076817104, 0.533307501247951, 0.5267332111086164, 0.5261602742331368, 0.5263585874012539, 0.5223172221864972, 0.5182185343333653, 0.5181131362915039, 0.5145496640886579, 0.5120367663247245, 0.5103855984551566, 0.5085034711020333], "val_accuracy": [0.2953333258628845, 0.38866665959358215, 0.445333331823349, 0.4860000014305115, 0.5266666412353516, 0.5619999766349792, 0.5756666660308838, 0.6019999980926514, 0.6320000290870667, 0.6610000133514404, 0.6683333516120911, 0.6803333163261414, 0.6893333196640015, 0.6923333406448364, 0.6983333230018616, 0.7026666402816772, 0.7129999995231628, 0.715666651725769, 0.7206666469573975, 0.7229999899864197, 0.7183333039283752, 0.7316666841506958, 0.7326666712760925, 0.7306666374206543, 0.7350000143051147, 0.7379999756813049, 0.7379999756813049, 0.7426666617393494, 0.7426666617393494, 0.746999979019165, 0.750333309173584, 0.7480000257492065, 0.7493333220481873, 0.7516666650772095, 0.7546666860580444, 0.7526666522026062, 0.7580000162124634, 0.7566666603088379, 0.7609999775886536, 0.7566666603088379, 0.7646666765213013, 0.7620000243186951, 0.7713333368301392, 0.7639999985694885, 0.765333354473114, 0.7693333625793457, 0.7616666555404663, 0.7736666798591614, 0.7703333497047424, 0.7703333497047424, 0.7770000100135803, 0.7799999713897705, 0.7760000228881836, 0.7773333191871643, 0.7770000100135803, 0.7789999842643738, 0.778333306312561]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [0, 1, 1, 2, 0, 3, 3, 1, 2, 2, 1, 2, 0, 3, 3, 2, 3, 2], [50], [1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 1, 1], [4, 4, 3, 6, 3], [3, 4, 4, 1, 3, 4], [8], [0], [1], [], [3], [], [0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7], [1, 0, 0, 3], [28, 57]], "fitness": -0.10485713928937912, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 9, 5, 4, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.pow(grad, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.math.negative(tf.math.square(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3017031894840536, 2.3025790336912713, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09668471664190292, 0.10117553919553757, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973642144884382, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10599999874830246, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 0, 0], [0, 1, 1], [9, 7, 7, 8], [3, 4], [8], [1, 1, 1], [1], [8], [5], [], [0, 0, 0, 0, 1, 1, 0, 1, 1], [6, 9, 5, 5, 7], [1, 1, 1, 0], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 5, 4, 1, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.square(tf.math.square(alpha)))", "other_info": {"loss": [395751096.4808384, 453551283.40457004, 453552321.28912956, 453553347.7574957, 453554341.9257694, 453555354.58988243], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [387949604.5714286, 387950491.4285714, 387951360.0, 387952265.14285713, 387953124.5714286, 387953965.71428573], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 0, 0], [0, 1, 1], [4], [3, 4], [8], [0], [1], [], [5], [], [1, 0, 1, 0, 1, 1, 0, 1, 1], [6, 3, 0, 5, 7], [1, 0, 0, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07845727354288101, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [1, 3, 5, 0, 7, 3], [2, 2, 1, 1], [50], [1, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 1, 0, 1, 1, 1, 0], [6, 7, 1, 1, 9], [5, 0, 4, 5], [8, 31], [0], [1], [], [5], [], [0, 1, 1, 1, 1, 1, 0, 1, 1], [3, 1, 0, 5, 7, 9, 5, 9], [2, 0, 2, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))))), grad)), tf.math.add(beta, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08849557489156723, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [3, 1, 1, 2, 0, 3, 3, 1, 2, 2, 1, 2, 0, 3, 3, 2, 3, 2], [50], [1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1], [2, 9, 6], [0, 0, 4, 5], [8, 34, 84], [0], [1], [], [2], [], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [4, 2, 0, 5, 1, 4], [2, 2, 2, 3, 2], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 3, 1, 1, 0, 1, 0, 11, 6, 5, 0], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.add(tf.math.negative(tf.math.square(tf.math.subtract(beta, tf.math.pow(beta, beta)))), sigma), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1], [2, 8, 8, 8, 6, 2, 5], [3, 4, 0, 2], [8], [0, 0, 1, 1], [0, 0], [7, 8], [5], [], [0, 1, 0, 1, 1, 1, 0, 1, 1], [6, 3, 0, 5, 7], [1, 0, 0, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 7, 4, 1, 4, 2, 2, 0, 0, 5, 2, 3, 2], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.sqrt(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.square(grad)), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.sqrt(sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.math.multiply(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [5.083326099123697e+21, 840.3923112826183, 1525.4042798486826, 2210.6287225399037, 2895.638760553737, 3580.4534300226087], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [478.4798583984375, 1066.0677664620537, 1653.8395298549108, 2241.4230608258927, 2828.8214285714284, 3416.4050641741073], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [1, 3, 5, 0, 7, 3], [2, 1, 1, 2, 0, 3, 3, 1, 2, 2, 1, 2, 0, 3, 3, 2, 3, 2], [50], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0], [6, 7, 6, 3, 4, 9], [3, 4, 4, 1, 3, 4], [8], [1], [0], [1], [5], [], [0, 1, 1, 0, 1, 1, 0, 1, 1], [7, 2, 0, 5, 7], [2, 0, 0, 3], [14, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.math.add(beta, grad), alpha), grad), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [3, 1, 1, 2, 0, 3, 3, 1, 2, 2, 1, 2, 0, 3, 3, 2, 3, 2], [50], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 1], [2], [5, 4], [8], [0], [0], [9], [], [9], [0, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 0, 5, 7], [2, 0, 2, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.302828505621484, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09945846349000931, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 1], [0, 1, 0, 5], [3, 4, 0, 5, 1, 2], [8], [0, 0], [1], [], [6], [], [1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 0, 7, 5, 7], [1, 0, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.square(grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07832518965005875, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [1, 3, 5, 0, 7, 3], [0, 1, 1, 2, 0, 3, 3, 1, 2, 2, 1, 2, 0, 3, 3, 2, 3, 2], [50], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 1], [2, 7, 7], [1, 4, 0, 5, 1, 2], [88, 65, 28], [1], [], [], [], [], [0, 0, 1, 1, 0, 1, 0, 1, 1], [6, 4, 5, 5, 7], [2, 0, 2, 3], [21, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.pow(beta, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), tf.math.square(beta))", "other_info": {"loss": [2.302828505621484, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09945846349000931, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [1, 3, 5, 0, 7, 3], [3, 2, 1, 1], [50], [1, 0, 0], [0, 1, 1], [0, 4, 3, 6, 3], [3, 4], [8], [1], [1], [], [5], [38], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [6, 2, 0, 5, 7, 2], [1, 2, 0, 3, 1], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 11, 6, 5, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.math.square(alpha)), tf.math.add(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), sigma)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [1, 3, 5, 0, 7, 3], [2, 2, 1, 1], [50], [1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1], [2, 9], [3, 4, 0, 5, 1, 2], [8], [1], [1], [], [3], [], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [9, 2, 0, 5, 7, 4], [2, 1, 2, 3, 2], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07845727354288101, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [0, 1, 1, 2, 0, 3, 3, 1, 2, 2, 1, 2, 0, 3, 3, 2, 3, 2], [50], [1, 0, 0], [1, 0, 1, 1, 1, 0, 1], [2], [1, 4, 0, 5, 1, 2], [8], [0], [1], [], [3], [], [0, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 0, 5, 7], [1, 0, 0, 3], [92, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 2, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [9047686418.456024, 1.1701415695136254e+17, 3.3838294048169434e+24, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.1018359512090683, 0.09840179979801178, 0.09945846349000931, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 3, 5, 0, 7, 3], [2, 2, 1, 1], [50], [1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1], [9, 7, 7, 8], [4, 4], [92, 65, 34], [0], [1], [1], [2], [], [1, 1, 0, 0, 1, 0, 0, 1, 1], [4, 2, 0, 5, 7], [2, 0, 2, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [51688501389.82227, 7756486916505.816, 132196473044966.03, 942878675533473.4, 4119856335776949.5, 1.3555243679081144e+16], "accuracy": [0.09879804402589798, 0.09866596013307571, 0.09972262382507324, 0.09774138033390045, 0.09893012791872025, 0.10249637067317963], "val_loss": [436723281334.8571, 23543180202569.145, 252699410057508.56, 1377723272995986.2, 5160286781851941.0, 1.5221568721537316e+16], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [1, 3, 5, 0, 7, 3], [2, 1, 1, 2, 0, 3, 3, 1, 2, 2, 1, 2, 0, 3, 3, 2, 3, 2], [50], [1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1], [2, 2, 7, 4, 5, 7, 1], [0, 0, 0, 1, 0, 2, 1], [8, 29, 84, 3], [1], [1], [1], [], [], [0, 0, 1, 0, 1, 1, 0, 1, 1], [6, 3, 0, 5, 7, 9, 5, 9], [0, 3, 2, 3], [14, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 3, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), tf.math.negative(sigma)), beta)", "other_info": {"loss": [2.303334857651964, 2.302055466239636, 2.302980478019951, 2.3026561235093546, 2.3032309451611477, 2.3028665497444405], "accuracy": [0.09219389408826828, 0.09259014576673508, 0.09615638852119446, 0.09008057415485382, 0.08308017253875732, 0.09060890227556229], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 1, 1, 2, 0, 3, 3, 1, 2, 2, 1, 2, 0, 3, 3, 2, 3, 2], [50], [1, 0, 0], [0, 1, 1], [2], [3, 4], [8, 30, 48, 3], [1], [1], [], [], [], [0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7, 9, 5, 9], [2, 3, 2, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 9, 6, 3, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.math.square(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), sigma), beta)", "other_info": {"loss": [2.303334857651964, 2.302055466239636, 2.302980478019951, 2.3026561235093546, 2.3032309451611477, 2.3028665497444405], "accuracy": [0.09219389408826828, 0.09259014576673508, 0.09615638852119446, 0.09008057415485382, 0.08308017253875732, 0.09060890227556229], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 1, 1, 2, 0, 3, 3, 1, 2, 2, 1, 2, 0, 3, 3, 2, 3, 2], [50], [1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1], [9, 7, 7, 8], [3, 4, 0, 5, 1, 2], [8], [1], [1], [], [5], [], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [6, 3, 5, 5, 5, 1], [1, 1, 1, 0, 0], [45, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 10, 6, 4, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.square(tf.math.square(alpha)), tf.math.square(tf.math.subtract(alpha, alpha))), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303334857651964, 2.302055466239636, 2.302980478019951, 2.3026561235093546, 2.3032309451611477, 2.3028665497444405], "accuracy": [0.09219389408826828, 0.09259014576673508, 0.09615638852119446, 0.09008057415485382, 0.08308017253875732, 0.09060890227556229], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 0, 0], [0, 1, 1], [2], [3, 4], [8], [0, 0, 1, 1], [0, 0], [2, 0], [5], [], [0, 0, 0, 0, 1, 1, 0, 1, 1], [6, 3, 0, 5, 7], [2, 0, 0, 3], [28, 57]], "fitness": -0.0357142873108387, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 4, 2, 2, 0, 0, 9, 5, 4, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.negative(sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.math.square(beta)), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3033668308714046, 2.3020982026833394, 2.3029881087056148, 2.302695984507218, 2.3033913609657493, 2.3036713813667866, 2.302549980823878, 2.3043162687626877, 2.305465705138723, 2.3053667865582366, 2.3066469422578337, 2.309386727202444, 2.306778725411331, 2.311878942117526, 2.3157976064164294, 2.3178572041593792, 2.3221512325467244, 2.3250736835657597, 2.3326574650422978, 2.34054049679065, 2.3492493882013616, 2.3674665745050048, 2.3856036454269898, 2.430163398032742, 2.4790357925227102, 2.5667270574870757], "accuracy": [0.09192973375320435, 0.09325055778026581, 0.09430722147226334, 0.09206181764602661, 0.08149518072605133, 0.09113723784685135, 0.09536388516426086, 0.08770307898521423, 0.09232597798109055, 0.09800554811954498, 0.09919429570436478, 0.10091137140989304, 0.10896842926740646, 0.09536388516426086, 0.10077928751707077, 0.10011887550354004, 0.1002509593963623, 0.10077928751707077, 0.09655263274908066, 0.10368511080741882, 0.10302469879388809, 0.10170386731624603, 0.10077928751707077, 0.09826971590518951, 0.09998679161071777, 0.09760929644107819], "val_loss": [1.9712714467729842, 1.9711663382393974, 1.9710852759225028, 1.971019676753453, 1.970926080431257, 1.9708483559744698, 1.9708685193743025, 1.970954486301967, 1.9712504659380232, 1.971534252166748, 1.9718923568725586, 1.972379548209054, 1.973020281110491, 1.9739772932870048, 1.9750141416277205, 1.976330007825579, 1.9775308200291224, 1.9792610577174596, 1.9812682696751185, 1.9840337208339147, 1.9878394944327218, 1.994121483394078, 2.003384590148926, 2.0165416172572543, 2.0416849681309293, 2.0893350328717912], "val_accuracy": [0.03999999910593033, 0.04066666588187218, 0.0430000014603138, 0.04699999839067459, 0.04933333396911621, 0.058666665107011795, 0.06433333456516266, 0.07100000232458115, 0.0793333351612091, 0.08166666328907013, 0.08699999749660492, 0.08900000154972076, 0.09466666728258133, 0.09966666996479034, 0.10199999809265137, 0.10599999874830246, 0.10966666787862778, 0.11500000208616257, 0.11800000071525574, 0.11933333426713943, 0.12033333629369736, 0.08799999952316284, 0.026000000536441803, 0.01666666753590107, 0.018333332613110542, 0.054666668176651]}}]