[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [2, 3, 1, 0, 6, 3, 1, 9], [0, 2, 3, 3, 0, 2, 2], [57, 56, 47], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.8242856860160828, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 2, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1812488305302598, 2.057945774593814, 1.8887673419905282, 1.3337283115250922, 1.027934283848688, 0.8956573769290764, 0.7701220480662925, 0.7090271859672233, 0.653478115808852, 0.6531938314831504, 0.6766735063709556, 0.6113857852705654, 0.6386922956961588, 0.5826540978482969, 0.5506765461160112, 0.543565879928091, 0.5445027472304945, 0.520164244021596, 0.5264942503608434, 0.5199662106400231, 0.48144148814679766, 0.49271329338713377, 0.5051143159207856, 0.4840024343854511, 0.46832624736746714, 0.47270893173179357, 0.4454023759276277, 0.4362325862595245, 0.4438398295366186, 0.4365621925998499, 0.4301415163693474], "accuracy": [0.24739135801792145, 0.32624489068984985, 0.37604016065597534, 0.55791836977005, 0.6404702067375183, 0.6668868064880371, 0.7123233675956726, 0.7234182953834534, 0.748778223991394, 0.7537974119186401, 0.7420420050621033, 0.7691190242767334, 0.7600052952766418, 0.7841764688491821, 0.7935543656349182, 0.7967243194580078, 0.7969884872436523, 0.8061022162437439, 0.802271842956543, 0.8057059645652771, 0.8219521641731262, 0.8152159452438354, 0.8041210174560547, 0.8211596608161926, 0.8232730031013489, 0.826310932636261, 0.8350284099578857, 0.8393871188163757, 0.8313300609588623, 0.8374059200286865, 0.837141752243042], "val_loss": [1.9156366075788225, 1.942547048841204, 0.9266960961478097, 0.796930057661874, 0.6687253373009818, 0.6413877350943429, 0.5554992812020438, 0.531999043055943, 0.6255490268979754, 0.5097032274518695, 0.4791465146200998, 0.4819010155541556, 0.4598780018942697, 0.47397914954594206, 0.43709325790405273, 0.4739296095711844, 0.43973892075674875, 0.4328786049570356, 0.43776157924107145, 0.413110545703343, 0.4190271667071751, 0.43803259304591585, 0.44246883051736013, 0.38838800362178255, 0.438263007572719, 0.39056083985737394, 0.40292538915361675, 0.39959785767963957, 0.3880577172551836, 0.371002869946616, 0.40950807503291536], "val_accuracy": [0.19966666400432587, 0.2966666519641876, 0.628333330154419, 0.6850000023841858, 0.7013333439826965, 0.7213333249092102, 0.7553333044052124, 0.7599999904632568, 0.7103333473205566, 0.7680000066757202, 0.7903333306312561, 0.796999990940094, 0.800000011920929, 0.8003333210945129, 0.8036666512489319, 0.777999997138977, 0.7953333258628845, 0.8076666593551636, 0.7906666398048401, 0.8140000104904175, 0.812666654586792, 0.7956666946411133, 0.7903333306312561, 0.8293333053588867, 0.8050000071525574, 0.8353333473205566, 0.8209999799728394, 0.8296666741371155, 0.8343333601951599, 0.8303333520889282, 0.8199999928474426]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [2, 2, 2, 0, 6, 2, 1, 9], [0, 2, 3, 3, 0, 2, 2], [57, 49, 47], [1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.819428563117981, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 8, 6, 3, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, grad))), tf.math.negative(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), beta)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.181182789465597, 2.054689971337213, 1.866257648017066, 1.327382616189965, 1.0652142638433344, 0.9162376616388783, 0.7737442937430736, 0.7040454581854224, 0.6929257037365331, 0.6750338343565632, 0.6314767575645018, 0.6275468191466296, 0.6103160564831109, 0.598429741750477, 0.559929750543843, 0.5622471476574269, 0.5669135680177886, 0.5285557888801529, 0.5406040402766248, 0.5200333182271036, 0.4822954090319258, 0.5148972230911129, 0.5087770833441326, 0.4851722437487365, 0.4732181123258447, 0.4780610352498728, 0.45281113423392316, 0.429099609653916, 0.4558066370236545, 0.440370716379933, 0.4223153161933283, 0.4170671171358532, 0.405317509942728, 0.4168762698928993, 0.41196056514714674, 0.4348108887577951, 0.38451079734721755], "accuracy": [0.24739135801792145, 0.3269053101539612, 0.3910976052284241, 0.5477479696273804, 0.6362435817718506, 0.6617355942726135, 0.709021270275116, 0.7306828498840332, 0.7306828498840332, 0.7387399077415466, 0.7582882046699524, 0.7613261342048645, 0.7684586048126221, 0.7732135653495789, 0.7862898111343384, 0.7835160493850708, 0.7835160493850708, 0.8016114234924316, 0.7943468689918518, 0.7989697456359863, 0.817461371421814, 0.8050455451011658, 0.8083476424217224, 0.8197067975997925, 0.8252542614936829, 0.8227446675300598, 0.8334434032440186, 0.8455950617790222, 0.8305375576019287, 0.8338396549224854, 0.8441421389579773, 0.8455950617790222, 0.8486329317092896, 0.8457271456718445, 0.8453308939933777, 0.8376700282096863, 0.8544445633888245], "val_loss": [1.9153097697666712, 1.9372424398149763, 1.0062278679439, 1.249215500695365, 0.7523216179439, 0.69080308505467, 0.5586755786623273, 0.5649565969194684, 0.529498747416905, 0.5165725946426392, 0.49804721559797016, 0.4942140919821603, 0.465261663709368, 0.5051431144986834, 0.4375781842640468, 0.4673018625804356, 0.4519895485469273, 0.45163231236594065, 0.4545961448124477, 0.41102015120642527, 0.43017211130687166, 0.4256551095417568, 0.4446981634412493, 0.3949042728969029, 0.4234115651675633, 0.4200271793774196, 0.3954510433333261, 0.38027932814189364, 0.38143653529030935, 0.385672390460968, 0.40141559498650686, 0.3665434292384556, 0.417897241456168, 0.3551067965371268, 0.45304346084594727, 0.36018501009259907, 0.35888050283704487], "val_accuracy": [0.20000000298023224, 0.30300000309944153, 0.6156666874885559, 0.6033333539962769, 0.6886666417121887, 0.7089999914169312, 0.7566666603088379, 0.7596666812896729, 0.7680000066757202, 0.7766666412353516, 0.7723333239555359, 0.7916666865348816, 0.7916666865348816, 0.7749999761581421, 0.8040000200271606, 0.7850000262260437, 0.7919999957084656, 0.7926666736602783, 0.7806666493415833, 0.8176666498184204, 0.7913333177566528, 0.8163333535194397, 0.796999990940094, 0.828000009059906, 0.8149999976158142, 0.8186666369438171, 0.8243333101272583, 0.8366666436195374, 0.843999981880188, 0.8326666951179504, 0.831333339214325, 0.8496666550636292, 0.8019999861717224, 0.8416666388511658, 0.7943333387374878, 0.8389999866485596, 0.8386666774749756]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [9, 2, 2, 0, 6, 2, 1, 9], [0, 2, 3, 3, 0, 2, 2], [59, 49, 47], [1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.8082857131958008, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.181244105206914, 2.053443091168553, 1.8797390740608353, 1.3000233786973057, 1.0754315452316827, 0.8496228055616396, 0.7974875636104548, 0.6945117134081767, 0.6711906737592226, 0.6401646997257545, 0.6196409022299495, 0.6171823542241832, 0.6136524552257226, 0.5787741882516692, 0.5414001850278197, 0.5428601093988817, 0.5392257597672863, 0.5195105034189296, 0.5181388030545334, 0.5117516718945562, 0.48547530232120134, 0.5041546679018606, 0.492134082039444, 0.4773535726210854, 0.462954592034014, 0.47557618768853505, 0.4468747011666694, 0.4243953407338235, 0.44920743282885833, 0.426085853022418, 0.41455500915286375, 0.44001483793240403, 0.4118011068587668, 0.4129717561901364], "accuracy": [0.24739135801792145, 0.3275656998157501, 0.38502180576324463, 0.5521067380905151, 0.6133931875228882, 0.6845859289169312, 0.7045304179191589, 0.7309470176696777, 0.743891179561615, 0.7524765729904175, 0.7656848430633545, 0.7692511081695557, 0.767930269241333, 0.7794214487075806, 0.7993659973144531, 0.7968564033508301, 0.7992339134216309, 0.8029322624206543, 0.8070268034934998, 0.8094043135643005, 0.8185180425643921, 0.8063663840293884, 0.8131026029586792, 0.8219521641731262, 0.8276317715644836, 0.8276317715644836, 0.8348963260650635, 0.8470479249954224, 0.8300092220306396, 0.839519202709198, 0.847840428352356, 0.832650899887085, 0.8471800088882446, 0.8461233377456665], "val_loss": [1.9155479158673967, 1.9491026742117745, 0.8539858715874808, 1.0592541013445174, 0.6885549511228289, 0.6141396079744611, 0.5527608735220773, 0.5387008360454014, 0.5627082245690482, 0.5172453948429653, 0.4648423876081194, 0.49763315064566477, 0.47602011476244244, 0.4616779940468924, 0.4356118525777544, 0.5031607661928449, 0.43149283954075407, 0.44562179701668875, 0.4345592600958688, 0.41168539013181416, 0.41805334602083477, 0.4153935398374285, 0.43219834566116333, 0.3917427659034729, 0.453811628477914, 0.39586920397622244, 0.39064485686165945, 0.3803106801850455, 0.37338573592049734, 0.3805073244231088, 0.3836806927408491, 0.38356973443712505, 0.38610592910221647, 0.4299877030508859], "val_accuracy": [0.19966666400432587, 0.31299999356269836, 0.6606666445732117, 0.5096666812896729, 0.6923333406448364, 0.7400000095367432, 0.7613333463668823, 0.75, 0.753000020980835, 0.7556666731834412, 0.7943333387374878, 0.7816666960716248, 0.7793333530426025, 0.8036666512489319, 0.8069999814033508, 0.7676666378974915, 0.8013333082199097, 0.7976666688919067, 0.7976666688919067, 0.8149999976158142, 0.79666668176651, 0.8193333148956299, 0.8013333082199097, 0.8246666789054871, 0.7973333597183228, 0.8299999833106995, 0.8186666369438171, 0.8389999866485596, 0.8426666855812073, 0.8376666903495789, 0.8353333473205566, 0.8346666693687439, 0.8253333568572998, 0.7926666736602783]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1], [7, 9, 2, 0, 6, 2, 1, 9], [0, 2, 3, 3, 0, 2, 2], [57, 49, 0], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.8057143092155457, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 2, 2, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1811986524100475, 2.049508896360245, 1.8299950098774105, 1.3116804118862462, 1.0000368148391556, 0.855642489958055, 0.7703821114293337, 0.6946138924674399, 0.67577914178584, 0.6232791535291595, 0.6890742619984563, 0.5976629720198999, 0.6243298218754446, 0.5770062486792537, 0.5496172093286994, 0.5318119209424584, 0.5517836060459115, 0.5194276358394448, 0.5202121357907709, 0.5253776588995444, 0.47863340294356393, 0.49248665940051445, 0.5001490621196123, 0.47751437539138564, 0.45658941814345516, 0.4603346638581252, 0.45763505665601883, 0.43591227887754097, 0.4527872593891603, 0.4368985770377249, 0.41022639579823966, 0.42886606448078674, 0.4089496730341021, 0.4013359201952703, 0.4243191789839136, 0.4088067987363226], "accuracy": [0.24725927412509918, 0.3287544548511505, 0.4021925628185272, 0.5495971441268921, 0.631488561630249, 0.6847180128097534, 0.7123233675956726, 0.7386078238487244, 0.7436270117759705, 0.7660810947418213, 0.7343811988830566, 0.7721568942070007, 0.7618544697761536, 0.7816668748855591, 0.7911768555641174, 0.8035926818847656, 0.7950072884559631, 0.8025360107421875, 0.8054417967796326, 0.7972526550292969, 0.8228767514228821, 0.8124422430992126, 0.8103289008140564, 0.8210275769233704, 0.82683926820755, 0.8347642421722412, 0.8247259259223938, 0.8399154543876648, 0.8345000743865967, 0.8387266993522644, 0.8521991968154907, 0.8372738361358643, 0.848368763923645, 0.8487650156021118, 0.8429533839225769, 0.8512746095657349], "val_loss": [1.9154054096766882, 1.9516291618347168, 1.48149459702628, 0.8581399236406598, 0.6870824268886021, 0.6315787349428449, 0.5814436674118042, 0.5251058680670602, 0.6165908234460014, 0.5266457796096802, 0.47465431690216064, 0.4825946262904576, 0.4674759932926723, 0.4638479948043823, 0.4319703153201512, 0.4552961587905884, 0.4407996279852731, 0.42639291286468506, 0.4304737533841814, 0.4073511872972761, 0.4064652579171317, 0.410939165524074, 0.4387535537992205, 0.38826935631888254, 0.39689273493630545, 0.41692341225487844, 0.3931162527629307, 0.43783068656921387, 0.3877554110118321, 0.37616896629333496, 0.38102178062711445, 0.3719508477619716, 0.3999808260372707, 0.36100069114140104, 0.4288843018668039, 0.39611763613564627], "val_accuracy": [0.20033332705497742, 0.2996666729450226, 0.49533334374427795, 0.6129999756813049, 0.7023333311080933, 0.7306666374206543, 0.7289999723434448, 0.7726666927337646, 0.7326666712760925, 0.746999979019165, 0.7886666655540466, 0.7923333048820496, 0.7973333597183228, 0.7983333468437195, 0.8069999814033508, 0.7953333258628845, 0.8013333082199097, 0.8113333582878113, 0.7916666865348816, 0.8206666707992554, 0.8253333568572998, 0.8193333148956299, 0.7926666736602783, 0.8303333520889282, 0.8233333230018616, 0.8149999976158142, 0.8213333487510681, 0.8116666674613953, 0.8386666774749756, 0.8336666822433472, 0.8429999947547913, 0.840666651725769, 0.8119999766349792, 0.8416666388511658, 0.8029999732971191, 0.8293333053588867]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [7, 0, 2, 0, 6, 2, 1, 9], [0, 2, 3, 3, 0, 2, 2], [57, 53, 75], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [50, 57]], "fitness": -0.8042857050895691, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 2, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2652588829215112, 1.9123429456139442, 2.046800798916971, 1.904640535699882, 1.3712837594831782, 1.0959582314940335, 0.9469998142565278, 0.8828047850128524, 0.8025942456295556, 0.7408213099436973, 0.6806250590500877, 0.6699134955678901, 0.6600949062789042, 0.6271907721433688, 0.6008393010679347, 0.6167121691285595, 0.5533157385902445, 0.5414711639330356, 0.567143034287857, 0.5469611658632417, 0.5143407320129149, 0.5205232248629372, 0.532698795945338, 0.5059788705193844, 0.5057854828597091, 0.4784813187676902, 0.4924271042675091, 0.4541052727454595, 0.4561172527226758, 0.46021139015925955, 0.4342978052561703, 0.43243925151981144, 0.4262188176366521, 0.41218723639946225, 0.41994152709855503, 0.43973037596974535, 0.40029106750196675, 0.39024390613067544, 0.385763901855495, 0.38481242752597944, 0.3961524225386646, 0.359826931025547, 0.3684910851628033, 0.36170374924764026, 0.3704459791437919, 0.3439008466689783], "accuracy": [0.26284506916999817, 0.3781534731388092, 0.3147536516189575, 0.3209615647792816, 0.5061418414115906, 0.6152423620223999, 0.6419231295585632, 0.6629242897033691, 0.6976621150970459, 0.71100252866745, 0.7363624572753906, 0.7433628439903259, 0.7433628439903259, 0.7568352818489075, 0.7697794437408447, 0.7627789974212646, 0.7923656105995178, 0.7959318161010742, 0.7820631265640259, 0.7905164361000061, 0.805177628993988, 0.8038568496704102, 0.7938185334205627, 0.81112140417099, 0.8161405324935913, 0.8234050869941711, 0.8214238286018372, 0.832650899887085, 0.8293488025665283, 0.8294808864593506, 0.8433496356010437, 0.8426892161369324, 0.8448025584220886, 0.8459912538528442, 0.8432175517082214, 0.8358209133148193, 0.8512746095657349, 0.8535200357437134, 0.8570862412452698, 0.8576145768165588, 0.8470479249954224, 0.8638224601745605, 0.8652753829956055, 0.8642187118530273, 0.860652506351471, 0.8693699836730957], "val_loss": [1.6050506659916468, 1.7887516702924455, 1.9113038608006068, 1.1330513954162598, 1.2197697503226144, 0.72578535761152, 0.6784742900303432, 0.7275102308818272, 0.6110623564038958, 0.5422016382217407, 0.5386872291564941, 0.5051803077970233, 0.5703096389770508, 0.5182732173374721, 0.48514883858816965, 0.44955752577100483, 0.46028522082737516, 0.5205637386866978, 0.47177064418792725, 0.42938071489334106, 0.4245712331363133, 0.47363882405417307, 0.46916403089250835, 0.42786484956741333, 0.39549362659454346, 0.5066313743591309, 0.4099568724632263, 0.40880812065941946, 0.38316066776003155, 0.3663334846496582, 0.3826955556869507, 0.3752202306474958, 0.366497848715101, 0.3964210408074515, 0.44165594237191336, 0.3582795262336731, 0.3453346150262015, 0.37018496649605886, 0.3524254986218044, 0.3659214377403259, 0.3334528037479946, 0.3424204077039446, 0.3628552556037903, 0.3706077592713492, 0.364439640726362, 0.34338611364364624], "val_accuracy": [0.41333332657814026, 0.27266666293144226, 0.20266667008399963, 0.5413333177566528, 0.6430000066757202, 0.6880000233650208, 0.6816666722297668, 0.7170000076293945, 0.7310000061988831, 0.7409999966621399, 0.7556666731834412, 0.7663333415985107, 0.7509999871253967, 0.7726666927337646, 0.7829999923706055, 0.8023333549499512, 0.7986666560173035, 0.7616666555404663, 0.7733333110809326, 0.8106666803359985, 0.8186666369438171, 0.7766666412353516, 0.7856666445732117, 0.8106666803359985, 0.8270000219345093, 0.7839999794960022, 0.8206666707992554, 0.8213333487510681, 0.8353333473205566, 0.843666672706604, 0.8336666822433472, 0.8396666646003723, 0.8450000286102295, 0.8209999799728394, 0.8086666464805603, 0.843999981880188, 0.8460000157356262, 0.8423333168029785, 0.8460000157356262, 0.8423333168029785, 0.8603333234786987, 0.8550000190734863, 0.8446666598320007, 0.8296666741371155, 0.8339999914169312, 0.8463333249092102]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [9, 2, 2, 0, 6, 2, 1, 9], [0, 2, 3, 3, 0, 2, 2], [59, 49, 47], [1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.8011428713798523, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.18138159787288, 2.045493463641066, 1.8540258716834677, 1.3735467606941156, 0.9856193510690275, 0.8344442427292192, 0.7651645220454972, 0.7035367195915788, 0.6939718514826508, 0.6345474225985707, 0.6309450391009341, 0.6057170522668027, 0.6077624045075238, 0.5922816896781851, 0.5529797707786807, 0.5556398044251621, 0.5411972311808685, 0.5301672925865331, 0.5298589451390802, 0.5175954442470774, 0.5016586194106412, 0.4871824288987024, 0.5025372312147982, 0.4778448037892726, 0.4638226697623155, 0.4675391235757482, 0.4514167295108776, 0.4192708447593283, 0.4402268166515916, 0.4287155049470091, 0.42699066158755583, 0.44669850410928247, 0.4068573098755185], "accuracy": [0.24739135801792145, 0.33007529377937317, 0.3975696861743927, 0.540219247341156, 0.6339981555938721, 0.6852463483810425, 0.7144366502761841, 0.7314753532409668, 0.7337207794189453, 0.7588165402412415, 0.7662131786346436, 0.7692511081695557, 0.7683265209197998, 0.7717606425285339, 0.7951393723487854, 0.7845727205276489, 0.7956677079200745, 0.7968564033508301, 0.7981772422790527, 0.8045172095298767, 0.8080834746360779, 0.8164047002792358, 0.8080834746360779, 0.8210275769233704, 0.8255184292793274, 0.8298771381378174, 0.8348963260650635, 0.8495575189590454, 0.8341038227081299, 0.8404437899589539, 0.8411042094230652, 0.8337075710296631, 0.8496896028518677], "val_loss": [1.9158613341195243, 1.9460690362112862, 1.3104469435555595, 0.8284008162362235, 0.6917405809674945, 0.6227866411209106, 0.5595984629222325, 0.5837859255926949, 0.5175851583480835, 0.5132772922515869, 0.5781996590750558, 0.5251800332750592, 0.46942428180149626, 0.4595130852290562, 0.43457123211451937, 0.46024480887821745, 0.4490029641560146, 0.4545736994062151, 0.4574963535581316, 0.40188272510256084, 0.4068303108215332, 0.4314101423536028, 0.43744070189339773, 0.3914072258131845, 0.40566024609974455, 0.40421996797834125, 0.39153357063020977, 0.3774005685533796, 0.37854390484946115, 0.38777956792286467, 0.43219441175460815, 0.37719766582761494, 0.3970982772963388], "val_accuracy": [0.19833333790302277, 0.3076666593551636, 0.5210000276565552, 0.6726666688919067, 0.7039999961853027, 0.7210000157356262, 0.7419999837875366, 0.7273333072662354, 0.7736666798591614, 0.7716666460037231, 0.7369999885559082, 0.7643333077430725, 0.7889999747276306, 0.8029999732971191, 0.8050000071525574, 0.7906666398048401, 0.7946666479110718, 0.7850000262260437, 0.7870000004768372, 0.8196666836738586, 0.8203333616256714, 0.8026666641235352, 0.7983333468437195, 0.8270000219345093, 0.824999988079071, 0.8330000042915344, 0.8226666450500488, 0.8399999737739563, 0.8389999866485596, 0.8366666436195374, 0.793666660785675, 0.8396666646003723, 0.8216666579246521]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [9, 2, 2, 0, 6, 2, 1, 9], [0, 2, 3, 3, 0, 2, 2], [57, 49, 47], [0, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [5, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 5, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.5519999861717224, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 2, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.8776635857558035, 2.2683237640061917, 2.207672350851615, 2.2754971064974554, 2.2872274132326624, 2.2606959138264857, 1.9766588097376956, 2.333905723856708, 2.30539075431728, 2.304470390644308, 2.3038444213265077, 2.3038173884511575], "accuracy": [0.20155857503414154, 0.14859332144260406, 0.19719983637332916, 0.1566503793001175, 0.1418570876121521, 0.18412363529205322, 0.3011491298675537, 0.15202747285366058, 0.10077928751707077, 0.09760929644107819, 0.09774138033390045, 0.09377889335155487], "val_loss": [1.7454194341387068, 1.9624895368303572, 1.8623192650931222, 1.936943531036377, 1.97227566582816, 1.9608488082885742, 1.8259577069963728, 1.9749530383518763, 1.9741544042314803, 1.973705427987235, 1.9737578119550432, 1.9737352643694197], "val_accuracy": [0.31066668033599854, 0.11566666513681412, 0.3606666624546051, 0.28166666626930237, 0.10000000149011612, 0.10766666382551193, 0.5526666641235352, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.09799999743700027, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [7, 1, 2, 0, 6, 2, 1, 9], [2, 2, 3, 3, 0, 2, 2], [81, 49, 47], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [56, 57]], "fitness": -0.2557142972946167, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 8, 6, 2, 2, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, beta), grad), tf.math.negative(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), beta))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.5514732193181606, 2.292511071511358, 2.2205741071052336, 2.3244816059638573, 2.1927299600912833, 2.24650869944533, 2.3064806414097685], "accuracy": [0.18755778670310974, 0.12455421686172485, 0.18412363529205322, 0.19297318160533905, 0.20723815262317657, 0.21238937973976135, 0.10381719470024109], "val_loss": [1.975330148424421, 1.842515127999442, 1.9729723930358887, 1.9759631838117326, 1.80544342313494, 1.9785372870309013, 1.9748329435076033], "val_accuracy": [0.09833333641290665, 0.414000004529953, 0.09833333641290665, 0.14366666972637177, 0.19733333587646484, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [8, 8, 8, 0, 6, 2, 1, 9], [0, 2, 3, 3, 0, 2, 2], [57, 49, 47], [1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10257142782211304, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.485614682768062, 2.8914523324347945, 2.31163926014984, 2.139374272383404, 2.2370057041146545, 2.217567554916515, 2.2410291247379828, 2.328014012010358, 2.345072470761844], "accuracy": [0.23286223411560059, 0.15255580842494965, 0.13168670237064362, 0.21661603450775146, 0.21212521195411682, 0.21054022014141083, 0.2218993455171585, 0.09919429570436478, 0.09893012791872025], "val_loss": [1.8638807705470495, 1.996396882193429, 1.8060528210231237, 1.4650537967681885, 1.6981324808938163, 1.6597867693219865, 1.9941812923976354, 1.9979329109191895, 1.9992591994149345], "val_accuracy": [0.29499998688697815, 0.10566666722297668, 0.24199999868869781, 0.4153333306312561, 0.22633333504199982, 0.32100000977516174, 0.09799999743700027, 0.10199999809265137, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [9, 2, 2, 0, 6, 2, 1, 9], [0, 2, 3, 3, 0, 2, 2], [59, 49, 47], [1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 8, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07792893797159195, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [9, 2, 2, 0, 6, 2, 1, 9], [0, 2, 3, 3, 0, 2, 2], [57, 49, 71], [1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [7, 2, 2, 0, 6, 2, 1, 9], [0, 2, 3, 3, 0, 2, 2], [57, 49, 47], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [2, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302588575473, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09826971590518951, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [7, 2, 2, 0, 6, 2, 6, 9, 4, 6, 1], [0, 2, 3, 3, 0, 2, 2, 5, 2], [57, 49, 47], [0, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 20, 20, 11, 9, 3, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, beta)), tf.math.divide_no_nan(tf.math.add(grad, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, grad)), tf.math.add(beta, beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1245315421.73116, 23752227172.25624, 111649836889.9094, 302959653229.1829, 657480730287.7612, 1202058354873.0261], "accuracy": [0.09972262382507324, 0.10011887550354004, 0.09549596905708313, 0.10460969805717468, 0.10328886657953262, 0.10394927859306335], "val_loss": [4788429238.857142, 38296087990.85714, 129236360045.71428, 306324261156.5714, 598276121746.2858, 1033804934582.8572], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [9, 2, 2, 0, 6, 2, 1, 9], [0, 2, 3, 3, 0, 2, 2], [59, 49, 47], [1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], [1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1], [9, 2, 2, 0, 6, 2, 1, 9], [5, 2, 3, 3, 0, 2, 2], [57, 49, 47], [1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [65, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 13, 7, 6, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, sigma), sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07660810649394989, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [3, 2, 2, 0, 6, 2, 9, 9], [0, 2, 3, 0, 0, 2, 2], [57, 26, 47], [0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 4, 2, 1, 2, 3], [0, 3, 0, 1, 3, 3, 3], [56, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 14, 7, 7, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.negative(sigma)), tf.math.pow(tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, sigma), sigma)), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.19178444147109985, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [7, 2, 2, 0, 6, 2, 0, 9], [2, 2, 3, 2, 0, 3, 2], [57, 49, 47], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 9, 0, 4, 2, 1, 2, 3], [1, 2, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 8, 5, 2, 2, 1, 1, 0, 0, 2, 2, 0, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, grad))), tf.math.negative(tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [95771834.76219933, 1825415626.0678906, 8578773091.681416, 23276199273.801613, 50510673584.843216, 92344324017.5533], "accuracy": [0.09972262382507324, 0.10011887550354004, 0.09549596905708313, 0.10460969805717468, 0.10342095047235489, 0.10394927859306335], "val_loss": [368101211.4285714, 2942741211.428571, 9929427529.142857, 23533703168.0, 45960715117.71429, 79416751835.42857], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [7, 2, 2, 0, 6, 2, 1, 9], [4, 2, 3, 3, 0, 2, 2], [64, 49, 47], [1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 13, 7, 6, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(alpha), tf.math.pow(tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, sigma), sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07660810649394989, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [7, 2, 2, 0, 6, 2, 1, 9], [3, 2, 3, 3, 0, 2, 2], [57, 49, 47], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [9, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 8, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 1, 0, 1, 3, 2, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [9, 2, 2, 0, 6, 2, 1, 9], [0, 2, 3, 3, 0, 2, 2], [59, 49, 47], [1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [2, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302588575473, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09826971590518951, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}]