[{"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [7, 4, 8, 8, 8, 1, 7, 0, 3, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 0, 4], [2, 2, 2, 2, 1, 1, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [82, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7888571619987488, "mapping_values": [1, 39, 39, 25, 14, 5, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(grad))), tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(tf.math.add(tf.math.add(alpha, grad), grad), tf.math.negative(grad))))), tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.negative(alpha)), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))))))), grad))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.291342379882776, 2.264395695950739, 2.235472743096463, 2.195745548662209, 2.1413612362573553, 2.071207101366161, 1.9818503413422706, 1.8633958258412817, 1.7217866196183322, 1.5929903751980943, 1.4844110150457515, 1.3798742282817298, 1.3081120957850843, 1.2297906396789258, 1.1813366907210696, 1.1324590387723512, 1.1106395972576502, 1.068504432740071, 1.0357918509906703, 1.017795881307388, 0.9756009870075578, 0.9681492242295398, 0.9431410489096822, 0.9229294955769802, 0.9138826195747467, 0.893612564318625, 0.8746664349775525, 0.8688785537138528, 0.8606879203437011, 0.8422522888742875, 0.8363756272361704, 0.8392390325525733, 0.82631687508787, 0.809617333778411, 0.8121547143079223, 0.8089105614408478, 0.8028440380124777, 0.7909422733323638, 0.7792679424125915, 0.7829930816407153, 0.7711664209386628, 0.7635298088840474, 0.7644039627551844, 0.7555572151854337, 0.7508583923986544, 0.748365521989935, 0.731761049758237, 0.7415978356264901, 0.7370412171776615, 0.7308683017493397, 0.7306989861469951, 0.7184635888489403, 0.7225852624819877, 0.7225122662929575, 0.7119247010119162, 0.7063432565895542, 0.6957799580040199, 0.7050135824438163, 0.6996680195651838, 0.6862821621413654, 0.6904583098535383, 0.6873704935770308, 0.6809570652272455, 0.6743675467675435, 0.6870864526061271, 0.6687963277735274, 0.6752648935845783, 0.6755319673229974, 0.6735502900921075, 0.677034079343604, 0.6611029944163523], "accuracy": [0.12191256135702133, 0.18755778670310974, 0.25214633345603943, 0.3039228618144989, 0.3599260449409485, 0.3773609697818756, 0.41368380188941956, 0.44564786553382874, 0.47325319051742554, 0.4947827160358429, 0.5190860033035278, 0.5415400862693787, 0.5576542019844055, 0.5760137438774109, 0.5964865684509277, 0.6071853041648865, 0.6103553175926208, 0.6227710843086243, 0.6284506916999817, 0.6421872973442078, 0.6580372452735901, 0.6590939164161682, 0.6626601219177246, 0.6715096831321716, 0.6774534583091736, 0.6822084188461304, 0.6865671873092651, 0.6905296444892883, 0.6911900639533997, 0.6976621150970459, 0.6992471218109131, 0.6963412761688232, 0.6999075412750244, 0.7067758440971375, 0.7098137736320496, 0.7063795924186707, 0.703209638595581, 0.713908314704895, 0.7145687341690063, 0.7152291536331177, 0.7172104120254517, 0.7197200059890747, 0.7207766771316528, 0.7279091477394104, 0.7217012047767639, 0.7239466309547424, 0.7329282760620117, 0.7280412316322327, 0.7281733155250549, 0.7306828498840332, 0.7302865982055664, 0.7323999404907227, 0.7367587089538574, 0.7331924438476562, 0.739400327205658, 0.7440232634544373, 0.7428345084190369, 0.7415136694908142, 0.7446836829185486, 0.7458723783493042, 0.7437590956687927, 0.7457403540611267, 0.7408532500267029, 0.7457403540611267, 0.7427024245262146, 0.7503632307052612, 0.7497028112411499, 0.7535332441329956, 0.7519482374191284, 0.7483819723129272, 0.7516840696334839], "val_loss": [1.9467073849269323, 1.9205539567129952, 1.8884892463684082, 1.8452848025730677, 1.7845523016793388, 1.7037809576307024, 1.6012414523533411, 1.4773993832724435, 1.3422245638711112, 1.2137415409088135, 1.1055212020874023, 1.0171093600136893, 0.949688298361642, 0.8945123127528599, 0.8502824306488037, 0.8148789235523769, 0.787460446357727, 0.7634654215403965, 0.7433451754706246, 0.7243793691907611, 0.7075246572494507, 0.6940400941031319, 0.681389570236206, 0.6702804054532733, 0.6620507921491351, 0.6514543635504586, 0.643639360155378, 0.6360774721418109, 0.6280241864068168, 0.6218122925077166, 0.6172645943505424, 0.6111226592745099, 0.606289267539978, 0.599130494253976, 0.5968298060553414, 0.5921153341020856, 0.5876498052052089, 0.5825863225119454, 0.5803411517824445, 0.5757983752659389, 0.5725480488368443, 0.5690721614020211, 0.5655507871082851, 0.5643305778503418, 0.5585410084043231, 0.5554042203085763, 0.5520674160548619, 0.5501455920083183, 0.5500154495239258, 0.5458957638059344, 0.5445053066526141, 0.5413810525621686, 0.5404564993722099, 0.5390715258462089, 0.5356361865997314, 0.5327725410461426, 0.5301824808120728, 0.5279188667024884, 0.5258345603942871, 0.5258805581501552, 0.5226977893284389, 0.5206348385129657, 0.5206295592444283, 0.5178463629313877, 0.5163946662630353, 0.5160648993083409, 0.5160851648875645, 0.511851463999067, 0.5103034121649606, 0.5103909628731864, 0.5069331441606794], "val_accuracy": [0.23766666650772095, 0.3619999885559082, 0.41200000047683716, 0.43933331966400146, 0.4753333330154419, 0.5303333401679993, 0.5556666851043701, 0.5666666626930237, 0.5836666822433472, 0.6066666841506958, 0.6256666779518127, 0.6513333320617676, 0.6629999876022339, 0.6733333468437195, 0.6826666593551636, 0.6853333115577698, 0.6913333535194397, 0.6956666707992554, 0.6993333101272583, 0.7076666951179504, 0.7106666564941406, 0.7149999737739563, 0.7200000286102295, 0.7213333249092102, 0.7163333296775818, 0.7279999852180481, 0.7316666841506958, 0.7269999980926514, 0.7333333492279053, 0.7369999885559082, 0.7333333492279053, 0.7413333058357239, 0.7419999837875366, 0.7433333396911621, 0.7456666827201843, 0.746999979019165, 0.7493333220481873, 0.7509999871253967, 0.7513333559036255, 0.7540000081062317, 0.7549999952316284, 0.7566666603088379, 0.7559999823570251, 0.7546666860580444, 0.7583333253860474, 0.7643333077430725, 0.7646666765213013, 0.7606666684150696, 0.7616666555404663, 0.765666663646698, 0.7663333415985107, 0.7666666507720947, 0.7646666765213013, 0.7683333158493042, 0.7676666378974915, 0.7723333239555359, 0.7720000147819519, 0.7706666588783264, 0.7696666717529297, 0.7743333578109741, 0.7749999761581421, 0.7756666541099548, 0.7693333625793457, 0.7753333449363708, 0.7749999761581421, 0.7789999842643738, 0.7739999890327454, 0.7786666750907898, 0.7763333320617676, 0.7770000100135803, 0.7789999842643738]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 4, 8, 8, 9, 1, 7, 0, 3, 3, 2, 2, 0, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 0, 4, 5, 9, 2], [0, 2, 2, 2, 0, 1, 2, 2, 0, 0, 2, 0, 3, 0, 3, 0, 0, 1], [30, 8, 39, 25, 98, 52, 94, 1, 97, 57], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7885714173316956, "mapping_values": [1, 47, 47, 29, 18, 10, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 53, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad)), tf.math.negative(tf.math.multiply(tf.math.multiply(grad, tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.pow(tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, alpha), grad), tf.math.square(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))))))), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), tf.math.square(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), alpha)))), lambda shape,  alpha, beta, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.291342348391747, 2.2643956779693615, 2.235472738624737, 2.1957436414080496, 2.141366220594413, 2.071220938303782, 1.981868965435872, 1.8634133545981737, 1.7218182596469427, 1.5930175081046976, 1.484439641634833, 1.3798828907552065, 1.3081410811042207, 1.2298095461840737, 1.1813196818180813, 1.132449131285305, 1.1106485960868056, 1.0685077547444455, 1.0357982831120318, 1.017776958883525, 0.9756050698509338, 0.9681588505961718, 0.94317073576234, 0.922899993852208, 0.9138919045864993, 0.893644345993883, 0.8747031299224887, 0.8688816589261121, 0.8606539954047681, 0.8422625715218326, 0.8363654938639745, 0.8392273585841389, 0.8263372766059923, 0.8095922125029825, 0.8121252566469722, 0.8088279551581747, 0.802806367121195, 0.7909106369882039, 0.7792537365969319, 0.7829870965896171, 0.7711087361129677, 0.763465444622196, 0.7643945914816311, 0.7555484368958257, 0.7508824081736438, 0.7483721676677083, 0.7317185510403098, 0.7415268666881848, 0.7369978833570141, 0.7308322355306663, 0.7307132205643816, 0.7184617953403767, 0.7225899622897273, 0.722520821350535, 0.7118416009026748, 0.7064113094743374, 0.6958224501796859, 0.704978076363945, 0.6996874465304375, 0.6862479838098691, 0.6906038055472197, 0.6875563726575068, 0.680978306548124, 0.6743084713137617, 0.6870279256709578, 0.668800031575135, 0.6752493609101655, 0.6754432652431503, 0.6735950726811534, 0.6771110981887815, 0.661177921706124], "accuracy": [0.12191256135702133, 0.18755778670310974, 0.25214633345603943, 0.30405494570732117, 0.3599260449409485, 0.3774930536746979, 0.41408005356788635, 0.44564786553382874, 0.47325319051742554, 0.49465063214302063, 0.5190860033035278, 0.5414080023765564, 0.5575221180915833, 0.5760137438774109, 0.5971469879150391, 0.6070532202720642, 0.6107515692710876, 0.6229031682014465, 0.6284506916999817, 0.6421872973442078, 0.6580372452735901, 0.6593580842018127, 0.6623960137367249, 0.6709813475608826, 0.6769251227378845, 0.6826046705245972, 0.6865671873092651, 0.6905296444892883, 0.6907938122749329, 0.6975300312042236, 0.6995112895965576, 0.6964733600616455, 0.7000396251678467, 0.7065116763114929, 0.7096816897392273, 0.7062475085258484, 0.702681303024292, 0.7140403985977173, 0.7148329019546509, 0.7149649858474731, 0.7177387475967407, 0.719852089881897, 0.7210407853126526, 0.7275128960609436, 0.7217012047767639, 0.7243428826332092, 0.733060359954834, 0.7279091477394104, 0.728701651096344, 0.7310791015625, 0.7304186820983887, 0.7321357727050781, 0.7364945411682129, 0.7327961921691895, 0.7391361594200134, 0.7441553473472595, 0.7424382567405701, 0.7413815855979919, 0.7448157668113708, 0.7458723783493042, 0.7437590956687927, 0.7465327978134155, 0.7408532500267029, 0.7458723783493042, 0.7433628439903259, 0.7500990629196167, 0.7498348951339722, 0.7536653280258179, 0.750759482383728, 0.7486461400985718, 0.752212405204773], "val_loss": [1.946707316807338, 1.9205543654305595, 1.8884896550859724, 1.8452867099217005, 1.7845655850001745, 1.7037991796221053, 1.6012601171221053, 1.4774387904575892, 1.3422766753605433, 1.2137900761195592, 1.1055400712149483, 1.0171330996922083, 0.9497220175606864, 0.8945235184260777, 0.8502955096108573, 0.8148869786943708, 0.7874599014009748, 0.7634319748197284, 0.743324739592416, 0.7243353639330182, 0.7074720518929618, 0.693996957370213, 0.6813284158706665, 0.6702275957380023, 0.6619963475636074, 0.6514332294464111, 0.6436154842376709, 0.6361026593617031, 0.6280207293374198, 0.6217895746231079, 0.6171476330075946, 0.6110728127615792, 0.6062581879752023, 0.5991027184895107, 0.596782888684954, 0.5920612301145282, 0.5875511850629535, 0.5825310604912894, 0.5803709370749337, 0.5757996184485299, 0.5724748713629586, 0.5689952032906669, 0.5654952015195575, 0.5643438441412789, 0.5585463557924543, 0.5553637913295201, 0.5520465884889875, 0.5501663684844971, 0.5499978406088692, 0.5458459513528007, 0.544472336769104, 0.5413652317864555, 0.5405124596187046, 0.5390016692025321, 0.5357246228626796, 0.5328228303364345, 0.5302223307745797, 0.5280101810182843, 0.5257978098733085, 0.525805013520377, 0.5226849317550659, 0.5205615588596889, 0.5206935065133231, 0.517886894089835, 0.5163814680916923, 0.5160273143223354, 0.5160590239933559, 0.5118906157357352, 0.5102960893086025, 0.5102578231266567, 0.5068245104381016], "val_accuracy": [0.23766666650772095, 0.3619999885559082, 0.41200000047683716, 0.43933331966400146, 0.4753333330154419, 0.531000018119812, 0.5556666851043701, 0.5666666626930237, 0.5833333134651184, 0.6073333621025085, 0.6259999871253967, 0.6513333320617676, 0.6633333563804626, 0.6729999780654907, 0.6823333501815796, 0.6853333115577698, 0.6913333535194397, 0.6953333616256714, 0.6993333101272583, 0.7080000042915344, 0.7106666564941406, 0.7153333425521851, 0.7193333506584167, 0.7210000157356262, 0.7166666388511658, 0.7276666760444641, 0.7319999933242798, 0.7269999980926514, 0.7333333492279053, 0.737333357334137, 0.7333333492279053, 0.7413333058357239, 0.7423333525657654, 0.7433333396911621, 0.7443333268165588, 0.7476666569709778, 0.7493333220481873, 0.7506666779518127, 0.7513333559036255, 0.7546666860580444, 0.7549999952316284, 0.7566666603088379, 0.7556666731834412, 0.7546666860580444, 0.7580000162124634, 0.7643333077430725, 0.7643333077430725, 0.7609999775886536, 0.7616666555404663, 0.765666663646698, 0.7666666507720947, 0.7663333415985107, 0.7646666765213013, 0.7689999938011169, 0.7673333287239075, 0.7720000147819519, 0.7723333239555359, 0.7703333497047424, 0.7703333497047424, 0.7746666669845581, 0.7756666541099548, 0.7749999761581421, 0.7696666717529297, 0.7756666541099548, 0.7746666669845581, 0.7796666622161865, 0.7739999890327454, 0.778333306312561, 0.7770000100135803, 0.7773333191871643, 0.7796666622161865]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [7, 7, 8, 1, 8, 1, 9, 0, 3, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 9, 4], [3, 2, 2, 1, 1, 2, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7822856903076172, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.291342411373805, 2.264395695950739, 2.2354731030074313, 2.195743825882496, 2.1413649160470536, 2.0712171420602594, 1.9818602023643037, 1.863408417544896, 1.7218034616188682, 1.5930128522820524, 1.4844274247374438, 1.3798663200026475, 1.308122089541804, 1.2298050591061065, 1.1813035058370591, 1.132466725449064, 1.1106233490204624, 1.0684533444661444, 1.035741890418358, 1.0177563691828875, 0.9755638553607796, 0.9681399671030932, 0.9431088186132279, 0.9228410698860203, 0.9138851685924553, 0.8936144367673252, 0.8746760693114148, 0.8688629416033199, 0.8606328006197574, 0.8422255137687535, 0.8363585113502843, 0.8392515628486813, 0.8263282123463517, 0.8095745983188021, 0.8121487982772865, 0.8088456109577497, 0.8028807797530828, 0.7909090821580202, 0.7792347652832468, 0.7829597227136614, 0.7711132607597323, 0.7634329734980989, 0.7643838799420192, 0.7555506390792157, 0.7508470463856667, 0.7483523358459155, 0.7316603265685995, 0.7415223277681114, 0.7369847204455012, 0.7308216325012669, 0.7306372992681585, 0.7184201796702611, 0.722608575385087, 0.7225018257493939, 0.7118427528759996, 0.7063263643687002, 0.695866457963459, 0.7049828295174875, 0.6996670425402695, 0.6862926971265243, 0.6904917721656398, 0.6874363467898336, 0.6809094048698958, 0.6743138185691808, 0.6869980030134764], "accuracy": [0.12191256135702133, 0.18755778670310974, 0.25214633345603943, 0.3039228618144989, 0.3599260449409485, 0.3774930536746979, 0.4139479696750641, 0.44564786553382874, 0.47325319051742554, 0.49465063214302063, 0.5190860033035278, 0.5414080023765564, 0.5576542019844055, 0.5761458277702332, 0.5968828201293945, 0.6073173880577087, 0.609959065914154, 0.6234315037727356, 0.6283186078071594, 0.6419231295585632, 0.6580372452735901, 0.6588297486305237, 0.6626601219177246, 0.6719059348106384, 0.6773213744163513, 0.6826046705245972, 0.6865671873092651, 0.6901333928108215, 0.6906617283821106, 0.6971337795257568, 0.6992471218109131, 0.6960771083831787, 0.6997754573822021, 0.7065116763114929, 0.7091533541679382, 0.7069079279899597, 0.7025492191314697, 0.7140403985977173, 0.7149649858474731, 0.7152291536331177, 0.7173424959182739, 0.7197200059890747, 0.7206445932388306, 0.7271166443824768, 0.7215691208839417, 0.7240787148475647, 0.7325320243835449, 0.7275128960609436, 0.7273808121681213, 0.7304186820983887, 0.7305507659912109, 0.7318716049194336, 0.7363624572753906, 0.7327961921691895, 0.7388719916343689, 0.744419515132904, 0.7421740889549255, 0.7409853339195251, 0.744419515132904, 0.7456082701683044, 0.7433628439903259, 0.746268630027771, 0.7409853339195251, 0.7458723783493042, 0.7428345084190369], "val_loss": [1.9467073849269323, 1.9205544335501534, 1.8884897232055664, 1.8452857562473841, 1.7845628602164132, 1.7037872246333532, 1.601254633494786, 1.4774279935019357, 1.342268705368042, 1.2137835025787354, 1.1055265154157365, 1.017106567110334, 0.9496932029724121, 0.8944941588810512, 0.8502618755613055, 0.8148420538221087, 0.7874025957924979, 0.7634400640215192, 0.7433164971215385, 0.7243608236312866, 0.7074590240206037, 0.6939636298588344, 0.6812915120806012, 0.6701981169836861, 0.6619617598397392, 0.6514044829777309, 0.643600514956883, 0.6360453367233276, 0.6279571226664952, 0.6217882122312274, 0.6172759703227452, 0.6111702237810407, 0.606361814907619, 0.5991220814841134, 0.596878034727914, 0.5921577215194702, 0.5876502139227731, 0.5826407330376762, 0.5803423949650356, 0.5758180958884103, 0.5725141423089164, 0.5689621141978672, 0.5655353239604405, 0.5642539433070591, 0.5585328170231411, 0.5553736175809588, 0.5520674501146589, 0.5501159429550171, 0.5500691958836147, 0.5458757025854928, 0.5445053918021066, 0.5414164066314697, 0.5405380725860596, 0.5389840091977801, 0.5357289143971035, 0.5327867950711932, 0.5302070719855172, 0.5278935943331037, 0.5257149083273751, 0.5257921389171055, 0.5226812362670898, 0.5205530268805367, 0.5207020725522723, 0.5178682974406651, 0.516389114516122], "val_accuracy": [0.23766666650772095, 0.3619999885559082, 0.41200000047683716, 0.43933331966400146, 0.4753333330154419, 0.5306666493415833, 0.5556666851043701, 0.5669999718666077, 0.5830000042915344, 0.6073333621025085, 0.6256666779518127, 0.6516666412353516, 0.6633333563804626, 0.6729999780654907, 0.6823333501815796, 0.6853333115577698, 0.6913333535194397, 0.6956666707992554, 0.6993333101272583, 0.7073333263397217, 0.7103333473205566, 0.7149999737739563, 0.7200000286102295, 0.7213333249092102, 0.7166666388511658, 0.7276666760444641, 0.7310000061988831, 0.7273333072662354, 0.7329999804496765, 0.7369999885559082, 0.7333333492279053, 0.7409999966621399, 0.7419999837875366, 0.7433333396911621, 0.7453333139419556, 0.7476666569709778, 0.749666690826416, 0.7509999871253967, 0.7516666650772095, 0.7546666860580444, 0.7549999952316284, 0.7563333511352539, 0.7553333044052124, 0.7543333172798157, 0.7580000162124634, 0.7639999985694885, 0.7643333077430725, 0.7616666555404663, 0.762666642665863, 0.765666663646698, 0.7670000195503235, 0.7663333415985107, 0.7646666765213013, 0.7676666378974915, 0.7683333158493042, 0.7720000147819519, 0.7723333239555359, 0.7706666588783264, 0.7703333497047424, 0.7753333449363708, 0.7749999761581421, 0.7753333449363708, 0.7693333625793457, 0.7753333449363708, 0.7753333449363708]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [5, 4, 8, 0, 9, 4, 7, 1, 1, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 9, 4], [1, 2, 2, 1, 1, 2, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [0, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 5, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.math.negative(alpha)), tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08308017253875732, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [5, 4, 8, 8, 8, 0, 7, 1, 1, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 9, 4], [1, 2, 1, 1, 1, 2, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 12, 7, 5, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma))))))", "other_info": {"loss": [2.3704154082985918, 2.667576732888686, 4.9952472916778055, 28.42437979038507, 258.65961800231247, 2506.0021816259205, 24267.568472625808, 241050.16765453704, 2383321.6925769383, 23174791.624356095], "accuracy": [0.0305111613124609, 0.020737022161483765, 0.03737947344779968, 0.06656980514526367, 0.09787346422672272, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.10161440713065, 2.6858931950160434, 8.559961863926478, 68.58499799455915, 656.103986467634, 6418.740094866072, 61758.36607142857, 617927.2142857143, 6092893.142857143, 59755213.71428572], "val_accuracy": [0.007000000216066837, 0.025333333760499954, 0.04233333468437195, 0.09733333438634872, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [5, 4, 8, 8, 8, 0, 7, 1, 1, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 9, 4], [1, 0, 2, 1, 1, 2, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [4, 3, 0, 4, 7, 8, 4], [3, 0, 2, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 11, 6, 5, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.pow(alpha, tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(tf.math.negative(sigma), tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), beta), tf.math.sqrt(alpha))), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [8, 4, 8, 8, 5, 1, 7, 0, 3, 3, 0, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 0, 4], [1, 2, 2, 1, 1, 2, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [2, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [5, 3, 0, 4, 7, 8, 0], [0, 0, 0, 1, 3, 3], [28, 57, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 8, 4, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 11, 7, 4, 3], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.pow(alpha, tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.subtract(tf.math.add(tf.math.add(alpha, grad), grad), tf.math.add(alpha, tf.math.negative(alpha))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.negative(alpha)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [5, 4, 8, 8, 8, 0, 7, 1, 1, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 9, 4], [3, 2, 2, 1, 1, 2, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(grad))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3029632280531374, 2.302947097214505, 2.3029817105473276, 2.3029997142204253, 2.302960172321157, 2.303030015927548, 2.3029776582817405], "accuracy": [0.0944393053650856, 0.09166556596755981, 0.09496764093637466, 0.09787346422672272, 0.09417514503002167, 0.09760929644107819, 0.09628847241401672], "val_loss": [1.9737016132899694, 1.9736477306910925, 1.97360440662929, 1.973785740988595, 1.9736742292131697, 1.9736929621015276, 1.9737232753208704], "val_accuracy": [0.09966666996479034, 0.1003333330154419, 0.1003333330154419, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [2, 4, 8, 8, 8, 1, 7, 0, 0, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 0, 4], [2, 2, 2, 0, 1, 1, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [18, 8, 39, 58, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [82, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 2, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(grad))), tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, beta))", "other_info": {"loss": [2.3027229762552848, 2.3037157641614763, 2.3074336696877187, 2.3089615891496535, 2.3130873041287736, 2.3177720727606883, 2.3240880806527007, 2.3298194021392002, 2.335045374741943, 2.347847810085691, 2.4019278206168355, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09179764986038208, 0.08757099509239197, 0.08796724677085876, 0.08030643314123154, 0.0738343670964241, 0.06987188011407852, 0.07224937528371811, 0.07436270266771317, 0.07753269374370575, 0.07106062769889832, 0.07898560166358948, 0.09457138925790787, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9722747121538435, 1.9734420776367188, 1.9750927516392298, 1.9773314339773995, 1.9797791072300501, 1.9826438767569405, 1.9862520354134696, 1.9911919321332658, 1.9984572274344308, 2.014160088130406, 2.1866205760410855, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.033666666597127914, 0.027000000700354576, 0.024000000208616257, 0.022333333268761635, 0.029999999329447746, 0.03633333370089531, 0.050999999046325684, 0.070333331823349, 0.08933333307504654, 0.09933333098888397, 0.09933333098888397, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [5, 4, 8, 0, 8, 0, 7, 1, 1, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 9, 4], [1, 2, 2, 1, 1, 2, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [2, 4, 3], [82, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.math.sqrt(grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08308017253875732, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [7, 4, 8, 8, 8, 1, 7, 0, 3, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 5, 6, 8, 9, 0, 4], [0, 2, 3, 2, 1, 2, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [39, 8, 14, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [4, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08308017253875732, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [7, 7, 8, 1, 8, 1, 2, 0, 3, 3, 4, 2, 2, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 9, 4], [2, 2, 2, 2, 1, 1, 2, 2, 2, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [82, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [9, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 8, 6, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.negative(grad), alpha), alpha)))))), lambda shape,  alpha, beta, grad: tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3026748923829614, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09998679161071777, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [3, 4, 8, 8, 8, 0, 7, 1, 1, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 9, 4], [2, 2, 2, 2, 1, 1, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [82, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.pow(grad, tf.math.add(alpha, grad)), tf.math.sqrt(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [7, 4, 8, 8, 8, 1, 7, 0, 3, 3, 3, 2, 0, 9, 3, 4, 5, 1, 2, 8, 7, 1, 1, 9, 2, 4, 3, 6, 5, 1], [2, 2, 2, 2, 1, 1, 2, 2, 2, 0, 2, 0, 2, 2, 3, 0, 0, 1, 0], [30, 8, 39, 25, 80, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [82, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 49, 49, 30, 19, 7, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 12, 7, 5, 2], "tree_depth": 41, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(grad))), tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(tf.math.add(grad, grad), tf.math.negative(grad))))), tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(tf.math.negative(alpha), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))))))))), grad))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), tf.math.add(alpha, grad))), tf.math.pow(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))))), tf.math.square(tf.math.subtract(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(sigma), tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [5, 4, 8, 8, 8, 0, 7, 1, 1, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 9, 4], [1, 2, 2, 1, 1, 2, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [5, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.pow(alpha, tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08308017253875732, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [5, 4, 8, 8, 8, 0, 7, 1, 1, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 9, 4], [1, 2, 2, 1, 1, 2, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.09571428596973419, "mapping_values": [1, 6, 6, 4, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))), tf.math.sqrt(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [11.945775340435102, 2.315339846712424, 14773806.596807452, 2.31276975076716, 2.4047325738757724e+16, 2.3218946957301627, 2.308166592459023], "accuracy": [0.10249637067317963, 0.10593052208423615, 0.09536388516426086, 0.09774138033390045, 0.09642054885625839, 0.09589222073554993, 0.09985470771789551], "val_loss": [1.9803639139447893, 1.9755441120692663, 1.9864333016531808, 1.9770808901105608, 1.9987053871154785, 1.9808784212384904, 1.9755121639796667], "val_accuracy": [0.09799999743700027, 0.10199999809265137, 0.10199999809265137, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [7, 4, 8, 0, 8, 1, 7, 9, 3, 3, 5, 2, 0, 9, 3, 4, 5, 1, 2, 8, 7, 1, 1, 9, 0, 4], [2, 2, 2, 2, 1, 1, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [18, 8, 39, 58, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [69, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [5, 3, 0, 5, 7, 0, 4], [3, 0, 0, 1, 3, 3], [7, 57]], "fitness": -0.06599999964237213, "mapping_values": [1, 10, 10, 6, 4, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 8, 5, 3, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.sqrt(tf.math.negative(grad)), tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(grad, grad)))), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.negative(sigma), tf.math.square(tf.math.add(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.302030525880168, 2.301203317897919, 2.3023151792728545, 2.300766406105242, 2.301293007843467, 2.301966793737738, 2.3023949853181365, 2.301693685869452, 2.299546589736122, 2.2990334044673015, 2.300508628164253, 2.3004003856569755, 2.3012671069761295, 2.299195213498, 2.301349030982045, 2.299155667756826, 2.300800631437099, 2.299796225136266, 2.2987276976843236, 2.2991787926269924, 2.2983339271525254, 2.299618386605066, 2.2995535383575927, 2.298490040715754, 2.3003172483017194], "accuracy": [0.09391097724437714, 0.09245806187391281, 0.09602430462837219, 0.09272222965955734, 0.0886276587843895, 0.08796724677085876, 0.09536388516426086, 0.09206181764602661, 0.09919429570436478, 0.09747721254825592, 0.09496764093637466, 0.09985470771789551, 0.1010434553027153, 0.09879804402589798, 0.09311848133802414, 0.10236428678035736, 0.09866596013307571, 0.1018359512090683, 0.10777968913316727, 0.10302469879388809, 0.10474177449941635, 0.10077928751707077, 0.09866596013307571, 0.09959053993225098, 0.09985470771789551], "val_loss": [1.9708612305777413, 1.970588139125279, 1.9702705655779158, 1.9700185230800085, 1.969832147870745, 1.969670227595738, 1.9695112364632743, 1.9694273812430245, 1.9694279261997767, 1.9694403920854842, 1.9694387572152274, 1.9694271768842424, 1.9694223403930664, 1.9694479533604212, 1.9693811961582728, 1.9693662098475866, 1.9692942755562919, 1.9692752020699638, 1.9692602838788713, 1.969292231968471, 1.9693859645298548, 1.9694810594831194, 1.9695946829659599, 1.969745431627546, 1.9698604856218611], "val_accuracy": [0.04266666620969772, 0.04500000178813934, 0.04800000041723251, 0.050999999046325684, 0.05533333495259285, 0.058666665107011795, 0.057999998331069946, 0.06066666543483734, 0.05999999865889549, 0.05999999865889549, 0.059333331882953644, 0.06233333423733711, 0.06533333659172058, 0.06733333319425583, 0.07100000232458115, 0.07433333247900009, 0.07533333450555801, 0.07633333653211594, 0.07666666805744171, 0.07699999958276749, 0.07599999755620956, 0.07433333247900009, 0.07400000095367432, 0.07400000095367432, 0.07566666603088379]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [7, 5, 8, 8, 8, 1, 7, 0, 3, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 5, 6, 8, 9, 0, 4], [1, 2, 2, 1, 1, 2, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 6, 6, 4, 2, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.square(tf.math.sqrt(tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.sqrt(grad))), lambda shape,  alpha, beta, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302225383706396, 2.3018165107384934, 2.3034210902604415, 2.302261417473564, 2.303116428790674, 2.304085693685622], "accuracy": [0.09245806187391281, 0.09153348207473755, 0.0940430611371994, 0.08942015469074249, 0.08506141602993011, 0.08413683623075485], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [7, 7, 8, 8, 7, 5, 7, 0, 3, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 0, 4], [2, 0, 2, 2, 1, 1, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [18, 8, 39, 58, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [81, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(grad, tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(sigma), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302225383706396, 2.3018165107384934, 2.3034210902604415, 2.302261417473564, 2.303116428790674, 2.304085693685622], "accuracy": [0.09245806187391281, 0.09153348207473755, 0.0940430611371994, 0.08942015469074249, 0.08506141602993011, 0.08413683623075485], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [5, 4, 1, 8, 8, 0, 7, 1, 1, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 9, 4], [1, 1, 1, 1, 1, 2, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 0, 7, 7, 8, 4], [3, 1, 1, 1, 3, 3], [52, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 8, 4, 4, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(alpha)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(sigma, alpha), tf.math.negative(tf.math.add(alpha, alpha)))", "other_info": {"loss": [2.302225383706396, 2.3018165107384934, 2.3034210902604415, 2.302261417473564, 2.303116428790674, 2.304085693685622], "accuracy": [0.09245806187391281, 0.09153348207473755, 0.0940430611371994, 0.08942015469074249, 0.08506141602993011, 0.08413683623075485], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]