[{"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 4, 2, 8, 8, 1, 7, 0, 1, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9, 9, 4], [1, 2, 3, 1, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [18, 8, 39, 58, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7908571362495422, "mapping_values": [1, 7, 7, 4, 3, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2917737453809868, 2.2635707083694405, 2.234139749953744, 2.195164995485718, 2.1422732667427935, 2.0671040916077574, 1.9714005715528011, 1.8537530381807703, 1.7267755429506333, 1.5882223957423536, 1.4671917070628882, 1.3807836371390196, 1.29621327110742, 1.2338927162164364, 1.1841194145966987, 1.1324874106777374, 1.1000560509797968, 1.058774544074472, 1.0260671999917101, 1.014382537384988, 0.9918438288687148, 0.9646050650540313, 0.9473481311884381, 0.930087842552055, 0.9179298547296445, 0.9016268537769133, 0.8793794071638132, 0.8713558746398228, 0.8659566302246594, 0.8533066636960834, 0.8356586357920854, 0.8257948706147221, 0.8262831148076539, 0.8126341523495585, 0.8122926883693731, 0.7954472165223614, 0.7915291178731902, 0.7824547466679398, 0.7884659252981107, 0.7788808157163415, 0.7646048618833607, 0.7686574155896048, 0.7527055023148265, 0.7562443715958248, 0.7540376628898532, 0.7509002613274964, 0.7417660043019472, 0.735728234103831, 0.7330003670099279, 0.7319698506940893, 0.717023109794529, 0.721532011139174, 0.7118285783230589, 0.7137172955878422, 0.7170830587228496, 0.7144684903200639, 0.7094029700987532, 0.7036850717971196, 0.6922379547594529, 0.6917994975839009, 0.69850467010622, 0.6915869761955595, 0.6910787263346102, 0.6937228301496963, 0.6823066927816386, 0.6778259846229185, 0.6826380380723203, 0.675534595391061, 0.6727875035200546, 0.6595687189547456, 0.6673350043898922, 0.6608676857574189, 0.6678713719685159, 0.6669992713124572, 0.6524548467596556, 0.64819457846358], "accuracy": [0.12098798155784607, 0.19244486093521118, 0.254920095205307, 0.30920618772506714, 0.3521331250667572, 0.39506009221076965, 0.42108044028282166, 0.4423457980155945, 0.46308282017707825, 0.5060097575187683, 0.5218597054481506, 0.5435213446617126, 0.5585787892341614, 0.5741645693778992, 0.5843349695205688, 0.6059965491294861, 0.6106194853782654, 0.6310923099517822, 0.6371681690216064, 0.6383568644523621, 0.6470743417739868, 0.655527651309967, 0.6573768258094788, 0.6708492636680603, 0.6730946898460388, 0.6738871932029724, 0.6840575933456421, 0.6869634389877319, 0.689869225025177, 0.689869225025177, 0.6933034062385559, 0.7009642124176025, 0.6992471218109131, 0.7045304179191589, 0.7063795924186707, 0.7113987803459167, 0.7094175219535828, 0.7107383608818054, 0.7131158113479614, 0.7150970697402954, 0.7205125093460083, 0.7218332886695862, 0.7199841737747192, 0.7239466309547424, 0.724210798740387, 0.724739134311676, 0.7277770638465881, 0.7284374833106995, 0.7302865982055664, 0.7316074371337891, 0.7363624572753906, 0.7358341217041016, 0.743891179561615, 0.7362303733825684, 0.7338528633117676, 0.7376832365989685, 0.7421740889549255, 0.7417778372764587, 0.7475894689559937, 0.7475894689559937, 0.7384757399559021, 0.7448157668113708, 0.739928662776947, 0.7449478507041931, 0.7464007139205933, 0.7440232634544373, 0.7464007139205933, 0.748249888420105, 0.7458723783493042, 0.7534011602401733, 0.7514199018478394, 0.752740740776062, 0.7493065595626831, 0.7543256878852844, 0.7548540234565735, 0.7544577717781067], "val_loss": [1.9469547952924455, 1.9201486451285226, 1.8875580515180315, 1.8441481590270996, 1.783736024584089, 1.7020868573869978, 1.5962679045540946, 1.471360513142177, 1.3389152118137904, 1.211965560913086, 1.1023013251168388, 1.0159354209899902, 0.9485505308423724, 0.893066440309797, 0.8491134813853672, 0.81439094884055, 0.7873280048370361, 0.7602892432894025, 0.738374011857169, 0.7219503777367728, 0.707868150302342, 0.6955063172749111, 0.6833748987742833, 0.6707147530147007, 0.661144665309361, 0.6527860505240304, 0.6431279182434082, 0.6364608321871076, 0.6289113249097552, 0.6226800509861538, 0.6163871799196515, 0.6095027753285, 0.6063270909445626, 0.599254948752267, 0.594018987246922, 0.591113805770874, 0.585518445287432, 0.5838493619646344, 0.5785860674721854, 0.5742883682250977, 0.5712518692016602, 0.5672086136681693, 0.5667119537081037, 0.5616500718252999, 0.5591572182519096, 0.5570499556405204, 0.5525252819061279, 0.5523099899291992, 0.5474555322102138, 0.5454343046460833, 0.5449112824031285, 0.5409212623323713, 0.5383588245936802, 0.5363704987934658, 0.5379617895398822, 0.5314471551350185, 0.5311319317136493, 0.5277720178876605, 0.5280340399060931, 0.524048890386309, 0.5240801572799683, 0.5204548495156425, 0.5198732273919242, 0.5170047283172607, 0.514778597014291, 0.5133553062166486, 0.5143345424107143, 0.5109631334032331, 0.5095317193440029, 0.5080653429031372, 0.507407716342381, 0.5055902685437884, 0.5080809763499669, 0.5066012825284686, 0.5041040522711617, 0.49972498416900635], "val_accuracy": [0.2329999953508377, 0.3616666793823242, 0.40799999237060547, 0.4426666796207428, 0.4819999933242798, 0.5109999775886536, 0.5616666674613953, 0.5766666531562805, 0.5856666564941406, 0.6143333315849304, 0.6386666893959045, 0.656333327293396, 0.668666660785675, 0.6733333468437195, 0.6830000281333923, 0.687666654586792, 0.6949999928474426, 0.6990000009536743, 0.70333331823349, 0.7096666693687439, 0.7099999785423279, 0.7160000205039978, 0.7153333425521851, 0.7203333377838135, 0.718999981880188, 0.7256666421890259, 0.731333315372467, 0.7293333411216736, 0.7353333234786987, 0.7366666793823242, 0.734333336353302, 0.7416666746139526, 0.7426666617393494, 0.7440000176429749, 0.7473333477973938, 0.7429999709129333, 0.7453333139419556, 0.7523333430290222, 0.75, 0.7493333220481873, 0.7540000081062317, 0.753333330154419, 0.7590000033378601, 0.7566666603088379, 0.7593333125114441, 0.7616666555404663, 0.762333333492279, 0.7593333125114441, 0.7676666378974915, 0.7676666378974915, 0.7576666474342346, 0.7699999809265137, 0.7680000066757202, 0.7696666717529297, 0.762666642665863, 0.7699999809265137, 0.7706666588783264, 0.7689999938011169, 0.762333333492279, 0.7746666669845581, 0.7739999890327454, 0.7743333578109741, 0.7733333110809326, 0.7743333578109741, 0.7756666541099548, 0.7760000228881836, 0.7716666460037231, 0.7773333191871643, 0.7773333191871643, 0.7770000100135803, 0.781000018119812, 0.7803333401679993, 0.7770000100135803, 0.7743333578109741, 0.777999997138977, 0.7789999842643738]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [0, 4, 5, 8, 6, 1, 7, 0, 5, 3, 3, 7, 8, 9, 3, 4, 6, 2, 7, 8, 7, 1, 4, 9, 9, 4, 0, 5], [1, 1, 3, 1, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [30, 66, 39, 2, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7905714511871338, "mapping_values": [1, 42, 42, 28, 14, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.square(tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)))))), alpha)), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), alpha), tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))), grad), tf.math.add(alpha, tf.math.pow(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))))))))))), tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2917737768720152, 2.2635707083694405, 2.2341394440813813, 2.1951609785215744, 2.1422627318914715, 2.0670970014656036, 1.9714054229819717, 1.853768510321553, 1.7268030192669057, 1.5882527091483933, 1.4672123540142161, 1.3808123255292455, 1.2962448906668613, 1.2339220662331774, 1.184136535891169, 1.132514145521991, 1.1000821515789845, 1.0588062104610736, 1.0260862488048172, 1.0143774855232919, 0.9918427340043707, 0.9646448386013075, 0.9473720046318501, 0.9300606309493709, 0.9179250955849338, 0.901604342525189, 0.8793866536353069, 0.871315940315099, 0.8659633400732768, 0.8533406146308607, 0.8356407563589694, 0.8258452575283279, 0.8262645550108605, 0.8126737860451757, 0.8122583511105271, 0.7954798709399916, 0.7915585429645438, 0.7824825233613905, 0.7884111308371308, 0.7788464527686888, 0.764733323859123, 0.7686712045742615, 0.7526845799429605, 0.756198303086363, 0.7539914023953344, 0.7509812089619368, 0.7418015583505279, 0.7358146894326095, 0.7330021983549627, 0.7320377314410362, 0.716959129077663, 0.7215122085331831, 0.7118621566166196, 0.7136499072661127, 0.7171496836154405, 0.7144441958179784, 0.7093836619176601, 0.703653730476663, 0.6922794513934797, 0.6917972056904426, 0.6985643573598367, 0.691644055535371, 0.6910181217315788, 0.693719202698088, 0.6823044296788533, 0.6777482712509736, 0.6827441608082302, 0.6754683435411973, 0.6727627947377397, 0.659588619269526, 0.6674747991130463, 0.6608186127046443, 0.6679799080824005, 0.667080100548502, 0.6524307514225818, 0.6480718205523387], "accuracy": [0.12098798155784607, 0.19244486093521118, 0.254920095205307, 0.3093382716178894, 0.3520010709762573, 0.3949280083179474, 0.42108044028282166, 0.4422137141227722, 0.46308282017707825, 0.5060097575187683, 0.5215955376625061, 0.5437855124473572, 0.5585787892341614, 0.5744287371635437, 0.5843349695205688, 0.6059965491294861, 0.6106194853782654, 0.63096022605896, 0.6370360851287842, 0.6380926966667175, 0.6472064256668091, 0.6559239029884338, 0.6576409935951233, 0.6705851554870605, 0.6732267737388611, 0.6738871932029724, 0.6839255094528198, 0.6863030195236206, 0.689869225025177, 0.6897371411323547, 0.6934354901313782, 0.7009642124176025, 0.6995112895965576, 0.7043983340263367, 0.7063795924186707, 0.7112666964530945, 0.7092854380607605, 0.71100252866745, 0.7132478952407837, 0.7152291536331177, 0.7210407853126526, 0.7215691208839417, 0.7201162576675415, 0.7240787148475647, 0.7238145470619202, 0.7253995537757874, 0.7272487282752991, 0.7280412316322327, 0.7302865982055664, 0.7316074371337891, 0.7360982894897461, 0.7359662055969238, 0.7440232634544373, 0.7363624572753906, 0.7346453666687012, 0.7372870445251465, 0.7420420050621033, 0.7423061728477478, 0.7473253011703491, 0.7469290494918823, 0.7383436560630798, 0.7445515990257263, 0.7404569983482361, 0.7448157668113708, 0.7473253011703491, 0.7434949278831482, 0.7471932172775269, 0.7485140562057495, 0.7464007139205933, 0.7536653280258179, 0.7508915662765503, 0.7528728246688843, 0.7497028112411499, 0.7534011602401733, 0.7552502751350403, 0.754589855670929], "val_loss": [1.9469547952924455, 1.9201485770089286, 1.88755920955113, 1.8441411427089147, 1.7837228775024414, 1.7020855631147112, 1.5962800298418318, 1.4713832991463798, 1.3389349664960588, 1.2119831698281425, 1.1023197514670235, 1.0159642696380615, 0.9485783236367362, 0.8930722985948835, 0.8491332020078387, 0.8144145011901855, 0.7873786006655011, 0.7603156566619873, 0.7383887767791748, 0.7219464268003192, 0.7078731911523002, 0.6955179827553886, 0.6833773510796683, 0.6707068170819964, 0.6611566373280117, 0.6527665683201381, 0.6431076696940831, 0.6364157199859619, 0.6289106266839164, 0.6225941862378802, 0.6163891724177769, 0.6094224623271397, 0.6062350954328265, 0.5991202592849731, 0.5938749824251447, 0.5911508287702288, 0.585431626864842, 0.5838407107761928, 0.5785235677446637, 0.5742547512054443, 0.5712623085294452, 0.5672570637294224, 0.5667002711977277, 0.5616535799843925, 0.5590858800070626, 0.5570304564067295, 0.5524308340890067, 0.552341205733163, 0.5474298340933663, 0.545341968536377, 0.5449243443352836, 0.5409745488848005, 0.5384352718080793, 0.5362963676452637, 0.5379275764737811, 0.5313855579921177, 0.5309754610061646, 0.5276362895965576, 0.5278551578521729, 0.5239241293498448, 0.5240974255970546, 0.5204090390886579, 0.5197303465434483, 0.5170066186359951, 0.5147437879017421, 0.5133874075753349, 0.5142095259257725, 0.5109677485057286, 0.5094701222011021, 0.5079969167709351, 0.507314818246024, 0.5054998227528164, 0.5080451113837106, 0.5064990520477295, 0.5040307726178851, 0.499620829309736], "val_accuracy": [0.2329999953508377, 0.3616666793823242, 0.40799999237060547, 0.4426666796207428, 0.4819999933242798, 0.5116666555404663, 0.5616666674613953, 0.5773333311080933, 0.5856666564941406, 0.6146666407585144, 0.6383333206176758, 0.656333327293396, 0.6679999828338623, 0.6740000247955322, 0.6826666593551636, 0.687666654586792, 0.6953333616256714, 0.6986666917800903, 0.7039999961853027, 0.7103333473205566, 0.7099999785423279, 0.715666651725769, 0.7153333425521851, 0.7203333377838135, 0.718999981880188, 0.7253333330154419, 0.731333315372467, 0.7293333411216736, 0.7356666922569275, 0.7363333106040955, 0.734000027179718, 0.7416666746139526, 0.7426666617393494, 0.7440000176429749, 0.7476666569709778, 0.7433333396911621, 0.7450000047683716, 0.753000020980835, 0.750333309173584, 0.75, 0.7543333172798157, 0.753000020980835, 0.7586666941642761, 0.7563333511352539, 0.7586666941642761, 0.7613333463668823, 0.762333333492279, 0.7586666941642761, 0.7680000066757202, 0.7680000066757202, 0.7583333253860474, 0.7693333625793457, 0.7680000066757202, 0.7696666717529297, 0.7620000243186951, 0.7696666717529297, 0.7713333368301392, 0.768666684627533, 0.7630000114440918, 0.7739999890327454, 0.7739999890327454, 0.7746666669845581, 0.7736666798591614, 0.7739999890327454, 0.7756666541099548, 0.7756666541099548, 0.7726666927337646, 0.7773333191871643, 0.7770000100135803, 0.7770000100135803, 0.7806666493415833, 0.7806666493415833, 0.7766666412353516, 0.7749999761581421, 0.7789999842643738, 0.7796666622161865]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 8, 8, 8, 1, 7, 0, 3, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 9, 4], [1, 2, 2, 1, 1, 2, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7905714511871338, "mapping_values": [1, 16, 16, 10, 6, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, grad), grad), alpha))), tf.math.add(alpha, alpha)))))))), grad)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.291773758890638, 2.26357045644121, 2.2341406450232557, 2.1951653414146697, 2.142279901839581, 2.0671136458599335, 1.9714134981477611, 1.8537712953723953, 1.726794876111985, 1.5882295175644825, 1.4671859592888192, 1.3807938034193405, 1.296246946039075, 1.2339245869640691, 1.1841487906565205, 1.1325115921821387, 1.1000754405573265, 1.0587844285730672, 1.0260976297885924, 1.0143774276585265, 0.9918697388841964, 0.9646587345688618, 0.9473717574508923, 0.9301134807291032, 0.9179753518028975, 0.9016477018299514, 0.8794145900670013, 0.8713545410892258, 0.8659705683823196, 0.8533409316353022, 0.8356601604144996, 0.8258460651236345, 0.8263296668224992, 0.8126707343440471, 0.8122588412447723, 0.795502889842846, 0.7916182514116229, 0.7824854841557917, 0.7883977007006201, 0.7788775746596567, 0.7646338569568432, 0.7686117999841193, 0.752713332992141, 0.7562895690083205, 0.7540522475898258, 0.7509095223115939, 0.7417335181802476, 0.7357700359961454, 0.733059414208384, 0.7319787178198895, 0.7169913415187039, 0.7214248339891465, 0.7118823518055211, 0.7136671275526321, 0.7171471652148848, 0.7144814780942201, 0.7093908384633244, 0.703656126825864, 0.692249851597771, 0.6918454724311702, 0.6985260313606817, 0.691616566362886, 0.690966960957431, 0.693746653797919, 0.6823234298068298, 0.6778443749035039, 0.6826768870587362, 0.6755754675501137, 0.672887619161146, 0.6596120170173297, 0.6675872959087333, 0.660829546295373, 0.6678718942865924, 0.6670716663456202, 0.6524944835728848, 0.6481503279627023], "accuracy": [0.12098798155784607, 0.19244486093521118, 0.25478801131248474, 0.30920618772506714, 0.3521331250667572, 0.39506009221076965, 0.42108044028282166, 0.44208163022994995, 0.46308282017707825, 0.505877673625946, 0.5217276215553284, 0.5437855124473572, 0.5584467053413391, 0.5742966532707214, 0.5844670534133911, 0.6059965491294861, 0.6107515692710876, 0.6312243938446045, 0.6369040012359619, 0.6379606127738953, 0.6476026773452759, 0.6556597352027893, 0.657508909702301, 0.6704530715942383, 0.6734909415245056, 0.6738871932029724, 0.6833971738815308, 0.6865671873092651, 0.6897371411323547, 0.6902654767036438, 0.6933034062385559, 0.7017567157745361, 0.6993792057037354, 0.7040021419525146, 0.7063795924186707, 0.7116629481315613, 0.709549605846405, 0.7108704447746277, 0.7131158113479614, 0.7143045663833618, 0.7214370369911194, 0.7215691208839417, 0.720380425453186, 0.724210798740387, 0.724739134311676, 0.7251353859901428, 0.7275128960609436, 0.7281733155250549, 0.7298903465270996, 0.7317395210266113, 0.7358341217041016, 0.7360982894897461, 0.7436270117759705, 0.7362303733825684, 0.7339849472045898, 0.7367587089538574, 0.7424382567405701, 0.741909921169281, 0.7471932172775269, 0.7466648817062378, 0.7388719916343689, 0.7449478507041931, 0.7392682433128357, 0.7440232634544373, 0.7465327978134155, 0.7440232634544373, 0.7466648817062378, 0.748778223991394, 0.7458723783493042, 0.7535332441329956, 0.750759482383728, 0.7536653280258179, 0.7494386434555054, 0.7531369924545288, 0.7544577717781067, 0.7547219395637512], "val_loss": [1.9469547952924455, 1.9201483726501465, 1.8875573703220911, 1.844153949192592, 1.7837414060320174, 1.7020962578909737, 1.5962847641536169, 1.4713714463370187, 1.338914496558053, 1.2119444097791399, 1.1023054463522775, 1.0159452302115304, 0.9485760075705392, 0.8930889197758266, 0.8491204295839582, 0.8144023418426514, 0.7873584713254657, 0.7603202206747872, 0.7383917570114136, 0.721966164452689, 0.7078836985996791, 0.6955232620239258, 0.6833575793675014, 0.6706898893628802, 0.6611659697123936, 0.6528292894363403, 0.6431519304003034, 0.6364681209836688, 0.6289161614009312, 0.6226227794374738, 0.616402302469526, 0.6095154285430908, 0.606360844203404, 0.5991921254566738, 0.5940777574266706, 0.5911327770778111, 0.5855011429105487, 0.5838827405657087, 0.5787275007792881, 0.5743703501565116, 0.5713092940194267, 0.5673003026417324, 0.5667568274906704, 0.5616308961595807, 0.5591007471084595, 0.5570757218769619, 0.5524725062506539, 0.5522804600851876, 0.5474213702338082, 0.5453407423836845, 0.5448577744620187, 0.5409478970936367, 0.5384147337504795, 0.5363314662660871, 0.5379462923322406, 0.5314159223011562, 0.5310798713139125, 0.5277494021824428, 0.5278498785836356, 0.5239779778889248, 0.5240103346960885, 0.5203616789409092, 0.5197511741093227, 0.5170458555221558, 0.5146919318607875, 0.5133758272443499, 0.514207022530692, 0.5108501229967389, 0.5093823671340942, 0.5079450607299805, 0.5073511941092355, 0.505529625075204, 0.5080971377236503, 0.5066328048706055, 0.5041288818631854, 0.4997644935335432], "val_accuracy": [0.2329999953508377, 0.36133334040641785, 0.40799999237060547, 0.4423333406448364, 0.48233333230018616, 0.5113333463668823, 0.5609999895095825, 0.5773333311080933, 0.5860000252723694, 0.6146666407585144, 0.6386666893959045, 0.6566666960716248, 0.6679999828338623, 0.6736666560173035, 0.6826666593551636, 0.687666654586792, 0.6953333616256714, 0.6983333230018616, 0.7036666870117188, 0.7106666564941406, 0.7099999785423279, 0.7160000205039978, 0.715666651725769, 0.7210000157356262, 0.718999981880188, 0.7253333330154419, 0.731333315372467, 0.7289999723434448, 0.7353333234786987, 0.7366666793823242, 0.734000027179718, 0.7419999837875366, 0.7423333525657654, 0.7446666955947876, 0.746999979019165, 0.7436666488647461, 0.7456666827201843, 0.7526666522026062, 0.75, 0.749666690826416, 0.7543333172798157, 0.7536666393280029, 0.7586666941642761, 0.7576666474342346, 0.7586666941642761, 0.7609999775886536, 0.762333333492279, 0.7596666812896729, 0.7673333287239075, 0.7683333158493042, 0.7580000162124634, 0.7696666717529297, 0.7683333158493042, 0.7703333497047424, 0.762666642665863, 0.7696666717529297, 0.7713333368301392, 0.7696666717529297, 0.7630000114440918, 0.7743333578109741, 0.7736666798591614, 0.7746666669845581, 0.7736666798591614, 0.7743333578109741, 0.7753333449363708, 0.7753333449363708, 0.7726666927337646, 0.777999997138977, 0.7773333191871643, 0.7776666879653931, 0.7816666960716248, 0.7806666493415833, 0.7770000100135803, 0.7743333578109741, 0.778333306312561, 0.7786666750907898]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 5, 8, 1, 7, 0, 0, 3, 3, 7, 8, 9, 3, 4, 6, 4, 7, 8, 7, 1, 2, 1, 9, 4], [1, 2, 3, 2, 2, 2, 2, 2, 1, 1, 2, 2, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7905714511871338, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(alpha)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.291773727399609, 2.2635707218790917, 2.2341403751136477, 2.1951622741254817, 2.142262983725229, 2.06709791442202, 1.9714089588261772, 1.8537730409831041, 1.7268026846117426, 1.5882378523108225, 1.467200786068203, 1.3808080561645057, 1.2962479284804465, 1.2338887922925375, 1.1841051106628662, 1.132490868046299, 1.1000750072407701, 1.0587661866860825, 1.0260645425267712, 1.0143923199943594, 0.9918255584823489, 0.9646001026189842, 0.9473697009843653, 0.930074411683378, 0.9179624917406085, 0.9016046280622199, 0.8793875707091751, 0.8713440361071445, 0.8659663674003492, 0.853330626392944, 0.8356582706142426, 0.8258248297466877, 0.8263065552179288, 0.8126090754686077, 0.8122603797547302, 0.7954584532142426, 0.791612618776628, 0.7824704051805037, 0.7883611832548677, 0.7788153477490397, 0.7646096102896305, 0.7686229163723977, 0.7527136926039445, 0.7561707353437613, 0.7540285822706231, 0.7507599800679473, 0.7417354717655834, 0.7357238276114065, 0.733069684251645, 0.7319533956553155, 0.7170624141412215, 0.7215392933057488, 0.7118060239837343, 0.7137202442739429, 0.7170598084396611, 0.7145171102011886, 0.7093403100998898, 0.7036833411052856, 0.6921516138926914, 0.6917589718497834, 0.6985135044183682, 0.6915506989161383, 0.691034507954582, 0.6936910021275168, 0.6822693039633736, 0.6777043726465973, 0.6824963640432946, 0.6754392392017177, 0.672811814657276, 0.6594827924548139, 0.6674292475130769, 0.6608301817134796, 0.6677948487921319, 0.6670891220748165, 0.6524001047469842, 0.6480891245183944], "accuracy": [0.12098798155784607, 0.19244486093521118, 0.254920095205307, 0.3093382716178894, 0.35186898708343506, 0.3951921761035919, 0.4212125241756439, 0.4422137141227722, 0.462950736284256, 0.5061418414115906, 0.5218597054481506, 0.5436534285545349, 0.5587108731269836, 0.5744287371635437, 0.5844670534133911, 0.6061286330223083, 0.6104874014854431, 0.6313564777374268, 0.6371681690216064, 0.6380926966667175, 0.6472064256668091, 0.6561880707740784, 0.6573768258094788, 0.6708492636680603, 0.6734909415245056, 0.6744155287742615, 0.6836613416671753, 0.6865671873092651, 0.6896050572395325, 0.6900013089179993, 0.6933034062385559, 0.700700044631958, 0.6995112895965576, 0.7040021419525146, 0.7066437602043152, 0.7112666964530945, 0.7092854380607605, 0.7108704447746277, 0.7129837274551392, 0.7143045663833618, 0.7199841737747192, 0.7217012047767639, 0.7205125093460083, 0.7235503792762756, 0.724739134311676, 0.7251353859901428, 0.7268524765968323, 0.7281733155250549, 0.7305507659912109, 0.7321357727050781, 0.7362303733825684, 0.7351737022399902, 0.743891179561615, 0.7364945411682129, 0.7343811988830566, 0.737022876739502, 0.7421740889549255, 0.7421740889549255, 0.7470611333847046, 0.7469290494918823, 0.7387399077415466, 0.7442874312400818, 0.739928662776947, 0.7453441023826599, 0.7465327978134155, 0.744419515132904, 0.7473253011703491, 0.7491744756698608, 0.7464007139205933, 0.7539294958114624, 0.7516840696334839, 0.7534011602401733, 0.7497028112411499, 0.7540615797042847, 0.754589855670929, 0.755118191242218], "val_loss": [1.9469548634120397, 1.9201486451285226, 1.8875597545078822, 1.844141619546073, 1.7837213107517786, 1.7020890712738037, 1.5962840488978796, 1.4713821411132812, 1.338932888848441, 1.2119724750518799, 1.10233473777771, 1.015956163406372, 0.9485655512128558, 0.8930680751800537, 0.8490873745509556, 0.8143763542175293, 0.7873353787830898, 0.7603055579321725, 0.7383694989340646, 0.7219484533582415, 0.7078739404678345, 0.6955143213272095, 0.6833583116531372, 0.6706546374729702, 0.6611353840146746, 0.6527661255427769, 0.6431500571114677, 0.6365070343017578, 0.6289158889225551, 0.6226847852979388, 0.6163596085139683, 0.609431232724871, 0.6062221527099609, 0.5991725070135934, 0.5939360516411918, 0.5910349914005825, 0.5854319334030151, 0.5835918358394078, 0.5785952465874808, 0.5743270771844047, 0.5712492125374931, 0.5672287430082049, 0.5666125331606183, 0.5616768428257534, 0.5590146780014038, 0.5569853442055839, 0.5524087803704398, 0.5522819587162563, 0.5473504407065255, 0.5452647038868496, 0.5449243783950806, 0.5409196615219116, 0.5384144612721035, 0.5362557513373238, 0.5378994771412441, 0.5315734829221453, 0.5311204195022583, 0.5278275183268956, 0.5280558041163853, 0.5240333761487689, 0.5239534378051758, 0.5203921113695417, 0.5197597231183734, 0.5169961793082101, 0.5147365161350795, 0.513226968901498, 0.5142219747815814, 0.5109388657978603, 0.5094422953469413, 0.5079550572804042, 0.5072640691484723, 0.5054705313273838, 0.5081674201147897, 0.506468517439706, 0.5040653603417533, 0.49964150360652376], "val_accuracy": [0.2329999953508377, 0.36133334040641785, 0.40799999237060547, 0.4426666796207428, 0.4819999933242798, 0.5109999775886536, 0.5609999895095825, 0.5773333311080933, 0.5856666564941406, 0.6143333315849304, 0.6383333206176758, 0.6566666960716248, 0.6679999828338623, 0.6740000247955322, 0.6830000281333923, 0.687333345413208, 0.6953333616256714, 0.6986666917800903, 0.7036666870117188, 0.7099999785423279, 0.7099999785423279, 0.7160000205039978, 0.7160000205039978, 0.7210000157356262, 0.718999981880188, 0.7250000238418579, 0.731333315372467, 0.7296666502952576, 0.7353333234786987, 0.7366666793823242, 0.7336666584014893, 0.7423333525657654, 0.7429999709129333, 0.7450000047683716, 0.7476666569709778, 0.7429999709129333, 0.7459999918937683, 0.7523333430290222, 0.7493333220481873, 0.75, 0.7549999952316284, 0.7540000081062317, 0.7586666941642761, 0.7563333511352539, 0.7590000033378601, 0.7613333463668823, 0.762666642665863, 0.7596666812896729, 0.7680000066757202, 0.768666684627533, 0.7573333382606506, 0.7693333625793457, 0.7680000066757202, 0.7693333625793457, 0.7630000114440918, 0.7703333497047424, 0.7706666588783264, 0.7699999809265137, 0.762666642665863, 0.7749999761581421, 0.7730000019073486, 0.7743333578109741, 0.7739999890327454, 0.7743333578109741, 0.7763333320617676, 0.7756666541099548, 0.7726666927337646, 0.7776666879653931, 0.7776666879653931, 0.7776666879653931, 0.781333327293396, 0.7806666493415833, 0.7766666412353516, 0.7753333449363708, 0.7776666879653931, 0.7789999842643738]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 8, 2, 8, 8, 1, 5, 4, 3, 3, 6, 2, 5, 9, 3, 2, 6, 9, 7, 8, 7, 8, 4, 3, 9, 4], [2, 2, 3, 0, 1, 2, 2, 1, 0, 1, 2, 0, 3, 2, 3, 0], [18, 8, 39, 58, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7902857065200806, "mapping_values": [1, 9, 9, 6, 3, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(grad, tf.math.add(alpha, grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2917737768720152, 2.263570658897034, 2.2341405280025928, 2.19516865701062, 2.1422828347880403, 2.0671210999124163, 1.9714224815148216, 1.8537749772090104, 1.7267939398522076, 1.5882434391342433, 1.4672016223912006, 1.380813268071483, 1.2962547241342444, 1.2339162935024681, 1.1841426254058827, 1.1325248747831795, 1.1000922544678646, 1.0588069015474462, 1.0261198314835036, 1.0144395191577196, 0.991916178310741, 0.9646655525025627, 0.9473710544058014, 0.9300956332593814, 0.9180027522572815, 0.9016253548826697, 0.8794372281645897, 0.8713941465295175, 0.8659947312912685, 0.8533851761765027, 0.8356248114827349, 0.8258350203853194, 0.8263093843955752, 0.8125744990590164, 0.8122988065960322, 0.7955328616184597, 0.791628555331358, 0.7824584444705065, 0.7884002946638995, 0.7788114517813015, 0.7646392096838286, 0.7686473479470588, 0.7526793844113182, 0.756224547198042, 0.7540216868453731, 0.7508281309291939, 0.7417963653302951, 0.7357514421024406, 0.7330924212625549, 0.7319686089477141, 0.717041874889212, 0.7214970265428672, 0.7118382305595712, 0.7136390726123236, 0.7172289021562166, 0.7144754457987058, 0.7092435809410542, 0.7036244213352775, 0.692133989946292, 0.6916947291511759, 0.6984620597683412, 0.6915503546955752, 0.6910684404041253, 0.6936483385619265, 0.6822727070099107, 0.6777307000126837, 0.6825847852782739, 0.6755045058153812, 0.6728234875550155, 0.6595362491375262, 0.667415696309306, 0.6608381857252895, 0.6678866650355633, 0.6669960855540189, 0.6523536832152167, 0.6480522259131021], "accuracy": [0.12098798155784607, 0.19244486093521118, 0.254920095205307, 0.30920618772506714, 0.3517369031906128, 0.39506009221076965, 0.42108044028282166, 0.4422137141227722, 0.462950736284256, 0.5060097575187683, 0.5218597054481506, 0.5436534285545349, 0.5584467053413391, 0.5742966532707214, 0.5843349695205688, 0.6059965491294861, 0.6106194853782654, 0.6310923099517822, 0.6371681690216064, 0.6382247805595398, 0.6474705934524536, 0.655527651309967, 0.6571126580238342, 0.6705851554870605, 0.6729626059532166, 0.6740192770957947, 0.6837934255599976, 0.6864351034164429, 0.689869225025177, 0.6894729733467102, 0.6930392384529114, 0.7013604640960693, 0.6993792057037354, 0.7046625018119812, 0.7063795924186707, 0.7117950320243835, 0.7099458575248718, 0.71100252866745, 0.7132478952407837, 0.7148329019546509, 0.7206445932388306, 0.7213049530982971, 0.7201162576675415, 0.7238145470619202, 0.7238145470619202, 0.7252674698829651, 0.7272487282752991, 0.7284374833106995, 0.7305507659912109, 0.7317395210266113, 0.7359662055969238, 0.7360982894897461, 0.7437590956687927, 0.7364945411682129, 0.7334566116333008, 0.7375511527061462, 0.7420420050621033, 0.7421740889549255, 0.7473253011703491, 0.7473253011703491, 0.7383436560630798, 0.7445515990257263, 0.7396644949913025, 0.7446836829185486, 0.7471932172775269, 0.7441553473472595, 0.7469290494918823, 0.7486461400985718, 0.7460044622421265, 0.7537974119186401, 0.750759482383728, 0.7532690763473511, 0.7495707273483276, 0.7536653280258179, 0.7544577717781067, 0.7547219395637512], "val_loss": [1.9469547952924455, 1.9201484407697404, 1.887559413909912, 1.8441549709865026, 1.7837486948285783, 1.7021043300628662, 1.5962918145315987, 1.4713800294058663, 1.3389369079044886, 1.2119957038334437, 1.1023515633174352, 1.01596280506679, 0.9485769612448556, 0.893089839390346, 0.8491284847259521, 0.8144124065126691, 0.7873562404087612, 0.7603081975664411, 0.7384147473743984, 0.7219796521323067, 0.7078843627657209, 0.6955264125551496, 0.6833705220903669, 0.6706928355353219, 0.6611145223890033, 0.6527782508305141, 0.6431316988808768, 0.6364338908876691, 0.6288840430123466, 0.6225798981530326, 0.6163425104958671, 0.6093798535210746, 0.6062006439481463, 0.5991778544017247, 0.593969294003078, 0.5910849060331073, 0.5854638985225132, 0.58380845614842, 0.5785528421401978, 0.5742441415786743, 0.5712412084851947, 0.5672096865517753, 0.566628234727042, 0.5615865162440709, 0.5590648480824062, 0.5569277150290353, 0.5524111304964338, 0.5522803408758981, 0.5473019225256783, 0.5453308991023472, 0.5448697464806693, 0.5408960751124791, 0.5384281533105033, 0.5363224915095738, 0.5378772190638951, 0.5313874653407505, 0.5311539343425206, 0.5277656146458217, 0.5280038629259381, 0.524004374231611, 0.5241228001458305, 0.5204872403826032, 0.5197210311889648, 0.5170795236315046, 0.5147824968610492, 0.5135312761579242, 0.5142960378101894, 0.5109573091779437, 0.509455748966762, 0.5080673694610596, 0.5072860377175468, 0.505520258631025, 0.5081197363989693, 0.5065627608980451, 0.5040941919599261, 0.49978128501347135], "val_accuracy": [0.2329999953508377, 0.36133334040641785, 0.40799999237060547, 0.4426666796207428, 0.4819999933242798, 0.5113333463668823, 0.5616666674613953, 0.5773333311080933, 0.5856666564941406, 0.6140000224113464, 0.6383333206176758, 0.6566666960716248, 0.6679999828338623, 0.6740000247955322, 0.6830000281333923, 0.687666654586792, 0.6953333616256714, 0.6990000009536743, 0.70333331823349, 0.7096666693687439, 0.7110000252723694, 0.715666651725769, 0.715666651725769, 0.7213333249092102, 0.718999981880188, 0.7256666421890259, 0.731333315372467, 0.7286666631698608, 0.7353333234786987, 0.7366666793823242, 0.7333333492279053, 0.7423333525657654, 0.7429999709129333, 0.7446666955947876, 0.7473333477973938, 0.7433333396911621, 0.7459999918937683, 0.7526666522026062, 0.75, 0.75, 0.7540000081062317, 0.7536666393280029, 0.7593333125114441, 0.7570000290870667, 0.7590000033378601, 0.7613333463668823, 0.762333333492279, 0.7593333125114441, 0.7673333287239075, 0.7680000066757202, 0.7576666474342346, 0.7693333625793457, 0.7680000066757202, 0.7699999809265137, 0.762333333492279, 0.7699999809265137, 0.7720000147819519, 0.7696666717529297, 0.762666642665863, 0.7743333578109741, 0.7736666798591614, 0.7743333578109741, 0.7730000019073486, 0.7743333578109741, 0.7756666541099548, 0.7753333449363708, 0.7730000019073486, 0.7776666879653931, 0.7776666879653931, 0.7773333191871643, 0.781000018119812, 0.7799999713897705, 0.7770000100135803, 0.7743333578109741, 0.778333306312561, 0.7796666622161865]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [2, 4, 9, 8, 8, 1, 7, 0, 3, 3, 0, 7, 8, 9, 3, 4, 6, 9, 7, 8, 0, 1, 4, 9, 3, 4, 1, 3, 1, 4, 8, 1, 3, 7, 9, 2, 6, 3, 1, 8, 2, 4, 6, 5], [1, 2, 3, 1, 1, 1, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0, 0, 1, 1, 2, 0, 2, 3, 0, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [38, 57]], "fitness": -0.2174285650253296, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.8391929205303823, 2.3083744988764567, 2.304045379279926, 2.303320373164318, 2.3032741081193455, 2.30300244257167, 2.30225505461672, 2.2671207510296063, 4.290145604082339, 2.315741526184616, 2.30542246827108, 2.303061355862399, 2.3027318494509808], "accuracy": [0.18055738508701324, 0.09536388516426086, 0.09734513610601425, 0.09932637959718704, 0.09655263274908066, 0.10051512718200684, 0.10527011007070541, 0.14529123902320862, 0.15598995983600616, 0.1002509593963623, 0.09615638852119446, 0.10368511080741882, 0.09972262382507324], "val_loss": [1.9841835158211845, 1.9747695241655623, 1.9737743650163924, 1.9736674853733607, 1.9735586302621024, 1.973574434007917, 1.9714394978114538, 1.5594421454838343, 1.992138385772705, 1.9778059550694056, 1.9743598529270716, 1.97317293712071, 1.9725852012634277], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.11166666448116302, 0.10000000149011612, 0.10000000149011612, 0.37833333015441895, 0.09866666793823242, 0.09833333641290665, 0.09833333641290665, 0.10133333504199982, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 12, 7, 5, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 8, 8, 8, 2, 5, 5, 3, 3, 6, 2, 5, 9, 3, 2, 6, 9, 7, 8, 7, 8, 4, 3, 9, 4], [2, 2, 3, 0, 1, 2, 2, 1, 0, 1, 2, 0, 3, 2, 3, 0], [98, 58, 15, 36, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [9, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), grad)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3028603745426373, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09906221181154251, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 6, 2, 8, 8, 3, 7, 0, 3, 3, 3, 7, 8, 9, 3, 2, 2, 9, 7, 8, 7, 1, 4, 9], [1, 2, 3, 1, 2, 2, 2, 2, 1, 1, 2, 1, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 33, 33, 21, 12, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 12, 7, 5, 2], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), tf.math.multiply(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), alpha)), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.sqrt(grad), grad), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))))))), tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(grad, grad)))), tf.math.sqrt(alpha))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)))))), tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma))))))", "other_info": {"loss": [2.3725675974130285, 2.6274491799994073, 4.326168053689618, 19.54676490282858, 153.6984284854033, 1363.527404954452, 12569.42307329159, 120434.87360900146, 1179289.421905957, 11819064.606789064], "accuracy": [0.022454101592302322, 0.0136045441031456, 0.024963676929473877, 0.0474177785217762, 0.0874389111995697, 0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.09574978692191, 2.564577102661133, 6.499462127685547, 43.59612383161272, 370.2412370954241, 3366.3850446428573, 31082.54910714286, 310607.4910714286, 3061292.1428571427, 30817051.42857143], "val_accuracy": [0.006000000052154064, 0.01666666753590107, 0.032999999821186066, 0.07199999690055847, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [98, 8, 15, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [3, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [9, 9, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [9, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3028521238930897, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09760929644107819, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [2, 4, 9, 8, 8, 1, 7, 0, 3, 3, 0, 7, 8, 9, 3, 4, 6, 9, 7, 8, 0, 1, 4, 9, 3, 4, 1, 3, 1, 4, 8, 1, 3, 7, 9, 2, 6, 3, 1, 8, 2, 4, 6, 5], [1, 2, 3, 1, 1, 1, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0, 0, 1, 1, 2, 0, 2, 3, 0, 3, 0], [18, 4, 39, 58, 98, 52, 94, 1], [1, 1, 1, 1, 0, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [5, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3, 4], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [2, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [32, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 8, 4, 4, 2], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), alpha)))), alpha)))))))))), lambda shape,  alpha, beta, grad: tf.math.square(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 6, 5, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 2, 1, 9, 4], [1, 2, 3, 1, 2, 2, 2, 2, 1, 1, 2, 2, 3, 2, 3, 0], [64, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 33, 33, 21, 12, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 8, 4, 4, 2], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), tf.math.multiply(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), alpha)), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.sqrt(grad), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))))))))), tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad)))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))))), tf.math.add(tf.math.add(alpha, alpha), grad)))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9, 3, 3, 4, 2, 3, 3, 8], [2, 2, 3, 0, 1, 2, 2, 1, 0, 1, 2, 0, 3, 2, 3, 0, 3, 0, 3], [98, 58, 15, 36, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 6, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 50, 50, 31, 19, 8, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.add(tf.math.sqrt(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))))))))))), tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, grad))), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08466517180204391, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 4, 2, 8, 8, 1, 7, 0, 1, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9, 9, 4], [1, 2, 3, 1, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3, 1], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 2, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 19, 19, 11, 8, 0, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.add(alpha, grad), alpha))), alpha)), tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.multiply(grad, grad))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(grad, tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 2, 4, 9, 9, 4, 6, 9], [1, 2, 3, 1, 1, 2, 2, 2, 2, 1, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.09799999743700027, "mapping_values": [1, 41, 41, 28, 13, 6, 11, 11, 8, 3, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 50, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.negative(alpha)), tf.math.multiply(tf.math.multiply(tf.math.add(alpha, grad), grad), alpha)), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), alpha), tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)), grad)))), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))))))))))))), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(tf.math.square(tf.math.add(beta, tf.math.square(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.8417969552391416, 2.308497327020565, 2.3040929133188865, 2.303328084498506, 2.3033819684829884, 2.303065468149887, 2.302847362071642, 2.3018678935480126, 2.261035712734268, 2.3130264309308846, 2.303405267718981, 2.3030982151668873, 2.3030552042473764], "accuracy": [0.18016114830970764, 0.09615638852119446, 0.09919429570436478, 0.09787346422672272, 0.09893012791872025, 0.09536388516426086, 0.10157178342342377, 0.09945846349000931, 0.18359529972076416, 0.1006472036242485, 0.09708096832036972, 0.09694888442754745, 0.09126931428909302], "val_loss": [1.9844355583190918, 1.9748808315822057, 1.9737960270472936, 1.9736371721540178, 1.9736086981637138, 1.9737811088562012, 1.9733424867902483, 1.970228672027588, 2.012145451136998, 1.9747531754629952, 1.9739768164498466, 1.9737532479422433, 1.9737161227634974], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.10066666454076767, 0.10000000149011612, 0.10000000149011612, 0.16233333945274353, 0.10066666454076767, 0.09966666996479034, 0.09966666996479034, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 4, 2, 2, 8, 1, 7, 0, 3, 6, 3, 7, 5, 9, 3, 4, 6, 9, 1, 5, 2, 1, 4, 3, 9, 4, 4, 7, 0, 5], [2, 2, 3, 0, 1, 2, 2, 1, 1, 1, 2, 0, 3, 2, 3, 0, 2, 3], [98, 58, 15, 36, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.08142857253551483, "mapping_values": [1, 48, 48, 30, 18, 6, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.add(tf.math.square(tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), alpha), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), alpha))))))))), grad)))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), grad)))), tf.math.add(alpha, grad))), tf.math.pow(tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.add(alpha, grad), tf.math.negative(tf.math.square(tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))), grad))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.8374126427650075, 2.30845137565773, 2.304176762087974, 2.3033004814780793, 2.3032947729103412, 2.303064596257772, 2.30272168043094, 2.298288476308103, 2.22826423976935, 2.239445548346644, 2.306559251677705, 2.3036809473021345, 2.3032681845938447], "accuracy": [0.18042530119419098, 0.09642054885625839, 0.10038304328918457, 0.09787346422672272, 0.09840179979801178, 0.09734513610601425, 0.10210011899471283, 0.11094967275857925, 0.1736890822649002, 0.17817988991737366, 0.09959053993225098, 0.09774138033390045, 0.09813763201236725], "val_loss": [1.9848673684256417, 1.974775927407401, 1.9738407135009766, 1.97365174974714, 1.9736202103751046, 1.9737206867762975, 1.9729393550327845, 1.945873192378453, 1.9673911503383092, 1.9812077113560267, 1.9746284484863281, 1.973947525024414, 1.9737742287772042], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.0976666659116745, 0.10000000149011612, 0.10000000149011612, 0.2006666660308838, 0.10166666656732559, 0.09799999743700027, 0.09966666996479034, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 7, 2, 8, 8, 1, 7, 0, 1, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9, 9, 4], [1, 2, 3, 1, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 7, 7, 4, 3, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3025572212412215, 2.301384577614489, 2.3029383090760778, 2.3028660526270595, 2.3031186932790644, 2.3019920617928515], "accuracy": [0.09245806187391281, 0.08928807079792023, 0.08717474341392517, 0.08994849026203156, 0.08981640636920929, 0.09259014576673508], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 5, 8, 1, 7, 0, 3, 8, 5, 7, 8, 9, 3, 3, 6, 3, 2, 8, 7, 1, 4, 9, 9, 4], [1, 2, 3, 1, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 39, 39, 26, 13, 5, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, grad)), grad))), alpha)))))), tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), alpha))))), tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))), grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3025572212412215, 2.301384577614489, 2.3029383090760778, 2.3028660526270595, 2.3031186932790644, 2.3019920617928515], "accuracy": [0.09245806187391281, 0.08928807079792023, 0.08717474341392517, 0.08994849026203156, 0.08981640636920929, 0.09259014576673508], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 2, 9, 2, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [0, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3025572212412215, 2.301384577614489, 2.3029383090760778, 2.3028660526270595, 2.3031186932790644, 2.3019920617928515], "accuracy": [0.09245806187391281, 0.08928807079792023, 0.08717474341392517, 0.08994849026203156, 0.08981640636920929, 0.09259014576673508], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [1, 2, 3, 1, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 2, 0, 1, 3, 3], [28, 57]], "fitness": -0.034285712987184525, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, beta))", "other_info": {"loss": [2.303043535278143, 2.3027139204746034, 2.305711182054039, 2.3070920697135255, 2.3089984839760223, 2.309174265733658], "accuracy": [0.09179764986038208, 0.08638224750757217, 0.08215559273958206, 0.0816272646188736, 0.08017434924840927, 0.08057060092687607], "val_loss": [1.9719670159476144, 1.9728349958147322, 1.9738774980817522, 1.975093160356794, 1.9761061668395996, 1.9773670605250768], "val_accuracy": [0.03700000047683716, 0.029333332553505898, 0.0273333340883255, 0.024000000208616257, 0.02033333294093609, 0.020999999716877937]}}]