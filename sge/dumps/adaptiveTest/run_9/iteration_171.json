[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [9, 2, 2, 0, 6, 2, 1, 9], [0, 2, 3, 0, 3, 2, 2, 1], [54, 7, 47], [0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.8382856845855713, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1003992435970265, 1.7430738463708517, 1.287756288638913, 1.03779259785811, 0.8206366427334276, 0.7976721903871882, 0.7396926213375188, 0.6818774562265579, 0.6554385756677908, 0.6205848557853648, 0.6356727103704569, 0.5764765138985726, 0.589941599105784, 0.5849216439232393, 0.5467071043438899, 0.556775986494846, 0.5215199179637386, 0.513564065218822, 0.5234999607905515, 0.4918272084233122, 0.4862284852828269, 0.4717169762988211, 0.48332821375752766, 0.44863622068272385, 0.45153831827831054, 0.4375852226282013, 0.43568858023269885, 0.40206329694765436, 0.4105870352090861, 0.3952079121982417, 0.407306988847695, 0.4141719484404802, 0.40617397128787763, 0.37818153508980795, 0.3774311369034781], "accuracy": [0.311319500207901, 0.40562674403190613, 0.5350680351257324, 0.6077136397361755, 0.6911900639533997, 0.6979262828826904, 0.7136441469192505, 0.7359662055969238, 0.7456082701683044, 0.7671377658843994, 0.7584202885627747, 0.7802139520645142, 0.7734777331352234, 0.7812706232070923, 0.7931581139564514, 0.7903843522071838, 0.8006868362426758, 0.8078193068504333, 0.8041210174560547, 0.8157442808151245, 0.8162726163864136, 0.8201030492782593, 0.8113855719566345, 0.8376700282096863, 0.8321225643157959, 0.8368775844573975, 0.8350284099578857, 0.8487650156021118, 0.8496896028518677, 0.8551049828529358, 0.8442742228507996, 0.8471800088882446, 0.8485008478164673, 0.8541803956031799, 0.8601241707801819], "val_loss": [1.7182504108973913, 1.2869627816336495, 0.8278305019651141, 0.6784823622022357, 0.6843561955860683, 0.5860274519239154, 0.573485119002206, 0.5119473934173584, 0.5214240891592843, 0.4803663492202759, 0.4621834414345877, 0.5004283530371529, 0.5064596618924823, 0.43772525446755545, 0.4400590402739389, 0.4291295324053083, 0.461635913167681, 0.4163241386413574, 0.46767442567007883, 0.3829344170434134, 0.38449608428137644, 0.38398782696042744, 0.39504473549979074, 0.3897360563278198, 0.37078109809330534, 0.36258385862622944, 0.35870946305138723, 0.3635090844971793, 0.37254446744918823, 0.363615768296378, 0.36038368940353394, 0.37623735836574007, 0.35675030095236643, 0.3747107812336513, 0.3912854790687561], "val_accuracy": [0.2926666736602783, 0.4560000002384186, 0.5886666774749756, 0.6753333210945129, 0.6933333277702332, 0.7406666874885559, 0.721666693687439, 0.7606666684150696, 0.7519999742507935, 0.7820000052452087, 0.7960000038146973, 0.7590000033378601, 0.7706666588783264, 0.8069999814033508, 0.796999990940094, 0.8050000071525574, 0.7846666574478149, 0.8199999928474426, 0.7926666736602783, 0.8323333263397217, 0.8353333473205566, 0.8349999785423279, 0.8293333053588867, 0.8323333263397217, 0.8376666903495789, 0.8353333473205566, 0.843666672706604, 0.8433333039283752, 0.8296666741371155, 0.8446666598320007, 0.8370000123977661, 0.840666651725769, 0.843999981880188, 0.8346666693687439, 0.8366666436195374]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [5, 2, 9, 2, 6, 9, 1, 9], [3, 2, 3, 0, 3, 2, 2, 1], [54, 7, 47], [0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [1, 0, 0, 1, 3, 3], [47, 57]], "fitness": -0.8325714468955994, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.155829682027061, 2.1565723800545813, 1.8355193000191852, 1.251479615404338, 0.9976554525810194, 0.7848868124189945, 0.7643070093172416, 0.6904731764454553, 0.6665110190027126, 0.6320100193404093, 0.6428249294196358, 0.5768781613837521, 0.5731312979040775, 0.5762218466256636, 0.5410159405164904, 0.5403318604253396, 0.5036360669751697, 0.5028057116102376, 0.5393621822342566, 0.48331482914129914, 0.4934685301582307, 0.4780198030105876, 0.44959134734569683, 0.4631260635751728, 0.4432630083422698, 0.4420173965810769, 0.45914759272676275, 0.4443936799857689, 0.42547700048406223], "accuracy": [0.27565711736679077, 0.25201427936553955, 0.38621053099632263, 0.5604279637336731, 0.6221106648445129, 0.7047945857048035, 0.7096816897392273, 0.735569953918457, 0.7471932172775269, 0.7532690763473511, 0.7543256878852844, 0.7825914621353149, 0.7837802171707153, 0.7759873270988464, 0.7935543656349182, 0.7987055778503418, 0.8156121969223022, 0.8117818236351013, 0.7943468689918518, 0.8170651197433472, 0.8150838613510132, 0.8187822103500366, 0.8342359066009521, 0.8235371708869934, 0.8378021121025085, 0.8350284099578857, 0.8286884427070618, 0.8345000743865967, 0.8412362933158875], "val_loss": [1.9666625431605749, 2.0240723746163503, 1.1910718509129115, 0.7862543037959507, 0.6184364557266235, 0.6676630633217948, 0.5345072746276855, 0.5358041865485055, 0.49272678579602924, 0.5459063223430088, 0.4762434278215681, 0.4553009271621704, 0.4751415252685547, 0.44412900720323834, 0.4167168310710362, 0.42960132019860403, 0.41293543577194214, 0.48089912959507536, 0.43474472420556204, 0.4086193953241621, 0.4367507611002241, 0.4040948748588562, 0.3946972233908517, 0.38382794175829205, 0.3834444795336042, 0.4150011794907706, 0.3886633174760001, 0.39222897802080425, 0.3938186253820147], "val_accuracy": [0.10433333367109299, 0.35733333230018616, 0.5046666860580444, 0.6473333239555359, 0.7206666469573975, 0.6886666417121887, 0.7556666731834412, 0.749666690826416, 0.7746666669845581, 0.7433333396911621, 0.781333327293396, 0.7923333048820496, 0.7903333306312561, 0.8086666464805603, 0.8206666707992554, 0.8153333067893982, 0.8256666660308838, 0.7670000195503235, 0.8069999814033508, 0.8253333568572998, 0.8059999942779541, 0.8273333311080933, 0.8316666483879089, 0.8403333425521851, 0.8333333134651184, 0.8149999976158142, 0.8299999833106995, 0.8259999752044678, 0.8243333101272583]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [2, 9, 2, 0, 6, 4, 1, 9], [0, 2, 3, 3, 0, 2, 2], [43, 99, 47, 61], [0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [3, 0, 0, 1, 2, 3], [48, 57]], "fitness": -0.8271428346633911, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 2, 1, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1003847269885307, 1.7471587467250287, 1.2960228341965077, 0.9421865910256244, 0.8476699968102963, 0.724146927777629, 0.7289049584537118, 0.6822189983044948, 0.6737578143107972, 0.614837100799955, 0.6203927246964666, 0.5823227748453909, 0.5742909446714923, 0.5669412873030937, 0.5331524066826797, 0.5492717983101999, 0.5158073303249486, 0.5108709660550749, 0.519459342085816, 0.4934258663800761, 0.4796685748458649, 0.4771070282543655, 0.45368966668068755, 0.43693342247123906, 0.4625352417252807, 0.4406253257369038, 0.4205858426921639, 0.41648402975031, 0.4103006564544224, 0.3976692522419222, 0.412577400523532, 0.39681769667158606], "accuracy": [0.311319500207901, 0.4053625762462616, 0.5279355645179749, 0.6362435817718506, 0.6794346570968628, 0.724210798740387, 0.7235503792762756, 0.7397965788841248, 0.7446836829185486, 0.7697794437408447, 0.7701756954193115, 0.7788931727409363, 0.7858935594558716, 0.7881389260292053, 0.8020076751708984, 0.7952714562416077, 0.8042530417442322, 0.8090080618858337, 0.8047813773155212, 0.8131026029586792, 0.8214238286018372, 0.8198388814926147, 0.8310658931732178, 0.8412362933158875, 0.8286884427070618, 0.8362171649932861, 0.8475762605667114, 0.8442742228507996, 0.8465195894241333, 0.8519350290298462, 0.8462554216384888, 0.8552370667457581], "val_loss": [1.7187464577811105, 1.279463733945574, 0.7792946951729911, 0.759672931262425, 0.6032131229128156, 0.5723728793007987, 0.5397233452115741, 0.5528745651245117, 0.5079064880098615, 0.5312048877988543, 0.47592522416796, 0.5284862858908517, 0.5003114598137992, 0.4447248748370579, 0.4220617839268276, 0.42225789172308786, 0.4547865731375558, 0.44433718068259104, 0.43621130500520977, 0.3917357325553894, 0.446918249130249, 0.3905834811074393, 0.38514076811926706, 0.4195952074868338, 0.39084237813949585, 0.37117181505475727, 0.37345993518829346, 0.37090870312282015, 0.36738251788275583, 0.36832531860896517, 0.3980041912623814, 0.3859340378216335], "val_accuracy": [0.2926666736602783, 0.4620000123977661, 0.637666642665863, 0.6613333225250244, 0.7300000190734863, 0.7323333621025085, 0.7546666860580444, 0.7423333525657654, 0.7580000162124634, 0.746666669845581, 0.7776666879653931, 0.7546666860580444, 0.7636666893959045, 0.8046666383743286, 0.815666675567627, 0.815666675567627, 0.7866666913032532, 0.7906666398048401, 0.8086666464805603, 0.8299999833106995, 0.793666660785675, 0.8303333520889282, 0.8299999833106995, 0.8136666417121887, 0.8309999704360962, 0.8336666822433472, 0.8463333249092102, 0.8353333473205566, 0.8363333344459534, 0.8429999947547913, 0.8223333358764648, 0.8343333601951599]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [9, 2, 2, 0, 6, 2, 1, 9], [0, 2, 3, 0, 3, 2, 2, 1], [54, 7, 47], [1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.7931428551673889, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1378398941901886, 1.9644798289169143, 1.593842014660531, 1.0894101179192457, 0.8978093554630036, 0.8220079617335923, 0.7465774584691979, 0.7102692593137554, 0.6616630875092803, 0.6037871089625305, 0.6007362509668149, 0.6025060623502372, 0.5850829965544572, 0.5548080243312955], "accuracy": [0.28463876247406006, 0.3863426148891449, 0.4807819426059723, 0.6103553175926208, 0.6700568199157715, 0.6900013089179993, 0.7161537408828735, 0.7240787148475647, 0.7493065595626831, 0.7716285586357117, 0.772288978099823, 0.7718927264213562, 0.7812706232070923, 0.7921014428138733], "val_loss": [1.3153505325317383, 1.6953789166041784, 1.028973068509783, 0.8081731796264648, 0.6217277560915265, 0.570199830191476, 0.5775141545704433, 0.5504716975348336, 0.4943817513329642, 0.49967263426099506, 0.5109414884022304, 0.5100880180086408, 0.5000262430735997, 0.476382919720241], "val_accuracy": [0.5603333115577698, 0.3466666638851166, 0.5916666388511658, 0.6913333535194397, 0.7260000109672546, 0.753000020980835, 0.7300000190734863, 0.753333330154419, 0.7896666526794434, 0.7803333401679993, 0.7853333353996277, 0.7599999904632568, 0.7826666831970215, 0.765666663646698]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [9, 2, 2, 0, 6, 2, 1, 9], [0, 2, 3, 0, 3, 2, 2, 1], [60, 55, 47, 61], [0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 2, 3], [13, 57]], "fitness": -0.488571435213089, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.301625131001924, 2.3004267376333005, 2.2989993416921353, 2.2981500911233983, 2.297863689758176, 2.2936553045617214, 2.2937568696482686, 2.2931327764400007, 2.2921835531285883, 2.288513452306699, 2.288630349713861, 2.2863018561536923, 2.2867109029520742, 2.2837674242394272, 2.2844831122225933, 2.283200486020295, 2.282235023257692, 2.280820397338091, 2.2790598273828375, 2.2778269427721103, 2.2776586453298364, 2.2748667450313946, 2.274337187891607, 2.2711421342463525, 2.2700225564986645, 2.2705001193361354, 2.2669784329932963, 2.266302667824883, 2.266873506333897, 2.263616373573296, 2.2635882742227644, 2.2627950645220545, 2.2607966781591524, 2.2579647037315644, 2.256676461860063, 2.2564827304364448, 2.253891779210951, 2.254092489613392, 2.251426912490891, 2.2488822857024506, 2.2474391337288777, 2.247354545802362, 2.247101562370509, 2.2456720093568525, 2.2416721988804444, 2.2414284709453773, 2.238003232806287, 2.2369330223163106, 2.2362674818125856, 2.234853824179139, 2.2327134753136413, 2.230689531933945, 2.228560283750575, 2.227122549021233, 2.226194034714221, 2.2214828948334713, 2.2208552284011467, 2.2197434278983703, 2.2173771909545708, 2.2157206185788936, 2.2134484354499593, 2.2134482911580653, 2.209691604146427, 2.2072420208729047, 2.206525533836374, 2.20492564868209, 2.2017035866300145, 2.199675975049318, 2.1981154805428913, 2.196071698507849, 2.192635642727998, 2.1912352175933654, 2.1879189019158467, 2.186282437601267, 2.183375200779998, 2.1813630630405996, 2.1778526069024897, 2.175434770427911, 2.1718812850110205, 2.1692473769676037, 2.1676809002678894, 2.1670012759368777, 2.163388167295505, 2.1589913811618784, 2.1553278998802083, 2.1526836413969344, 2.150102138676742, 2.149226545169605, 2.1467248812453654, 2.138643717296592, 2.138760015933332, 2.134408432337366, 2.132964036058772, 2.1315091377739988, 2.124205235398252, 2.120727775308198, 2.119024121199207, 2.1156357195651005, 2.1124057793393662, 2.1072272064978375], "accuracy": [0.09655263274908066, 0.09391097724437714, 0.0944393053650856, 0.10196803510189056, 0.09747721254825592, 0.11279883980751038, 0.11134592443704605, 0.11438383162021637, 0.11227050423622131, 0.12957337498664856, 0.13300752639770508, 0.1368379294872284, 0.1332716941833496, 0.1430458277463913, 0.14119666814804077, 0.14397041499614716, 0.14172500371932983, 0.14251750707626343, 0.14859332144260406, 0.15532954037189484, 0.1538766324520111, 0.16536785662174225, 0.16272619366645813, 0.16999074816703796, 0.1795007288455963, 0.1802932173013687, 0.18412363529205322, 0.1888786107301712, 0.18174614012241364, 0.18980319797992706, 0.19019944965839386, 0.19719983637332916, 0.2020869106054306, 0.21133272349834442, 0.21001188457012177, 0.2075023055076599, 0.2145027071237564, 0.20803064107894897, 0.2250693440437317, 0.22757892310619354, 0.23035265505313873, 0.23140932619571686, 0.22823932766914368, 0.23035265505313873, 0.24078720808029175, 0.23933430016040802, 0.2483159452676773, 0.2475234419107437, 0.254920095205307, 0.25584468245506287, 0.25782591104507446, 0.26376965641975403, 0.2654867172241211, 0.26403382420539856, 0.26720380783081055, 0.2833179235458374, 0.2727513015270233, 0.27777042984962463, 0.27777042984962463, 0.27961960434913635, 0.29045039415359497, 0.2779025137424469, 0.29639413952827454, 0.2919033169746399, 0.29480913281440735, 0.29203540086746216, 0.3028661906719208, 0.30418702960014343, 0.30801743268966675, 0.3135649263858795, 0.30603620409965515, 0.31158366799354553, 0.320169061422348, 0.320169061422348, 0.32782986760139465, 0.32545238733291626, 0.3339056968688965, 0.3234711289405823, 0.3287544548511505, 0.33060362935066223, 0.3319244384765625, 0.32967904210090637, 0.3411702513694763, 0.3416985869407654, 0.3498877286911011, 0.3451327383518219, 0.3559635579586029, 0.34183067083358765, 0.3543785512447357, 0.3593977093696594, 0.3572843670845032, 0.3575485348701477, 0.3591335415840149, 0.354510635137558, 0.3691718280315399, 0.36388853192329407, 0.3699643313884735, 0.36666226387023926, 0.3677189350128174, 0.3699643313884735], "val_loss": [1.970006057194301, 1.9687937327793665, 1.9675790922982352, 1.9663689477103097, 1.965163094656808, 1.9639496122087752, 1.962750026157924, 1.9615498270307268, 1.9603636605398995, 1.959160464150565, 1.9579648971557617, 1.956764084952218, 1.9555702890668596, 1.954371384211949, 1.953160354069301, 1.951951503753662, 1.9507571629115514, 1.949549334389823, 1.9483354432242257, 1.9471152850559779, 1.9459109987531389, 1.9446911811828613, 1.9434541974748885, 1.9422111511230469, 1.9409704208374023, 1.9397259439740862, 1.938455036708287, 1.9371846743992396, 1.9359168325151717, 1.9346222877502441, 1.9333372797284807, 1.9320379665919714, 1.9307290485927038, 1.9293879100254603, 1.9280430930001395, 1.9267017500741142, 1.925323418208531, 1.9239651816231864, 1.9225666863577706, 1.9211616516113281, 1.919741426195417, 1.9183171136038644, 1.9168710027422224, 1.915416649409703, 1.9139278956821986, 1.9124329430716378, 1.9109049524579729, 1.9093686512538366, 1.9078142302376884, 1.9062432561601912, 1.9046387672424316, 1.9030214037214006, 1.9013713427952357, 1.8997166497366769, 1.8980354581560408, 1.8963086945669991, 1.8945769582475935, 1.892805916922433, 1.8910254069737025, 1.8892126083374023, 1.8873727662222726, 1.885519300188337, 1.8836402211870467, 1.881711755480085, 1.8797623089381628, 1.8777906554085868, 1.8757781982421875, 1.8737129483904158, 1.8716412952968053, 1.8695295197623116, 1.8673746926443917, 1.8651914596557617, 1.862999371119908, 1.8607534681047713, 1.8584716660635812, 1.8561282839093889, 1.8537509100777763, 1.8513172694614954, 1.848853656223842, 1.846362863268171, 1.8438239097595215, 1.8412775993347168, 1.8386680739266532, 1.8359942436218262, 1.8332860810416085, 1.830507687159947, 1.8277059282575334, 1.8248953138078963, 1.8220164435250419, 1.8190676825387138, 1.8160972595214844, 1.8130833762032645, 1.8100151334490096, 1.8069336073739188, 1.8037717682974679, 1.8005294799804688, 1.797281333378383, 1.7939789635794503, 1.7906320435660226, 1.7872082846505302], "val_accuracy": [0.04833333194255829, 0.056333333253860474, 0.06233333423733711, 0.06566666811704636, 0.07533333450555801, 0.0860000029206276, 0.09200000017881393, 0.0989999994635582, 0.1106666699051857, 0.1223333328962326, 0.1326666623353958, 0.14266666769981384, 0.1509999930858612, 0.16233333945274353, 0.17466667294502258, 0.18799999356269836, 0.19833333790302277, 0.21199999749660492, 0.22433333098888397, 0.23199999332427979, 0.2396666705608368, 0.25099998712539673, 0.2626666724681854, 0.27533334493637085, 0.2849999964237213, 0.2926666736602783, 0.2983333468437195, 0.30433332920074463, 0.31333333253860474, 0.32199999690055847, 0.32899999618530273, 0.33500000834465027, 0.3413333296775818, 0.34433332085609436, 0.3490000069141388, 0.35366666316986084, 0.35600000619888306, 0.35766667127609253, 0.3619999885559082, 0.36399999260902405, 0.36500000953674316, 0.36800000071525574, 0.37166666984558105, 0.3733333349227905, 0.37400001287460327, 0.3766666650772095, 0.3779999911785126, 0.38066667318344116, 0.382999986410141, 0.38499999046325684, 0.3880000114440918, 0.39100000262260437, 0.3933333456516266, 0.3956666588783264, 0.3970000147819519, 0.3986666798591614, 0.4013333320617676, 0.40433332324028015, 0.4076666533946991, 0.40966665744781494, 0.41100001335144043, 0.414000004529953, 0.4153333306312561, 0.4183333218097687, 0.4206666648387909, 0.42133334279060364, 0.4243333339691162, 0.4259999990463257, 0.4286666810512543, 0.4309999942779541, 0.4320000112056732, 0.4326666593551636, 0.4339999854564667, 0.437333345413208, 0.43833333253860474, 0.43966665863990784, 0.4423333406448364, 0.44466665387153625, 0.44566667079925537, 0.4480000138282776, 0.4490000009536743, 0.45133334398269653, 0.453000009059906, 0.45533332228660583, 0.4556666612625122, 0.4580000042915344, 0.4606666564941406, 0.4623333215713501, 0.4633333384990692, 0.4663333296775818, 0.4673333466053009, 0.46933332085609436, 0.4723333418369293, 0.47600001096725464, 0.4776666760444641, 0.4803333282470703, 0.48266667127609253, 0.48500001430511475, 0.4866666793823242, 0.48766666650772095]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [6, 2, 2, 4, 6, 5, 1, 9], [0, 2, 3, 3, 0, 2, 2], [82, 55, 47, 61], [0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [3, 0, 0, 1, 2, 3], [29, 57]], "fitness": -0.3645714223384857, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.4314626086704516, 2.117328646727494, 2.395100375397047, 2.2214271232767224, 2.307100529054121, 2.3022750555768288], "accuracy": [0.1830669641494751, 0.2748646140098572, 0.2090873122215271, 0.1728965789079666, 0.10051512718200684, 0.10289261490106583], "val_loss": [1.7755041803632463, 1.8958319936479842, 1.9781420571463448, 1.98249237877982, 1.9735300200326102, 1.971236024584089], "val_accuracy": [0.34566667675971985, 0.24899999797344208, 0.1003333330154419, 0.09933333098888397, 0.125, 0.10700000077486038]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [9, 2, 2, 0, 6, 2, 1, 9], [0, 2, 3, 1, 0, 2, 2], [74, 55, 47, 61], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [1, 1, 0, 1, 3, 3], [48, 57]], "fitness": -0.13914285600185394, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.429697650975681, 2.0940692836361916, 2.2884892090326443, 2.124306005478031, 1.7386532515708593, 1.741442547828892, 1.495032951847878, 1.4923681656225656, 1.429356661785737, 1.4206742833492354, 1.3726896063495133, 1.347693277309127, 1.767674031227398], "accuracy": [0.18280279636383057, 0.2977149784564972, 0.2550521790981293, 0.22678641974925995, 0.41751420497894287, 0.4181746244430542, 0.4823669195175171, 0.49253731966018677, 0.505349338054657, 0.5105006098747253, 0.5005943775177002, 0.5303130149841309, 0.37828555703163147], "val_loss": [1.7807202339172363, 1.167046206338065, 1.9770467621939523, 1.3386860915592738, 1.2230213710239954, 1.100637708391462, 1.1883553777422224, 0.9392197813306536, 0.9049597467694964, 0.9005692686353411, 0.892625093460083, 1.7668156623840332, 1.0287112167903356], "val_accuracy": [0.3346666693687439, 0.5746666789054871, 0.09866666793823242, 0.4586666524410248, 0.5603333115577698, 0.5673333406448364, 0.578000009059906, 0.653333306312561, 0.6169999837875366, 0.6143333315849304, 0.6380000114440918, 0.23066666722297668, 0.49900001287460327]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [9, 9, 2, 0, 6, 4, 1, 9], [0, 2, 3, 1, 0, 2, 2], [43, 99, 47, 61], [0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [3, 3, 0, 1, 2, 3], [97, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, sigma))", "other_info": {"loss": [2.3026764176194505, 2.30451217202809, 2.3063336593316546, 2.30903742316849, 2.3131850559666423, 2.313053360011804, 2.3184279525095777, 2.3242305567109938, 2.332410004853478, 2.3387664764186633, 2.3734757088399316, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.08625016361474991, 0.08057060092687607, 0.07991018146276474, 0.07792893797159195, 0.08070268481969833, 0.07489103078842163, 0.07621186226606369, 0.07317395508289337, 0.0796460211277008, 0.0758156105875969, 0.09826971590518951, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9723059109279089, 1.973639828818185, 1.9751543317522322, 1.9771591595241003, 1.9794462067740304, 1.9816884994506836, 1.9848200934273856, 1.988417148590088, 1.9946798597063338, 2.006082534790039, 2.0517938477652415, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03400000184774399, 0.028999999165534973, 0.02500000037252903, 0.026000000536441803, 0.029999999329447746, 0.03733333200216293, 0.05066666752099991, 0.06666667014360428, 0.08266666531562805, 0.09799999743700027, 0.09933333098888397, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [9, 2, 2, 0, 6, 2, 1, 9], [0, 2, 3, 0, 3, 2, 2, 1], [82, 99, 47, 61], [0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [1, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [0, 0, 0, 1, 3, 3], [23, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 4, 2, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [115.0503814955744, 1591.2456813132553, 6796.260843571482, 18801.863899356922, 39325.45123249901, 72150.34267785795], "accuracy": [0.10619468986988068, 0.10091137140989304, 0.10157178342342377, 0.0936468094587326, 0.10210011899471283, 0.10408136248588562], "val_loss": [359.23617117745533, 2445.8943219866073, 7926.756696428572, 18460.801897321428, 35700.99888392857, 61303.046875], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [2, 9, 2, 0, 6, 4, 1, 9], [0, 2, 3, 3, 0, 2, 2], [60, 39, 47, 61], [0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [0, 0, 0, 1, 2, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [95439309.5944939, 1822862202.3362832, 8365376169.404305, 23761544520.52939, 50356521760.9679, 93143434731.91493], "accuracy": [0.10659094154834747, 0.10117553919553757, 0.1014397069811821, 0.0936468094587326, 0.10196803510189056, 0.10394927859306335], "val_loss": [368101211.4285714, 2942741211.428571, 9929427529.142857, 23533703168.0, 45960715117.71429, 79416751835.42857], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 9, 2, 0, 6, 4, 1, 9], [0, 2, 3, 3, 0, 2, 2], [91, 99, 47, 61], [0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3, 5, 6, 4, 8, 8, 7, 5], [3, 0, 0, 1, 2, 3, 3, 0, 2, 0], [48, 57, 62, 72]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 25, 15, 10, 4], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(tf.math.pow(tf.math.add(tf.math.subtract(sigma, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha), beta)), sigma)), tf.math.square(tf.math.divide_no_nan(tf.math.pow(tf.math.sqrt(tf.math.sqrt(tf.math.add(sigma, tf.math.square(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))))), beta), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.3027440520986793, 2.3025841848992905, 2.3025748563118267, 2.302570972491753, 2.3025774598956157, 2.3025735674784906], "accuracy": [0.10896842926740646, 0.09840179979801178, 0.09998679161071777, 0.10051512718200684, 0.09813763201236725, 0.1014397069811821], "val_loss": [1.973649297441755, 1.9736446653093611, 1.9736424854823522, 1.973639760698591, 1.9736395563398088, 1.9736388070242745], "val_accuracy": [0.09966666996479034, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09966666996479034, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [2, 6, 2, 0, 6, 4, 1, 9], [0, 2, 3, 3, 0, 2, 2], [54, 7, 47], [1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [2, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302132393438047, 2.302342465367567, 2.302977494748828, 2.305283990660206, 2.3199860212305645, 2.472500400111156], "accuracy": [0.10672302544116974, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9737146922520228, 1.9739869662693568, 1.9751876422337122, 1.9807923180716378, 2.016474723815918, 2.624206611088344], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [5, 2, 9, 2, 6, 9, 1, 9], [5, 2, 3, 1, 0, 2, 2], [54, 7, 47], [1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [0, 0, 0, 1, 2, 3], [47, 57, 35]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 12, 7, 5, 3], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, beta)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10289261490106583, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [9, 2, 2, 0, 6, 2, 1, 9], [0, 2, 3, 3, 0, 2, 2], [54, 7, 47], [1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 5, 0, 4, 7, 8, 4], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 3, 2, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(alpha))", "other_info": {"loss": [2.3026763861284216, 2.304512095536381, 2.3063337358233635, 2.3090382105386835, 2.3131864637415944, 2.3130567970056704, 2.318436886356995, 2.32424782664312, 2.332434053449992, 2.3388090530768864, 2.373615162074369, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.08625016361474991, 0.0804385170340538, 0.07991018146276474, 0.07792893797159195, 0.08070268481969833, 0.07475894689559937, 0.07607977837324142, 0.07317395508289337, 0.0796460211277008, 0.0758156105875969, 0.09813763201236725, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9723059109279089, 1.973639760698591, 1.9751527650015694, 1.9771600450788225, 1.9794507026672363, 1.981696537562779, 1.9848363740103585, 1.988433906010219, 1.9947048595973425, 2.0061377797807967, 2.052098819187709, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03400000184774399, 0.028999999165534973, 0.02500000037252903, 0.026000000536441803, 0.029999999329447746, 0.03733333200216293, 0.05066666752099991, 0.06666667014360428, 0.08266666531562805, 0.09799999743700027, 0.09933333098888397, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1], [4, 2, 2, 4, 6, 1, 1, 9], [2, 2, 3, 3, 0, 2, 2], [54, 7, 47], [1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 4, 7, 8, 4], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 7, 7, 3, 4, 0, 1, 0, 0, 0, 0, 3, 2, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, grad))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10289261490106583, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [8, 2, 9, 2, 6, 9, 1, 9], [0, 2, 3, 1, 0, 2, 2], [54, 7, 47], [0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 2, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 12, 7, 5, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, beta))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10289261490106583, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [2, 9, 2, 0, 6, 4, 1, 9], [0, 2, 3, 3, 0, 2, 2], [43, 99, 47, 61], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [3, 0, 0, 1, 2, 3], [48, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 2, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302164800383427, 2.3022957656834153, 2.302174049613498, 2.3026336558254688, 2.3036734114674497, 2.3008153700258567], "accuracy": [0.09642054885625839, 0.08994849026203156, 0.08677849918603897, 0.09166556596755981, 0.08638224750757217, 0.09734513610601425], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [9, 2, 2, 0, 6, 2, 1, 9], [0, 2, 3, 3, 0, 2, 2], [10, 99, 47, 61], [1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [5, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 2, 3], [48, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(sigma, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302164800383427, 2.3022957656834153, 2.302174049613498, 2.3026336558254688, 2.3036734114674497, 2.3008153700258567], "accuracy": [0.09642054885625839, 0.08994849026203156, 0.08677849918603897, 0.09166556596755981, 0.08638224750757217, 0.09734513610601425], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [5, 2, 9, 2, 6, 9, 1, 9], [0, 2, 3, 1, 0, 2, 2], [43, 99, 47, 61], [0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [3, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [3, 0, 0, 1, 2, 3], [48, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302164800383427, 2.3022957656834153, 2.302174049613498, 2.3026336558254688, 2.3036734114674497, 2.3008153700258567], "accuracy": [0.09642054885625839, 0.08994849026203156, 0.08677849918603897, 0.09166556596755981, 0.08638224750757217, 0.09734513610601425], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [5, 2, 9, 2, 6, 9, 1, 9], [0, 2, 3, 1, 0, 2, 2], [60, 55, 47, 61], [0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [1, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [3, 0, 0, 1, 2, 3], [26, 57]], "fitness": -0.007428571581840515, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.309764888040646, 2.3302702087815, 2.354529493662187, 2.387017625717518, 2.4337809485782014, 2.5019040427675905], "accuracy": [0.08175934851169586, 0.04649319872260094, 0.026680756360292435, 0.017170783132314682, 0.013340378180146217, 0.01241579744964838], "val_loss": [1.9887471880231584, 2.0087810243879045, 2.0335797582353865, 2.0665591784885953, 2.1148689814976285, 2.196476868220738], "val_accuracy": [0.00566666666418314, 0.004000000189989805, 0.004000000189989805, 0.003666666569188237, 0.004000000189989805, 0.005333333276212215]}}]