[{"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 5, 2, 8, 8, 0, 9, 0, 3, 3, 3, 0, 8, 9, 3, 4, 9, 6, 7, 8, 7, 1, 4, 9], [2, 2, 1, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [98, 8, 15, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [51, 57]], "fitness": -0.8082857131958008, "mapping_values": [1, 8, 8, 7, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1853986523642974, 2.1218264252518177, 2.004352612218931, 1.7588228985869951, 1.6248821100271011, 1.196514443352301, 1.0532558276873412, 0.8976237803024465, 0.7835253256738084, 0.723456141081437, 0.7775075431702049, 0.6971880991177678, 0.7286587698175261, 0.6685114917486193, 0.6345042224022313, 0.6047297668195656, 0.6174959585399298, 0.6041948013396358, 0.5790454520446718, 0.5750171321336824], "accuracy": [0.2530709207057953, 0.32822611927986145, 0.35305771231651306, 0.4247787594795227, 0.44049662351608276, 0.5724474787712097, 0.6172236204147339, 0.6779817938804626, 0.7062475085258484, 0.7320036888122559, 0.7223616242408752, 0.7372870445251465, 0.7252674698829651, 0.7494386434555054, 0.759609043598175, 0.7738739848136902, 0.7622507214546204, 0.7750627398490906, 0.7765156626701355, 0.7821952104568481], "val_loss": [1.7075924192156111, 1.9437761987958635, 1.250793695449829, 1.5934864112309046, 0.861441799572536, 0.9001857553209577, 0.7094966002873012, 0.7198306662695748, 0.5775677136012486, 0.7370298079081944, 0.5659384897777012, 0.5342490502766201, 0.5236099788120815, 0.5619018588747297, 0.4797323090689523, 0.5427035433905465, 0.5549413817269462, 0.47037483964647564, 0.4734401362282889, 0.4907902649470738], "val_accuracy": [0.46033334732055664, 0.2423333376646042, 0.5243333578109741, 0.3889999985694885, 0.6206666827201843, 0.6140000224113464, 0.7039999961853027, 0.6526666879653931, 0.750333309173584, 0.6766666769981384, 0.7396666407585144, 0.7643333077430725, 0.7689999938011169, 0.750333309173584, 0.7940000295639038, 0.7486666440963745, 0.762333333492279, 0.7886666655540466, 0.7940000295639038, 0.7770000100135803]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [3, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7811428308486938, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.292608500251271, 2.2642388614004063, 2.2350991974574796, 2.192850903528808, 2.1432870737770373, 2.0678953965420988, 1.9694070098202037, 1.8484988703058223, 1.7154401687032055, 1.5876318375825913, 1.4701012635920672, 1.3747029160590394, 1.299163768713768, 1.237443366763677, 1.1788190347863983, 1.1448141247478885, 1.0993230355303947, 1.0636986847708585, 1.0263737469868275, 1.004930768857275, 0.9837219550184145, 0.962641824726195, 0.9353078355988838, 0.9414512159613067, 0.9248337317309785, 0.9022382707832638, 0.888861350088292, 0.8737182372659661, 0.868252951998705, 0.8454667653043618, 0.841247510932078, 0.8341759299447807, 0.8208596377151675, 0.8265042611715296, 0.8027395619975735, 0.7911595721459581, 0.7922455062719462, 0.7876938129412956, 0.7770919342791132, 0.7751234449951042, 0.7713766033623307, 0.7715904188272644, 0.770676277151764, 0.7529149351811538, 0.7530318278252977, 0.7426970653908049, 0.7483374946042768, 0.7415119999388127, 0.735507731487439, 0.731508465404319, 0.7207154661531162, 0.725220338811082, 0.7247241823318344, 0.710020499907433, 0.7085342014848344, 0.7091466097106802, 0.7123295871683352, 0.6979592181451884], "accuracy": [0.11028926074504852, 0.19178444147109985, 0.2576938271522522, 0.30880993604660034, 0.3490952253341675, 0.39149385690689087, 0.4204200208187103, 0.439439982175827, 0.47232863306999207, 0.4966318905353546, 0.5271430611610413, 0.5437855124473572, 0.566239595413208, 0.5736362338066101, 0.5959582328796387, 0.6009774208068848, 0.6139215230941772, 0.618280291557312, 0.6353189945220947, 0.6515651941299438, 0.6534143686294556, 0.6623960137367249, 0.6626601219177246, 0.6626601219177246, 0.6654338836669922, 0.674679696559906, 0.6843217611312866, 0.6866992712020874, 0.6826046705245972, 0.6963412761688232, 0.6927750706672668, 0.698190450668335, 0.6970016956329346, 0.6997754573822021, 0.7073041796684265, 0.7157574892044067, 0.7152291536331177, 0.7120591998100281, 0.7201162576675415, 0.7168141603469849, 0.722229540348053, 0.7226257920265198, 0.7217012047767639, 0.7255316376686096, 0.7240787148475647, 0.7294940948486328, 0.7263241410255432, 0.7263241410255432, 0.7288337349891663, 0.733060359954834, 0.7321357727050781, 0.7293620109558105, 0.7312111854553223, 0.7392682433128357, 0.7390040755271912, 0.7400607466697693, 0.7363624572753906, 0.7396644949913025], "val_loss": [1.9467438970293318, 1.9205865859985352, 1.888286863054548, 1.8439647129603796, 1.784001077924456, 1.7021685327802385, 1.5964016573769706, 1.4699316365378243, 1.3362317085266113, 1.209829568862915, 1.1017139298575265, 1.0159694807870048, 0.9463931832994733, 0.8943486554282052, 0.8493852955954415, 0.8163747276578631, 0.7874500921794346, 0.7621338197163173, 0.7416370936802456, 0.7232012578419277, 0.70615325655256, 0.6929526839937482, 0.6821649415152413, 0.6719690561294556, 0.6635877915791103, 0.6532856736864362, 0.644614713532584, 0.6361862931932721, 0.6282712050846645, 0.6217997414725167, 0.6155524935041156, 0.6097888776234218, 0.603838426726205, 0.601564747946603, 0.5959822620664325, 0.5902540854045323, 0.5869053772517613, 0.5837479489190238, 0.5804992573601859, 0.5783541543143136, 0.5749104193278721, 0.568392242704119, 0.566957814352853, 0.5627194813319615, 0.5591561113085065, 0.5566952569144112, 0.5540617534092495, 0.5519729001181466, 0.5479491778782436, 0.5476867301123483, 0.5454135962894985, 0.5418455089841571, 0.540074280330113, 0.5383225509098598, 0.5358971868242536, 0.5329642806734357, 0.5303753784724644, 0.5279108796800885], "val_accuracy": [0.2396666705608368, 0.37299999594688416, 0.4180000126361847, 0.44966667890548706, 0.4959999918937683, 0.5270000100135803, 0.5550000071525574, 0.5666666626930237, 0.5886666774749756, 0.6013333201408386, 0.6333333253860474, 0.6600000262260437, 0.6676666736602783, 0.6783333420753479, 0.6819999814033508, 0.6880000233650208, 0.6903333067893982, 0.6959999799728394, 0.6973333358764648, 0.7086666822433472, 0.7143333554267883, 0.7149999737739563, 0.7126666903495789, 0.7226666808128357, 0.7256666421890259, 0.7226666808128357, 0.7300000190734863, 0.7286666631698608, 0.7336666584014893, 0.737666666507721, 0.7379999756813049, 0.7406666874885559, 0.7429999709129333, 0.7443333268165588, 0.7436666488647461, 0.7463333606719971, 0.7426666617393494, 0.7480000257492065, 0.749666690826416, 0.7473333477973938, 0.749666690826416, 0.7519999742507935, 0.75, 0.7556666731834412, 0.7563333511352539, 0.7613333463668823, 0.7606666684150696, 0.762666642665863, 0.7603333592414856, 0.7609999775886536, 0.7603333592414856, 0.762666642665863, 0.7699999809265137, 0.7676666378974915, 0.7673333287239075, 0.7689999938011169, 0.7683333158493042, 0.768666684627533]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 43, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7808571457862854, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.292608500251271, 2.2642388793817836, 2.2350992738547153, 2.192853004200867, 2.143288675253307, 2.067897452213477, 1.9694130827391452, 1.8485010614516066, 1.715427687029246, 1.5876263293607784, 1.470086385655507, 1.3746938270395772, 1.2991607510544416, 1.237459234384545, 1.178845572512557, 1.1448165220182018, 1.0993242570201656, 1.0637134054727118, 1.0264001464831154, 1.0049063919667853, 0.9837278302051861, 0.9626256583578094, 0.9353563880734613, 0.9414662973692767, 0.9248498228279324, 0.9021714247764141, 0.8889045595429939, 0.8737767234045076, 0.8682389803582085, 0.8454664941272401, 0.8412591731071221, 0.834165258540485, 0.8209134112055023, 0.8265310931970982, 0.8027819592828969, 0.7911868568944295, 0.7923206880958309, 0.7876592858938918, 0.7772051190278155, 0.7751277883558887, 0.7713217553980929, 0.7716600862885856, 0.7707104608997173, 0.7530135802305638, 0.753053487496621, 0.7426538932687177, 0.7484398319768144, 0.741529105409041, 0.7354651258574689, 0.7315965799639144, 0.7209051044672834, 0.7250852025951834, 0.7248210255747947, 0.7101934147454241, 0.708645551873236, 0.7093121486254309, 0.7122831973480337, 0.6979942727381795], "accuracy": [0.11028926074504852, 0.19178444147109985, 0.25756174325942993, 0.30880993604660034, 0.3490952253341675, 0.39149385690689087, 0.42028793692588806, 0.43930789828300476, 0.47246071696281433, 0.4966318905353546, 0.5271430611610413, 0.5436534285545349, 0.5661075115203857, 0.5739004015922546, 0.5956941246986389, 0.600581169128418, 0.6139215230941772, 0.618280291557312, 0.635451078414917, 0.6514331102371216, 0.6536785364151001, 0.6626601219177246, 0.6626601219177246, 0.6627922058105469, 0.6654338836669922, 0.6745476126670837, 0.6843217611312866, 0.6865671873092651, 0.6818121671676636, 0.69673752784729, 0.6935675740242004, 0.6976621150970459, 0.6972658634185791, 0.6996433734893799, 0.7073041796684265, 0.715889573097229, 0.7148329019546509, 0.7121912837028503, 0.720380425453186, 0.7166820764541626, 0.7218332886695862, 0.7226257920265198, 0.7219653725624084, 0.7252674698829651, 0.7231541275978088, 0.7292299270629883, 0.726192057132721, 0.726192057132721, 0.7289658188819885, 0.7327961921691895, 0.7325320243835449, 0.7296261787414551, 0.7313432693481445, 0.7395324110984802, 0.7388719916343689, 0.7401928305625916, 0.7363624572753906, 0.7401928305625916], "val_loss": [1.9467438970293318, 1.920586449759347, 1.8882885660443987, 1.843968050820487, 1.7840025084359306, 1.7021706785474504, 1.5964045524597168, 1.4699289117540633, 1.3362188679831368, 1.209819691521781, 1.1016987732478551, 1.0159706728799003, 0.9463895389011928, 0.8943793433053153, 0.8494125604629517, 0.8163851158959525, 0.7874181270599365, 0.7621122768947056, 0.7416031360626221, 0.7232417719704765, 0.7061570712498256, 0.6929687261581421, 0.682171208517892, 0.6719920124326434, 0.6636466979980469, 0.6532926729747227, 0.6446313006537301, 0.636143582207816, 0.6283002070018223, 0.6217996222632272, 0.6155341693333217, 0.6098108632223946, 0.6039856331689017, 0.6016515323093959, 0.5960602079119001, 0.5903300217219761, 0.586903555052621, 0.5838139568056379, 0.5806373528071812, 0.5783747094018119, 0.5749757630484444, 0.5684037038258144, 0.5670193093163627, 0.5627195835113525, 0.5592008318219867, 0.5567321607044765, 0.554105384009225, 0.5519619158336094, 0.5480032478060041, 0.5476788622992379, 0.5454381534031459, 0.5418733528682164, 0.5402546099254063, 0.5384131329400199, 0.5358550207955497, 0.5329530239105225, 0.5304089614323207, 0.5279425552913121], "val_accuracy": [0.2396666705608368, 0.37299999594688416, 0.4180000126361847, 0.44966667890548706, 0.4959999918937683, 0.5270000100135803, 0.5553333163261414, 0.5666666626930237, 0.5886666774749756, 0.6013333201408386, 0.6336666941642761, 0.6596666574478149, 0.6676666736602783, 0.6776666641235352, 0.6819999814033508, 0.687666654586792, 0.6909999847412109, 0.6959999799728394, 0.6980000138282776, 0.7086666822433472, 0.7136666774749756, 0.7149999737739563, 0.7126666903495789, 0.7223333120346069, 0.7260000109672546, 0.7229999899864197, 0.7303333282470703, 0.7283333539962769, 0.734000027179718, 0.7369999885559082, 0.737666666507721, 0.7403333187103271, 0.7429999709129333, 0.7436666488647461, 0.7433333396911621, 0.7463333606719971, 0.7419999837875366, 0.7476666569709778, 0.75, 0.746999979019165, 0.749666690826416, 0.7519999742507935, 0.75, 0.7549999952316284, 0.7556666731834412, 0.7606666684150696, 0.7606666684150696, 0.762666642665863, 0.7599999904632568, 0.7603333592414856, 0.7603333592414856, 0.7620000243186951, 0.7699999809265137, 0.7673333287239075, 0.765999972820282, 0.7683333158493042, 0.7683333158493042, 0.7693333625793457]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 43, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.6928571462631226, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.273490591512742, 2.0190942010009105, 1.4376544504275237, 1.1617722959330117, 0.9220852694097621, 0.8394188419576838, 0.8103155472164912, 0.7598787764863032, 0.7384975277484762, 0.7084716701976784, 0.6885422537938054, 0.6668713373546477, 0.6356550348338796, 0.6123278625432479, 0.588262200024874, 0.5771396314825411, 0.5513004209891035, 0.5428867916137535, 0.528743281072834, 0.5145450067668149, 0.513061790654625, 0.5004278369284325, 0.49387837053053824, 0.48113161563605616, 0.47321609303054085, 0.4547749278276446, 0.4523852045596504, 0.44443352515545376, 0.42212716366132774, 0.4189658087195186, 0.4098706024670251, 0.4006006414698824, 0.41400617322098576, 0.40167149919891054, 0.3902166236731764, 0.39630398980504594], "accuracy": [0.1620657742023468, 0.3961167633533478, 0.5155197381973267, 0.6118082404136658, 0.6563201546669006, 0.6905296444892883, 0.6952846646308899, 0.7096816897392273, 0.7013604640960693, 0.7333245277404785, 0.7345132827758789, 0.7395324110984802, 0.7555144429206848, 0.7642319202423096, 0.770439863204956, 0.774798572063446, 0.7835160493850708, 0.7872143983840942, 0.789988100528717, 0.7967243194580078, 0.7923656105995178, 0.8000264167785645, 0.8090080618858337, 0.8146876096725464, 0.8162726163864136, 0.8141592741012573, 0.8219521641731262, 0.8251221776008606, 0.8333113193511963, 0.8363492488861084, 0.8360850811004639, 0.8422929644584656, 0.8432175517082214, 0.8412362933158875, 0.8471800088882446, 0.8474441766738892], "val_loss": [1.8686107907976424, 1.3067385469164168, 0.8164918763296944, 0.6653415986469814, 0.6689469133104596, 0.6021734476089478, 0.587898714201791, 0.5713052409035819, 0.557863712310791, 0.5426442793437413, 0.5204692738396781, 0.4846511057444981, 0.4798616511481149, 0.4618621213095529, 0.4627119132450649, 0.45121611867632183, 0.4409216472080776, 0.4352987664086478, 0.43137004545756746, 0.41641636405672344, 0.41493481397628784, 0.4161359838077, 0.4143502882548741, 0.4124352250780378, 0.40009800025394987, 0.40098954098565237, 0.3980370930262974, 0.3923934612955366, 0.408838757446834, 0.3936947839600699, 0.3862035870552063, 0.4104130949292864, 0.38334645543779644, 0.3844824603625706, 0.39997477190835135, 0.37633503334862844], "val_accuracy": [0.39766666293144226, 0.5776666402816772, 0.6510000228881836, 0.6986666917800903, 0.7286666631698608, 0.7246666550636292, 0.737666666507721, 0.7366666793823242, 0.7450000047683716, 0.7603333592414856, 0.7549999952316284, 0.7766666412353516, 0.7883333563804626, 0.7916666865348816, 0.7879999876022339, 0.7983333468437195, 0.8059999942779541, 0.8086666464805603, 0.8090000152587891, 0.8146666884422302, 0.8233333230018616, 0.8243333101272583, 0.8240000009536743, 0.8289999961853027, 0.8339999914169312, 0.8363333344459534, 0.8389999866485596, 0.8410000205039978, 0.8396666646003723, 0.8443333506584167, 0.8500000238418579, 0.8489999771118164, 0.8476666808128357, 0.8500000238418579, 0.8446666598320007, 0.8496666550636292]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 5, 2, 8, 8, 0, 9, 0, 3, 3, 3, 0, 8, 9, 3, 4, 9, 6, 7, 8, 7, 1, 4, 9], [2, 2, 1, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [98, 8, 15, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3, 0], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [51, 57]], "fitness": -0.3319999873638153, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(grad, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.323121302257896, 2.2963911397440433, 2.3784242571620515, 2.2974532790203543, 2.212386276743683, 2.3045789468652145, 2.3033735083551172], "accuracy": [0.23946638405323029, 0.13934750854969025, 0.20684190094470978, 0.12495046854019165, 0.2525425851345062, 0.10328886657953262, 0.09959053993225098], "val_loss": [1.9821716036115373, 1.8702336720057897, 1.9750986780439104, 1.9357985768999373, 1.9766183580671037, 1.9742939812796456, 1.9738358770098006], "val_accuracy": [0.0989999994635582, 0.3556666672229767, 0.10366666316986084, 0.20900000631809235, 0.09833333641290665, 0.09833333641290665, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [30, 8, 43, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 3, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, sigma))", "other_info": {"loss": [2.3040355731310105, 2.303887143882668, 2.307076335158, 2.307281980488074, 2.3143042776137768, 2.315305550840663, 2.3184677006750847, 2.323617894809165, 2.3305632102254865, 2.339795606042794, 2.365738920264193, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08241976052522659, 0.09576013684272766, 0.08374059200286865, 0.0870426595211029, 0.07740060985088348, 0.07977809756994247, 0.07753269374370575, 0.07674019038677216, 0.07924976944923401, 0.07792893797159195, 0.08175934851169586, 0.0948355570435524, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.972170421055385, 1.9737446648733956, 1.9753155027117049, 1.9770240102495467, 1.9795573098318917, 1.9819279398236955, 1.9850279944283622, 1.9885952132088798, 1.9943808828081404, 2.005186012813023, 2.0401667867388045, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03333333507180214, 0.0273333340883255, 0.0273333340883255, 0.026000000536441803, 0.03266666829586029, 0.035999998450279236, 0.04533333331346512, 0.061666667461395264, 0.08166666328907013, 0.0963333323597908, 0.09933333098888397, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 1, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9, 0], [2, 1, 1, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [98, 8, 15, 63, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 9, 7, 8, 4], [1, 0, 1, 1, 3, 3], [51, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 30, 30, 19, 11, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.subtract(alpha, alpha)), tf.math.add(alpha, alpha)))), tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, alpha), alpha))), tf.math.pow(grad, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))))))))), tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [30, 8, 43, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [4, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [2, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 4, 7, 8, 4], [3, 1, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(sigma, alpha)", "other_info": {"loss": [1248493733.9153297, 24081472399.875313, 110534048826.83502, 303567183557.13116, 667568783336.1954, 1202185742141.5063], "accuracy": [0.09166556596755981, 0.09998679161071777, 0.10038304328918457, 0.10566636174917221, 0.09853387624025345, 0.10249637067317963], "val_loss": [4796803657.142858, 38365612324.57143, 129474138697.14285, 306891615670.8571, 599383230756.5714, 1035718323638.8572], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [0, 2, 3, 1, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [30, 8, 43, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 7, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 8, 4, 4, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.add(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [2.302408983269388, 2.302208117710648, 2.303070065997548, 2.306914438298822, 2.3312962900425513, 2.675400859502486], "accuracy": [0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9737230028424944, 1.9741148267473494, 1.9758313042776925, 1.9841935294015067, 2.0483666147504533, 3.4723961693899974], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 5, 2, 8, 8, 2, 9, 0, 3, 3, 3, 0, 8, 9, 3, 4, 9, 6, 7, 8, 7, 1, 4, 9], [2, 2, 1, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [98, 8, 15, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [0, 0, 0, 1, 3, 3], [51, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 22, 22, 17, 5, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 2], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))), tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, grad), alpha), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.pow(tf.math.add(alpha, alpha), alpha), tf.math.add(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [131173794.73094177, 2527187693.7746663, 11596066970.18835, 31842196272.657246, 70016886075.5451, 126082221168.12468], "accuracy": [0.09140139818191528, 0.09985470771789551, 0.10038304328918457, 0.10566636174917221, 0.09853387624025345, 0.10249637067317963], "val_loss": [503361956.5714286, 4024355840.0, 13579336850.285715, 32184799817.142857, 62856675328.0, 108611282066.28572], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9, 7, 1, 3, 0, 1, 4, 4, 0, 5, 2, 7, 7, 0], [0, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0, 2, 2, 2, 1, 0, 0], [30, 8, 39, 25, 98, 52, 94, 1, 5], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [0, 0, 0, 1, 3, 3], [28, 57, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 59, 59, 37, 22, 9, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 12, 7, 5, 3], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, grad), grad), alpha))), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.sqrt(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))), tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))))))))), tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.pow(grad, tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.square(grad)))), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), grad)), alpha))))))), tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.pow(tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma))))))", "other_info": {"loss": [2.3028988565798403, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09681680053472519, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 5, 5, 9, 8, 0, 9, 0, 3, 3, 3, 0, 8, 9, 3, 4, 9, 6, 7, 8, 7, 1, 4, 9], [3, 2, 1, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [98, 8, 15, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [1, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [4, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 4, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 8, 4, 4, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.square(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 5, 2, 8, 8, 0, 9, 0, 3, 3, 3, 0, 8, 9, 3, 4, 9, 6, 7, 8, 7, 1, 4, 9], [2, 2, 1, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [98, 8, 15, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [0, 0, 0, 1, 3, 3], [51, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [131173794.73094177, 2527187693.7746663, 11596066970.18835, 31842196272.657246, 70016886075.5451, 126082221168.12468], "accuracy": [0.09140139818191528, 0.09985470771789551, 0.10038304328918457, 0.10566636174917221, 0.09853387624025345, 0.10249637067317963], "val_loss": [503361956.5714286, 4024355840.0, 13579336850.285715, 32184799817.142857, 62856675328.0, 108611282066.28572], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [3, 2, 3, 1, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [30, 8, 43, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 9, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 2, 0, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2897.7118448668843, 52594.17267678477, 237982.88493511424, 649597.5649105138, 1423808.0543851538, 2558743.648791441], "accuracy": [0.09192973375320435, 0.09998679161071777, 0.10038304328918457, 0.10566636174917221, 0.09853387624025345, 0.10249637067317963], "val_loss": [10688.111328125, 82992.62276785714, 277608.3214285714, 655220.25, 1276514.2857142857, 2202174.9285714286], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 2, 0, 6, 3, 1, 7, 8, 9, 3, 4, 2, 9, 7, 8, 7, 1, 4, 9], [2, 2, 1, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [98, 8, 15, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [51, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.sqrt(grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), tf.math.subtract(alpha, tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [9.717216544756492e+24, 46.00431174662576, 145.50664432088792, 303.2949260670858, 517.7423169225859, 790.5986058783491], "accuracy": [0.09047681838274002, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [16.683873857770646, 81.81966073172433, 196.529301234654, 360.51702880859375, 574.0301339285714, 836.879132952009], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7, 8, 4], [1, 0, 0, 1, 3, 3], [49, 57]], "fitness": -0.09942857176065445, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 12, 7, 5, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.math.negative(tf.math.square(tf.math.add(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), tf.math.sqrt(tf.math.pow(alpha, sigma)))", "other_info": {"loss": [7.96250656888375, 2.309659435449574, 2.3036755350334865, 2.304241043717366, 2.3034390825967686, 2.303315108777541, 2.3031320948532117, 2.3033057171135467], "accuracy": [0.14581957459449768, 0.1018359512090683, 0.09945846349000931, 0.10487385839223862, 0.09377889335155487, 0.10236428678035736, 0.09602430462837219, 0.09800554811954498], "val_loss": [1.9858311925615584, 1.9744142123631068, 1.9665995325360979, 1.9738361494881767, 1.973785672869001, 1.973712580544608, 1.9736279078892298, 1.9737849916730608], "val_accuracy": [0.10066666454076767, 0.09833333641290665, 0.1433333307504654, 0.09799999743700027, 0.09966666996479034, 0.09933333098888397, 0.10199999809265137, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 2, 0, 6, 3, 1, 7, 8, 9, 3, 4, 2, 9, 7, 8, 7, 1, 4, 9, 7, 9], [2, 2, 3, 1, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [30, 8, 43, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [5, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [2, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [49, 57]], "fitness": -0.09600000083446503, "mapping_values": [1, 39, 39, 26, 13, 6, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(alpha, grad), grad), tf.math.add(alpha, alpha))))), tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), alpha)), tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(grad, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))))))))), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.6889743614725825, 2.356281875068202, 2.4715437596547463, 2.321211278840079, 2.3266284679613882, 2.3282743078480466], "accuracy": [0.24620261788368225, 0.0956280529499054, 0.1006472036242485, 0.09985470771789551, 0.11332716792821884, 0.10011887550354004], "val_loss": [2.075101171221052, 2.615133217402867, 1.9970241274152483, 1.9679286139351981, 1.996014186314174, 2.01014620917184], "val_accuracy": [0.11833333224058151, 0.10366666316986084, 0.09799999743700027, 0.11633333563804626, 0.10566666722297668, 0.10533333569765091]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 43, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [19, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3035626026932525, 2.3017295537733715, 2.3028394608150586, 2.301403866877346, 2.3042908714998824, 2.3029553578467086], "accuracy": [0.08321225643157959, 0.09972262382507324, 0.09074098616838455, 0.09391097724437714, 0.08942015469074249, 0.09126931428909302], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 5, 2, 8, 8, 0, 9, 0, 3, 3, 3, 0, 8, 9, 3, 4, 9, 6, 7, 8, 7, 1, 4, 9], [2, 2, 1, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 43, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 9, 9, 8, 1, 1, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))))), tf.math.negative(grad))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3035626026932525, 2.3017295537733715, 2.3028394608150586, 2.301403866877346, 2.3042908714998824, 2.3029553578467086], "accuracy": [0.08321225643157959, 0.09972262382507324, 0.09074098616838455, 0.09391097724437714, 0.08942015469074249, 0.09126931428909302], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [8, 4, 2, 8, 8, 5, 2, 0, 6, 3, 1, 7, 8, 9, 3, 4, 2, 9, 7, 8, 7, 1, 4, 9], [2, 1, 0, 2, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [30, 8, 43, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 9, 9, 6, 3, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, tf.math.sqrt(alpha)))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3035626026932525, 2.3017295537733715, 2.3028394608150586, 2.301403866877346, 2.3042908714998824, 2.3029553578467086], "accuracy": [0.08321225643157959, 0.09972262382507324, 0.09074098616838455, 0.09391097724437714, 0.08942015469074249, 0.09126931428909302], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]