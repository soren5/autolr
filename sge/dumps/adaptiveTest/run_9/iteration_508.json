[{"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 6, 1, 0, 1, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 2, 2, 2, 0, 2, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [95, 56, 82, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2, 3, 3, 3], [47, 57, 40, 62]], "fitness": -0.8140000104904175, "mapping_values": [1, 8, 8, 4, 4, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.subtract(grad, tf.math.negative(tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1519927978515625, 1.8002021312713623, 1.53030264377594, 1.114140510559082, 0.9834594130516052, 0.8516190648078918, 0.8015916347503662, 0.7507537603378296, 0.7081260085105896, 0.6914304494857788, 0.656121015548706, 0.6408224105834961, 0.6213579773902893, 0.6147998571395874, 0.5901101231575012, 0.5819751024246216, 0.5713915824890137, 0.5525396466255188, 0.5451214909553528, 0.522581160068512, 0.5568386316299438, 0.5069888234138489, 0.5118356347084045, 0.49478623270988464, 0.5031812191009521, 0.48787662386894226, 0.475030779838562, 0.47437191009521484, 0.45968616008758545, 0.45094266533851624, 0.4465491771697998, 0.43847015500068665, 0.46582362055778503, 0.42792147397994995, 0.4640880227088928, 0.41524073481559753, 0.4005271792411804, 0.4165239930152893, 0.40238040685653687, 0.39671656489372253], "accuracy": [0.31105533242225647, 0.39823007583618164, 0.5060097575187683, 0.5950337052345276, 0.6433760523796082, 0.6802271604537964, 0.7005679607391357, 0.7170783281326294, 0.7347774505615234, 0.7363624572753906, 0.7485140562057495, 0.7585523724555969, 0.7708360552787781, 0.7683265209197998, 0.7810064554214478, 0.7738739848136902, 0.7884030938148499, 0.7921014428138733, 0.804649293422699, 0.8108572363853455, 0.7917051911354065, 0.811649739742279, 0.8049134612083435, 0.8169330358505249, 0.8104609847068787, 0.8168009519577026, 0.8236692547798157, 0.8197067975997925, 0.8301413059234619, 0.832650899887085, 0.8364813327789307, 0.8367455005645752, 0.8224804997444153, 0.8448025584220886, 0.8284242749214172, 0.8459912538528442, 0.8525954484939575, 0.8495575189590454, 0.8496896028518677, 0.8570862412452698], "val_loss": [1.9478769302368164, 1.845438003540039, 0.9300438761711121, 1.0928373336791992, 0.738409161567688, 0.7151763439178467, 0.7274272441864014, 0.6692100763320923, 0.6094892024993896, 0.5961693525314331, 0.5440642237663269, 0.5741963982582092, 0.535269021987915, 0.564159095287323, 0.49652889370918274, 0.5293517112731934, 0.5502257347106934, 0.48965099453926086, 0.4964776337146759, 0.47760990262031555, 0.5029782056808472, 0.4554828405380249, 0.45765194296836853, 0.46986401081085205, 0.42884328961372375, 0.4655173420906067, 0.44596004486083984, 0.41935843229293823, 0.4207289218902588, 0.43432390689849854, 0.44141536951065063, 0.4188743531703949, 0.40457385778427124, 0.5221887230873108, 0.39265796542167664, 0.39200061559677124, 0.42202094197273254, 0.4228688180446625, 0.4288059175014496, 0.41402775049209595], "val_accuracy": [0.28833332657814026, 0.4866666793823242, 0.6653333306312561, 0.6309999823570251, 0.6953333616256714, 0.7116666436195374, 0.6936666369438171, 0.7256666421890259, 0.7590000033378601, 0.7549999952316284, 0.7940000295639038, 0.7543333172798157, 0.7889999747276306, 0.7926666736602783, 0.8080000281333923, 0.7950000166893005, 0.7793333530426025, 0.812666654586792, 0.815666675567627, 0.8233333230018616, 0.8083333373069763, 0.8276666402816772, 0.843666672706604, 0.8190000057220459, 0.8429999947547913, 0.8136666417121887, 0.8226666450500488, 0.8473333120346069, 0.8493333458900452, 0.8353333473205566, 0.8383333086967468, 0.843999981880188, 0.8533333539962769, 0.7919999957084656, 0.859333336353302, 0.8550000190734863, 0.8423333168029785, 0.8363333344459534, 0.8356666564941406, 0.8416666388511658]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 2, 0, 7, 9, 0, 1, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [95, 56, 82, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [36, 57, 40, 62]], "fitness": -0.7985714077949524, "mapping_values": [1, 8, 8, 5, 3, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2460038661956787, 1.9518886804580688, 1.4257830381393433, 1.1272236108779907, 1.003795862197876, 0.9389912486076355, 0.8754981756210327, 0.8288289904594421, 0.8101638555526733, 0.7696396708488464, 0.7587818503379822, 0.7461824417114258, 0.7279751300811768, 0.7081682682037354, 0.691971480846405, 0.6769222617149353, 0.6933456659317017, 0.6646391153335571, 0.6478244662284851, 0.6461808085441589, 0.6483373045921326, 0.6382559537887573, 0.6367833018302917, 0.6290189623832703, 0.6235000491142273, 0.6182695627212524, 0.6134501099586487, 0.6169314384460449, 0.6114009618759155, 0.5932392477989197, 0.5953549146652222, 0.5927278995513916, 0.5725334882736206, 0.5796278715133667], "accuracy": [0.22097477316856384, 0.41223087906837463, 0.5247655510902405, 0.6089023947715759, 0.6406022906303406, 0.667811393737793, 0.6892088055610657, 0.7080966830253601, 0.7045304179191589, 0.7197200059890747, 0.7218332886695862, 0.7234182953834534, 0.7301545143127441, 0.7334566116333008, 0.7404569983482361, 0.7464007139205933, 0.737947404384613, 0.748778223991394, 0.7593448758125305, 0.7600052952766418, 0.7580240368843079, 0.7602694630622864, 0.7651565074920654, 0.7680623531341553, 0.7670056819915771, 0.774798572063446, 0.774798572063446, 0.7718927264213562, 0.7701756954193115, 0.7808743715286255, 0.7799497842788696, 0.774270236492157, 0.7861577272415161, 0.7823272943496704], "val_loss": [2.115842819213867, 1.5319664478302002, 1.0545918941497803, 0.8649318814277649, 0.8331588506698608, 0.7631025314331055, 0.7241825461387634, 0.678257405757904, 0.6817711591720581, 0.6638038158416748, 0.6699284315109253, 0.6200991868972778, 0.606712818145752, 0.5992295145988464, 0.6069961190223694, 0.5978766679763794, 0.5702316761016846, 0.5673751831054688, 0.5548941493034363, 0.5518976449966431, 0.5408755540847778, 0.5503962635993958, 0.542570948600769, 0.5416558980941772, 0.5381966829299927, 0.5638951659202576, 0.5157610774040222, 0.5522968173027039, 0.5181182622909546, 0.5201727151870728, 0.5061356425285339, 0.5054967999458313, 0.5087829828262329, 0.4968513250350952], "val_accuracy": [0.48100000619888306, 0.5803333520889282, 0.6656666398048401, 0.7110000252723694, 0.6859999895095825, 0.7179999947547913, 0.7183333039283752, 0.7440000176429749, 0.7413333058357239, 0.7486666440963745, 0.7293333411216736, 0.7706666588783264, 0.7649999856948853, 0.7703333497047424, 0.7549999952316284, 0.7676666378974915, 0.7870000004768372, 0.7876666784286499, 0.7906666398048401, 0.7866666913032532, 0.7973333597183228, 0.7829999923706055, 0.7986666560173035, 0.7979999780654907, 0.7956666946411133, 0.7739999890327454, 0.8013333082199097, 0.7763333320617676, 0.8109999895095825, 0.7996666431427002, 0.8066666722297668, 0.8073333501815796, 0.8080000281333923, 0.8109999895095825]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 4, 1, 0, 1, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 56, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 5, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 0, 5, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.7948571443557739, "mapping_values": [1, 3, 3, 1, 2, 0, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.070650815963745, 1.7645660638809204, 1.4191944599151611, 1.1898808479309082, 0.8941442370414734, 0.8336482048034668, 0.7709707021713257, 0.7602611184120178, 0.7229267358779907, 0.6911253929138184, 0.6491490006446838, 0.650017499923706, 0.6045218110084534, 0.6267143487930298, 0.6051652431488037, 0.5925219058990479, 0.5728001594543457, 0.5376014113426208, 0.5861847400665283, 0.5626225471496582, 0.5420460104942322, 0.5464580655097961, 0.5114935636520386, 0.5185717344284058, 0.5365126132965088, 0.5016762614250183], "accuracy": [0.31197991967201233, 0.40628713369369507, 0.5007264614105225, 0.5964865684509277, 0.6686038970947266, 0.681547999382019, 0.7168141603469849, 0.7194558382034302, 0.7378153204917908, 0.7436270117759705, 0.759080708026886, 0.7565711140632629, 0.7786290049552917, 0.77677983045578, 0.7757231593132019, 0.7844406366348267, 0.789988100528717, 0.8005547523498535, 0.7873464822769165, 0.8017435073852539, 0.8014793395996094, 0.8017435073852539, 0.8197067975997925, 0.8138951063156128, 0.8128384351730347, 0.8171972036361694], "val_loss": [1.8553388118743896, 1.7662265300750732, 1.210185170173645, 0.7660813927650452, 0.7194440960884094, 0.7100720405578613, 0.6445724368095398, 0.6818569898605347, 0.6066986918449402, 0.5614111423492432, 0.606393039226532, 0.5856082439422607, 0.6439440846443176, 0.5031375288963318, 0.6090402007102966, 0.4802972376346588, 0.5482222437858582, 0.6404944658279419, 0.5229786038398743, 0.4677644968032837, 0.4193046987056732, 0.4857814908027649, 0.44858798384666443, 0.4417833685874939, 0.5070922374725342, 0.4172408878803253], "val_accuracy": [0.546999990940094, 0.4569999873638153, 0.5993333458900452, 0.7003333568572998, 0.7286666631698608, 0.7203333377838135, 0.750333309173584, 0.7273333072662354, 0.7766666412353516, 0.7846666574478149, 0.7546666860580444, 0.7733333110809326, 0.7573333382606506, 0.8086666464805603, 0.784333348274231, 0.8109999895095825, 0.7856666445732117, 0.7526666522026062, 0.7946666479110718, 0.8263333439826965, 0.8423333168029785, 0.8163333535194397, 0.8180000185966492, 0.8343333601951599, 0.8116666674613953, 0.8403333425521851]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 6, 1, 0, 1, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 2, 2, 0, 0, 2, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [84, 56, 82, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2, 3, 3, 3], [27, 57, 40, 62]], "fitness": -0.7725714445114136, "mapping_values": [1, 10, 10, 5, 5, 2, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.subtract(grad, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2930362224578857, 2.2714173793792725, 2.2485203742980957, 2.2191965579986572, 2.1846468448638916, 2.1375677585601807, 2.0781545639038086, 2.0029640197753906, 1.9125595092773438, 1.8040616512298584, 1.6991002559661865, 1.5898454189300537, 1.4843473434448242, 1.4053231477737427, 1.338501214981079, 1.2725253105163574, 1.2275002002716064, 1.190173625946045, 1.1346255540847778, 1.1012381315231323, 1.0807629823684692, 1.0453702211380005, 1.026357889175415, 0.9970003962516785, 0.9826837182044983, 0.9684544205665588, 0.9562507271766663, 0.9497782588005066, 0.9278996586799622, 0.9041110277175903, 0.9091649651527405, 0.8912219405174255, 0.8756260871887207, 0.868083655834198, 0.8757492899894714, 0.8544136881828308, 0.850006103515625, 0.838846743106842, 0.8347390294075012, 0.8197545409202576, 0.8209444284439087, 0.8043437004089355, 0.8107289671897888, 0.7981190085411072, 0.7910720109939575, 0.785746157169342, 0.7821551561355591, 0.7792282104492188, 0.7783043384552002, 0.7776448130607605, 0.7679727077484131, 0.7631306648254395, 0.7659446597099304, 0.7564247250556946, 0.7431342601776123, 0.7529924511909485, 0.7511921525001526, 0.7270051836967468, 0.7395663857460022, 0.7396063208580017, 0.726582944393158, 0.7296425700187683, 0.727226197719574, 0.718995988368988, 0.7173081040382385, 0.7117797136306763, 0.712333619594574, 0.7104671597480774, 0.7062814235687256, 0.7051784992218018, 0.7053828835487366, 0.7031727433204651, 0.6997198462486267, 0.693293035030365, 0.7006005644798279, 0.6942992806434631, 0.6983339190483093, 0.6892513632774353, 0.6829930543899536, 0.6784918904304504, 0.681921660900116, 0.6847288608551025], "accuracy": [0.11227050423622131, 0.16972659528255463, 0.22374852001667023, 0.28160083293914795, 0.31686699390411377, 0.3609826862812042, 0.3793422281742096, 0.40985339879989624, 0.4267600178718567, 0.46044114232063293, 0.4687623679637909, 0.49966979026794434, 0.518689751625061, 0.5340113639831543, 0.5488046407699585, 0.5669000148773193, 0.5775987505912781, 0.5857878923416138, 0.6112799048423767, 0.6210539937019348, 0.6194690465927124, 0.6305639743804932, 0.6452252268791199, 0.6565843224525452, 0.6564522385597229, 0.6616035103797913, 0.6643772125244141, 0.6647734642028809, 0.6692643165588379, 0.6865671873092651, 0.6715096831321716, 0.6799629926681519, 0.6880200505256653, 0.6872276067733765, 0.685510516166687, 0.6942279934883118, 0.695813000202179, 0.7003037929534912, 0.6970016956329346, 0.7080966830253601, 0.7086250185966492, 0.709021270275116, 0.7129837274551392, 0.7173424959182739, 0.7124554514884949, 0.7131158113479614, 0.7137762308120728, 0.7187954187393188, 0.7195879220962524, 0.7169462442398071, 0.7180029153823853, 0.7243428826332092, 0.7214370369911194, 0.7283053994178772, 0.7372870445251465, 0.726192057132721, 0.7296261787414551, 0.7400607466697693, 0.7294940948486328, 0.7297582626342773, 0.7347774505615234, 0.7371549606323242, 0.7368907928466797, 0.7343811988830566, 0.7392682433128357, 0.7458723783493042, 0.733060359954834, 0.7378153204917908, 0.739400327205658, 0.7437590956687927, 0.7372870445251465, 0.7404569983482361, 0.7407211661338806, 0.7500990629196167, 0.7397965788841248, 0.7454761862754822, 0.7421740889549255, 0.7409853339195251, 0.7514199018478394, 0.7512878179550171, 0.743891179561615, 0.7442874312400818], "val_loss": [2.276292085647583, 2.2514989376068115, 2.223567008972168, 2.188581705093384, 2.143625020980835, 2.08396053314209, 2.0085549354553223, 1.9144772291183472, 1.8017644882202148, 1.6754719018936157, 1.5468240976333618, 1.4235055446624756, 1.3131109476089478, 1.2200525999069214, 1.1439377069473267, 1.0815949440002441, 1.0303447246551514, 0.9867464900016785, 0.9482449293136597, 0.9166110754013062, 0.8890979886054993, 0.8652352094650269, 0.8467798829078674, 0.8277445435523987, 0.8134924173355103, 0.7999436855316162, 0.7872228026390076, 0.7773428559303284, 0.764930009841919, 0.7561543583869934, 0.7470895051956177, 0.73965984582901, 0.730492115020752, 0.7236290574073792, 0.717867910861969, 0.7116946578025818, 0.7038422226905823, 0.6990302801132202, 0.692575991153717, 0.687417209148407, 0.6826443672180176, 0.6769075393676758, 0.6740875840187073, 0.6686545610427856, 0.6647180318832397, 0.6614015102386475, 0.6579447984695435, 0.65309739112854, 0.6486341953277588, 0.6466203927993774, 0.642949640750885, 0.6402932405471802, 0.6395495533943176, 0.6329079866409302, 0.6285837292671204, 0.6275652050971985, 0.624250054359436, 0.6215301156044006, 0.6201377511024475, 0.6164442300796509, 0.6145923137664795, 0.6116366386413574, 0.610694944858551, 0.6041877269744873, 0.6017346978187561, 0.5988286137580872, 0.5984249114990234, 0.5959164500236511, 0.5918515920639038, 0.5931811332702637, 0.5897214412689209, 0.5876176953315735, 0.5866634845733643, 0.5844693183898926, 0.5838403105735779, 0.5814288854598999, 0.5794861912727356, 0.5773119330406189, 0.5769109129905701, 0.5740282535552979, 0.5732367038726807, 0.5719190239906311], "val_accuracy": [0.21933333575725555, 0.3426666557788849, 0.3813333213329315, 0.4283333420753479, 0.453000009059906, 0.4860000014305115, 0.5070000290870667, 0.5323333144187927, 0.5483333468437195, 0.5683333277702332, 0.5823333263397217, 0.6019999980926514, 0.628000020980835, 0.6516666412353516, 0.6666666865348816, 0.6840000152587891, 0.6790000200271606, 0.687333345413208, 0.6866666674613953, 0.6980000138282776, 0.70333331823349, 0.7043333053588867, 0.7080000042915344, 0.7076666951179504, 0.7136666774749756, 0.7126666903495789, 0.722000002861023, 0.7233333587646484, 0.7269999980926514, 0.7283333539962769, 0.7319999933242798, 0.7316666841506958, 0.7383333444595337, 0.7300000190734863, 0.7419999837875366, 0.7406666874885559, 0.7433333396911621, 0.7459999918937683, 0.7456666827201843, 0.749666690826416, 0.753000020980835, 0.75, 0.7523333430290222, 0.7540000081062317, 0.7573333382606506, 0.7546666860580444, 0.7556666731834412, 0.7583333253860474, 0.7596666812896729, 0.7549999952316284, 0.7563333511352539, 0.7596666812896729, 0.7580000162124634, 0.762666642665863, 0.7620000243186951, 0.762333333492279, 0.765999972820282, 0.7643333077430725, 0.7680000066757202, 0.7670000195503235, 0.7639999985694885, 0.765666663646698, 0.765333354473114, 0.7763333320617676, 0.7766666412353516, 0.7716666460037231, 0.7743333578109741, 0.7760000228881836, 0.7770000100135803, 0.7749999761581421, 0.7776666879653931, 0.7770000100135803, 0.7803333401679993, 0.7799999713897705, 0.7793333530426025, 0.7793333530426025, 0.784333348274231, 0.7829999923706055, 0.7803333401679993, 0.7820000052452087, 0.7816666960716248, 0.7806666493415833]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 6, 8, 0, 6, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 2, 2, 2, 0, 2, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [4, 56, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 0, 3, 3, 2, 3, 3, 3], [27, 57, 40, 62]], "fitness": -0.7725714445114136, "mapping_values": [1, 9, 9, 5, 4, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, grad), grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2930362224578857, 2.2714173793792725, 2.2485196590423584, 2.2191967964172363, 2.1846463680267334, 2.137565851211548, 2.078150510787964, 2.002953052520752, 1.9125415086746216, 1.804044485092163, 1.6990795135498047, 1.5898258686065674, 1.4843441247940063, 1.4053162336349487, 1.3384983539581299, 1.2725131511688232, 1.2274868488311768, 1.190176248550415, 1.134612798690796, 1.101229190826416, 1.0807640552520752, 1.0453689098358154, 1.026329755783081, 0.9969765543937683, 0.9826726317405701, 0.9684383869171143, 0.9562548398971558, 0.949737548828125, 0.927851676940918, 0.9041391611099243, 0.909142792224884, 0.8911920785903931, 0.8756018280982971, 0.867997944355011, 0.8757704496383667, 0.8544174432754517, 0.8499778509140015, 0.8388558626174927, 0.8347417116165161, 0.8198156952857971, 0.8209165930747986, 0.8043394088745117, 0.8107092976570129, 0.7980954647064209, 0.791074812412262, 0.7857409715652466, 0.7821632027626038, 0.7792905569076538, 0.7783043384552002, 0.7777227759361267, 0.7679985165596008, 0.7631515264511108, 0.7659244537353516, 0.7563862204551697, 0.7431612610816956, 0.7529860734939575, 0.7512342929840088, 0.727026641368866, 0.7395525574684143, 0.7395762801170349, 0.7265903353691101, 0.7296950817108154, 0.7272737622261047, 0.7190076112747192, 0.717364490032196, 0.7118322253227234, 0.7123401165008545, 0.710490345954895, 0.7062467932701111, 0.7051536440849304, 0.7054234743118286, 0.7032322883605957, 0.6998150944709778, 0.6932907700538635, 0.7006146907806396, 0.6942359805107117, 0.6985182762145996, 0.689178466796875, 0.6831148862838745, 0.6784926652908325, 0.6821388602256775, 0.6848211288452148], "accuracy": [0.11227050423622131, 0.16972659528255463, 0.22374852001667023, 0.28160083293914795, 0.31686699390411377, 0.3609826862812042, 0.3793422281742096, 0.4099854826927185, 0.4266279339790344, 0.46044114232063293, 0.4687623679637909, 0.4998018741607666, 0.5189539194107056, 0.5340113639831543, 0.5489367246627808, 0.5669000148773193, 0.5774666666984558, 0.5857878923416138, 0.611411988735199, 0.6210539937019348, 0.6193369626998901, 0.6305639743804932, 0.6453573107719421, 0.6564522385597229, 0.6561880707740784, 0.661471426486969, 0.6645092964172363, 0.6647734642028809, 0.6696605682373047, 0.6865671873092651, 0.6716417670249939, 0.6802271604537964, 0.6877558827400208, 0.6866992712020874, 0.6859067678451538, 0.6944921612739563, 0.6956809163093567, 0.700171709060669, 0.6968696117401123, 0.7083608508110046, 0.7084929347038269, 0.7091533541679382, 0.7131158113479614, 0.7174745798110962, 0.7121912837028503, 0.7135120630264282, 0.713379979133606, 0.7197200059890747, 0.7195879220962524, 0.7172104120254517, 0.7177387475967407, 0.7246070504188538, 0.7214370369911194, 0.7277770638465881, 0.737022876739502, 0.72672039270401, 0.728701651096344, 0.7400607466697693, 0.7300224304199219, 0.7297582626342773, 0.7349095344543457, 0.7364945411682129, 0.7366266250610352, 0.7341170310974121, 0.7391361594200134, 0.7456082701683044, 0.7333245277404785, 0.7375511527061462, 0.7395324110984802, 0.7429665923118591, 0.7375511527061462, 0.7405890822410583, 0.7409853339195251, 0.7503632307052612, 0.7395324110984802, 0.7453441023826599, 0.7420420050621033, 0.7413815855979919, 0.7515519857406616, 0.750759482383728, 0.743891179561615, 0.7445515990257263], "val_loss": [2.276291847229004, 2.2514989376068115, 2.223567008972168, 2.188582181930542, 2.143622636795044, 2.083956718444824, 2.0085458755493164, 1.9144619703292847, 1.8017445802688599, 1.675447940826416, 1.5467942953109741, 1.4234874248504639, 1.3130922317504883, 1.2200288772583008, 1.1439305543899536, 1.0815789699554443, 1.0303374528884888, 0.986744225025177, 0.9482417106628418, 0.9166155457496643, 0.8890924453735352, 0.8652428388595581, 0.8467741012573242, 0.8277496099472046, 0.8135039806365967, 0.7999557256698608, 0.7871978282928467, 0.7773571014404297, 0.7649907469749451, 0.7561672329902649, 0.7470549941062927, 0.739712655544281, 0.7305553555488586, 0.7236336469650269, 0.7178571820259094, 0.711780846118927, 0.703823983669281, 0.6990156173706055, 0.6926130652427673, 0.6874160170555115, 0.6826790571212769, 0.6769997477531433, 0.6740869879722595, 0.6687063574790955, 0.6647388339042664, 0.6614884734153748, 0.6579537987709045, 0.6531736254692078, 0.6487576365470886, 0.6467686891555786, 0.6432946920394897, 0.6403154730796814, 0.6394819021224976, 0.632900059223175, 0.628627598285675, 0.6275905966758728, 0.6243157386779785, 0.6214767098426819, 0.6201688647270203, 0.6163220405578613, 0.614422619342804, 0.6115898489952087, 0.6107902526855469, 0.604175865650177, 0.6017735004425049, 0.5988684296607971, 0.5983726382255554, 0.5958729386329651, 0.5918052792549133, 0.5932173728942871, 0.5895686745643616, 0.5877017974853516, 0.586661696434021, 0.5844457745552063, 0.5838758945465088, 0.5814225077629089, 0.5795493721961975, 0.577433705329895, 0.5770414471626282, 0.5741504430770874, 0.5733931660652161, 0.5719679594039917], "val_accuracy": [0.21933333575725555, 0.3426666557788849, 0.3813333213329315, 0.4283333420753479, 0.453000009059906, 0.4860000014305115, 0.5070000290870667, 0.5323333144187927, 0.5483333468437195, 0.5683333277702332, 0.5823333263397217, 0.6019999980926514, 0.628000020980835, 0.6520000100135803, 0.6669999957084656, 0.6840000152587891, 0.6793333292007446, 0.687333345413208, 0.6866666674613953, 0.6976666450500488, 0.70333331823349, 0.7043333053588867, 0.7080000042915344, 0.7076666951179504, 0.7136666774749756, 0.7126666903495789, 0.721666693687439, 0.7236666679382324, 0.7269999980926514, 0.7286666631698608, 0.7319999933242798, 0.7316666841506958, 0.7383333444595337, 0.7300000190734863, 0.7413333058357239, 0.7406666874885559, 0.7433333396911621, 0.7459999918937683, 0.7456666827201843, 0.749666690826416, 0.753000020980835, 0.7493333220481873, 0.7526666522026062, 0.7536666393280029, 0.7576666474342346, 0.7546666860580444, 0.7563333511352539, 0.7586666941642761, 0.7596666812896729, 0.7546666860580444, 0.7566666603088379, 0.7603333592414856, 0.7580000162124634, 0.762666642665863, 0.7620000243186951, 0.762666642665863, 0.765666663646698, 0.7646666765213013, 0.7676666378974915, 0.7673333287239075, 0.7639999985694885, 0.765999972820282, 0.7649999856948853, 0.7763333320617676, 0.7766666412353516, 0.7716666460037231, 0.7743333578109741, 0.7770000100135803, 0.777999997138977, 0.7753333449363708, 0.7789999842643738, 0.7776666879653931, 0.7806666493415833, 0.7789999842643738, 0.7803333401679993, 0.7796666622161865, 0.7839999794960022, 0.7826666831970215, 0.7799999713897705, 0.781333327293396, 0.7823333144187927, 0.7803333401679993]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [8, 2, 2, 8, 9, 0, 1, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 2, 2, 2, 0, 2, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [4, 56, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [0, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 2, 0, 2, 3, 3, 2, 3, 3, 3], [47, 57, 40, 62]], "fitness": -0.15971428155899048, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3809778690338135, 2.3044958114624023, 2.2846341133117676, 2.3056023120880127, 2.303575038909912, 2.3032567501068115, 2.3032829761505127, 2.3030447959899902, 2.302774667739868], "accuracy": [0.22599393129348755, 0.11319508403539658, 0.175670325756073, 0.10091137140989304, 0.09536388516426086, 0.09509972482919693, 0.0952318087220192, 0.09628847241401672, 0.09734513610601425], "val_loss": [2.3117868900299072, 2.290123701095581, 2.3075497150421143, 2.303264617919922, 2.302762031555176, 2.302619218826294, 2.3026504516601562, 2.3025007247924805, 2.302558422088623], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.09700000286102295, 0.10233332961797714, 0.10233332961797714, 0.10066666454076767, 0.09966666996479034, 0.10133333504199982, 0.09866666793823242]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 6, 1, 5, 1, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 2, 2, 2, 0, 2, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [95, 56, 82, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2, 3, 3, 3], [47, 57, 40, 62]], "fitness": -0.11942857503890991, "mapping_values": [1, 3, 3, 1, 2, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(grad)), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3814682960510254, 2.3038344383239746, 2.3207812309265137, 2.267984628677368, 2.3042972087860107, 2.303332567214966, 2.3031182289123535, 2.303043842315674, 2.3016104698181152, 2.2901272773742676, 2.3093743324279785, 2.3067874908447266, 2.2464780807495117], "accuracy": [0.22533351182937622, 0.12112006545066833, 0.14370624721050262, 0.1678774207830429, 0.09536388516426086, 0.09602430462837219, 0.09589222073554993, 0.09813763201236725, 0.10527011007070541, 0.15836745500564575, 0.19323734939098358, 0.09576013684272766, 0.15863162279129028], "val_loss": [2.3116438388824463, 2.2788543701171875, 2.2961034774780273, 2.304201126098633, 2.302794933319092, 2.3025853633880615, 2.302656650543213, 2.3019700050354004, 2.299938201904297, 2.156846046447754, 2.3139681816101074, 2.3029472827911377, 2.3101279735565186], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.1353333294391632, 0.10233332961797714, 0.10233332961797714, 0.10066666454076767, 0.09866666793823242, 0.13699999451637268, 0.09866666793823242, 0.11966666579246521, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 1, 0, 7, 0, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 3, 0, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 24, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 2, 4, 2, 1, 2, 3], [2, 0, 0, 0, 3, 3, 2], [27, 57, 40, 62]], "fitness": -0.1014285683631897, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [7.993959426879883, 2.4699740409851074, 2.5173919200897217, 10412480512.0, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09906221181154251, 0.09338264167308807, 0.11028926074504852, 0.10368511080741882, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3229281902313232, 3.0679476261138916, 22.18317413330078, 1.0620410373835466e+27, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10000000149011612, 0.10866666585206985, 0.10366666316986084, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 3, 8, 0, 2, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 2, 2, 2, 0, 2, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [95, 56, 82, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 5, 2, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [4, 5, 2, 4, 2, 1, 2, 3], [3, 0, 0, 0, 3, 3, 2, 3, 3, 3], [13, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 0, 7, 7, 4, 3, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.multiply(tf.math.add(alpha, grad), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), grad)))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(sigma, tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 6, 1, 0, 1, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 1, 0, 1, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [95, 56, 82, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 3, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 8, 4, 4, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.subtract(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.math.add(tf.math.pow(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), beta)))", "other_info": {"loss": [2.3023109436035156, 2.304086446762085, 2.306668758392334, 2.3075642585754395, 2.3114922046661377, 2.315436363220215, 2.318387985229492, 2.323526382446289, 2.329930543899536, 2.3425912857055664, 2.3724706172943115, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08915598690509796, 0.08387266844511032, 0.0820235088467598, 0.08268392831087112, 0.07951393723487854, 0.0758156105875969, 0.0734381154179573, 0.07528728246688843, 0.07634394615888596, 0.07832518965005875, 0.08109892904758453, 0.0936468094587326, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3009228706359863, 2.3025455474853516, 2.304549217224121, 2.307011127471924, 2.3099844455718994, 2.312894821166992, 2.316375732421875, 2.321148633956909, 2.328031301498413, 2.3426449298858643, 2.396871328353882, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03999999910593033, 0.03400000184774399, 0.03200000151991844, 0.03466666489839554, 0.035999998450279236, 0.04699999839067459, 0.05833333358168602, 0.07266666740179062, 0.08733333647251129, 0.09566666930913925, 0.09733333438634872, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 6, 0, 7, 0, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 0, 2, 2, 2, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 24, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1], [6, 2, 2, 4, 2, 1, 2, 3, 3, 2, 1, 8, 0, 2, 6, 2, 4, 1, 5, 4, 8, 4, 9, 7, 0, 0], [2, 1, 0, 2, 3, 3, 2, 2, 0, 3, 0, 1, 0, 3, 3, 3, 1, 0, 1], [27, 57, 40, 62, 48, 4]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 45, 26, 19, 6], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.pow(tf.math.add(beta, alpha), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(beta, sigma), sigma)), beta), tf.math.multiply(tf.math.multiply(tf.math.add(tf.math.subtract(tf.math.sqrt(tf.math.negative(beta)), tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), sigma)), tf.math.divide_no_nan(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(tf.math.subtract(tf.math.square(tf.math.pow(tf.math.sqrt(tf.math.pow(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), sigma), tf.math.add(sigma, sigma)), tf.math.negative(tf.math.negative(alpha))))), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 6, 1, 3, 1, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 2, 2, 2, 0, 2, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [95, 56, 82, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 4, 6], [91, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [0, 0, 0, 2, 3, 3, 2, 3, 3, 3], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 7, 5, 2, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 2], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.math.add(alpha, tf.math.negative(grad)), grad), tf.math.add(alpha, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [35639004.0, 686188480.0, 3250291200.0, 9024678912.0, 19210561536.0, 35183321088.0], "accuracy": [0.09998679161071777, 0.10249637067317963, 0.09919429570436478, 0.10460969805717468, 0.10170386731624603, 0.09906221181154251], "val_loss": [164082336.0, 1311383680.0, 4424495616.0, 10486008832.0, 20478515200.0, 35384668160.0], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 2, 2, 7, 9, 0, 1, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 56, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [1, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 3, 4, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [3637026816.0, 70119071744.0, 332266930176.0, 922727743488.0, 1964373049344.0, 3597891796992.0], "accuracy": [0.09998679161071777, 0.10249637067317963, 0.09919429570436478, 0.10460969805717468, 0.10170386731624603, 0.09893012791872025], "val_loss": [16758594560.0, 134038929408.0, 452351361024.0, 1072203235328.0, 2094104313856.0, 3618522005504.0], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 2, 2, 7, 9, 0, 1, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 0, 2, 2, 2, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 56, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 1, 0, 2, 3, 3, 2], [27, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07436270266771317, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 6, 8, 0, 2, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 1, 1, 2, 0, 2, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 40, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 1], [4, 1, 9, 9, 7], [4, 0, 6], [0, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [0, 0, 0, 2, 3, 3, 2, 3, 3, 3], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 5, 4, 2, 2, 1, 2, 1, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [64644224.0, 1245034112.0, 5897931264.0, 16376673280.0, 34861301760.0, 63847981056.0], "accuracy": [0.09998679161071777, 0.10249637067317963, 0.09919429570436478, 0.10460969805717468, 0.10170386731624603, 0.09906221181154251], "val_loss": [297679200.0, 2379542016.0, 8028807168.0, 19028754432.0, 37162500096.0, 64213458944.0], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [2, 6, 8, 0, 2, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 1, 1, 2, 0, 2, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [95, 56, 82, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 0, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [2, 9, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [20, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 7, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))), alpha))))), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), beta)", "other_info": {"loss": [2.302807092666626, 2.3033974170684814, 2.308818817138672, 2.350186824798584, 81.80237579345703, 3261844.75, 143509307392.0, 6975675965636608.0, 2.4785113707707997e+20, 1.1372662140800915e+25], "accuracy": [0.10566636174917221, 0.09985470771789551, 0.09998679161071777, 0.10421344637870789, 0.09642054885625839, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3028361797332764, 2.305248260498047, 2.3202710151672363, 2.5194551944732666, 2428.831787109375, 99784864.0, 4423400030208.0, 2.132579939684188e+17, 7.723510105453908e+21, 3.545515123980619e+26], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [2, 6, 8, 0, 2, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [39, 56, 49, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 1, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1], [2, 6, 2, 4, 2, 1, 2, 3, 7, 6, 4, 7, 7, 1, 2, 6, 0, 5], [1, 1, 2, 2, 3, 3, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 3], [13, 57, 40, 62, 36, 16, 94, 76]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 35, 18, 17, 8], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.sqrt(tf.math.add(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(alpha, beta)), tf.math.add(tf.math.subtract(tf.math.add(beta, sigma), sigma), beta)), tf.math.multiply(tf.math.add(tf.math.divide_no_nan(tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.divide_no_nan(tf.math.negative(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 2, 2, 7, 9, 0, 1, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [79, 56, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [0, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [4, 3, 2, 4, 2, 1, 2, 3], [2, 1, 0, 2, 3, 3, 2], [27, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 2, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 13, 6, 7, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(beta, tf.math.add(tf.math.pow(alpha, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), beta)), tf.math.add(tf.math.subtract(sigma, sigma), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [9, 2, 2, 8, 9, 0, 1, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 2, 2, 2, 0, 2, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [88, 56, 82, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 7, 2, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2, 3, 3, 3], [73, 57, 40, 62]], "fitness": -0.0762857124209404, "mapping_values": [1, 1, 1, 1, 0, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3016936779022217, 2.3015503883361816, 2.301697254180908, 2.300429582595825, 2.300779104232788, 2.3015103340148926, 2.3007800579071045, 2.30090594291687, 2.300217390060425, 2.3003857135772705, 2.30043625831604, 2.299933433532715, 2.299762487411499, 2.2999207973480225, 2.300119638442993, 2.300422191619873, 2.3006739616394043], "accuracy": [0.09100515395402908, 0.08902391046285629, 0.08994849026203156, 0.09694888442754745, 0.09734513610601425, 0.09166556596755981, 0.09866596013307571, 0.09311848133802414, 0.09760929644107819, 0.09945846349000931, 0.09998679161071777, 0.1006472036242485, 0.10077928751707077, 0.1010434553027153, 0.10527011007070541, 0.09932637959718704, 0.09893012791872025], "val_loss": [2.299409866333008, 2.2989633083343506, 2.2987523078918457, 2.298719644546509, 2.29872465133667, 2.2986295223236084, 2.298449993133545, 2.2983453273773193, 2.29813814163208, 2.2980470657348633, 2.298131227493286, 2.2982962131500244, 2.29870867729187, 2.2989683151245117, 2.299224376678467, 2.2994236946105957, 2.2996163368225098], "val_accuracy": [0.047333333641290665, 0.05400000140070915, 0.05666666850447655, 0.05833333358168602, 0.061000000685453415, 0.06666667014360428, 0.0716666653752327, 0.07500000298023224, 0.0820000022649765, 0.08533333241939545, 0.08366666734218597, 0.08866667002439499, 0.0860000029206276, 0.08699999749660492, 0.08399999886751175, 0.08033332973718643, 0.07533333450555801]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 2, 2, 7, 9, 0, 1, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [1, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 56, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [3, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 1, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.04085714370012283, "mapping_values": [1, 9, 9, 5, 4, 2, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, alpha))", "other_info": {"loss": [2.301938772201538, 2.302396535873413, 2.3030083179473877, 2.301769971847534, 2.302339792251587, 2.3033015727996826], "accuracy": [0.09008057415485382, 0.08717474341392517, 0.08611807972192764, 0.09272222965955734, 0.09126931428909302, 0.08928807079792023], "val_loss": [2.299954414367676, 2.299954414367676, 2.299954414367676, 2.299954414367676, 2.299954414367676, 2.299954414367676], "val_accuracy": [0.04466666653752327, 0.04466666653752327, 0.04466666653752327, 0.04466666653752327, 0.04466666653752327, 0.04466666653752327]}}]