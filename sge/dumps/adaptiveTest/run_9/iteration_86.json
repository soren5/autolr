[{"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [3, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [0, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7871428728103638, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2913405480496305, 2.2644220854328796, 2.2334460470229565, 2.1960298139909478, 2.140479186428001, 2.0736110227108946, 1.9725073000317503, 1.8554253629358957, 1.719813584336641, 1.5976095716352743, 1.4798610503127814, 1.369625613705483, 1.307547255057417, 1.2393670619959056, 1.1797861852319627, 1.1447057734863428, 1.0922776162584995, 1.0657986393379197, 1.0309331338198713, 1.006115937300677, 0.9871510450063112, 0.950842732711475, 0.9388622562914571, 0.923815224408757, 0.9095381334425987, 0.9059539631278744, 0.8845760416927875, 0.8763839092788097, 0.857339651230981, 0.8519347443981823, 0.8432515749306554, 0.8311992215363893, 0.8287545110193367, 0.8180660648652041, 0.8075319336169526, 0.7997911075055559, 0.7947198259139246, 0.7919153274955719, 0.7877853517959997, 0.774744778442471, 0.7678173032214439, 0.7641969158853822, 0.7701485399100223, 0.7566595037599769, 0.7533147178227166, 0.7373320873088179, 0.73319474983335, 0.7363533334740873, 0.7349205637541839, 0.7271035322896116, 0.7338042656633093, 0.7189568178985317, 0.7241187517936786, 0.724061402937897, 0.7153855520012105, 0.7012047165766873, 0.7013567895496274, 0.696145305819657, 0.701727828242917, 0.6954663248267455, 0.6922641529021025, 0.6889141803530339], "accuracy": [0.12178047746419907, 0.19072777032852173, 0.2569013237953186, 0.3031303584575653, 0.3587372899055481, 0.3833047151565552, 0.4247787594795227, 0.4476291239261627, 0.4707436263561249, 0.5003302097320557, 0.5172368288040161, 0.5455026030540466, 0.5565975308418274, 0.5711266398429871, 0.5996565818786621, 0.5951657891273499, 0.6174877882003784, 0.6324131488800049, 0.6339981555938721, 0.6440364718437195, 0.6458855867385864, 0.6645092964172363, 0.6633205413818359, 0.6700568199157715, 0.6762647032737732, 0.6756042838096619, 0.6831330060958862, 0.6856426000595093, 0.6910579800605774, 0.6963412761688232, 0.6933034062385559, 0.700171709060669, 0.6970016956329346, 0.7009642124176025, 0.7053229212760925, 0.7111346125602722, 0.711530864238739, 0.7077004313468933, 0.7123233675956726, 0.7157574892044067, 0.7170783281326294, 0.7220974564552307, 0.7166820764541626, 0.7180029153823853, 0.7240787148475647, 0.7269845604896545, 0.7281733155250549, 0.7309470176696777, 0.72672039270401, 0.7284374833106995, 0.7290979027748108, 0.7331924438476562, 0.7327961921691895, 0.7323999404907227, 0.7367587089538574, 0.739400327205658, 0.7354378700256348, 0.7415136694908142, 0.7375511527061462, 0.7405890822410583, 0.7404569983482361, 0.7395324110984802], "val_loss": [1.9464576584952218, 1.920149666922433, 1.8874744006565638, 1.8443989753723145, 1.7839258738926478, 1.7037545612880163, 1.5986629213605608, 1.472787516457694, 1.3391432080950056, 1.2131739684513636, 1.105799947466169, 1.016848359789167, 0.9486614295414516, 0.8945582934788295, 0.8514093160629272, 0.8167264120919364, 0.7863202605928693, 0.7626886197498867, 0.7425181695393154, 0.7227752038410732, 0.7077934060777936, 0.6934051854269845, 0.6803551060812814, 0.6694175515856061, 0.6612641981669835, 0.6550308976854596, 0.6439669983727592, 0.6383459397724697, 0.6283192123685565, 0.6232741560254779, 0.6172564370291573, 0.6102239234106881, 0.6066832712718419, 0.6014245237622943, 0.5963483878544399, 0.5902644906725202, 0.5871020214898246, 0.5833449534007481, 0.5801111459732056, 0.5750742299216134, 0.5721339157649449, 0.5697290556771415, 0.5667980909347534, 0.565435392516, 0.5608026300157819, 0.5568794352667672, 0.5550651720591954, 0.5527493272508893, 0.5475248438971383, 0.5467630965369088, 0.545209527015686, 0.5417510271072388, 0.5398923669542585, 0.5370541129793439, 0.5360513414655413, 0.5332305942262922, 0.5312056711741856, 0.529867138181414, 0.5265400920595441, 0.5255107028143746, 0.5237667901175362, 0.5218362467629569], "val_accuracy": [0.2396666705608368, 0.3709999918937683, 0.4166666567325592, 0.44699999690055847, 0.4896666705608368, 0.5293333530426025, 0.5546666383743286, 0.5663333535194397, 0.5886666774749756, 0.5993333458900452, 0.6336666941642761, 0.656333327293396, 0.6663333177566528, 0.6759999990463257, 0.6816666722297668, 0.6863333582878113, 0.6913333535194397, 0.6976666450500488, 0.7013333439826965, 0.7076666951179504, 0.7116666436195374, 0.7143333554267883, 0.7160000205039978, 0.7206666469573975, 0.7213333249092102, 0.7166666388511658, 0.7303333282470703, 0.7293333411216736, 0.7336666584014893, 0.7379999756813049, 0.734333336353302, 0.7403333187103271, 0.7356666922569275, 0.7406666874885559, 0.7443333268165588, 0.7440000176429749, 0.7436666488647461, 0.75, 0.7519999742507935, 0.75, 0.750333309173584, 0.7536666393280029, 0.7549999952316284, 0.7543333172798157, 0.7606666684150696, 0.7580000162124634, 0.7613333463668823, 0.7573333382606506, 0.7673333287239075, 0.7636666893959045, 0.7616666555404663, 0.7683333158493042, 0.7676666378974915, 0.7670000195503235, 0.7703333497047424, 0.7639999985694885, 0.7733333110809326, 0.7670000195503235, 0.7723333239555359, 0.7696666717529297, 0.7689999938011169, 0.7726666927337646]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7868571281433105, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2913405480496305, 2.2644221484149374, 2.233446226931204, 2.1960317433203183, 2.1404873559251674, 2.073623497157663, 1.972526229667059, 1.8554409912879268, 1.719829639439349, 1.5976168992985131, 1.4798619577897585, 1.3696251419698715, 1.3075375260457764, 1.239370389164809, 1.1797954811317384, 1.1447111154985057, 1.0922741701637262, 1.0657951630275042, 1.0309337306378492, 1.0060889660139063, 0.9871359424442426, 0.9508333877486764, 0.938830480945896, 0.9237892982777415, 0.9094777043075798, 0.9059125845537147, 0.8845635614674152, 0.8763306624444406, 0.8575232987390643, 0.8519112852979818, 0.8433176036429616, 0.8312210787981729, 0.8288398542266874, 0.8180501354983013, 0.8075457366544809, 0.7997590730596826, 0.7947469129617172, 0.7918872611397655, 0.7877919673840951, 0.7747045710432909, 0.7678991844861609, 0.7642307050743627, 0.7701296590464447, 0.7566133777478966, 0.753224832506826, 0.7373908269895051, 0.7331669669440394, 0.7363111540673195, 0.7349685206546791, 0.7270105022244748, 0.7338454903959204, 0.7189939747223875, 0.7241930704484637, 0.7240979314606187, 0.7154114986328858, 0.7012249946735948, 0.7013410084975976, 0.6961318550486496, 0.7017735525081974, 0.6954718125872624, 0.6923828261671066, 0.6888941004685344], "accuracy": [0.12178047746419907, 0.19072777032852173, 0.2569013237953186, 0.3031303584575653, 0.35860520601272583, 0.3833047151565552, 0.42464667558670044, 0.4476291239261627, 0.4707436263561249, 0.5004622936248779, 0.5171047449111938, 0.5456346869468689, 0.5567296147346497, 0.5712587237358093, 0.5996565818786621, 0.5952978730201721, 0.6174877882003784, 0.6322810649871826, 0.6342623233795166, 0.6439043879508972, 0.6457535624504089, 0.6646413803100586, 0.6633205413818359, 0.6704530715942383, 0.6758684515953064, 0.6758684515953064, 0.683000922203064, 0.6857746839523315, 0.6901333928108215, 0.6963412761688232, 0.6929071545600891, 0.7004358768463135, 0.6973979473114014, 0.7009642124176025, 0.7051908373832703, 0.711530864238739, 0.7113987803459167, 0.7079645991325378, 0.7124554514884949, 0.7160216569900513, 0.7173424959182739, 0.7215691208839417, 0.7168141603469849, 0.7176066637039185, 0.7238145470619202, 0.7272487282752991, 0.7285695672035217, 0.7310791015625, 0.72672039270401, 0.7283053994178772, 0.7288337349891663, 0.7334566116333008, 0.7327961921691895, 0.7326641082763672, 0.7364945411682129, 0.7397965788841248, 0.7360982894897461, 0.7420420050621033, 0.7380794882774353, 0.7420420050621033, 0.7404569983482361, 0.7395324110984802], "val_loss": [1.9464576584952218, 1.920149598802839, 1.8874750818525041, 1.8444029263087682, 1.7839356831141882, 1.7037740775517054, 1.5986779076712472, 1.4728021621704102, 1.3391570023127966, 1.213181802204677, 1.1058106081826347, 1.0168536731175013, 0.9486544472830636, 0.8945546490805489, 0.851441502571106, 0.816758360181536, 0.7863525152206421, 0.7626845155443464, 0.7425269739968436, 0.7227534907204765, 0.7077467100960868, 0.6934272221156529, 0.6803685086114066, 0.6694421938487461, 0.6612251486097064, 0.6549626418522426, 0.6438683441707066, 0.638241001537868, 0.6283313717160907, 0.6233051674706596, 0.61734482220241, 0.6103346858705793, 0.6067209584372384, 0.6014724799564907, 0.5963461909975324, 0.5902890477861676, 0.5871267489024571, 0.5833604846681867, 0.5801395007542202, 0.5752214533942086, 0.5723847150802612, 0.5697178159441266, 0.5667018890380859, 0.5653728927884784, 0.5608596631458828, 0.5568524258477348, 0.5550533362797329, 0.5528381041118077, 0.5476174354553223, 0.5468266350882394, 0.5452420711517334, 0.5417240347181048, 0.5399587154388428, 0.5369991915566581, 0.5361262219292777, 0.5333383594240461, 0.5312776395252773, 0.5299228259495327, 0.5266188212803432, 0.525463444846017, 0.5238226652145386, 0.5217845780508858], "val_accuracy": [0.2396666705608368, 0.3709999918937683, 0.4166666567325592, 0.44733333587646484, 0.49033331871032715, 0.5293333530426025, 0.5546666383743286, 0.5663333535194397, 0.5886666774749756, 0.5989999771118164, 0.6333333253860474, 0.656000018119812, 0.6666666865348816, 0.6759999990463257, 0.6816666722297668, 0.6866666674613953, 0.6913333535194397, 0.6976666450500488, 0.7016666531562805, 0.7080000042915344, 0.7123333215713501, 0.7136666774749756, 0.7163333296775818, 0.7203333377838135, 0.7210000157356262, 0.7173333168029785, 0.7300000190734863, 0.7286666631698608, 0.7329999804496765, 0.7369999885559082, 0.734666645526886, 0.7403333187103271, 0.7353333234786987, 0.7406666874885559, 0.7443333268165588, 0.7443333268165588, 0.7433333396911621, 0.75, 0.7519999742507935, 0.749666690826416, 0.750333309173584, 0.7536666393280029, 0.7549999952316284, 0.7546666860580444, 0.7596666812896729, 0.7590000033378601, 0.7606666684150696, 0.7570000290870667, 0.7673333287239075, 0.7636666893959045, 0.7613333463668823, 0.7683333158493042, 0.7673333287239075, 0.7673333287239075, 0.768666684627533, 0.7639999985694885, 0.7733333110809326, 0.7666666507720947, 0.7730000019073486, 0.7710000276565552, 0.7696666717529297, 0.7730000019073486]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 1, 5, 7, 8], [3, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1], [2, 9, 0, 5], [1, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 6, 0, 4, 7], [0, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 5, 5, 4, 1, 1, 1, 0, 0, 0, 0, 4, 2, 2, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [5000.270348551786, 93740.642517501, 425790.21389182407, 1196607.7554484217, 2523492.6910579843, 4673952.216021662], "accuracy": [0.10302469879388809, 0.10077928751707077, 0.09549596905708313, 0.10315678268671036, 0.09734513610601425, 0.10170386731624603], "val_loss": [19179.699776785714, 149883.5580357143, 502254.71428571426, 1186430.2142857143, 2312548.1428571427, 3990744.5714285714], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [1, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 6, 1], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 13, 7, 6, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.subtract(alpha, sigma), sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07885351777076721, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [3, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [4, 4, 5, 2], [8, 0, 19], [1, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 1, 8], [0, 3, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 12, 7, 5, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.subtract(tf.math.add(alpha, grad), tf.math.square(alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(sigma, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.sqrt(alpha), sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [2, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08440100401639938, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [3, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 2, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 13, 7, 6, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(alpha), tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, sigma), sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08545766770839691, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [3, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 1, 1, 5, 9], [2, 4, 5, 2], [8, 0, 19], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 0, 4, 7, 7, 4], [1, 3, 0, 1, 3, 3, 1], [11, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 14, 7, 7, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(alpha, sigma), tf.math.negative(tf.math.pow(tf.math.add(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(alpha, sigma), sigma)), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 0, 1, 0, 1], [7, 1, 5, 7, 8], [3, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [4, 4, 5, 2], [8, 0, 19], [1, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [2, 3, 0, 4, 7], [0, 0, 0, 1, 3, 3], [28, 57, 61]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 8, 4, 4, 3], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9], [1, 4, 3, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(alpha, tf.math.add(alpha, grad)), tf.math.square(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07753269374370575, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [4, 1, 5, 7, 8], [1, 2, 1, 1], [50], [1, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 1, 1, 1, 1, 1], [8, 9, 7, 2, 3], [4, 4, 3, 1], [8, 0, 19], [1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 4, 0, 4, 7, 8, 8], [0, 0, 0, 1, 3, 3], [17, 57, 74]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 2, 2, 2, 0, 1, 1, 0, 0, 0, 0, 10, 6, 4, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.pow(tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(alpha)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 1, 1, 1, 0, 1], [7, 1, 5, 7, 8], [3, 1, 3, 1], [50], [0, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1], [7, 9, 1], [3, 4, 3], [8, 0, 19], [0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [7, 1, 0, 4, 7, 5, 4], [1, 3, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0, 0, 8, 4, 4, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.subtract(alpha, sigma), tf.math.negative(tf.math.pow(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [0, 1, 5, 7, 8], [3, 3, 1, 1], [50], [0, 0, 1, 0, 0, 1, 0, 1], [1, 1, 0, 1, 1, 1, 1], [2, 9, 7], [3, 5, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [50, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07700435817241669, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [1, 1, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1], [2, 9, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 8], [1, 2, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 3, 0, 2, 1, 0, 0, 0, 0, 11, 7, 4, 1], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.negative(tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), alpha))))", "other_info": {"loss": [2.302356038032474, 2.302284296524759, 2.302545624701354, 2.3032992576422266, 2.3028409384371127, 2.304233207080374], "accuracy": [0.09496764093637466, 0.08875974267721176, 0.09351472556591034, 0.09628847241401672, 0.09285431355237961, 0.08308017253875732], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 1, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1, 1], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [4, 4, 5, 2], [8, 0, 19], [0, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 6, 8], [1, 0, 0, 1, 3, 3], [17, 57, 74]], "fitness": -0.03685714304447174, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 12, 7, 5, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.sqrt(alpha), sigma)))))", "other_info": {"loss": [2.302356038032474, 2.302284296524759, 2.302545624701354, 2.3032992576422266, 2.3028409384371127, 2.304233207080374], "accuracy": [0.09496764093637466, 0.08875974267721176, 0.09351472556591034, 0.09628847241401672, 0.09285431355237961, 0.08308017253875732], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1], [2, 9, 1, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 4, 7, 5, 8], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 4, 1, 2, 3, 1, 1, 0, 0, 12, 7, 5, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(alpha), tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.sqrt(alpha)))), sigma)", "other_info": {"loss": [2.302356038032474, 2.302284296524759, 2.302545624701354, 2.3032992576422266, 2.3028409384371127, 2.304233207080374], "accuracy": [0.09496764093637466, 0.08875974267721176, 0.09351472556591034, 0.09628847241401672, 0.09285431355237961, 0.08308017253875732], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 1, 1, 1, 0, 1], [7, 1, 5, 7, 8], [3, 1, 1, 1], [50], [0, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1], [2, 9, 6, 4], [3, 4, 3], [8, 0, 19], [0, 0, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [1, 4, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [8, 1, 0, 4, 7, 5, 4], [1, 1, 0, 1, 3, 3], [50, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 3, 2, 1, 1, 0, 4, 2, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.subtract(alpha, alpha))", "other_info": {"loss": [2.302356038032474, 2.302284296524759, 2.302545624701354, 2.3032992576422266, 2.3028409384371127, 2.304233207080374], "accuracy": [0.09496764093637466, 0.08875974267721176, 0.09351472556591034, 0.09628847241401672, 0.09285431355237961, 0.08308017253875732], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 9], [2, 4, 5, 2], [8, 0, 19], [1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 2, 4, 7], [1, 0, 1, 1, 3, 3], [75, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302356038032474, 2.302284296524759, 2.302545624701354, 2.3032992576422266, 2.3028409384371127, 2.304233207080374], "accuracy": [0.09496764093637466, 0.08875974267721176, 0.09351472556591034, 0.09628847241401672, 0.09285431355237961, 0.08308017253875732], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [3, 3, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, grad))), tf.math.square(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.302356038032474, 2.302284296524759, 2.302545624701354, 2.3032992576422266, 2.3028409384371127, 2.304233207080374], "accuracy": [0.09496764093637466, 0.08875974267721176, 0.09351472556591034, 0.09628847241401672, 0.09285431355237961, 0.08308017253875732], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9], [4, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 6, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302356038032474, 2.302284296524759, 2.302545624701354, 2.3032992576422266, 2.3028409384371127, 2.304233207080374], "accuracy": [0.09496764093637466, 0.08875974267721176, 0.09351472556591034, 0.09628847241401672, 0.09285431355237961, 0.08308017253875732], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]