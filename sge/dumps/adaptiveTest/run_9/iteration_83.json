[{"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7871428728103638, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.292823876214774, 2.2659727536991148, 2.234070496615197, 2.19591652951803, 2.140408602404541, 2.0712264786149532, 1.9792489615949138, 1.858738390965752, 1.7193854303722762, 1.595838122001933, 1.4796216275162621, 1.372995927396499, 1.3060806905431297, 1.2389968774101723, 1.1850915393809192, 1.149339753150814, 1.095568211134383, 1.059373806575034, 1.038856381391254, 1.003890967592666, 0.9928891337574465, 0.9613524644744237, 0.9449651042200461, 0.9258865860978831, 0.9096841799773561, 0.8979500243928628, 0.8846459307879694, 0.8806353688413252, 0.8557394760443219, 0.851484453720644, 0.8435080740996922, 0.835959853969781, 0.8272139923982869, 0.8133241773722367, 0.8068572511416007, 0.8027278877221016, 0.7941591716036269, 0.7848461820638065, 0.7871680588234747, 0.78153631344227, 0.7765475839215058, 0.7684279834085751, 0.7631366140082559, 0.7524941209096006, 0.7462413285260723, 0.7428422160136654, 0.7428132416612798, 0.7271990345737103, 0.7307447002013094, 0.7269774809993411, 0.7289420400297543, 0.7249062676408334, 0.7168379492448573, 0.7165250762452727, 0.714645585041036, 0.7004224810114059, 0.7024710793631219, 0.7042821590155028, 0.6978210099479384, 0.690005439982013, 0.6999872808348722, 0.6900671726724239, 0.6928071023576752, 0.6817625787642024], "accuracy": [0.1286487877368927, 0.1822744756937027, 0.25597676634788513, 0.316470742225647, 0.3625676929950714, 0.3851538896560669, 0.4080042243003845, 0.44366663694381714, 0.472989022731781, 0.49531105160713196, 0.5182934999465942, 0.5453705191612244, 0.5624092221260071, 0.574560821056366, 0.5880332589149475, 0.5962224006652832, 0.6194690465927124, 0.627129852771759, 0.6337339878082275, 0.6429798007011414, 0.6439043879508972, 0.661471426486969, 0.6634526252746582, 0.6695284843444824, 0.6716417670249939, 0.6779817938804626, 0.6787742972373962, 0.6934354901313782, 0.6934354901313782, 0.6948884129524231, 0.691850483417511, 0.6993792057037354, 0.7005679607391357, 0.6997754573822021, 0.7080966830253601, 0.7046625018119812, 0.7099458575248718, 0.7152291536331177, 0.7128516435623169, 0.7144366502761841, 0.7071720957756042, 0.7207766771316528, 0.7193237543106079, 0.7199841737747192, 0.7259278893470764, 0.7268524765968323, 0.7277770638465881, 0.7255316376686096, 0.7293620109558105, 0.7300224304199219, 0.7320036888122559, 0.7298903465270996, 0.7362303733825684, 0.7275128960609436, 0.7358341217041016, 0.7354378700256348, 0.7386078238487244, 0.7424382567405701, 0.7403249144554138, 0.7466648817062378, 0.7404569983482361, 0.7469290494918823, 0.7416457533836365, 0.7454761862754822], "val_loss": [1.9468812942504883, 1.9206478255135673, 1.8883919034685408, 1.8447275161743164, 1.7848217146737235, 1.7040788446153914, 1.6006128787994385, 1.4764675412859236, 1.3423843383789062, 1.2175242900848389, 1.108215434210641, 1.0171113354819161, 0.9497501509530204, 0.8949369021824428, 0.8509005648749215, 0.817432028906686, 0.7869978461946759, 0.7620159898485456, 0.7408873013087681, 0.7243459224700928, 0.7099595410483224, 0.6940288714000157, 0.6805230208805629, 0.6726895911352975, 0.6603127036775861, 0.6505147729601178, 0.6434752770832607, 0.6366266693387713, 0.6293157339096069, 0.6229586430958339, 0.616388065474374, 0.611810462815421, 0.6057074410574776, 0.6007037843976702, 0.5959541627338955, 0.5905208928244454, 0.5859241996492658, 0.5824755089623588, 0.5777218341827393, 0.5762155907494682, 0.5721671070371356, 0.5693151099341256, 0.5652505329677037, 0.5625262260437012, 0.5585055862154279, 0.5565802369798932, 0.5543655327388218, 0.550931419645037, 0.5493214130401611, 0.5452981676374163, 0.5433703150068011, 0.543107100895473, 0.5404289279665265, 0.5364235128675189, 0.535739575113569, 0.5325218268803188, 0.5296774421419416, 0.5282699721200126, 0.5267499514988491, 0.5260802847998483, 0.5237739426749093, 0.5224474668502808, 0.5205309731619698, 0.5180619955062866], "val_accuracy": [0.2303333282470703, 0.3633333444595337, 0.414000004529953, 0.45399999618530273, 0.4860000014305115, 0.5256666541099548, 0.5506666898727417, 0.5740000009536743, 0.590666651725769, 0.6186666488647461, 0.6466666460037231, 0.6613333225250244, 0.6679999828338623, 0.6703333258628845, 0.6800000071525574, 0.6869999766349792, 0.690666675567627, 0.6930000185966492, 0.6993333101272583, 0.7080000042915344, 0.7026666402816772, 0.7099999785423279, 0.7170000076293945, 0.7123333215713501, 0.7183333039283752, 0.7263333201408386, 0.7276666760444641, 0.7276666760444641, 0.7326666712760925, 0.7356666922569275, 0.7386666536331177, 0.7400000095367432, 0.7429999709129333, 0.7436666488647461, 0.7480000257492065, 0.7456666827201843, 0.7480000257492065, 0.7556666731834412, 0.7526666522026062, 0.7523333430290222, 0.7493333220481873, 0.7540000081062317, 0.7580000162124634, 0.7590000033378601, 0.762333333492279, 0.7596666812896729, 0.7580000162124634, 0.765999972820282, 0.7636666893959045, 0.7673333287239075, 0.7646666765213013, 0.762666642665863, 0.7670000195503235, 0.7689999938011169, 0.7696666717529297, 0.7710000276565552, 0.7716666460037231, 0.7683333158493042, 0.7736666798591614, 0.7723333239555359, 0.7730000019073486, 0.7710000276565552, 0.7720000147819519, 0.7706666588783264]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [3, 2, 1, 1], [50], [1, 1, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 1, 1, 5, 9], [2, 4, 5, 2], [28, 0, 19], [1, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1], [6, 4, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57, 68]], "fitness": -0.6919999718666077, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.243921933881422, 1.665460411048348, 1.1740494831331716, 0.9023190181032699, 0.8156142249130665, 0.7538111830557562, 0.7240278976011774, 0.6863249963410951, 0.651292914790626, 0.6204395958728889, 0.5904617165892494, 0.5835636198922171, 0.5575045509156361, 0.5419246851413824, 0.5332224654003519, 0.5185432802527068, 0.4983425815509153, 0.4861876127025817, 0.4667430054147907, 0.46118789329473386, 0.4571179491559418, 0.4433979552498489, 0.42097946579871065, 0.42323857906031304, 0.40590142344030267, 0.39880264673754523, 0.3901270413679013, 0.39300120384654413, 0.3823246759406926, 0.37030888019834984, 0.3747859951519554, 0.36044124575370434, 0.35038641578155094, 0.332968078942394, 0.3516266559172048, 0.3473313504466134, 0.35813428521975077, 0.35576963405788], "accuracy": [0.21793685853481293, 0.4562145173549652, 0.5995244979858398, 0.6680755615234375, 0.6954167485237122, 0.7046625018119812, 0.726192057132721, 0.7376832365989685, 0.7506273984909058, 0.7611940503120422, 0.7749306559562683, 0.778761088848114, 0.7880068421363831, 0.7881389260292053, 0.7938185334205627, 0.8042530417442322, 0.8035926818847656, 0.81548011302948, 0.8202351331710815, 0.8231409192085266, 0.8284242749214172, 0.8317263126373291, 0.8376700282096863, 0.8313300609588623, 0.8412362933158875, 0.8426892161369324, 0.8511425256729126, 0.8446704745292664, 0.8527275323867798, 0.8553691506385803, 0.8539162874221802, 0.8553691506385803, 0.8597279191017151, 0.863029956817627, 0.8622375130653381, 0.8638224601745605, 0.863558292388916, 0.8564258217811584], "val_loss": [1.7304237229483468, 0.8369422129222325, 0.6869732482092721, 0.6145612171718052, 0.603614228112357, 0.5781841788973127, 0.5319904088973999, 0.5091468947274345, 0.48676185948508127, 0.46625949655260357, 0.4705915791647775, 0.44452100140707834, 0.4352311406816755, 0.4411707946232387, 0.43893670184271677, 0.42617739949907574, 0.40694124358040945, 0.40297614676611765, 0.40666449069976807, 0.4032812203679766, 0.38937683616365704, 0.39021669966833933, 0.38052551235471455, 0.4006239260946001, 0.38366883993148804, 0.37908525126320974, 0.38003720555986675, 0.383782548563821, 0.38963766608919415, 0.3806610533169338, 0.3950860755784171, 0.3960555025509426, 0.4111535974911281, 0.408886330468314, 0.4152143767901829, 0.4281681776046753, 0.4166852831840515, 0.4111988203866141], "val_accuracy": [0.4586666524410248, 0.6486666798591614, 0.7070000171661377, 0.7316666841506958, 0.7269999980926514, 0.7506666779518127, 0.7599999904632568, 0.7746666669845581, 0.7839999794960022, 0.793666660785675, 0.7903333306312561, 0.8043333292007446, 0.8059999942779541, 0.809333324432373, 0.8140000104904175, 0.8186666369438171, 0.8289999961853027, 0.8220000267028809, 0.8276666402816772, 0.8299999833106995, 0.8356666564941406, 0.8413333296775818, 0.8399999737739563, 0.8450000286102295, 0.8479999899864197, 0.8569999933242798, 0.8566666841506958, 0.8523333072662354, 0.8513333201408386, 0.8579999804496765, 0.8569999933242798, 0.8550000190734863, 0.8600000143051147, 0.856333315372467, 0.859666645526886, 0.859666645526886, 0.8560000061988831, 0.856333315372467]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 3, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1], [2, 9, 1, 1], [3, 4, 3], [8, 0, 19], [0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.5220000147819519, "mapping_values": [1, 3, 3, 1, 2, 0, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2974116308751156, 2.284267854633868, 2.269234771411086, 2.2560898323635996, 2.238808896484597, 2.2237826712206132, 2.2043631074608374, 2.178664864298375, 2.1485274532105487, 2.119366765478898, 2.0867060273787317, 2.0509193224787885, 2.0246087305297973, 2.005239867452365, 2.0153606443388776], "accuracy": [0.11557257920503616, 0.13736626505851746, 0.17342491447925568, 0.21912561357021332, 0.2537313401699066, 0.27024170756340027, 0.2895258367061615, 0.3155461549758911, 0.3385286033153534, 0.35279354453086853, 0.35028398036956787, 0.34420815110206604, 0.3331131935119629, 0.30682867765426636, 0.2833179235458374], "val_loss": [1.9588220460074288, 1.9467579296657018, 1.934126581464495, 1.9203739847455705, 1.9050254140581404, 1.887204306466239, 1.8668519428798132, 1.8429690088544572, 1.81525605065482, 1.784278052193778, 1.7521818024771554, 1.7209031922476632, 1.6981281893593925, 1.6894584383283342, 1.7011582851409912], "val_accuracy": [0.12266666442155838, 0.21299999952316284, 0.2876666784286499, 0.3656666576862335, 0.4059999883174896, 0.4533333480358124, 0.4753333330154419, 0.4869999885559082, 0.4946666657924652, 0.5026666522026062, 0.4620000123977661, 0.4206666648387909, 0.3566666543483734, 0.30799999833106995, 0.2750000059604645]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [2, 1, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9], [4, 4, 3, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1], [1, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 4, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.15399999916553497, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.9218146213372274, 2.504452272885511, 2.3208198914863587, 2.261704719424043, 2.42741721354424, 2.339381462704819, 2.366014904397086, 2.3887207480689963, 2.3700749625965685], "accuracy": [0.16259410977363586, 0.10460969805717468, 0.1328754425048828, 0.17210407555103302, 0.15361246466636658, 0.1146479994058609, 0.09932637959718704, 0.09866596013307571, 0.10249637067317963], "val_loss": [2.2333849498203824, 1.98832334790911, 1.9708068711417062, 1.8970765386308943, 1.9331754275730677, 1.9875008719308036, 2.1660609245300293, 2.0503858838762556, 2.0210184369768416], "val_accuracy": [0.09966666996479034, 0.12033333629369736, 0.17800000309944153, 0.20266667008399963, 0.12399999797344208, 0.10100000351667404, 0.11533333361148834, 0.10000000149011612, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [3, 1, 1, 1], [50], [0, 1, 0, 0, 1, 1, 1, 1], [0, 1, 0, 0, 0, 1, 1, 0], [6, 1, 1, 5, 9], [4, 4, 3, 3], [8, 0, 19], [0, 0, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57, 68]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 1, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.square(grad), grad)), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08426892012357712, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 1, 4, 7, 8], [1, 1, 1, 1], [50], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], [2, 9, 6, 6, 5], [3, 1, 2], [8, 0, 19], [0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 3, 4, 0, 8, 8, 5, 3, 1, 4, 2, 2, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.pow(tf.math.add(alpha, alpha), alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, alpha))), tf.math.square(beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [3, 3, 1, 1], [50], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 1, 0, 1, 1, 1, 0], [5, 9], [5, 4, 3], [29, 0, 19], [1, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [6, 4, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08902391046285629, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [6, 4, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(alpha, tf.math.add(alpha, grad)), tf.math.square(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.337970836271841, 1.4667151864313404e+24, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0536256767809391, 0.036586977541446686, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.0979204177856445, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.0026666666381061077, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [3, 1, 1, 1], [50], [0, 1, 1, 0, 1, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 0], [2, 9, 2, 6], [1, 4, 3], [29, 0, 19], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1], [6, 4, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [4, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 1, 5, 3, 2, 1, 0, 8, 4, 4, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(beta, grad))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.pow(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [3, 1, 1, 1], [50], [0, 1, 1, 1, 1, 0, 1, 1], [0, 0, 1, 0, 1, 1, 0, 0], [2, 1, 1, 5, 9], [3, 4, 3, 2], [29, 0, 19], [0, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [0, 4, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 7, 1], [0, 0, 0, 1, 3, 3], [28, 57, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 8, 8, 5, 3, 1, 2, 2, 1, 1, 0, 13, 7, 6, 3], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.subtract(grad, tf.math.subtract(grad, tf.math.add(beta, grad))), tf.math.square(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.pow(tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.subtract(alpha, sigma), sigma)))))", "other_info": {"loss": [2.302438322547688, 2.3025859840762393, 2.3025860605679482, 2.3025859615286626, 2.3025856692604245, 2.302586208985167], "accuracy": [0.09787346422672272, 0.09668471664190292, 0.09721305221319199, 0.09615638852119446, 0.09721305221319199, 0.09813763201236725], "val_loss": [1.9736442565917969, 1.9736442565917969, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10066666454076767, 0.09933333098888397, 0.09966666996479034, 0.09933333098888397, 0.09833333641290665, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [3, 1, 1, 1], [50], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 1, 0], [0, 9], [3, 4, 3], [29, 0, 19], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [6, 4, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 2, 2, 2, 0, 1, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08426892012357712, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 1, 0, 1], [7, 1, 5, 7, 8], [1, 0, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9], [4, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 2], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [8, 3, 0, 4, 7, 8, 7], [1, 0, 0, 1, 3, 3], [53, 57, 68]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.subtract(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [6, 4, 8, 9, 7], [4, 7], [88, 19], [1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 7, 7, 2, 9], [1, 0, 0, 1, 3, 3], [28, 57, 68]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08770307898521423, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [6, 1, 5, 7, 8], [3, 1, 1, 1], [50], [1, 1, 1, 0, 1, 0, 0, 1], [0, 0, 1, 1, 1, 1, 1, 0], [2, 1, 1, 5, 9], [4, 4, 5, 3], [24, 0, 19], [1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [6, 4, 8, 9, 7], [4, 7], [88, 19], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57, 68]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.subtract(grad, tf.math.add(beta, grad)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08453308790922165, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 3, 1, 1], [50], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], [2, 9, 2, 1, 2, 3], [3, 4, 5, 5, 2], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 4, 7], [1, 0, 0, 1, 3, 3], [99, 57, 68]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 11, 11, 6, 5, 1, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(grad, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, beta)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08426892012357712, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [3, 3, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1, 1], [1, 1, 1, 0, 1, 1, 1, 0], [2, 9], [3, 2, 3, 5, 4, 4, 4], [22, 0, 19], [1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [2, 7, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 4, 7], [1, 0, 0, 1, 3, 3], [99, 57, 68]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08426892012357712, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [0, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1], [2, 2, 4, 2, 4, 2, 1, 3, 7, 4, 2], [3, 4, 3, 5, 3, 2, 0, 0, 1, 1, 3, 4], [8, 0, 19], [0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [44, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 23, 23, 11, 12, 2, 4, 2, 2, 0, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.pow(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad))), beta))), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(alpha, tf.math.add(beta, alpha)))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3025742481570783, 2.3028153493624512, 2.302705322038134, 2.3026384571366667, 2.3026126756203285, 2.302582051634017], "accuracy": [0.09602430462837219, 0.09377889335155487, 0.10342095047235489, 0.10566636174917221, 0.09945846349000931, 0.09932637959718704], "val_loss": [1.9736707551138741, 1.9737063816615514, 1.9737317221505302, 1.9737275668552943, 1.9737404414585658, 1.9737430300031389], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [3, 1, 5, 7, 8], [1, 3, 1, 1], [50], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [6, 4, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, alpha), grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3035818550801155, 2.3036122210289367, 2.3021418915102276, 2.3033363958312663, 2.3020544612034515, 2.3041168577745683], "accuracy": [0.09747721254825592, 0.08691058307886124, 0.09192973375320435, 0.09285431355237961, 0.0956280529499054, 0.0886276587843895], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 1, 6, 7, 8], [3, 1, 1, 1], [50], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1], [2, 2, 4, 2, 4, 3, 8, 1, 9, 9, 5, 5, 8, 4, 0, 2, 5, 4, 9, 3, 1, 5, 7], [3, 4, 3, 1, 0, 3, 2, 3, 4, 4, 3], [38, 0, 19, 69], [0, 0, 0, 1, 0, 1], [1, 1, 1, 1, 0, 1], [6, 4, 8, 9, 7], [2, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57, 68]], "fitness": -0.03685714304447174, "mapping_values": [1, 6, 6, 3, 3, 0, 34, 34, 23, 11, 4, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), alpha)), tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(grad, tf.math.multiply(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.math.square(tf.math.square(tf.math.add(beta, alpha)))))), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, grad)), tf.math.pow(tf.math.add(beta, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(beta, tf.math.add(beta, grad))), grad))))))), tf.math.square(tf.math.add(beta, tf.math.add(grad, grad))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3035818550801155, 2.3036122210289367, 2.3021418915102276, 2.3033363958312663, 2.3020544612034515, 2.3041168577745683], "accuracy": [0.09747721254825592, 0.08691058307886124, 0.09192973375320435, 0.09285431355237961, 0.0956280529499054, 0.0886276587843895], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 1, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9], [4, 4, 3], [8, 0, 19], [1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [6, 4, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [8, 4, 0, 0, 7, 8, 7], [1, 0, 0, 1, 3, 3], [28, 57, 68]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 4, 2, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.pow(alpha, tf.math.negative(tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.3035818550801155, 2.3036122210289367, 2.3021418915102276, 2.3033363958312663, 2.3020544612034515, 2.3041168577745683], "accuracy": [0.09747721254825592, 0.08691058307886124, 0.09192973375320435, 0.09285431355237961, 0.0956280529499054, 0.0886276587843895], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]