[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 6, 3, 2, 7, 5, 1, 9, 6, 5, 8, 9], [1, 3, 0, 0, 0, 2, 2, 4, 2, 0], [89, 47, 64, 81, 53, 45], [1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1], [2, 3, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57, 26]], "fitness": -0.8354285955429077, "mapping_values": [1, 1, 1, 0, 1, 0, 18, 18, 11, 7, 4, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))), beta)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.104113913640496, 1.7657948182542735, 1.4410158901198225, 0.9636952745727088, 0.861776003582823, 0.805105707656753, 0.7070296051133468, 0.7103112963023455, 0.6591409772158204, 0.6131301483442251, 0.6081310522838149, 0.5825115772931804, 0.5769561777151397, 0.5481933338168811, 0.5195714489280934, 0.5390664873625766, 0.5291424234151809, 0.5004469485425237, 0.5156823945374552, 0.4908375076259746, 0.46052541385284584, 0.47672417311148163, 0.46670828947632337, 0.43796841646890916, 0.4541754290105298, 0.457784385461345, 0.41606014539080366, 0.4086134946066013, 0.40525215730738284, 0.40233314814364135, 0.3803693885186628, 0.3958603614128623, 0.396921776301038, 0.3797574632234892, 0.3736236626249121, 0.3728122056207605, 0.34922998337823763, 0.3662588703334764, 0.3462860529818917], "accuracy": [0.27261921763420105, 0.39981508255004883, 0.5064060091972351, 0.6330735683441162, 0.6680755615234375, 0.6995112895965576, 0.728701651096344, 0.7195879220962524, 0.7441553473472595, 0.7660810947418213, 0.7714964747428894, 0.7804781198501587, 0.7874785661697388, 0.798309326171875, 0.8042530417442322, 0.7973847389221191, 0.7984414100646973, 0.8149517774581909, 0.8063663840293884, 0.819970965385437, 0.8301413059234619, 0.8228767514228821, 0.8259146809577942, 0.8330471515655518, 0.8318583965301514, 0.8265751004219055, 0.841500461101532, 0.8455950617790222, 0.8519350290298462, 0.8496896028518677, 0.8598600029945374, 0.8529917001724243, 0.856689989566803, 0.859199583530426, 0.8617091774940491, 0.8634262084960938, 0.8688416481018066, 0.8617091774940491, 0.8733324408531189], "val_loss": [1.8757649149213518, 1.5582028116498674, 0.8690676689147949, 0.8176789964948382, 0.598185522215707, 0.6023276192801339, 0.6115571090153286, 0.5323260681969779, 0.5071702173777989, 0.48621720927102224, 0.48529677731650217, 0.4579188823699951, 0.4816971165793283, 0.4330750959260123, 0.4280704941068377, 0.4250284859112331, 0.4250965288707188, 0.4810462168284825, 0.3883033650262015, 0.38834790672574726, 0.39564252751214163, 0.3755925382886614, 0.4427963154656546, 0.41705951520374845, 0.37798926659992765, 0.3740808197430202, 0.36604256289345877, 0.37360029561179026, 0.3485460877418518, 0.3621132629258292, 0.3467035634177072, 0.3670800243105207, 0.3509059548377991, 0.3587492363793509, 0.3646622896194458, 0.3458000676972525, 0.34891521079199656, 0.3638303279876709, 0.35999011993408203], "val_accuracy": [0.22333332896232605, 0.43066665530204773, 0.5773333311080933, 0.625333309173584, 0.734000027179718, 0.7170000076293945, 0.7089999914169312, 0.7583333253860474, 0.7666666507720947, 0.7926666736602783, 0.7743333578109741, 0.8050000071525574, 0.7940000295639038, 0.8069999814033508, 0.815666675567627, 0.8103333115577698, 0.815666675567627, 0.777999997138977, 0.8326666951179504, 0.8330000042915344, 0.8259999752044678, 0.8346666693687439, 0.7960000038146973, 0.8130000233650208, 0.8366666436195374, 0.831333339214325, 0.8386666774749756, 0.8363333344459534, 0.8503333330154419, 0.8460000157356262, 0.8503333330154419, 0.8386666774749756, 0.8463333249092102, 0.8506666421890259, 0.8360000252723694, 0.8486666679382324, 0.8493333458900452, 0.8443333506584167, 0.8399999737739563]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 6, 3, 2, 7, 5, 1, 8, 5, 5, 8, 9], [3, 2, 5, 3, 2, 2, 2, 4, 2, 0], [59, 47, 79, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 0, 0, 9, 7], [4, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.8214285969734192, "mapping_values": [1, 1, 1, 0, 1, 0, 18, 18, 11, 7, 0, 5, 5, 4, 1, 1, 4, 2, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.square(beta))))), tf.math.square(grad))), grad), tf.math.add(beta, beta))), beta)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.104097652114094, 1.7638991642873743, 1.4305076081723491, 1.0267420186578888, 0.851346015859321, 0.795189528015894, 0.7305366379190288, 0.6892387212354115, 0.6742039349935374, 0.6206182709081597, 0.616103899729266, 0.5846344544399117, 0.5605237696227806, 0.5451720150596256, 0.5512105986552704, 0.5207234187731418, 0.5276845054005461, 0.5024311452604099, 0.5096537057773359, 0.47331786121060554, 0.46260465369594883, 0.4707728378595756, 0.4740603443905819, 0.4436983316251079, 0.45674643572752016, 0.45927071802021885], "accuracy": [0.27261921763420105, 0.39928674697875977, 0.5178972482681274, 0.6107515692710876, 0.6852463483810425, 0.6975300312042236, 0.7195879220962524, 0.7312111854553223, 0.7392682433128357, 0.7660810947418213, 0.7651565074920654, 0.7803460359573364, 0.7909126877784729, 0.791441023349762, 0.798309326171875, 0.8057059645652771, 0.8016114234924316, 0.8132346868515015, 0.8104609847068787, 0.8259146809577942, 0.8281601071357727, 0.8219521641731262, 0.8239334225654602, 0.8293488025665283, 0.8327829837799072, 0.8256505131721497], "val_loss": [1.8759533337184362, 1.5582936150687081, 0.9185849257877895, 0.6802949905395508, 0.6660105500902448, 0.6660012006759644, 0.6142023972102574, 0.5542810303824288, 0.5342441626957485, 0.47854200431278776, 0.4821328265326364, 0.44553628989628385, 0.4409366846084595, 0.47765423570360455, 0.43293253013065885, 0.44539776870182585, 0.4230473978178842, 0.45789596012660433, 0.38833595173699514, 0.43647932154791697, 0.3802939568247114, 0.4379429646900722, 0.45888006687164307, 0.40241144384656635, 0.38617535148348126, 0.3642187033380781], "val_accuracy": [0.22433333098888397, 0.4346666634082794, 0.5496666431427002, 0.7086666822433472, 0.7020000219345093, 0.6909999847412109, 0.7110000252723694, 0.7436666488647461, 0.7306666374206543, 0.7893333435058594, 0.7789999842643738, 0.8083333373069763, 0.8083333373069763, 0.7753333449363708, 0.8050000071525574, 0.8029999732971191, 0.8196666836738586, 0.784333348274231, 0.8270000219345093, 0.8016666769981384, 0.8396666646003723, 0.8019999861717224, 0.7829999923706055, 0.8220000267028809, 0.831333339214325, 0.8366666436195374]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 6, 3, 2, 7, 5, 1, 8, 6, 5, 8, 9], [0, 2, 5, 3, 2, 2, 2, 4, 2, 0], [60, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1], [2, 0, 0, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.8168571591377258, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1041132298442964, 1.7619065397120486, 1.4215572405925847, 0.9334276666919616, 0.8653758776548469, 0.7748049973827453, 0.7418387148122368, 0.6899186317883841, 0.6445705246663979, 0.6359467500110486, 0.6133162043964102, 0.5995601693148847, 0.5594990217469986, 0.5416681025526102, 0.5480291872779691, 0.5148678892765063, 0.5352349027414616, 0.49986167390821096, 0.518214013917083, 0.4796243464398803, 0.4602746500425398, 0.47260792126918216, 0.471122298730662, 0.4468682101295294, 0.4501049468081468, 0.458263662221677], "accuracy": [0.27261921763420105, 0.4019284248352051, 0.5155197381973267, 0.6489235162734985, 0.6612072587013245, 0.7003037929534912, 0.7149649858474731, 0.7306828498840332, 0.7537974119186401, 0.7618544697761536, 0.7707040309906006, 0.7773081660270691, 0.793950617313385, 0.7967243194580078, 0.7944789528846741, 0.8094043135643005, 0.7971205711364746, 0.8141592741012573, 0.8108572363853455, 0.8226125836372375, 0.830669641494751, 0.8222163319587708, 0.8247259259223938, 0.830669641494751, 0.8360850811004639, 0.8240655064582825], "val_loss": [1.8759815352303642, 1.541290589741298, 0.8863620417458671, 0.773681504385812, 0.5925327709742955, 0.6398217848369053, 0.5831238882882255, 0.5631952796663556, 0.5147993564605713, 0.5663284914834159, 0.5157175234385899, 0.4506896904536656, 0.45415648392268587, 0.4332702841077532, 0.42541199922561646, 0.45554734979357037, 0.4172737513269697, 0.46277362959725515, 0.38621256181171965, 0.40709435088293894, 0.3763707195009504, 0.4332951307296753, 0.46685666697365896, 0.42796346970966886, 0.38565722533634733, 0.37216460704803467], "val_accuracy": [0.22499999403953552, 0.43566668033599854, 0.5886666774749756, 0.6183333396911621, 0.7413333058357239, 0.7059999704360962, 0.7303333282470703, 0.7369999885559082, 0.765999972820282, 0.746999979019165, 0.7553333044052124, 0.800000011920929, 0.796999990940094, 0.8106666803359985, 0.8103333115577698, 0.796999990940094, 0.8220000267028809, 0.7796666622161865, 0.8323333263397217, 0.8240000009536743, 0.8379999995231628, 0.7979999780654907, 0.784333348274231, 0.8056666851043701, 0.8326666951179504, 0.8316666483879089]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 9, 3, 2, 7, 5, 1, 8, 6, 5, 8, 9], [1, 3, 0, 0, 0, 2, 2, 4, 2, 0], [57, 47, 79, 81, 53, 45], [0, 0, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1], [2, 3, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.8165714144706726, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 9, 6, 4, 6, 5, 4, 1, 1, 4, 2, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))), tf.math.divide_no_nan(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.104122237097302, 1.7716838987732386, 1.3816994470990078, 0.9976426202859452, 0.8846470006563093, 0.8286846458652095, 0.7399288778134372, 0.6963546124856863, 0.6691628172806682, 0.6175580378914585, 0.6135605769764557, 0.6020842866890656, 0.564067509416513, 0.5780341907451969, 0.5322709712354247, 0.5262612358942134, 0.546288142051868, 0.5037861774390038, 0.5197033552902407, 0.4916061970417951, 0.47452060050259587, 0.4735597252625327, 0.4692035038764718, 0.43905107613804, 0.4596725795853486, 0.4571109779829583, 0.4273775930906, 0.4130164394604138, 0.41651590839431835, 0.4094682945559258, 0.388815093345142, 0.40416424398204326, 0.39768448764102304, 0.37773556392253615, 0.3706638750115469, 0.3715781812355456], "accuracy": [0.27261921763420105, 0.39902257919311523, 0.5251618027687073, 0.6133931875228882, 0.6606789231300354, 0.6860388517379761, 0.7191916704177856, 0.7302865982055664, 0.741909921169281, 0.7666094303131104, 0.765949010848999, 0.7745344042778015, 0.7880068421363831, 0.7843085527420044, 0.805177628993988, 0.8043851256370544, 0.7957997918128967, 0.8136309385299683, 0.8029322624206543, 0.8161405324935913, 0.8265751004219055, 0.8191784620285034, 0.8245938420295715, 0.8304054737091064, 0.8297450542449951, 0.8284242749214172, 0.8358209133148193, 0.8426892161369324, 0.8454629778862, 0.8442742228507996, 0.8568220734596252, 0.8487650156021118, 0.8537842035293579, 0.8580108284950256, 0.863029956817627, 0.859199583530426], "val_loss": [1.8760629381452287, 1.5121165684291296, 0.8654424462999616, 0.8339114359446934, 0.6125126736504691, 0.6240973472595215, 0.5842795201710292, 0.5559808356421334, 0.5191441093172345, 0.496038590158735, 0.5210343769618443, 0.45458963939121794, 0.48538713795798166, 0.4412445511136736, 0.44246559483664377, 0.4753716502870832, 0.42649697405951364, 0.46654302733285086, 0.3907803637640817, 0.40215958867754253, 0.41198450326919556, 0.3749357121331351, 0.4257146716117859, 0.42349207401275635, 0.3835415669849941, 0.38114789554050993, 0.3590852277619498, 0.39032367297581266, 0.3611739022391183, 0.359772869518825, 0.3478407859802246, 0.3726869055203029, 0.3464124458176749, 0.35485805783952984, 0.38605569090162006, 0.3449778897421701], "val_accuracy": [0.22466666996479034, 0.4246666729450226, 0.5703333616256714, 0.6266666650772095, 0.7223333120346069, 0.7183333039283752, 0.7400000095367432, 0.7406666874885559, 0.7509999871253967, 0.7730000019073486, 0.7573333382606506, 0.8013333082199097, 0.7893333435058594, 0.8013333082199097, 0.7940000295639038, 0.7883333563804626, 0.8206666707992554, 0.7856666445732117, 0.8253333568572998, 0.8233333230018616, 0.8186666369438171, 0.8373333215713501, 0.8069999814033508, 0.8073333501815796, 0.8320000171661377, 0.8316666483879089, 0.8446666598320007, 0.8299999833106995, 0.8403333425521851, 0.843999981880188, 0.8510000109672546, 0.8306666612625122, 0.8479999899864197, 0.8506666421890259, 0.8286666870117188, 0.8486666679382324]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 5, 3, 1, 7, 5, 1, 2, 6, 5, 8, 9], [2, 3, 5, 0, 1, 2, 2, 4, 2, 0], [80, 12, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1], [2, 3, 8, 9, 7], [3, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [28, 57]], "fitness": -0.7917143106460571, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 5, 4, 2, 2, 1, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.multiply(tf.math.add(beta, grad), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, sigma), tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2928137675315443, 2.265645000330288, 2.2344998322646727, 2.1964052427934537, 2.141657593322389, 2.07045492116943, 1.9728602040571355, 1.8531087567509914, 1.7229187436438256, 1.591257243266022, 1.4761813196602467, 1.3842910039442216, 1.304560806741489, 1.236422583285639, 1.1891596303592662, 1.1410885635950876, 1.1041953172414152, 1.070445454131658, 1.0263987686403864, 1.0118740573692724, 0.9806844960382003, 0.9595831451147082, 0.9361006660137698, 0.9292705135574714, 0.9105953561584191, 0.8930281650246945, 0.8882473247430076, 0.8825137799662559, 0.8643975913595483, 0.8575179478621769, 0.8356922555986948, 0.8298332129707583, 0.822629877329345, 0.8080975108568017, 0.8078489846966569, 0.8044495655797208, 0.7982546138237527, 0.7923737092418693, 0.7757236551788143, 0.7823548909459274, 0.7733344068034073, 0.7676679922715312, 0.7788886575493531, 0.7566652655475538, 0.749112960779278, 0.7506815282156313, 0.7401236176427801, 0.7447452400464738, 0.7368163372689014, 0.7284455722931779, 0.7197300448566931, 0.7257410767307969, 0.7252230579433282, 0.7155094230022286, 0.7109393921778296, 0.7026867273146403, 0.699716676487631, 0.7010611836794676, 0.6954348566604249, 0.6964341982512221, 0.696708590150462, 0.6831230179052059, 0.6918342824247393, 0.682434055279621, 0.6888044958872928, 0.6825637324312029, 0.6685478673823962, 0.6755315343528423, 0.6672713833635572], "accuracy": [0.11913882195949554, 0.1872936189174652, 0.2569013237953186, 0.3004887104034424, 0.35305771231651306, 0.3815876245498657, 0.41791045665740967, 0.4492141008377075, 0.4682340621948242, 0.5020473003387451, 0.5238409638404846, 0.544710099697113, 0.561880886554718, 0.575089156627655, 0.5875049233436584, 0.6000528335571289, 0.6127327680587769, 0.6269977688789368, 0.6392814517021179, 0.6392814517021179, 0.6469422578811646, 0.6592260003089905, 0.6672830581665039, 0.6684718132019043, 0.6712455153465271, 0.6807554960250854, 0.6783780455589294, 0.6816800832748413, 0.6888125538825989, 0.6926429867744446, 0.6988508701324463, 0.6946242451667786, 0.6984546184539795, 0.7037379741668701, 0.7018887996673584, 0.7088891863822937, 0.7092854380607605, 0.7181349992752075, 0.7180029153823853, 0.7164179086685181, 0.7160216569900513, 0.7153612375259399, 0.7124554514884949, 0.7234182953834534, 0.7272487282752991, 0.7236824631690979, 0.7268524765968323, 0.7276449799537659, 0.7301545143127441, 0.7293620109558105, 0.735041618347168, 0.7333245277404785, 0.7368907928466797, 0.7411174178123474, 0.7383436560630798, 0.7374191284179688, 0.7456082701683044, 0.735569953918457, 0.7407211661338806, 0.7366266250610352, 0.7383436560630798, 0.7494386434555054, 0.7467969655990601, 0.748249888420105, 0.7440232634544373, 0.7454761862754822, 0.7536653280258179, 0.748778223991394, 0.7499669790267944], "val_loss": [1.946676186152867, 1.9204936027526855, 1.8882785524640764, 1.844949177333287, 1.7850438526698522, 1.7040445463997977, 1.5987931319645472, 1.473421880177089, 1.340571403503418, 1.2129555770329066, 1.104837417602539, 1.0189501558031355, 0.9503253528050014, 0.89496568271092, 0.8531981025423322, 0.8172319786889213, 0.7873140573501587, 0.7627995354788644, 0.7414276259286063, 0.7240490743092128, 0.7093381030218942, 0.6942109721047538, 0.6795779977525983, 0.6713075808116368, 0.6614964859826225, 0.6518112080437797, 0.6441872460501534, 0.6366959810256958, 0.6308911527906146, 0.6236635616847447, 0.6169943298612323, 0.6095325095312936, 0.6047705241612026, 0.6019105059759957, 0.5962469918387276, 0.5937994207654681, 0.5881602934428624, 0.5866410051073346, 0.5808763674327305, 0.5772836719240461, 0.5730308634894234, 0.5694618054798671, 0.5664713553019932, 0.5638710941587176, 0.5614772013255528, 0.5581644603184291, 0.5527700866971698, 0.5515155792236328, 0.5502499341964722, 0.5483237675258091, 0.5437240089688983, 0.5419332810810634, 0.5397915329251971, 0.5371696608407157, 0.5371698481695992, 0.5326983417783465, 0.5296443700790405, 0.5289513724190849, 0.526279057775225, 0.5240217447280884, 0.5242447001593453, 0.5204991102218628, 0.5190606117248535, 0.5172277688980103, 0.5188899210521153, 0.5149295670645577, 0.5127157824380058, 0.5116301604679653, 0.5109755992889404], "val_accuracy": [0.23633334040641785, 0.3543333411216736, 0.40299999713897705, 0.44466665387153625, 0.49666666984558105, 0.5196666717529297, 0.5486666560173035, 0.5613333582878113, 0.5830000042915344, 0.6100000143051147, 0.6386666893959045, 0.6556666493415833, 0.6710000038146973, 0.6736666560173035, 0.6769999861717224, 0.6856666803359985, 0.6953333616256714, 0.6983333230018616, 0.7046666741371155, 0.7086666822433472, 0.7099999785423279, 0.7089999914169312, 0.7193333506584167, 0.7196666598320007, 0.7179999947547913, 0.7283333539962769, 0.7223333120346069, 0.7323333621025085, 0.7323333621025085, 0.7353333234786987, 0.7406666874885559, 0.7406666874885559, 0.7400000095367432, 0.7446666955947876, 0.7446666955947876, 0.7480000257492065, 0.7493333220481873, 0.7416666746139526, 0.7493333220481873, 0.7540000081062317, 0.7536666393280029, 0.753000020980835, 0.7549999952316284, 0.7563333511352539, 0.7540000081062317, 0.7599999904632568, 0.7613333463668823, 0.7630000114440918, 0.7590000033378601, 0.762333333492279, 0.762333333492279, 0.7663333415985107, 0.7683333158493042, 0.765999972820282, 0.7646666765213013, 0.7680000066757202, 0.7716666460037231, 0.7680000066757202, 0.7726666927337646, 0.7726666927337646, 0.7726666927337646, 0.7730000019073486, 0.7766666412353516, 0.7796666622161865, 0.7699999809265137, 0.7766666412353516, 0.7753333449363708, 0.7760000228881836, 0.7760000228881836]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 9, 3, 6, 9, 5, 9, 8, 6, 5, 8, 9], [0, 3, 0, 0, 0, 2, 2, 4, 2, 0], [57, 16, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1], [2, 3, 8, 9, 7], [1, 0], [37, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [24, 57]], "fitness": -0.7868571281433105, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 2, 3, 2, 1, 1, 0, 6, 3, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2977401575061545, 2.282716323985809, 2.267293983462496, 2.2526952994261844, 2.2338343516883756, 2.2147607109282452, 2.1897898036821752, 2.1603280267915737, 2.127357863951605, 2.086144974486482, 2.0394321208805724, 1.986172911450375, 1.9245928860201953, 1.8555858430924148, 1.7864662224606216, 1.7127664019922617, 1.6427558302769114, 1.5788917070713027, 1.5067094494527782, 1.4514517522900567, 1.3957452550933913, 1.3444605937266725, 1.301417613089313, 1.2714909965084087, 1.231281286847275, 1.20048014430511, 1.18188065327453, 1.1591686721428147, 1.1288225557258997, 1.1102530711425562, 1.0803539334916799, 1.0610600778408148, 1.0404813582981267, 1.0232580662907358, 1.0178246194140754, 1.0084254563586934, 0.9950717520231993, 0.9847069389044475, 0.9586256561246547, 0.9632196718943259, 0.9466583950959492, 0.9378815240328416, 0.9450710976223007, 0.9217802177425294, 0.9068784773814255, 0.9089961018639156, 0.8938896939691819, 0.8953711222726844, 0.8877742244362469, 0.876401013324069, 0.8590211130608782, 0.8641518247740033, 0.8669464123357699, 0.848573491046174, 0.8419674159812575, 0.8348182840055053, 0.8327500555556543, 0.8312118680580118, 0.8198979131030116, 0.8244859043475801, 0.8237978210538653, 0.8080416362062972, 0.8178871000258678, 0.8043951600644378, 0.8079835695282596, 0.8031432406619838, 0.7871879203727988, 0.7937417816193096, 0.7827559566737134, 0.7808410485407081, 0.7785978795452014, 0.7912435742448649, 0.7712022891496199, 0.7765330192498275, 0.7670088802834449, 0.7621402714813327, 0.763101350039287, 0.7637635487229076, 0.7562438999625591, 0.7460525229685436, 0.759623422614493, 0.7527043568916356, 0.7480049112989068, 0.738096516106532, 0.7354326587720963, 0.7312671781893121, 0.7402339515637539, 0.7369297497449786, 0.733213306725096, 0.7324272841510362, 0.731304367330836, 0.732133204312514, 0.7234954703375333, 0.718575507256774, 0.7152151533436577, 0.7187340567061898, 0.7156555028623672, 0.7166243347556694, 0.7056897956036053, 0.7076693045511978], "accuracy": [0.10632677376270294, 0.1438383311033249, 0.18253862857818604, 0.21318188309669495, 0.2566371560096741, 0.2826575040817261, 0.316470742225647, 0.3413023352622986, 0.3591335415840149, 0.38541802763938904, 0.4031171500682831, 0.4225333631038666, 0.43164706230163574, 0.4434024691581726, 0.4566107392311096, 0.4748381972312927, 0.48064985871315, 0.5001981258392334, 0.5192180871963501, 0.5247655510902405, 0.5363888740539551, 0.5521067380905151, 0.5602958798408508, 0.565711259841919, 0.579051673412323, 0.5869766473770142, 0.5893540978431702, 0.594241201877594, 0.6063928008079529, 0.6058644652366638, 0.6235635876655579, 0.6242240071296692, 0.6318848133087158, 0.6350548267364502, 0.6384889483451843, 0.6395456194877625, 0.6448289752006531, 0.6563201546669006, 0.6629242897033691, 0.6580372452735901, 0.6610751748085022, 0.6618676781654358, 0.6641130447387695, 0.6756042838096619, 0.6745476126670837, 0.6762647032737732, 0.6765288710594177, 0.6798309087753296, 0.6769251227378845, 0.6859067678451538, 0.6927750706672668, 0.6913221478462219, 0.6913221478462219, 0.698190450668335, 0.6999075412750244, 0.7017567157745361, 0.7017567157745361, 0.6970016956329346, 0.7041342258453369, 0.6973979473114014, 0.7005679607391357, 0.7113987803459167, 0.705058753490448, 0.7041342258453369, 0.7042662501335144, 0.7042662501335144, 0.7143045663833618, 0.7083608508110046, 0.7121912837028503, 0.713379979133606, 0.7164179086685181, 0.7029454708099365, 0.7219653725624084, 0.7194558382034302, 0.7153612375259399, 0.7186633348464966, 0.7234182953834534, 0.7177387475967407, 0.7244749665260315, 0.7238145470619202, 0.7186633348464966, 0.7209087014198303, 0.7301545143127441, 0.7290979027748108, 0.7265883088111877, 0.7310791015625, 0.722229540348053, 0.7298903465270996, 0.7279091477394104, 0.7292299270629883, 0.7316074371337891, 0.7320036888122559, 0.7331924438476562, 0.735041618347168, 0.7388719916343689, 0.7308149337768555, 0.7333245277404785, 0.7367587089538574, 0.7413815855979919, 0.7427024245262146], "val_loss": [1.957688876560756, 1.9442556244986398, 1.9301889283316476, 1.914614132472447, 1.8968923432486398, 1.8761756760733468, 1.8514013971601213, 1.8217527525765556, 1.786543846130371, 1.744769777570452, 1.696120023727417, 1.6402620247432165, 1.5777216298239571, 1.5091100420270647, 1.4378109318869454, 1.3643880231039864, 1.292590924671718, 1.2256858689444405, 1.1625721454620361, 1.1056585993085588, 1.05483763558524, 1.0098417486463274, 0.9701282637459892, 0.9370005811963763, 0.906825065612793, 0.880434547151838, 0.8574734074728829, 0.8364100626536778, 0.8182695252554757, 0.8016537938799176, 0.7851205723626273, 0.7708686930792672, 0.75799446446555, 0.7466219323022025, 0.7363116911479405, 0.7274362700326102, 0.7186100482940674, 0.7104040043694633, 0.7018405369349888, 0.6944607496261597, 0.6878058910369873, 0.6809343951089042, 0.6757909059524536, 0.6697839498519897, 0.6641132831573486, 0.6588991199220929, 0.6526983295168195, 0.6486536264419556, 0.6443483318601336, 0.6406042916434151, 0.6350585562842233, 0.6316112279891968, 0.62861054284232, 0.6245542083467756, 0.6212385381971087, 0.6164580072675433, 0.6130807570048741, 0.6107192890984672, 0.6076464823314122, 0.6047247307641166, 0.6031790120261056, 0.5998614345278058, 0.5974913665226528, 0.5942735842296055, 0.5945630073547363, 0.5901012761252267, 0.5874102285930088, 0.5854388816016061, 0.5834354162216187, 0.5810272353036063, 0.5786916358130318, 0.5772932427270072, 0.574472257069179, 0.572451114654541, 0.5708326612200055, 0.5695945194789341, 0.5674355711255755, 0.5653591326304844, 0.5630100624901908, 0.5613407748086112, 0.5603145360946655, 0.5587963376726423, 0.5576645476477486, 0.5561164958136422, 0.5539050102233887, 0.5525573151452201, 0.5506403957094465, 0.5491734913417271, 0.5476751157215664, 0.5464695521763393, 0.5452305248805455, 0.5442979335784912, 0.5424460683550153, 0.541220988546099, 0.5395933730261666, 0.5386532204491752, 0.5371485607964652, 0.536349858556475, 0.5347571883882795, 0.5339057786124093], "val_accuracy": [0.1379999965429306, 0.24899999797344208, 0.33500000834465027, 0.3726666569709778, 0.39933332800865173, 0.4230000078678131, 0.4426666796207428, 0.4596666693687439, 0.48766666650772095, 0.500333309173584, 0.5239999890327454, 0.5416666865348816, 0.5540000200271606, 0.5683333277702332, 0.5736666917800903, 0.5866666436195374, 0.5953333377838135, 0.6060000061988831, 0.6256666779518127, 0.6336666941642761, 0.6489999890327454, 0.6553333401679993, 0.6626666784286499, 0.6696666479110718, 0.6713333129882812, 0.6759999990463257, 0.6803333163261414, 0.6859999895095825, 0.6880000233650208, 0.6886666417121887, 0.6943333148956299, 0.6946666836738586, 0.6953333616256714, 0.7003333568572998, 0.7016666531562805, 0.7036666870117188, 0.7113333344459534, 0.7093333601951599, 0.7166666388511658, 0.7153333425521851, 0.718999981880188, 0.7200000286102295, 0.7226666808128357, 0.7229999899864197, 0.7223333120346069, 0.7263333201408386, 0.7279999852180481, 0.7310000061988831, 0.7250000238418579, 0.7293333411216736, 0.7323333621025085, 0.7326666712760925, 0.7326666712760925, 0.7353333234786987, 0.7310000061988831, 0.7386666536331177, 0.737666666507721, 0.7413333058357239, 0.7400000095367432, 0.7423333525657654, 0.7433333396911621, 0.7423333525657654, 0.7426666617393494, 0.7433333396911621, 0.7383333444595337, 0.7476666569709778, 0.7456666827201843, 0.7459999918937683, 0.7476666569709778, 0.7490000128746033, 0.7490000128746033, 0.7516666650772095, 0.7516666650772095, 0.7523333430290222, 0.7519999742507935, 0.7543333172798157, 0.7543333172798157, 0.7559999823570251, 0.7549999952316284, 0.7563333511352539, 0.7563333511352539, 0.7593333125114441, 0.7603333592414856, 0.7613333463668823, 0.7616666555404663, 0.7606666684150696, 0.762666642665863, 0.7616666555404663, 0.7639999985694885, 0.7633333206176758, 0.7663333415985107, 0.7663333415985107, 0.7676666378974915, 0.765666663646698, 0.7680000066757202, 0.7680000066757202, 0.7699999809265137, 0.7706666588783264, 0.7689999938011169, 0.7693333625793457]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 6, 3, 2, 7, 5, 4, 1, 6, 5, 8, 9], [1, 3, 0, 0, 0, 2, 2, 4, 2, 0], [80, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1], [8, 3, 8, 9, 7], [1, 0], [88, 19], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 16, 16, 8, 8, 3, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(tf.math.square(tf.math.add(beta, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)))), tf.math.add(beta, beta))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.301965903360389, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10077928751707077, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 6, 3, 2, 7, 5, 1, 8, 6, 5, 8, 9], [0, 2, 5, 3, 2, 2, 2, 4, 2, 0], [89, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1], [2, 0, 0, 9, 7], [0, 0], [88, 19], [1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57, 26]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1254500171.7249897, 24024614003.370758, 110261955172.69582, 308939306868.14844, 656041235951.702, 1223715970607.812], "accuracy": [0.09840179979801178, 0.1014397069811821, 0.09840179979801178, 0.09998679161071777, 0.09985470771789551, 0.09708096832036972], "val_loss": [4788429238.857142, 38296087990.85714, 129236360045.71428, 306324261156.5714, 598276121746.2858, 1033804934582.8572], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 9, 3, 4, 7, 5, 8, 8, 6, 5, 8, 9], [1, 3, 0, 0, 0, 2, 2, 4, 2, 0], [57, 1, 79, 81, 53, 45], [0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 0, 0, 1], [2, 3, 6, 9, 7], [4, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [15, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 9, 5, 4, 7, 5, 4, 1, 1, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.pow(alpha, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.sqrt(tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.sqrt(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), tf.math.divide_no_nan(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), sigma)))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.711450172909782, 2.6894632197327035, 2.304062902210978, 2.303581804537014, 2.303762704657526, 2.3063599102847596, 391114.29552064586, 2.31113558214858, 2.309412477353718, 2.303373347467451, 2.3029745599109073], "accuracy": [0.13313961029052734, 0.09549596905708313, 0.09945846349000931, 0.09536388516426086, 0.09470347315073013, 0.1022322028875351, 0.09576013684272766, 0.09628847241401672, 0.09708096832036972, 0.09708096832036972, 0.09589222073554993], "val_loss": [1.9751898901803153, 1.975691454751151, 1.974332673209054, 1.9734125818525041, 1.973067283630371, 488.44022042410717, 1.9855749947684151, 1.976907661982945, 1.9744982719421387, 1.973853315625872, 1.9745947974068778], "val_accuracy": [0.10266666859388351, 0.09799999743700027, 0.09799999743700027, 0.09966666996479034, 0.09933333098888397, 0.10733333230018616, 0.09933333098888397, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 9, 3, 2, 7, 5, 1, 8, 6, 5, 8, 9], [1, 3, 0, 0, 0, 2, 2, 4, 2, 0], [57, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1], [2, 3, 8, 9, 7], [0, 0], [88, 19], [1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 5, 0, 3, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 69, 26]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08136309683322906, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 9, 3, 2, 7, 5, 1, 8, 6, 5, 8, 9], [0, 2, 5, 3, 2, 2, 2, 4, 2, 0], [57, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 1], [2, 0, 0, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [48, 57, 26]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.301965903360389, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10077928751707077, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 6, 3, 2, 7, 5, 1, 8, 6, 5, 8, 9], [1, 3, 0, 0, 0, 2, 2, 4, 2, 0], [89, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1], [2, 3, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 1, 0, 2, 3, 3, 2], [24, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.negative(tf.math.pow(alpha, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 3, 3, 2, 7, 5, 1, 8, 6, 5, 8, 9], [1, 3, 1, 0, 0, 3, 2, 4, 2, 0], [57, 38, 79, 81, 53, 45], [0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 1], [2, 3, 0, 9, 7], [1, 0], [88, 19], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 18, 18, 10, 8, 2, 6, 6, 4, 2, 2, 1, 0, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(alpha, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, alpha)))))), tf.math.divide_no_nan(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad))), beta)), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(sigma, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [3, 6, 3, 2, 8, 5, 2, 8, 5, 5, 8, 9], [1, 3, 0, 3, 3, 3, 2, 4, 2, 0], [57, 47, 79, 81, 53, 45], [0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1], [9, 3, 8, 9, 7], [1, 0], [77, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 0, 9, 2, 1, 2, 3], [1, 0, 2, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 11, 11, 6, 5, 1, 1, 1, 1, 0, 1, 5, 4, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.multiply(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))))), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 6, 3, 2, 7, 5, 1, 8, 6, 5, 8, 9], [1, 3, 0, 0, 2, 3, 2, 4, 2, 0], [89, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1], [0, 3, 8, 9, 7], [0, 0], [88, 19], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 3, 0, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [48, 57, 26]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 5, 6, 2, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(tf.math.add(beta, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10328886657953262, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 5, 3, 2, 7, 5, 1, 8, 6, 5, 8, 9], [1, 3, 3, 0, 0, 2, 2, 4, 2, 0], [89, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1], [2, 3, 8, 9, 7], [3, 0], [2, 19], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 1, 0, 2, 3, 3, 2], [16, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 9, 7, 2, 1, 0, 0, 0, 0, 7, 4, 3, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(grad))))), tf.math.divide_no_nan(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta))))), beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(alpha), tf.math.pow(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 9, 3, 0, 7, 5, 1, 8, 2, 5, 8, 9], [1, 3, 0, 0, 0, 2, 2, 4, 2, 0], [57, 47, 79, 14, 53, 45], [0, 0, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1], [2, 3, 0, 9, 7], [1, 0], [7, 19], [1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 2, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 9, 5, 4, 6, 5, 4, 1, 1, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.negative(alpha), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)))))), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08136309683322906, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 9, 3, 2, 7, 5, 1, 8, 6, 5, 8, 9], [1, 3, 0, 0, 0, 2, 2, 4, 2, 0], [57, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1], [2, 3, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 6, 4, 3, 1, 0, 7, 4, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.math.sqrt(sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.negative(tf.math.pow(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07792893797159195, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 9, 3, 2, 7, 5, 1, 8, 6, 5, 8, 9], [1, 3, 0, 0, 0, 2, 2, 4, 2, 0], [57, 47, 79, 81, 53, 45], [0, 0, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1], [2, 0, 4, 5, 7], [0, 0], [88, 19], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 7, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [16, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 2, 1, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.negative(sigma)), tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303827686175033, 2.303048160428526, 2.3022212523353445, 2.303371553266085, 2.302331451569188, 2.303604818558759], "accuracy": [0.09285431355237961, 0.08875974267721176, 0.09338264167308807, 0.08308017253875732, 0.09298639744520187, 0.08849557489156723], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 9, 3, 0, 7, 5, 1, 5, 6, 5, 8, 9], [1, 3, 0, 0, 0, 2, 2, 4, 2, 0], [57, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1], [2, 3, 8, 9, 7], [1, 0], [95, 19], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [10, 57]], "fitness": -0.026000000536441803, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 10, 5, 4, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.negative(alpha), tf.math.add(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))), tf.math.divide_no_nan(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(beta, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.negative(tf.math.pow(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.3050981087219196, 2.307356784151939, 2.309637999065391, 2.313995336292757, 2.3162429368632926, 2.3209172606767368], "accuracy": [0.08902391046285629, 0.07858935743570328, 0.07832518965005875, 0.06155065447092056, 0.06670188903808594, 0.05666358396410942], "val_loss": [1.9740734100341797, 1.9769189698355538, 1.9797910281590052, 1.9827334540230888, 1.9857427052089147, 1.9888351985386439], "val_accuracy": [0.025333333760499954, 0.018333332613110542, 0.011666666716337204, 0.010333333164453506, 0.008666666224598885, 0.006000000052154064]}}]