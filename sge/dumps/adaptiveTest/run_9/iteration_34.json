[{"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 0, 1, 0, 0, 0, 1], [0, 1, 0], [2, 9], [5, 4], [8, 0, 19], [1, 1, 0, 1], [1], [], [2], [], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7], [2, 0, 0, 3], [28, 57]], "fitness": -0.7919999957084656, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 6, 3, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.289808854986223, 2.2614915965806697, 2.228942811166322, 2.1880893297577106, 2.1303195971948847, 2.0453198654871136, 1.9304026366224882, 1.7790419309366932, 1.6377592714250742, 1.5000902695221876, 1.3962426909744117, 1.3153121183734482, 1.2428794035648925, 1.1782583417263894, 1.1329242625587321, 1.0842997088424124, 1.0539640538161221, 1.0147320605886296, 0.9865578342391012, 0.9747655424207603, 0.9516155712199234, 0.9308309142914871, 0.9212546636242326, 0.8962614000859183, 0.8825265259365475, 0.8763720080317476, 0.8648232073044465, 0.8412787352948534, 0.8339099040388541, 0.8193209278443392, 0.8248928113620452, 0.8111399164871848, 0.8009334061407473, 0.8035211052010954, 0.7882285615346373, 0.7738330285893361, 0.7786345781667153, 0.7674006702735865, 0.7659442820537674, 0.7582232278446086, 0.7542563460412011, 0.7564870122558862, 0.7417197028375998, 0.7487886783201555, 0.7394126451341405, 0.732271034696146, 0.726407622443907, 0.7145638574210487, 0.7169355353848054, 0.721562087701186, 0.7170562293818913, 0.7118140187371818, 0.6985064836509507, 0.7179771311499455, 0.6995568033128193, 0.6926569549666735, 0.6913530531025298, 0.6871310027756349, 0.6828090513717733, 0.6780838954560493, 0.6749612514164312, 0.6833631674359425, 0.6763815964296462, 0.6683176473745533, 0.6715052651297762, 0.660451925221278, 0.672898386022623, 0.6562632291607648, 0.6599460583652063, 0.6559698029185457, 0.6614333257510158, 0.6653374226857579, 0.654224717188757], "accuracy": [0.12732796370983124, 0.2071060687303543, 0.28345000743865967, 0.3366794288158417, 0.37326639890670776, 0.41183462738990784, 0.44327038526535034, 0.4784044325351715, 0.49332982301712036, 0.5268788933753967, 0.5388984084129333, 0.5585787892341614, 0.5700700283050537, 0.5995244979858398, 0.6148461103439331, 0.6242240071296692, 0.6302998065948486, 0.6444327235221863, 0.6590939164161682, 0.655527651309967, 0.6675472259521484, 0.6679434776306152, 0.6730946898460388, 0.6773213744163513, 0.6853784322738647, 0.6870955228805542, 0.6861709356307983, 0.6989829540252686, 0.7038700580596924, 0.7040021419525146, 0.7047945857048035, 0.7066437602043152, 0.7136441469192505, 0.705058753490448, 0.7108704447746277, 0.7143045663833618, 0.713908314704895, 0.720380425453186, 0.7136441469192505, 0.7187954187393188, 0.722229540348053, 0.7180029153823853, 0.7293620109558105, 0.72672039270401, 0.7234182953834534, 0.7285695672035217, 0.728701651096344, 0.7353057861328125, 0.7388719916343689, 0.7275128960609436, 0.7372870445251465, 0.7359662055969238, 0.7386078238487244, 0.7317395210266113, 0.7372870445251465, 0.7396644949913025, 0.7434949278831482, 0.7434949278831482, 0.7453441023826599, 0.7457403540611267, 0.7441553473472595, 0.746268630027771, 0.7475894689559937, 0.7473253011703491, 0.7515519857406616, 0.7524765729904175, 0.7469290494918823, 0.7581561207771301, 0.7500990629196167, 0.7524765729904175, 0.7585523724555969, 0.7498348951339722, 0.7560427784919739], "val_loss": [1.9435041972569056, 1.916954449244908, 1.8841566358293806, 1.8386979784284319, 1.771557126726423, 1.6730083397456579, 1.544727052961077, 1.3953894547053747, 1.25178861618042, 1.1285186835697718, 1.0299639701843262, 0.9554153851100377, 0.8984864098685128, 0.8512705223900932, 0.8124980415616717, 0.7823518174035209, 0.7577043090547834, 0.7355278049196515, 0.716394339288984, 0.6999576432364327, 0.6864538363048008, 0.6731396402631488, 0.6620686565126691, 0.6525069304874965, 0.6452276195798602, 0.6348368270056588, 0.6279974664960589, 0.6181671278817313, 0.6127758196422032, 0.6066878693444389, 0.6012488262993949, 0.5955731868743896, 0.5909728152411324, 0.5872327429907662, 0.5825084447860718, 0.5777806384222848, 0.5741519587380546, 0.5702765498842511, 0.5668812990188599, 0.5614861590521676, 0.5598057338169643, 0.556504351752145, 0.5533374207360404, 0.5493552003587995, 0.5472595861979893, 0.5443056651524135, 0.5431848083223615, 0.5397550208227975, 0.5367681980133057, 0.5342879295349121, 0.5318913289478847, 0.5321179968970162, 0.5288265602929252, 0.5308151245117188, 0.5277859824044364, 0.5224970919745309, 0.5211787564413888, 0.5206608942576817, 0.5167625972202846, 0.5168668372290475, 0.5146745443344116, 0.5124754905700684, 0.5114022493362427, 0.508671488080706, 0.5072004965373448, 0.5076193809509277, 0.5047344991139003, 0.5029935836791992, 0.5009175539016724, 0.5014604159763881, 0.4989062717982701, 0.4974906955446516, 0.4970909867967878], "val_accuracy": [0.29100000858306885, 0.3779999911785126, 0.4169999957084656, 0.45899999141693115, 0.5109999775886536, 0.5336666703224182, 0.5630000233650208, 0.5886666774749756, 0.6136666536331177, 0.6383333206176758, 0.656000018119812, 0.6706666946411133, 0.6790000200271606, 0.6859999895095825, 0.6919999718666077, 0.6936666369438171, 0.7020000219345093, 0.7070000171661377, 0.7153333425521851, 0.7139999866485596, 0.7183333039283752, 0.7273333072662354, 0.7296666502952576, 0.7296666502952576, 0.7363333106040955, 0.7333333492279053, 0.737333357334137, 0.7400000095367432, 0.7379999756813049, 0.7480000257492065, 0.7486666440963745, 0.7493333220481873, 0.746999979019165, 0.7506666779518127, 0.753333330154419, 0.7540000081062317, 0.7540000081062317, 0.7559999823570251, 0.7583333253860474, 0.7566666603088379, 0.7613333463668823, 0.7633333206176758, 0.7606666684150696, 0.7646666765213013, 0.765999972820282, 0.7676666378974915, 0.7630000114440918, 0.7670000195503235, 0.7689999938011169, 0.7673333287239075, 0.7720000147819519, 0.7736666798591614, 0.7710000276565552, 0.7726666927337646, 0.7749999761581421, 0.7730000019073486, 0.7733333110809326, 0.7693333625793457, 0.7739999890327454, 0.7756666541099548, 0.7743333578109741, 0.7776666879653931, 0.7733333110809326, 0.7766666412353516, 0.778333306312561, 0.7763333320617676, 0.7789999842643738, 0.7826666831970215, 0.7793333530426025, 0.7776666879653931, 0.777999997138977, 0.781333327293396, 0.7776666879653931]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 0, 1, 0, 0, 0, 1], [0, 1, 1], [2], [5, 4], [8, 0, 19], [1, 1, 0, 1], [1], [], [2], [], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7], [1, 0, 0, 3], [28, 57]], "fitness": -0.769428551197052, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 6, 3, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2882142565773465, 2.255991954152232, 2.2137696622715746, 2.155926161847803, 2.0676237497630767, 1.9477162189518913, 1.7992501982356484, 1.6399616498390381, 1.4906992951813722, 1.3655501962290653, 1.2773502618251553, 1.2199852055625326, 1.1526365176860793, 1.1084860948570936, 1.0694143211584932, 1.0292082630868413, 1.0053790506984674, 0.97217612029728, 0.9556047958610332, 0.9390604850118817, 0.9184434669695793, 0.9080340215448438, 0.8929995113769463, 0.8712206767566169, 0.8729712587731184, 0.8628411150296698, 0.8344360112183444, 0.8364091647252304, 0.826179373793362, 0.8218707695235319, 0.812186658146233, 0.8021317519028078, 0.7934470294394498, 0.7757315160875166, 0.782883000915486, 0.7704989858874083, 0.7764505165017843, 0.7665521591693151, 0.7505233433457288, 0.7565935818967314, 0.7491300995119055, 0.7386442138581558, 0.739142626913673, 0.7337698163436372], "accuracy": [0.1282525360584259, 0.2106723040342331, 0.28701624274253845, 0.34328359365463257, 0.3899088501930237, 0.4239862561225891, 0.4547615945339203, 0.4831594228744507, 0.5204068422317505, 0.5451063513755798, 0.564258337020874, 0.5746929049491882, 0.5978074073791504, 0.6184123754501343, 0.6273940205574036, 0.6400739550590515, 0.646149754524231, 0.6641130447387695, 0.6660943031311035, 0.6732267737388611, 0.6715096831321716, 0.6807554960250854, 0.6831330060958862, 0.6911900639533997, 0.6888125538825989, 0.6923788189888, 0.7069079279899597, 0.703209638595581, 0.7009642124176025, 0.7010962963104248, 0.7041342258453369, 0.7123233675956726, 0.7112666964530945, 0.7228899598121643, 0.7190595865249634, 0.7219653725624084, 0.7238145470619202, 0.7207766771316528, 0.7272487282752991, 0.7288337349891663, 0.7300224304199219, 0.7323999404907227, 0.7320036888122559, 0.7343811988830566], "val_loss": [1.9411025047302246, 1.9072058541434151, 1.8606809888567244, 1.7923766544886999, 1.6925808361598425, 1.5588404791695731, 1.4007979120526994, 1.243922301701137, 1.1082089287894112, 1.004319531576974, 0.9256422179085868, 0.8703948770250592, 0.8245747600282941, 0.7907289947782244, 0.7646663870130267, 0.7346864257540021, 0.7168146201542446, 0.6999443428856986, 0.6855688776288714, 0.6717743532998222, 0.6630848816462925, 0.65155143397195, 0.6416005747658866, 0.6314702033996582, 0.6257516997201102, 0.6182899475097656, 0.6090585504259381, 0.605954817363194, 0.5989916665213448, 0.5934102875845773, 0.5882798263004848, 0.5833198513303485, 0.5780225992202759, 0.5737930365971157, 0.5694499015808105, 0.565545950617109, 0.5621733665466309, 0.5580358675548008, 0.5536374534879412, 0.5521541833877563, 0.5496914046151298, 0.5454775605882917, 0.5438427073614938, 0.5405351604734149], "val_accuracy": [0.2863333225250244, 0.37966665625572205, 0.4323333203792572, 0.4803333282470703, 0.5260000228881836, 0.550000011920929, 0.5789999961853027, 0.5923333168029785, 0.6366666555404663, 0.6603333353996277, 0.6669999957084656, 0.6796666383743286, 0.6850000023841858, 0.6866666674613953, 0.6859999895095825, 0.6966666579246521, 0.7039999961853027, 0.7076666951179504, 0.7113333344459534, 0.7200000286102295, 0.7243333458900452, 0.7260000109672546, 0.7213333249092102, 0.7336666584014893, 0.7350000143051147, 0.7369999885559082, 0.7400000095367432, 0.734666645526886, 0.7419999837875366, 0.7413333058357239, 0.7473333477973938, 0.7406666874885559, 0.7490000128746033, 0.750333309173584, 0.7540000081062317, 0.7526666522026062, 0.7606666684150696, 0.7603333592414856, 0.7646666765213013, 0.762666642665863, 0.762333333492279, 0.762333333492279, 0.762666642665863, 0.7633333206176758]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [3, 2, 1, 1], [50], [1, 0, 1, 0, 0, 0, 1, 0, 0, 1], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [2, 2, 3, 0, 6, 8, 3, 1], [5, 4, 5, 1, 2, 5, 4], [8, 0, 19], [0, 1, 0, 1], [1], [], [2], [], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 5, 7], [1, 0, 0, 3], [28, 57]], "fitness": -0.14742857217788696, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(grad)))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.410246078789494, 2.693987717859623, 2.310036302415875, 2.2395174689438395, 2.305153960675265, 2.30298295028615, 2.302638780864443, 2.2940517553579634], "accuracy": [0.21172896027565002, 0.14898955821990967, 0.10117553919553757, 0.19297318160533905, 0.09985470771789551, 0.10117553919553757, 0.10011887550354004, 0.1558578759431839], "val_loss": [2.017580304827009, 1.9914391381399972, 1.9722650391714913, 1.9774979182652064, 1.9741194588797433, 1.973529543195452, 1.9714830943516322, 1.974583625793457], "val_accuracy": [0.09933333098888397, 0.10133333504199982, 0.11900000274181366, 0.09799999743700027, 0.10366666316986084, 0.1003333330154419, 0.1120000034570694, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 4, 2, 6, 8, 2, 3, 8], [5, 3, 1, 2, 2, 0], [8, 74, 19], [1, 1, 0, 1], [1], [], [2], [], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7], [1, 0, 0, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(grad, tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(grad)), tf.math.add(beta, alpha)), beta))), tf.math.add(beta, tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09628847241401672, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 1], [2, 9, 6], [0, 4, 1], [8, 74, 19], [1, 1, 0, 1], [1], [7, 9], [2], [89], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 0, 5, 7, 8, 7], [1, 0, 0, 3, 1], [24, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 2, 1, 0, 0, 0, 0, 12, 7, 5, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(alpha, tf.math.negative(tf.math.square(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))), tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(sigma, alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 0, 1, 0, 0, 0, 1], [0, 1, 1], [2, 9, 7, 7, 3, 9, 1, 1, 4, 2, 4], [5, 4], [8, 0, 19], [1, 1, 0, 1], [1], [], [2], [], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [4, 8, 0, 5, 7], [0, 0, 0, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 4, 2, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.sqrt(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3029401413186066, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09734513610601425, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [3, 2, 1, 1], [50], [1, 0, 0, 0, 0, 0, 1], [0, 1, 1], [1, 2, 3, 0, 6, 8, 3, 1], [0, 1, 5, 1, 2, 5, 4], [8, 0, 19], [1, 1, 0, 1], [1], [], [2], [], [1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 5, 7], [1, 0, 0, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07119271159172058, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 0, 0, 0, 0, 0, 1], [0, 1, 1], [2], [5, 4], [8, 0, 19], [0, 1, 0, 1], [1], [], [2], [], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [2, 3, 0, 5, 7], [1, 3, 0, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(alpha, sigma), tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [2, 2, 3, 0, 6, 8, 0, 1], [5, 4, 2, 3, 2, 1, 5], [8, 0, 19], [0, 1, 0, 1], [1], [], [6], [], [1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7], [3, 0, 0, 3], [94, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(beta, tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))))))))))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07119271159172058, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 0, 1, 0, 0, 0, 1], [0, 1, 1], [2], [3, 4], [8, 0, 19], [0, 1, 0, 1], [1], [], [2], [], [1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 1, 5, 7], [1, 3, 0, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07119271159172058, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 0, 1, 0, 0, 0, 1], [0, 1, 1], [2], [5, 4], [8, 0, 19], [1, 1, 0, 1], [1], [], [2], [], [1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7], [1, 0, 0, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07753269374370575, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 0, 0, 0, 0, 1], [1, 1, 1], [2], [5, 4], [8, 0, 19], [0, 1, 0, 1], [0, 0], [7, 9], [2], [72], [1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7], [1, 0, 1, 3], [24, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07119271159172058, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [0, 2, 1, 1], [50], [1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1], [5, 1, 8, 5, 4, 2, 6, 3, 9], [5, 4], [8, 0, 19], [1, 1, 0, 1], [1], [], [2], [], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 5, 7], [1, 0, 0, 3], [66, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3031978638983674, 2.3025849611531504, 2.3032495677589253, 2.303563288284441, 2.305819177860597, 2.3071663910922844], "accuracy": [0.09959053993225098, 0.09774138033390045, 0.09734513610601425, 0.09840179979801178, 0.09774138033390045, 0.10355303436517715], "val_loss": [1.9740501812526159, 1.9741104670933314, 1.9747883251735143, 1.9757705415998186, 1.9779364722115653, 1.9817874091012138], "val_accuracy": [0.10000000149011612, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [1, 2, 1, 1], [50], [1, 1, 0, 0, 0, 0, 1], [0, 1, 1], [2, 9, 7, 7, 3, 9, 1, 1, 4, 2, 4], [5, 4], [8, 0, 19], [0, 1, 0, 1], [1], [], [2], [], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7], [0, 0, 0, 3], [98, 67, 84]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 6, 3, 3, 3], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1136836012.5818615, 22100705047.905956, 100590735797.67851, 284577631176.6815, 606698798714.4716, 1112488623628.1052], "accuracy": [0.1006472036242485, 0.09866596013307571, 0.10117553919553757, 0.09602430462837219, 0.09734513610601425, 0.10421344637870789], "val_loss": [4413020013.714286, 35293354861.71429, 119102467510.85715, 282302901686.8571, 551361183744.0, 952733007872.0], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 0, 1, 0, 0, 0, 1], [0, 1, 1], [9, 8, 1, 4, 0, 0, 5, 1, 4, 4, 1, 3, 6, 8, 3, 7, 4, 3, 5, 2, 0, 2, 1, 5, 6, 2, 2, 6, 4, 1, 7, 4, 6, 6, 8, 8, 6, 9, 0, 3, 7, 8, 2, 3], [5, 4], [8, 0, 19, 28, 4, 10], [1, 1, 0, 1], [1], [], [2], [], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7], [2, 0, 0, 3], [84, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad)), lambda shape,  alpha, beta, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(beta), tf.math.square(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3027364888353086, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09694888442754745, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [6, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 0, 0, 0, 0, 0, 1], [1, 1, 1], [3, 9, 6], [5, 4], [8, 0, 19], [1, 1, 0, 1], [0, 1], [], [2], [], [1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 0, 5, 7], [2, 0, 1, 3, 3], [97, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07145687192678452, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [3, 2, 1, 1], [50], [1, 0, 1, 0, 0, 0, 1], [0, 1, 1], [2, 2, 3, 0, 6, 8, 3, 1], [5, 4, 5, 1, 2, 5, 4], [8, 0, 19], [0, 1, 0, 1], [1], [], [2], [], [1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 5, 7], [2, 0, 0, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07528728246688843, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 0, 0, 0, 0, 1, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 1], [2, 9, 6], [5, 4], [8, 0, 19], [0, 1, 0, 1], [1], [], [2], [], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 0, 5, 7], [2, 0, 0, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07132479548454285, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 0, 0, 0, 0, 0, 1], [0, 1, 1], [5], [5, 3], [8, 0, 19], [1, 1, 0, 1], [0], [], [2], [], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7], [2, 0, 0, 3], [8, 42]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(beta, tf.math.negative(tf.math.square(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3026156275263867, 2.303491501020261, 2.302547159164715, 2.303232406974705, 2.303482167488706, 2.3023734368573816], "accuracy": [0.09272222965955734, 0.09034473448991776, 0.09047681838274002, 0.0878351628780365, 0.08836349099874496, 0.1002509593963623], "val_loss": [1.9712321417672294, 1.9712322098868233, 1.9712321417672294, 1.9712321417672294, 1.9712322098868233, 1.9712322098868233], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 0, 0, 0, 0, 1], [1, 1, 1], [2, 6, 0], [5, 4], [8, 0, 19], [0, 1, 0, 1], [0, 0], [2, 9], [2], [89], [0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 1, 0, 5, 7], [1, 0, 1, 3], [24, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 3, 2, 2, 0, 1, 7, 4, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.square(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.math.subtract(tf.math.negative(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.square(alpha)))", "other_info": {"loss": [2.3026156275263867, 2.303491501020261, 2.302547127673686, 2.303232406974705, 2.3034822304707636, 2.3023734863297878], "accuracy": [0.09272222965955734, 0.09034473448991776, 0.09047681838274002, 0.0878351628780365, 0.08836349099874496, 0.1002509593963623], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]