[{"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 6, 2, 7, 6, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 56, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [3, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8237142562866211, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1106624603271484, 1.481410264968872, 1.187004804611206, 0.8784398436546326, 0.8015593886375427, 0.7744799852371216, 0.7121285796165466, 0.6903559565544128, 0.6731758117675781, 0.6492716073989868, 0.6315757036209106, 0.6040689945220947, 0.5892593860626221, 0.5764546394348145, 0.5465516448020935, 0.5373217463493347, 0.5560179352760315, 0.5373589396476746, 0.49902334809303284, 0.5230302214622498, 0.4917350709438324, 0.4925335645675659, 0.4879665970802307, 0.45334193110466003, 0.46716517210006714, 0.4545917212963104, 0.4496716856956482, 0.4465123414993286, 0.4262824058532715, 0.43593350052833557, 0.42324313521385193, 0.41296330094337463, 0.4081166684627533, 0.3987351953983307, 0.40692034363746643, 0.4020408093929291, 0.40209853649139404, 0.3702155649662018, 0.3699602484703064, 0.3813305199146271, 0.3488825559616089, 0.3963935673236847, 0.35370880365371704, 0.35105642676353455, 0.33754226565361023, 0.3503640294075012, 0.35277292132377625, 0.33256492018699646, 0.3163188099861145, 0.3354397714138031], "accuracy": [0.28939375281333923, 0.49768856167793274, 0.5739004015922546, 0.6691322326660156, 0.7069079279899597, 0.7073041796684265, 0.7263241410255432, 0.7297582626342773, 0.7416457533836365, 0.7535332441329956, 0.7564390301704407, 0.7737419009208679, 0.7798177003860474, 0.7814027070999146, 0.793422281742096, 0.8020076751708984, 0.7938185334205627, 0.8050455451011658, 0.8165367841720581, 0.8001585006713867, 0.8193105459213257, 0.8215559124946594, 0.819970965385437, 0.8314621448516846, 0.828820526599884, 0.8325188159942627, 0.8317263126373291, 0.8433496356010437, 0.8421608805656433, 0.8392550349235535, 0.8470479249954224, 0.8474441766738892, 0.8506141901016235, 0.8527275323867798, 0.8506141901016235, 0.8519350290298462, 0.8488970994949341, 0.8669924736022949, 0.8663320541381836, 0.8560295701026917, 0.8737286925315857, 0.8533879518508911, 0.8688416481018066, 0.8721436858177185, 0.8772949576377869, 0.8687095642089844, 0.8692378997802734, 0.8771628737449646, 0.882710337638855, 0.8716153502464294], "val_loss": [1.455904483795166, 1.200002670288086, 0.8086057901382446, 0.8301093578338623, 0.744621992111206, 0.6401034593582153, 0.6078081727027893, 0.5852484107017517, 0.5934702754020691, 0.550646185874939, 0.5473269820213318, 0.552450954914093, 0.5009704828262329, 0.4951373338699341, 0.543615460395813, 0.47664448618888855, 0.4774022698402405, 0.447264701128006, 0.4581655263900757, 0.48802828788757324, 0.49396711587905884, 0.47201234102249146, 0.4123046100139618, 0.42223283648490906, 0.4050064980983734, 0.4034009873867035, 0.41084378957748413, 0.40232279896736145, 0.41531437635421753, 0.4100063145160675, 0.37647607922554016, 0.3698505759239197, 0.37248578667640686, 0.3773404061794281, 0.3890881836414337, 0.3854716718196869, 0.36477282643318176, 0.36113080382347107, 0.36793217062950134, 0.36639752984046936, 0.41548261046409607, 0.36420536041259766, 0.37336117029190063, 0.3589896261692047, 0.34978458285331726, 0.3949434459209442, 0.3865782618522644, 0.35313311219215393, 0.37737947702407837, 0.35995039343833923], "val_accuracy": [0.6136666536331177, 0.5653333067893982, 0.6853333115577698, 0.6899999976158142, 0.6913333535194397, 0.7429999709129333, 0.746666669845581, 0.7760000228881836, 0.7620000243186951, 0.7733333110809326, 0.8003333210945129, 0.765333354473114, 0.8033333420753479, 0.8006666898727417, 0.7590000033378601, 0.8166666626930237, 0.8186666369438171, 0.8196666836738586, 0.824999988079071, 0.8033333420753479, 0.8016666769981384, 0.812666654586792, 0.8496666550636292, 0.8420000076293945, 0.8523333072662354, 0.8536666631698608, 0.856333315372467, 0.8473333120346069, 0.8429999947547913, 0.8426666855812073, 0.859333336353302, 0.8619999885559082, 0.8603333234786987, 0.8573333621025085, 0.8573333621025085, 0.8619999885559082, 0.8703333139419556, 0.8686666488647461, 0.8659999966621399, 0.8643333315849304, 0.8376666903495789, 0.8713333606719971, 0.8616666793823242, 0.8713333606719971, 0.878333330154419, 0.847000002861023, 0.8556666374206543, 0.874666690826416, 0.8583333492279053, 0.8636666536331177]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 6, 1, 0, 1, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 2, 2, 2, 0, 2, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [95, 56, 82, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2, 3, 3, 3], [47, 57, 40, 62]], "fitness": -0.817714273929596, "mapping_values": [1, 10, 10, 5, 5, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.subtract(grad, tf.math.negative(tf.math.add(alpha, tf.math.subtract(grad, tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1106626987457275, 1.4869582653045654, 1.1654049158096313, 0.9126958847045898, 0.8120959997177124, 0.7426350712776184, 0.7508705258369446, 0.6927767992019653, 0.6696845889091492, 0.6437808275222778, 0.6350835561752319, 0.6105313301086426, 0.5845422744750977, 0.5671219229698181, 0.562387228012085, 0.5467180013656616, 0.5411475896835327, 0.5425242185592651, 0.49948325753211975, 0.5129021406173706, 0.49381783604621887, 0.4978960454463959, 0.48176106810569763, 0.45515117049217224, 0.4531649649143219, 0.45899057388305664, 0.43863657116889954, 0.4482250511646271, 0.4268209636211395, 0.42986375093460083, 0.42523348331451416, 0.4119080901145935, 0.4102061986923218, 0.40188223123550415, 0.40018248558044434, 0.39642754197120667, 0.3930605947971344, 0.3800257742404938, 0.3707631528377533, 0.3746821880340576, 0.3528839945793152, 0.38232240080833435, 0.34483852982521057], "accuracy": [0.28939375281333923, 0.4954431354999542, 0.5809007883071899, 0.6583014130592346, 0.6952846646308899, 0.7140403985977173, 0.7113987803459167, 0.7391361594200134, 0.7420420050621033, 0.752212405204773, 0.754589855670929, 0.7689869403839111, 0.7791573405265808, 0.785629391670227, 0.7927618622779846, 0.7926297783851624, 0.8024039268493652, 0.7981772422790527, 0.8195747137069702, 0.8099326491355896, 0.8171972036361694, 0.821820080280304, 0.8244617581367493, 0.8317263126373291, 0.832650899887085, 0.8338396549224854, 0.8392550349235535, 0.8393871188163757, 0.8432175517082214, 0.8429533839225769, 0.8433496356010437, 0.8490291833877563, 0.8512746095657349, 0.8508783578872681, 0.8541803956031799, 0.8552370667457581, 0.8562937378883362, 0.8603883385658264, 0.8648791313171387, 0.8598600029945374, 0.8728041052818298, 0.8568220734596252, 0.8742570281028748], "val_loss": [1.455840826034546, 1.271317481994629, 0.7547687292098999, 0.8290644288063049, 0.6891492605209351, 0.6305773258209229, 0.6220207810401917, 0.5790515542030334, 0.6365760564804077, 0.5333606600761414, 0.5661901235580444, 0.5280133485794067, 0.49844691157341003, 0.4847395718097687, 0.5544081926345825, 0.48099759221076965, 0.4758838713169098, 0.4485282301902771, 0.45244351029396057, 0.4796298146247864, 0.5137407183647156, 0.4712669551372528, 0.4128585159778595, 0.4204276502132416, 0.41118714213371277, 0.40660956501960754, 0.4515570402145386, 0.3987200856208801, 0.40008118748664856, 0.413798987865448, 0.37672412395477295, 0.3753601014614105, 0.37204432487487793, 0.36996158957481384, 0.4059412479400635, 0.3958050608634949, 0.369035929441452, 0.35281306505203247, 0.36639636754989624, 0.36608991026878357, 0.4082256555557251, 0.36590686440467834, 0.3578600585460663], "val_accuracy": [0.6133333444595337, 0.5043333172798157, 0.7059999704360962, 0.6713333129882812, 0.7173333168029785, 0.7613333463668823, 0.7630000114440918, 0.7613333463668823, 0.7409999966621399, 0.7839999794960022, 0.7973333597183228, 0.7926666736602783, 0.8040000200271606, 0.8103333115577698, 0.7603333592414856, 0.8163333535194397, 0.8266666531562805, 0.8233333230018616, 0.828000009059906, 0.8086666464805603, 0.7963333129882812, 0.8146666884422302, 0.8489999771118164, 0.8426666855812073, 0.8463333249092102, 0.8503333330154419, 0.8303333520889282, 0.8529999852180481, 0.8616666793823242, 0.8426666855812073, 0.856333315372467, 0.8533333539962769, 0.859333336353302, 0.862666666507721, 0.8500000238418579, 0.8533333539962769, 0.8690000176429749, 0.8756666779518127, 0.8643333315849304, 0.8583333492279053, 0.8399999737739563, 0.871666669845581, 0.8663333058357239]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 6, 2, 2, 6, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 1, 0, 0, 1, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 41, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [36, 57, 40, 62]], "fitness": -0.8108571171760559, "mapping_values": [1, 11, 11, 5, 6, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 8, 4, 4, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), alpha)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.math.add(tf.math.pow(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), beta)))", "other_info": {"loss": [2.1816835403442383, 1.5499300956726074, 1.171383261680603, 0.9683279991149902, 0.897879421710968, 0.8554423451423645, 0.7908138036727905, 0.758870542049408, 0.7350194454193115, 0.7178750038146973, 0.709869384765625, 0.6863126754760742, 0.6794531345367432, 0.6575350165367126, 0.6473183035850525, 0.6299782395362854, 0.6426041722297668, 0.6333256363868713, 0.6163842678070068, 0.6105732917785645, 0.5933654308319092, 0.5993844270706177, 0.593187689781189, 0.5688217282295227, 0.5748763680458069, 0.573004961013794, 0.5705859065055847, 0.5659205913543701, 0.550849974155426, 0.5431183576583862, 0.5389350056648254, 0.5485243201255798, 0.5410383343696594, 0.5221545100212097, 0.5325528979301453, 0.5273867249488831, 0.5219908356666565, 0.5115571022033691, 0.5061818361282349, 0.4998590052127838, 0.49384498596191406, 0.49669283628463745, 0.4946445822715759, 0.4833766520023346, 0.4814470410346985, 0.47281184792518616, 0.49053457379341125], "accuracy": [0.27037379145622253, 0.4721965491771698, 0.5781270861625671, 0.6560559868812561, 0.668339729309082, 0.6806234121322632, 0.7061154246330261, 0.7172104120254517, 0.7240787148475647, 0.7290979027748108, 0.733588695526123, 0.7408532500267029, 0.7469290494918823, 0.7528728246688843, 0.7563069462776184, 0.7667415142059326, 0.7577598690986633, 0.7658169269561768, 0.7680623531341553, 0.770439863204956, 0.7765156626701355, 0.7685906887054443, 0.7777044177055359, 0.7810064554214478, 0.7816668748855591, 0.7911768555641174, 0.7861577272415161, 0.7911768555641174, 0.7976489067077637, 0.7922335267066956, 0.8021397590637207, 0.7913089394569397, 0.8004226684570312, 0.806630551815033, 0.8021397590637207, 0.8021397590637207, 0.8062343001365662, 0.8101968169212341, 0.8117818236351013, 0.8165367841720581, 0.8185180425643921, 0.8169330358505249, 0.8181217908859253, 0.8261788487434387, 0.8278959393501282, 0.8305375576019287, 0.822348415851593], "val_loss": [1.772413730621338, 1.105165719985962, 0.888377845287323, 0.8322519659996033, 0.7397870421409607, 0.6842949390411377, 0.673067569732666, 0.6571176052093506, 0.658964991569519, 0.6220021843910217, 0.6399954557418823, 0.5750156044960022, 0.5728110074996948, 0.570853590965271, 0.5855425000190735, 0.5523164868354797, 0.5647472739219666, 0.533344030380249, 0.5273120999336243, 0.5430485606193542, 0.5355866551399231, 0.5320866703987122, 0.515750527381897, 0.5088923573493958, 0.5097110867500305, 0.4978976249694824, 0.5087562203407288, 0.49179768562316895, 0.4868023991584778, 0.4841221868991852, 0.48644641041755676, 0.4684319794178009, 0.46514657139778137, 0.460222452878952, 0.49382108449935913, 0.4630448520183563, 0.45631974935531616, 0.4545566737651825, 0.4479135274887085, 0.44758450984954834, 0.45327067375183105, 0.443617582321167, 0.43408823013305664, 0.430033415555954, 0.43197354674339294, 0.461690217256546, 0.43682023882865906], "val_accuracy": [0.5803333520889282, 0.6269999742507935, 0.6816666722297668, 0.6943333148956299, 0.7086666822433472, 0.7360000014305115, 0.7353333234786987, 0.7263333201408386, 0.7276666760444641, 0.753000020980835, 0.7379999756813049, 0.7836666703224182, 0.7736666798591614, 0.7829999923706055, 0.7596666812896729, 0.7906666398048401, 0.7926666736602783, 0.7943333387374878, 0.7960000038146973, 0.7883333563804626, 0.7923333048820496, 0.7879999876022339, 0.8066666722297668, 0.79666668176651, 0.8006666898727417, 0.8119999766349792, 0.8066666722297668, 0.8090000152587891, 0.812333345413208, 0.8066666722297668, 0.8143333196640015, 0.8199999928474426, 0.8213333487510681, 0.8306666612625122, 0.8116666674613953, 0.8273333311080933, 0.8296666741371155, 0.831333339214325, 0.8376666903495789, 0.8353333473205566, 0.8373333215713501, 0.8379999995231628, 0.8373333215713501, 0.8366666436195374, 0.8366666436195374, 0.8263333439826965, 0.8336666822433472]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 6, 2, 7, 6, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [39, 56, 49, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [3, 0, 6], [24, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.5065714120864868, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.0638556480407715, 2.31246280670166, 2.3034205436706543, 2.3030216693878174, 2.303023099899292, 2.30293345451355, 2.3030972480773926, 2.3024847507476807, 2.3029232025146484, 2.302155017852783, 2.2957587242126465, 2.201631546020508, 2.1712801456451416, 2.1681017875671387, 2.3124804496765137, 2.2953317165374756, 1.8939342498779297, 1.5647271871566772, 2.8099875450134277, 2.321613311767578, 2.309140682220459, 2.306203603744507], "accuracy": [0.18980319797992706, 0.09826971590518951, 0.09800554811954498, 0.09813763201236725, 0.09734513610601425, 0.09694888442754745, 0.09325055778026581, 0.10249637067317963, 0.09932637959718704, 0.09826971590518951, 0.11887465417385101, 0.21621978282928467, 0.2810725271701813, 0.28120461106300354, 0.09932637959718704, 0.1080438494682312, 0.3637564480304718, 0.45872408151626587, 0.3261128067970276, 0.09694888442754745, 0.10130762308835983, 0.09747721254825592], "val_loss": [2.3453571796417236, 2.303219795227051, 2.302935838699341, 2.3027262687683105, 2.3025591373443604, 2.3026833534240723, 2.3024632930755615, 2.3023126125335693, 2.3024721145629883, 2.300699234008789, 2.2412049770355225, 1.924940586090088, 1.8034194707870483, 2.321913957595825, 2.3028364181518555, 1.9777449369430542, 1.204174518585205, 1.2236095666885376, 2.3317909240722656, 2.3068666458129883, 2.3036162853240967, 2.303330421447754], "val_accuracy": [0.09700000286102295, 0.10000000149011612, 0.09933333098888397, 0.09666666388511658, 0.10133333504199982, 0.10066666454076767, 0.10300000011920929, 0.10233332961797714, 0.10066666454076767, 0.12033333629369736, 0.29233333468437195, 0.437666654586792, 0.4283333420753479, 0.09700000286102295, 0.09799999743700027, 0.3243333399295807, 0.6033333539962769, 0.5736666917800903, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 6, 1, 7, 2, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 1, 0, 0, 2, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 41, 16, 78, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [17, 57, 40, 62]], "fitness": -0.4917142987251282, "mapping_values": [1, 11, 11, 5, 6, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 8, 4, 4, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), grad)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.add(tf.math.pow(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), beta)))", "other_info": {"loss": [2.2988758087158203, 2.28957462310791, 2.278614044189453, 2.2647340297698975, 2.249868154525757, 2.231086254119873, 2.2050232887268066, 2.1792919635772705, 2.1412501335144043, 2.1044321060180664, 2.061199188232422, 2.0380351543426514, 2.042633056640625, 3.7941419485712876e+21, 3.123751640319824, 6.79896354675293, 12.474620819091797], "accuracy": [0.09800554811954498, 0.11913882195949554, 0.1476687341928482, 0.1752740740776062, 0.20314356684684753, 0.22454100847244263, 0.25280675292015076, 0.27737417817115784, 0.3035266101360321, 0.3159424066543579, 0.32901862263679504, 0.3061682879924774, 0.28556331992149353, 0.1224408894777298, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.289828062057495, 2.2782351970672607, 2.264639377593994, 2.2486045360565186, 2.2288870811462402, 2.204390525817871, 2.173027276992798, 2.1347200870513916, 2.089413642883301, 2.0431299209594727, 1.992495059967041, 1.9281706809997559, 2.072594165802002, 2.6748673915863037, 4.610964298248291, 10.121274948120117, 15.84913444519043], "val_accuracy": [0.09399999678134918, 0.18799999356269836, 0.2613333463668823, 0.328000009059906, 0.37466666102409363, 0.4013333320617676, 0.43533334136009216, 0.453000009059906, 0.4690000116825104, 0.48100000619888306, 0.4869999885559082, 0.4946666657924652, 0.20033332705497742, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 6, 2, 7, 6, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [39, 56, 49, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [1, 0, 6], [24, 44], [1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2, 3, 3, 3], [47, 57, 40, 62]], "fitness": -0.39142856001853943, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [3.0624029636383057, 2.3126440048217773, 2.3033223152160645, 2.3031201362609863, 2.3029720783233643, 2.302762269973755, 2.3030357360839844, 2.302582263946533, 2.3024959564208984, 2.301023244857788, 2.247356653213501, 2.265024185180664, 2.28847336769104, 2.306105375289917, 2.3037095069885254, 2.3029747009277344, 2.3033816814422607], "accuracy": [0.1900673657655716, 0.09813763201236725, 0.09998679161071777, 0.09774138033390045, 0.09589222073554993, 0.0956280529499054, 0.09576013684272766, 0.09998679161071777, 0.10381719470024109, 0.10949676483869553, 0.1632545292377472, 0.19336943328380585, 0.19574692845344543, 0.09509972482919693, 0.1006472036242485, 0.09721305221319199, 0.09549596905708313], "val_loss": [2.3449409008026123, 2.3030498027801514, 2.302854061126709, 2.302701711654663, 2.3025667667388916, 2.3026719093322754, 2.3024957180023193, 2.30222749710083, 2.3024179935455322, 2.296064853668213, 1.9670945405960083, 1.9258160591125488, 2.307734727859497, 2.3033201694488525, 2.3027920722961426, 2.3025505542755127, 2.302600860595703], "val_accuracy": [0.09700000286102295, 0.09933333098888397, 0.09933333098888397, 0.10066666454076767, 0.10133333504199982, 0.09700000286102295, 0.0989999994635582, 0.10199999809265137, 0.1509999930858612, 0.2136666625738144, 0.36899998784065247, 0.42533332109451294, 0.10233332961797714, 0.09700000286102295, 0.10233332961797714, 0.10266666859388351, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 6, 2, 7, 3, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [3, 1, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 56, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 0, 3, 3, 2], [51, 57, 40, 62]], "fitness": -0.28285714983940125, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 8, 4, 4, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.math.add(tf.math.pow(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.4354357719421387, 2.304767370223999, 2.292247772216797, 2.1513020992279053, 2.229063034057617, 2.304863452911377, 2.304044723510742, 2.3032116889953613], "accuracy": [0.22718267142772675, 0.10170386731624603, 0.11662924289703369, 0.22335226833820343, 0.22295601665973663, 0.09840179979801178, 0.09377889335155487, 0.09800554811954498], "val_loss": [2.306781530380249, 2.300595283508301, 2.2491140365600586, 2.0067272186279297, 2.306877851486206, 2.3027877807617188, 2.302765369415283, 2.30258846282959], "val_accuracy": [0.10166666656732559, 0.10133333504199982, 0.24666666984558105, 0.23366667330265045, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 6, 2, 7, 3, 0, 1, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 2, 0, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [39, 56, 49, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 4, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.22657142579555511, "mapping_values": [1, 31, 31, 18, 13, 7, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), grad)), tf.math.add(alpha, tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.sqrt(grad))), tf.math.add(tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))))))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.0659048557281494, 2.3150172233581543, 2.3035173416137695, 2.3030471801757812, 2.3029253482818604, 2.30281925201416, 2.303086996078491, 2.3023602962493896, 2.3018016815185547, 2.291795015335083, 2.395792007446289, 2.297428607940674, 2.200526237487793, 2.305665969848633, 2.303316354751587], "accuracy": [0.1900673657655716, 0.10051512718200684, 0.09285431355237961, 0.09760929644107819, 0.1018359512090683, 0.09694888442754745, 0.09681680053472519, 0.10394927859306335, 0.10447761416435242, 0.1294412910938263, 0.1426495909690857, 0.12138422578573227, 0.2506934404373169, 0.0948355570435524, 0.10077928751707077], "val_loss": [2.356250047683716, 2.3030784130096436, 2.3027586936950684, 2.302710771560669, 2.302553176879883, 2.302584409713745, 2.302332639694214, 2.3018603324890137, 2.3006110191345215, 2.1793861389160156, 2.305475950241089, 2.153136968612671, 2.307396650314331, 2.3038346767425537, 2.302942991256714], "val_accuracy": [0.09700000286102295, 0.09933333098888397, 0.09933333098888397, 0.10066666454076767, 0.10266666859388351, 0.10066666454076767, 0.09833333641290665, 0.10199999809265137, 0.16699999570846558, 0.24633333086967468, 0.10066666454076767, 0.21799999475479126, 0.10066666454076767, 0.0976666659116745, 0.10266666859388351]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 6, 2, 7, 6, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 1, 0, 1, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 56, 33, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 3, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 6, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.18400000035762787, "mapping_values": [1, 10, 10, 5, 5, 3, 1, 1, 0, 1, 0, 5, 4, 2, 2, 1, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, alpha), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.293126344680786, 5.726687908172607, 4.347390651702881, NaN, NaN, NaN], "accuracy": [0.18280279636383057, 0.10447761416435242, 0.109232597053051, 0.10619468986988068, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3606553077697754, 2.487684488296509, 4.7721333503723145, NaN, NaN, NaN], "val_accuracy": [0.11599999666213989, 0.10133333504199982, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 6, 2, 7, 6, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 56, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [3, 3, 2, 4, 2, 1, 2, 3, 2, 7, 9, 4, 6, 5, 5, 9], [3, 1, 0, 2, 3, 2, 2, 3, 3, 3, 1], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07607977837324142, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 6, 0, 4, 6, 3, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 1, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 56, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [6, 0, 6], [24, 44], [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3, 8, 2, 4, 0, 8, 5, 5, 6, 7, 6], [0, 0, 0, 2, 3, 3, 2, 3, 3, 3, 1, 1, 1], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 31, 18, 13, 3], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.negative(grad))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(tf.math.add(tf.math.subtract(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), beta), sigma)), sigma), tf.math.sqrt(tf.math.add(tf.math.pow(tf.math.negative(tf.math.sqrt(tf.math.square(beta))), tf.math.square(sigma)), sigma))), tf.math.divide_no_nan(tf.math.add(sigma, tf.math.divide_no_nan(alpha, alpha)), alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 6, 1, 4, 6, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [3, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [39, 56, 49, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 1, 0, 2, 3, 3, 2], [51, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 4, 2, 2, 1, 8, 4, 4, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.math.add(tf.math.pow(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 6, 2, 7, 6, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 1, 0, 2, 2, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [69, 56, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 1, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 7, 5, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, alpha), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))), grad)))), grad), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, alpha))", "other_info": {"loss": [6.8902426182187695e+22, 9.172263635298109e+27, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.10289261490106583, 0.10619468986988068, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4.201278613884649e+20, 9.891573104870701e+30, NaN, NaN, NaN, NaN], "val_accuracy": [0.10233332961797714, 0.09700000286102295, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 6, 1, 4, 6, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 0, 0, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [39, 56, 49, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0746268630027771, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 6, 2, 7, 6, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 56, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0746268630027771, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [8, 6, 2, 7, 6, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 1, 0, 0, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 41, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [2, 3, 2, 4, 2, 1, 2, 3, 3, 9, 0, 6, 3, 4, 2, 0], [3, 0, 0, 2, 3, 3, 2, 1, 0, 2, 1, 1, 0], [47, 57, 40, 62, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 29, 16, 13, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.divide_no_nan(grad, tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.add(tf.math.pow(tf.math.add(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(beta, sigma), sigma)), beta), tf.math.multiply(tf.math.multiply(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(tf.math.multiply(alpha, tf.math.pow(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), beta)), alpha))), tf.math.add(tf.math.negative(alpha), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [134730.4375, 14764602368.0, 2.3258121013641357, 2.3472084999084473, 2.3867573738098145, 2.459275960922241, 2.58669376373291], "accuracy": [0.07026813179254532, 0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [6056475648.0, 2.317457914352417, 2.3327369689941406, 2.3616106510162354, 2.415776252746582, 2.5143535137176514, 2.681663990020752], "val_accuracy": [0.09866666793823242, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 6, 1, 4, 6, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [39, 56, 49, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2, 3, 3, 3], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07607977837324142, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 6, 1, 4, 6, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [39, 56, 49, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [0, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [0, 0, 0, 2, 3, 3, 2, 3, 3, 3], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 2, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [36616916.0, 706651584.0, 3194177280.0, 8986074112.0, 19234080768.0, 35457671168.0], "accuracy": [0.09087307006120682, 0.10091137140989304, 0.09985470771789551, 0.09932637959718704, 0.10091137140989304, 0.09681680053472519], "val_loss": [164082336.0, 1311383680.0, 4424495616.0, 10486008832.0, 20478515200.0, 35384668160.0], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 6, 1, 4, 2, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [1, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [39, 56, 49, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3, 3, 8, 5, 6, 9, 7, 2], [3, 0, 0, 2, 3, 3, 2, 3, 3, 3, 0], [98, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 5, 6, 3, 1, 1, 0, 1, 0, 5, 4, 2, 2, 1, 26, 15, 11, 4], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.subtract(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(alpha, tf.math.add(grad, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.add(tf.math.pow(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(tf.math.add(tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), beta), sigma), sigma), tf.math.multiply(tf.math.sqrt(tf.math.square(tf.math.divide_no_nan(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(sigma, sigma))))), sigma))), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09206181764602661, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 6, 8, 4, 6, 3, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 1, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [54, 56, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 9, 9, 7], [3, 0, 6], [24, 44], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 2, 0, 2, 3, 3, 2], [51, 57, 40, 62]], "fitness": -0.036571428179740906, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303013801574707, 2.304953098297119, 2.3068079948425293, 2.3080294132232666, 2.3112614154815674, 2.314725637435913], "accuracy": [0.08651433140039444, 0.08347642421722412, 0.07885351777076721, 0.08057060092687607, 0.08175934851169586, 0.07792893797159195], "val_loss": [2.301232099533081, 2.303037643432617, 2.3047714233398438, 2.3071446418762207, 2.3097341060638428, 2.3124454021453857], "val_accuracy": [0.038333334028720856, 0.03033333271741867, 0.02866666577756405, 0.02800000086426735, 0.029666665941476822, 0.033666666597127914]}}]