[{"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7897142767906189, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.292597481981166, 2.264969955235739, 2.2338111449100433, 2.1946547005265034, 2.1389900983647427, 2.0670605800123796, 1.9745594473436854, 1.8507518396244043, 1.7212419905572471, 1.5887039992252219, 1.475791566234302, 1.3779066505842772, 1.2977836989077909, 1.2293842305376261, 1.1849899702005382, 1.1446061239990781, 1.1027821726440643, 1.0613409805260063, 1.032150856539432, 1.0140890855956717, 0.9858927083856253, 0.9607998571926812, 0.9403317554232278, 0.9271648209313234, 0.9118659777758443, 0.897119605577444, 0.8867362208921266, 0.8783840807657893, 0.8571251309653315, 0.8424348256308027, 0.8380255243167618, 0.8399447050895736, 0.820420803481782, 0.8193209728843831, 0.8100392795305021, 0.8009090956018554, 0.8004097741403757, 0.7835989616345799, 0.7821912762747465, 0.779439117268895, 0.7733389831820594, 0.7703008917596409, 0.7698230393227963, 0.7554356668052452, 0.7526045806214888, 0.7444160164717308, 0.7477330189134781, 0.7306585768352111, 0.7290375677743498, 0.7293592541209302, 0.7271437331071666, 0.7204219624665844, 0.7173795819502969, 0.7218061818769186, 0.7110134673203617, 0.7011245868429925, 0.7110384103880583, 0.7095107921063231, 0.694269060505978, 0.6928163415893446, 0.6941368693625843, 0.6925202835552476, 0.6826467005694153, 0.6824120591660185, 0.6785405930148896, 0.6811607588614456, 0.674761057301535, 0.672987708719793, 0.6715067519078465], "accuracy": [0.11768590658903122, 0.18121780455112457, 0.2565050721168518, 0.31039494276046753, 0.3509443998336792, 0.3921542763710022, 0.41843879222869873, 0.44710078835487366, 0.46691322326660156, 0.5020473003387451, 0.516708493232727, 0.5386342406272888, 0.5595033764839172, 0.5801082849502563, 0.590278685092926, 0.6045436263084412, 0.6087703108787537, 0.6206578016281128, 0.6347906589508057, 0.6375643610954285, 0.6497160196304321, 0.6593580842018127, 0.6645092964172363, 0.6704530715942383, 0.6723021864891052, 0.6728305220603943, 0.6851142644882202, 0.6836613416671753, 0.6925109028816223, 0.698718786239624, 0.7005679607391357, 0.6919825673103333, 0.7029454708099365, 0.7029454708099365, 0.7078325152397156, 0.7099458575248718, 0.7119271159172058, 0.7185312509536743, 0.715889573097229, 0.7166820764541626, 0.7149649858474731, 0.7140403985977173, 0.7211728692054749, 0.720380425453186, 0.7194558382034302, 0.7255316376686096, 0.7240787148475647, 0.7337207794189453, 0.7302865982055664, 0.7343811988830566, 0.7314753532409668, 0.735569953918457, 0.7428345084190369, 0.7325320243835449, 0.7400607466697693, 0.741909921169281, 0.7387399077415466, 0.7359662055969238, 0.748778223991394, 0.7420420050621033, 0.7395324110984802, 0.7456082701683044, 0.7434949278831482, 0.7427024245262146, 0.7498348951339722, 0.7446836829185486, 0.7479857206344604, 0.752212405204773, 0.7490423917770386], "val_loss": [1.9467772075108118, 1.9204635620117188, 1.8881408827645438, 1.8446131433759416, 1.7837276458740234, 1.7018656730651855, 1.596881423677717, 1.4703384467533656, 1.3376118796212333, 1.2101473127092635, 1.1036358220236642, 1.0166942051478796, 0.9486160618918282, 0.8924336774008614, 0.8494032621383667, 0.8160111733845302, 0.7880389009203229, 0.7627435071127755, 0.7415848800114223, 0.7232405969074794, 0.7081996032169887, 0.6931384290967669, 0.681316648210798, 0.669913513319833, 0.659476671900068, 0.6539182492664882, 0.6438396317618233, 0.6353851386478969, 0.6271553550447736, 0.6226574523108346, 0.6150633096694946, 0.6103273119245257, 0.6041757719857352, 0.5999647889818464, 0.5949523789542062, 0.5905102491378784, 0.5881359236580985, 0.582159161567688, 0.5793401002883911, 0.5748035567147392, 0.5721716199602399, 0.5698263304574149, 0.5646895681108747, 0.562188846724374, 0.5612945216042655, 0.5555025168827602, 0.5543880462646484, 0.5503820691789899, 0.5492632899965558, 0.5447133779525757, 0.5427315575735909, 0.5397504057203021, 0.5392035927091327, 0.5357699053628104, 0.5353454351425171, 0.5323618820735386, 0.5284907817840576, 0.5272959811346871, 0.5254549128668649, 0.5235507147652763, 0.5208338158471244, 0.5208424840654645, 0.5178195408412388, 0.5176278012139457, 0.5145560162408012, 0.5132233074733189, 0.5125685930252075, 0.5112959827695575, 0.5112777437482562], "val_accuracy": [0.23800000548362732, 0.3606666624546051, 0.40066665410995483, 0.43666666746139526, 0.48133334517478943, 0.528333306312561, 0.5550000071525574, 0.5733333230018616, 0.5916666388511658, 0.6206666827201843, 0.6286666393280029, 0.6596666574478149, 0.6603333353996277, 0.6753333210945129, 0.6819999814033508, 0.687666654586792, 0.6940000057220459, 0.6953333616256714, 0.7020000219345093, 0.7113333344459534, 0.7080000042915344, 0.7116666436195374, 0.7146666646003723, 0.7200000286102295, 0.722000002861023, 0.7223333120346069, 0.7253333330154419, 0.7276666760444641, 0.7329999804496765, 0.7386666536331177, 0.7390000224113464, 0.7419999837875366, 0.7419999837875366, 0.7446666955947876, 0.7443333268165588, 0.746999979019165, 0.7463333606719971, 0.75, 0.753000020980835, 0.7540000081062317, 0.753333330154419, 0.75, 0.7576666474342346, 0.7543333172798157, 0.7573333382606506, 0.7613333463668823, 0.7603333592414856, 0.762666642665863, 0.762333333492279, 0.7633333206176758, 0.765333354473114, 0.7693333625793457, 0.768666684627533, 0.7696666717529297, 0.7680000066757202, 0.7716666460037231, 0.7713333368301392, 0.7710000276565552, 0.7723333239555359, 0.7730000019073486, 0.7726666927337646, 0.7743333578109741, 0.7743333578109741, 0.7793333530426025, 0.7766666412353516, 0.7749999761581421, 0.7773333191871643, 0.7749999761581421, 0.7773333191871643]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [3, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.586571455001831, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2429775797128837, 1.665192312867398, 1.1737035085197296, 0.891408318541762, 0.8107192870837161, 0.751893334062171, 0.7382929187173054, 0.6971034400293997, 0.672596329892269, 0.6432892259054369, 0.6063950039045828, 0.5878931901568608, 0.5777855465802944, 0.5612324550403438, 0.5493095196028742, 0.5176917816024053, 0.5250573706444244, 0.5067325982482537, 0.4959506453020446, 0.4826054438041296, 0.46855215493084307, 0.46615642545765196, 0.4582614305233203, 0.45170929966947865, 0.45930413917354573, 0.4254140935561692, 0.4389844451519351, 0.4170561143120975, 0.42124959239161736, 0.4159896030968931, 0.4166716741470062, 0.4166477607414786, 0.39798293343907915, 0.40465170111181936, 0.3920870650564092, 0.39060676106529907, 0.3825820517491167, 0.37340903882463267, 0.39329470030982117, 0.38542968613391915, 0.40314133668997665, 0.39389925310640383, 0.36072897263537496, 0.3892682202621899, 0.37087620693411355, 0.38056845866756794, 0.3796949224693428, 0.4053580412350122, 0.39161504071150255, 0.36918261371677924, 0.3778401964754083], "accuracy": [0.21159687638282776, 0.4488178491592407, 0.6004490852355957, 0.6699247360229492, 0.6901333928108215, 0.7099458575248718, 0.7224937081336975, 0.7244749665260315, 0.737947404384613, 0.76106196641922, 0.7683265209197998, 0.7712323069572449, 0.774798572063446, 0.7866860628128052, 0.7845727205276489, 0.8013472557067871, 0.800818920135498, 0.8033285140991211, 0.8041210174560547, 0.806630551815033, 0.8145555257797241, 0.8182538747787476, 0.8203672170639038, 0.8204993009567261, 0.8214238286018372, 0.8362171649932861, 0.8257825970649719, 0.8302733898162842, 0.8411042094230652, 0.8358209133148193, 0.8379341959953308, 0.8372738361358643, 0.8442742228507996, 0.842028796672821, 0.8482366800308228, 0.8459912538528442, 0.848368763923645, 0.8615770936012268, 0.8473120927810669, 0.8486329317092896, 0.8475762605667114, 0.8499537706375122, 0.8599920868873596, 0.8535200357437134, 0.857218325138092, 0.8537842035293579, 0.846387505531311, 0.8421608805656433, 0.8457271456718445, 0.8520671129226685, 0.8527275323867798], "val_loss": [1.7344214575631278, 0.8259121009281704, 0.7028855085372925, 0.6174994707107544, 0.5910073689052037, 0.5971931729997907, 0.5557195969990322, 0.5142995459692818, 0.4939840350832258, 0.4939611979893276, 0.4834919827325003, 0.4564697912761143, 0.47023900917598177, 0.4537517172949655, 0.43274656363895964, 0.4266266907964434, 0.42923079218183247, 0.4347424166543143, 0.4205655200140817, 0.4147699049540928, 0.4015545163835798, 0.4041999578475952, 0.4118409582546779, 0.4286147015435355, 0.4087379915373666, 0.41269759620938984, 0.4049139618873596, 0.40507188865116667, 0.42995256185531616, 0.4053002510751997, 0.4178748641695295, 0.4291781783103943, 0.40335976225989206, 0.40878794874463764, 0.42330650772367207, 0.4133703453200204, 0.42286120993750437, 0.45939930847712923, 0.44456881284713745, 0.49063968658447266, 0.4640206354004996, 0.4885890654155186, 0.517683574131557, 0.4628240295818874, 0.45832711458206177, 0.45488594259534565, 0.44365703208105906, 0.4914677483694894, 0.45587877716336933, 0.49086324657712666, 0.5033880131585258], "val_accuracy": [0.4573333263397217, 0.6633333563804626, 0.6986666917800903, 0.7239999771118164, 0.7379999756813049, 0.7413333058357239, 0.7556666731834412, 0.7753333449363708, 0.7736666798591614, 0.781000018119812, 0.7873333096504211, 0.7900000214576721, 0.7839999794960022, 0.8053333163261414, 0.8116666674613953, 0.8193333148956299, 0.8190000057220459, 0.8209999799728394, 0.8180000185966492, 0.8259999752044678, 0.8296666741371155, 0.8346666693687439, 0.8316666483879089, 0.824999988079071, 0.8386666774749756, 0.828000009059906, 0.8373333215713501, 0.8429999947547913, 0.8366666436195374, 0.8410000205039978, 0.8403333425521851, 0.840666651725769, 0.843666672706604, 0.8460000157356262, 0.8453333377838135, 0.8346666693687439, 0.8489999771118164, 0.8433333039283752, 0.843666672706604, 0.8433333039283752, 0.8476666808128357, 0.8503333330154419, 0.8463333249092102, 0.8443333506584167, 0.8510000109672546, 0.8543333411216736, 0.8513333201408386, 0.8360000252723694, 0.8463333249092102, 0.8463333249092102, 0.8453333377838135]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [3, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [4, 4, 5, 2], [8, 0, 19], [1, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.44285714626312256, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.subtract(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2910849117190373, 2.2630369863521467, 2.2305640302329817, 2.189441088121077, 2.1340668054068517, 2.0715095499613345, 2.02517782961609, NaN, NaN], "accuracy": [0.12230881303548813, 0.186104878783226, 0.25624093413352966, 0.3086778521537781, 0.3358869254589081, 0.35926562547683716, 0.3311319649219513, 0.19521859288215637, 0.10011887550354004], "val_loss": [1.9465976442609514, 1.9197099549429757, 1.886115482875279, 1.841207844870431, 1.7837389537266322, 1.7257664544241769, 1.7355882440294539, NaN, NaN], "val_accuracy": [0.2316666692495346, 0.37533333897590637, 0.4099999964237213, 0.4286666810512543, 0.42366665601730347, 0.3876666724681854, 0.2653333246707916, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [2, 1, 3, 1], [50], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9], [4, 4, 3, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07396645098924637, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 0, 1, 0, 1], [7, 1, 5, 7, 8], [3, 1, 3, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9], [0, 4, 3, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [2, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302394873556475, 2.30248168459217, 2.3024325503995624, 2.3026547137189772, 2.3029591011223207, 2.3027796864651293], "accuracy": [0.10408136248588562, 0.10249637067317963, 0.10276053100824356, 0.1026284471154213, 0.10579843819141388, 0.09800554811954498], "val_loss": [1.9737550190516882, 1.973832675388881, 1.9740113530840193, 1.9740841729300362, 1.9739351953778947, 1.9742818559919084], "val_accuracy": [0.1003333330154419, 0.09799999743700027, 0.09799999743700027, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 1, 1, 1, 0, 1], [7, 1, 5, 7, 8], [3, 1, 1, 1], [50], [0, 0, 1, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1], [2, 9, 9, 4], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [6, 4, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [8, 1, 0, 4, 7, 5, 4], [1, 3, 0, 1, 3, 3], [50, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 3, 0, 2, 3, 1, 1, 0, 0, 4, 2, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.subtract(alpha, sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [3, 1, 1, 3, 1, 0, 0, 1, 1], [50, 16], [0, 1, 1, 0, 0, 0, 1, 1], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], [2, 9, 9], [3, 4, 5, 2], [15, 0, 19], [1, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 1, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, alpha))", "other_info": {"loss": [2.30409673529058, 2.3053007335899656, 2.3065556656997814, 2.308702877279223, 2.310149984683469, 2.3142130752485883, 2.3199175695276466, 2.3231167219192472, 2.3336882453631764, 2.3455405218600283, 2.3810502168068153, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08928807079792023, 0.08096684515476227, 0.08598599582910538, 0.08453308790922165, 0.08387266844511032, 0.08268392831087112, 0.07568352669477463, 0.07594769448041916, 0.08070268481969833, 0.07370228320360184, 0.07674019038677216, 0.09589222073554993, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9724732807704382, 1.9738954135349818, 1.9752705437796456, 1.9771253722054618, 1.9790338107517786, 1.9815565517970495, 1.9845761571611678, 1.9884802954537528, 1.994845254080636, 2.008216312953404, 2.06844323022025, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03166666626930237, 0.027000000700354576, 0.02433333359658718, 0.024000000208616257, 0.028999999165534973, 0.03533333167433739, 0.044333335012197495, 0.05966666713356972, 0.07766667008399963, 0.09833333641290665, 0.09933333098888397, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9], [4, 4, 3, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08228767663240433, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [4, 1, 5, 7, 8], [1, 1, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1], [2, 9, 7, 3], [4, 4, 3, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 8], [0, 0, 0, 1, 3, 3], [17, 57, 74]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 7, 7, 4, 3, 1, 1, 0, 0, 0, 0, 10, 6, 4, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.pow(tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(alpha)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 1, 1, 5, 9], [2, 4, 5, 2], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.square(alpha), tf.math.add(tf.math.add(alpha, grad), alpha)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 1], [2, 9, 4, 3, 8], [4, 4, 3], [8, 0, 19], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [7, 3, 0, 4, 7, 5, 9], [0, 0, 0, 1, 3, 3], [28, 57, 62, 6]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 1, 3, 2, 1, 1, 0, 11, 7, 4, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.pow(tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32))))), alpha)", "other_info": {"loss": [2838.3661725123984, 51580.03740320796, 236836.32016493857, 653558.2220644564, 1373656.734727909, 2576491.2505943733], "accuracy": [0.1014397069811821, 0.10077928751707077, 0.10632677376270294, 0.1010434553027153, 0.10474177449941635, 0.10051512718200684], "val_loss": [10688.111328125, 82992.62276785714, 277608.3214285714, 655220.25, 1276514.2857142857, 2202174.9285714286], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [3, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 1, 1, 5, 9], [2, 4, 5, 2], [8, 0, 19], [0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07238145917654037, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [8, 1, 5, 7, 8], [0, 1, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1], [2, 9, 2, 4], [1, 4, 3, 3], [28, 0, 19], [0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1], [8, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 4, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57, 68]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 7, 7, 4, 3, 1, 2, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, grad))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 0, 1, 0, 1], [7, 1, 5, 7, 8], [3, 1, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 9], [3, 4, 3, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 2, 3], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 13, 7, 6, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.multiply(alpha, sigma), sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08942015469074249, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9], [4, 4, 3, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0730418711900711, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 0, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [3, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 8, 3, 2, 3, 2, 1, 1, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(tf.math.square(tf.math.square(grad)), tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3034338539523094, 2.3028848089042544, 2.302456873503375, 2.302368122242414, 2.30167524434509, 2.3021243487713186], "accuracy": [0.08942015469074249, 0.08585391938686371, 0.09272222965955734, 0.0940430611371994, 0.09536388516426086, 0.0886276587843895], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 1, 1, 1, 0, 1], [7, 6, 5, 7, 8], [1, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9], [4, 4, 3, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3034338539523094, 2.3028848089042544, 2.302456873503375, 2.302368122242414, 2.30167524434509, 2.3021243487713186], "accuracy": [0.08942015469074249, 0.08585391938686371, 0.09272222965955734, 0.0940430611371994, 0.09536388516426086, 0.0886276587843895], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 1, 1, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [3, 0, 0, 1, 3, 3], [44, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3034338539523094, 2.3028848089042544, 2.302456873503375, 2.302368122242414, 2.30167524434509, 2.3021243487713186], "accuracy": [0.08942015469074249, 0.08585391938686371, 0.09272222965955734, 0.0940430611371994, 0.09536388516426086, 0.0886276587843895], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1], [6, 1, 5, 7, 8], [1, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [6, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [85, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3034338539523094, 2.3028848089042544, 2.302456873503375, 2.302368122242414, 2.30167524434509, 2.3021243487713186], "accuracy": [0.08942015469074249, 0.08585391938686371, 0.09272222965955734, 0.0940430611371994, 0.09536388516426086, 0.0886276587843895], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 1, 5, 7, 8], [1, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1], [2, 9, 6, 5], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [3, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 2, 2, 1, 1, 0, 6, 6, 4, 2, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3034338539523094, 2.3028848089042544, 2.302456873503375, 2.302368122242414, 2.30167524434509, 2.3021243487713186], "accuracy": [0.08942015469074249, 0.08585391938686371, 0.09272222965955734, 0.0940430611371994, 0.09536388516426086, 0.0886276587843895], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]