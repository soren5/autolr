[{"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [5, 4, 8, 8, 8, 0, 7, 1, 1, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 9, 4], [1, 2, 2, 1, 1, 2, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7868571281433105, "mapping_values": [1, 14, 14, 9, 5, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(alpha))), tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.subtract(tf.math.subtract(grad, alpha), alpha))))))))), lambda shape,  alpha, beta, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2922530158194947, 2.266131404903917, 2.233633749457619, 2.195232392617063, 2.1405118177154705, 2.0688510803640354, 1.9721572941257466, 1.8536226624400782, 1.7274415530643255, 1.6023069819943023, 1.4811011551236117, 1.3818307972666044, 1.3072788740712826, 1.2343455840095536, 1.1881067962725842, 1.131922532948111, 1.0992421696387924, 1.0602751026819914, 1.033187441617396, 1.0145937550762278, 0.9754783214358858, 0.9578978307746925, 0.9413466612581941, 0.9266179636437675, 0.9088148870378076, 0.8983171570255394, 0.8859684030377649, 0.8798934371873546, 0.8501951976490688, 0.8471893419001978, 0.8358275360986147, 0.8341041298480066, 0.8269787212215505, 0.8227791142753401, 0.802402045032084, 0.8017520877222548, 0.8041352843170735, 0.7873885131168832, 0.7862854106645731, 0.7702346213143247, 0.7718122421144227, 0.7662228000650568, 0.7650108556973542, 0.7538567440400522, 0.7477799505841668, 0.7419560691542267, 0.7372297511093211, 0.7410277590980273, 0.7383965661402596, 0.7311189380603428, 0.7190351270020142, 0.7309750618006906, 0.7291604048540374, 0.7191265029221352, 0.7093865000230132, 0.7122779996120194, 0.7037647083104484, 0.705251202449791, 0.7002406578652217, 0.6949146017973465, 0.6844556600725362, 0.6894774153925062, 0.6889699895730533], "accuracy": [0.11821424216032028, 0.18121780455112457, 0.252938836812973, 0.3089420199394226, 0.35266146063804626, 0.39189010858535767, 0.41725003719329834, 0.4447232782840729, 0.462950736284256, 0.48646149039268494, 0.5190860033035278, 0.5415400862693787, 0.5584467053413391, 0.5822216272354126, 0.587372899055481, 0.5997886657714844, 0.6102232336997986, 0.6281865239143372, 0.6363756656646729, 0.6440364718437195, 0.652621865272522, 0.6637167930603027, 0.6637167930603027, 0.6690001487731934, 0.6734909415245056, 0.6774534583091736, 0.6848500967025757, 0.6836613416671753, 0.6944921612739563, 0.6947563290596008, 0.698718786239624, 0.6971337795257568, 0.698718786239624, 0.7024171352386475, 0.7073041796684265, 0.7030775547027588, 0.7069079279899597, 0.7103421092033386, 0.7149649858474731, 0.7144366502761841, 0.7147008180618286, 0.7197200059890747, 0.7149649858474731, 0.7252674698829651, 0.7210407853126526, 0.7238145470619202, 0.7235503792762756, 0.7260599732398987, 0.7298903465270996, 0.7358341217041016, 0.7306828498840332, 0.7240787148475647, 0.7316074371337891, 0.735041618347168, 0.7400607466697693, 0.7366266250610352, 0.7411174178123474, 0.735041618347168, 0.7415136694908142, 0.7396644949913025, 0.7424382567405701, 0.7432307600975037, 0.7440232634544373], "val_loss": [1.9465962137494768, 1.9203825678144182, 1.888101305280413, 1.844393185206822, 1.7841292790004186, 1.7029264313834054, 1.5983496052878243, 1.4735260009765625, 1.3425216334206718, 1.2174464293888636, 1.1076086248670305, 1.01913697378976, 0.9504824706486293, 0.8940639495849609, 0.8503673587526593, 0.8155093022755214, 0.7862238883972168, 0.7608768939971924, 0.7408982004438128, 0.722731351852417, 0.7064954042434692, 0.6927956853594098, 0.679187400000436, 0.6699036359786987, 0.6596149376460484, 0.6515971081597465, 0.6430054562432426, 0.6355446406773159, 0.6296743835721698, 0.623062184878758, 0.6170310122626168, 0.6115213973181588, 0.6046093191419329, 0.6003924437931606, 0.5960780893053327, 0.5909899643489293, 0.5863181352615356, 0.5822816576276507, 0.5783163138798305, 0.5750448192868914, 0.5716127327510289, 0.5697927645274571, 0.5651140894208636, 0.5611451693943569, 0.5594101803643363, 0.5560753175190517, 0.5530634266989571, 0.5511457409177508, 0.5494018963405064, 0.545960511480059, 0.5429959467479161, 0.5408441509519305, 0.5395741973604474, 0.5376326867512294, 0.5351744719914028, 0.5347060476030622, 0.5314042227608817, 0.5274676084518433, 0.5266979421888079, 0.5263305561883109, 0.5233615636825562, 0.5225037166050502, 0.5197696515492031], "val_accuracy": [0.23933333158493042, 0.359333336353302, 0.40533334016799927, 0.43666666746139526, 0.4833333194255829, 0.5170000195503235, 0.546999990940094, 0.5676666498184204, 0.5886666774749756, 0.5976666808128357, 0.628000020980835, 0.6460000276565552, 0.6626666784286499, 0.6753333210945129, 0.684333324432373, 0.6859999895095825, 0.6933333277702332, 0.7003333568572998, 0.7049999833106995, 0.7066666483879089, 0.7136666774749756, 0.7080000042915344, 0.7176666855812073, 0.7233333587646484, 0.7229999899864197, 0.7296666502952576, 0.7286666631698608, 0.7296666502952576, 0.7286666631698608, 0.7386666536331177, 0.7323333621025085, 0.7393333315849304, 0.7413333058357239, 0.7383333444595337, 0.7450000047683716, 0.746999979019165, 0.7480000257492065, 0.7480000257492065, 0.7486666440963745, 0.7523333430290222, 0.7536666393280029, 0.7553333044052124, 0.7590000033378601, 0.7570000290870667, 0.7576666474342346, 0.7583333253860474, 0.762333333492279, 0.7630000114440918, 0.7630000114440918, 0.7630000114440918, 0.7666666507720947, 0.7693333625793457, 0.7670000195503235, 0.7670000195503235, 0.7696666717529297, 0.7720000147819519, 0.7703333497047424, 0.7756666541099548, 0.7720000147819519, 0.7733333110809326, 0.7739999890327454, 0.7710000276565552, 0.7713333368301392]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [7, 4, 8, 8, 8, 1, 7, 0, 3, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 9, 4], [1, 2, 2, 1, 1, 2, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7857142686843872, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)), tf.math.sqrt(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2922530158194947, 2.2661314499045973, 2.233632741744697, 2.1952358562523395, 2.1405129693738854, 2.0688541439372816, 1.9721598112666612, 1.8536243877390735, 1.7274456049362745, 1.6023026048672622, 1.4811214267333674, 1.3818412309687418, 1.3073086501931344, 1.2343682474259294, 1.1881240566629288, 1.1319339155221833, 1.0992267113068257, 1.0602199663622756, 1.033183466945704, 1.014641026834282, 0.9754618197746439, 0.9578778756340308, 0.9413294962305576, 0.9266370470418969, 0.908838884721201, 0.8983377478283631, 0.8860336170535377, 0.8799259165306101, 0.8501977010126583, 0.8472275312125424, 0.8358572203453899, 0.8341121030300993, 0.8269854972643104, 0.8227808953134564, 0.8024198062557507, 0.801678516554275, 0.8041652039750345, 0.7873848960966782, 0.7862660773693846, 0.7702975230304525, 0.7717918207805705, 0.766230330207738, 0.7650247506729411, 0.753815233187826, 0.747729860678199, 0.7419979094970873, 0.7372163294911337, 0.7410272985810947, 0.7384066750832899, 0.731095423394222, 0.7191253771099826, 0.7309502016095091, 0.7291604519095073, 0.7191344374489901, 0.7094135506907947, 0.7122766021267612, 0.7037582424464495, 0.7052196525957417, 0.7001967598749206, 0.6950052147843125, 0.6845892708236357, 0.6895115964086127, 0.6889636206226956], "accuracy": [0.11821424216032028, 0.18121780455112457, 0.252938836812973, 0.30920618772506714, 0.35266146063804626, 0.3917580246925354, 0.4173821210861206, 0.44445911049842834, 0.462950736284256, 0.48632940649986267, 0.5193501710891724, 0.5412759184837341, 0.5583146214485168, 0.5820895433425903, 0.587372899055481, 0.5999207496643066, 0.6104874014854431, 0.6279223561286926, 0.6365077495574951, 0.6444327235221863, 0.6524897813796997, 0.6635847091674805, 0.6639809608459473, 0.6691322326660156, 0.6730946898460388, 0.677189290523529, 0.6840575933456421, 0.683529257774353, 0.6950204968452454, 0.6948884129524231, 0.6983225345611572, 0.6975300312042236, 0.6992471218109131, 0.7022850513458252, 0.7077004313468933, 0.7030775547027588, 0.7071720957756042, 0.7106062769889832, 0.7150970697402954, 0.7145687341690063, 0.7148329019546509, 0.7194558382034302, 0.7150970697402954, 0.7253995537757874, 0.7214370369911194, 0.7244749665260315, 0.7236824631690979, 0.7259278893470764, 0.7308149337768555, 0.7347774505615234, 0.7310791015625, 0.7239466309547424, 0.7316074371337891, 0.7349095344543457, 0.739928662776947, 0.7366266250610352, 0.7417778372764587, 0.7351737022399902, 0.7409853339195251, 0.7395324110984802, 0.7425703406333923, 0.7434949278831482, 0.7442874312400818], "val_loss": [1.9465961456298828, 1.9203815460205078, 1.8881035532270158, 1.8443968636648995, 1.7841298920767648, 1.7029286112104143, 1.5983523981911796, 1.473527261189052, 1.3425003460475378, 1.217425959450858, 1.1076137678963798, 1.019158124923706, 0.9504856041499546, 0.8940693650926862, 0.8503678015300206, 0.8154955591474261, 0.7861169917242867, 0.7608285972050258, 0.7408613307135445, 0.7226771116256714, 0.7063974482672555, 0.69267019203731, 0.6791518926620483, 0.6699237482888358, 0.6595807926995414, 0.6515903643199376, 0.6430238825934274, 0.6355978761400495, 0.6297110319137573, 0.623077392578125, 0.6170190572738647, 0.6115962437220982, 0.6046262468610492, 0.6003524916512626, 0.5960290942873273, 0.5909440347126552, 0.5862974439348493, 0.5822118520736694, 0.5783003398350307, 0.5750582388469151, 0.5716290814535958, 0.5697962386267525, 0.565106817654201, 0.5611572095326015, 0.559434039252145, 0.5560999768120902, 0.5530608722141811, 0.5511657510484967, 0.5494354452405658, 0.5459440776279995, 0.5430563517979213, 0.5408286367143903, 0.5395586320332119, 0.5375605821609497, 0.5351110356194633, 0.5347178493227277, 0.5314554146357945, 0.5274500506264823, 0.5267168283462524, 0.5263782058443341, 0.5233104228973389, 0.522469333239964, 0.5196729387555804], "val_accuracy": [0.23933333158493042, 0.359333336353302, 0.40533334016799927, 0.43666666746139526, 0.4833333194255829, 0.5173333287239075, 0.546999990940094, 0.5676666498184204, 0.5889999866485596, 0.5976666808128357, 0.628000020980835, 0.6460000276565552, 0.6626666784286499, 0.6753333210945129, 0.684333324432373, 0.6856666803359985, 0.6933333277702332, 0.6996666789054871, 0.7049999833106995, 0.7066666483879089, 0.7136666774749756, 0.7080000042915344, 0.7173333168029785, 0.7233333587646484, 0.7233333587646484, 0.7293333411216736, 0.7283333539962769, 0.7279999852180481, 0.7289999723434448, 0.7390000224113464, 0.7323333621025085, 0.7396666407585144, 0.7413333058357239, 0.7369999885559082, 0.7443333268165588, 0.746999979019165, 0.7480000257492065, 0.7480000257492065, 0.7486666440963745, 0.7526666522026062, 0.7536666393280029, 0.7556666731834412, 0.7583333253860474, 0.7570000290870667, 0.7580000162124634, 0.7586666941642761, 0.762333333492279, 0.762666642665863, 0.7630000114440918, 0.7630000114440918, 0.7670000195503235, 0.7699999809265137, 0.7666666507720947, 0.7676666378974915, 0.7699999809265137, 0.7716666460037231, 0.7696666717529297, 0.7760000228881836, 0.7713333368301392, 0.7726666927337646, 0.7739999890327454, 0.7706666588783264, 0.7713333368301392]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 1, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9, 9, 4], [0, 2, 3, 2, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [18, 8, 39, 58, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [81, 57]], "fitness": -0.20171429216861725, "mapping_values": [1, 15, 15, 9, 6, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.negative(tf.math.subtract(grad, grad)))), alpha)))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.7552948368696284, 2.1624885766481947, 2.3042420592085717, 2.5973052781696695, 2.635823782487647, 2.3059682832528194], "accuracy": [0.18755778670310974, 0.2133139669895172, 0.1014397069811821, 0.15982036292552948, 0.13630960881710052, 0.09813763201236725], "val_loss": [1.9553296225411552, 1.9769466263907296, 1.9690493174961634, 1.9731955528259277, 1.977875028337751, 1.9744791303362166], "val_accuracy": [0.39533331990242004, 0.09833333641290665, 0.14533333480358124, 0.1420000046491623, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 4, 8, 5, 8, 1, 7, 0, 0, 3, 3, 7, 8, 9, 3, 4, 6, 4, 1, 8, 7, 1, 2, 1, 9, 4, 6, 8, 2, 2, 6, 6, 5, 0, 2, 8, 3, 9], [1, 2, 0, 1, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [0, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 1, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 4, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 4, 2, 2, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.sqrt(tf.math.square(grad)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08849557489156723, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 5, 8, 1, 7, 0, 0, 3, 3, 7, 8, 9, 3, 4, 6, 4, 7, 8, 7, 1, 2, 1, 9, 4], [1, 2, 1, 1, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 0, 1, 1, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [9, 3, 0, 4, 7, 8, 4], [3, 1, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303161932634498, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09853387624025345, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [5, 4, 8, 0, 8, 0, 7, 1, 1, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 9, 4], [1, 1, 2, 1, 1, 2, 2, 2, 0, 2, 0, 0, 3, 2, 3, 0, 3], [30, 66, 39, 2, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [32, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 8, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 7, 3, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.negative(alpha))), tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 5, 2, 8, 8, 1, 7, 0, 1, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9, 9, 4], [1, 2, 1, 1, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [18, 8, 39, 58, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [4, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 8, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0], [5, 4, 8, 8, 8, 0, 7, 1, 1, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 9, 4], [1, 2, 2, 1, 1, 2, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [4, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [3, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [0, 0, 0, 1, 3, 3], [28, 57, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 12, 7, 5, 3], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(alpha)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma)))))", "other_info": {"loss": [2.303161932634498, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09853387624025345, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 3, 2, 8, 1, 7, 0, 1, 3, 3, 7, 8, 9, 6, 4, 6, 2, 7, 8, 7, 1, 4, 9, 9, 4], [1, 2, 3, 1, 1, 2, 0, 2, 2, 1, 2, 0, 3, 2, 3, 0], [30, 66, 39, 13, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 33, 33, 20, 13, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), alpha))))), alpha)))))), tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, grad)), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(grad, tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07475894689559937, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 2, 1, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9, 9, 4], [1, 2, 0, 1, 1, 0, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 31, 31, 19, 12, 7, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 12, 7, 5, 2], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.sqrt(alpha)), tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(tf.math.subtract(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), alpha), alpha))), tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))))), tf.math.multiply(tf.math.multiply(tf.math.add(grad, tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))))), tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0758156105875969, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 2, 8, 6, 1, 3, 0, 5, 4, 3, 7, 8, 9, 8, 4, 6, 2, 7, 8, 7, 1, 4, 6, 9, 4, 0, 5], [1, 2, 1, 1, 1, 2, 2, 2, 0, 2, 2, 0, 2, 2, 3, 0, 2], [30, 66, 39, 2, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [68, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07475894689559937, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [2, 8, 2, 8, 8, 1, 5, 4, 3, 3, 6, 9, 5, 9, 4, 2, 6, 9, 7, 8, 7, 8, 4, 3, 9, 4], [2, 0, 3, 0, 1, 2, 2, 2, 2, 1, 2, 0, 3, 2, 3, 0], [30, 66, 39, 2, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 2, 0, 1, 3, 3], [28, 57]], "fitness": -0.03742857277393341, "mapping_values": [1, 13, 13, 8, 5, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.pow(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, alpha)))))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, beta))", "other_info": {"loss": [2.3048593091643514, 2.327611675635305, 2958076609611381.5, 35.170794003171345, 114.17331331469963, 239.1365476040682, 410.30123545442984], "accuracy": [0.08519349992275238, 0.07277770340442657, 0.09377889335155487, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9766667910984583, 2.030893530164446, 12.283225468226842, 63.712572370256694, 154.58711460658483, 285.10086495535717, 454.94313267299106], "val_accuracy": [0.023666666820645332, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 4, 9, 7, 8, 1, 7, 0, 1, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9, 9, 4], [1, 2, 3, 1, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [18, 8, 39, 58, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 2, 0, 1, 3, 3], [28, 57]], "fitness": -0.037142857909202576, "mapping_values": [1, 7, 7, 5, 2, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, alpha)), grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, beta))", "other_info": {"loss": [2.3031894608637313, 2.3038472512678116, 2.3019358760975828, 2.3035201706103425, 2.3025307560231565, 2.302273421538835], "accuracy": [0.08809932321310043, 0.08730682730674744, 0.0870426595211029, 0.09272222965955734, 0.0940430611371994, 0.0940430611371994], "val_loss": [1.9712365695408411, 1.971241065434047, 1.971245493207659, 1.9712499209812708, 1.9712542806352888, 1.9712585040501185], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03866666555404663, 0.038333334028720856, 0.038333334028720856]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [5, 4, 8, 0, 8, 0, 7, 1, 3, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 9, 4], [2, 2, 2, 1, 1, 2, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [3, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 31, 31, 20, 11, 3, 1, 1, 0, 1, 1, 3, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 44, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.negative(grad))), tf.math.sqrt(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.subtract(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(alpha, alpha))))), tf.math.multiply(tf.math.add(tf.math.negative(grad), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.pow(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, grad))))))))))), lambda shape,  alpha, beta, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303186284741548, 2.303832802585465, 2.3019140725909852, 2.303484488692439, 2.3024991365424428, 2.302222442381323], "accuracy": [0.08809932321310043, 0.08730682730674744, 0.08717474341392517, 0.09272222965955734, 0.0940430611371994, 0.09417514503002167], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 4, 2, 8, 8, 1, 7, 0, 1, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9, 9, 4], [1, 2, 2, 1, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [18, 8, 39, 58, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [2, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303186284741548, 2.303832802585465, 2.3019140725909852, 2.303484488692439, 2.3024991365424428, 2.302222442381323], "accuracy": [0.08809932321310043, 0.08730682730674744, 0.08717474341392517, 0.09272222965955734, 0.0940430611371994, 0.09417514503002167], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 4, 2, 8, 8, 1, 7, 0, 1, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9, 9, 4], [1, 2, 3, 1, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [18, 8, 39, 58, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [2, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [93, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303186284741548, 2.303832802585465, 2.3019140725909852, 2.303484488692439, 2.3024991365424428, 2.302222442381323], "accuracy": [0.08809932321310043, 0.08730682730674744, 0.08717474341392517, 0.09272222965955734, 0.0940430611371994, 0.09417514503002167], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [8, 3, 2, 8, 8, 3, 7, 0, 3, 3, 3, 7, 8, 9, 3, 2, 2, 9, 7, 8, 7, 1, 4, 9], [1, 2, 3, 1, 1, 1, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0, 0, 1, 1, 2, 0, 2, 3, 0, 3, 0], [18, 8, 39, 58, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [5, 4, 3, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 2, 2, 1, 1, 0, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(grad, tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.303186284741548, 2.303832802585465, 2.3019140725909852, 2.303484488692439, 2.3024991365424428, 2.302222442381323], "accuracy": [0.08809932321310043, 0.08730682730674744, 0.08717474341392517, 0.09272222965955734, 0.0940430611371994, 0.09417514503002167], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 4, 2, 8, 8, 1, 7, 0, 1, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9, 9, 4], [0, 2, 2, 1, 1, 2, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303186284741548, 2.303832802585465, 2.3019140725909852, 2.303484488692439, 2.3024991365424428, 2.302222442381323], "accuracy": [0.08809932321310043, 0.08730682730674744, 0.08717474341392517, 0.09272222965955734, 0.0940430611371994, 0.09417514503002167], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [5, 4, 8, 8, 8, 0, 7, 1, 1, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 9, 4], [1, 2, 2, 1, 1, 2, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [18, 8, 39, 58, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [0, 7], [88, 19], [1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [4, 3, 0, 4, 7, 8, 4], [1, 3, 0, 1, 3, 1], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.303186284741548, 2.303832802585465, 2.3019140725909852, 2.303484488692439, 2.3024991365424428, 2.302222442381323], "accuracy": [0.08809932321310043, 0.08730682730674744, 0.08717474341392517, 0.09272222965955734, 0.0940430611371994, 0.09417514503002167], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [5, 4, 8, 8, 8, 0, 7, 0, 1, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 9, 4], [1, 1, 2, 1, 1, 2, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 2, 0, 1, 3, 3], [28, 57]], "fitness": -0.03457142785191536, "mapping_values": [1, 13, 13, 9, 4, 0, 7, 7, 4, 3, 2, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(alpha))), tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.add(alpha, tf.math.add(alpha, tf.math.negative(tf.math.subtract(grad, alpha)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, beta))", "other_info": {"loss": [2.3034238022678424, 2.3046541236032976, 2.3033206824062207, 2.3054914385997516, 2.3050789635620097, 2.3053606067587435], "accuracy": [0.08730682730674744, 0.08625016361474991, 0.08453308790922165, 0.08889182657003403, 0.0870426595211029, 0.08717474341392517], "val_loss": [1.9717657906668526, 1.97230441229684, 1.9728407178606306, 1.9733845846993583, 1.9739256586347307, 1.9744617598397392], "val_accuracy": [0.03700000047683716, 0.03333333507180214, 0.030666666105389595, 0.028999999165534973, 0.026000000536441803, 0.02500000037252903]}}]