[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 5, 5, 1, 8, 6, 5, 8, 9], [4, 3, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.828000009059906, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.square(grad)), grad))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3978265564376495, 2.217675711768194, 1.826346074522384, 1.3912169515275685, 1.1669786419488688, 1.0036456102487858, 0.9772111536127276, 0.9604156897477722, 0.8183925264326651, 0.7797524956994919, 0.7977485982827884, 0.7336262873749235, 0.7119079392741401, 0.6898095706796854, 0.6913726450256652, 0.6639648234807993, 0.6381947549972489, 0.6277764278348757, 0.5995829989251649, 0.614891212385848, 0.59212482628207, 0.5816310246103176, 0.5703623750662964, 0.5617787478275901, 0.5491222987526427, 0.5298747681450331, 0.5297573254470891, 0.4975458426427344, 0.4839254562542376, 0.5169433590805589, 0.4666508251704938, 0.49383312921561207, 0.4915723077192157, 0.46486029492991554, 0.45532951221852147, 0.44068523297110224, 0.4515617913369096, 0.4487990072067655, 0.4532935054405191, 0.45304935795047485, 0.4551622152737875, 0.41074780313849935, 0.4181789353208425, 0.4149118384680712, 0.40449852292185934], "accuracy": [0.2631092369556427, 0.25822216272354126, 0.3661339282989502, 0.4897635579109192, 0.5831462144851685, 0.6259410977363586, 0.6412627100944519, 0.639809787273407, 0.6861709356307983, 0.7041342258453369, 0.6997754573822021, 0.7210407853126526, 0.7244749665260315, 0.737022876739502, 0.7296261787414551, 0.7403249144554138, 0.7528728246688843, 0.7597411274909973, 0.7741381525993347, 0.7655527591705322, 0.774798572063446, 0.7807422876358032, 0.7858935594558716, 0.7898560166358948, 0.7959318161010742, 0.8029322624206543, 0.8029322624206543, 0.8161405324935913, 0.8210275769233704, 0.8072909712791443, 0.8290846943855286, 0.8170651197433472, 0.8175934553146362, 0.828292191028595, 0.828820526599884, 0.8384625315666199, 0.8298771381378174, 0.8359529972076416, 0.8298771381378174, 0.828292191028595, 0.8347642421722412, 0.8449346423149109, 0.8474441766738892, 0.8412362933158875, 0.8482366800308228], "val_loss": [1.8886989184788294, 1.7567964962550573, 1.075859614780971, 0.994377783366612, 0.8101476090294975, 0.8239473955971854, 0.8659150430134365, 0.6981064251491002, 0.6114086764199393, 0.7375467675072807, 0.5632827111652919, 0.595105801309858, 0.5669124126434326, 0.5964516401290894, 0.5352211679731097, 0.5353196007864816, 0.5009830508913312, 0.48803108079092844, 0.5320017508098057, 0.48015168734959196, 0.4645679678235735, 0.45666936465672087, 0.4784806626183646, 0.47858812127794537, 0.45024982520512175, 0.44000865731920513, 0.44061680350984844, 0.4125139457838876, 0.4608138459069388, 0.4106766240937369, 0.42111111538750784, 0.4673671381814139, 0.3907418165888105, 0.39437173094068256, 0.38623255491256714, 0.4032855885369437, 0.37840841497693745, 0.38750859669276644, 0.3949672154017857, 0.3741608347211565, 0.36698842900139944, 0.369527987071446, 0.3780518429619925, 0.3672641600881304, 0.3700499108859471], "val_accuracy": [0.2083333283662796, 0.281333327293396, 0.5130000114440918, 0.656333327293396, 0.6416666507720947, 0.640999972820282, 0.6363333463668823, 0.690666675567627, 0.7463333606719971, 0.643666684627533, 0.7453333139419556, 0.7269999980926514, 0.7473333477973938, 0.7350000143051147, 0.7403333187103271, 0.7540000081062317, 0.7773333191871643, 0.7866666913032532, 0.7643333077430725, 0.7796666622161865, 0.7963333129882812, 0.800000011920929, 0.8040000200271606, 0.7803333401679993, 0.7933333516120911, 0.8073333501815796, 0.815666675567627, 0.8270000219345093, 0.7883333563804626, 0.8270000219345093, 0.8243333101272583, 0.7873333096504211, 0.8396666646003723, 0.8339999914169312, 0.8346666693687439, 0.8153333067893982, 0.8456666469573975, 0.8286666870117188, 0.8233333230018616, 0.8476666808128357, 0.8366666436195374, 0.843999981880188, 0.8349999785423279, 0.8450000286102295, 0.8399999737739563]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 6, 3, 2, 5, 5, 1, 8, 6, 5, 8, 9], [4, 3, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [50, 57]], "fitness": -0.8231428861618042, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.628122794204589, 2.300029085643256, 2.069665719221738, 1.8792229260845332, 1.7716881863240475, 1.6076091724442862, 1.2982583138700552, 1.0865581162365405, 0.8913635028871358, 0.804977756205677, 0.762006989559556, 0.7249228960613391, 0.6945051397425136, 0.6725268293727642, 0.6599947603040792, 0.6443864551470374, 0.6196583305698234, 0.6138041652094466, 0.5957505611490973, 0.596778556474243, 0.5482123739502732, 0.5542269988759728, 0.543431064015319, 0.5199101425952379, 0.5094481777119804, 0.5206617949865813, 0.4843164736159237, 0.4798286122857556, 0.47409534877506404, 0.4717104653317962, 0.4573514045324025, 0.4647468226996112, 0.44782475325504173, 0.4529794687057105, 0.4516515913396668], "accuracy": [0.23603223264217377, 0.10857218503952026, 0.2641659080982208, 0.34883105754852295, 0.4099854826927185, 0.43785497546195984, 0.555408775806427, 0.6112799048423767, 0.6618676781654358, 0.6948884129524231, 0.7152291536331177, 0.7265883088111877, 0.7323999404907227, 0.7429665923118591, 0.7494386434555054, 0.7629110813140869, 0.7685906887054443, 0.7677981853485107, 0.7769119143486023, 0.772288978099823, 0.7959318161010742, 0.7915731072425842, 0.7907806038856506, 0.8021397590637207, 0.8123101592063904, 0.8076872229576111, 0.8177255392074585, 0.8207634687423706, 0.8185180425643921, 0.8247259259223938, 0.8276317715644836, 0.8257825970649719, 0.8333113193511963, 0.8297450542449951, 0.8347642421722412], "val_loss": [1.976274081638881, 1.9384573527744837, 1.4630465848105294, 1.421990053994315, 1.5873232909611292, 1.1710889339447021, 0.8459542649132865, 0.8551885230200631, 0.6982426302773612, 0.6140076262610299, 0.5541179180145264, 0.5367721319198608, 0.5217434678758893, 0.5185074295316424, 0.522956235068185, 0.5067856311798096, 0.5274858474731445, 0.501900179045541, 0.4929293053490775, 0.43692832333701, 0.44033446482249666, 0.42960478578295025, 0.44533210141318186, 0.42617797000067575, 0.41183316707611084, 0.43545264857155935, 0.45026915413992746, 0.4182371837752206, 0.4214031270572117, 0.3896036914416722, 0.42083122049059185, 0.4218448315347944, 0.4010457822254726, 0.3849850296974182, 0.3849782347679138], "val_accuracy": [0.09833333641290665, 0.1446666717529297, 0.4490000009536743, 0.5046666860580444, 0.4416666626930237, 0.5276666879653931, 0.6430000066757202, 0.5743333101272583, 0.6746666431427002, 0.7043333053588867, 0.7413333058357239, 0.7570000290870667, 0.7673333287239075, 0.765666663646698, 0.7710000276565552, 0.7746666669845581, 0.7526666522026062, 0.7839999794960022, 0.7666666507720947, 0.8029999732971191, 0.8003333210945129, 0.8113333582878113, 0.8063333630561829, 0.8133333325386047, 0.8183333277702332, 0.7996666431427002, 0.8066666722297668, 0.8086666464805603, 0.8103333115577698, 0.8370000123977661, 0.8149999976158142, 0.8083333373069763, 0.8330000042915344, 0.8370000123977661, 0.8289999961853027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 5, 5, 1, 8, 6, 5, 8, 9], [4, 3, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.8065714240074158, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))))), grad), grad)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.395842091471307, 2.216416737406938, 1.838482159586347, 1.4319586668504527, 1.2724202649783245, 1.0375338150069005, 0.9540407184076946, 0.9275175652971924, 0.8541063219407262, 0.8080041344848212, 0.7663493543694032, 0.7352451224447383, 0.7117326318973627, 0.7416753851821032, 0.6525475992628643, 0.6540041189341104, 0.6419864339189854, 0.6561023343461238, 0.6113496250275529, 0.6051811837658765, 0.5915077618793049, 0.5800206487472613, 0.5551774353556519, 0.53659015590835, 0.5475384628358628, 0.5385458332011256, 0.5181991776392176, 0.5056852687225524, 0.4911641433663797, 0.5569244493362437, 0.4927073916101248, 0.4767017575688665, 0.4714054627157772, 0.45765953053494074, 0.4617389799376772, 0.44551999746706067, 0.46125052832514774, 0.4443535750741421, 0.44883376056444785, 0.4576224845319518, 0.4410195617572806, 0.4170306889711039, 0.41056571149980353, 0.4226856295537514, 0.40476842348790676], "accuracy": [0.2635054886341095, 0.2583542466163635, 0.3603222966194153, 0.49887728691101074, 0.5429930090904236, 0.6153744459152222, 0.6425835490226746, 0.6528860330581665, 0.6756042838096619, 0.6921146512031555, 0.7117950320243835, 0.722229540348053, 0.7280412316322327, 0.7194558382034302, 0.7540615797042847, 0.7498348951339722, 0.7563069462776184, 0.7553823590278625, 0.7713643908500671, 0.7688548564910889, 0.7761194109916687, 0.7819310426712036, 0.7903843522071838, 0.8005547523498535, 0.7964601516723633, 0.8039889335632324, 0.8086118102073669, 0.8128384351730347, 0.8189142942428589, 0.789988100528717, 0.8162726163864136, 0.8256505131721497, 0.8280280232429504, 0.8315942287445068, 0.8281601071357727, 0.8341038227081299, 0.8255184292793274, 0.8350284099578857, 0.8345000743865967, 0.8273676037788391, 0.8374059200286865, 0.8449346423149109, 0.8506141901016235, 0.8433496356010437, 0.8485008478164673], "val_loss": [1.8863396644592285, 1.7604385103498186, 1.0376134940556117, 0.8542715651648385, 0.7349782500948224, 0.7907059192657471, 0.7382069315229144, 0.6561178820473808, 0.6231975896017892, 0.6695617096764701, 0.5526048285620553, 0.6056198051997593, 0.5880758932658604, 0.5348211526870728, 0.537251387323652, 0.5619419642857143, 0.5043495041983468, 0.47155327456338064, 0.5131740740367344, 0.4641610894884382, 0.4759241683142526, 0.4499947173254831, 0.4618746212550572, 0.432304961340768, 0.4488879442214966, 0.43584700993129183, 0.4112606814929417, 0.40678318057741436, 0.4754870278494699, 0.4619905948638916, 0.4153301545551845, 0.42270344495773315, 0.3880483167512076, 0.38061961957386564, 0.4003524695123945, 0.41909689562661306, 0.3711255022457668, 0.37550497906548636, 0.396097583430154, 0.3684953195708139, 0.3698102491242545, 0.3629187345504761, 0.3834971530096872, 0.39388186591012136, 0.37470913784844534], "val_accuracy": [0.20766666531562805, 0.2773333191871643, 0.6236666440963745, 0.6736666560173035, 0.6909999847412109, 0.6620000004768372, 0.6803333163261414, 0.7106666564941406, 0.734333336353302, 0.6733333468437195, 0.7603333592414856, 0.7229999899864197, 0.7363333106040955, 0.7733333110809326, 0.7459999918937683, 0.7419999837875366, 0.7749999761581421, 0.7910000085830688, 0.765333354473114, 0.7963333129882812, 0.7963333129882812, 0.8066666722297668, 0.8069999814033508, 0.8090000152587891, 0.8073333501815796, 0.8086666464805603, 0.8176666498184204, 0.8343333601951599, 0.7889999747276306, 0.7900000214576721, 0.8246666789054871, 0.8096666932106018, 0.8386666774749756, 0.8363333344459534, 0.8203333616256714, 0.812666654586792, 0.8446666598320007, 0.8416666388511658, 0.8206666707992554, 0.8483333587646484, 0.8416666388511658, 0.8456666469573975, 0.8349999785423279, 0.8333333134651184, 0.8309999704360962]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 8, 6, 2, 3, 2, 9, 8, 6, 5, 8, 9], [0, 3, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.8042857050895691, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(grad, tf.math.add(beta, grad))))))), beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.397689700457304, 2.2146804289905355, 1.80285820411795, 1.5189318783830232, 1.2381463294267938, 1.0841600650242684, 0.9579889124268948, 0.9349632971180649, 0.8182068645221966, 0.7964124393311978, 0.7701930410716166, 0.719729740062898, 0.7078022146032881, 0.7115528209728099, 0.6738089146221696, 0.6464906488868145, 0.6439785807517856, 0.6251459828677698, 0.5817000710842962, 0.6040616307150277, 0.5829408379782618, 0.5720983387504067, 0.5536463221326212, 0.5522316936425655, 0.5475349684574695, 0.5458902482815768, 0.5042455751409998, 0.504214718097457, 0.5069818525046027, 0.5563928377847189, 0.4676442005260824, 0.4753188588096166, 0.46638049333480686, 0.4467084346792528, 0.4638855875624862, 0.4504755739609264, 0.4652218810634338, 0.44361098448613917, 0.4446665667358595, 0.43910708698330775, 0.43448931403510277, 0.4154626081105095, 0.4044144670402117, 0.41512350470965265, 0.40169888386448, 0.40571443916642513, 0.399636458242889], "accuracy": [0.2631092369556427, 0.258090078830719, 0.37947431206703186, 0.4663848876953125, 0.5403513312339783, 0.6123365759849548, 0.644300639629364, 0.6505085229873657, 0.6940959095954895, 0.6964733600616455, 0.7094175219535828, 0.7306828498840332, 0.7276449799537659, 0.735569953918457, 0.7425703406333923, 0.7537974119186401, 0.7582882046699524, 0.7577598690986633, 0.7816668748855591, 0.7667415142059326, 0.7792893648147583, 0.7812706232070923, 0.7891955971717834, 0.7969884872436523, 0.7935543656349182, 0.7944789528846741, 0.811649739742279, 0.8103289008140564, 0.8103289008140564, 0.791441023349762, 0.83119797706604, 0.8216879963874817, 0.8274996876716614, 0.8345000743865967, 0.8248580098152161, 0.8354246616363525, 0.8234050869941711, 0.8333113193511963, 0.8322546482086182, 0.8350284099578857, 0.8374059200286865, 0.8404437899589539, 0.852331280708313, 0.8405758738517761, 0.8557654023170471, 0.8520671129226685, 0.8492933511734009], "val_loss": [1.8886104311261858, 1.7587730543954032, 1.5060428891863142, 0.889345611844744, 0.8011059761047363, 0.7677994115012032, 0.6759736027036395, 0.6178784711020333, 0.6109363692147392, 0.6598143407276699, 0.5535575492041451, 0.562395589692252, 0.5742720024926322, 0.5384257180350167, 0.49890431335994173, 0.5337651968002319, 0.494356598172869, 0.4758531706673758, 0.4931234291621617, 0.4472201551709856, 0.45570456981658936, 0.4550917148590088, 0.4715358018875122, 0.4320633922304426, 0.4667442866734096, 0.4197373901094709, 0.42440093415124075, 0.4138267721448626, 0.49851528235844206, 0.42275184392929077, 0.43087426253727507, 0.3853503635951451, 0.3816271424293518, 0.41720993178231375, 0.39857542514801025, 0.4249381252697536, 0.3717774067606245, 0.3806281770978655, 0.38840398618153166, 0.3907360093934195, 0.3691842811448233, 0.3562410814421518, 0.3584938049316406, 0.37171870470046997, 0.3824757933616638, 0.3743308016232082, 0.36040693521499634], "val_accuracy": [0.2083333283662796, 0.2773333191871643, 0.4833333194255829, 0.6016666889190674, 0.6276666522026062, 0.6606666445732117, 0.6933333277702332, 0.7350000143051147, 0.7279999852180481, 0.6899999976158142, 0.7566666603088379, 0.7523333430290222, 0.7473333477973938, 0.7540000081062317, 0.7749999761581421, 0.7549999952316284, 0.7806666493415833, 0.7933333516120911, 0.7833333611488342, 0.8040000200271606, 0.8043333292007446, 0.8066666722297668, 0.8023333549499512, 0.812333345413208, 0.7776666879653931, 0.8119999766349792, 0.8190000057220459, 0.8169999718666077, 0.7839999794960022, 0.828000009059906, 0.8173333406448364, 0.8309999704360962, 0.843666672706604, 0.8046666383743286, 0.8363333344459534, 0.8166666626930237, 0.8453333377838135, 0.8370000123977661, 0.8263333439826965, 0.8393333554267883, 0.8386666774749756, 0.8519999980926514, 0.8416666388511658, 0.8416666388511658, 0.8326666951179504, 0.8316666483879089, 0.8420000076293945]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 5, 5, 1, 8, 6, 5, 8, 9], [2, 5, 3, 1, 2, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [26, 57]], "fitness": -0.7837142944335938, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2955123313492662, 2.277863603809081, 2.2593750120421694, 2.2377448222735112, 2.213450987923808, 2.184274030383615, 2.1488247321124687, 2.105027718267515, 2.0467047622064953, 1.9771432855802835, 1.9065210450799348, 1.8126594898266453, 1.7259905833798692, 1.6413010974774949, 1.5613956042819916, 1.4726579090418708, 1.4110340085626043, 1.3483747477072294, 1.3110524514694224, 1.258285800684177, 1.2138079398690182, 1.1946151729713987, 1.150886298658794, 1.1323224562600998, 1.0931879983460346, 1.077677517881357, 1.054958967248667, 1.0376666196506446, 1.0125586893643213, 1.008579008355038, 0.9816208522018425, 0.9804257847424811, 0.9574337689206742, 0.9356676427884392, 0.9275604057715097, 0.9166750234462299, 0.9241519933599665, 0.9071333892136643, 0.8837741767143009, 0.8835849253933868, 0.8709881309709686, 0.8681310647829192, 0.8564888373058643, 0.8531120801409711, 0.8523404447315328, 0.8467649469963233, 0.8251191078947362, 0.8214149362044862, 0.8175412570449261, 0.8141584904470055, 0.814344076094075, 0.8118582483232927, 0.7993166226248589, 0.795822452615517, 0.7966444393222075, 0.7874893160575511, 0.7814919156263596, 0.7791224614960752, 0.7804602230733585, 0.7751792855172063, 0.775748599923408, 0.7628703499671695, 0.7572589234480092, 0.757873933336691, 0.7651192564155604, 0.7537661827219917, 0.7597502486785452, 0.7544541977431559, 0.7497049572445446, 0.7454006802120922, 0.7348999188891365, 0.729665516437147, 0.7352140084265277, 0.7309399932571736, 0.7275230031223849, 0.7245266798496435, 0.7241502636538016, 0.7173108130697372, 0.7233654282128004, 0.7092446063519343, 0.7185729489255938, 0.7125642244542799, 0.6971874721707481, 0.6998421840537982, 0.709778377550342, 0.7005683986691279, 0.7042129459539819, 0.6956274480222002, 0.6889174806285985, 0.6905954774848506, 0.6855126251445045], "accuracy": [0.11002509295940399, 0.16074495017528534, 0.20340773463249207, 0.25558051466941833, 0.28622373938560486, 0.31726324558258057, 0.3537181317806244, 0.3699643313884735, 0.39770177006721497, 0.42345792055130005, 0.43930789828300476, 0.4465724527835846, 0.47285696864128113, 0.4795931875705719, 0.5008585453033447, 0.5209351181983948, 0.533350944519043, 0.5498613119125366, 0.5577862858772278, 0.5696737766265869, 0.5809007883071899, 0.5905428528785706, 0.605468213558197, 0.5996565818786621, 0.6165632009506226, 0.6221106648445129, 0.6252806782722473, 0.6328094005584717, 0.6387531161308289, 0.640338122844696, 0.6528860330581665, 0.6494518518447876, 0.6635847091674805, 0.6692643165588379, 0.6667547225952148, 0.6753401160240173, 0.6705851554870605, 0.6795667409896851, 0.6837934255599976, 0.6841896772384644, 0.6859067678451538, 0.6894729733467102, 0.6909258961677551, 0.6911900639533997, 0.6936996579170227, 0.6954167485237122, 0.7000396251678467, 0.7014925479888916, 0.7046625018119812, 0.7119271159172058, 0.7024171352386475, 0.7016246318817139, 0.711530864238739, 0.7104741930961609, 0.709549605846405, 0.7140403985977173, 0.7169462442398071, 0.7140403985977173, 0.7137762308120728, 0.7143045663833618, 0.7177387475967407, 0.7244749665260315, 0.7166820764541626, 0.7157574892044067, 0.7197200059890747, 0.724739134311676, 0.7164179086685181, 0.7170783281326294, 0.7288337349891663, 0.7238145470619202, 0.7280412316322327, 0.7326641082763672, 0.724210798740387, 0.7253995537757874, 0.733060359954834, 0.7306828498840332, 0.7334566116333008, 0.7314753532409668, 0.7305507659912109, 0.7362303733825684, 0.7354378700256348, 0.7308149337768555, 0.7440232634544373, 0.7433628439903259, 0.7416457533836365, 0.7405890822410583, 0.7392682433128357, 0.7408532500267029, 0.7467969655990601, 0.739928662776947, 0.7456082701683044], "val_loss": [1.9547232219151087, 1.9379504067557198, 1.9199552536010742, 1.8990067073277064, 1.8734385626656669, 1.8418882233755929, 1.8028742245265417, 1.755262987954276, 1.6966000284467424, 1.6269665786198206, 1.54811429977417, 1.4604715960366386, 1.3705599989209856, 1.2823185239519392, 1.2002298831939697, 1.1270627634865897, 1.062962225505284, 1.0086250305175781, 0.9630106517246791, 0.9230594294411796, 0.8890230315072196, 0.860006400517055, 0.8341051340103149, 0.8123298372541156, 0.7922542776380267, 0.7747993128640311, 0.7584246737616402, 0.7443914243153164, 0.7317652532032558, 0.7212755850383213, 0.7103454555783953, 0.701238887650626, 0.6915800230843681, 0.6829492705208915, 0.6752374853406634, 0.6679359333855766, 0.6622664417539325, 0.6555112770625523, 0.6494248764855521, 0.6440726688929966, 0.638314059802464, 0.634033066885812, 0.6297405958175659, 0.625495365687779, 0.6211496080671038, 0.6179165158952985, 0.6125074625015259, 0.6084729773657662, 0.6058334452765328, 0.6011999504906791, 0.5982508659362793, 0.5946327107293266, 0.5915913581848145, 0.5889240673610142, 0.5861684424536568, 0.5835709231240409, 0.5809132541928973, 0.5788383654185704, 0.5761201892580304, 0.5747793912887573, 0.5714562961033413, 0.5699543952941895, 0.5671291351318359, 0.5649997336523873, 0.5620522839682442, 0.5620910780770438, 0.5598747389657157, 0.5574332305363247, 0.5551724433898926, 0.5530421904155186, 0.5522887025560651, 0.5499099322727748, 0.546459436416626, 0.5459070375987461, 0.5444032294409615, 0.5425641536712646, 0.5413855143955776, 0.5395313501358032, 0.5374154703957694, 0.536919219153268, 0.535281913621085, 0.5337244272232056, 0.5315190383366176, 0.5304513488497052, 0.5291939292635236, 0.5279250315257481, 0.527795842715672, 0.5257013525281634, 0.5237182208469936, 0.5240342957632882, 0.521791934967041], "val_accuracy": [0.1589999943971634, 0.3009999990463257, 0.36399999260902405, 0.3919999897480011, 0.42933332920074463, 0.4490000009536743, 0.47999998927116394, 0.5016666650772095, 0.5286666750907898, 0.54666668176651, 0.5600000023841858, 0.5723333358764648, 0.5770000219345093, 0.5923333168029785, 0.606333315372467, 0.6193333268165588, 0.6413333415985107, 0.6583333611488342, 0.6646666526794434, 0.6710000038146973, 0.6756666898727417, 0.6783333420753479, 0.6850000023841858, 0.687666654586792, 0.6919999718666077, 0.6943333148956299, 0.6983333230018616, 0.70333331823349, 0.7066666483879089, 0.7086666822433472, 0.7126666903495789, 0.7149999737739563, 0.7146666646003723, 0.718999981880188, 0.7233333587646484, 0.7229999899864197, 0.7239999771118164, 0.7229999899864197, 0.7276666760444641, 0.7293333411216736, 0.7303333282470703, 0.7293333411216736, 0.734000027179718, 0.7336666584014893, 0.737666666507721, 0.7336666584014893, 0.7406666874885559, 0.7353333234786987, 0.7386666536331177, 0.7419999837875366, 0.7429999709129333, 0.7440000176429749, 0.7453333139419556, 0.7463333606719971, 0.7486666440963745, 0.7523333430290222, 0.7486666440963745, 0.7516666650772095, 0.7509999871253967, 0.7516666650772095, 0.7546666860580444, 0.7506666779518127, 0.753333330154419, 0.7543333172798157, 0.7586666941642761, 0.7549999952316284, 0.7590000033378601, 0.7603333592414856, 0.7609999775886536, 0.7630000114440918, 0.7599999904632568, 0.762333333492279, 0.7646666765213013, 0.765666663646698, 0.7649999856948853, 0.765666663646698, 0.7670000195503235, 0.7696666717529297, 0.7706666588783264, 0.7676666378974915, 0.7693333625793457, 0.7693333625793457, 0.7720000147819519, 0.7730000019073486, 0.7713333368301392, 0.7743333578109741, 0.7706666588783264, 0.7739999890327454, 0.7736666798591614, 0.7706666588783264, 0.7716666460037231]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 8, 6, 2, 3, 6, 9, 8, 6, 5, 8, 9], [2, 3, 3, 3, 3, 3, 1, 4, 2, 0], [3, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [32, 57]], "fitness": -0.3174285590648651, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 9, 6, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(beta, grad))))), tf.math.divide_no_nan(grad, grad)))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3446218129146557, 2.7655210251884377, 2.303932001876982, 2.3031069591234012, 2.3029685880781683, 2.302736596975502], "accuracy": [0.22031435370445251, 0.14872540533542633, 0.09509972482919693, 0.0948355570435524, 0.09496764093637466, 0.10077928751707077], "val_loss": [1.7221230098179408, 1.9749010631016322, 1.9737343788146973, 1.9735686438424247, 1.9734817913600378, 1.9735441207885742], "val_accuracy": [0.312666654586792, 0.09833333641290665, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 5, 5, 1, 8, 6, 5, 8, 9], [4, 3, 3, 3, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [3, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 9, 9, 4, 5, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, grad), grad))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 8, 6, 2, 3, 2, 9, 8, 6, 5, 8, 9], [2, 5, 3, 0, 0, 3, 2, 4, 2, 0], [94, 65, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 9, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 2, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32)))))))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07172103971242905, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 4, 6, 2, 3, 2, 9, 8, 6, 5, 8, 9], [4, 3, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [2, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [62, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 1, 1, 1, 0, 1, 0, 6, 3, 3, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(grad, tf.math.add(beta, grad))))), beta), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(alpha, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 2, 3, 4, 2, 5, 1, 8, 6, 5, 8, 9], [4, 3, 3, 1, 0, 3, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [2, 2, 1, 4, 2, 1, 2, 3], [0, 0, 0, 2, 3, 3, 2], [48, 57, 95]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 11, 11, 5, 6, 1, 1, 0, 0, 0, 0, 13, 6, 7, 3], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.pow(tf.math.add(beta, tf.math.add(grad, alpha)), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32)), beta)), tf.math.add(tf.math.subtract(sigma, sigma), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 3, 5, 5, 1, 8, 6, 5, 8, 9], [4, 3, 3, 3, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [3, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 11, 11, 6, 5, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.square(tf.math.add(beta, grad)), tf.math.square(grad))), grad)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303194840759602, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09985470771789551, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 8, 6, 2, 3, 4, 9, 8, 6, 5, 8, 9], [3, 5, 3, 2, 0, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [3, 0], [88, 19], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07911768555641174, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 2, 3, 8, 2, 5, 1, 6, 6, 5, 8, 9], [2, 3, 3, 3, 3, 3, 1, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 18, 18, 10, 8, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(grad, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.divide_no_nan(grad, grad)))))), grad))))), alpha), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07911768555641174, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 6, 3, 2, 5, 5, 1, 8, 6, 5, 8, 9], [4, 3, 3, 3, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 9, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 0, 1, 1, 0, 1, 0, 2, 2, 0, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(grad)), grad)))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [96240292.3707834, 1830140937.7720249, 8485684540.086118, 23700031232.912956, 50536225983.92392, 92283837048.71324], "accuracy": [0.09351472556591034, 0.09457138925790787, 0.09708096832036972, 0.1002509593963623, 0.10315678268671036, 0.10038304328918457], "val_loss": [368101211.4285714, 2942741211.428571, 9929427529.142857, 23533703168.0, 45960715117.71429, 79416751835.42857], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 9, 2, 5, 5, 1, 8, 6, 5, 8, 9], [3, 5, 3, 0, 0, 2, 2, 4, 2, 0], [31, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 2, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 8, 6, 2, 4, 2, 9, 8, 6, 5, 8, 9], [3, 5, 3, 4, 0, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 0, 4, 2, 1, 2, 3], [1, 2, 3, 2, 3, 3, 2], [48, 12]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 12, 12, 6, 6, 1, 1, 0, 0, 0, 0, 6, 3, 3, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), grad), tf.math.add(beta, tf.math.pow(grad, tf.math.add(grad, tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))))), beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(alpha, beta), tf.math.negative(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 5, 5, 1, 8, 6, 5, 8, 9], [4, 3, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [12, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 11, 11, 6, 5, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.square(grad)), tf.math.square(grad))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 8, 6, 5, 8, 0, 9, 8, 6, 5, 8, 9], [1, 5, 3, 0, 0, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 3, 2, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07911768555641174, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 5, 5, 1, 8, 6, 5, 8, 9], [4, 3, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [3, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [0, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 4, 2, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.add(beta, grad)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [53054633.20653826, 1008636054.9084665, 4676294620.698983, 13060173880.265223, 27848005608.46599, 50852473089.7921], "accuracy": [0.09351472556591034, 0.09457138925790787, 0.09708096832036972, 0.1002509593963623, 0.10328886657953262, 0.10038304328918457], "val_loss": [202891012.57142857, 1621735021.7142856, 5471795638.857142, 12968371053.714285, 25326704347.42857, 43761776347.42857], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 6, 6, 6, 8, 2, 9, 8, 6, 5, 8, 9], [3, 5, 3, 0, 0, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 3, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))))), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302815125335272, 2.3030422633869803, 2.3027432857644934, 2.3022760305390806, 2.302706230869225, 2.3025054375194145], "accuracy": [0.09377889335155487, 0.0944393053650856, 0.09298639744520187, 0.09206181764602661, 0.0874389111995697, 0.09259014576673508], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]