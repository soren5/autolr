[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [2, 2, 2, 0, 6, 2, 1, 9], [0, 2, 3, 3, 0, 2, 2], [57, 56, 47], [1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.822857141494751, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.411402891592626, 1.94626649766629, 1.5263264487054542, 1.2937787062047006, 1.0470853270225993, 0.9067638781501821, 0.8246506197640546, 0.7688518976570041, 0.7912424378202355, 0.7148472304908496, 0.6947776723090668, 0.6819409971160975, 0.6313129593714778, 0.645803014316642, 0.6041662067218212, 0.6021012952771437, 0.5737028942132087, 0.5677314932556389, 0.5649161683869101, 0.540343012059952, 0.5348599122310941, 0.5195090566659569, 0.5080539799401033, 0.5316262938098948, 0.5102273924727686, 0.48270745296535583], "accuracy": [0.24541011452674866, 0.3887201249599457, 0.48144233226776123, 0.5388984084129333, 0.6218464970588684, 0.6676793098449707, 0.6944921612739563, 0.7092854380607605, 0.6919825673103333, 0.7240787148475647, 0.7371549606323242, 0.7341170310974121, 0.7637035846710205, 0.7518161535263062, 0.7737419009208679, 0.7729493975639343, 0.7823272943496704, 0.7837802171707153, 0.7849689722061157, 0.7923656105995178, 0.7951393723487854, 0.8088759779930115, 0.8117818236351013, 0.800818920135498, 0.81548011302948, 0.8239334225654602], "val_loss": [1.8267458506992884, 1.0023306097303117, 0.995403357914516, 0.8076338427407401, 0.6632458823067802, 0.6921146086284092, 0.6756777252469744, 0.6924662249428886, 0.5648055587496076, 0.5538314070020404, 0.5561356033597674, 0.5062587090900966, 0.5400198698043823, 0.4905859913144793, 0.5170921768460955, 0.45435970170157297, 0.4696307522909982, 0.4690039839063372, 0.43798039640699116, 0.42206601585660664, 0.4102613074438913, 0.4253776414053781, 0.43808759110314505, 0.43885306801114765, 0.42208668163844515, 0.4331274798938206], "val_accuracy": [0.4113333225250244, 0.5950000286102295, 0.5953333377838135, 0.6713333129882812, 0.7099999785423279, 0.6740000247955322, 0.6966666579246521, 0.7056666612625122, 0.753333330154419, 0.737333357334137, 0.7406666874885559, 0.7733333110809326, 0.750333309173584, 0.7846666574478149, 0.7636666893959045, 0.7979999780654907, 0.796999990940094, 0.7933333516120911, 0.8029999732971191, 0.8140000104904175, 0.8163333535194397, 0.8113333582878113, 0.8040000200271606, 0.8040000200271606, 0.812666654586792, 0.7963333129882812]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [7, 9, 2, 0, 6, 2, 1, 9], [2, 2, 3, 3, 0, 2, 2], [57, 49, 0], [0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.8171428442001343, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.4116096832276397, 1.937804703541782, 1.476284153835255, 1.1765245139842901, 1.0321493383096965, 0.9595337193939019, 0.88941702473795, 0.7839341531293015, 0.7551921093389894, 0.7082986603906173, 0.6994682705287432, 0.6912402638811492, 0.6410596826450936, 0.6470491289935013, 0.5944561741733437, 0.6199609599628657, 0.5876443438038078, 0.5768168989095107, 0.5513203121872311, 0.5475804522887449, 0.5355296699031784, 0.5266492973189895, 0.521772766826553, 0.5116794790259253, 0.49407682364028854, 0.4945327809277054, 0.4935257884379407, 0.46553018751743996, 0.47928364658557254, 0.4618663744777815, 0.45187960988841336, 0.45361347844682237, 0.4402597442578331, 0.494003316115678, 0.43068464269034695, 0.4206254113706159, 0.4194919769994776, 0.41895818085230224, 0.42141740200242755, 0.39833901465734267, 0.41663442726274447, 0.40254479371136237, 0.39602967126415767, 0.3933392466885964, 0.40676815811558925, 0.37341993300433896, 0.3788096307409186, 0.3744422659236584, 0.3728860144672802, 0.3761423125817807, 0.3688739368456104, 0.3456522268689052], "accuracy": [0.24541011452674866, 0.3917580246925354, 0.4873860776424408, 0.590278685092926, 0.6153744459152222, 0.64231938123703, 0.6647734642028809, 0.7016246318817139, 0.7164179086685181, 0.7243428826332092, 0.7339849472045898, 0.739928662776947, 0.7618544697761536, 0.7531369924545288, 0.7771760821342468, 0.7672698497772217, 0.7753269076347351, 0.778232753276825, 0.7890635132789612, 0.7887993454933167, 0.7964601516723633, 0.8076872229576111, 0.8057059645652771, 0.8064984679222107, 0.8203672170639038, 0.8195747137069702, 0.819970965385437, 0.8272355198860168, 0.8183859586715698, 0.8249900937080383, 0.8314621448516846, 0.834632158279419, 0.8384625315666199, 0.8169330358505249, 0.8403117060661316, 0.8442742228507996, 0.8441421389579773, 0.8459912538528442, 0.8421608805656433, 0.8504821062088013, 0.8492933511734009, 0.8515387773513794, 0.850350022315979, 0.8539162874221802, 0.8482366800308228, 0.8622375130653381, 0.8516708612442017, 0.8623695969581604, 0.8621054291725159, 0.8585391640663147, 0.8661999702453613, 0.8692378997802734], "val_loss": [1.8270820208958216, 0.9721410615103585, 0.7812109845025199, 0.7721270152500698, 0.7316443920135498, 0.6852963992527553, 0.6019492830548968, 0.6166378259658813, 0.5594086306435722, 0.5531530550548008, 0.5461635078702655, 0.5198478358132499, 0.5214557477406093, 0.4940549305507115, 0.528829676764352, 0.4603921004704067, 0.5141126768929618, 0.4759808267865862, 0.4582818065370832, 0.4344238213130406, 0.43214648962020874, 0.44762143066951204, 0.45637844290052143, 0.4247337579727173, 0.46262655939374653, 0.4397259269441877, 0.41705299275262014, 0.4214456081390381, 0.40296867064067293, 0.41719870056424824, 0.40616574457713533, 0.4020056298800877, 0.41260194778442383, 0.37902860982077463, 0.3830591014453343, 0.41631342683519634, 0.36445640666144236, 0.3631001370293753, 0.40538644790649414, 0.4024377465248108, 0.3633993608610971, 0.35391870566776823, 0.365898677280971, 0.39620126145226614, 0.36523081575121197, 0.3943200877734593, 0.34713531391961233, 0.38922453778130667, 0.3547857999801636, 0.35270032712391447, 0.3483212079320635, 0.3854612963540213], "val_accuracy": [0.4113333225250244, 0.6159999966621399, 0.6850000023841858, 0.6800000071525574, 0.6516666412353516, 0.6973333358764648, 0.7450000047683716, 0.6966666579246521, 0.7453333139419556, 0.7440000176429749, 0.7670000195503235, 0.7699999809265137, 0.7680000066757202, 0.7836666703224182, 0.7643333077430725, 0.8019999861717224, 0.7636666893959045, 0.7786666750907898, 0.800000011920929, 0.8036666512489319, 0.7973333597183228, 0.8069999814033508, 0.796999990940094, 0.8119999766349792, 0.781000018119812, 0.8130000233650208, 0.8173333406448364, 0.8050000071525574, 0.8256666660308838, 0.8063333630561829, 0.8203333616256714, 0.8226666450500488, 0.8136666417121887, 0.828000009059906, 0.8286666870117188, 0.8050000071525574, 0.8426666855812073, 0.8423333168029785, 0.8253333568572998, 0.8296666741371155, 0.8426666855812073, 0.8506666421890259, 0.8486666679382324, 0.8303333520889282, 0.8379999995231628, 0.8276666402816772, 0.8560000061988831, 0.8393333554267883, 0.8503333330154419, 0.8513333201408386, 0.8560000061988831, 0.8429999947547913]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [2, 2, 2, 0, 6, 2, 1, 9], [0, 2, 3, 3, 0, 2, 2], [57, 56, 47], [1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.8122857213020325, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.4116507432464247, 1.9352817295911116, 1.5131798541745836, 1.2975400462992643, 1.0498021595891536, 0.9277868721431918, 0.8677077783317677, 0.7842136722167784, 0.8025015552817649, 0.7248595969126823, 0.7210150745645285, 0.684942376108186, 0.7129021138720398, 0.6528269113440633, 0.6178586378845131, 0.6426475985631841, 0.5867010955057281, 0.5925804264966475, 0.579744134604608, 0.5448848276586423, 0.5469352564382169, 0.5272696435120852, 0.5262276550105156, 0.5157217624409166, 0.5226076787662166, 0.49485436331846333, 0.5028803561184432, 0.47516564275563083, 0.46444969772190353, 0.46173791337983167, 0.4566119251871909, 0.4567474110597916, 0.4458662995006021], "accuracy": [0.2452780306339264, 0.39189010858535767, 0.4846123456954956, 0.5260863900184631, 0.6194690465927124, 0.6565843224525452, 0.6872276067733765, 0.702681303024292, 0.6940959095954895, 0.7224937081336975, 0.7275128960609436, 0.7395324110984802, 0.7322678565979004, 0.7516840696334839, 0.7681944370269775, 0.7605336308479309, 0.7795535326004028, 0.7732135653495789, 0.778232753276825, 0.7897239327430725, 0.7921014428138733, 0.8068947196006775, 0.8057059645652771, 0.8086118102073669, 0.8061022162437439, 0.8131026029586792, 0.81548011302948, 0.8222163319587708, 0.8286884427070618, 0.8297450542449951, 0.8329150676727295, 0.828820526599884, 0.8327829837799072], "val_loss": [1.8270322935921806, 0.9820013046264648, 1.0559042181287492, 0.7779595851898193, 0.7256324972425189, 0.7278443064008441, 0.6227523258754185, 0.6008322749819074, 0.5737428835460118, 0.5631637913840157, 0.5354466097695487, 0.5414461748940604, 0.5224110058375767, 0.5168988023485456, 0.5498225518635341, 0.4605133533477783, 0.4828427519117083, 0.5051033667155674, 0.4556539399283273, 0.44505671092442106, 0.41671609027045114, 0.4241958601134164, 0.4514484405517578, 0.44248976026262554, 0.4079064811979021, 0.4775759662900652, 0.417167740208762, 0.3901459830147879, 0.39239247356142315, 0.38218172107424053, 0.39062137263161795, 0.39727059432438444, 0.47534373828342985], "val_accuracy": [0.41200000047683716, 0.6116666793823242, 0.5166666507720947, 0.6779999732971191, 0.6996666789054871, 0.6973333358764648, 0.7133333086967468, 0.7316666841506958, 0.75, 0.7326666712760925, 0.762666642665863, 0.7576666474342346, 0.765666663646698, 0.7749999761581421, 0.7476666569709778, 0.7990000247955322, 0.7900000214576721, 0.7680000066757202, 0.7900000214576721, 0.7993333339691162, 0.8180000185966492, 0.8066666722297668, 0.8056666851043701, 0.7996666431427002, 0.8266666531562805, 0.7866666913032532, 0.8176666498184204, 0.8333333134651184, 0.8286666870117188, 0.8323333263397217, 0.828000009059906, 0.8266666531562805, 0.7860000133514404]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1], [2, 2, 4, 0, 6, 0, 2, 9], [0, 2, 3, 1, 0, 2, 2], [57, 49, 0], [0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.7928571701049805, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), beta))), grad), tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.negative(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1376446057398875, 2.002430508464571, 1.3968601683898925, 1.1086521859276706, 0.8922517887983246, 0.7943741033704227, 0.7158242446666758, 0.6744454831038452, 0.647936654569545, 0.5943662748439452, 0.6123744782172079, 0.5545378254782869, 0.549034218935525, 0.529966192754221, 0.5186716234915449, 0.526593741715907, 0.507928154468064], "accuracy": [0.2693171203136444, 0.36124685406684875, 0.5050851702690125, 0.5951657891273499, 0.6621318459510803, 0.6995112895965576, 0.7260599732398987, 0.7470611333847046, 0.7578919529914856, 0.7697794437408447, 0.7712323069572449, 0.7858935594558716, 0.7935543656349182, 0.8020076751708984, 0.8041210174560547, 0.8070268034934998, 0.8088759779930115], "val_loss": [1.6845731735229492, 1.336545671735491, 1.0166993481772286, 0.8621968882424491, 0.6451696327754429, 0.5820491313934326, 0.5593491622379848, 0.6310299805232457, 0.5041775873729161, 0.4656534365245274, 0.460490345954895, 0.4452301263809204, 0.448036789894104, 0.45127688135419575, 0.4549967220851353, 0.47620385033743723, 0.43211385181971956], "val_accuracy": [0.5070000290870667, 0.43533334136009216, 0.5953333377838135, 0.6320000290870667, 0.6896666884422302, 0.7300000190734863, 0.7443333268165588, 0.706333339214325, 0.7826666831970215, 0.7956666946411133, 0.7929999828338623, 0.8086666464805603, 0.8050000071525574, 0.7940000295639038, 0.8036666512489319, 0.778333306312561, 0.8040000200271606]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [3, 5, 2, 0, 6, 2, 2, 9], [2, 2, 3, 3, 0, 2, 2], [57, 49, 0], [1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [1, 0, 8, 9, 7], [7, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.7611428499221802, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(beta, tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.1063125921734853, 2.5941539912601077, 2.575445590065203, 2.1142324774477226, 2.027654236365366, 1.7646193262797305, 1.7247756256513656, 1.5411695884817453, 1.4564826797106956, 1.3864483495099338, 1.891194140670196, 1.7412201512711727, 1.4487800636563586, 1.2830332645949845, 1.4954258380800962, 1.2532852314340754, 1.1612607338771435, 1.1279175768375964, 1.1961444660247733, 1.2939296848250261, 1.0396129161123397, 1.03832166088791, 0.9312333004223656, 0.9446520891408123, 0.9200840125844747, 0.8547733389013369, 0.9005044635496969, 0.82504377236314, 0.8442830847412163, 0.8345496869200587, 0.7676510375016212, 0.7366789195515838, 0.7460203615665877, 0.7558720214980044, 0.7083971610221691, 0.6784284256074911, 0.6862134728701265, 0.7104117423236929, 0.6614392427342553, 0.664768055658047, 0.6279397021510172, 0.6309869097066735, 0.6143598196891006, 0.5981154031741573, 0.6056358496967387], "accuracy": [0.190859854221344, 0.17421740293502808, 0.1970677524805069, 0.26561880111694336, 0.3105269968509674, 0.4231937527656555, 0.4266279339790344, 0.4843481779098511, 0.5102364420890808, 0.5285959839820862, 0.436930388212204, 0.3971734344959259, 0.49293357133865356, 0.535860538482666, 0.47985735535621643, 0.5329546928405762, 0.568220853805542, 0.5727116465568542, 0.5482763051986694, 0.5274072289466858, 0.6015057563781738, 0.6058644652366638, 0.640338122844696, 0.6305639743804932, 0.6444327235221863, 0.6690001487731934, 0.6542068123817444, 0.683000922203064, 0.6695284843444824, 0.6844538450241089, 0.7018887996673584, 0.7117950320243835, 0.7046625018119812, 0.7116629481315613, 0.7269845604896545, 0.7384757399559021, 0.735569953918457, 0.7300224304199219, 0.7432307600975037, 0.7489103078842163, 0.7574957013130188, 0.7564390301704407, 0.765949010848999, 0.7658169269561768, 0.7677981853485107], "val_loss": [2.956951209477016, 1.830327102116176, 1.8679518699645996, 1.5573511804853166, 1.3708980083465576, 1.6375425883701868, 1.2339764322553362, 1.1723617144993372, 1.0411949157714844, 1.4441613469805037, 1.2760677337646484, 1.010606288909912, 0.7880441461290631, 0.9028563840048653, 0.8491070100239345, 0.8255976779120309, 0.7444448981966291, 0.7391260351453509, 0.7485904182706561, 0.707287107195173, 0.7008526154926845, 0.7065759386335101, 0.7117702790669033, 0.6025605542319161, 0.5895000866481236, 0.7072027581078666, 0.6107356888907296, 0.6636698416301182, 0.6762373617717198, 0.549387914793832, 0.49656002862112864, 0.5289807489940098, 0.539435625076294, 0.5501037495476859, 0.5158512422016689, 0.48560612542288645, 0.5027885777609689, 0.4875711713518415, 0.5114624500274658, 0.4523443153926304, 0.4978295734950474, 0.4734921966280256, 0.4455648490360805, 0.4764068126678467, 0.4696781464985439], "val_accuracy": [0.34166666865348816, 0.16366666555404663, 0.25066667795181274, 0.36766666173934937, 0.45266667008399963, 0.3316666781902313, 0.5286666750907898, 0.5083333253860474, 0.5916666388511658, 0.6176666617393494, 0.5106666684150696, 0.6183333396911621, 0.637333333492279, 0.6183333396911621, 0.6553333401679993, 0.6666666865348816, 0.6899999976158142, 0.6856666803359985, 0.6826666593551636, 0.6833333373069763, 0.6953333616256714, 0.6886666417121887, 0.6683333516120911, 0.7103333473205566, 0.7179999947547913, 0.6729999780654907, 0.7206666469573975, 0.6359999775886536, 0.6759999990463257, 0.7429999709129333, 0.777999997138977, 0.7723333239555359, 0.7806666493415833, 0.7670000195503235, 0.7663333415985107, 0.7846666574478149, 0.7889999747276306, 0.7906666398048401, 0.800000011920929, 0.8040000200271606, 0.7733333110809326, 0.8033333420753479, 0.7996666431427002, 0.7979999780654907, 0.7766666412353516]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1], [2, 6, 2, 2, 6, 2, 1, 2, 0, 6, 1, 2, 7, 2, 0, 0, 4, 5], [0, 2, 3, 3, 0, 2, 2, 5, 2, 4, 1, 3, 5, 5, 2], [57, 34, 47], [1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.5157142877578735, "mapping_values": [1, 1, 1, 0, 1, 0, 33, 33, 18, 15, 2, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 49, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, grad))), tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(beta, beta)), tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.subtract(grad, tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.negative(tf.math.pow(alpha, tf.math.add(beta, grad))))), grad))))), tf.math.square(grad)))))))), tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.623987530673169, 2.2377187830503384, 1.933873811559812, 2.331699942774099, 2.4808687374277234, 2.337022215982139, 2.330063230971524], "accuracy": [0.228899747133255, 0.1592920422554016, 0.3549068868160248, 0.16074495017528534, 0.1216483935713768, 0.10540219396352768, 0.09893012791872025], "val_loss": [1.9844235011509486, 1.254525831767491, 1.9490081923348563, 1.951751777103969, 1.9994630813598633, 1.9893288612365723, 2.0041604042053223], "val_accuracy": [0.09833333641290665, 0.512333333492279, 0.13766667246818542, 0.13300000131130219, 0.1223333328962326, 0.12033333629369736, 0.1133333370089531]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1], [7, 9, 2, 0, 6, 2, 1, 9], [2, 2, 4, 1, 0, 2, 2], [57, 49, 0], [0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [3, 0, 0, 1, 3, 3], [8, 57]], "fitness": -0.35600000619888306, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303341445071334, 2.302109691303451, 2.301221103054768, 2.3010361496609564, 2.3009521913975615, 2.2995311710671067, 2.300613843344458, 2.2999228505945917, 2.298089971631793, 2.297127227741635, 2.297956569807924, 2.296674840407144, 2.297935804466073, 2.298143116427356, 2.2967532370399413, 2.295471553238171, 2.2950261207918654, 2.2939221064144704, 2.294150330182379, 2.2935712287423162, 2.293149962983883, 2.29211760830051, 2.2922308960170037, 2.291257331368473, 2.2906530600308335, 2.2910071380417723, 2.2898153078129355, 2.289617667093001, 2.2900622925816934, 2.2893475586822274, 2.2876406535653864, 2.2889800177841075, 2.2879140515290293, 2.2868903992969947, 2.286065147159563, 2.285714638310338, 2.2846882148047856, 2.285676056352101, 2.283461399019166, 2.2849049100219583, 2.285909454851827, 2.281953641090096, 2.2835440977988637, 2.282471534740089, 2.282265218241718, 2.280613243619228, 2.282041302729969, 2.2801444449555115, 2.280132415980837, 2.2795620366110225, 2.279899171283295, 2.2782138821439752, 2.277249489509513, 2.277261772112934, 2.27625920356556, 2.2750496285513737, 2.2761139489593223, 2.2759397721104793, 2.2755152612960003, 2.2744529488190306, 2.27376851335162, 2.273881019555252, 2.2743534942612342, 2.273709912136986, 2.2730714207894733, 2.2722667407649397, 2.2711476875633188, 2.2707386684455515, 2.2717412894254885, 2.268885951425736, 2.270161782147437, 2.269263992755483, 2.267778951446882, 2.267561864197892, 2.267461045858111, 2.2669651294822124, 2.265110990579464, 2.2666574928974983, 2.266412148905814, 2.264041261618809, 2.2657193147810206, 2.265239881565385, 2.2628585559155696, 2.2637073758759785, 2.2621053935766313, 2.261952170165554, 2.2611702833791623, 2.2623872862138046, 2.2597422143487473, 2.260411773989497, 2.258794145498451, 2.2594959192335202, 2.2576862786030647, 2.258455856176116, 2.2564817629690577, 2.2567160992401307, 2.25605906824221, 2.25659784189289, 2.2559495923572985, 2.2532467235899745], "accuracy": [0.08994849026203156, 0.09179764986038208, 0.09351472556591034, 0.09800554811954498, 0.10447761416435242, 0.1018359512090683, 0.09655263274908066, 0.09694888442754745, 0.1014397069811821, 0.10051512718200684, 0.10157178342342377, 0.10474177449941635, 0.10236428678035736, 0.1006472036242485, 0.10130762308835983, 0.1088363528251648, 0.11279883980751038, 0.11187426000833511, 0.11147800832986832, 0.11332716792821884, 0.11187426000833511, 0.11781799048185349, 0.11662924289703369, 0.12349755316972733, 0.1162329912185669, 0.11768590658903122, 0.12323339283466339, 0.11530841141939163, 0.11953506618738174, 0.12257297337055206, 0.12376172095537186, 0.12495046854019165, 0.12534672021865845, 0.12957337498664856, 0.13049794733524323, 0.13221503794193268, 0.13670584559440613, 0.13274335861206055, 0.1406683325767517, 0.1336679458618164, 0.1336679458618164, 0.14132875204086304, 0.14212125539779663, 0.14119666814804077, 0.14159291982650757, 0.1484612375497818, 0.1410645842552185, 0.14991414546966553, 0.14634791016578674, 0.1492537260055542, 0.14898955821990967, 0.1534803807735443, 0.15598995983600616, 0.16034869849681854, 0.15836745500564575, 0.16193369030952454, 0.1570466309785843, 0.15863162279129028, 0.16140536963939667, 0.15955619513988495, 0.16470743715763092, 0.177255317568779, 0.16417910158634186, 0.16602826118469238, 0.17302866280078888, 0.1706511676311493, 0.16999074816703796, 0.17817988991737366, 0.17117950320243835, 0.18121780455112457, 0.17540615797042847, 0.18134988844394684, 0.18491612374782562, 0.18095363676548004, 0.1802932173013687, 0.18095363676548004, 0.19112402200698853, 0.1810857206583023, 0.1838594675064087, 0.19482234120368958, 0.18597279489040375, 0.18993528187274933, 0.19204860925674438, 0.18821820616722107, 0.19614318013191223, 0.1904636174440384, 0.18570862710475922, 0.19812442362308502, 0.2024831622838974, 0.2028794139623642, 0.2082948088645935, 0.20182274281978607, 0.2052568942308426, 0.20538897812366486, 0.2102760523557663, 0.2075023055076599, 0.216880202293396, 0.20974771678447723, 0.20882314443588257, 0.2226918488740921], "val_loss": [1.9707861627851213, 1.9703370503016882, 1.9698871203831263, 1.9694452285766602, 1.9689987727573939, 1.9685590607779366, 1.9681203705923898, 1.9676775251116072, 1.9672314780099052, 1.9667908804757255, 1.9663472856794084, 1.9659089360918318, 1.9654707227434431, 1.9650288309369768, 1.9645872116088867, 1.9641449110848563, 1.9637021337236678, 1.9632625579833984, 1.9628261157444544, 1.962390967777797, 1.9619548661368233, 1.9615238053458077, 1.961087771824428, 1.9606541906084334, 1.9602183614458357, 1.9597840990339006, 1.9593469755990165, 1.9589103971208846, 1.958474772317069, 1.9580389431544714, 1.9576050213405065, 1.9571708951677596, 1.9567328180585588, 1.9563010760716029, 1.9558674267360143, 1.9554263523646764, 1.9549875259399414, 1.9545478820800781, 1.9541081019810267, 1.953664779663086, 1.9532249995640345, 1.952779838017055, 1.9523388317653112, 1.9519013677324568, 1.951465129852295, 1.9510229655674525, 1.9505883625575475, 1.9501446315220423, 1.9497037615094865, 1.9492600985935755, 1.9488181386675154, 1.9483787672860282, 1.9479344231741769, 1.9474939618791853, 1.947052274431501, 1.9466074534824915, 1.946164608001709, 1.9457193102155412, 1.9452715601239885, 1.9448236737932478, 1.9443777629307337, 1.9439281054905482, 1.9434784480503626, 1.9430345126560755, 1.942584650857108, 1.9421322005135673, 1.941680840083531, 1.9412241663251604, 1.9407695361546107, 1.9403140885489327, 1.93986143384661, 1.9394051006862096, 1.9389443397521973, 1.9384823526654924, 1.9380238396780831, 1.937558650970459, 1.9370929854256767, 1.9366309302193778, 1.936166831425258, 1.9356920378548759, 1.935230050768171, 1.9347622053963798, 1.934286185673305, 1.9338224274771554, 1.9333509036472865, 1.93287536076137, 1.932403496333531, 1.9319250924246651, 1.9314453261239188, 1.930962290082659, 1.9304757118225098, 1.9299877711704798, 1.9295018059866769, 1.9290177481515067, 1.9285343715122767, 1.928041662488665, 1.9275499071393694, 1.9270544733319963, 1.9265628542218889, 1.9260621752057756], "val_accuracy": [0.043666668236255646, 0.04600000008940697, 0.05066666752099991, 0.05166666582226753, 0.05400000140070915, 0.0573333315551281, 0.05999999865889549, 0.061666667461395264, 0.06333333253860474, 0.06466666609048843, 0.06599999964237213, 0.07133333384990692, 0.0729999989271164, 0.07633333653211594, 0.08100000023841858, 0.08500000089406967, 0.08766666799783707, 0.09033333510160446, 0.09266666322946548, 0.09466666728258133, 0.09733333438634872, 0.1003333330154419, 0.10433333367109299, 0.11033333092927933, 0.1133333370089531, 0.11833333224058151, 0.12099999934434891, 0.12433333694934845, 0.1289999932050705, 0.13233333826065063, 0.13633333146572113, 0.13966666162014008, 0.14399999380111694, 0.14800000190734863, 0.15066666901111603, 0.15399999916553497, 0.15800000727176666, 0.16200000047683716, 0.16566666960716248, 0.17133332788944244, 0.17633333802223206, 0.1809999942779541, 0.18466666340827942, 0.1889999955892563, 0.19366666674613953, 0.19733333587646484, 0.2006666660308838, 0.20600000023841858, 0.21133333444595337, 0.21400000154972076, 0.22033333778381348, 0.2253333330154419, 0.22699999809265137, 0.23100000619888306, 0.23366667330265045, 0.234333336353302, 0.2370000034570694, 0.24199999868869781, 0.24533332884311676, 0.24933333694934845, 0.2513333261013031, 0.2553333342075348, 0.2613333463668823, 0.2666666805744171, 0.27133333683013916, 0.27399998903274536, 0.2770000100135803, 0.2800000011920929, 0.28433331847190857, 0.28700000047683716, 0.2906666696071625, 0.2943333387374878, 0.2966666519641876, 0.2983333468437195, 0.3006666600704193, 0.3016666769981384, 0.304666668176651, 0.3070000112056732, 0.30799999833106995, 0.312666654586792, 0.31566667556762695, 0.3190000057220459, 0.3216666579246521, 0.3240000009536743, 0.32499998807907104, 0.3253333270549774, 0.32766667008399963, 0.33000001311302185, 0.3336666524410248, 0.33500000834465027, 0.33666667342185974, 0.3383333384990692, 0.3396666646003723, 0.34066668152809143, 0.34200000762939453, 0.3440000116825104, 0.34700000286102295, 0.3490000069141388, 0.3503333330154419, 0.35100001096725464]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [2, 2, 2, 0, 6, 2, 1, 9], [0, 2, 3, 3, 0, 2, 2], [57, 56, 47], [1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [5, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09747721254825592, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1], [7, 3, 2, 2, 5, 2, 1, 9], [2, 2, 3, 3, 0, 2, 2], [19, 49, 0], [0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1], [3, 3, 0, 4, 2, 1, 2, 3, 5, 9, 6, 1, 5, 2, 8, 4, 0, 6, 2], [3, 0, 0, 1, 3, 3, 2, 0, 2, 3, 3, 2, 3], [15, 57, 47, 39]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 32, 19, 13, 4], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.negative(tf.math.pow(tf.math.add(tf.math.subtract(sigma, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha), sigma)), sigma)), tf.math.square(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.subtract(tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), beta), tf.math.pow(sigma, tf.math.negative(tf.math.divide_no_nan(tf.math.add(sigma, beta), sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [7, 9, 2, 0, 6, 2, 1, 9], [0, 2, 3, 3, 0, 2, 2], [72, 56, 47], [1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 2, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 13, 7, 6, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.negative(tf.math.pow(tf.math.add(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, sigma), sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [2, 2, 2, 0, 6, 2, 1, 9], [0, 2, 3, 3, 0, 2, 2], [57, 49, 0], [1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [2, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 8, 6, 3, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, grad))), tf.math.negative(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), beta))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10130762308835983, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1], [2, 2, 2, 0, 6, 2, 2, 9], [2, 2, 4, 1, 0, 2, 2], [61, 49, 47], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 6, 0, 4, 2, 1, 2, 3], [2, 0, 0, 1, 3, 3], [27, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 13, 7, 6, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(beta, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, sigma), sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 2, 2, 0, 6, 2, 2, 9], [0, 1, 3, 3, 0, 2, 2], [57, 49, 0], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [5, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [67, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07753269374370575, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [7, 9, 2, 0, 6, 2, 1, 9], [0, 2, 3, 3, 0, 2, 2], [57, 21, 47], [0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [96, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 2, 1, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [2, 2, 2, 0, 6, 2, 1, 9], [0, 2, 3, 3, 0, 2, 2], [57, 56, 47], [1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1], [2, 3, 0, 4, 2, 1, 2, 3, 9, 2, 0, 5, 3, 0, 4, 8, 7, 0, 5, 0], [1, 0, 0, 1, 3, 3, 3, 0, 0, 1, 3], [48, 57, 32, 98, 13]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 31, 20, 11, 5], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.math.pow(tf.math.add(tf.math.subtract(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha), sigma)), sigma)), tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.negative(tf.math.square(tf.math.multiply(tf.math.negative(sigma), tf.math.pow(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32))))), tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.negative(sigma)))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [44, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [7, 9, 2, 0, 6, 2, 1, 9], [0, 2, 3, 3, 0, 2, 2], [57, 49, 0], [0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [6, 7], [88, 19], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [7, 3, 0, 4, 2, 1, 2, 3, 7, 7, 9, 8, 7, 1, 3, 3, 9, 3, 4, 4, 5, 8, 2, 1], [2, 0, 0, 1, 3, 3, 3, 1, 1, 2, 1, 1, 0, 2, 2, 0, 1], [48, 57, 30, 6, 51, 23]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 2, 1, 2, 1, 1, 0, 1, 0, 41, 24, 17, 6], "tree_depth": 30, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(beta), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(tf.math.subtract(tf.math.add(tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha), sigma), sigma), tf.math.add(tf.math.add(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(tf.math.subtract(sigma, tf.math.multiply(alpha, alpha)), tf.math.multiply(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.pow(tf.math.pow(beta, alpha), tf.math.square(tf.math.sqrt(tf.math.add(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))))), beta))))), beta)), tf.math.subtract(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [9, 2, 2, 0, 6, 2, 1, 9], [2, 2, 3, 3, 0, 2, 2], [46, 49, 0], [1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [7, 3, 0, 4, 2, 1, 2, 3], [2, 3, 3, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 8, 4, 4, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(beta, sigma), tf.math.negative(tf.math.pow(sigma, alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1], [2, 2, 2, 0, 6, 2, 1, 9], [2, 2, 4, 1, 0, 2, 2], [57, 56, 47], [1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [3, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3035402549586954, 2.3028000131684396, 2.3024081028432044, 2.3026768141859764, 2.3031049864308835, 2.302131436362699], "accuracy": [0.08928807079792023, 0.09021265059709549, 0.09034473448991776, 0.09470347315073013, 0.09906221181154251, 0.09549596905708313], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [2, 2, 2, 0, 6, 2, 1, 9], [0, 2, 3, 3, 0, 2, 2], [41, 49, 47], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 6, 0, 4, 2, 1, 2, 3], [3, 3, 0, 1, 3, 3], [48, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 1, 1, 0, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(sigma, sigma))", "other_info": {"loss": [2.3035402549586954, 2.3028000131684396, 2.3024081028432044, 2.3026768141859764, 2.3031049864308835, 2.302131436362699], "accuracy": [0.08928807079792023, 0.09021265059709549, 0.09034473448991776, 0.09470347315073013, 0.09906221181154251, 0.09549596905708313], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [7, 9, 2, 0, 6, 2, 1, 9], [0, 2, 3, 3, 0, 2, 2], [57, 43, 0], [0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 1, 0, 1, 3, 3], [48, 57]], "fitness": -0.03257142752408981, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, alpha))", "other_info": {"loss": [2.3041558869683967, 2.304890942501118, 2.3066199256003634, 2.30877354201419, 2.31239104759046, 2.3133710725605683], "accuracy": [0.08981640636920929, 0.08730682730674744, 0.08400475233793259, 0.0886276587843895, 0.08519349992275238, 0.08175934851169586], "val_loss": [1.9724108151027135, 1.973695891244071, 1.9754462923322404, 1.977168015071324, 1.9793084689549036, 1.9812891142708915], "val_accuracy": [0.03466666489839554, 0.02666666731238365, 0.025333333760499954, 0.024000000208616257, 0.024000000208616257, 0.03266666829586029]}}]