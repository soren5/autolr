[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 8, 3, 2, 3, 2, 1, 5, 4, 1, 2, 8, 9, 7], [2, 3, 3, 3, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [6, 3, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8311428427696228, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0255196128995614, 1.847735469776799, 1.264331242569276, 0.9196011156548346, 0.8189761707370528, 0.7717294786836429, 0.6900093992152282, 0.7083980080836075, 0.6492250426066566, 0.6275651571127433, 0.5965212366726137, 0.6083098766495444, 0.5641321897931842, 0.544824241906928, 0.5576121306705941, 0.5458065459064095, 0.5092477721702532, 0.5135988201353103, 0.5034472378899062, 0.4724511101166838, 0.4689860061143667, 0.46233815930192307, 0.4819875778798902, 0.447854881836297, 0.4520844428522901, 0.42565336092084294, 0.42842257048444127, 0.4251730315571275, 0.4102838363558971, 0.41447358823975144, 0.40874854101402225, 0.3994599937400672, 0.38678603860145044, 0.38226461547902074, 0.3831670074619716, 0.37312160073537803, 0.3502071062925863, 0.3720900412437828, 0.3628453271082915, 0.34694545304597313, 0.356820955937486], "accuracy": [0.3319244384765625, 0.3800026476383209, 0.5501254796981812, 0.6580372452735901, 0.6836613416671753, 0.711530864238739, 0.7357020378112793, 0.7314753532409668, 0.7504953145980835, 0.7614582180976868, 0.7716285586357117, 0.7676661014556885, 0.7885351777076721, 0.7954035401344299, 0.793950617313385, 0.7972526550292969, 0.8121780753135681, 0.8034605979919434, 0.8148196935653687, 0.8211596608161926, 0.8236692547798157, 0.8309338092803955, 0.8193105459213257, 0.8313300609588623, 0.8345000743865967, 0.8407079577445984, 0.8413683772087097, 0.844010055065155, 0.8508783578872681, 0.8455950617790222, 0.8494254350662231, 0.852859616279602, 0.8595958352088928, 0.8622375130653381, 0.8602562546730042, 0.8573504090309143, 0.8708229064941406, 0.863029956817627, 0.8679170608520508, 0.8733324408531189, 0.8684453964233398], "val_loss": [1.2835494790758406, 1.2313487189156669, 0.8250177758080619, 0.7503413813454765, 0.6626010281699044, 0.600198643548148, 0.6393975360052926, 0.5687205450875419, 0.5220565966197422, 0.5750555992126465, 0.589415465082441, 0.4951560156685965, 0.47200868810926166, 0.4460246903555734, 0.4499281474522182, 0.42723889861788067, 0.42411184310913086, 0.4291938373020717, 0.4072711638041905, 0.43298100573675974, 0.40632015466690063, 0.4134704555783953, 0.4060361385345459, 0.39701115233557566, 0.36335318429129465, 0.3736703395843506, 0.3582582303455898, 0.38536674635750906, 0.35804263183048796, 0.37713198150907246, 0.3819633722305298, 0.3731773410524641, 0.3620252694402422, 0.3967446344239371, 0.3507417695862906, 0.35288617440632414, 0.3572920390537807, 0.37310186454227995, 0.3409839613097055, 0.34413924387523104, 0.34419912099838257], "val_accuracy": [0.5836666822433472, 0.5546666383743286, 0.6663333177566528, 0.6299999952316284, 0.6976666450500488, 0.7160000205039978, 0.6806666851043701, 0.7223333120346069, 0.7616666555404663, 0.7236666679382324, 0.7293333411216736, 0.762333333492279, 0.778333306312561, 0.8026666641235352, 0.7990000247955322, 0.8143333196640015, 0.8206666707992554, 0.8080000281333923, 0.8253333568572998, 0.8073333501815796, 0.8209999799728394, 0.8176666498184204, 0.8213333487510681, 0.8263333439826965, 0.8393333554267883, 0.8403333425521851, 0.8383333086967468, 0.8320000171661377, 0.8453333377838135, 0.8396666646003723, 0.8346666693687439, 0.8326666951179504, 0.8456666469573975, 0.8286666870117188, 0.843999981880188, 0.8533333539962769, 0.8496666550636292, 0.8403333425521851, 0.8489999771118164, 0.8489999771118164, 0.846666693687439]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [5, 8, 6, 2, 3, 2, 1, 5, 2, 9, 6, 8, 9, 3], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 77, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 1, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8242856860160828, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.sqrt(tf.math.divide_no_nan(grad, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.025521181325997, 1.8466578338439392, 1.2226903896132764, 0.9582880984333921, 0.8016421380705601, 0.7717313248845706, 0.6977588960507511, 0.6851213663686552, 0.634304733765108, 0.6375256481108932, 0.591013887161277, 0.5813956804688675, 0.5622313096381261, 0.5438842761785819, 0.520666349620678, 0.5583206182142778, 0.505983715036274, 0.5161565886103104, 0.5006814512436841, 0.4773792254335892, 0.4680081810288032, 0.46111248405444827, 0.48176611516894824, 0.4444401877872098, 0.4516335692443175, 0.43640378151414194, 0.41817074793283543, 0.42651870916028617, 0.41092199918506106, 0.41456684954351264, 0.4135130394081382, 0.40154040110519046, 0.4032181245287758, 0.3975312342977228, 0.3711220748420436, 0.36843203021755405, 0.3630076778397946, 0.3601138010717512, 0.355828979216578, 0.34487973798960425, 0.3614427675747081], "accuracy": [0.3319244384765625, 0.38105931878089905, 0.5555408596992493, 0.6478668451309204, 0.6922467350959778, 0.7119271159172058, 0.7309470176696777, 0.7359662055969238, 0.7609298825263977, 0.754589855670929, 0.7711002230644226, 0.7812706232070923, 0.7893276810646057, 0.793950617313385, 0.8049134612083435, 0.7895918488502502, 0.8123101592063904, 0.8059701323509216, 0.8150838613510132, 0.819970965385437, 0.8227446675300598, 0.83119797706604, 0.8215559124946594, 0.8358209133148193, 0.8366134166717529, 0.834632158279419, 0.8450667262077332, 0.8424250483512878, 0.8486329317092896, 0.8449346423149109, 0.8424250483512878, 0.8525954484939575, 0.8495575189590454, 0.8545766472816467, 0.8639545440673828, 0.8648791313171387, 0.8626337051391602, 0.863029956817627, 0.8697662353515625, 0.8733324408531189, 0.8639545440673828], "val_loss": [1.2834596974509103, 1.3006294454847063, 1.0143322604043143, 0.6490128891808646, 0.620334097317287, 0.5856543609074184, 0.6452786752155849, 0.5222446237291608, 0.5300783770424979, 0.4898033823285784, 0.4936184712818691, 0.45803284645080566, 0.4639298234667097, 0.44055131503513884, 0.45022525106157574, 0.42777087007250103, 0.4235163756779262, 0.443626914705549, 0.40474129574639456, 0.4243376680782863, 0.3990443434034075, 0.40720488343920025, 0.39629348686763216, 0.3834237541471209, 0.359460140977587, 0.36640545300074984, 0.36665678875786917, 0.37627250807625906, 0.35668619189943584, 0.3602857504572187, 0.3581287775720869, 0.42755015407289776, 0.35629970686776297, 0.37783495017460417, 0.34826269320079256, 0.3427113635199411, 0.36912085328783306, 0.35053086280822754, 0.3445618748664856, 0.3656628557613918, 0.3507237264088222], "val_accuracy": [0.5843333601951599, 0.5236666798591614, 0.5693333148956299, 0.7076666951179504, 0.7176666855812073, 0.7196666598320007, 0.6940000057220459, 0.7649999856948853, 0.7603333592414856, 0.7853333353996277, 0.7820000052452087, 0.7956666946411133, 0.7956666946411133, 0.8040000200271606, 0.7973333597183228, 0.8176666498184204, 0.8163333535194397, 0.7956666946411133, 0.8289999961853027, 0.8186666369438171, 0.8273333311080933, 0.8180000185966492, 0.828000009059906, 0.8333333134651184, 0.8483333587646484, 0.8450000286102295, 0.8320000171661377, 0.8360000252723694, 0.8476666808128357, 0.8486666679382324, 0.847000002861023, 0.8046666383743286, 0.8513333201408386, 0.840666651725769, 0.8476666808128357, 0.8550000190734863, 0.8403333425521851, 0.8519999980926514, 0.8496666550636292, 0.8326666951179504, 0.840666651725769]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 8, 3, 2, 3, 2, 1, 5, 2, 9, 6, 8, 9], [2, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8185714483261108, "mapping_values": [1, 1, 1, 0, 1, 0, 19, 19, 13, 6, 3, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.sqrt(tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.subtract(tf.math.square(tf.math.add(beta, beta)), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)), tf.math.divide_no_nan(tf.math.add(beta, beta), grad))), tf.math.add(beta, tf.math.sqrt(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.025514102174212, 1.861019014824084, 1.2896678027318154, 0.9618744340004025, 0.8156215558434994, 0.7607080139787583, 0.7193557899137766, 0.6938759895395121, 0.6488960406264105, 0.6210506877264941, 0.5811044812643328, 0.5913280779187076, 0.5653894892017273, 0.5488769280959302, 0.5573861532286253, 0.5391811636681129, 0.5069490144194834, 0.5183599449703014, 0.49928131604695347, 0.46982238590599223, 0.4641056561340918, 0.4639929517456065, 0.46723839497726827, 0.4487338818106842], "accuracy": [0.33179235458374023, 0.37802138924598694, 0.5461629629135132, 0.6464139223098755, 0.6861709356307983, 0.7172104120254517, 0.7259278893470764, 0.7334566116333008, 0.7559106945991516, 0.7607977986335754, 0.7803460359573364, 0.7803460359573364, 0.7869502305984497, 0.7897239327430725, 0.7911768555641174, 0.7991018295288086, 0.8142913579940796, 0.8029322624206543, 0.8115176558494568, 0.8241975903511047, 0.8255184292793274, 0.830669641494751, 0.8301413059234619, 0.8327829837799072], "val_loss": [1.2828028542654855, 1.182748760495867, 0.9312524454934257, 0.7139009407588414, 0.6082855292728969, 0.597042271069118, 0.649227363722665, 0.5151435647691999, 0.5111191102436611, 0.4860262359891619, 0.4992882353918893, 0.47012931959969656, 0.4783832175391061, 0.4449221406664167, 0.47024078028542654, 0.4371656690325056, 0.41532687629972187, 0.43147838967187063, 0.39956345728465487, 0.4425652027130127, 0.41645222902297974, 0.42030430691582815, 0.4048709103039333, 0.39650510038648334], "val_accuracy": [0.5803333520889282, 0.5646666884422302, 0.6439999938011169, 0.6690000295639038, 0.7176666855812073, 0.7166666388511658, 0.7200000286102295, 0.7749999761581421, 0.7760000228881836, 0.7853333353996277, 0.7743333578109741, 0.7863333225250244, 0.7886666655540466, 0.8026666641235352, 0.7923333048820496, 0.8103333115577698, 0.8223333358764648, 0.8146666884422302, 0.8303333520889282, 0.7916666865348816, 0.8096666932106018, 0.8146666884422302, 0.824999988079071, 0.824999988079071]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 8, 3, 2, 3, 2, 1, 5, 2, 9, 6, 8, 9], [2, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8185714483261108, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0255104717152106, 1.8527835678383502, 1.266855671216531, 0.9527686279699582, 0.800263969511829, 0.7552142219142891, 0.6949874119846151, 0.6908576509436407, 0.6544665862241394, 0.6048660786742973, 0.6113338137126444, 0.5881060935786183, 0.5602573087391458, 0.5489679200931736, 0.5676343897786894, 0.5516050100373775, 0.5004085534126878, 0.5124097655178801, 0.5080614801820527, 0.473801678512799, 0.4646407224168048, 0.4698598440596299, 0.4718881299577259, 0.4495575630693167], "accuracy": [0.33179235458374023, 0.37921014428138733, 0.5464271306991577, 0.6579051613807678, 0.6905296444892883, 0.7180029153823853, 0.7327961921691895, 0.7390040755271912, 0.7544577717781067, 0.7708360552787781, 0.7668735980987549, 0.7770439982414246, 0.7911768555641174, 0.7907806038856506, 0.7860256433486938, 0.7944789528846741, 0.8168009519577026, 0.8054417967796326, 0.8112534880638123, 0.8238013386726379, 0.8255184292793274, 0.8252542614936829, 0.8294808864593506, 0.8327829837799072], "val_loss": [1.2826920236860002, 1.2179183278764998, 0.7628604514258248, 0.7322723865509033, 0.6158544846943447, 0.573827964918954, 0.6254436118262154, 0.5253175156457084, 0.5323808533804757, 0.5083885022572109, 0.5310310465948922, 0.46922162600925993, 0.4881329195840018, 0.4465240410396031, 0.4586759294782366, 0.4358712434768677, 0.4324892929622105, 0.4354569060461862, 0.3995773025921413, 0.42177131346293856, 0.39287378106798443, 0.42315259150096346, 0.3987213373184204, 0.3973114149911063], "val_accuracy": [0.5820000171661377, 0.5569999814033508, 0.6970000267028809, 0.6806666851043701, 0.7183333039283752, 0.7206666469573975, 0.7009999752044678, 0.7633333206176758, 0.7453333139419556, 0.7720000147819519, 0.7480000257492065, 0.7860000133514404, 0.781333327293396, 0.8026666641235352, 0.7943333387374878, 0.8076666593551636, 0.8056666851043701, 0.79666668176651, 0.8336666822433472, 0.8166666626930237, 0.8259999752044678, 0.8109999895095825, 0.8253333568572998, 0.8246666789054871]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 8, 3, 2, 3, 2, 1, 5, 2, 9, 6, 8, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8119999766349792, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0255203311469465, 1.8484217322749736, 1.2640059383522328, 0.9257257946997807, 0.8200612520859809, 0.7669599279594018, 0.6935561750511751, 0.6923561551866593, 0.651507992723032, 0.6389903779184782, 0.5940734609920177, 0.5795657249521098, 0.5581506000234624, 0.5493637094439737, 0.5658399595749487, 0.5516804607474116, 0.49527889318501456, 0.502651882343257, 0.5023618535106806, 0.477678206224861, 0.4613920456351322, 0.46299090774429946, 0.47795135784205856, 0.4476719047800897, 0.4603759101306002, 0.4289272690941991, 0.4293344019347682, 0.4301735490950233, 0.41493684834398536, 0.4241382687429726, 0.39563036311760774, 0.39556526680742793, 0.413021233701876, 0.40276128082007084, 0.37427400390879195], "accuracy": [0.3319244384765625, 0.38053098320961, 0.5476158857345581, 0.6642451286315918, 0.6840575933456421, 0.7116629481315613, 0.733060359954834, 0.735041618347168, 0.7493065595626831, 0.7589486241340637, 0.7746664881706238, 0.7796856164932251, 0.7909126877784729, 0.793422281742096, 0.7845727205276489, 0.793950617313385, 0.8215559124946594, 0.8133667707443237, 0.8131026029586792, 0.8207634687423706, 0.8238013386726379, 0.8284242749214172, 0.8260467648506165, 0.8325188159942627, 0.8338396549224854, 0.8404437899589539, 0.8409721255302429, 0.8411042094230652, 0.8482366800308228, 0.8449346423149109, 0.8490291833877563, 0.8582749962806702, 0.8473120927810669, 0.8556333184242249, 0.8642187118530273], "val_loss": [1.2833593913487025, 1.2322706154414587, 0.7094543150493077, 0.7649168797901699, 0.6162131173270089, 0.5469767025538853, 0.6319607325962612, 0.5502797365188599, 0.5368889229638236, 0.5001318114144462, 0.4857025146484375, 0.4640816790716989, 0.4997760738645281, 0.4456231934683664, 0.46616707529340473, 0.440998979977199, 0.4631052698407854, 0.4653290169579642, 0.4054356813430786, 0.4365796617099217, 0.42606210708618164, 0.42157598052706036, 0.3942076393536159, 0.39815453972135273, 0.36418895210538593, 0.370468054498945, 0.36422137703214374, 0.3856702872685024, 0.35635397263935636, 0.3538769142968314, 0.35371010644095285, 0.4509227616446359, 0.3594604219709124, 0.37670555285045076, 0.34027927262442453], "val_accuracy": [0.5849999785423279, 0.5559999942779541, 0.7039999961853027, 0.6413333415985107, 0.7053333520889282, 0.7383333444595337, 0.687666654586792, 0.746666669845581, 0.7633333206176758, 0.7796666622161865, 0.7879999876022339, 0.79666668176651, 0.7706666588783264, 0.8019999861717224, 0.7940000295639038, 0.8106666803359985, 0.7850000262260437, 0.7856666445732117, 0.8243333101272583, 0.7923333048820496, 0.7986666560173035, 0.8113333582878113, 0.8303333520889282, 0.8276666402816772, 0.8463333249092102, 0.8399999737739563, 0.8330000042915344, 0.8309999704360962, 0.8413333296775818, 0.8529999852180481, 0.846666693687439, 0.7913333177566528, 0.8476666808128357, 0.8446666598320007, 0.8489999771118164]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 8, 3, 2, 3, 9, 1, 5, 2, 9, 6, 8, 9], [4, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [0, 1, 0, 1, 0, 1, 0], [0, 0, 1, 1, 0, 0], [2, 3, 1, 9, 7], [6, 0], [88, 96], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [26, 57]], "fitness": -0.7788571715354919, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 9, 5, 1, 5, 3, 2, 1, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.sqrt(tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, grad)))), tf.math.add(beta, grad)), tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.294519236814927, 2.2782716970276193, 2.2588837999851004, 2.23795500158744, 2.211682218869821, 2.184094543328548, 2.1506005068181797, 2.101978514849817, 2.0464267393758884, 1.9771832524194946, 1.9025129120599609, 1.8157042651490733, 1.7242745250333584, 1.6354173235590306, 1.5464557644839394, 1.4798021167890665, 1.407176074618283, 1.3554170660890088, 1.3084233205678393, 1.2658029715807966, 1.2270026659023934, 1.1813256177038107, 1.1534847690602177, 1.1237379060429573, 1.1073721271102235, 1.0768375937586936, 1.0522207395669223, 1.0320645402592912, 1.0230269739577766, 0.9972567493417055, 0.9880339418577402, 0.9669571231542372, 0.9462799012479907, 0.9600429861237896, 0.9314070196278328, 0.9289506771356328, 0.9141015363580374, 0.9141910085195029, 0.8933093131037279, 0.8790212998757383, 0.879339531609222, 0.8600447914068489, 0.8699617151964641, 0.8370816631402794, 0.8485806067196795, 0.8394526939555214, 0.8307368728494474, 0.8192907749716916, 0.8205870645802964, 0.8297398539660802, 0.8178675970491432, 0.8045208325491228, 0.8065026128029134, 0.7992467197444791, 0.7936460005608784, 0.786541654614567, 0.7839568287956874, 0.7723840470280016, 0.7800478085141377, 0.7735531543145453, 0.7740327806016788, 0.7713411816626713, 0.7608946093620483, 0.7641555293518649, 0.7590894605961962, 0.7501526678306016, 0.7471676438381611, 0.7502596846440559, 0.7394475737630164, 0.7469604375765166, 0.7311078477072726, 0.7300024165406187, 0.7316818849962653, 0.726145163511068, 0.7276908965190136, 0.7232589155943355, 0.7235469024541309, 0.7143686681832336, 0.7187112795127271, 0.7125028110671556, 0.7097916789279086], "accuracy": [0.1088363528251648, 0.15400871634483337, 0.20644564926624298, 0.2533350884914398, 0.29520538449287415, 0.3217540681362152, 0.34103816747665405, 0.3801347315311432, 0.3937392830848694, 0.4154008626937866, 0.4360058009624481, 0.4535728394985199, 0.4745740294456482, 0.4900277256965637, 0.5079910159111023, 0.5263505578041077, 0.5371813774108887, 0.5448421835899353, 0.5572579503059387, 0.5621450543403625, 0.574560821056366, 0.5886936783790588, 0.6019020080566406, 0.6067890524864197, 0.6102232336997986, 0.6223748326301575, 0.6248844265937805, 0.6328094005584717, 0.6425835490226746, 0.6482630968093872, 0.6543388962745667, 0.6534143686294556, 0.6601505875587463, 0.6602826714515686, 0.6667547225952148, 0.6650376319885254, 0.6763967871665955, 0.6675472259521484, 0.6866992712020874, 0.6868313550949097, 0.6824725866317749, 0.6866992712020874, 0.6836613416671753, 0.6952846646308899, 0.6944921612739563, 0.6980583667755127, 0.6988508701324463, 0.7062475085258484, 0.7036058902740479, 0.6979262828826904, 0.7017567157745361, 0.7069079279899597, 0.7036058902740479, 0.7094175219535828, 0.7150970697402954, 0.7111346125602722, 0.7112666964530945, 0.7147008180618286, 0.7144366502761841, 0.713908314704895, 0.7177387475967407, 0.7143045663833618, 0.7189275026321411, 0.7194558382034302, 0.7202483415603638, 0.724739134311676, 0.7268524765968323, 0.7252674698829651, 0.7277770638465881, 0.7263241410255432, 0.7321357727050781, 0.7312111854553223, 0.7306828498840332, 0.7321357727050781, 0.7313432693481445, 0.7284374833106995, 0.7334566116333008, 0.7375511527061462, 0.7338528633117676, 0.737022876739502, 0.7388719916343689], "val_loss": [1.9547467912946428, 1.9379720006670271, 1.9196805953979492, 1.8984681538173132, 1.8730135645185197, 1.8417793001447404, 1.8030687740870885, 1.7546475955418177, 1.6958724090031214, 1.6259636197771346, 1.5463970048086983, 1.4596120970589774, 1.3694665431976318, 1.2805394104548864, 1.1970972333635603, 1.1238794667380196, 1.060818842479161, 1.007221017565046, 0.9622860636029925, 0.9228404249463763, 0.8897339275905064, 0.860906720161438, 0.8350562197821481, 0.8125184263501849, 0.7936732598713466, 0.7752299649374825, 0.7591868809291294, 0.7442255871636527, 0.7327056271689278, 0.7212575163160052, 0.710757885660444, 0.7002451760428292, 0.6922202621187482, 0.6833945512771606, 0.6767383643559047, 0.6684678282056536, 0.6622804233006069, 0.6558433941432408, 0.650256769997733, 0.6437606641224453, 0.6403031008584159, 0.6340331520353045, 0.6294213533401489, 0.6236229624067035, 0.6196977751595634, 0.61637624672481, 0.6116376263754708, 0.6083255154745919, 0.6046032564980643, 0.6019040516444615, 0.5989341565540859, 0.5955049991607666, 0.5923081125531878, 0.5895311321531024, 0.5872475760323661, 0.5836387361798968, 0.5802364349365234, 0.5784469332013812, 0.5753622395651681, 0.5727712767464774, 0.5706171478543963, 0.5696566275187901, 0.5685550315039498, 0.5648058482578823, 0.5624737739562988, 0.5605781418936593, 0.558457476752145, 0.5571843555995396, 0.5547844171524048, 0.5536624704088483, 0.5513445479529244, 0.5497304882322039, 0.5480202947344098, 0.5455125059400286, 0.5448432990482875, 0.5427120753696987, 0.5422681059156146, 0.539928708757673, 0.5381345578602382, 0.5366484778267997, 0.5351830550602504], "val_accuracy": [0.16066665947437286, 0.30133333802223206, 0.35866665840148926, 0.38733333349227905, 0.42366665601730347, 0.4463333189487457, 0.4736666679382324, 0.5040000081062317, 0.5199999809265137, 0.5493333339691162, 0.5640000104904175, 0.574999988079071, 0.578000009059906, 0.5933333039283752, 0.6079999804496765, 0.628333330154419, 0.6480000019073486, 0.656333327293396, 0.6636666655540466, 0.671999990940094, 0.6746666431427002, 0.6793333292007446, 0.6853333115577698, 0.6919999718666077, 0.6913333535194397, 0.6966666579246521, 0.6966666579246521, 0.7003333568572998, 0.699999988079071, 0.7043333053588867, 0.7123333215713501, 0.7123333215713501, 0.7126666903495789, 0.7196666598320007, 0.7176666855812073, 0.722000002861023, 0.7183333039283752, 0.7263333201408386, 0.7289999723434448, 0.7306666374206543, 0.7260000109672546, 0.7283333539962769, 0.7329999804496765, 0.7363333106040955, 0.7360000014305115, 0.7379999756813049, 0.7396666407585144, 0.7413333058357239, 0.7426666617393494, 0.7403333187103271, 0.7429999709129333, 0.7426666617393494, 0.7443333268165588, 0.7463333606719971, 0.746999979019165, 0.7490000128746033, 0.7513333559036255, 0.7536666393280029, 0.7540000081062317, 0.7536666393280029, 0.7549999952316284, 0.7556666731834412, 0.7563333511352539, 0.7546666860580444, 0.7596666812896729, 0.7559999823570251, 0.7613333463668823, 0.7613333463668823, 0.7593333125114441, 0.7633333206176758, 0.7620000243186951, 0.7649999856948853, 0.7643333077430725, 0.7673333287239075, 0.7663333415985107, 0.7680000066757202, 0.7633333206176758, 0.765333354473114, 0.7680000066757202, 0.7680000066757202, 0.7680000066757202]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 8, 3, 2, 3, 2, 1, 2, 2, 9, 6, 8, 9], [2, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 38, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.1022857129573822, "mapping_values": [1, 1, 1, 0, 1, 0, 20, 20, 12, 8, 3, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.sqrt(tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.subtract(beta, tf.math.add(beta, grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, beta), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad))), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.sqrt(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.632390566474301, 2.8894333644801944, 2.3245393657067104, 2.3036682162979543, 2.30330923176429, 2.302954731805056, 2.3030756438145343, 2.3029444549597327, 2.303084386668862], "accuracy": [0.21621978282928467, 0.20235107839107513, 0.09694888442754745, 0.09893012791872025, 0.0940430611371994, 0.09906221181154251, 0.09813763201236725, 0.09734513610601425, 0.09998679161071777], "val_loss": [1.9867752620152064, 2.062045301709856, 1.9743162563868932, 1.9736536570957728, 1.973646640777588, 1.9736676216125488, 1.9736824035644531, 1.9736665998186385, 1.9737365586417062], "val_accuracy": [0.09966666996479034, 0.1003333330154419, 0.09833333641290665, 0.10199999809265137, 0.09933333098888397, 0.09966666996479034, 0.09833333641290665, 0.10000000149011612, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 8, 3, 2, 3, 2, 1, 9, 2, 9, 6, 8, 9], [1, 0, 2, 2, 3, 0, 3, 2, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [2, 3, 1, 9, 7], [6, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 5, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 18, 18, 12, 6, 4, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.subtract(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta))), tf.math.divide_no_nan(tf.math.add(beta, beta), grad)), tf.math.add(beta, tf.math.sqrt(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [66589111.79046535, 1271611514.7758553, 5939430840.654075, 16350752879.448421, 35050850246.38225, 64635355349.15863], "accuracy": [0.09179764986038208, 0.10117553919553757, 0.09945846349000931, 0.10566636174917221, 0.10421344637870789, 0.10315678268671036], "val_loss": [255995181.7142857, 2046336585.142857, 6904552155.428572, 16364158976.0, 31958791899.42857, 55221762925.71429], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1], [3, 8, 3, 2, 3, 2, 2, 5, 2, 9, 6, 8, 9], [1, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 20, 20, 13, 7, 3, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.square(alpha), tf.math.add(tf.math.add(beta, grad), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))), tf.math.divide_no_nan(tf.math.add(beta, beta), grad))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 8, 3, 2, 3, 2, 1, 5, 2, 9, 6, 8, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [7, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [39, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 6, 3, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3022606945340156, 2.3025579130676332, 2.3026682289442477, 2.303549406598068, 2.3077719295344505, 2.3276336868567284], "accuracy": [0.1014397069811821, 0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736434391566686, 1.9736856733049666, 1.9739773614065987, 1.9755537850516183, 1.9834087916782923, 2.0242368153163364], "val_accuracy": [0.10000000149011612, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 8, 3, 2, 3, 2, 1, 5, 2, 9, 6, 8, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 4, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 8, 3, 2, 3, 2, 8, 5, 4, 1, 2, 8, 9, 7], [2, 3, 3, 3, 2, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 77, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 1, 1], [6, 3, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 23, 23, 14, 9, 4, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.math.multiply(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.pow(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), beta)))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), grad))))), tf.math.add(beta, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))))))), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 8, 3, 2, 3, 2, 1, 5, 2, 9, 6, 8, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [9, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 20, 20, 12, 8, 3, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(tf.math.add(beta, beta), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.sqrt(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3023907173390024, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09813763201236725, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 8, 3, 2, 3, 2, 1, 5, 2, 9, 6, 8, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 77, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 3, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [5, 8, 3, 2, 3, 0, 1, 5, 4, 1, 2, 8, 9, 7], [2, 2, 3, 3, 3, 0, 3, 0, 3, 3, 1, 0, 5, 0], [84, 73, 71, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 5, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 20, 20, 13, 7, 2, 1, 0, 0, 0, 0, 3, 2, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.sqrt(tf.math.add(beta, tf.math.multiply(beta, tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.negative(tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))), grad), tf.math.add(beta, tf.math.pow(tf.math.subtract(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.sqrt(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), grad))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(alpha))", "other_info": {"loss": [2.302358781436431, 2.3055199260142314, 2.3068769565741496, 2.309468416379758, 2.310382779846574, 2.315048085196206, 2.3213513093365656, 2.3253102262242753, 2.3323269902817434, 2.343610769344154, 2.3810656755324193, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09206181764602661, 0.08757099509239197, 0.08625016361474991, 0.08294808864593506, 0.08241976052522659, 0.08558975160121918, 0.07066437602043152, 0.07713644206523895, 0.07026813179254532, 0.07290978729724884, 0.07951393723487854, 0.09602430462837219, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.972304207938058, 1.973592758178711, 1.9752511978149414, 1.977229390825544, 1.9793743406023299, 1.9817818914140974, 1.9848910059247697, 1.9888183729989188, 1.99478851045881, 2.007155282156808, 2.0644313267299106, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03500000014901161, 0.02866666577756405, 0.02433333359658718, 0.023666666820645332, 0.02800000086426735, 0.03766666725277901, 0.05133333429694176, 0.06599999964237213, 0.0820000022649765, 0.09700000286102295, 0.09933333098888397, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 8, 3, 2, 3, 2, 1, 5, 2, 9, 6, 8, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.09828571230173111, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.6301198102511183, 3.4550362487652393, 2.310137819163693, 2.3047838836471404, 2.3029235200072007, 2.3018378482408464, 2.299696668421572, 2.30555443882769, 2.3034449673883035, 2.3033758401398363, 2.3031298003223797], "accuracy": [0.21754062175750732, 0.15612204372882843, 0.09893012791872025, 0.10210011899471283, 0.1026284471154213, 0.10487385839223862, 0.1620657742023468, 0.09708096832036972, 0.09470347315073013, 0.09417514503002167, 0.09245806187391281], "val_loss": [1.9875992366245814, 1.983985492161342, 1.9748913901192802, 1.9740956170218331, 1.9731345176696777, 1.968620845249721, 1.9774796622140067, 1.974219799041748, 1.9738357407706124, 1.9736282484872, 1.9736943926130022], "val_accuracy": [0.09966666996479034, 0.09833333641290665, 0.09833333641290665, 0.10000000149011612, 0.09966666996479034, 0.1550000011920929, 0.09799999743700027, 0.10366666316986084, 0.09799999743700027, 0.10366666316986084, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 8, 3, 2, 3, 2, 1, 5, 2, 9, 6, 8, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [0, 1, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 1], [4, 6, 1, 9, 7], [1, 0, 6], [88, 31], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.04399999976158142, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 6, 3, 3, 1, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3594739834520055, 2.1822246098483733, 2.5023190324899462, 2.1539608050079204, 2.6220253735422507, 2.219034161156415, 2.447585011769311, 2.4164320629002978, 2.3422557354099354], "accuracy": [0.27539294958114624, 0.27460044622421265, 0.14780081808567047, 0.2421080470085144, 0.26139214634895325, 0.18240654468536377, 0.14951789379119873, 0.1026284471154213, 0.1022322028875351], "val_loss": [1.8362814358302526, 1.8301830972943987, 1.8155950818743025, 1.7100835868290492, 2.0190116337367465, 2.228306565965925, 2.0658560480390276, 2.006220272609166, 2.063911574227469], "val_accuracy": [0.2916666567325592, 0.2473333328962326, 0.2633333206176758, 0.39899998903274536, 0.13199999928474426, 0.12600000202655792, 0.10266666859388351, 0.10199999809265137, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 8, 6, 2, 3, 5, 1, 5, 2, 9, 5, 2, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [2, 3, 1, 9, 7], [3, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 6, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [98, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 11, 5, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.sqrt(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.square(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))))))), tf.math.square(tf.math.add(beta, beta))), grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.6299653722310596, 3.7843573111364193, 2.3216507502550683, 2.3037886428417327, 2.3030535900172397, 2.302997007472026, 2.3029680600995794], "accuracy": [0.21740853786468506, 0.20063400268554688, 0.09893012791872025, 0.09998679161071777, 0.09470347315073013, 0.09681680053472519, 0.09840179979801178], "val_loss": [1.9898298127310616, 2.03250857761928, 1.9746567181178503, 1.9737132617405482, 1.9736404418945312, 1.97366121837071, 1.9736715725490026], "val_accuracy": [0.09966666996479034, 0.10199999809265137, 0.09833333641290665, 0.1003333330154419, 0.1003333330154419, 0.09966666996479034, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [5, 8, 3, 2, 3, 2, 1, 5, 2, 9, 6, 8, 9], [1, 0, 3, 2, 3, 0, 3, 2, 0, 3, 1, 0, 5, 0], [22, 67, 67, 77, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [68, 57]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.6779493253307574, 3.081394142336802, 2.3524859088554577, 2.301017383590051, 2.261400037737035, 2.294748541512399, 2.2893054377306816, 3.9109194524976885], "accuracy": [0.21238937973976135, 0.13736626505851746, 0.1620657742023468, 0.18214239180088043, 0.1702549159526825, 0.14661207795143127, 0.11795007437467575, 0.11517632752656937], "val_loss": [3.686882563999721, 2.076907294137137, 1.849552835736956, 1.8633987562997, 1.891364574432373, 1.8933001926967077, 1.9589473179408483, 2.2400472504752025], "val_accuracy": [0.19866666197776794, 0.09966666996479034, 0.2096666693687439, 0.2083333283662796, 0.16466666758060455, 0.140666663646698, 0.10000000149011612, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 8, 3, 2, 3, 2, 1, 5, 2, 9, 6, 8, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.square(alpha), tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3020451726095943, 2.30431889848403, 2.3042858398318087, 2.305332702274698, 2.3044345104588873, 2.3065728965200503], "accuracy": [0.09285431355237961, 0.08942015469074249, 0.09087307006120682, 0.08730682730674744, 0.08770307898521423, 0.09192973375320435], "val_loss": [1.97168915612357, 1.9721617698669434, 1.9727847916739327, 1.9734073366437639, 1.974026816231864, 1.9747024263654436], "val_accuracy": [0.03733333200216293, 0.03566666692495346, 0.029999999329447746, 0.02866666577756405, 0.026333333924412727, 0.026000000536441803]}}]