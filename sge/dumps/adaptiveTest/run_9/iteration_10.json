[{"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 1, 0], [0, 1, 1], [2], [3, 4], [8], [1], [], [], [], [], [0, 0, 1, 0, 1, 1, 0, 1, 1], [6, 3, 0, 5, 7], [1, 0, 0, 3], [28, 57]], "fitness": -0.7902857065200806, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 6, 3, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.2896321413775538, 2.2570190261525407, 2.216003654434885, 2.1579841645386524, 2.071082221266616, 1.9506482549898376, 1.8062314001513415, 1.6440770130556777, 1.5045417230268747, 1.3817390314009463, 1.291487031860941, 1.208003833356582, 1.1500875479541104, 1.1047923423201258, 1.0578365482595602, 1.027423422334374, 0.99108659185045, 0.9691286844237921, 0.9479533894864118, 0.9211517578071339, 0.9009621514462839, 0.8969879029701258, 0.8686052402642582, 0.8524603608372252, 0.8574571611307804, 0.839931334061724, 0.8316963818079256, 0.813653692703489, 0.8144019141236254, 0.7964484841123532, 0.7937290544963989, 0.7939377455206879, 0.7729430362737694, 0.7589899065031305, 0.7625501063348374, 0.7474988502927696, 0.7512499254298736, 0.756430189095594, 0.7415440523660635, 0.7455204501521743, 0.7280279251373738, 0.7281879936195462, 0.727795299703041, 0.7163370852425681, 0.711529402094526, 0.70963072281598, 0.7020031729583428, 0.6952283006806526, 0.6943795628724648, 0.6965091134405659, 0.6928261700024174, 0.6798352547892332, 0.686300227190478, 0.6828361080700869, 0.6836992302401946, 0.6725717835091896, 0.6682652888863614, 0.6775577377334577, 0.6690005145493657, 0.6607676356255402], "accuracy": [0.1332716941833496, 0.21040813624858856, 0.2805441915988922, 0.3403777480125427, 0.3885880410671234, 0.42002376914024353, 0.45291242003440857, 0.48487651348114014, 0.509311854839325, 0.5403513312339783, 0.5596354603767395, 0.5884295105934143, 0.5997886657714844, 0.6128648519515991, 0.627129852771759, 0.6383568644523621, 0.6482630968093872, 0.6534143686294556, 0.6581693291664124, 0.6730946898460388, 0.6783780455589294, 0.6831330060958862, 0.6919825673103333, 0.6930392384529114, 0.6890767216682434, 0.7008321285247803, 0.6979262828826904, 0.7005679607391357, 0.700700044631958, 0.7086250185966492, 0.7074362635612488, 0.7079645991325378, 0.7132478952407837, 0.7231541275978088, 0.7210407853126526, 0.726192057132721, 0.7232862114906311, 0.7223616242408752, 0.7253995537757874, 0.7195879220962524, 0.7273808121681213, 0.7342491149902344, 0.7342491149902344, 0.735041618347168, 0.7378153204917908, 0.7293620109558105, 0.7409853339195251, 0.7457403540611267, 0.7364945411682129, 0.7390040755271912, 0.7403249144554138, 0.7432307600975037, 0.7489103078842163, 0.7466648817062378, 0.7457403540611267, 0.7536653280258179, 0.7478536367416382, 0.7497028112411499, 0.7511557340621948, 0.7520803213119507], "val_loss": [1.941256318773542, 1.907463686806815, 1.861720017024449, 1.7941502843584334, 1.6949354239872523, 1.5613466671534948, 1.405508211680821, 1.2458107130868095, 1.1105459077017648, 1.0057217734200614, 0.9282308646610805, 0.8692216873168945, 0.8226181098393032, 0.786690490586417, 0.7562699317932129, 0.7335742882319859, 0.7124010494777134, 0.6943317481449672, 0.6832245247704642, 0.6687737362725394, 0.6555258205958775, 0.6455683537891933, 0.635330217225211, 0.62706800869533, 0.619597315788269, 0.6124485390526908, 0.6082519633429391, 0.6009698765618461, 0.5961293833596366, 0.5880090168544224, 0.5838946785245623, 0.5804258074079242, 0.5776443481445312, 0.5708762237003872, 0.5684006554739816, 0.5649202380861554, 0.5592271430151803, 0.5565939971378872, 0.55623688016619, 0.5513977834156581, 0.5469420807702201, 0.5435274498803275, 0.541402987071446, 0.5404540130070278, 0.5367734943117414, 0.534452063696725, 0.5303209849766323, 0.5292633260999408, 0.5269042083195278, 0.5234284911836896, 0.5200528247015817, 0.5216390916279384, 0.5176812240055629, 0.5152064050946917, 0.5163365261895316, 0.5103785480771746, 0.508035489491054, 0.5080988577433995, 0.5075252056121826, 0.5046861342021397], "val_accuracy": [0.2906666696071625, 0.38366666436195374, 0.43433332443237305, 0.47699999809265137, 0.5183333158493042, 0.5546666383743286, 0.5793333053588867, 0.6116666793823242, 0.6413333415985107, 0.6536666750907898, 0.6626666784286499, 0.6776666641235352, 0.6859999895095825, 0.6936666369438171, 0.6980000138282776, 0.7020000219345093, 0.7083333134651184, 0.7146666646003723, 0.7176666855812073, 0.718666672706604, 0.7286666631698608, 0.7306666374206543, 0.7300000190734863, 0.7366666793823242, 0.7350000143051147, 0.7413333058357239, 0.734333336353302, 0.7409999966621399, 0.7453333139419556, 0.7476666569709778, 0.7480000257492065, 0.7486666440963745, 0.753000020980835, 0.7556666731834412, 0.7559999823570251, 0.7540000081062317, 0.7599999904632568, 0.7596666812896729, 0.762666642665863, 0.762333333492279, 0.7599999904632568, 0.7663333415985107, 0.7666666507720947, 0.7663333415985107, 0.765666663646698, 0.7710000276565552, 0.7723333239555359, 0.7689999938011169, 0.7726666927337646, 0.7720000147819519, 0.7739999890327454, 0.7730000019073486, 0.7706666588783264, 0.7770000100135803, 0.781000018119812, 0.7773333191871643, 0.7803333401679993, 0.7796666622161865, 0.7773333191871643, 0.7763333320617676]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1], [5, 1, 3, 7, 8, 3, 2], [2, 0, 1, 1, 2, 2], [50], [1, 0], [1], [], [0], [8], [1], [], [], [1], [], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [6, 3, 9, 5, 7], [1, 0, 0, 3], [81, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 6, 4, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0816272646188736, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 0, 0, 1], [1, 3, 5, 0, 7, 3], [2, 1, 1, 2, 0], [50], [0, 1, 0, 1, 0, 0], [0, 1, 1], [2], [3, 1], [8], [1], [], [], [], [], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0], [6, 3, 3, 5, 7, 9], [0, 0, 0, 1, 1, 2, 2, 3], [28, 57, 57, 4]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 10, 6, 4, 4], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha))), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [138.42492414128589, 719.8512607262576, 1328.8963530014819, 1938.300555619046, 2547.5626625561868, 3157.197098425272], "accuracy": [0.10157178342342377, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [399.94100516183033, 919.9092145647321, 1440.2006138392858, 1960.328822544643, 2480.8362862723216, 3001.019949776786], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 3, 5, 0, 4, 5], [2, 2, 1, 1], [50], [0, 1, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1], [4, 5, 6], [1, 2, 5], [8], [1], [], [], [], [], [0, 0, 1, 0, 1, 1, 0, 1, 1], [6, 3, 0, 5, 7], [1, 0, 0, 3], [62, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 6, 6, 3, 3, 0, 1, 0, 0, 0, 0, 6, 3, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.square(tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.divide_no_nan(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.math.negative(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [96.52231268781351, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.13710209727287292, 0.10051512718200684, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [5467267.857142857, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1], [8, 6, 7, 9], [0, 0, 0], [8, 58, 82], [1], [], [], [], [], [1, 1, 1, 0, 0, 1, 0, 1, 0, 1], [6, 3, 0, 5, 7], [1, 0, 0, 3], [81, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07660810649394989, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 1, 1], [9, 3, 5, 0, 4], [3, 2, 1, 1], [50], [1, 0, 1, 0, 0, 1], [0, 0, 1, 1, 1, 1], [8, 5, 7], [0, 0, 0], [8, 58, 82], [0, 1, 0], [0, 1], [7], [2], [], [1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [8, 3, 0, 5, 7, 1, 1, 3, 1, 4, 7, 9, 8, 0, 6, 9], [2, 1, 0, 2, 2, 3, 3, 3], [78, 57, 39, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10210011899471283, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0, 1], [2, 3, 5, 8], [2, 2, 1, 1], [50], [1, 1, 0, 1, 1], [0, 0, 1, 1, 1, 1], [5, 1, 0], [0, 1], [60, 58, 82], [1], [0], [0], [], [], [1, 1, 1, 0, 1, 1, 0, 1, 1], [6, 3, 0, 5, 7], [1, 0, 0, 3], [81, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 0, 4, 4, 2, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.subtract(tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07753269374370575, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 0], [1], [5], [0], [8], [1], [], [], [], [], [1, 1, 1, 0, 1, 1, 0, 1, 1], [6, 3, 9, 5, 7], [1, 0, 0, 3], [81, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08809932321310043, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [3, 2, 1, 1], [50], [1, 1, 0], [0, 1, 1], [2], [0, 1], [8], [1], [], [], [], [], [0, 1, 1, 0, 1, 1, 0, 1, 1], [6, 3, 6, 5, 7], [1, 0, 0, 3], [81, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07740060985088348, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 1, 1], [1, 3, 8, 4, 7, 0], [2, 1, 0, 3, 0], [50, 9], [1, 1, 0, 1, 1], [1, 0, 1, 0, 1], [2, 6], [4, 0, 3], [8], [0, 0, 0], [0, 1, 0], [1, 9], [4], [64], [0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [8, 3, 7, 5, 7, 1, 7, 3, 1, 4, 7, 9, 8, 0, 6, 9], [2, 3, 0, 3, 3, 3, 3, 1], [78, 57, 17, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 0, 1, 1], [65], [0, 1, 0], [1], [], [4, 1, 3], [8], [1], [], [], [1], [], [0, 0, 1, 0, 0, 1, 0, 1, 1], [0, 9], [1, 0, 0, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 2, 0, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2917.8067110636293, 51957.33762465328, 238591.7642649584, 666911.20990457, 1420681.6185774666, 2530523.043554352], "accuracy": [0.1022322028875351, 0.1002509593963623, 0.10236428678035736, 0.09840179979801178, 0.10210011899471283, 0.10593052208423615], "val_loss": [10688.111328125, 82992.62276785714, 277608.3214285714, 655220.25, 1276514.2857142857, 2202174.9285714286], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 1, 0], [0, 1, 1], [2], [3, 4], [8], [1], [], [], [], [], [0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [6, 3, 0, 4, 7, 9], [0, 0, 0, 3, 1, 2, 0, 3, 3, 1], [28, 57, 9, 89]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 3, 1, 2, 2], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3024841197304453, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10157178342342377, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 0, 0, 1], [1, 3, 8, 4, 7, 0], [2, 1, 1, 2, 0], [50, 9], [1, 1, 0, 1, 0, 0], [1, 1, 1], [2], [0, 1, 3], [8], [1], [], [], [], [], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [7, 3, 0, 5, 7, 1, 3], [0, 0, 1, 1, 1, 2, 2, 3], [99, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.math.square(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [2, 3, 5, 8, 4, 4, 6], [2, 2, 1, 1, 0, 2], [50], [0], [1], [], [5], [8], [0, 1], [0], [0], [], [], [0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1], [1, 8, 0, 9], [2, 0, 0, 3, 0, 0, 0, 2, 1, 3, 3], [28, 57, 78, 75, 76, 72, 4]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 7, 6, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 5, 3, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.multiply(grad, tf.math.square(tf.math.add(alpha, tf.math.sqrt(tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.sqrt(beta), tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 1, 1, 0, 0, 1], [1], [8, 6, 7], [2, 0, 0], [8, 58, 82], [1], [0], [0], [], [], [0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 8, 0, 5, 7, 5], [3, 0, 0, 3], [44, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 9, 6, 3, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.negative(tf.math.square(tf.math.add(sigma, tf.math.square(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10157178342342377, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 0, 0, 1], [9, 3, 5, 0, 4], [3, 2, 1, 1], [50], [1, 0, 0], [0, 1, 1], [1], [0, 1, 3], [8], [1], [], [], [], [], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [7, 3, 0, 5, 7, 3, 3, 7, 9, 9, 6, 0, 9, 7, 5, 2], [1, 0, 0, 3, 3, 3, 3, 1], [20, 57, 48, 23]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 15, 8, 7, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), sigma), sigma))))), sigma), sigma)", "other_info": {"loss": [2.3029152279154594, 2.303185068054159, 2.302619397191481, 2.302888022343307, 2.302595897861491, 2.301706554268991], "accuracy": [0.09879804402589798, 0.09298639744520187, 0.08677849918603897, 0.09430722147226334, 0.09166556596755981, 0.09074098616838455], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [1, 2, 1, 1], [50], [1, 0, 1, 0, 1, 1], [0, 0, 0, 1, 0, 1], [4, 9, 4, 0], [0, 1, 3], [7, 56], [1], [], [], [], [], [1, 1, 1, 1, 1, 1, 0, 1, 1], [6, 3, 8, 5, 7], [1, 0, 0, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.negative(alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3029152279154594, 2.303185068054159, 2.302619397191481, 2.302888022343307, 2.302595897861491, 2.301706554268991], "accuracy": [0.09879804402589798, 0.09298639744520187, 0.08677849918603897, 0.09430722147226334, 0.09166556596755981, 0.09074098616838455], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [3, 0, 1, 1, 2, 2], [50], [1, 1, 0, 0, 1, 1, 0], [0, 1, 0, 0, 1, 0, 1], [4, 8, 4, 8], [0, 2, 1], [52], [1], [1], [], [1], [], [0, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0], [3, 0, 0, 3, 1, 2, 0, 3, 3, 1], [81, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 3, 3, 1, 2, 1, 7, 7, 4, 3, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.pow(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.pow(beta, tf.math.sqrt(tf.math.add(beta, alpha))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3029152279154594, 2.303185068054159, 2.302619397191481, 2.302888022343307, 2.302595897861491, 2.301706554268991], "accuracy": [0.09879804402589798, 0.09298639744520187, 0.08677849918603897, 0.09430722147226334, 0.09166556596755981, 0.09074098616838455], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 1, 1], [2, 1, 5, 7, 8], [3, 2, 1, 1], [50], [0], [1], [], [0], [8], [1], [], [], [], [], [0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [8, 3, 0, 5, 7, 1, 7, 3, 1, 4, 7, 9, 8, 0, 6, 9], [1, 0, 0, 3, 3, 3, 3, 1], [5, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 14, 8, 6, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.math.negative(tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))), tf.math.add(sigma, tf.math.multiply(sigma, sigma))))", "other_info": {"loss": [2.3029152279154594, 2.303185068054159, 2.302619397191481, 2.302888022343307, 2.302595897861491, 2.301706554268991], "accuracy": [0.09879804402589798, 0.09298639744520187, 0.08677849918603897, 0.09430722147226334, 0.09166556596755981, 0.09074098616838455], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 0, 1, 1], [50], [1, 1, 1, 0, 1], [1], [0, 9], [5, 1, 3], [7], [1], [], [], [4], [], [0, 1, 1, 1, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7], [3, 0, 0, 0], [73, 86]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(sigma, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3029152279154594, 2.303185068054159, 2.302619397191481, 2.302888022343307, 2.302595897861491, 2.301706554268991], "accuracy": [0.09879804402589798, 0.09298639744520187, 0.08677849918603897, 0.09430722147226334, 0.09166556596755981, 0.09074098616838455], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]