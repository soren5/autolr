[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [2, 8, 2, 0, 6, 2, 1, 9, 2, 0, 8, 9], [3, 2, 3, 3, 0, 2, 2], [57, 49, 0, 81, 53, 45], [0, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.8254285454750061, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 9, 6, 2, 2, 2, 1, 1, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, grad)), tf.math.add(beta, beta))))), tf.math.divide_no_nan(tf.math.add(grad, tf.math.subtract(grad, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0448508317743577, 1.7574758452510066, 1.195227669151688, 0.977874445420813, 0.8365861497078401, 0.7601125263314379, 0.7618075351767993, 0.6698568843028581, 0.6469460013221048, 0.61201496449255, 0.5912412236064668, 0.582496588697145, 0.5950838807803481, 0.541051464317938, 0.5536515395780832, 0.5065437928324347, 0.5019696160330197, 0.5010321501609498, 0.4764590140000594, 0.47728151163688315, 0.44735284468690245, 0.43775811835113787, 0.4688175113335608, 0.4466605196263985, 0.4273999982647939, 0.43776011411477045], "accuracy": [0.29943203926086426, 0.41447630524635315, 0.5844670534133911, 0.6366398334503174, 0.6856426000595093, 0.7117950320243835, 0.7149649858474731, 0.7458723783493042, 0.7456082701683044, 0.7648923397064209, 0.7753269076347351, 0.7840443849563599, 0.7786290049552917, 0.800290584564209, 0.7950072884559631, 0.8123101592063904, 0.8168009519577026, 0.8115176558494568, 0.8230088353157043, 0.8189142942428589, 0.833179235458374, 0.8445383906364441, 0.8310658931732178, 0.837537944316864, 0.8416325449943542, 0.8383304476737976], "val_loss": [1.4038302898406982, 1.2780797481536865, 0.8317779983792987, 0.7399300507136753, 0.7160648277827671, 0.5792251484734672, 0.5564516953059605, 0.5788853509085519, 0.5102418490818569, 0.4677874871662685, 0.46447127205984934, 0.49120283126831055, 0.4650104897362845, 0.4265497071402414, 0.4309489130973816, 0.449766789163862, 0.4627342053822109, 0.39645419801984516, 0.38783165386744906, 0.3872723068509783, 0.3760010770389012, 0.5117920466831752, 0.4053240588733128, 0.37012823138918194, 0.4251371111188616, 0.3712976064000811], "val_accuracy": [0.3959999978542328, 0.5099999904632568, 0.6263333559036255, 0.6996666789054871, 0.6800000071525574, 0.7379999756813049, 0.7319999933242798, 0.7269999980926514, 0.7580000162124634, 0.7963333129882812, 0.8006666898727417, 0.7856666445732117, 0.7996666431427002, 0.8096666932106018, 0.8106666803359985, 0.7990000247955322, 0.7756666541099548, 0.8303333520889282, 0.8330000042915344, 0.8309999704360962, 0.8393333554267883, 0.8016666769981384, 0.8196666836738586, 0.8393333554267883, 0.8103333115577698, 0.8353333473205566]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1], [7, 8, 4, 0, 1, 5, 0, 4, 5, 8, 8, 4, 3, 3, 2, 3, 2, 3, 4, 3, 6, 5, 3, 2, 8, 1, 7, 9, 4, 9], [2, 2, 3, 3, 0, 3, 2, 3, 5, 3, 5, 0, 3, 1, 1, 3, 3, 3, 3], [57, 50, 91, 97], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.8231428861618042, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0447427594918364, 1.7452604881823732, 1.2504113851017435, 0.9949758535977037, 0.8814592831060163, 0.7506472078989589, 0.6979433254338432, 0.696401682937339, 0.666719774898521, 0.616051947790256, 0.6006371857877169, 0.5926979876087326, 0.5702167360884339, 0.546027553205902, 0.5349280832702175, 0.5123448973050947, 0.5058251895042947, 0.5281019765647994, 0.49626526979722396, 0.455349299464763, 0.46781885541267937, 0.4504764476716479, 0.4496108284755201, 0.448800792259988, 0.4221219183935418, 0.4411442821303914, 0.41080814609044514, 0.40799331742192085, 0.39195065821686187, 0.4064501300739527, 0.382896937919, 0.3714383135476778, 0.3891414527242147, 0.39131812076007433, 0.35152386114534656, 0.34982969326397306, 0.3510140663423968], "accuracy": [0.29943203926086426, 0.41883501410484314, 0.5688812732696533, 0.6341302394866943, 0.6757363677024841, 0.7104741930961609, 0.7338528633117676, 0.7342491149902344, 0.7467969655990601, 0.7675340175628662, 0.7740060687065125, 0.7712323069572449, 0.7861577272415161, 0.7956677079200745, 0.8033285140991211, 0.806630551815033, 0.8141592741012573, 0.8039889335632324, 0.8156121969223022, 0.8278959393501282, 0.8227446675300598, 0.8329150676727295, 0.8318583965301514, 0.8334434032440186, 0.8448025584220886, 0.8356888294219971, 0.8482366800308228, 0.8482366800308228, 0.8525954484939575, 0.8474441766738892, 0.8556333184242249, 0.8643507957458496, 0.8535200357437134, 0.8539162874221802, 0.8677849769592285, 0.8709549307823181, 0.8671245574951172], "val_loss": [1.4054280008588518, 1.1827597277505058, 0.8659219401223319, 0.7567168985094342, 0.6178582395826068, 0.5761227267129081, 0.5982732602528164, 0.5399719136101859, 0.49032492297036306, 0.4842453343527658, 0.5336552858352661, 0.527426906994411, 0.46337504046303885, 0.43036775078092304, 0.44710852418627056, 0.47464159556797575, 0.5673133986336845, 0.42166058506284443, 0.3937661647796631, 0.3949284042630877, 0.38681786400931223, 0.45072126388549805, 0.3891636388642447, 0.3724213583128793, 0.44442074639456614, 0.38098545585359844, 0.362466709954398, 0.3770350899015154, 0.3612685373851231, 0.3961925336292812, 0.3678646853991917, 0.3559406910623823, 0.35741775376456125, 0.3461202638489859, 0.3389567221914019, 0.35977122613361906, 0.3555265324456351], "val_accuracy": [0.39500001072883606, 0.5663333535194397, 0.6573333144187927, 0.640333354473114, 0.721666693687439, 0.7433333396911621, 0.7056666612625122, 0.7583333253860474, 0.7799999713897705, 0.781333327293396, 0.7459999918937683, 0.7713333368301392, 0.7946666479110718, 0.8016666769981384, 0.7953333258628845, 0.7723333239555359, 0.7379999756813049, 0.8086666464805603, 0.8253333568572998, 0.8236666917800903, 0.824999988079071, 0.8083333373069763, 0.8270000219345093, 0.8379999995231628, 0.7993333339691162, 0.828000009059906, 0.8389999866485596, 0.8309999704360962, 0.8423333168029785, 0.82833331823349, 0.8413333296775818, 0.8513333201408386, 0.8413333296775818, 0.8503333330154419, 0.8433333039283752, 0.8373333215713501, 0.8396666646003723]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [7, 9, 2, 0, 6, 4, 1, 2, 5, 8, 5, 4, 3, 3, 9, 3, 8, 3, 4, 3, 6, 5, 3, 0, 8, 1], [3, 2, 3, 1, 0, 2, 2], [83, 56, 47], [0, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.7925714254379272, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 1, 2, 2, 1, 1, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.118437729397029, 1.6918410098374779, 1.6139613762035376, 1.021244750377477, 0.8404272092237386, 0.7776289208611445, 0.7463023091477331, 0.6949321865059239, 0.6573309385781243, 0.6172972313795013, 0.5966546601938014, 0.5844041546416746, 0.5669149653692098, 0.5545548998353788, 0.520436375431806, 0.5540283190544334], "accuracy": [0.287280410528183, 0.4377228915691376, 0.4855369031429291, 0.6302998065948486, 0.6915863156318665, 0.7086250185966492, 0.7173424959182739, 0.7342491149902344, 0.7520803213119507, 0.7648923397064209, 0.7732135653495789, 0.7804781198501587, 0.785101056098938, 0.7955356240272522, 0.8067626357078552, 0.7967243194580078], "val_loss": [1.3658718041011266, 1.2265807219914027, 0.9346957887922015, 0.7449928862707955, 0.6947576488767352, 0.5676186255046299, 0.5260639360972813, 0.5319382122584752, 0.5058752468654087, 0.49309699875967844, 0.4609787293842861, 0.5404079130717686, 0.458539537021092, 0.4527616500854492, 0.5509552785328456, 0.4482694353376116], "val_accuracy": [0.40666666626930237, 0.6240000128746033, 0.640999972820282, 0.656000018119812, 0.6833333373069763, 0.7436666488647461, 0.765999972820282, 0.765666663646698, 0.7723333239555359, 0.7826666831970215, 0.8043333292007446, 0.7126666903495789, 0.7976666688919067, 0.7860000133514404, 0.7593333125114441, 0.7870000004768372]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [2, 8, 2, 0, 6, 2, 1, 9, 4, 0, 8, 9, 2, 8, 6, 3, 3, 9, 8, 0, 5, 3], [2, 0, 3, 3, 3, 2, 2, 1, 3, 0, 4, 0, 2], [57, 49, 0, 81, 53, 45], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [85, 57]], "fitness": -0.41514286398887634, "mapping_values": [1, 1, 1, 0, 1, 0, 31, 31, 22, 9, 4, 2, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.negative(tf.math.sqrt(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))))), tf.math.sqrt(tf.math.add(beta, grad)))), tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))))))), tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.multiply(tf.math.add(beta, beta), alpha)))))))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2990250863324793, 2.5301073307941273, 2.264735444756295, 2.3403422436646784, 2.782808264437731, 2.241997322937312], "accuracy": [0.20935148000717163, 0.1410645842552185, 0.1582353711128235, 0.13459251821041107, 0.18676528334617615, 0.13802668452262878], "val_loss": [1.5936447892870222, 1.972879205431257, 1.6420816693987166, 1.9682537487574987, 1.8085776737758092, 1.9759462901524134], "val_accuracy": [0.42933332920074463, 0.16833333671092987, 0.3073333203792572, 0.09933333098888397, 0.18966667354106903, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [7, 5, 0, 0, 6, 4, 1, 4, 5, 8, 5, 4, 3, 3, 9, 3, 8, 3, 4, 3, 6, 5, 3, 0, 8, 1], [3, 2, 3, 1, 0, 2, 2], [83, 56, 47], [0, 0, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.410571426153183, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(beta))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2974558959563396, 2.5593007874920257, 2.424593758006783, 2.3102141260518185, 2.3017916312826747, 2.776394038672114], "accuracy": [0.2082948088645935, 0.146479994058609, 0.17276449501514435, 0.09787346422672272, 0.10289261490106583, 0.24765552580356598], "val_loss": [1.5965156214577811, 1.9700400488717216, 1.9845335142953056, 1.9746788569859095, 1.9571229389735632, 1.9933158329554967], "val_accuracy": [0.4216666519641876, 0.1496666669845581, 0.10066666454076767, 0.09799999743700027, 0.22833333909511566, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [7, 8, 4, 0, 6, 6, 0, 4, 5, 8, 8, 4, 3, 3, 2, 3, 0, 3, 4, 3, 6, 5, 3, 0, 8, 1], [2, 0, 3, 3, 3, 2, 2, 1, 3, 0, 4, 0, 2], [83, 56, 47], [0, 0, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.4091428518295288, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 10, 6, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(beta)), tf.math.add(beta, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))))), tf.math.divide_no_nan(tf.math.divide_no_nan(grad, tf.math.negative(grad)), tf.math.pow(tf.math.add(beta, tf.math.square(grad)), tf.math.add(beta, tf.math.sqrt(beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.297470550369577, 2.5466767022827312, 2.38065124830282, 2.308582021544213, 2.30374453666424, 2.303117025797598], "accuracy": [0.20842689275741577, 0.14529123902320862, 0.1764628142118454, 0.09760929644107819, 0.0956280529499054, 0.10077928751707077], "val_loss": [1.5970707620893205, 1.9696431159973145, 1.9829601560320174, 1.9744874409266882, 1.973593098776681, 1.9732757295880998], "val_accuracy": [0.4183333218097687, 0.15566666424274445, 0.10199999809265137, 0.1003333330154419, 0.10266666859388351, 0.1599999964237213]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], [2, 8, 2, 0, 6, 2, 1, 9, 4, 0, 8, 9, 1, 3, 2, 9, 0], [5, 2, 3, 1, 3, 2, 2], [57, 49, 0, 81, 53, 45], [0, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [0, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.30000001192092896, "mapping_values": [1, 1, 1, 0, 1, 0, 24, 24, 17, 7, 3, 2, 2, 1, 1, 1, 8, 4, 4, 2], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta))))))), tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), grad), tf.math.pow(tf.math.negative(tf.math.sqrt(tf.math.add(beta, alpha))), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, beta), tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), tf.math.negative(beta))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [2.6732238794850036, 1.8481011140647265, 2.1545134281926326, 2.4379543296066744, 2.2575645315459756, 2.269602779321163], "accuracy": [0.24897634983062744, 0.38462555408477783, 0.30365869402885437, 0.16576409339904785, 0.15414080023765564, 0.146479994058609], "val_loss": [1.8974642072405135, 1.958228247506278, 1.8615403856549944, 1.8738397189549036, 1.8948490279061454, 1.9563514164515905], "val_accuracy": [0.31466665863990784, 0.2266666740179062, 0.18533332645893097, 0.1823333352804184, 0.1860000044107437, 0.12733332812786102]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1], [7, 8, 3, 0, 6, 4, 6, 4, 5, 8, 5, 4, 3, 3, 9, 3, 8, 3, 4, 3, 6, 5, 3, 0, 8, 1], [3, 2, 1, 3, 0, 2, 2, 1, 1], [74, 56, 47], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [57, 57]], "fitness": -0.1477142870426178, "mapping_values": [1, 1, 1, 0, 1, 0, 18, 18, 11, 7, 1, 2, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), beta))), tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, alpha), tf.math.divide_no_nan(grad, tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(beta)))), tf.math.square(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.409825130271685, 2.3986399984945472, 2.331388662204987, 5.690281933356333, 2.2442603919758216e+25, NaN], "accuracy": [0.23405098915100098, 0.0952318087220192, 0.09470347315073013, 0.1258750557899475, 0.1282525360584259, 0.10011887550354004], "val_loss": [2.1572132791791643, 2.0162201608930315, 21.18211473737444, 2.1999693598066057, NaN, NaN], "val_accuracy": [0.15399999916553497, 0.09933333098888397, 0.10000000149011612, 0.1509999930858612, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0], [7, 8, 0, 0, 6, 4, 1, 4, 5, 8, 5, 4, 3, 3, 9, 3, 8, 3, 4, 3, 6, 5, 3, 0, 8, 1], [3, 2, 1, 0, 3, 2, 2, 1, 1], [74, 56, 47], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [9, 0, 8, 9, 7], [7, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [2, 3, 0, 4, 2, 1, 2, 3], [0, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 0, 1, 1, 1, 0, 1, 3, 1, 2, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3023586279806474, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10051512718200684, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 8, 0, 0, 6, 4, 1, 4, 5, 8, 5, 4, 3, 3, 9, 3, 8, 3, 4, 3, 6, 5, 3, 0, 8, 1], [5, 2, 3, 3, 0, 2, 2], [74, 56, 47], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [0, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 2, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 0, 2, 1, 1, 0, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [7, 9, 2, 0, 6, 4, 1, 2, 5, 8, 5, 4, 3, 3, 9, 3, 8, 3, 4, 3, 6, 5, 3, 0, 8, 1], [5, 2, 3, 3, 0, 2, 2], [83, 56, 47], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 1, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 1, 2, 1, 1, 0, 0, 4, 2, 2, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, alpha))", "other_info": {"loss": [2.302369253904025, 2.305692046215474, 2.3069006210745853, 2.3078546611278004, 2.314095724748504, 2.317061461383294, 2.3193109946842316, 2.3253568435908782, 2.3338894764697784, 2.3460455178553166, 2.386954017712723, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09206181764602661, 0.08981640636920929, 0.08175934851169586, 0.08387266844511032, 0.07911768555641174, 0.07924976944923401, 0.07145687192678452, 0.07528728246688843, 0.07330603897571564, 0.07779685407876968, 0.08598599582910538, 0.10170386731624603, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9722132001604353, 1.9738024302891322, 1.9754022189549036, 1.9773000989641463, 1.9796786308288574, 1.9824384961809431, 1.9853297642299108, 1.989449909755162, 1.9963059425354004, 2.0109513827732632, 2.0986014093671526, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03266666829586029, 0.027000000700354576, 0.026333333924412727, 0.02566666714847088, 0.03233333304524422, 0.03766666725277901, 0.0560000017285347, 0.07233333587646484, 0.08900000154972076, 0.0989999994635582, 0.09933333098888397, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [7, 8, 4, 0, 1, 0, 0, 4, 5, 8, 8, 3, 3, 3, 2, 3, 0, 3, 4, 3, 6, 5, 3, 0, 8, 1], [3, 2, 3, 1, 1, 3, 2], [83, 56, 47], [0, 0, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [1, 7], [88, 19], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1], [0, 3, 0, 4, 2, 1, 2, 3, 4, 6, 1, 7, 6, 2, 5, 2, 4, 2, 4, 3, 4, 6, 7, 5, 6, 3, 8, 4, 8, 5, 8, 5, 0, 2, 0, 7, 6, 5, 4, 1, 3, 0, 0, 5, 4, 8, 4, 3, 5, 5, 2, 3, 8, 9, 3, 3, 9, 9, 8, 2, 3, 4, 1, 3, 9], [1, 1, 0, 1, 3, 3, 3, 1, 0, 1, 0, 1, 0, 2, 0, 0, 1, 3, 2, 3, 2, 3, 0, 2, 1, 0, 1, 1, 0, 3, 3, 1, 2, 1, 3, 1, 2, 0], [48, 57, 8, 15, 83, 71, 57, 83, 35, 91, 47, 67, 88, 7]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 10, 5, 0, 1, 1, 0, 1, 0, 103, 65, 38, 14], "tree_depth": 49, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(beta)), tf.math.subtract(tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.pow(grad, tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.sqrt(alpha)))))))), alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(tf.math.pow(tf.math.add(tf.math.subtract(alpha, alpha), tf.math.add(tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), alpha), sigma)), sigma)), tf.math.pow(tf.math.divide_no_nan(tf.math.subtract(tf.math.add(tf.math.divide_no_nan(tf.math.add(sigma, tf.math.square(alpha)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.pow(tf.math.add(tf.math.pow(tf.math.multiply(tf.math.pow(tf.math.divide_no_nan(tf.math.add(tf.math.square(tf.math.divide_no_nan(tf.math.multiply(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), alpha)), tf.math.sqrt(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.sqrt(tf.math.square(beta)), tf.math.sqrt(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.negative(tf.math.add(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(tf.math.divide_no_nan(tf.math.square(alpha), tf.math.pow(tf.math.subtract(sigma, tf.math.multiply(tf.math.negative(tf.math.negative(beta)), tf.math.square(sigma))), tf.math.pow(tf.math.sqrt(beta), sigma))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))))), beta), tf.math.pow(alpha, tf.math.multiply(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), alpha))), tf.math.square(tf.math.square(alpha))), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.multiply(tf.math.sqrt(tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(tf.math.multiply(sigma, tf.math.pow(tf.math.subtract(sigma, alpha), beta)), alpha)))), tf.math.multiply(sigma, alpha)))), beta), tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1], [2, 8, 2, 0, 6, 2, 1, 9, 4, 0, 8, 9, 6, 6, 7, 2, 9, 7, 2, 1, 5, 0, 7, 2], [5, 2, 3, 3, 0, 2, 2, 1, 2, 5, 0, 1, 0], [71, 49, 0, 81, 53, 45], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [8, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [92, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 37, 37, 24, 13, 6, 3, 3, 2, 1, 0, 13, 7, 6, 2], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.negative(tf.math.sqrt(tf.math.add(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.add(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32), grad))))), tf.math.add(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.square(tf.math.negative(tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, beta))))))), alpha), beta))), grad))), tf.math.add(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, sigma), sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1], [7, 8, 6, 0, 1, 0, 0, 4, 5, 8, 8, 4, 3, 3, 2, 3, 0, 3, 4, 3, 6, 5, 3, 0, 8, 1], [5, 2, 3, 3, 0, 2, 2], [57, 56, 47, 97], [1, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [7, 0, 8, 9, 7], [7, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [9, 8, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta)))))), tf.math.subtract(tf.math.negative(tf.math.add(beta, grad)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0758156105875969, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0], [7, 8, 2, 0, 6, 4, 1, 4, 5, 8, 5, 4, 3, 3, 9, 3, 8, 3, 4, 3, 6, 5, 3, 0, 8, 1], [3, 2, 3, 1, 0, 2, 2], [83, 56, 47], [0, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 2, 2, 1, 1, 0, 3, 1, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), beta)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07409853488206863, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [7, 8, 4, 0, 1, 0, 5, 4, 5, 8, 8, 4, 3, 3, 2, 3, 0, 3, 4, 3, 6, 5, 3, 0, 8, 1], [3, 2, 3, 1, 0, 2, 2], [83, 56, 47], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 2, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302702430594851, 2.3029192161912757, 2.3029341319170706, 2.302965781629172, 2.3029184724991394, 2.3029475110381146, 2.303059236043795], "accuracy": [0.09774138033390045, 0.09576013684272766, 0.09826971590518951, 0.09496764093637466, 0.09325055778026581, 0.0940430611371994, 0.09800554811954498], "val_loss": [1.9736510004316057, 1.973642213003976, 1.9736542701721191, 1.9737204824175154, 1.9736512047903878, 1.973703384399414, 1.9737022263663155], "val_accuracy": [0.09799999743700027, 0.10199999809265137, 0.10000000149011612, 0.09933333098888397, 0.10199999809265137, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [7, 8, 2, 0, 6, 4, 1, 4, 5, 8, 5, 4, 3, 3, 9, 3, 8, 3, 4, 3, 6, 5, 3, 0, 8, 1], [3, 3, 3, 3, 0, 3, 2], [74, 56, 47], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [41, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 13, 7, 6, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(alpha), tf.math.pow(tf.math.add(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, sigma), sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1], [7, 8, 4, 0, 1, 0, 0, 4, 3, 8, 8, 4, 3, 3, 2, 3, 0, 3, 4, 3, 6, 5, 3, 0, 8, 1], [2, 0, 2, 3, 3, 2, 2, 1, 3, 0, 4, 0, 2, 1], [74, 56, 47], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 34, 34, 20, 14, 3, 2, 1, 1, 0, 0, 13, 7, 6, 2], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.subtract(tf.math.add(beta, beta), tf.math.negative(tf.math.negative(tf.math.pow(tf.math.multiply(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(beta)))), tf.math.add(beta, grad))))))), tf.math.add(beta, tf.math.pow(grad, beta)))))), tf.math.multiply(tf.math.multiply(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha))), tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), grad), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), beta)), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, sigma), sigma)))))", "other_info": {"loss": [2.3026258020573573, 2.302850815692771, 2.302862507681947, 2.3028840937744812, 2.3028430777801545, 2.302872815703388, 2.302955047786039, 2.302933706095379, 2.3028876868378862, 2.30293916956844], "accuracy": [0.09774138033390045, 0.09576013684272766, 0.09457138925790787, 0.09655263274908066, 0.09325055778026581, 0.0940430611371994, 0.09906221181154251, 0.09298639744520187, 0.09668471664190292, 0.09470347315073013], "val_loss": [1.973646981375558, 1.9736347879682268, 1.973637648991176, 1.973687035696847, 1.9736457552228654, 1.9736754553658622, 1.9736815861293249, 1.9736510004316057, 1.9736669404166085, 1.9736550194876534], "val_accuracy": [0.09799999743700027, 0.10066666454076767, 0.09966666996479034, 0.09933333098888397, 0.10199999809265137, 0.09799999743700027, 0.09799999743700027, 0.10066666454076767, 0.09933333098888397, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1], [7, 7, 2, 0, 6, 4, 1, 2, 5, 8, 5, 4, 3, 3, 9, 3, 8, 3, 4, 3, 6, 5, 3, 0, 8, 1], [3, 2, 3, 1, 0, 2, 2, 0, 4, 5, 2, 5, 1, 0], [83, 56, 47, 89], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [4, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 34, 34, 20, 14, 4, 3, 2, 1, 1, 0, 13, 7, 6, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), beta)), tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, grad), tf.math.subtract(alpha, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(beta))))), beta)), tf.math.square(tf.math.pow(tf.math.multiply(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))), tf.math.multiply(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(beta, grad)), alpha)))), tf.math.add(beta, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, sigma), sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10051512718200684, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [7, 8, 0, 3, 6, 4, 1, 4, 5, 8, 5, 4, 3, 3, 9, 3, 8, 3, 4, 3, 6, 5, 3, 0, 8, 1], [3, 2, 3, 1, 0, 2, 2], [83, 56, 47], [0, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [3, 0, 0, 1, 3, 3], [75, 57]], "fitness": -0.06828571110963821, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 10, 7, 1, 2, 2, 1, 1, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.negative(tf.math.multiply(tf.math.add(beta, grad), beta))), tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, grad), tf.math.subtract(alpha, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(beta))))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3014954530866847, 2.302189402434773, 2.3006310662919693, 2.2996444602321877, 2.301462227878412, 2.300414704344355, 2.300452224141681, 2.2998736789591514, 2.3005060828703585, 2.299506285753957, 2.299532694193697, 2.299841017219857, 2.300596935622145, 2.30031177783765, 2.2998006878559223, 2.3006472624429954, 2.301146284842047], "accuracy": [0.09417514503002167, 0.09642054885625839, 0.09866596013307571, 0.09734513610601425, 0.09642054885625839, 0.09774138033390045, 0.09734513610601425, 0.1022322028875351, 0.09311848133802414, 0.10117553919553757, 0.10157178342342377, 0.09932637959718704, 0.09734513610601425, 0.09576013684272766, 0.09813763201236725, 0.09813763201236725, 0.09509972482919693], "val_loss": [1.9705615043640137, 1.970034054347447, 1.9697529247828893, 1.9697951589311873, 1.9697564670017786, 1.9697694778442383, 1.9697603498186385, 1.9696882792881556, 1.96965149470738, 1.9697226115635462, 1.9700713838849748, 1.9702622549874442, 1.9704948834010534, 1.9707703590393066, 1.9709980147225517, 1.9712159974234444, 1.9713988304138184], "val_accuracy": [0.04633333161473274, 0.05233333259820938, 0.0560000017285347, 0.05833333358168602, 0.05900000035762787, 0.06366666406393051, 0.06933332979679108, 0.07400000095367432, 0.07733333110809326, 0.07599999755620956, 0.07633333653211594, 0.07766667008399963, 0.07599999755620956, 0.07500000298023224, 0.07500000298023224, 0.07233333587646484, 0.0729999989271164]}}]