[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 4, 3, 2, 2, 2, 1, 1, 8, 9, 8, 9], [3, 3, 3, 2, 1, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8351428508758545, "mapping_values": [1, 1, 1, 0, 1, 0, 18, 18, 12, 6, 3, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))), tf.math.sqrt(grad)), grad)), tf.math.add(beta, beta))), alpha), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.05309978075913, 1.8481669804801433, 1.3226231525382346, 1.009506454683172, 0.8599434658883034, 0.8771461092359779, 0.7253454574000613, 0.7409908189009587, 0.6684728205054428, 0.6637417508421825, 0.6478823193343655, 0.6521842528280722, 0.5952579339324302, 0.5943238970594414, 0.5648478475449628, 0.5618426847168169, 0.5552493105900207, 0.5316823842566105, 0.5068448227410146, 0.49257088050378106, 0.5043020632524909, 0.4752888970048499, 0.45353770382793873, 0.47024009877570067, 0.4876489404122969, 0.4395773515662245, 0.4505130673097251, 0.4327894421246357, 0.43104792903631967, 0.41732969197929654, 0.40774209120915694, 0.3970700102617019, 0.3889586974553869, 0.40015220666495394, 0.40190215674704405, 0.3848909772681585, 0.3797591557718145, 0.38297899093972443, 0.36733135246030724, 0.35297785360248507], "accuracy": [0.32545238733291626, 0.42926958203315735, 0.5361247062683105, 0.6324131488800049, 0.6799629926681519, 0.6717738509178162, 0.7161537408828735, 0.7186633348464966, 0.7433628439903259, 0.7436270117759705, 0.7460044622421265, 0.7553823590278625, 0.7709681391716003, 0.7771760821342468, 0.7848368883132935, 0.7913089394569397, 0.7890635132789612, 0.7968564033508301, 0.8084797263145447, 0.8142913579940796, 0.8109893202781677, 0.8244617581367493, 0.8321225643157959, 0.8256505131721497, 0.8156121969223022, 0.8356888294219971, 0.8301413059234619, 0.843481719493866, 0.8379341959953308, 0.8462554216384888, 0.8504821062088013, 0.854708731174469, 0.8525954484939575, 0.8496896028518677, 0.8525954484939575, 0.8552370667457581, 0.8613129258155823, 0.8558974862098694, 0.8640866279602051, 0.86553955078125], "val_loss": [1.3364487034933907, 1.4362905025482178, 0.7620153427124023, 0.7416695696966988, 0.6261365243366787, 0.6211498975753784, 0.644304633140564, 0.5551019906997681, 0.5940865107945034, 0.5187111071177891, 0.5074898515428815, 0.5075111048562186, 0.5152310814176287, 0.4831054040363857, 0.4464001825877598, 0.45727828570774626, 0.45299209867204937, 0.4417797327041626, 0.4090330515589033, 0.4083481090409415, 0.3978768587112427, 0.4057843429701669, 0.4152524897030422, 0.4444664887019566, 0.4109621558870588, 0.43787005969456266, 0.40296619279044016, 0.36595949956348967, 0.37116377694266184, 0.3880232572555542, 0.39926953826631817, 0.34831027473722187, 0.3776341847011021, 0.4139994468007769, 0.34959931884493145, 0.3762203540120806, 0.3712224875177656, 0.36544106687818256, 0.3600008658000401, 0.35779787812914166], "val_accuracy": [0.4973333477973938, 0.35233333706855774, 0.6606666445732117, 0.6460000276565552, 0.7243333458900452, 0.7073333263397217, 0.7053333520889282, 0.7403333187103271, 0.7116666436195374, 0.7599999904632568, 0.7770000100135803, 0.7573333382606506, 0.7776666879653931, 0.7766666412353516, 0.8056666851043701, 0.7946666479110718, 0.7896666526794434, 0.8146666884422302, 0.8220000267028809, 0.8253333568572998, 0.8273333311080933, 0.8253333568572998, 0.8226666450500488, 0.7963333129882812, 0.8303333520889282, 0.793666660785675, 0.8333333134651184, 0.8426666855812073, 0.8429999947547913, 0.8339999914169312, 0.8230000138282776, 0.8463333249092102, 0.8379999995231628, 0.8243333101272583, 0.8576666712760925, 0.8326666951179504, 0.8389999866485596, 0.8330000042915344, 0.8376666903495789, 0.8396666646003723]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 4, 3, 2, 0, 5, 1, 1, 8, 5, 8, 9], [2, 3, 0, 2, 3, 1, 3, 0, 0, 3, 1, 0, 5, 0], [84, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8345714211463928, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0528828929113345, 1.8417578934835894, 1.3328557423848706, 1.0305331864172458, 0.8626123499703398, 0.8439685995111754, 0.7294360390507455, 0.7268071335855649, 0.6773162158394314, 0.6567613724090199, 0.630673368231275, 0.6432379928042686, 0.6005771880168106, 0.5932483245368805, 0.5688560286674832, 0.5545299122708585, 0.5582074679836794, 0.5211948266732868, 0.5155409172210774, 0.4882666127415003, 0.49349020410286293, 0.47227593893073316, 0.45518474301500184, 0.4574050877655124, 0.46660294170314137, 0.4385295729351522, 0.4491620470134101, 0.4488227976280165, 0.4239743465697682, 0.4170797547848784, 0.40681673758978765, 0.40139861244094716, 0.4006400809091521], "accuracy": [0.32545238733291626, 0.4295337498188019, 0.5328226089477539, 0.618280291557312, 0.6828688383102417, 0.6832650899887085, 0.7195879220962524, 0.7187954187393188, 0.7405890822410583, 0.7560427784919739, 0.7560427784919739, 0.7592127919197083, 0.7716285586357117, 0.778761088848114, 0.7845727205276489, 0.7944789528846741, 0.7924976944923401, 0.8038568496704102, 0.8047813773155212, 0.8157442808151245, 0.8168009519577026, 0.8252542614936829, 0.8313300609588623, 0.8293488025665283, 0.8256505131721497, 0.8366134166717529, 0.8317263126373291, 0.8333113193511963, 0.8421608805656433, 0.8475762605667114, 0.8466516733169556, 0.8561616539955139, 0.8479725122451782], "val_loss": [1.3370159694126673, 1.4722633361816406, 0.7637573650905064, 0.7227863584245954, 0.6920771769114903, 0.6033313614981515, 0.6555228744234357, 0.5599096502576556, 0.5366064991269793, 0.5186161484037127, 0.49423142841884066, 0.5010708570480347, 0.5121121065957206, 0.47187529291425434, 0.4919834818158831, 0.44625283990587505, 0.44078244481767925, 0.4609065907342093, 0.4077779310090201, 0.40419130665915354, 0.40631178447178434, 0.40887882879802157, 0.397967483316149, 0.40916814122881207, 0.41057794434683664, 0.43634467465536936, 0.4097223367009844, 0.36154480491365704, 0.38115714277539936, 0.38293296098709106, 0.41175373111452374, 0.36432394811085295, 0.388555645942688], "val_accuracy": [0.4970000088214874, 0.3310000002384186, 0.668666660785675, 0.6756666898727417, 0.6949999928474426, 0.734000027179718, 0.6993333101272583, 0.7393333315849304, 0.765333354473114, 0.7583333253860474, 0.7823333144187927, 0.7546666860580444, 0.7706666588783264, 0.7786666750907898, 0.7726666927337646, 0.796999990940094, 0.8086666464805603, 0.7950000166893005, 0.8233333230018616, 0.8273333311080933, 0.8159999847412109, 0.824999988079071, 0.828000009059906, 0.8153333067893982, 0.8233333230018616, 0.7960000038146973, 0.8230000138282776, 0.8446666598320007, 0.8356666564941406, 0.8366666436195374, 0.8209999799728394, 0.8343333601951599, 0.8343333601951599]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 4, 3, 2, 0, 5, 1, 1, 2, 5, 8, 9], [3, 3, 0, 2, 1, 1, 3, 0, 0, 3, 1, 0, 5, 0], [84, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8205714225769043, "mapping_values": [1, 1, 1, 0, 1, 0, 18, 18, 11, 7, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.square(grad)))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), beta)), tf.math.square(alpha)))), alpha), tf.math.add(beta, tf.math.sqrt(grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0530911428958922, 1.8470767775168901, 1.3223127753837565, 1.0104861480842382, 0.8604608357716325, 0.83412191102124, 0.7606961367278602, 0.7400449280489422, 0.6614257411052364, 0.66084878732972, 0.6406000185289938, 0.6201793448075705, 0.6131964468480479, 0.5895964315050645, 0.583525314747996, 0.5556802241447312, 0.5425293100406119, 0.5137060777291709, 0.5166322985628828, 0.492485842739728, 0.4984304110852089, 0.46920316657999867, 0.4551404222970027, 0.4617642195800103, 0.48311957970444613, 0.436991331572105, 0.4572840241621577, 0.43456723117762236, 0.432093911753701, 0.40927042246746614, 0.41686270259327624, 0.4018032745386962, 0.39216972679872053], "accuracy": [0.32545238733291626, 0.42966583371162415, 0.5370492935180664, 0.6351869106292725, 0.6752080321311951, 0.6881521344184875, 0.6999075412750244, 0.717870831489563, 0.7494386434555054, 0.7471932172775269, 0.7540615797042847, 0.7684586048126221, 0.7663452625274658, 0.7803460359573364, 0.7773081660270691, 0.7862898111343384, 0.7913089394569397, 0.8088759779930115, 0.8084797263145447, 0.8153480291366577, 0.8125742673873901, 0.8260467648506165, 0.8281601071357727, 0.8273676037788391, 0.8162726163864136, 0.8343679904937744, 0.8318583965301514, 0.8437458872795105, 0.8378021121025085, 0.8515387773513794, 0.8457271456718445, 0.8551049828529358, 0.8539162874221802], "val_loss": [1.3358752046312605, 1.4454436983380998, 0.866192136492048, 0.778434259550912, 0.7201568910053798, 0.6561875343322754, 0.6525855915887016, 0.5326483760561261, 0.5419119596481323, 0.5439427409853254, 0.49815045084272114, 0.5177480152675084, 0.510827933038984, 0.488312942641122, 0.45736833981105257, 0.4545175518308367, 0.44614463193076, 0.4711767094475882, 0.4128201689038958, 0.407579813684736, 0.39758345058986116, 0.4083757826260158, 0.39724166904176983, 0.4027942419052124, 0.39763708625520977, 0.43276218857084003, 0.41225558519363403, 0.3666746956961496, 0.37132300649370464, 0.3811171395438058, 0.3891436627932957, 0.3621211222239903, 0.3762570023536682], "val_accuracy": [0.49799999594688416, 0.34833332896232605, 0.6100000143051147, 0.6880000233650208, 0.6586666703224182, 0.7139999866485596, 0.7099999785423279, 0.7583333253860474, 0.7490000128746033, 0.7386666536331177, 0.7799999713897705, 0.737333357334137, 0.7680000066757202, 0.7726666927337646, 0.7903333306312561, 0.7960000038146973, 0.7976666688919067, 0.8023333549499512, 0.8209999799728394, 0.8209999799728394, 0.8253333568572998, 0.8209999799728394, 0.8246666789054871, 0.8213333487510681, 0.8303333520889282, 0.7923333048820496, 0.8253333568572998, 0.840666651725769, 0.840666651725769, 0.8376666903495789, 0.8346666693687439, 0.8373333215713501, 0.8396666646003723]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 4, 3, 2, 0, 5, 1, 1, 8, 5, 8, 9], [3, 3, 0, 2, 1, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8174285888671875, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 9, 6, 2, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(grad))), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), beta)), alpha))))), tf.math.sqrt(tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.053075578454904, 1.8547747849378886, 1.3158702723905316, 1.000391669552702, 0.9142748691843264, 0.8424273604226229, 0.7610102372556204, 0.7182379143113048, 0.6638092700406277, 0.6547898733384416, 0.6203943609860689, 0.6205786267181571, 0.5851226741013321, 0.6013549969905183, 0.5823665729540214, 0.5431532873500844, 0.5390557827667364, 0.5040815202646, 0.5090217551204428, 0.48856332360036997, 0.4916618026762496, 0.4722819087756009, 0.4672720737508291, 0.4626174369516185, 0.47910776800089633, 0.4386292249849995, 0.4327928871526505, 0.43709174507109244, 0.4227237421815044, 0.4092254231453509, 0.4026993823097115, 0.40159362312069247, 0.38450261999303953, 0.40196382260955543, 0.4076147145402115, 0.37521364318145156, 0.3662473276039046, 0.3896616326583265, 0.3646530499036018, 0.349382454252136], "accuracy": [0.3255844712257385, 0.4275524914264679, 0.5403513312339783, 0.632941484451294, 0.6654338836669922, 0.6885483860969543, 0.7104741930961609, 0.7234182953834534, 0.7485140562057495, 0.7475894689559937, 0.76106196641922, 0.761590301990509, 0.7769119143486023, 0.7741381525993347, 0.7774402499198914, 0.7940827012062073, 0.7965922355651855, 0.8125742673873901, 0.8086118102073669, 0.8169330358505249, 0.81548011302948, 0.828820526599884, 0.8265751004219055, 0.8302733898162842, 0.817989706993103, 0.8352925777435303, 0.8425571322441101, 0.837141752243042, 0.8404437899589539, 0.850350022315979, 0.852859616279602, 0.850350022315979, 0.8584070801734924, 0.8518029451370239, 0.8507462739944458, 0.8622375130653381, 0.8681812286376953, 0.8524633646011353, 0.867520809173584, 0.8676528930664062], "val_loss": [1.3361613409859794, 1.3814409800938197, 0.8956035205296108, 0.7775047676903861, 0.6826519795826503, 0.6058878387723651, 0.581080538885934, 0.5747241803577968, 0.5548681020736694, 0.5232231787272862, 0.4995557410376413, 0.5364467586789813, 0.5099617753710065, 0.4835753100258963, 0.4711141586303711, 0.4695157323564802, 0.434106707572937, 0.47500702313014437, 0.4127411076000759, 0.40135496854782104, 0.39095790897096905, 0.39699502502168926, 0.39108150345938547, 0.4440068858010428, 0.4015721252986363, 0.41138299873897005, 0.41116656575884136, 0.3605472615786961, 0.3722201756068638, 0.36873373814991545, 0.401801449911935, 0.3597257818494524, 0.3974546194076538, 0.44709893635341097, 0.34552866220474243, 0.3683121289525713, 0.3650858998298645, 0.3527363283293588, 0.36299404076167513, 0.3823015349251883], "val_accuracy": [0.49666666984558105, 0.3776666522026062, 0.596666693687439, 0.6586666703224182, 0.70333331823349, 0.7356666922569275, 0.734000027179718, 0.731333315372467, 0.7360000014305115, 0.7540000081062317, 0.7766666412353516, 0.7293333411216736, 0.7643333077430725, 0.7776666879653931, 0.7870000004768372, 0.7829999923706055, 0.8113333582878113, 0.784333348274231, 0.8193333148956299, 0.8230000138282776, 0.8259999752044678, 0.8246666789054871, 0.8273333311080933, 0.7950000166893005, 0.8339999914169312, 0.809333324432373, 0.8183333277702332, 0.8413333296775818, 0.8386666774749756, 0.8493333458900452, 0.8216666579246521, 0.8393333554267883, 0.8256666660308838, 0.8180000185966492, 0.8569999933242798, 0.8373333215713501, 0.843999981880188, 0.8443333506584167, 0.8383333086967468, 0.828000009059906]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 4, 3, 2, 0, 5, 1, 9, 8, 5, 8, 9], [3, 3, 0, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [63, 83, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8059999942779541, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 9, 4, 2, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.square(grad)))), tf.math.subtract(tf.math.add(beta, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))))), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.053077238173832, 1.8509047765615925, 1.318837622169018, 1.0379131332033928, 0.8998694295943641, 0.825896469947763, 0.7348690137666655, 0.7139326666938536, 0.696644133627769, 0.6677691393193945, 0.6295782316787573, 0.6267624477101922, 0.6071252312170217, 0.6013684888888092, 0.5607724738489478, 0.5483816333450677, 0.5453123326047127, 0.5213142838444708, 0.5114685879360179, 0.48941909586669996, 0.49015865407332043, 0.47858480309073353, 0.4635493342257006, 0.45923791356358185, 0.48787137789654456, 0.4408615128695768, 0.44908698483575304, 0.43481576783215253, 0.42546928887826385, 0.4167305692752843, 0.39244011122048916, 0.39405809784326035, 0.4069139903971957], "accuracy": [0.3255844712257385, 0.42689210176467896, 0.5365209579467773, 0.6320168972015381, 0.6633205413818359, 0.689869225025177, 0.7210407853126526, 0.7312111854553223, 0.7304186820983887, 0.7454761862754822, 0.7604015469551086, 0.7667415142059326, 0.770439863204956, 0.7759873270988464, 0.7857614755630493, 0.7955356240272522, 0.7889314293861389, 0.8058380484580994, 0.8094043135643005, 0.8132346868515015, 0.8183859586715698, 0.821820080280304, 0.8302733898162842, 0.830669641494751, 0.817461371421814, 0.8343679904937744, 0.8334434032440186, 0.839519202709198, 0.8389908671379089, 0.8466516733169556, 0.8562937378883362, 0.8570862412452698, 0.8492933511734009], "val_loss": [1.335888181413923, 1.4202114173344202, 0.9101105076926095, 0.6874362230300903, 0.6230584893907819, 0.6016112055097308, 0.6242216995784214, 0.5382886614118304, 0.529125554221017, 0.549253020967756, 0.48565995693206787, 0.5175112996782575, 0.509611691747393, 0.46511205605098177, 0.4436854975564139, 0.478697623525347, 0.4466925859451294, 0.4544919218335833, 0.40363975933619906, 0.40833504710878643, 0.4055904235158648, 0.397653409412929, 0.4026139719145639, 0.46560914175851004, 0.4082104393414089, 0.4165697693824768, 0.41019376686641146, 0.36357087748391287, 0.3758880751473563, 0.3694056613104684, 0.3964211515017918, 0.35814980949674335, 0.3749981267111642], "val_accuracy": [0.49666666984558105, 0.3616666793823242, 0.606333315372467, 0.6933333277702332, 0.7200000286102295, 0.7416666746139526, 0.7360000014305115, 0.7583333253860474, 0.7673333287239075, 0.7363333106040955, 0.7910000085830688, 0.753333330154419, 0.765999972820282, 0.7863333225250244, 0.8046666383743286, 0.7856666445732117, 0.7973333597183228, 0.8016666769981384, 0.8216666579246521, 0.8289999961853027, 0.8209999799728394, 0.8273333311080933, 0.8206666707992554, 0.7846666574478149, 0.8309999704360962, 0.8076666593551636, 0.8273333311080933, 0.8433333039283752, 0.8389999866485596, 0.8433333039283752, 0.8206666707992554, 0.8416666388511658, 0.8426666855812073]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 4, 3, 2, 0, 5, 1, 1, 8, 5, 8, 9], [1, 3, 1, 3, 3, 3, 3, 4, 0, 0, 4, 3, 5], [8, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [51, 57]], "fitness": -0.38771429657936096, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 8, 6, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.multiply(alpha, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, alpha))), grad))))), grad))), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.6272108388882365, 2.1276871476584676, 2.2035336652215856, 2.141413535550286, 2.2240194899609786, 2.3168627385371363, 2.2319556802034914, 2.0132069625496753], "accuracy": [0.2530709207057953, 0.2557125985622406, 0.28160083293914795, 0.24356095492839813, 0.22757892310619354, 0.15295206010341644, 0.18319904804229736, 0.2946770489215851], "val_loss": [1.6292409896850586, 1.7834085736955916, 1.5862289837428503, 1.6952008519853865, 1.8862363270350866, 1.9794460705348425, 1.921220098223005, 1.7714829444885254], "val_accuracy": [0.33666667342185974, 0.29633334279060364, 0.4189999997615814, 0.40700000524520874, 0.27799999713897705, 0.10000000149011612, 0.16833333671092987, 0.28466665744781494]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [2, 8, 5, 2, 5, 2, 1, 6, 6, 6, 8, 9, 2, 5, 7, 8], [1, 3, 1, 0, 2, 3, 3, 4, 0, 0, 4, 3, 5], [84, 26, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 9, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [51, 57]], "fitness": -0.3531428575515747, "mapping_values": [1, 1, 1, 0, 1, 0, 25, 25, 16, 9, 3, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.sqrt(tf.math.square(alpha)), tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, alpha)), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), beta), tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), grad))), tf.math.add(tf.math.square(tf.math.add(grad, grad)), tf.math.add(beta, tf.math.sqrt(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2126332056158646, 2.208204600726294, 2.488078479485946, 2.305833404846101, 2.3036798570512262, 2.303250134156569], "accuracy": [0.20023775100708008, 0.21212521195411682, 0.1158367469906807, 0.09668471664190292, 0.09800554811954498, 0.09549596905708313], "val_loss": [1.9275357382638114, 1.9647397994995117, 1.9780026844569616, 1.974287441798619, 1.9738311086382185, 1.9738497052873885], "val_accuracy": [0.3063333332538605, 0.3023333251476288, 0.09833333641290665, 0.09833333641290665, 0.09966666996479034, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 8, 3, 2, 0, 5, 1, 1, 8, 5, 8, 9], [1, 3, 3, 0, 2, 3, 3, 4, 0, 0, 4, 3, 5], [84, 26, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.34942856431007385, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 10, 5, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.math.add(tf.math.add(beta, alpha), tf.math.negative(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.subtract(grad, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))), tf.math.square(tf.math.add(beta, beta))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2126203291546225, 2.4334333267635153, 2.261735153173049, 2.4209083262498843, 2.3012635829410595, 2.233778500774234], "accuracy": [0.19997358322143555, 0.18531237542629242, 0.15519747138023376, 0.1694624274969101, 0.13789460062980652, 0.1850482076406479], "val_loss": [1.9257945333208357, 1.9707487651279993, 1.753427573612758, 1.9708217212132044, 1.9447105271475655, 1.9761632510593958], "val_accuracy": [0.3109999895095825, 0.09966666996479034, 0.24933333694934845, 0.10366666316986084, 0.1120000034570694, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 2, 1, 2, 0, 5, 1, 1, 0, 5, 8, 9], [3, 3, 0, 2, 1, 1, 3, 0, 0, 3, 1, 0, 5, 0], [84, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [92, 57]], "fitness": -0.32028570771217346, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 9, 6, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(grad)))), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), beta)), alpha))))), tf.math.negative(alpha)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2113828298800247, 2.3710724083408308, 2.3027529635244846, 2.303674448089136, 2.2844111995296457, 2.2293962615749634], "accuracy": [0.19970941543579102, 0.18016114830970764, 0.15295206010341644, 0.10355303436517715, 0.14172500371932983, 0.19852067530155182], "val_loss": [1.9122168677193778, 1.9346578461783273, 1.9751029695783342, 1.9735580853053503, 1.9366301809038435, 1.9760822568620955], "val_accuracy": [0.3063333332538605, 0.13433332741260529, 0.10366666316986084, 0.10366666316986084, 0.2639999985694885, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 1, 2, 5, 2, 1, 5, 6, 6, 8, 9, 2], [2, 3, 3, 0, 2, 3, 3, 4, 0, 0, 4, 3, 5], [84, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [17, 57]], "fitness": -0.2248571366071701, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 13, 8, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.subtract(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.square(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))), beta))))), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))), grad)))), tf.math.add(beta, tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.291774275312019, 2.2509329591082734, 2.3023707103641073, 2.2150700270239985, 2.315519799771735, 2.303266782455787], "accuracy": [0.18359529972076416, 0.14832915365695953, 0.10368511080741882, 0.20274733006954193, 0.09893012791872025, 0.0952318087220192], "val_loss": [1.868072577885219, 1.9739636012486048, 1.9690707751682825, 2.0330354826790944, 1.9742250442504883, 1.973743506840297], "val_accuracy": [0.3100000023841858, 0.09966666996479034, 0.10999999940395355, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 5, 3, 2, 0, 5, 1, 0, 8, 9, 3, 9], [1, 1, 3, 1, 2, 3, 3, 4, 0, 0, 4, 3, 5], [31, 47, 79, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 0, 0, 1], [2, 3, 1, 0, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.12428571283817291, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.multiply(alpha, alpha))), tf.math.add(tf.math.add(beta, tf.math.negative(grad)), alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.4121864908296735, 2.2952379012356627, 2.48645060088546, 2.2708855621913293, 2.088155605443134, 2.24994240624636, 2.3374928061075027, 2.1986835236877513, 2.845960425001645, 2.293652575612147], "accuracy": [0.2911108136177063, 0.23312640190124512, 0.2028794139623642, 0.2945449650287628, 0.33403778076171875, 0.2650904655456543, 0.18240654468536377, 0.18623696267604828, 0.15559370815753937, 0.14595165848731995], "val_loss": [1.9624195098876953, 2.0746895245143344, 1.8110852241516113, 1.7859973907470703, 1.5620588915688651, 1.6690911906106132, 1.8485710961478097, 1.833287239074707, 1.9221208436148507, 1.9311019352504186], "val_accuracy": [0.1120000034570694, 0.13766667246818542, 0.31433331966400146, 0.2446666657924652, 0.4583333432674408, 0.32233333587646484, 0.21933333575725555, 0.2266666740179062, 0.16433332860469818, 0.1303333342075348]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 4, 3, 2, 0, 5, 1, 1, 8, 5, 8, 9], [2, 3, 0, 2, 1, 1, 3, 0, 0, 3, 1, 0, 5, 0], [79, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 10, 6, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.square(beta)))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta)))), tf.math.add(beta, tf.math.square(alpha))), alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08241976052522659, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 5, 3, 2, 9, 5, 5, 1, 5, 3, 9, 9], [1, 3, 3, 0, 2, 3, 3, 4, 0, 0, 4, 3, 5], [84, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [52, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, alpha), tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09589222073554993, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 5, 3, 8, 9, 5, 5, 1, 5, 3, 9, 9], [3, 3, 0, 2, 1, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 1, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 8, 3, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.multiply(grad, tf.math.sqrt(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))), tf.math.square(tf.math.add(beta, tf.math.square(tf.math.subtract(grad, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08241976052522659, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 4, 2, 2, 0, 5, 2, 9, 8, 5, 8, 9], [2, 3, 0, 2, 1, 3, 3, 0, 0, 3, 1, 0, 5, 0], [84, 26, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 1, 0, 2, 3, 3, 2], [65, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 13, 13, 9, 4, 2, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.square(beta)))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))))), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, alpha))", "other_info": {"loss": [1267349596.156987, 23942422102.76476, 110783681873.7266, 303497630029.80426, 658867020618.8964, 1217830338865.1306], "accuracy": [0.09879804402589798, 0.09668471664190292, 0.09774138033390045, 0.10091137140989304, 0.10276053100824356, 0.1006472036242485], "val_loss": [4779431789.714286, 38224087332.57143, 128993235529.14285, 305747197952.0, 597142742162.2858, 1031845707776.0], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [2, 5, 3, 5, 9, 5, 5, 1, 5, 3, 9, 9], [1, 3, 3, 0, 2, 3, 3, 4, 0, 0, 4, 3, 5], [85, 26, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 10, 4, 2, 1, 0, 0, 0, 0, 6, 3, 3, 2], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.square(tf.math.multiply(tf.math.square(tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(alpha, tf.math.square(grad))))))))), tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [Infinity, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.05890899524092674, 0.09813763201236725, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 3, 3, 2, 0, 4, 1, 1, 8, 5, 8, 9], [1, 3, 1, 0, 2, 3, 3, 4, 0, 0, 4, 3, 5], [84, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [8, 4, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [98, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 19, 19, 12, 7, 2, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, alpha), tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(grad)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(alpha)), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.square(beta))), grad)))), tf.math.add(beta, tf.math.sqrt(grad))), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.pow(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09589222073554993, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 2, 3, 2, 0, 3, 1, 1, 8, 6, 8, 9], [1, 3, 3, 0, 2, 3, 3, 4, 0, 0, 4, 3, 5], [84, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [0, 0, 0, 2, 3, 3, 2], [42, 57, 18]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 8, 8, 1, 1, 0, 0, 0, 0, 7, 4, 3, 3], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, alpha), tf.math.add(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.subtract(grad, tf.math.subtract(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))), tf.math.add(beta, grad))))), tf.math.add(beta, grad)), grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.square(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [44806.618682869135, 831628.1385550125, 3829083.2533350945, 10467295.846255448, 22696219.063796066, 41919102.607317396], "accuracy": [0.09879804402589798, 0.09681680053472519, 0.09774138033390045, 0.10091137140989304, 0.10276053100824356, 0.1006472036242485], "val_loss": [167122.82142857142, 1323443.857142857, 4452172.285714285, 10536506.285714285, 20559662.285714287, 35504884.571428575], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 5, 3, 2, 9, 5, 5, 1, 5, 3, 9, 9], [1, 3, 3, 0, 2, 3, 3, 4, 0, 0, 4, 3, 5], [84, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [9, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08241976052522659, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 4, 3, 3, 0, 8, 1, 1, 8, 5, 8, 9], [3, 3, 0, 2, 1, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 1, 0, 2, 3, 3, 2], [42, 57]], "fitness": -0.03314285725355148, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, alpha))", "other_info": {"loss": [2.3026863738546095, 2.305957607825545, 2.3089891050344034, 2.309308405770224, 2.3109408741251762, 2.316492807092038, 2.320050927799423, 2.3258365416460665, 2.3382125832322505, 2.349715793609871, 2.400486690398803, 7.639275831577333e+16, 4.039573287888289, 8.998009281387702, 14.747395348539442], "accuracy": [0.08994849026203156, 0.08189142495393753, 0.0812310129404068, 0.08070268481969833, 0.07819310575723648, 0.07872143387794495, 0.07370228320360184, 0.0738343670964241, 0.07145687192678452, 0.07951393723487854, 0.08334434032440186, 0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9722544806344169, 1.9735943249293737, 1.9752607345581055, 1.9774109295436315, 1.9799413681030273, 1.9828145163399833, 1.9859397751944405, 1.990143094744001, 1.9977961948939733, 2.0144447599138533, 2.184329237256731, 2.5370240211486816, 5.695324761526925, 10.607063293457031, 15.549944741385323], "val_accuracy": [0.033666666597127914, 0.027000000700354576, 0.023333333432674408, 0.024000000208616257, 0.027000000700354576, 0.03466666489839554, 0.049666665494441986, 0.06599999964237213, 0.08933333307504654, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}]