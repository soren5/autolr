[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 4, 3, 2, 0, 5, 1, 1, 8, 5, 8, 9], [2, 3, 0, 2, 1, 1, 3, 0, 0, 3, 1, 0, 5, 0], [84, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8317142724990845, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 10, 6, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.square(beta)))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), beta))), tf.math.square(alpha)), alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.4998506146210406, 2.043297201005333, 1.6228544106651621, 1.3782074931054902, 1.2039704700707288, 0.9473897989840792, 0.9624001471247766, 0.8262800343473432, 0.82008826671228, 0.800285515350956, 0.7354662057714471, 0.6855220608723209, 0.682151718453614, 0.6541241198451433, 0.649516057612291, 0.6323822653052703, 0.608476684849575, 0.6214901574645864, 0.5865914213375535, 0.6056490024051583, 0.5687479883247378, 0.53593657550842, 0.5451618460868217, 0.5091211588084186, 0.521130124583551, 0.5146514647483448, 0.4957242462660548, 0.5076837361905994, 0.4873584478900669, 0.483958335324931, 0.47134600948380473, 0.4636104267900961, 0.47435226492468613, 0.46307971271321036, 0.44333161975981267, 0.45193113431308907, 0.4455890893747211, 0.4394388746993259, 0.4298016485749392, 0.4143730871366582, 0.4216199664273802, 0.3879006307366943, 0.4103456887318993, 0.39851335356295653, 0.37944155564602294, 0.4085408703148121, 0.3735780335648846, 0.37657867670610295, 0.36556155575957705], "accuracy": [0.2513538599014282, 0.30801743268966675, 0.4270241856575012, 0.5190860033035278, 0.550521731376648, 0.6431118845939636, 0.6375643610954285, 0.6870955228805542, 0.6893408894538879, 0.6942279934883118, 0.718399167060852, 0.7345132827758789, 0.7432307600975037, 0.7425703406333923, 0.752212405204773, 0.7637035846710205, 0.7658169269561768, 0.7627789974212646, 0.7718927264213562, 0.7675340175628662, 0.7881389260292053, 0.7981772422790527, 0.7877426743507385, 0.813498854637146, 0.798309326171875, 0.807158887386322, 0.8094043135643005, 0.8047813773155212, 0.8148196935653687, 0.817989706993103, 0.8248580098152161, 0.829216718673706, 0.8177255392074585, 0.828820526599884, 0.833179235458374, 0.8335754871368408, 0.8338396549224854, 0.8347642421722412, 0.8374059200286865, 0.8449346423149109, 0.8466516733169556, 0.8564258217811584, 0.8448025584220886, 0.8510104417800903, 0.8598600029945374, 0.8496896028518677, 0.8602562546730042, 0.8590674996376038, 0.8656716346740723], "val_loss": [1.9036078453063965, 1.451629877090454, 1.2787955829075404, 0.9584237848009381, 0.7810939720698765, 0.7095217534473964, 0.6434899227959769, 0.6098061118807111, 0.7384945835386004, 0.5620543956756592, 0.5534016575132098, 0.5230509042739868, 0.5298104967389788, 0.5099205289568219, 0.4944620302745274, 0.48574367591312956, 0.4779667343412127, 0.49180173873901367, 0.48618926320757183, 0.5414616891316005, 0.46472299098968506, 0.4258818200656346, 0.425172175679888, 0.4420053107397897, 0.4551918847220285, 0.4460488387516567, 0.41739869117736816, 0.4080791473388672, 0.39657516138894217, 0.42189892700740267, 0.41954489265169415, 0.38964115721838816, 0.3932621734482901, 0.3774588533810207, 0.41104378019060406, 0.38721491609300884, 0.3735412188938686, 0.3866406764302935, 0.3610468421663557, 0.373583265713283, 0.3697030714579991, 0.3943544455936977, 0.3741924336978367, 0.3549214942114694, 0.3893259848867144, 0.3501810942377363, 0.3656068103654044, 0.36273900100163053, 0.3611201303345816], "val_accuracy": [0.34333333373069763, 0.36800000071525574, 0.5149999856948853, 0.5316666960716248, 0.6359999775886536, 0.6613333225250244, 0.722000002861023, 0.7149999737739563, 0.6576666831970215, 0.7283333539962769, 0.7446666955947876, 0.7519999742507935, 0.7559999823570251, 0.7606666684150696, 0.7793333530426025, 0.7773333191871643, 0.781000018119812, 0.7903333306312561, 0.7730000019073486, 0.746999979019165, 0.7770000100135803, 0.8096666932106018, 0.8066666722297668, 0.8026666641235352, 0.8003333210945129, 0.8016666769981384, 0.8226666450500488, 0.8226666450500488, 0.8223333358764648, 0.8159999847412109, 0.8083333373069763, 0.8273333311080933, 0.8266666531562805, 0.8363333344459534, 0.8116666674613953, 0.8306666612625122, 0.828000009059906, 0.8243333101272583, 0.8456666469573975, 0.8420000076293945, 0.8429999947547913, 0.8286666870117188, 0.8379999995231628, 0.8493333458900452, 0.824999988079071, 0.8433333039283752, 0.847000002861023, 0.8353333473205566, 0.8429999947547913]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 5, 3, 2, 9, 5, 5, 1, 5, 3, 9, 9], [1, 3, 3, 0, 2, 3, 3, 4, 0, 0, 4, 3, 5], [84, 26, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.821142852306366, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 11, 4, 3, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.multiply(alpha, tf.math.add(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.square(tf.math.multiply(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), tf.math.add(beta, grad)))))))))), tf.math.add(beta, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.4998256282846705, 2.0457283781976465, 1.6199699706877573, 1.2695924755510102, 1.1127708920272366, 1.0039749539932947, 0.8952626173034273, 0.8613874408011865, 0.7746755493126525, 0.761986803077924, 0.7076146323777555, 0.677842577608144, 0.6752835321561803, 0.6608667050086906, 0.6463629092601438, 0.6184547674922013, 0.5927447168944519, 0.6018984543963856, 0.592801380426719, 0.575589736014026, 0.556460393599358, 0.5301100242139484, 0.5378201946433131, 0.509813638395401, 0.4999212182004297, 0.5474939760026868, 0.497985170297241, 0.46541170414333977, 0.48037387154924555, 0.4889021780685805, 0.46826301141736876, 0.4532909179604553, 0.46992285669109746, 0.45454209285987884, 0.43521692602940837, 0.4451892809183874], "accuracy": [0.25161802768707275, 0.3069607615470886, 0.4220050275325775, 0.5359926223754883, 0.5806366205215454, 0.6256769299507141, 0.6593580842018127, 0.6719059348106384, 0.7018887996673584, 0.7028133869171143, 0.7283053994178772, 0.7334566116333008, 0.7421740889549255, 0.743891179561615, 0.7518161535263062, 0.7672698497772217, 0.7736098170280457, 0.7737419009208679, 0.7728173136711121, 0.7761194109916687, 0.7921014428138733, 0.8029322624206543, 0.7975168228149414, 0.8128384351730347, 0.8080834746360779, 0.7943468689918518, 0.8153480291366577, 0.8248580098152161, 0.8222163319587708, 0.8146876096725464, 0.8249900937080383, 0.8318583965301514, 0.8195747137069702, 0.8330471515655518, 0.8381983637809753, 0.8338396549224854], "val_loss": [1.9035254205976213, 1.4563038349151611, 0.9857826232910156, 0.9082902159009661, 0.7377396311078753, 0.6737286193030221, 0.6960867473057338, 0.630407588822501, 0.5940215587615967, 0.5399455853870937, 0.540786589894976, 0.5162252358027867, 0.5318445478166852, 0.5154909917286464, 0.48805889061519075, 0.4832291603088379, 0.47782117979867117, 0.5125242471694946, 0.4613020930971418, 0.4988971437726702, 0.4745011329650879, 0.44345223903656006, 0.4417855739593506, 0.41473192828042166, 0.4241505094936916, 0.4103791373116629, 0.3902961441448757, 0.40891205413000925, 0.4387285624231611, 0.41411021777561735, 0.3898030860083444, 0.38014534541538786, 0.38481372594833374, 0.3857278312955584, 0.4092010770525251, 0.37523267950330463], "val_accuracy": [0.34200000762939453, 0.36133334040641785, 0.5699999928474426, 0.5913333296775818, 0.668666660785675, 0.6859999895095825, 0.6783333420753479, 0.7070000171661377, 0.7163333296775818, 0.7443333268165588, 0.7546666860580444, 0.7603333592414856, 0.7536666393280029, 0.7573333382606506, 0.7743333578109741, 0.7806666493415833, 0.7860000133514404, 0.7766666412353516, 0.7846666574478149, 0.7730000019073486, 0.7763333320617676, 0.7913333177566528, 0.7963333129882812, 0.8149999976158142, 0.8069999814033508, 0.8116666674613953, 0.8349999785423279, 0.8186666369438171, 0.8016666769981384, 0.8190000057220459, 0.8356666564941406, 0.8263333439826965, 0.8296666741371155, 0.8299999833106995, 0.8146666884422302, 0.8349999785423279]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 8, 3, 2, 0, 5, 1, 1, 8, 5, 8, 9], [2, 2, 2, 2, 3, 2, 3, 0, 0, 3, 1, 0, 5, 0], [84, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [42, 57]], "fitness": -0.8188571333885193, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0111967328989495, 1.437614200641419, 1.0411772767015184, 0.928101250846955, 0.8396618521807138, 0.7697068610683865, 0.7586115944528813, 0.7110525293986968, 0.6851247742175741, 0.7123402276641861, 0.6691548763138979, 0.6583916462643933, 0.6313871733264649, 0.6254133420644923, 0.6089564244099391, 0.5939924565792525, 0.5818480434371748, 0.5846131693937398, 0.5618441466878292, 0.5750183239825224, 0.5499629287388441, 0.5330025468205165, 0.5445826600854737, 0.5288461873150615, 0.526772227867987, 0.5317288896174966, 0.5116362671818416, 0.49037557467572235, 0.4956776261361142, 0.4906916701326029, 0.5003068691758967, 0.48002573948148347, 0.48413451021657, 0.46839160967449456, 0.4609717346217103, 0.4548823568822843, 0.45878536876607423, 0.4489677212044957, 0.44993811681238793, 0.432270787092421, 0.42486120545711376, 0.43037252656976704, 0.4216328583507175, 0.4233815044680323, 0.41334893600406303], "accuracy": [0.33958524465560913, 0.5173689126968384, 0.6172236204147339, 0.6618676781654358, 0.683000922203064, 0.7077004313468933, 0.7071720957756042, 0.7309470176696777, 0.7448157668113708, 0.724210798740387, 0.7473253011703491, 0.7508915662765503, 0.7642319202423096, 0.7668735980987549, 0.770439863204956, 0.7792893648147583, 0.7816668748855591, 0.7736098170280457, 0.7921014428138733, 0.7770439982414246, 0.7935543656349182, 0.804649293422699, 0.7957997918128967, 0.8034605979919434, 0.8016114234924316, 0.800290584564209, 0.8062343001365662, 0.8195747137069702, 0.8161405324935913, 0.819970965385437, 0.8145555257797241, 0.8248580098152161, 0.822348415851593, 0.8290846943855286, 0.826310932636261, 0.8321225643157959, 0.82683926820755, 0.8337075710296631, 0.834632158279419, 0.8403117060661316, 0.8451988101005554, 0.8385946154594421, 0.847840428352356, 0.847840428352356, 0.8487650156021118], "val_loss": [1.0830116612570626, 0.9868463788713727, 0.8167556524276733, 0.63197089944567, 0.6114705460412162, 0.6166114977427891, 0.5689881699425834, 0.5846371991293771, 0.5508601665496826, 0.5633366278239659, 0.5189567463738578, 0.5026456458227975, 0.5259545360292707, 0.5068785973957607, 0.5117126703262329, 0.48207357951572966, 0.49716590132032124, 0.48938592842647005, 0.4724114792687552, 0.4903209890638079, 0.44495689868927, 0.44000441687447683, 0.4657771246773856, 0.43251860993249075, 0.47525972979409353, 0.41866019793919157, 0.417190032345908, 0.4255157283374241, 0.4070827875818525, 0.4297222580228533, 0.3975743991988046, 0.416231061731066, 0.4013831615447998, 0.3916707379477365, 0.38498620476041523, 0.3933483532496861, 0.3798996465546744, 0.39143283878053936, 0.38398786953517366, 0.38107692343848093, 0.3978801369667053, 0.3693720613207136, 0.39839379276548115, 0.3785535863467625, 0.3902641364506313], "val_accuracy": [0.6206666827201843, 0.5993333458900452, 0.6446666717529297, 0.7210000157356262, 0.7273333072662354, 0.7110000252723694, 0.7486666440963745, 0.7213333249092102, 0.7546666860580444, 0.7413333058357239, 0.7776666879653931, 0.768666684627533, 0.7663333415985107, 0.7760000228881836, 0.7609999775886536, 0.7913333177566528, 0.7730000019073486, 0.7850000262260437, 0.7929999828338623, 0.7839999794960022, 0.8069999814033508, 0.8053333163261414, 0.7983333468437195, 0.8130000233650208, 0.781000018119812, 0.8176666498184204, 0.8230000138282776, 0.8130000233650208, 0.8190000057220459, 0.8130000233650208, 0.8303333520889282, 0.8193333148956299, 0.8233333230018616, 0.8206666707992554, 0.8346666693687439, 0.8276666402816772, 0.8379999995231628, 0.8263333439826965, 0.8323333263397217, 0.840666651725769, 0.8296666741371155, 0.8396666646003723, 0.8226666450500488, 0.8309999704360962, 0.8263333439826965]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 5, 3, 2, 0, 5, 1, 1, 8, 5, 3, 9], [1, 3, 3, 0, 2, 3, 3, 4, 0, 0, 4, 3, 5], [84, 47, 79, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.7962856888771057, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 10, 6, 1, 7, 6, 4, 2, 2, 4, 2, 2, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.square(tf.math.multiply(alpha, tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.subtract(grad, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.square(tf.math.add(beta, grad)))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, beta)))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), sigma)))), tf.math.add(sigma, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1225748091420447, 1.635491144309159, 1.3149449877561974, 1.0734911116122758, 0.8159984619767674, 0.7212743023446113, 0.7357788553028185, 0.6802410826061411, 0.6412665879469758, 0.603683841502457, 0.5888587049426436, 0.5365058786172152, 0.5437845246131473, 0.526510450834013, 0.5261877601676692], "accuracy": [0.2845066785812378, 0.4434024691581726, 0.5476158857345581, 0.6089023947715759, 0.6906617283821106, 0.7301545143127441, 0.7277770638465881, 0.7448157668113708, 0.7483819723129272, 0.7691190242767334, 0.7781006693840027, 0.8001585006713867, 0.8012151718139648, 0.8012151718139648, 0.8021397590637207], "val_loss": [1.6088270800454276, 1.1333331721169608, 1.166667870112828, 0.6834855079650879, 0.5824779101780483, 0.6371967281614032, 0.5652850014822823, 0.522146497453962, 0.5220855815070016, 0.4499959094183786, 0.48409581184387207, 0.4731834445680891, 0.4768894910812378, 0.4601937873022897, 0.44895412240709576], "val_accuracy": [0.4533333480358124, 0.5136666893959045, 0.5576666593551636, 0.6776666641235352, 0.7279999852180481, 0.7210000157356262, 0.7316666841506958, 0.7566666603088379, 0.7676666378974915, 0.8029999732971191, 0.7796666622161865, 0.7723333239555359, 0.7760000228881836, 0.7826666831970215, 0.7983333468437195]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [2, 5, 3, 2, 0, 5, 1, 1, 8, 5, 8, 9], [2, 2, 2, 2, 3, 2, 3, 0, 0, 3, 1, 0, 5, 0], [84, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [82, 57]], "fitness": -0.3328571319580078, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 8, 6, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.square(tf.math.multiply(beta, tf.math.add(beta, tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.subtract(beta, tf.math.add(beta, beta)))))))))), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.250836752251769, 2.985490733952712, 2.304183484855786, 2.303131176606303, 2.2945007620360385, 2.2400463905631747, 2.304744471900294, 2.301198091520814, 2.2662598214774885, 2.305143736356978], "accuracy": [0.2308809906244278, 0.11742173880338669, 0.10196803510189056, 0.09628847241401672, 0.13380002975463867, 0.1802932173013687, 0.1014397069811821, 0.10791176557540894, 0.15968827903270721, 0.09034473448991776], "val_loss": [2.5002396447317943, 1.9748874391828264, 1.9735150337219238, 1.972588130405971, 1.8145197459629603, 1.9760024206978934, 1.9735185759408134, 1.9496135711669922, 1.977580956050328, 1.9744200706481934], "val_accuracy": [0.21166667342185974, 0.10366666316986084, 0.10366666316986084, 0.09866666793823242, 0.3336666524410248, 0.09833333641290665, 0.09966666996479034, 0.1756666600704193, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [3, 8, 1, 2, 5, 2, 1, 6, 6, 6, 8, 9, 2], [1, 3, 3, 0, 2, 3, 3, 4, 0, 0, 4, 3, 5], [84, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [5, 57]], "fitness": -0.23342856764793396, "mapping_values": [1, 1, 1, 0, 1, 0, 20, 20, 12, 8, 2, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.subtract(alpha, tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.math.add(tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), beta)), tf.math.add(beta, grad)), grad))))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3026510891960346, 2.3010539573968725, 2.3013749259290694, 2.302220872301609, 2.302461083066651, 2.3008400472462878, 2.3011580157226432, 2.3023711038760033, 2.3007498026177586, 2.3011391089498217, 2.299558690919726, 2.2988669274269298, 2.2990427293388236, 2.2991702499926254, 2.2997403090986768, 2.300642092655269, 2.2982020488646304, 2.299111536795894, 2.29841348164747, 2.29778784106452, 2.2969064407376343, 2.29684691661542, 2.297339333550742, 2.2968097877162337, 2.29710118677071, 2.296874157866908, 2.2960102272197447, 2.2963994587921053, 2.295024278409225, 2.295146299469756, 2.293970044955696, 2.2953522076239565, 2.2943863122375996, 2.294979127831762, 2.291534199643491, 2.294743338942512, 2.2938320841755866, 2.293256062400686, 2.2926697227161608, 2.2937232518413393, 2.292700815981783, 2.291626721986643, 2.291369712080355, 2.290387591413771, 2.290120739868178, 2.290603085185212, 2.2905845466054995, 2.2909802960335477, 2.291429694082129, 2.2902754216917818, 2.291239185639345, 2.289823821570029, 2.2890820843337973, 2.289271784149944, 2.2895806699837706, 2.2885089556397133, 2.2879352632877046, 2.2884852650017233, 2.2857168530114116, 2.288613617868944, 2.287654428056297, 2.2883660871087286, 2.2861772871225297, 2.286476706784588, 2.2865079969636137, 2.2855289085681934, 2.2870203700473106, 2.284959461836688, 2.2858948842047258, 2.284019344849058, 2.2845737995520055, 2.28481620722569, 2.283379267959736, 2.2833140529992324, 2.282137718718396, 2.284207695935932, 2.28327321285081, 2.2810803790212764, 2.2827428334487694, 2.2822139336527174, 2.2823149304206676, 2.2817954176909194, 2.2815070417437178, 2.2820126863282355, 2.281711561458458, 2.2802787226708556, 2.278777772472393, 2.282073729798117, 2.2803648769296534, 2.2804523589132075, 2.2786017791265354, 2.27993693957633, 2.2781380677440493, 2.2764981400461215, 2.2775752182886064, 2.2772968575907515, 2.2779429957473347, 2.277977139832337, 2.2784185963158183, 2.2773353671826047], "accuracy": [0.08558975160121918, 0.0936468094587326, 0.09576013684272766, 0.09325055778026581, 0.09126931428909302, 0.09576013684272766, 0.0952318087220192, 0.08809932321310043, 0.09166556596755981, 0.09708096832036972, 0.09008057415485382, 0.10011887550354004, 0.09694888442754745, 0.09866596013307571, 0.1018359512090683, 0.09576013684272766, 0.10091137140989304, 0.1018359512090683, 0.1022322028875351, 0.10302469879388809, 0.10434553027153015, 0.09893012791872025, 0.10236428678035736, 0.10460969805717468, 0.107647605240345, 0.1080438494682312, 0.11240258812904358, 0.10170386731624603, 0.1018359512090683, 0.11200633645057678, 0.11068551242351532, 0.10976093262434006, 0.11081759631633759, 0.1088363528251648, 0.12059172987937927, 0.11530841141939163, 0.10777968913316727, 0.10619468986988068, 0.11002509295940399, 0.11266675591468811, 0.11293092370033264, 0.11808215826749802, 0.11861048638820648, 0.11649715900421143, 0.12310130894184113, 0.1212521493434906, 0.11768590658903122, 0.1146479994058609, 0.1220446452498436, 0.12270505726337433, 0.11795007437467575, 0.12336547672748566, 0.12521463632583618, 0.12534672021865845, 0.1254788041114807, 0.12415797263383865, 0.12891295552253723, 0.12812046706676483, 0.12970545887947083, 0.12917712330818176, 0.12534672021865845, 0.12640337646007538, 0.12613920867443085, 0.1410645842552185, 0.13353586196899414, 0.13749834895133972, 0.12679962813854218, 0.12851670384407043, 0.13472460210323334, 0.14159291982650757, 0.13961167633533478, 0.13974376022815704, 0.14238542318344116, 0.13855500519275665, 0.1422533392906189, 0.14053626358509064, 0.1368379294872284, 0.14172500371932983, 0.1406683325767517, 0.14912164211273193, 0.14014001190662384, 0.1406683325767517, 0.1394795924425125, 0.14370624721050262, 0.14159291982650757, 0.14951789379119873, 0.15559370815753937, 0.14449875056743622, 0.14674416184425354, 0.14740456640720367, 0.1562541276216507, 0.14780081808567047, 0.15281997621059418, 0.16219785809516907, 0.16074495017528534, 0.1546691358089447, 0.15717871487140656, 0.15321621298789978, 0.14991414546966553, 0.1558578759431839], "val_loss": [1.9709903172084264, 1.9707466534205846, 1.9705044201442175, 1.970264230455671, 1.9700219971793038, 1.9697832380022322, 1.9695439338684082, 1.9693024499075753, 1.9690585817609514, 1.9688170296805245, 1.9685726165771484, 1.9683318819318498, 1.9680921009608678, 1.9678523881094796, 1.967611449105399, 1.9673679896763392, 1.9671262332371302, 1.9668878146580286, 1.966646671295166, 1.966407094682966, 1.9661681992667062, 1.9659320967538017, 1.9656925201416016, 1.9654530797685896, 1.9652127538408553, 1.9649749483380998, 1.9647341455732072, 1.9644983836582728, 1.9642562866210938, 1.9640167100088937, 1.9637786320277624, 1.9635406221662248, 1.9633028166634696, 1.963064738682338, 1.9628276824951172, 1.9625904900687081, 1.9623527526855469, 1.9621140616280692, 1.961876324244908, 1.9616382462637765, 1.9614015987941198, 1.9611636570521764, 1.9609251022338867, 1.9606866155351912, 1.9604482650756836, 1.9602118219648088, 1.9599754469735282, 1.9597362109592982, 1.9594989504132951, 1.9592616217476981, 1.9590238162449427, 1.9587878499712263, 1.958549635750907, 1.958310944693429, 1.9580738203866142, 1.9578354018075126, 1.9575979369027274, 1.9573582921709334, 1.9571215084620885, 1.9568847247532435, 1.9566448756626673, 1.9564061164855957, 1.956169673374721, 1.955930573599679, 1.9556914738246374, 1.955451352255685, 1.9552126611982072, 1.954974583217076, 1.9547371864318848, 1.9544968605041504, 1.9542606898716517, 1.9540191377912248, 1.9537805148533411, 1.953540325164795, 1.9532993180411202, 1.9530581065586634, 1.9528224127633231, 1.952585015978132, 1.9523467336382185, 1.95210599899292, 1.9518662180219377, 1.951625074659075, 1.9513845443725586, 1.9511441503252303, 1.9509045737130302, 1.9506639753069197, 1.9504241943359375, 1.950185775756836, 1.949944359915597, 1.9497045108250208, 1.9494654791695731, 1.949225630078997, 1.9489844867161341, 1.9487415041242326, 1.9485045841761999, 1.9482635770525252, 1.9480223655700684, 1.947779655456543, 1.9475391932896204, 1.9472972324916296], "val_accuracy": [0.04066666588187218, 0.04399999976158142, 0.04533333331346512, 0.046666666865348816, 0.04833333194255829, 0.050333332270383835, 0.05133333429694176, 0.05233333259820938, 0.05400000140070915, 0.055666666477918625, 0.0573333315551281, 0.05833333358168602, 0.060333333909511566, 0.061000000685453415, 0.061666667461395264, 0.06233333423733711, 0.06366666406393051, 0.06433333456516266, 0.06499999761581421, 0.06533333659172058, 0.06733333319425583, 0.07000000029802322, 0.07199999690055847, 0.07333333045244217, 0.07466666400432587, 0.07599999755620956, 0.07866666465997696, 0.08100000023841858, 0.08299999684095383, 0.08633333444595337, 0.08666666597127914, 0.08833333104848862, 0.08933333307504654, 0.09099999815225601, 0.09166666865348816, 0.09300000220537186, 0.09433333575725555, 0.0949999988079071, 0.09733333438634872, 0.09866666793823242, 0.10100000351667404, 0.10333333164453506, 0.10700000077486038, 0.10866666585206985, 0.1106666699051857, 0.1120000034570694, 0.11633333563804626, 0.11833333224058151, 0.12033333629369736, 0.12200000137090683, 0.12300000339746475, 0.12566666305065155, 0.12733332812786102, 0.12933333218097687, 0.1316666603088379, 0.1340000033378601, 0.13500000536441803, 0.1379999965429306, 0.140666663646698, 0.1420000046491623, 0.14399999380111694, 0.1469999998807907, 0.1496666669845581, 0.15033333003520966, 0.15066666901111603, 0.15333333611488342, 0.15466666221618652, 0.156333327293396, 0.1589999943971634, 0.1613333374261856, 0.1626666635274887, 0.16500000655651093, 0.16899999976158142, 0.17166666686534882, 0.1743333339691162, 0.17633333802223206, 0.1783333271741867, 0.18033333122730255, 0.18466666340827942, 0.18566666543483734, 0.18799999356269836, 0.1913333386182785, 0.19466666877269745, 0.19566667079925537, 0.1979999989271164, 0.2006666660308838, 0.2029999941587448, 0.2056666612625122, 0.20766666531562805, 0.20933333039283752, 0.21166667342185974, 0.2150000035762787, 0.21933333575725555, 0.22100000083446503, 0.2240000069141388, 0.2253333330154419, 0.2280000001192093, 0.22966666519641876, 0.2303333282470703, 0.23199999332427979]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [3, 9, 1, 2, 5, 2, 1, 6, 6, 6, 8, 9, 2, 4], [2, 2, 2, 2, 3, 2, 3, 0, 0, 3, 1, 0, 5, 0], [84, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [90, 57]], "fitness": -0.2288571447134018, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, beta), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.square(tf.math.pow(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.2497964520984084, 3.247902566573214, 2.3043561697226664, 2.303331002331271, 2.3022874261661843, 2.3696410156842536], "accuracy": [0.2312772423028946, 0.11993131786584854, 0.09470347315073013, 0.0940430611371994, 0.10342095047235489, 0.1826707124710083], "val_loss": [2.140213898250035, 1.9750544684273856, 1.9737503187997, 1.9733083588736398, 1.971142087663923, 1.9797006334577287], "val_accuracy": [0.23533333837985992, 0.10366666316986084, 0.09966666996479034, 0.09833333641290665, 0.18933333456516266, 0.10166666656732559]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 5, 3, 2, 3, 5, 1, 1, 8, 5, 8, 9, 9], [1, 3, 3, 0, 2, 3, 3, 4, 0, 0, 4, 3, 5], [84, 13, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 4, 2, 1, 2, 3], [1, 2, 0, 2, 3, 3, 2], [37, 57]], "fitness": -0.2174285650253296, "mapping_values": [1, 1, 1, 0, 1, 0, 18, 18, 13, 5, 3, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.square(tf.math.multiply(alpha, tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.sqrt(tf.math.square(tf.math.sqrt(tf.math.add(beta, grad)))), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))), tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))), beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2507187601849545, 3.008877973137058, 2.3041934749438004, 2.303280792153192, 2.3015803710391824, 2.17616314756368], "accuracy": [0.2300885021686554, 0.11781799048185349, 0.09998679161071777, 0.0948355570435524, 0.11293092370033264, 0.21001188457012177], "val_loss": [2.4300628389631, 1.9748293331691198, 1.9736861501421248, 1.9731716428484236, 1.9670706476484026, 1.9869635445731026], "val_accuracy": [0.21833333373069763, 0.10366666316986084, 0.10366666316986084, 0.09833333641290665, 0.10766666382551193, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 5, 3, 9, 0, 5, 1, 1, 8, 5, 8, 9], [2, 2, 2, 2, 3, 3, 3, 0, 0, 3, 1, 0, 5, 0], [84, 47, 79, 81, 53, 45], [0, 0, 1, 0, 1, 1, 1], [0, 0, 1, 0, 0, 1], [2, 3, 9, 9, 7], [1, 0], [86, 40], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [42, 57]], "fitness": -0.21714285016059875, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 11, 4, 1, 5, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.multiply(beta, tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))), tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.sqrt(tf.math.add(beta, beta)))))), beta), tf.math.add(beta, beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, alpha))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2508513409117383, 2.992588438393811, 2.3041142333122275, 2.3029101985147395, 2.28771959861445, 2.3047141932131137], "accuracy": [0.23022057116031647, 0.11689341068267822, 0.09879804402589798, 0.09879804402589798, 0.14912164211273193, 0.10130762308835983], "val_loss": [2.4949118069240024, 1.9748376437595911, 1.9734808376857214, 1.9715115002223425, 1.9759603227887834, 1.9738606725420271], "val_accuracy": [0.21299999952316284, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10066666454076767, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 8, 3, 2, 0, 5, 1, 1, 8, 5, 8, 9], [2, 2, 2, 2, 3, 2, 3, 0, 0, 3, 1, 0, 5, 0], [84, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [0, 1, 0, 2, 3, 3, 2], [42, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 7, 4, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.math.multiply(beta, tf.math.add(beta, tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.subtract(beta, beta)))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302609642971272, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09787346422672272, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 2, 3, 2, 5, 5, 1, 6, 2, 5, 8, 9], [2, 2, 2, 2, 3, 3, 3, 0, 0, 3, 1, 0, 5, 0], [84, 47, 79, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 0, 1], [2, 7, 1, 9, 7], [1, 0], [88, 40], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [42, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 5, 4, 2, 2, 1, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 8, 3, 2, 0, 5, 1, 1, 8, 5, 8, 9], [2, 2, 2, 2, 3, 2, 3, 0, 0, 3, 1, 0, 5, 0], [84, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [42, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 8, 5, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta))), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, beta))), grad)))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0750231146812439, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [6, 5, 3, 8, 0, 5, 2, 1, 8, 5, 8, 9], [1, 3, 3, 1, 2, 3, 3, 4, 0, 0, 4, 3, 5], [84, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [42, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 1, 0, 0, 0, 0, 8, 4, 4, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.square(tf.math.multiply(alpha, grad)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.square(alpha), tf.math.pow(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 3, 2, 0, 5, 1, 1, 8, 5, 8, 9], [2, 3, 2, 2, 3, 2, 3, 0, 0, 3, 1, 0, 5, 0], [84, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 9, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 7, 4, 0, 1, 0, 0, 0, 0, 2, 2, 0, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.multiply(beta, tf.math.add(grad, tf.math.add(beta, tf.math.negative(tf.math.square(tf.math.subtract(beta, tf.math.add(beta, beta)))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [64482911.6862727, 1271280043.703606, 5890291977.366266, 16273436219.17316, 35385201059.82512, 64025624030.66015], "accuracy": [0.09668471664190292, 0.10276053100824356, 0.09800554811954498, 0.10355303436517715, 0.0940430611371994, 0.09708096832036972], "val_loss": [255995181.7142857, 2046336585.142857, 6904552155.428572, 16364158976.0, 31958791899.42857, 55221762925.71429], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 5, 3, 2, 0, 5, 1, 0, 8, 5, 8, 9], [1, 3, 3, 0, 1, 3, 3, 4, 0, 0, 4, 3, 5], [84, 47, 79, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 11, 5, 1, 7, 6, 4, 2, 2, 1, 0, 1, 0], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.multiply(alpha, tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.negative(tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.sqrt(tf.math.add(beta, grad)))))), grad)))), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), sigma)))), tf.math.add(sigma, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0750231146812439, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 6, 2, 6, 5, 1, 1, 8, 5, 8, 9], [2, 2, 2, 1, 3, 2, 3, 0, 0, 3, 1, 0, 5, 0], [84, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 6, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [42, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 14, 14, 8, 6, 0, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.subtract(beta, alpha))), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, beta)))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.square(alpha), tf.math.pow(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 8, 3, 2, 0, 5, 1, 1, 8, 5, 8, 9], [2, 2, 2, 2, 3, 2, 3, 0, 0, 3, 1, 0, 5, 0], [84, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [5, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [42, 57]], "fitness": -0.03857142850756645, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302741444074656, 2.301375422857504, 2.3019276650007674, 2.3029838310902253, 2.303442951867987, 2.3020443797284713, 2.3025817206318133, 2.304016237765287, 2.302636307401585, 2.3032537886274804, 2.3019160242474954, 2.301439988567467, 2.301820229608558, 2.3021665268790814, 2.3029703236747303, 2.304131089042852, 2.3019482654870824, 2.3029649338276945, 2.302541497676065, 2.3021562567413474, 2.3015073497360565, 2.301631068887334, 2.302400477668471, 2.302049678881344], "accuracy": [0.08572183549404144, 0.09259014576673508, 0.09338264167308807, 0.09100515395402908, 0.08836349099874496, 0.09325055778026581, 0.09245806187391281, 0.08492933213710785, 0.0866464152932167, 0.09179764986038208, 0.08321225643157959, 0.09509972482919693, 0.09100515395402908, 0.09285431355237961, 0.09391097724437714, 0.0874389111995697, 0.09047681838274002, 0.09311848133802414, 0.09285431355237961, 0.09285431355237961, 0.09351472556591034, 0.08875974267721176, 0.09153348207473755, 0.09192973375320435], "val_loss": [1.9712032590593611, 1.9711813926696777, 1.971153667994908, 1.9711236953735352, 1.9710900442940849, 1.971064567565918, 1.9710362979343958, 1.9710070746285575, 1.9709764208112444, 1.9709487642560686, 1.9709206989833288, 1.9708935873849052, 1.9708692005702428, 1.9708421570914132, 1.9708184514726912, 1.9707904543195451, 1.9707649775913783, 1.9707362311226981, 1.9707042149135046, 1.9706812586103166, 1.9706578254699707, 1.9706367765154158, 1.9706157275608607, 1.9705888203212194], "val_accuracy": [0.03966666758060455, 0.0403333343565464, 0.0403333343565464, 0.04066666588187218, 0.0416666679084301, 0.0416666679084301, 0.0416666679084301, 0.0416666679084301, 0.04233333468437195, 0.041999999433755875, 0.04233333468437195, 0.04266666620969772, 0.0430000014603138, 0.04333333298563957, 0.043666668236255646, 0.04399999976158142, 0.04399999976158142, 0.044333335012197495, 0.04466666653752327, 0.044333335012197495, 0.04466666653752327, 0.044333335012197495, 0.044333335012197495, 0.044333335012197495]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 8, 3, 2, 0, 5, 1, 1, 8, 5, 8, 9], [2, 2, 2, 2, 3, 2, 3, 0, 0, 3, 1, 0, 5, 0], [84, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [42, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3027582716208093, 2.301425383059797, 2.302008334687515, 2.3031111590819133, 2.303619711485049, 2.302241974408522], "accuracy": [0.08558975160121918, 0.09259014576673508, 0.09351472556591034, 0.09113723784685135, 0.08849557489156723, 0.09285431355237961], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 8, 3, 2, 0, 5, 1, 1, 8, 5, 8, 9], [2, 2, 2, 2, 1, 2, 3, 0, 0, 3, 1, 0, 5, 0], [84, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [42, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.sqrt(beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.negative(tf.math.pow(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.3027582716208093, 2.301425383059797, 2.302008334687515, 2.3031111590819133, 2.303619711485049, 2.302241974408522], "accuracy": [0.08558975160121918, 0.09259014576673508, 0.09351472556591034, 0.09113723784685135, 0.08849557489156723, 0.09285431355237961], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 8, 3, 2, 0, 5, 1, 1, 8, 5, 8, 9], [2, 2, 2, 2, 3, 2, 3, 0, 0, 3, 1, 0, 5, 0], [84, 18, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [42, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3027582716208093, 2.301425383059797, 2.302008334687515, 2.3031111590819133, 2.303619711485049, 2.302241974408522], "accuracy": [0.08558975160121918, 0.09259014576673508, 0.09351472556591034, 0.09113723784685135, 0.08849557489156723, 0.09285431355237961], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]