[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 8, 3, 2, 3, 2, 1, 5, 2, 9, 6, 8, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8277142643928528, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.135853438880607, 1.7441548941205, 1.1233113423125651, 0.9951909548728347, 0.8748090121850298, 0.7795570023685572, 0.7369980248383339, 0.692493263110981, 0.6453191332293696, 0.6578159040904646, 0.6181941797562941, 0.58815830061858, 0.5747378344202653, 0.559679074963527, 0.5682915531176586, 0.5366130457845866, 0.5143848248697023, 0.5275078782898607, 0.4904506366565605, 0.49310553163632487, 0.48902813852691474, 0.4739134970507712, 0.45887827715381196, 0.46056667299727877, 0.4487988846594269, 0.4199341083829429, 0.43621563445370765, 0.4217305177624168, 0.41882162817780055, 0.38627485309562287, 0.4114502667554098, 0.40447100325031304, 0.3822467881163208], "accuracy": [0.28384625911712646, 0.43204331398010254, 0.5913353562355042, 0.6342623233795166, 0.6737551093101501, 0.7082287669181824, 0.7214370369911194, 0.7294940948486328, 0.7584202885627747, 0.7465327978134155, 0.7606657147407532, 0.7858935594558716, 0.7804781198501587, 0.7880068421363831, 0.7910447716712952, 0.7967243194580078, 0.8070268034934998, 0.7985734939575195, 0.8162726163864136, 0.817461371421814, 0.8171972036361694, 0.8208954930305481, 0.8241975903511047, 0.8290846943855286, 0.8341038227081299, 0.8417646288871765, 0.8380662798881531, 0.8422929644584656, 0.8445383906364441, 0.856689989566803, 0.845859169960022, 0.8486329317092896, 0.8642187118530273], "val_loss": [1.5820984159197127, 0.9218405996050153, 0.8061662571770805, 0.6922355890274048, 0.6537759133747646, 0.5894022839409965, 0.5469168084008353, 0.5282162087304252, 0.5773578882217407, 0.4890675033841814, 0.47261341980525423, 0.4835578884397234, 0.44894891125815256, 0.45456225531441824, 0.4674896683011736, 0.4345763070242746, 0.4781106540134975, 0.42629691532679964, 0.4105149337223598, 0.41633994238717215, 0.3986545034817287, 0.42785818236214773, 0.40605935028621126, 0.39014311347688946, 0.37785119669778006, 0.411175148827689, 0.38925289256232126, 0.3626579982893808, 0.3558439782687596, 0.39515051671436857, 0.3772638865879604, 0.35628614255360197, 0.35817779813494], "val_accuracy": [0.4309999942779541, 0.6056666374206543, 0.6470000147819519, 0.6919999718666077, 0.7126666903495789, 0.7436666488647461, 0.7720000147819519, 0.7723333239555359, 0.7396666407585144, 0.7846666574478149, 0.79666668176651, 0.7870000004768372, 0.7973333597183228, 0.8003333210945129, 0.7850000262260437, 0.8059999942779541, 0.7710000276565552, 0.8116666674613953, 0.8173333406448364, 0.8130000233650208, 0.8223333358764648, 0.8033333420753479, 0.8163333535194397, 0.8259999752044678, 0.8293333053588867, 0.8159999847412109, 0.8343333601951599, 0.847000002861023, 0.8416666388511658, 0.8346666693687439, 0.8336666822433472, 0.8450000286102295, 0.8433333039283752]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [5, 8, 3, 2, 3, 2, 1, 5, 2, 9, 6, 8, 9], [3, 0, 3, 2, 1, 0, 1, 0, 0, 3, 1, 0, 5, 0], [22, 67, 67, 77, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8199999928474426, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1358871557898036, 1.7468255914795936, 1.2051775596397207, 0.9731183624648619, 0.9064467172848786, 0.7672328321909498, 0.7530021529234853, 0.7000458441343069, 0.6687247185123878, 0.6250908568613659, 0.6135780967347862, 0.588371746851201, 0.5682710541505477, 0.5802747528503568, 0.5476313371227528, 0.528615318548725, 0.5358103822093551, 0.5234047041640322, 0.48834782700260887, 0.4797947208060407, 0.4943102976515655, 0.47790493738885886, 0.4480912229010552, 0.45279168912983686, 0.44541733554010743, 0.4430709793394142, 0.43033228802202306, 0.42966222328485326, 0.41017221721518293, 0.39226636983352864, 0.41937424409595764, 0.4135376688881699, 0.37227194542819325, 0.39445782273421276, 0.38262681913980484, 0.3864768939743488, 0.36786517182030715], "accuracy": [0.28384625911712646, 0.42530709505081177, 0.5691454410552979, 0.6355831623077393, 0.6573768258094788, 0.71100252866745, 0.7103421092033386, 0.7322678565979004, 0.7453441023826599, 0.7638356685638428, 0.7638356685638428, 0.7897239327430725, 0.7872143983840942, 0.7757231593132019, 0.7987055778503418, 0.8025360107421875, 0.7993659973144531, 0.802800178527832, 0.8170651197433472, 0.8240655064582825, 0.8144234418869019, 0.8190463781356812, 0.8284242749214172, 0.8325188159942627, 0.837141752243042, 0.8366134166717529, 0.8405758738517761, 0.8422929644584656, 0.8507462739944458, 0.8580108284950256, 0.8454629778862, 0.8442742228507996, 0.8648791313171387, 0.8548408150672913, 0.8568220734596252, 0.8529917001724243, 0.8614450097084045], "val_loss": [1.5821054662976946, 0.9133870261056083, 0.7398500272205898, 0.799975940159389, 0.6696234089987618, 0.635760920388358, 0.5499080419540405, 0.5394993339266095, 0.5287983587809971, 0.5152224472590855, 0.4928825582776751, 0.5059899262019566, 0.4470135654721941, 0.45690345764160156, 0.4362333672387259, 0.4434525966644287, 0.46822997501918245, 0.4265317405973162, 0.4059899364198957, 0.41788565261023386, 0.3987225294113159, 0.4262062651770456, 0.40221392256872995, 0.37852587018694195, 0.373450653893607, 0.4039612753050668, 0.3685869744845799, 0.37083445276532856, 0.3549033658845084, 0.385823164667402, 0.41460154737745014, 0.34884075607572285, 0.37508233955928255, 0.3590355260031564, 0.36486251865114483, 0.34755128622055054, 0.33932178361075266], "val_accuracy": [0.43066665530204773, 0.6256666779518127, 0.6676666736602783, 0.6583333611488342, 0.7106666564941406, 0.7133333086967468, 0.7676666378974915, 0.7580000162124634, 0.7586666941642761, 0.7519999742507935, 0.7820000052452087, 0.7706666588783264, 0.8009999990463257, 0.7996666431427002, 0.8016666769981384, 0.8083333373069763, 0.7916666865348816, 0.815666675567627, 0.8146666884422302, 0.815666675567627, 0.8233333230018616, 0.8056666851043701, 0.8166666626930237, 0.8339999914169312, 0.8410000205039978, 0.8243333101272583, 0.8399999737739563, 0.8416666388511658, 0.8483333587646484, 0.8296666741371155, 0.8106666803359985, 0.8516666889190674, 0.8333333134651184, 0.8396666646003723, 0.8399999737739563, 0.8489999771118164, 0.8513333201408386]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 8, 3, 2, 3, 2, 1, 5, 2, 9, 6, 8, 9], [2, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8154285550117493, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 7, 6, 4, 2, 2, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), sigma)))), tf.math.add(sigma, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1358292575808973, 1.7421800457113343, 1.2100799137874287, 1.0090456111256976, 0.8850054543457011, 0.7773056698513069, 0.7362743620355415, 0.7188357813499072, 0.6747456004417741, 0.6282499383359049, 0.6338915274426953, 0.5929656535753123, 0.5796155899097859, 0.5573657305327862, 0.5513326398070777, 0.5368356337526519, 0.5326489329873422, 0.5281367812489223, 0.4861822047285227, 0.4846306824019682, 0.4971313664012849, 0.4787882290078885, 0.4457393069316714, 0.4553457735874681, 0.4565856662038736, 0.41603494136482416, 0.442474195926795, 0.4197315344949361, 0.43342006227375257, 0.3966635863550461, 0.40552634676654403, 0.39331034920974856, 0.3927059820252261, 0.3832391018739009, 0.38141259378634895, 0.38309444614043087, 0.37245637227625755], "accuracy": [0.28397834300994873, 0.4251750111579895, 0.5715228915214539, 0.6225069165229797, 0.6775855422019958, 0.7020208835601807, 0.715889573097229, 0.7202483415603638, 0.7446836829185486, 0.7601373791694641, 0.7559106945991516, 0.7773081660270691, 0.7807422876358032, 0.7935543656349182, 0.7923656105995178, 0.7979130744934082, 0.7996301651000977, 0.8020076751708984, 0.8166688680648804, 0.8228767514228821, 0.8138951063156128, 0.819970965385437, 0.8339717388153076, 0.83119797706604, 0.8317263126373291, 0.8441421389579773, 0.8360850811004639, 0.8448025584220886, 0.8387266993522644, 0.852859616279602, 0.8488970994949341, 0.8524633646011353, 0.8524633646011353, 0.8584070801734924, 0.8570862412452698, 0.8602562546730042, 0.8577466607093811], "val_loss": [1.5823986189705985, 0.8979776586805072, 1.0157770429338728, 0.6968393836702619, 0.6507230997085571, 0.5981841257640294, 0.5597682169505528, 0.5471984658922467, 0.5365743807383946, 0.5057655232293266, 0.47910611970084055, 0.48391497135162354, 0.4852003540311541, 0.47426964555467876, 0.45054636682782856, 0.4482252597808838, 0.4709827389035906, 0.4191324625696455, 0.40570402996880667, 0.40249593768801006, 0.4074922204017639, 0.4186806082725525, 0.39349753516060965, 0.3967450261116028, 0.38802893672670635, 0.42492405005863737, 0.3695098502295358, 0.3734115021569388, 0.35181643281664166, 0.3692441497530256, 0.382808472429003, 0.34903742585863384, 0.356493490082877, 0.3569249595914568, 0.35830263580594746, 0.3422462259020124, 0.3371628522872925], "val_accuracy": [0.4300000071525574, 0.6413333415985107, 0.5720000267028809, 0.6919999718666077, 0.7009999752044678, 0.7263333201408386, 0.7603333592414856, 0.7543333172798157, 0.7649999856948853, 0.7763333320617676, 0.7876666784286499, 0.7829999923706055, 0.7796666622161865, 0.7900000214576721, 0.7996666431427002, 0.8036666512489319, 0.7853333353996277, 0.8149999976158142, 0.8193333148956299, 0.8233333230018616, 0.8180000185966492, 0.8133333325386047, 0.8259999752044678, 0.82833331823349, 0.8276666402816772, 0.8100000023841858, 0.8420000076293945, 0.8339999914169312, 0.8526666760444641, 0.8379999995231628, 0.8333333134651184, 0.8543333411216736, 0.846666693687439, 0.8443333506584167, 0.843666672706604, 0.8489999771118164, 0.8543333411216736]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [4, 5, 3, 2, 3, 2, 0, 5, 2, 1, 6, 8, 9, 7, 4, 2], [1, 0, 3, 2, 3, 0, 3, 2, 0, 3, 1, 0, 5, 0], [84, 73, 67, 77, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.18971428275108337, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 13, 8, 3, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.square(tf.math.multiply(alpha, tf.math.add(beta, tf.math.add(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta))))), tf.math.square(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.sqrt(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), grad)))))))), beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.8586385710805304, 2.305370739721556, 2.2332875110438284, 2.2993113201654283, 2.276148145886271, 2.3116895001184323, 2.304019477908732, 2.3032136238671534, 2.303457101763452], "accuracy": [0.19852067530155182, 0.10870426893234253, 0.20591731369495392, 0.1146479994058609, 0.2316734939813614, 0.10685510188341141, 0.09800554811954498, 0.09906221181154251, 0.09787346422672272], "val_loss": [1.9799683434622628, 1.9641610554286413, 1.976041657584054, 1.9167111260550362, 1.9960593496050154, 1.9750120980398995, 1.9740448679242815, 1.9736763409205846, 1.9737862178257533], "val_accuracy": [0.09799999743700027, 0.13899999856948853, 0.09833333641290665, 0.15800000727176666, 0.10066666454076767, 0.09833333641290665, 0.09833333641290665, 0.1003333330154419, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1], [4, 3, 3, 2, 3, 2, 0, 5, 2, 1, 6, 8, 2, 7, 4, 2], [3, 0, 3, 2, 1, 0, 1, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 77, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.1371428519487381, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302140149363532, 2.296496479439776, 2.3140687550756485, 2.1034902215019713, 2.1683829781118242, 2.264028857302562, 2.269659648655176, 2.1907804659439227, 2.176171577082271], "accuracy": [0.2769779562950134, 0.22295601665973663, 0.12759213149547577, 0.26363757252693176, 0.2856954038143158, 0.2028794139623642, 0.13181878626346588, 0.17382116615772247, 0.1846519559621811], "val_loss": [1.944136687687465, 2.015468120574951, 1.7995623861040388, 1.5287362848009383, 1.7413997309548515, 1.9724134717668806, 1.681790896824428, 1.7335642405918665, 1.6701548780713762], "val_accuracy": [0.20000000298023224, 0.09933333098888397, 0.281333327293396, 0.37033334374427795, 0.2763333320617676, 0.1080000028014183, 0.23933333158493042, 0.23199999332427979, 0.26600000262260437]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [4, 3, 3, 2, 5, 2, 0, 5, 8, 1, 6, 8, 9, 7, 4, 2], [3, 0, 3, 2, 1, 0, 1, 0, 0, 3, 1, 0, 5, 0], [22, 67, 67, 77, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [5, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.12399999797344208, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 9, 6, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(grad, tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32))), tf.math.add(grad, tf.math.negative(tf.math.add(beta, beta))))), tf.math.square(tf.math.add(beta, alpha))), tf.math.sqrt(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.3006923905673546, 2.300846981161448, 2.302474747433434, 2.3027326054876003, 2.303463584412169, 2.3108507386130617], "accuracy": [0.09866596013307571, 0.0816272646188736, 0.07687227427959442, 0.09734513610601425, 0.09430722147226334, 0.09787346422672272], "val_loss": [1.969062055860247, 1.9736339024135046, 1.97359071459089, 1.9739617620195662, 1.975156034742083, 1.9988147871834892], "val_accuracy": [0.1146666631102562, 0.04100000113248825, 0.10633333027362823, 0.09233333170413971, 0.10000000149011612, 0.0989999994635582]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [5, 9, 3, 1, 9, 8, 1, 9, 8, 5, 9, 9], [3, 0, 3, 2, 1, 0, 1, 0, 0, 3, 1, 0, 5, 0], [22, 67, 67, 77, 53, 45], [0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 5, 0, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [22, 57]], "fitness": -0.11800000071525574, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 2, 0, 1, 7, 6, 4, 2, 2, 6, 4, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), sigma)))), tf.math.add(sigma, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.negative(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [3.6966356959687467, 3.370142834770083, 2.7773855601350914, 3.2454509550884905, 2.393184528028362, 2.3636385102738733, 2.3469360200972402], "accuracy": [0.2052568942308426, 0.10659094154834747, 0.10976093262434006, 0.1014397069811821, 0.10249637067317963, 0.09972262382507324, 0.10196803510189056], "val_loss": [2.1071716036115373, 2.238677501678467, 6.276802062988281, 2.0210305622645786, 2.018460614340646, 1.9955346243722099, 2.0142957142421176], "val_accuracy": [0.10066666454076767, 0.12800000607967377, 0.11766666918992996, 0.09933333098888397, 0.10000000149011612, 0.10000000149011612, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [5, 9, 3, 1, 9, 8, 1, 9, 8, 5, 9, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 24, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1], [2, 1, 1, 3, 7], [1, 0], [88, 19], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10285714268684387, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [4.50947878077644, 3.746835866230763, 2.6415212514015978, 2.548688380190127, 2.5282442362206785, 2.527239837981549, 2.5650429126687606], "accuracy": [0.2067098170518875, 0.107647605240345, 0.11795007437467575, 0.09959053993225098, 0.09509972482919693, 0.09826971590518951, 0.10236428678035736], "val_loss": [2.170382159096854, 2.19602632522583, 2.0028834342956543, 2.0048598561968123, 2.332448891230992, 2.076447010040283, 1.9964498792375838], "val_accuracy": [0.09933333098888397, 0.12566666305065155, 0.10000000149011612, 0.09799999743700027, 0.09799999743700027, 0.09933333098888397, 0.10566666722297668]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [5, 9, 3, 1, 9, 8, 1, 9, 8, 5, 9, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 24, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [59, 57]], "fitness": -0.10085714608430862, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3.130327579666831, 34.34284865999455, 1.0941149440957532e+32, 3.1242748830359703, 3.1380204589784797, 2.9459652633651876, 3.058805085507051], "accuracy": [0.23457930982112885, 0.1406683325767517, 0.10685510188341141, 0.10474177449941635, 0.09959053993225098, 0.1022322028875351, 0.09642054885625839], "val_loss": [2.1753948075430736, 2683.4440569196427, 2.759425708225795, 2.774689265659877, 2.0641350064958846, 2.7444007056100026, 2.2744478498186385], "val_accuracy": [0.15566666424274445, 0.16300000250339508, 0.10066666454076767, 0.09966666996479034, 0.10366666316986084, 0.09833333641290665, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 8, 3, 2, 3, 2, 1, 5, 2, 9, 6, 8, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [2, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 6, 3, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3020458769379446, 2.3022677985637134, 2.3028289484168405, 2.3051439570146166, 2.3161299780391036, 2.3706893799657975], "accuracy": [0.10342095047235489, 0.10447761416435242, 0.10685510188341141, 0.10236428678035736, 0.10579843819141388, 0.09998679161071777], "val_loss": [1.9737227303641183, 1.973959514072963, 1.975041116986956, 1.9796996116638184, 2.0016896384102956, 2.1161627088274275], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09799999743700027, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 3, 3, 2, 3, 2, 1, 5, 2, 9, 6, 8, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 2, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 7, 6, 4, 2, 2, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), sigma)))), tf.math.add(sigma, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07740060985088348, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [5, 3, 3, 2, 3, 2, 1, 5, 2, 9, 6, 8, 9], [0, 0, 3, 2, 1, 0, 1, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 77, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [0, 0, 0, 2, 3, 3, 2], [13, 57, 81]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 7, 4, 3, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [3.031538802335732, 10.309581532123744, 27.325732926336087, 55.479726642996106, 97.94965576083196, 155.23783748547604], "accuracy": [0.10130762308835983, 0.09959053993225098, 0.10302469879388809, 0.09853387624025345, 0.10170386731624603, 0.10500594228506088], "val_loss": [3.8951520919799805, 11.777986526489258, 26.243104117257253, 48.677201407296316, 80.70683942522321, 124.18933977399554], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 8, 3, 2, 3, 2, 1, 5, 2, 9, 6, 8, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 47, 79, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [4, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 7, 6, 4, 2, 2, 3, 1, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), sigma)))), tf.math.add(sigma, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [6, 8, 3, 2, 3, 2, 1, 5, 2, 9, 6, 8, 9, 8], [3, 3, 3, 2, 3, 2, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 2, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [4, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [45, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 14, 7, 2, 1, 0, 0, 0, 0, 8, 4, 4, 2], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.square(grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))), grad), tf.math.divide_no_nan(tf.math.add(beta, beta), grad))), tf.math.sqrt(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.sqrt(beta)))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(alpha, tf.math.square(tf.math.pow(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), beta)", "other_info": {"loss": [2.3023993773719242, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09721305221319199, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 3, 3, 2, 3, 2, 1, 5, 2, 9, 6, 8, 9], [3, 3, 3, 2, 3, 1, 3, 0, 0, 3, 1, 0, 5, 0], [96, 2, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [26, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 18, 18, 10, 8, 2, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.multiply(tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.subtract(grad, tf.math.add(beta, grad)), tf.math.add(beta, grad)), beta)), tf.math.square(tf.math.add(beta, grad))), tf.math.add(tf.math.add(beta, alpha), grad)), tf.math.add(beta, tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3023993773719242, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09721305221319199, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 9, 3, 1, 9, 8, 1, 9, 8, 5, 9, 9], [3, 0, 3, 2, 1, 0, 1, 0, 0, 3, 1, 0, 5, 0], [22, 67, 67, 77, 53, 45], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 9, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 0, 5, 5, 4, 1, 2, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2207.1641327966995, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.1010434553027153, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [884707.0535714285, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 9, 3, 1, 9, 8, 1, 9, 8, 5, 9, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 0, 1], [2, 1, 1, 3, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 2, 2, 2, 0, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [5, 9, 1, 9, 9, 6, 1, 9, 8, 5, 6, 9], [3, 0, 3, 2, 1, 0, 1, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 77, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 1, 2, 2, 3, 3, 2], [22, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 13, 7, 6, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.square(tf.math.pow(alpha, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, sigma), sigma))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 8, 3, 2, 3, 2, 1, 5, 2, 9, 6, 8, 9], [1, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [26, 57]], "fitness": -0.07571428269147873, "mapping_values": [1, 1, 1, 0, 1, 0, 20, 20, 12, 8, 3, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(tf.math.add(beta, beta), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.sqrt(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.6951586160645933, 2.7336901427732405, 2.4206096758506774, 2.337863803397962, 2.337435773461014, 2.3435627773941436, 2.334957963865132], "accuracy": [0.20723815262317657, 0.108440101146698, 0.11094967275857925, 0.09906221181154251, 0.10236428678035736, 0.10487385839223862, 0.1010434553027153], "val_loss": [2.134102072034563, 2.0586049216134206, 1.9914247649056571, 1.9904029709952218, 2.0012148448399136, 2.0145652634756908, 2.013305459703718], "val_accuracy": [0.09166666865348816, 0.15266667306423187, 0.10066666454076767, 0.11266666650772095, 0.09799999743700027, 0.09833333641290665, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 3, 3, 2, 3, 2, 1, 5, 2, 9, 6, 8, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.square(alpha), tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3031952755247453, 2.3022719307535313, 2.3036468692853105, 2.304452214778265, 2.306255418390504, 2.3069327254226697], "accuracy": [0.09008057415485382, 0.09338264167308807, 0.08902391046285629, 0.0870426595211029, 0.08651433140039444, 0.08413683623075485], "val_loss": [1.9716331618172782, 1.9720844541277205, 1.9726337705339705, 1.9732442583356584, 1.9738562447684151, 1.9746059009007044], "val_accuracy": [0.03733333200216293, 0.03566666692495346, 0.03200000151991844, 0.030666666105389595, 0.02666666731238365, 0.02566666714847088]}}]