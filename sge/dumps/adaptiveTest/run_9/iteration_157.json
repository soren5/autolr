[{"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [6, 8, 0, 2, 0, 8, 5, 9, 0], [1, 0, 3, 0, 3, 0, 2, 5, 2], [38, 0, 19], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 0, 4, 7, 8, 4], [0, 3, 0, 1, 3, 3], [48, 57]], "fitness": -0.840571403503418, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 8, 4, 4, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), sigma), tf.math.negative(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [2.122576721560733, 1.8547174174945273, 1.4088458440496212, 1.0580749838123265, 0.8497242284189551, 0.8097826335345435, 0.7513375063503676, 0.674783932573807, 0.6287989538296291, 0.6422656384425754, 0.6081939598572741, 0.62473969539206, 0.543028063675542, 0.5693804566587172, 0.5463624303256831, 0.5344571714403764, 0.4897256580247477, 0.5230281289739223, 0.4969950962879119, 0.48517823418086437, 0.4852240455660759, 0.46084635831015125, 0.48715770813798737, 0.47649011511088457, 0.4315889222652464, 0.43953327125073927, 0.44115046877918335, 0.4217462924493224, 0.41770006748726496, 0.4080747794898714, 0.3898238274856187, 0.3974466917891434, 0.39107973823820075, 0.3779825577174101, 0.3717280637161402, 0.36637161646332045, 0.375890810960288, 0.36059473831073213, 0.3489968036821159, 0.37251383121680304, 0.3353159487751324, 0.3490997918718731, 0.3227165474820493, 0.3275773023428493, 0.33050052266803637, 0.3151876194688701, 0.32758048640077203, 0.31515409403693767, 0.31996013549860236, 0.30522900131305825, 0.30064130606054235], "accuracy": [0.28358209133148193, 0.40470215678215027, 0.5077268481254578, 0.6089023947715759, 0.6781138777732849, 0.691850483417511, 0.7152291536331177, 0.7456082701683044, 0.7607977986335754, 0.7526086568832397, 0.7685906887054443, 0.7644960880279541, 0.7897239327430725, 0.7865539789199829, 0.789459764957428, 0.8000264167785645, 0.8173292875289917, 0.802800178527832, 0.8138951063156128, 0.8175934553146362, 0.8214238286018372, 0.8319904804229736, 0.8171972036361694, 0.8201030492782593, 0.8437458872795105, 0.837141752243042, 0.8347642421722412, 0.8467837572097778, 0.8432175517082214, 0.847840428352356, 0.8553691506385803, 0.8553691506385803, 0.8551049828529358, 0.8580108284950256, 0.8609166741371155, 0.8646149635314941, 0.860652506351471, 0.8664641380310059, 0.8696341514587402, 0.8605204224586487, 0.8734645247459412, 0.8767666220664978, 0.882710337638855, 0.8820499181747437, 0.878351628780365, 0.8819178342819214, 0.8741249442100525, 0.8825782537460327, 0.8780874609947205, 0.8850878477096558, 0.8881257176399231], "val_loss": [1.653398105076381, 1.0035068988800049, 0.9151112352098737, 0.6884155103138515, 0.7361570937292916, 0.5885183981486729, 0.5619319336754935, 0.5063080957957676, 0.5260383401598249, 0.47680517605372835, 0.5104332140513829, 0.47101960863385883, 0.5342277458735875, 0.43587848118373324, 0.4477425813674927, 0.43859819003513884, 0.48769385474068777, 0.4079335331916809, 0.41438235555376324, 0.4258424639701843, 0.39761726345334736, 0.4398089987891061, 0.4178207686969212, 0.3850692766053336, 0.42319053411483765, 0.3872806259563991, 0.367077682699476, 0.3807973010199411, 0.38755203996385845, 0.3676378130912781, 0.36624222142355783, 0.3473274196897234, 0.3608618804386684, 0.3685545154980251, 0.3461932965687343, 0.4062991057123457, 0.3357806035450527, 0.3750730071749006, 0.3467285292489188, 0.335358772959028, 0.3711534227643694, 0.3325097220284598, 0.34520540067127775, 0.3506688816206796, 0.3447547810418265, 0.3277597597667149, 0.3833546127591814, 0.33393772159303936, 0.3465077791895185, 0.3350105200495039, 0.34133201837539673], "val_accuracy": [0.36533331871032715, 0.550000011920929, 0.6083333492279053, 0.6936666369438171, 0.6690000295639038, 0.734333336353302, 0.7549999952316284, 0.7753333449363708, 0.7546666860580444, 0.7883333563804626, 0.762333333492279, 0.7913333177566528, 0.7486666440963745, 0.8036666512489319, 0.8040000200271606, 0.8003333210945129, 0.7763333320617676, 0.8190000057220459, 0.8140000104904175, 0.8183333277702332, 0.828000009059906, 0.8153333067893982, 0.8136666417121887, 0.8276666402816772, 0.8176666498184204, 0.8289999961853027, 0.8453333377838135, 0.831333339214325, 0.8360000252723694, 0.8389999866485596, 0.8460000157356262, 0.8473333120346069, 0.8446666598320007, 0.8396666646003723, 0.8463333249092102, 0.8263333439826965, 0.8526666760444641, 0.8320000171661377, 0.8473333120346069, 0.8516666889190674, 0.8370000123977661, 0.8603333234786987, 0.8489999771118164, 0.8533333539962769, 0.8560000061988831, 0.8676666617393494, 0.8353333473205566, 0.8636666536331177, 0.8416666388511658, 0.862333357334137, 0.8579999804496765]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [3, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [6, 8, 0, 2, 0, 8, 5, 9, 0], [1, 0, 3, 0, 3, 0, 2, 5, 2], [38, 0, 19], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [0, 3, 0, 1, 3, 3], [48, 57]], "fitness": -0.8399999737739563, "mapping_values": [1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.1335384290546804, 1.9476396124423723, 1.5311268982618336, 1.5036045008520675, 0.9344588605530305, 0.8219046875816751, 0.7379410584148336, 0.653715523486565, 0.6354526278286436, 0.6112684998073283, 0.6009892064582528, 0.580022614661335, 0.5354396840364327, 0.5757297488204272, 0.5201078394164405, 0.5243093483341904, 0.4887968449151086, 0.477974785313457, 0.48720959237915823, 0.45924217725206345, 0.47214302857947815, 0.4378507900247484, 0.46319109601760977, 0.4509078665274702, 0.43608164407825584], "accuracy": [0.28199708461761475, 0.3899088501930237, 0.478140264749527, 0.49253731966018677, 0.6647734642028809, 0.6992471218109131, 0.7246070504188538, 0.7578919529914856, 0.7598732113838196, 0.7713643908500671, 0.7732135653495789, 0.7839123010635376, 0.802271842956543, 0.7915731072425842, 0.8061022162437439, 0.8029322624206543, 0.8182538747787476, 0.828292191028595, 0.8175934553146362, 0.8278959393501282, 0.8255184292793274, 0.8397833704948425, 0.8318583965301514, 0.8358209133148193, 0.8470479249954224], "val_loss": [1.6713497979300362, 1.1702305589403426, 1.340665238244193, 1.0122713020869665, 0.7338576316833496, 0.6780487980161395, 0.5558158159255981, 0.5300612449645996, 0.5857831069401332, 0.4926116466522217, 0.5436478001730782, 0.45755820614951, 0.48612795557294575, 0.4233011943953378, 0.43472334316798616, 0.42241149289267405, 0.4528651918683733, 0.4259704606873648, 0.4002907616751535, 0.3926240290914263, 0.38326958247593473, 0.41226349558149067, 0.40078669786453247, 0.41652033158711027, 0.37480515241622925], "val_accuracy": [0.34066668152809143, 0.4936666786670685, 0.5546666383743286, 0.5766666531562805, 0.6826666593551636, 0.699999988079071, 0.7493333220481873, 0.7616666555404663, 0.7260000109672546, 0.7803333401679993, 0.7543333172798157, 0.7983333468437195, 0.7763333320617676, 0.8226666450500488, 0.8149999976158142, 0.8159999847412109, 0.815666675567627, 0.8083333373069763, 0.8336666822433472, 0.8413333296775818, 0.8386666774749756, 0.8266666531562805, 0.8263333439826965, 0.8223333358764648, 0.8386666774749756]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [6, 8, 0, 2, 0, 8, 5, 9, 0], [1, 0, 3, 0, 3, 0, 2, 5, 2], [38, 0, 19], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [0, 3, 0, 1, 3, 3], [48, 57]], "fitness": -0.8077142834663391, "mapping_values": [1, 3, 3, 1, 2, 1, 10, 10, 8, 2, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(grad, tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha))), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))), tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.1335605293957154, 1.9798646603026142, 1.5813503148391688, 1.026449751702786, 0.9381307258015186, 0.8104764512737492, 0.6848754679065544, 0.6846325935122044, 0.6135224505044592, 0.6377538064089529, 0.5873546710245487, 0.5954521054431763, 0.5502768434774071, 0.5494263757016791, 0.5239396501588878, 0.5248547966894992, 0.5348099808667109, 0.5037546589027826, 0.48803844245323147, 0.46103854709455067, 0.46539425912109333, 0.449439373191605, 0.46896914617181723, 0.47157395541030245, 0.43288435195226393, 0.4467812016293389, 0.42068677284084277, 0.43334610245136806, 0.4151881727772681, 0.39116575848298885, 0.3895224368079401, 0.39693631565786547, 0.3883714865243131, 0.3893355305688319, 0.3707049829439323, 0.36778019949461194, 0.37957871550692385, 0.36372303036871273, 0.3564290615860749, 0.36534204461460873, 0.34000782168080007, 0.3537192636902275, 0.3310351157586777, 0.32748175199556784, 0.3265992899053463], "accuracy": [0.28199708461761475, 0.3763043284416199, 0.43508124351501465, 0.6184123754501343, 0.6557918190956116, 0.6940959095954895, 0.7413815855979919, 0.735569953918457, 0.7627789974212646, 0.754589855670929, 0.7804781198501587, 0.7786290049552917, 0.7932901978492737, 0.7954035401344299, 0.805177628993988, 0.8018755912780762, 0.8010830879211426, 0.8123101592063904, 0.8175934553146362, 0.829216718673706, 0.8277638554573059, 0.8335754871368408, 0.8269713521003723, 0.8255184292793274, 0.8401796221733093, 0.8333113193511963, 0.8454629778862, 0.8379341959953308, 0.8454629778862, 0.8582749962806702, 0.8551049828529358, 0.856689989566803, 0.8557654023170471, 0.8555012345314026, 0.8589354157447815, 0.8610487580299377, 0.8625016212463379, 0.863558292388916, 0.867520809173584, 0.8648791313171387, 0.8712190985679626, 0.8698983192443848, 0.8745211958885193, 0.880729079246521, 0.880729079246521], "val_loss": [1.670888866697039, 1.5175865037100655, 1.0194422517504012, 0.6456117630004883, 0.6099168402808053, 0.5832524810518537, 0.5564358404704502, 0.5124850102833339, 0.5855708973748344, 0.4945528336933681, 0.4752433981214251, 0.48520149503435406, 0.4987423079354422, 0.4523827007838658, 0.4570822375161307, 0.41576532806668964, 0.42599897725241526, 0.4290193404470171, 0.3936598471232823, 0.4031312210219247, 0.3900948337146214, 0.40383176292691914, 0.4078219107219151, 0.3908935614994594, 0.433681207043784, 0.3655396103858948, 0.36646983453205656, 0.3646683267184666, 0.399922251701355, 0.39860137019838604, 0.36897389377866474, 0.35189919812338694, 0.3737312810761588, 0.3754479033606393, 0.338869001184191, 0.41341874429157804, 0.3400055595806667, 0.36833485535212923, 0.3665293880871364, 0.33614582674843924, 0.37207676683153423, 0.33435286794389996, 0.34774097374507357, 0.3438790355409895, 0.33010188170841764], "val_accuracy": [0.33933332562446594, 0.48233333230018616, 0.5616666674613953, 0.7080000042915344, 0.7136666774749756, 0.7300000190734863, 0.7463333606719971, 0.7576666474342346, 0.7200000286102295, 0.7796666622161865, 0.7953333258628845, 0.7990000247955322, 0.7553333044052124, 0.796999990940094, 0.7956666946411133, 0.8266666531562805, 0.809333324432373, 0.8053333163261414, 0.8286666870117188, 0.8256666660308838, 0.8346666693687439, 0.8309999704360962, 0.8206666707992554, 0.82833331823349, 0.8053333163261414, 0.8416666388511658, 0.8446666598320007, 0.8393333554267883, 0.8389999866485596, 0.824999988079071, 0.8479999899864197, 0.8473333120346069, 0.843666672706604, 0.8383333086967468, 0.8573333621025085, 0.8143333196640015, 0.8546666502952576, 0.8393333554267883, 0.8393333554267883, 0.8610000014305115, 0.8403333425521851, 0.8546666502952576, 0.8413333296775818, 0.8543333411216736, 0.8576666712760925]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 1, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [6, 2, 0, 2, 0, 8, 5, 2, 0], [1, 4, 3, 0, 3, 0, 2, 5, 2], [20, 0, 19], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [1, 0, 0, 1, 3, 3], [51, 57]], "fitness": -0.8048571348190308, "mapping_values": [1, 5, 5, 3, 2, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2841761786121153, 2.144919441218988, 1.6975158059822175, 1.3387545741481426, 1.0381493279411493, 0.9036709138462493, 0.8192808959289171, 0.7894667010061052, 0.7490497713453655, 0.7238594002223616, 0.7022230453683936, 0.6705544338077051, 0.6458242000086181, 0.6307782197137157, 0.6069332977500748, 0.594772461839655, 0.5699723356624463, 0.5571398166475862, 0.5431777387877119, 0.5258708463101229, 0.5149705357964737, 0.5006576710176537, 0.489685210164008, 0.48572371869181064, 0.47493885898980576, 0.4608615755979742, 0.4537294785013729, 0.4411269235785737, 0.4370734821559731, 0.42491655212902923, 0.4172760987672288, 0.4110488944152217, 0.4038044215980664, 0.396379062587307, 0.3920080587572945, 0.38202911483896657, 0.3805136285036342], "accuracy": [0.14159291982650757, 0.3533218801021576, 0.4439307749271393, 0.5387663245201111, 0.6292431354522705, 0.6635847091674805, 0.69673752784729, 0.6929071545600891, 0.7104741930961609, 0.7193237543106079, 0.7351737022399902, 0.7440232634544373, 0.7588165402412415, 0.7630431652069092, 0.7691190242767334, 0.7781006693840027, 0.7799497842788696, 0.7917051911354065, 0.7969884872436523, 0.8034605979919434, 0.804649293422699, 0.8138951063156128, 0.8149517774581909, 0.8215559124946594, 0.8224804997444153, 0.83119797706604, 0.8323867321014404, 0.8392550349235535, 0.8429533839225769, 0.8417646288871765, 0.8428213000297546, 0.845859169960022, 0.8518029451370239, 0.8531237840652466, 0.8562937378883362, 0.8573504090309143, 0.8574824929237366], "val_loss": [1.9051809310913086, 1.6444103377205985, 0.9786108561924526, 0.747893043926784, 0.6907036815370832, 0.6584354979651315, 0.6155443872724261, 0.5936106273106166, 0.5686697959899902, 0.5597737176077706, 0.5408715009689331, 0.524000883102417, 0.5102791615894863, 0.49358984402247835, 0.4813575744628906, 0.46874402250562397, 0.46118024417332243, 0.45161121232169016, 0.4419947862625122, 0.42747684035982403, 0.418464115687779, 0.4085369621004377, 0.40443391459328787, 0.3997836538723537, 0.39139279297419954, 0.3872499465942383, 0.38331506081989836, 0.37734962361199514, 0.37417387110846384, 0.37241144691194805, 0.3664494241986956, 0.36248196022851126, 0.3636648314339774, 0.3600359048162188, 0.35490431104387554, 0.35302421876362394, 0.3500455107007708], "val_accuracy": [0.40433332324028015, 0.4833333194255829, 0.6449999809265137, 0.6903333067893982, 0.6966666579246521, 0.7146666646003723, 0.7336666584014893, 0.7283333539962769, 0.7426666617393494, 0.746666669845581, 0.7666666507720947, 0.7609999775886536, 0.7703333497047424, 0.7806666493415833, 0.7889999747276306, 0.7940000295639038, 0.793666660785675, 0.809333324432373, 0.8086666464805603, 0.8190000057220459, 0.8203333616256714, 0.8220000267028809, 0.8289999961853027, 0.8309999704360962, 0.8303333520889282, 0.8363333344459534, 0.8360000252723694, 0.8413333296775818, 0.8399999737739563, 0.8450000286102295, 0.8399999737739563, 0.8489999771118164, 0.8443333506584167, 0.846666693687439, 0.8450000286102295, 0.8456666469573975, 0.8479999899864197]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [5, 1, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 2, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [3, 42, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [6, 2, 2, 2, 6, 5, 1, 9], [0, 4, 3, 0, 0], [50, 7, 47], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [35, 83]], "fitness": -0.8019999861717224, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 6, 3, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(sigma, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.260364272228841, 2.0689100425130955, 1.6346788686957137, 1.2665306965688499, 1.092554244044403, 0.998715460190227, 0.9401415511759091, 0.8831014854088278, 0.8312456853212445, 0.8123965528678617, 0.7954856313734542, 0.7828970283108491, 0.7375861344131512, 0.7511431284789097, 0.7214869966895557, 0.7155422761125052, 0.6947638225152335, 0.6845977712915149, 0.678857232939849, 0.6670485053394984, 0.6725571823079178, 0.6468786807375781, 0.6622187740940381, 0.640592690968101, 0.6378745383763468, 0.6366857889463495, 0.6304279255152158, 0.6143090796036066, 0.6185487937209251, 0.6059773184399422, 0.6112066771234299, 0.5986099639006295, 0.5950777150809631, 0.5941180663416807, 0.5966750042880327, 0.5789192835762831, 0.5865871282128327, 0.578666100176397, 0.5723260020724755, 0.5718310248614019, 0.5693011640352957, 0.5764946556125948, 0.5611699561180928, 0.5644172902797522, 0.5593125356848151, 0.5575397586180093, 0.5543184976662154, 0.5519997571295971, 0.5413318043135539, 0.5489613782255767, 0.5487810674754148, 0.5422517618546003], "accuracy": [0.19442610442638397, 0.39004093408584595, 0.49253731966018677, 0.564258337020874, 0.6123365759849548, 0.6497160196304321, 0.663848876953125, 0.6782459616661072, 0.6942279934883118, 0.7022850513458252, 0.7119271159172058, 0.7149649858474731, 0.7317395210266113, 0.7277770638465881, 0.7339849472045898, 0.7333245277404785, 0.7412495017051697, 0.7506273984909058, 0.7461365461349487, 0.7526086568832397, 0.7510236501693726, 0.7556465268135071, 0.7449478507041931, 0.7650244235992432, 0.7668735980987549, 0.76106196641922, 0.7651565074920654, 0.7725531458854675, 0.7701756954193115, 0.7733456492424011, 0.7746664881706238, 0.7765156626701355, 0.7781006693840027, 0.7799497842788696, 0.7770439982414246, 0.7844406366348267, 0.7808743715286255, 0.7841764688491821, 0.7865539789199829, 0.7880068421363831, 0.7876105904579163, 0.7907806038856506, 0.7926297783851624, 0.7906485199928284, 0.7943468689918518, 0.7922335267066956, 0.7952714562416077, 0.7930260300636292, 0.8017435073852539, 0.7959318161010742, 0.7996301651000977, 0.7991018295288086], "val_loss": [1.8585024561200822, 1.5348388126918249, 1.0671264444078719, 0.852207967213222, 0.7461702483040946, 0.7150730746132987, 0.703198994909014, 0.6259476116725377, 0.6153395175933838, 0.5968776260103498, 0.5877336944852557, 0.5719847849437169, 0.5723247698375157, 0.548468998500279, 0.5438434055873326, 0.552455220903669, 0.5279701948165894, 0.5195338385445731, 0.5170663935797555, 0.5144633906228202, 0.5107895306178502, 0.5124496221542358, 0.506321634565081, 0.5017388377870832, 0.5068182093756539, 0.4884860174996512, 0.4877112933567592, 0.487492493220738, 0.49410082612718853, 0.47974981580461773, 0.48382346970694406, 0.476697496005467, 0.47560833181653706, 0.4673875059400286, 0.4696664639881679, 0.4746115037373134, 0.463672365461077, 0.4608476161956787, 0.45836966378348215, 0.46231562750680105, 0.45848468371800016, 0.45257326534816195, 0.4512977089200701, 0.4504936933517456, 0.4538522788456508, 0.44103314195360455, 0.44890548501695904, 0.44367590972355436, 0.46527208600725445, 0.44179093837738037, 0.43896945885249544, 0.4360365867614746], "val_accuracy": [0.4273333251476288, 0.5546666383743286, 0.6226666569709778, 0.6706666946411133, 0.6953333616256714, 0.6956666707992554, 0.6916666626930237, 0.7383333444595337, 0.7406666874885559, 0.7513333559036255, 0.7476666569709778, 0.7643333077430725, 0.7506666779518127, 0.7649999856948853, 0.7710000276565552, 0.7440000176429749, 0.7776666879653931, 0.7746666669845581, 0.7793333530426025, 0.7799999713897705, 0.7796666622161865, 0.777999997138977, 0.7820000052452087, 0.7829999923706055, 0.7713333368301392, 0.7860000133514404, 0.7960000038146973, 0.7926666736602783, 0.7889999747276306, 0.7910000085830688, 0.7976666688919067, 0.7953333258628845, 0.7926666736602783, 0.7979999780654907, 0.7923333048820496, 0.7953333258628845, 0.7960000038146973, 0.7983333468437195, 0.8040000200271606, 0.7996666431427002, 0.8066666722297668, 0.8056666851043701, 0.8040000200271606, 0.8033333420753479, 0.8046666383743286, 0.8073333501815796, 0.8140000104904175, 0.8109999895095825, 0.7919999957084656, 0.8116666674613953, 0.8090000152587891, 0.8080000281333923]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [5, 1, 4, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1], [6, 2, 8, 1, 0, 8, 5, 9, 0], [3, 4, 3, 0, 3, 0, 2, 5, 2], [38, 89, 19], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [35, 57]], "fitness": -0.7985714077949524, "mapping_values": [1, 2, 2, 1, 1, 0, 11, 11, 7, 4, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.negative(grad)), tf.math.sqrt(tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.square(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.258154484668601, 2.0597286976371003, 1.6231921358886978, 1.2720076454282516, 1.0966115371662282, 0.996638797057256, 0.9421024376438153, 0.897059248234098, 0.8597263849217737, 0.8355003014421419, 0.8091753379716975, 0.7736885617784206, 0.7715699731508471, 0.7641446613963128, 0.7425120985503242, 0.7267484091622812, 0.7282329200753572, 0.7145939897615455, 0.7050677372747645, 0.6927439484220249, 0.6818640809080557, 0.6751301309782454, 0.6638659460669606, 0.6587018828271733, 0.6550617286116928, 0.6526699204486454, 0.643076263682056, 0.6323243817003286, 0.6363397694896823, 0.6187110558209277, 0.6262423730781443, 0.6260420837265043, 0.6129526716606917, 0.6099068364683253, 0.6086661642915018, 0.5983111834356011, 0.6038720174441012, 0.6060903402934252], "accuracy": [0.19495442509651184, 0.3803988993167877, 0.4905560612678528, 0.5651829242706299, 0.6188086271286011, 0.6485272645950317, 0.6725663542747498, 0.6818121671676636, 0.6951525807380676, 0.7004358768463135, 0.7100779414176941, 0.7232862114906311, 0.7235503792762756, 0.7190595865249634, 0.72672039270401, 0.7318716049194336, 0.7358341217041016, 0.7392682433128357, 0.7429665923118591, 0.7494386434555054, 0.7467969655990601, 0.7547219395637512, 0.7582882046699524, 0.7589486241340637, 0.763439416885376, 0.7588165402412415, 0.7605336308479309, 0.7672698497772217, 0.7626469135284424, 0.7712323069572449, 0.7732135653495789, 0.7720248103141785, 0.7751948237419128, 0.7757231593132019, 0.7761194109916687, 0.7788931727409363, 0.7728173136711121, 0.7771760821342468], "val_loss": [1.8547821726117815, 1.524289914539882, 1.063452618462699, 0.8519084283283779, 0.752099905695234, 0.6896953412464687, 0.6755937848772321, 0.638034292629787, 0.6301850421088082, 0.5997820581708636, 0.5832667010171073, 0.5780127559389386, 0.5647256714957101, 0.5677414281027657, 0.5415394817079816, 0.5401794229234967, 0.5342313732419696, 0.5281825406210763, 0.5323164122445243, 0.5130807161331177, 0.5166135174887521, 0.5025019475391933, 0.49886722224099295, 0.4873717171805246, 0.4972273792539324, 0.4886738232203892, 0.48587192807878765, 0.4838590451649257, 0.4842498983655657, 0.48166695662907194, 0.4756042957305908, 0.4775816372462681, 0.46473617213112967, 0.46448120049067904, 0.46129231793539865, 0.45734310150146484, 0.4690277065549578, 0.4694914477212088], "val_accuracy": [0.41066667437553406, 0.5379999876022339, 0.6060000061988831, 0.6646666526794434, 0.6919999718666077, 0.7153333425521851, 0.7003333568572998, 0.7210000157356262, 0.7176666855812073, 0.737333357334137, 0.7409999966621399, 0.7483333349227905, 0.7486666440963745, 0.7493333220481873, 0.7596666812896729, 0.7680000066757202, 0.7723333239555359, 0.7766666412353516, 0.7609999775886536, 0.7756666541099548, 0.781000018119812, 0.7829999923706055, 0.7873333096504211, 0.7853333353996277, 0.7889999747276306, 0.7839999794960022, 0.7943333387374878, 0.784333348274231, 0.7829999923706055, 0.7836666703224182, 0.7996666431427002, 0.7866666913032532, 0.8026666641235352, 0.7933333516120911, 0.8016666769981384, 0.8003333210945129, 0.7976666688919067, 0.7960000038146973]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [5, 1, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 2, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [6, 2, 0, 2, 0, 8, 5, 9, 0], [0, 4, 1, 0, 0], [38, 0, 19], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [35, 57]], "fitness": -0.795714259147644, "mapping_values": [1, 2, 2, 1, 1, 0, 11, 11, 8, 3, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))))), tf.math.add(beta, tf.math.sqrt(tf.math.square(tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))))))), alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2581557664794376, 2.05972042884872, 1.6232021877778566, 1.271867953602034, 1.0961455377558078, 0.9963667689691115, 0.9416068072615676, 0.8967205470484703, 0.8597783130142022, 0.8346458465478928, 0.8092960560672933, 0.7733943329322229, 0.7709118929190831, 0.7638855986449665, 0.7417327937921119, 0.7266113434201927, 0.7281133598576541, 0.7133539830610154, 0.7041702851910931, 0.6925317241751585, 0.6815770209237112, 0.6754853535463718, 0.6636449194398492, 0.6586594161986045, 0.6554968914713575, 0.6521325263569557, 0.6425275946919944, 0.6341753291841259, 0.634450395101601, 0.619676588257432, 0.6267924489377905, 0.62527433978946, 0.613797414288655, 0.6107621569958471, 0.6080157486533665, 0.5980850724323062, 0.6043977558164076, 0.6065043418036791], "accuracy": [0.1950865089893341, 0.38026681542396545, 0.4912164807319641, 0.5643904209136963, 0.6173557043075562, 0.6489235162734985, 0.6728305220603943, 0.6814159154891968, 0.6955488324165344, 0.6999075412750244, 0.7100779414176941, 0.7234182953834534, 0.7219653725624084, 0.7180029153823853, 0.7284374833106995, 0.7306828498840332, 0.7347774505615234, 0.7396644949913025, 0.7436270117759705, 0.7515519857406616, 0.7485140562057495, 0.7537974119186401, 0.759080708026886, 0.7586844563484192, 0.7626469135284424, 0.7593448758125305, 0.7607977986335754, 0.7683265209197998, 0.763439416885376, 0.7687227725982666, 0.7721568942070007, 0.7724210619926453, 0.7746664881706238, 0.7734777331352234, 0.7736098170280457, 0.7792893648147583, 0.7726852297782898, 0.7771760821342468], "val_loss": [1.854780946459089, 1.524292264665876, 1.0633701256343298, 0.8517313855034965, 0.7519106524331229, 0.6893586260931832, 0.6740004846027919, 0.6355196067265102, 0.62806464944567, 0.6005753789629255, 0.5820211342402867, 0.5770426137106759, 0.5636081695556641, 0.5670802082334246, 0.5409811224256244, 0.5393193449292865, 0.5325506414685931, 0.5286846331187657, 0.5321508305413383, 0.5127145222255162, 0.5172184876033238, 0.5041820662362235, 0.4982073988233294, 0.4880634205681937, 0.4947782244001116, 0.48785092149462017, 0.48482888085501535, 0.4844099283218384, 0.48190936020442415, 0.4829620293208531, 0.4758858340127127, 0.47819062641688753, 0.46628211225782124, 0.46411565371922087, 0.4614678791591099, 0.45654657908848356, 0.4701565844672067, 0.46940204075404574], "val_accuracy": [0.41066667437553406, 0.5373333096504211, 0.606333315372467, 0.6653333306312561, 0.6919999718666077, 0.7166666388511658, 0.7013333439826965, 0.7263333201408386, 0.7193333506584167, 0.7356666922569275, 0.7419999837875366, 0.7486666440963745, 0.7506666779518127, 0.7476666569709778, 0.7636666893959045, 0.7699999809265137, 0.7723333239555359, 0.7736666798591614, 0.7603333592414856, 0.7743333578109741, 0.7806666493415833, 0.7820000052452087, 0.7866666913032532, 0.7846666574478149, 0.7913333177566528, 0.7870000004768372, 0.7940000295639038, 0.7860000133514404, 0.7866666913032532, 0.7823333144187927, 0.8003333210945129, 0.7853333353996277, 0.8016666769981384, 0.7919999957084656, 0.800000011920929, 0.8009999990463257, 0.7956666946411133, 0.79666668176651]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 1, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [38, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [1, 2, 0, 2, 0, 8, 5, 9, 0], [1, 4, 3, 0, 3, 0, 2, 5, 2], [38, 0, 19], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [1, 0, 0, 1, 3, 3], [51, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 5, 1, 2, 11, 11, 7, 4, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(grad)), tf.math.sqrt(tf.math.add(beta, grad))))), tf.math.add(beta, tf.math.square(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3366763775673967, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1935015171766281, 0.10091137140989304, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9794606481279646, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [6, 8, 0, 2, 6, 4, 5, 9, 0], [1, 0, 3, 0, 3, 0, 2, 5, 2], [20, 0, 19], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [0, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 12, 12, 8, 4, 3, 1, 1, 0, 1, 0, 4, 2, 2, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))), grad))))), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [51810720.85457142, 1010692974.3663981, 4660624732.749702, 12898150371.596884, 28034985235.23973, 50829062182.411835], "accuracy": [0.09774138033390045, 0.10328886657953262, 0.09800554811954498, 0.10408136248588562, 0.09787346422672272, 0.09932637959718704], "val_loss": [202891012.57142857, 1621735021.7142856, 5471795638.857142, 12968371053.714285, 25326704347.42857, 43761776347.42857], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 1, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 2, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [3, 42, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [6, 2, 2, 2, 6, 5, 1, 9], [1, 4, 3, 0, 0], [50, 7, 47], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 1, 4, 7, 8, 4], [2, 0, 0, 2, 3, 3], [35, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 12, 6, 6, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), beta), tf.math.add(tf.math.sqrt(sigma), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [5, 1, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1], [6, 2, 2, 2, 6, 5, 1, 9], [0, 4, 3, 0, 0, 5], [50, 7, 47, 16], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [5, 3, 0, 4, 7, 8, 4, 7], [3, 2, 0, 1, 3, 3], [51, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 3, 1, 1, 0, 1, 0, 14, 8, 6, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(grad)))), tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.negative(tf.math.pow(tf.math.add(tf.math.sqrt(sigma), beta), tf.math.pow(tf.math.add(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), alpha), sigma))), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 1, 5, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 2, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [3, 42, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [6, 5, 0, 2, 0, 2, 5, 9, 0], [1, 0, 3, 0, 3, 0, 2, 5, 2], [50, 7, 47], [0, 0, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 0, 4, 7, 8, 4], [3, 0, 0, 0, 3, 3], [35, 57, 27]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 1, 7, 7, 4, 3, 1, 3, 2, 1, 1, 0, 13, 7, 6, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.negative(tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(alpha, tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(sigma, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.pow(tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32), sigma))), sigma)))", "other_info": {"loss": [2.323002911483166, 3858.656512917844, 37064.778993239, 43789.04441908268, 44188.07371518376, 43492.46405022041, 43417.854133989895], "accuracy": [0.120459645986557, 0.09074098616838455, 0.10777968913316727, 0.10711926966905594, 0.10527011007070541, 0.10936468094587326, 0.10659094154834747], "val_loss": [6.546137264796665, 14273.196986607143, 27333.67354910714, 27422.668526785714, 27423.006696428572, 27423.007254464286, 27423.007254464286], "val_accuracy": [0.0010000000474974513, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 1, 9, 0, 8, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [3, 31, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [6, 1, 0, 2, 0, 8, 5, 9, 0], [1, 0, 3, 0, 3, 0, 2, 5, 2], [38, 0, 19], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 4, 7, 8, 4], [1, 0, 0, 1, 3, 3], [51, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 2, 11, 11, 8, 3, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.subtract(tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.negative(grad)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(alpha)))), tf.math.square(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303142096183524, 2.3026708099804596, 2.3027837467294376, 2.3027970098060404, 2.3027078367857303, 2.302779298558636], "accuracy": [0.09206181764602661, 0.09998679161071777, 0.09074098616838455, 0.09998679161071777, 0.09589222073554993, 0.0952318087220192], "val_loss": [1.9736476625714983, 1.9736534527369909, 1.9736801556178503, 1.9736288615635462, 1.9736692564828056, 1.9737059048243932], "val_accuracy": [0.1003333330154419, 0.09833333641290665, 0.09966666996479034, 0.09966666996479034, 0.09933333098888397, 0.09799999743700027]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [6, 2, 8, 1, 0, 6, 5, 9, 0], [0, 4, 3, 2, 0], [38, 0, 19], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 12, 12, 8, 4, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(alpha, tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), grad)))), tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(beta))))), tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [6, 2, 0, 2, 0, 8, 5, 9, 0], [1, 1, 3, 0, 3, 0, 2, 5, 2], [38, 0, 19], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 11, 11, 8, 3, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(alpha)))), tf.math.square(tf.math.add(beta, alpha)))))), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [5, 3, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 2, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [3, 42, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [6, 5, 0, 2, 0, 8, 5, 9, 0], [5, 4, 3, 0, 0], [34, 7, 47], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 0, 4, 7, 8, 4], [1, 0, 0, 1, 3, 3], [63, 92]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 4, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 13, 7, 6, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.negative(grad)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.math.add(tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.pow(alpha, sigma))), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 1, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 66, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [6, 2, 0, 2, 0, 8, 6, 9, 0], [1, 0, 3, 0, 3, 0, 2, 5, 2], [38, 0, 19], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [1, 0, 0, 1, 3, 3], [63, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 8, 3, 3, 12, 12, 7, 5, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.negative(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))))), tf.math.sqrt(tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.divide_no_nan(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3030309299546587, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09787346422672272, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [6, 8, 0, 2, 6, 8, 5, 9, 0], [0, 4, 3, 0, 0], [38, 0, 19], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 3, 0, 1, 3, 3], [35, 57]], "fitness": -0.03971428424119949, "mapping_values": [1, 6, 6, 5, 1, 2, 11, 11, 8, 3, 2, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.sqrt(tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), grad)), tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, sigma))", "other_info": {"loss": [2.304053415633023, 2.304096170498978, 2.3077792163380795, 2.3097432885014415, 2.31434128675258, 2.3162630821467864, 2.3205695697707336, 2.327409907795608, 2.3369805232456033, 2.3506191674634183, 2.420551109559595, 1095811017912.8519, 3.9250822139060286, 8.781189948749454, 14.545493065830644], "accuracy": [0.08440100401639938, 0.09008057415485382, 0.08334434032440186, 0.08057060092687607, 0.07568352669477463, 0.080042265355587, 0.07238145917654037, 0.07317395508289337, 0.07211729139089584, 0.07436270266771317, 0.08572183549404144, 0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9724605424063546, 1.9738236154828752, 1.975318499973842, 1.9774232591901506, 1.9800036294119698, 1.9827031408037459, 1.985677855355399, 1.9902406420026506, 1.9979711941310339, 2.016608170100621, 2.675247464861189, 2.5029822077069963, 5.5138977595738, 10.432649884905134, 15.364268711635045], "val_accuracy": [0.03433333337306976, 0.026333333924412727, 0.02500000037252903, 0.023666666820645332, 0.028999999165534973, 0.03533333167433739, 0.045666664838790894, 0.06366666406393051, 0.08666666597127914, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [5, 1, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0], [6, 2, 2, 2, 6, 5, 1, 9], [0, 4, 3, 0, 0, 5], [50, 7, 47, 98], [1, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 0, 4, 7, 8, 4], [1, 0, 0, 1, 3, 3], [99, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 8, 6, 4, 1, 0, 0, 0, 0, 13, 7, 6, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), grad), tf.math.add(beta, tf.math.square(grad))), tf.math.add(beta, tf.math.subtract(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))), grad)), tf.math.add(beta, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.negative(alpha), tf.math.pow(tf.math.add(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma)))), sigma)", "other_info": {"loss": [2.3034295419172257, 2.301890468931217, 2.3035348713153923, 2.3028212044579464, 2.303808850131062, 2.3024570968062603], "accuracy": [0.08558975160121918, 0.0940430611371994, 0.08902391046285629, 0.09232597798109055, 0.08611807972192764, 0.09391097724437714], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 1, 9, 5, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 2, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 2, 0, 2, 8, 8, 0, 9, 0], [3, 0, 3, 0, 3, 0, 2, 5, 2], [38, 31, 19], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [1, 0, 0, 1, 3, 3], [58, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 11, 11, 8, 3, 2, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(grad)), grad))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(grad, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3034295419172257, 2.301890468931217, 2.3035348713153923, 2.3028212044579464, 2.303808850131062, 2.3024570968062603], "accuracy": [0.08558975160121918, 0.0940430611371994, 0.08902391046285629, 0.09232597798109055, 0.08611807972192764, 0.09391097724437714], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]