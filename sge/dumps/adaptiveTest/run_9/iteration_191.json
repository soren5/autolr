[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1], [3, 8, 6, 0, 6, 2, 1, 9, 2, 0, 8, 9], [3, 2, 3, 3, 0, 1, 2], [57, 49, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.8242856860160828, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 10, 6, 2, 1, 0, 0, 0, 0, 8, 4, 4, 2], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(beta, beta))))), tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.subtract(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.negative(grad), tf.math.add(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)))))), alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [2.098004909774741, 1.8582444059818868, 1.2258642034098584, 0.9919183479717709, 0.8780850390826769, 0.788560733952936, 0.726723407977891, 0.6788106134003652, 0.6497888283691134, 0.6344507946046651, 0.6021045154159127, 0.6065159526640918, 0.5817620947754315, 0.5285968724463547, 0.5535187987627181, 0.5421155156586637, 0.5112573764878745, 0.5083082274375984, 0.48687380616061204, 0.4656012704453968, 0.49167711929858654, 0.4621907868216523, 0.4533169093841827, 0.46672471880267213, 0.41792964834531443, 0.43835214930612965, 0.41843353438024683, 0.40043873957607645, 0.3875555358172691, 0.3984808441300229, 0.383749359146227], "accuracy": [0.3160744905471802, 0.4151366949081421, 0.5744287371635437, 0.635979413986206, 0.6699247360229492, 0.7013604640960693, 0.7226257920265198, 0.7428345084190369, 0.7526086568832397, 0.76106196641922, 0.7754589915275574, 0.7666094303131104, 0.7816668748855591, 0.8020076751708984, 0.789459764957428, 0.7935543656349182, 0.8078193068504333, 0.8132346868515015, 0.8153480291366577, 0.8269713521003723, 0.816008448600769, 0.8259146809577942, 0.8325188159942627, 0.8293488025665283, 0.8426892161369324, 0.8348963260650635, 0.8424250483512878, 0.8536521196365356, 0.8561616539955139, 0.8494254350662231, 0.8582749962806702], "val_loss": [1.7748821803501673, 0.9206909792763847, 1.0867434229169572, 0.8033807788576398, 0.6507703747068133, 0.6030544553484235, 0.5488331317901611, 0.5358657155718122, 0.5625208105359759, 0.5810409954616002, 0.48567235469818115, 0.5105822597231183, 0.4662779058728899, 0.4962524686540876, 0.4250674673489162, 0.45611870288848877, 0.4848355736051287, 0.41997413975851877, 0.3921219621385847, 0.40071870599474224, 0.4211016467639378, 0.3973538279533386, 0.41765815019607544, 0.3831730144364493, 0.3852461150714329, 0.37349378211157663, 0.36564132996967863, 0.3720934050423758, 0.36364232642310007, 0.3719913363456726, 0.37798753806522917], "val_accuracy": [0.25466665625572205, 0.6140000224113464, 0.5199999809265137, 0.6663333177566528, 0.7170000076293945, 0.7323333621025085, 0.7603333592414856, 0.7643333077430725, 0.7473333477973938, 0.7383333444595337, 0.7863333225250244, 0.7726666927337646, 0.7829999923706055, 0.7806666493415833, 0.8199999928474426, 0.7826666831970215, 0.7693333625793457, 0.8100000023841858, 0.8256666660308838, 0.8243333101272583, 0.8116666674613953, 0.8363333344459534, 0.8109999895095825, 0.8289999961853027, 0.8306666612625122, 0.8426666855812073, 0.8410000205039978, 0.8333333134651184, 0.8330000042915344, 0.8396666646003723, 0.8333333134651184]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [7, 9, 7, 0, 6, 4, 1, 2, 5, 8, 5, 4, 3, 3, 9, 3, 8, 3, 4, 3, 6, 5, 3, 0, 8, 1], [2, 0, 3, 3, 3, 2, 2, 1, 3, 0, 4, 0, 2], [23, 73, 47], [0, 0, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [3, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.8199999928474426, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, beta), tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1096753921050277, 1.8114649101790656, 1.38295809596899, 0.9950705601428683, 0.8898369936485805, 0.8048697022902983, 0.7562629665917158, 0.7052998624741047, 0.6680554123350564, 0.6562158222353422, 0.6063998095300519, 0.5826320504987906, 0.6147240719239725, 0.5325743569248876, 0.5782071385936588, 0.5547698762564532, 0.524553540722569, 0.5197027114719023, 0.502620026172034, 0.4822399378562915, 0.4815662447188461, 0.47802816881495475, 0.45809857660454056, 0.4774096665790509, 0.43704519696900745, 0.4243727259081053, 0.41890846085570443, 0.43021919838016404, 0.3977369375949082, 0.4016621276183198, 0.40293944088648403, 0.40108233963446516, 0.3881717895937161, 0.3999752841566091, 0.3782501209799356, 0.37371446725053403, 0.372400946325677, 0.3480304738415892, 0.36985204139043626, 0.34327369059601226, 0.326135336337167, 0.3324337808636469, 0.3313914603521606, 0.32905054939122264, 0.3164275139629282], "accuracy": [0.310130774974823, 0.419759601354599, 0.5403513312339783, 0.6292431354522705, 0.6630563735961914, 0.6902654767036438, 0.7124554514884949, 0.7273808121681213, 0.7460044622421265, 0.7540615797042847, 0.7666094303131104, 0.7804781198501587, 0.7707040309906006, 0.8061022162437439, 0.7827235460281372, 0.7895918488502502, 0.8001585006713867, 0.8050455451011658, 0.8098005652427673, 0.8238013386726379, 0.8198388814926147, 0.8189142942428589, 0.8285563588142395, 0.8251221776008606, 0.8383304476737976, 0.8400475382804871, 0.839519202709198, 0.8376700282096863, 0.8568220734596252, 0.8510104417800903, 0.8515387773513794, 0.8531237840652466, 0.8561616539955139, 0.848368763923645, 0.8588033318519592, 0.858671247959137, 0.8599920868873596, 0.872407853603363, 0.8642187118530273, 0.8689737319946289, 0.8799365758895874, 0.876370370388031, 0.8753136992454529, 0.8778232932090759, 0.8795403242111206], "val_loss": [1.6965631757463728, 0.8828044618879046, 0.8551974126270839, 0.7617801257542202, 0.6766242980957031, 0.5892609528132847, 0.5648611613682338, 0.5391700267791748, 0.5400657994406564, 0.5130813292094639, 0.501718384878976, 0.5790854011263166, 0.4709102766854422, 0.4647864614214216, 0.46406623295375277, 0.4541780097143991, 0.5063356161117554, 0.40094406264168875, 0.3984426770891462, 0.400401098387582, 0.4085952469280788, 0.38908625500542776, 0.41152881724493845, 0.36473450490406584, 0.3731980153492519, 0.40255158288138254, 0.35997206824166433, 0.36727367980139597, 0.3712049978119986, 0.3559690373284476, 0.3787215692656381, 0.381214507988521, 0.36786253111703054, 0.3555943029267447, 0.39809142691748484, 0.3699412601334708, 0.339059122971126, 0.3813407676560538, 0.34088527304785593, 0.3351616178240095, 0.33744039705821444, 0.34531617164611816, 0.35444211959838867, 0.3516284482819693, 0.37747173649924143], "val_accuracy": [0.28733333945274353, 0.624666690826416, 0.6413333415985107, 0.6443333625793457, 0.7310000061988831, 0.7406666874885559, 0.7486666440963745, 0.765333354473114, 0.7476666569709778, 0.7603333592414856, 0.7636666893959045, 0.7403333187103271, 0.778333306312561, 0.7820000052452087, 0.7870000004768372, 0.7860000133514404, 0.768666684627533, 0.8289999961853027, 0.8196666836738586, 0.8233333230018616, 0.8163333535194397, 0.8330000042915344, 0.8103333115577698, 0.8366666436195374, 0.8399999737739563, 0.8240000009536743, 0.8416666388511658, 0.8360000252723694, 0.8320000171661377, 0.8453333377838135, 0.8309999704360962, 0.8379999995231628, 0.8353333473205566, 0.8456666469573975, 0.8213333487510681, 0.8356666564941406, 0.8556666374206543, 0.847000002861023, 0.8536666631698608, 0.8566666841506958, 0.8513333201408386, 0.8503333330154419, 0.8489999771118164, 0.8483333587646484, 0.8486666679382324]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0], [2, 8, 2, 0, 6, 2, 1, 9, 2, 0, 8, 9], [1, 0, 3, 3, 0, 1, 2], [57, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.8185714483261108, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 12, 5, 4, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha))), tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.subtract(grad, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.negative(tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.add(beta, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.108954290420372, 1.8235981915022608, 1.4235350540946772, 1.076329167091363, 0.8602598845494217, 0.8080223493839944, 0.7728594917080202, 0.6982513327152029, 0.6616437188575391, 0.6623220455219812, 0.6114933789996675, 0.6103739160210339, 0.5884792643011585, 0.5427729184790342, 0.5594304914464096, 0.5370515219728472, 0.5173024437242039, 0.5249982446317959, 0.4929194058748111, 0.4758782355879213, 0.4780909551203983, 0.4737397527430178, 0.4550933283805973, 0.4691599362113173, 0.4284604954020443, 0.45907784988379136, 0.41909399786094365, 0.4124547590818608, 0.3944373497590098, 0.39591914531482664, 0.3818869298286347, 0.4093806365847572, 0.3901879178841573, 0.37969075833974875, 0.3929812215921067, 0.36680457262063243, 0.3546729238435435, 0.3666011380906811, 0.369211982415573, 0.34327515049648955, 0.3264710334361017, 0.3454403783454399, 0.32389066195239197, 0.32469045384102463, 0.3216721577895332, 0.32452187483352585, 0.31787026213097486], "accuracy": [0.3105269968509674, 0.41408005356788635, 0.5334830284118652, 0.6165632009506226, 0.672698438167572, 0.6914542317390442, 0.7127195596694946, 0.7308149337768555, 0.7464007139205933, 0.7508915662765503, 0.7601373791694641, 0.7651565074920654, 0.7786290049552917, 0.7973847389221191, 0.7911768555641174, 0.8031964302062988, 0.8031964302062988, 0.8050455451011658, 0.8127063512802124, 0.821820080280304, 0.8210275769233704, 0.8210275769233704, 0.8289526104927063, 0.8272355198860168, 0.8381983637809753, 0.8271034359931946, 0.841500461101532, 0.8430854678153992, 0.8555012345314026, 0.8521991968154907, 0.8576145768165588, 0.8474441766738892, 0.8561616539955139, 0.8533879518508911, 0.8514066934585571, 0.8640866279602051, 0.8705587387084961, 0.8642187118530273, 0.8613129258155823, 0.8687095642089844, 0.8815215826034546, 0.8717474341392517, 0.8787478804588318, 0.8800686597824097, 0.8747853636741638, 0.8784837126731873, 0.883238673210144], "val_loss": [1.7023265021187919, 0.9112257957458496, 0.9173463753291539, 0.7071149860109601, 0.6670886618750436, 0.5761722326278687, 0.5693297556468419, 0.5518934215818133, 0.5734337738582066, 0.5328275987080165, 0.4963374648775373, 0.565645660672869, 0.47150875840868267, 0.5084267854690552, 0.42854282685688566, 0.46510517597198486, 0.48984958444322857, 0.4271969624928066, 0.38949800389153616, 0.4177281856536865, 0.40206141982759747, 0.39124139717647005, 0.42428960118974957, 0.3721132619040353, 0.39885491132736206, 0.37605550459453035, 0.378945563520704, 0.3722191538129534, 0.35926839283534456, 0.37607082298823763, 0.429821823324476, 0.3579914655004229, 0.35863570656095234, 0.36791673728397917, 0.38153295857565744, 0.3619987538882664, 0.35030732836042133, 0.4160068120275225, 0.33390415566308157, 0.33602155106408255, 0.33736189774104525, 0.3247264623641968, 0.37730338743754793, 0.3382568359375, 0.3802312697683062, 0.3571113177708217, 0.32947148595537457], "val_accuracy": [0.2853333353996277, 0.612666666507721, 0.5493333339691162, 0.6953333616256714, 0.7160000205039978, 0.7519999742507935, 0.749666690826416, 0.7509999871253967, 0.7350000143051147, 0.753333330154419, 0.7716666460037231, 0.7409999966621399, 0.7823333144187927, 0.7720000147819519, 0.8136666417121887, 0.7776666879653931, 0.7683333158493042, 0.8069999814033508, 0.8330000042915344, 0.8199999928474426, 0.8216666579246521, 0.8389999866485596, 0.8013333082199097, 0.8333333134651184, 0.8266666531562805, 0.8323333263397217, 0.8393333554267883, 0.8353333473205566, 0.8379999995231628, 0.8349999785423279, 0.8016666769981384, 0.8489999771118164, 0.8366666436195374, 0.8443333506584167, 0.828000009059906, 0.8386666774749756, 0.8493333458900452, 0.8373333215713501, 0.8560000061988831, 0.8569999933242798, 0.8566666841506958, 0.8579999804496765, 0.8396666646003723, 0.856333315372467, 0.843999981880188, 0.8479999899864197, 0.8550000190734863]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], [0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [2, 5, 0, 0, 6, 4, 1, 4, 5, 8, 5, 4, 3, 3, 9, 3, 8, 3, 4, 3, 6, 5, 3, 0, 8, 1], [3, 2, 3, 1, 0, 3, 2], [83, 56, 47], [0, 0, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.7985714077949524, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.210194000210886, 2.2234535980312784, 2.2700269553860055, 2.2390049654872834, 2.2094787154545985, 2.0201454863273045, 1.8147471716784687, 1.4784323373065726, 1.0952588678067623, 0.9350730386219319, 0.9423937886193633, 0.8076029558302058, 0.7618696919175313, 0.7289083663419946, 0.6720838407326399, 0.6531293424853339, 0.638211626134859, 0.6266902455202168, 0.6027510606334068, 0.569760070910244, 0.5434248688796949, 0.566034035392331, 0.5422055531470783, 0.5343423063303769], "accuracy": [0.22044643759727478, 0.18399155139923096, 0.20433232188224792, 0.18121780455112457, 0.1982565075159073, 0.2724871337413788, 0.4010038375854492, 0.49385812878608704, 0.6332056522369385, 0.6704530715942383, 0.6684718132019043, 0.7045304179191589, 0.7124554514884949, 0.7263241410255432, 0.755118191242218, 0.76106196641922, 0.7660810947418213, 0.765949010848999, 0.7729493975639343, 0.7815347909927368, 0.793422281742096, 0.7869502305984497, 0.7992339134216309, 0.7967243194580078], "val_loss": [1.632855040686471, 1.8448493140084403, 1.9690395763942175, 1.9726683752877372, 1.9723381314958846, 1.224064724785941, 1.0743210656302316, 0.9219701971326556, 0.7719365698950631, 0.8320130450384957, 0.6552967173712594, 0.7188587869916644, 0.5493361268724714, 0.5274050065449306, 0.5252277680805751, 0.4971388748713902, 0.5405465705054147, 0.5127442393984113, 0.4406878096716745, 0.4583680970328195, 0.4761993033545358, 0.4718098299843924, 0.44551760809762136, 0.44145229884556364], "val_accuracy": [0.3076666593551636, 0.3736666738986969, 0.15566666424274445, 0.10866666585206985, 0.09933333098888397, 0.5506666898727417, 0.5830000042915344, 0.6446666717529297, 0.6940000057220459, 0.6759999990463257, 0.7203333377838135, 0.6603333353996277, 0.7516666650772095, 0.75, 0.7519999742507935, 0.7853333353996277, 0.7689999938011169, 0.7649999856948853, 0.815666675567627, 0.8090000152587891, 0.7979999780654907, 0.7856666445732117, 0.8100000023841858, 0.8013333082199097]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [3, 8, 2, 0, 6, 2, 1, 9, 2, 0, 8, 9], [1, 0, 5, 3, 0, 1, 2], [83, 73, 47], [1, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.7919999957084656, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 10, 6, 3, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, alpha)), tf.math.add(beta, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))))), tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.subtract(grad, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(alpha))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2137437287480397, 2.018441159034591, 1.6670199771362635, 1.2902476230175928, 1.0454383448854712, 0.9074326765897834, 0.8168067235389894, 0.7494907797666164, 0.7034615033007632, 0.6977671041086821, 0.6598371728426115, 0.6046560766312424, 0.6022010552979196, 0.6139618161489557, 0.5891286810044961, 0.5425717263898168, 0.5581422225752873, 0.5447974177541167, 0.5372192135985816, 0.4981064861398001], "accuracy": [0.26324132084846497, 0.29784706234931946, 0.4225333631038666, 0.5197464227676392, 0.6139215230941772, 0.6485272645950317, 0.6865671873092651, 0.7120591998100281, 0.7323999404907227, 0.7337207794189453, 0.7494386434555054, 0.7718927264213562, 0.7794214487075806, 0.7717606425285339, 0.7778365015983582, 0.7984414100646973, 0.7884030938148499, 0.7968564033508301, 0.7972526550292969, 0.816008448600769], "val_loss": [1.881502968924386, 1.0337693350655692, 1.1710738795144218, 0.8392864465713501, 0.7133279017039708, 0.6195487805775234, 0.6552035467965263, 0.5875579629625592, 0.6054220540182931, 0.528058614049639, 0.5240156480244228, 0.559880256652832, 0.44989170346941265, 0.49122479983738493, 0.4416218910898481, 0.4676213264465332, 0.4437645162854876, 0.4340415171214512, 0.4272582786423819, 0.45848711899348665], "val_accuracy": [0.21400000154972076, 0.596666693687439, 0.5133333206176758, 0.6539999842643738, 0.6583333611488342, 0.7213333249092102, 0.6956666707992554, 0.715666651725769, 0.7126666903495789, 0.7636666893959045, 0.7476666569709778, 0.7396666407585144, 0.7943333387374878, 0.7770000100135803, 0.8059999942779541, 0.7786666750907898, 0.8003333210945129, 0.8029999732971191, 0.7990000247955322, 0.7816666960716248]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0], [2, 5, 0, 0, 6, 4, 1, 4, 5, 8, 5, 4, 3, 3, 9, 3, 8, 3, 4, 3, 6, 5, 3, 0, 8, 1], [3, 2, 3, 1, 0, 2, 2], [83, 56, 47], [0, 0, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.44114285707473755, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.210202727918029, 2.2314170976403744, 2.2855817826353815, 8.959286758692162, 2.310647162117616, 2.304478752614642, 2.303314397930548], "accuracy": [0.2211068570613861, 0.18280279636383057, 0.16721701622009277, 0.13842293620109558, 0.09893012791872025, 0.09826971590518951, 0.09417514503002167], "val_loss": [1.630427462714059, 1.7589248248508997, 1.952498231615339, 1.9848215239388602, 1.975808824811663, 1.9738969121660506, 1.9734886033194405], "val_accuracy": [0.31299999356269836, 0.40799999237060547, 0.0846666693687439, 0.07266666740179062, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [9, 2, 4, 0, 1, 5, 0, 4, 5, 8, 8, 4, 3, 3, 2, 3, 2, 3, 4, 3, 6, 5, 3, 2, 8, 1, 7, 9, 4, 9], [3, 2, 3, 1, 0, 2, 2], [57, 62, 0, 81, 53, 45], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.3977142870426178, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 3, 3, 2, 1, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1135369666012256, 2.015545470697879, 2.0045675778228373, 4.186190437946212, 2.550543883914063, 2.510844229990544, 2.4466748414589445, 2.3944636698113047], "accuracy": [0.28939375281333923, 0.2739400267601013, 0.4282129108905792, 0.3619072735309601, 0.10170386731624603, 0.09906221181154251, 0.10368511080741882, 0.09972262382507324], "val_loss": [1.9635891233171736, 1.38728666305542, 1.0668608120509557, 2.172851085662842, 2.0682520185198103, 2.083543028150286, 2.0346790722438266, 2.1200792448861256], "val_accuracy": [0.10100000351667404, 0.46533334255218506, 0.5226666927337646, 0.09933333098888397, 0.09799999743700027, 0.10366666316986084, 0.10199999809265137, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1], [2, 8, 2, 0, 6, 2, 1, 9, 2, 0, 8, 9], [3, 2, 3, 3, 0, 2, 2], [83, 73, 47], [0, 0, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.23171427845954895, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(grad, beta))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.601642819191597, 2.5676263610936583, 2.4232265444133168, 2.382418717533102, 2.4318971449688616, 2.3866921562985377, 2.399511786342344, 2.4039190541704363, 2.3981109819612514], "accuracy": [0.2102760523557663, 0.13776251673698425, 0.11227050423622131, 0.11610091477632523, 0.12059172987937927, 0.09774138033390045, 0.09642054885625839, 0.09879804402589798, 0.09417514503002167], "val_loss": [2.768151010785784, 2.0029875210353305, 2.0126956530979703, 1.993155070713588, 2.05147055217198, 2.0684456825256348, 2.037919453212193, 2.032918248857771, 2.0603344781058177], "val_accuracy": [0.09833333641290665, 0.11733333021402359, 0.10266666859388351, 0.18333333730697632, 0.11233333498239517, 0.09833333641290665, 0.09966666996479034, 0.1003333330154419, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0], [8, 0, 2, 0, 0, 2, 1, 9, 2, 0, 8, 9], [1, 0, 3, 3, 0, 1, 2], [20, 56, 47], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [2, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 11, 11, 8, 3, 2, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, alpha)), tf.math.negative(tf.math.add(tf.math.subtract(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [8, 6, 5, 6, 0, 2, 1, 9, 2, 0, 8, 9], [0, 2, 3, 1, 0, 2, 2], [83, 56, 47], [0, 0, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], [2, 8, 6, 3, 6, 0, 1, 9, 2, 0, 8, 9, 2, 5, 3, 7, 1, 9], [3, 2, 3, 3, 0, 2, 2, 2], [57, 90, 0, 81, 53, 45], [0, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 0, 4, 2, 1, 2, 3], [1, 2, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 26, 26, 18, 8, 4, 2, 2, 1, 1, 0, 13, 7, 6, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.negative(tf.math.subtract(beta, tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), grad))), tf.math.add(tf.math.negative(tf.math.sqrt(tf.math.add(beta, grad))), tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.add(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.square(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, beta)), tf.math.add(beta, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(tf.math.negative(alpha), tf.math.pow(tf.math.add(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, sigma), sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1], [7, 6, 4, 0, 2, 5, 0, 5, 5, 8, 8, 4, 3, 3, 2, 3, 2, 3, 4, 3, 6, 5, 3, 2, 8, 1, 7, 9, 4, 9], [3, 3, 3, 1, 0, 2, 2], [57, 50, 91, 97], [0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 10, 5, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.square(grad)), tf.math.negative(grad))), tf.math.square(grad))), tf.math.square(tf.math.sqrt(tf.math.add(beta, alpha))))), tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07066437602043152, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0], [2, 8, 2, 0, 0, 2, 1, 9, 2, 0, 8, 9], [1, 0, 3, 3, 0, 1, 2], [57, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [0, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 2, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.negative(alpha), tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), tf.math.negative(tf.math.add(grad, tf.math.subtract(grad, tf.math.add(beta, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [94849342.9713629, 1840724934.4160614, 8477880848.974244, 23452118585.009113, 50670763824.25149, 93215823799.23392], "accuracy": [0.09906221181154251, 0.1006472036242485, 0.09813763201236725, 0.0952318087220192, 0.09628847241401672, 0.10117553919553757], "val_loss": [368101211.4285714, 2942741211.428571, 9929427529.142857, 23533703168.0, 45960715117.71429, 79416751835.42857], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0], [2, 8, 2, 0, 6, 2, 1, 9, 2, 0, 9, 9], [1, 0, 3, 3, 0, 1, 2], [57, 89, 91, 97], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [6, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 8, 0, 4, 2, 1, 2, 3], [0, 0, 0, 1, 3, 3], [89, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 6, 6, 3, 3, 1, 3, 3, 2, 1, 0, 3, 2, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1235012100.0092707, 23984320959.41672, 110487785158.7542, 305667266269.7472, 660462218969.1486, 1215051612880.6277], "accuracy": [0.09906221181154251, 0.1006472036242485, 0.09813763201236725, 0.09536388516426086, 0.09628847241401672, 0.10130762308835983], "val_loss": [4794999808.0, 38348577645.71429, 129413124681.14285, 306741912722.2857, 599087008036.5714, 1035195720850.2858], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [8, 8, 2, 0, 0, 2, 1, 9, 2, 0, 8, 9], [3, 3, 3, 1, 0, 2, 2], [20, 56, 47], [0, 0, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07066437602043152, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0], [2, 8, 2, 0, 6, 2, 1, 9, 2, 0, 8, 9], [3, 2, 3, 3, 0, 2, 2], [57, 20, 0, 81, 53, 45], [0, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 12, 5, 3, 2, 2, 1, 1, 0, 3, 2, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, grad)), tf.math.add(beta, beta))))), tf.math.divide_no_nan(tf.math.add(grad, tf.math.subtract(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(grad), tf.math.add(beta, tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))))), tf.math.sqrt(tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07066437602043152, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0], [2, 8, 2, 0, 5, 2, 1, 9, 2, 0, 8, 9], [1, 0, 3, 3, 3, 1, 2], [57, 62, 65, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 8, 4, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha))), tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), tf.math.square(tf.math.add(tf.math.add(beta, grad), tf.math.subtract(grad, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07066437602043152, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1], [2, 8, 2, 0, 6, 2, 1, 9, 2, 0, 8, 9], [1, 0, 3, 3, 0, 1, 2], [57, 16, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 2, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 11, 6, 3, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha))), tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.subtract(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.add(beta, alpha)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [7, 9, 7, 0, 6, 4, 1, 2, 5, 8, 5, 4, 3, 3, 9, 3, 8, 3, 4, 3, 6, 5, 3, 0, 8, 1], [3, 3, 3, 1, 0, 2, 2], [20, 56, 47], [1, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [5, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.052000001072883606, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.301793420697405, 2.3030323518061007, 2.3014686375939064, 2.302440948112215, 2.3028646524729366, 2.3019301575156974, 2.3034778633893613, 2.30200568745716, 2.301285169978325, 2.3012757321799735, 2.301251862861886, 2.3002475988375215, 2.3010553691396938, 2.3010900328896535, 2.2995185944634406, 2.300845101398956, 2.3004974561864358, 2.30047544704342, 2.3000291221098674, 2.3006888408985877, 2.301003415051421, 2.3000857218806736, 2.3013643836143736, 2.2995992781007137, 2.3004676452984882, 2.30152792200641], "accuracy": [0.08968432247638702, 0.08651433140039444, 0.09655263274908066, 0.09325055778026581, 0.09113723784685135, 0.09496764093637466, 0.09113723784685135, 0.09866596013307571, 0.0940430611371994, 0.09576013684272766, 0.09457138925790787, 0.09417514503002167, 0.09430722147226334, 0.09259014576673508, 0.09787346422672272, 0.0940430611371994, 0.09813763201236725, 0.0952318087220192, 0.09893012791872025, 0.09457138925790787, 0.09351472556591034, 0.09840179979801178, 0.09708096832036972, 0.09536388516426086, 0.09589222073554993, 0.09536388516426086], "val_loss": [1.9710841178894043, 1.9709176336015974, 1.970768928527832, 1.9706266266959054, 1.970503807067871, 1.9703950200762068, 1.970268726348877, 1.9701393672398158, 1.9700873238699776, 1.9699935231889998, 1.969904558999198, 1.969815935407366, 1.9697647094726562, 1.9697323526654924, 1.9696830340794154, 1.9696215902056013, 1.9695941380092077, 1.9695888928004675, 1.9695852824619837, 1.9695571490696497, 1.969538688659668, 1.9695416859218053, 1.9695375987461634, 1.969557762145996, 1.9695587839399065, 1.96954379762922], "val_accuracy": [0.0416666679084301, 0.041999999433755875, 0.043666668236255646, 0.04333333298563957, 0.04399999976158142, 0.04600000008940697, 0.04766666516661644, 0.04866666719317436, 0.04933333396911621, 0.050999999046325684, 0.05166666582226753, 0.05166666582226753, 0.05299999937415123, 0.05433333292603493, 0.056333333253860474, 0.057999998331069946, 0.05833333358168602, 0.058666665107011795, 0.05833333358168602, 0.05999999865889549, 0.060333333909511566, 0.05999999865889549, 0.060333333909511566, 0.05966666713356972, 0.05966666713356972, 0.05999999865889549]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1], [2, 8, 2, 0, 6, 2, 2, 5, 2, 0, 8, 9], [3, 3, 3, 1, 0, 2, 2], [57, 31, 0, 81, 53, 45], [0, 0, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 2, 0, 1, 3, 3], [48, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 18, 18, 11, 7, 1, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(beta, grad))))), tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.add(alpha, tf.math.square(tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), beta)))), tf.math.negative(tf.math.add(beta, tf.math.sqrt(beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, beta))", "other_info": {"loss": [2.3018655466475995, 2.3033165594117833, 2.3019503371873946, 2.3031333793407858, 2.303727288208995, 2.302944607092893], "accuracy": [0.08968432247638702, 0.08506141602993011, 0.0956280529499054, 0.09113723784685135, 0.09113723784685135, 0.09153348207473755], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]