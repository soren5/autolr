[{"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 1, 0], [0, 1, 1], [2], [3, 4], [8], [1], [], [], [], [], [0, 0, 1, 0, 1, 1, 0, 1, 1], [6, 3, 0, 5, 7], [1, 0, 0, 3], [28, 57]], "fitness": -0.7782857418060303, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 6, 3, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.287641605602169, 2.256197413023925, 2.215001399412194, 2.1559645650629604, 2.0726089700810455, 1.950382467573345, 1.8037341155270228, 1.6389510036065924, 1.4924125806325776, 1.3755577694801306, 1.2885163873020746, 1.220041863638979, 1.1537210166950298, 1.1111619459119975, 1.059230202256161, 1.0194884594232179, 0.9906297061956948, 0.9558029495698271, 0.9521447584897047, 0.9177038610146865, 0.9099305859173861, 0.8955525358859118, 0.8751167504149122, 0.8622199138236509, 0.8492756187325345, 0.8346262465787995, 0.8218126623322857, 0.816577560929039, 0.816250216683786, 0.8018012474068498, 0.7923588038293866, 0.7855870637281491, 0.7730059912569723, 0.7660432293461992, 0.7660145785011525, 0.7625050728803833, 0.7584288065081748, 0.7446550665010693, 0.7417858913038952, 0.7407762335905892, 0.7293075511814848, 0.727412498583017, 0.7199524828802246, 0.7135322495001875, 0.7132582933659315, 0.7179596020309066, 0.696860682718695], "accuracy": [0.12719587981700897, 0.21080438792705536, 0.2825254201889038, 0.342491090297699, 0.38502180576324463, 0.4224012792110443, 0.447761207818985, 0.48672565817832947, 0.5204068422317505, 0.5362567901611328, 0.5638620853424072, 0.5791836977005005, 0.5974111557006836, 0.5984678268432617, 0.6272619366645813, 0.6435081362724304, 0.6487914323806763, 0.6596222519874573, 0.6619997620582581, 0.6684718132019043, 0.6765288710594177, 0.678642213344574, 0.6803592443466187, 0.6888125538825989, 0.6905296444892883, 0.6951525807380676, 0.7030775547027588, 0.6992471218109131, 0.7062475085258484, 0.7047945857048035, 0.7104741930961609, 0.7164179086685181, 0.7147008180618286, 0.718399167060852, 0.7168141603469849, 0.7231541275978088, 0.719852089881897, 0.7239466309547424, 0.7240787148475647, 0.7269845604896545, 0.7327961921691895, 0.7308149337768555, 0.7387399077415466, 0.7390040755271912, 0.7359662055969238, 0.7329282760620117, 0.739400327205658], "val_loss": [1.940847601209368, 1.906665325164795, 1.8606059210641044, 1.7924045835222517, 1.693838323865618, 1.5589823722839355, 1.4011007036481584, 1.2437892641339983, 1.1099369866507394, 1.0038758686610632, 0.927130937576294, 0.8695200511387416, 0.8227937391826085, 0.7865081344332013, 0.7546377522604806, 0.7303610358919416, 0.711046746798924, 0.6958184923444476, 0.6796330213546753, 0.6672580753053937, 0.6570300715310233, 0.6478172029767718, 0.6391844749450684, 0.6283983503069196, 0.6204859358923775, 0.6141589709690639, 0.605989762714931, 0.6007729428155082, 0.5948878356388637, 0.5901102338518415, 0.5832161733082363, 0.5796434709003994, 0.5768401282174247, 0.573131935937064, 0.5668661934988839, 0.5640250274113247, 0.5632210118430001, 0.5606566667556763, 0.5524795395987374, 0.5502359356198993, 0.5463281529290336, 0.5470383167266846, 0.5399602140699115, 0.5387292078563145, 0.5356946161815098, 0.5331362315586635, 0.5317769050598145], "val_accuracy": [0.2720000147819519, 0.3659999966621399, 0.4156666696071625, 0.46666666865348816, 0.5223333239555359, 0.5503333210945129, 0.5786666870117188, 0.6036666631698608, 0.6470000147819519, 0.659333348274231, 0.668666660785675, 0.6816666722297668, 0.6856666803359985, 0.6940000057220459, 0.6983333230018616, 0.7036666870117188, 0.7083333134651184, 0.7193333506584167, 0.7206666469573975, 0.7236666679382324, 0.7233333587646484, 0.721666693687439, 0.7286666631698608, 0.734666645526886, 0.7350000143051147, 0.7386666536331177, 0.7383333444595337, 0.7450000047683716, 0.7426666617393494, 0.7440000176429749, 0.7490000128746033, 0.750333309173584, 0.753000020980835, 0.7590000033378601, 0.7590000033378601, 0.7556666731834412, 0.7553333044052124, 0.7540000081062317, 0.7620000243186951, 0.7613333463668823, 0.7620000243186951, 0.7720000147819519, 0.7680000066757202, 0.7676666378974915, 0.765333354473114, 0.7676666378974915, 0.7703333497047424]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1], [1], [], [0], [8], [1], [], [], [], [], [0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7], [1, 0, 0, 3], [28, 57]], "fitness": -0.7434285879135132, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 9, 5, 4, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.math.negative(tf.math.square(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))), tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3000922511676047, 2.2958331063690913, 2.2826440656473292, 2.263159806434552, 2.239638693974144, 2.2060063062578914, 2.1677000803828412, 2.107678863303442, 2.026555765904865, 1.921498389386419, 1.7923555861154268, 1.6445361433909664, 1.5153183148694849, 1.4405201927482838, 1.3898368405785622, 1.357577834650825, 1.3595869247356913, 1.329443998214607, 1.2897204635417567, 1.1535448846154446, 1.079156382799369, 0.984903204316681, 0.912259301308234, 0.9090784596981168, 0.9002134877503933, 0.8997429550882847, 0.9144801227187657, 0.8944888498332475, 0.8711217151987491, 0.8451115584266404, 0.8246159261369812, 0.8017124903357937, 0.8037105604106756, 0.7990390646175828, 0.8010036519584308, 0.8153969506073653, 0.8115596333357479, 0.792141281421615], "accuracy": [0.09417514503002167, 0.10672302544116974, 0.13829085230827332, 0.19270901381969452, 0.24884428083896637, 0.304979532957077, 0.3369435966014862, 0.3707568347454071, 0.39189010858535767, 0.4076079726219177, 0.43323206901550293, 0.4535728394985199, 0.4826310873031616, 0.4955752193927765, 0.525029718875885, 0.5429930090904236, 0.5478800535202026, 0.5643904209136963, 0.5787875056266785, 0.620261549949646, 0.6396777033805847, 0.6468101739883423, 0.658961832523346, 0.6452252268791199, 0.6538106203079224, 0.6662263870239258, 0.6672830581665039, 0.6807554960250854, 0.6859067678451538, 0.6859067678451538, 0.6882842183113098, 0.7022850513458252, 0.6963412761688232, 0.6952846646308899, 0.6951525807380676, 0.6873596906661987, 0.6931713223457336, 0.705058753490448], "val_loss": [1.967703410557338, 1.9580503872462682, 1.9427808352879115, 1.9225552422659737, 1.8973196574619837, 1.8648147583007812, 1.8197764669145857, 1.7559667995997839, 1.6661940983363561, 1.5444768156324113, 1.3942834309169225, 1.2332924093518938, 1.0879289422716414, 0.972616161618914, 0.8844376632145473, 0.8264000756399972, 0.8112154177256993, 0.7726359026772636, 0.7535018069403512, 0.7457890340260097, 0.7028531687600272, 0.6706396852220807, 0.6718375342232841, 0.6792623656136649, 0.6891653708049229, 0.7026759896959577, 0.7023297207696098, 0.6826816116060529, 0.6547892774854388, 0.6326443297522408, 0.6220268521990094, 0.6177603857857841, 0.6130562169211251, 0.6105641807828631, 0.6145907981055123, 0.6172609329223633, 0.6125002418245588, 0.6059738567897252], "val_accuracy": [0.061666667461395264, 0.13099999725818634, 0.27266666293144226, 0.34200000762939453, 0.36533331871032715, 0.3933333456516266, 0.4166666567325592, 0.4449999928474426, 0.46700000762939453, 0.49666666984558105, 0.5426666736602783, 0.5759999752044678, 0.6136666536331177, 0.6449999809265137, 0.6596666574478149, 0.6693333387374878, 0.6446666717529297, 0.6773333549499512, 0.687666654586792, 0.6946666836738586, 0.7016666531562805, 0.7083333134651184, 0.7023333311080933, 0.6916666626930237, 0.7043333053588867, 0.722000002861023, 0.7283333539962769, 0.7233333587646484, 0.7200000286102295, 0.7229999899864197, 0.7239999771118164, 0.7289999723434448, 0.7333333492279053, 0.7326666712760925, 0.7236666679382324, 0.7210000157356262, 0.7260000109672546, 0.731333315372467]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1], [5, 1, 3, 7, 8, 3, 2], [2, 0, 1, 1, 2, 2], [50], [1], [1], [], [0, 1], [8], [1], [], [], [1], [], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0], [0, 0, 0, 3, 1, 2, 0, 3, 3, 1], [28, 57, 9]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 7, 6, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.subtract(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(grad, grad))))), lambda shape,  alpha, beta, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3024549590377696, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09589222073554993, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1], [2, 3, 5, 8], [2, 2, 1, 1], [50], [1, 1, 1, 0, 0, 1], [0, 0, 1, 0, 1, 1], [8, 6, 7], [0, 0, 0], [8, 58, 82], [0, 1], [0], [0], [], [], [1, 1, 1, 0, 0, 1, 0, 1, 0, 1], [6, 3, 0, 5, 7], [2, 1, 0, 2], [81, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 0, 6, 6, 3, 3, 3, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.multiply(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.sqrt(alpha))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [75765.05916670534, 11702464.176726984, 206289782.71404043, 1571310569.1422534, 7457102981.224145, 26493238354.639545], "accuracy": [0.10355303436517715, 0.10302469879388809, 0.1010434553027153, 0.10236428678035736, 0.09219389408826828, 0.09853387624025345], "val_loss": [636151.5357142857, 35892198.85714286, 408602358.85714287, 2383972644.571429, 9667446491.428572, 31439338349.714287], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1], [1, 4, 5, 0, 0, 3], [2, 1, 1, 2, 0], [50], [0, 1, 0], [0, 1, 1], [4], [0, 3], [52], [0], [1], [], [1], [], [1, 0, 1, 0, 1, 1, 0, 1, 1], [0], [1, 0, 0, 3], [99, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.pow(tf.math.square(grad), alpha), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10289261490106583, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 1, 0, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 1], [2, 3, 5, 0, 4, 5], [2, 2, 1, 1], [50], [1], [1], [], [1], [8], [1], [], [], [], [], [1, 0, 1, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7], [1, 1, 0, 3], [81, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.multiply(tf.math.square(tf.math.negative(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))))))), alpha)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08268392831087112, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 1, 0, 0, 1], [0, 1, 0, 1, 1], [7, 7], [0, 1, 1], [52], [0], [1], [], [1], [], [1, 1, 1, 0, 1, 1, 0, 1, 1], [0], [1, 0, 0, 3], [81, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08215559273958206, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0, 1, 1], [9, 3, 5, 0, 4], [3, 2, 1, 1], [50], [1], [1], [], [4], [8], [1], [], [], [], [], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [8, 3, 0, 5, 7, 1, 7, 3, 1, 4, 7, 9, 8, 0, 6, 9], [1, 0, 0, 3, 3, 3, 3, 1], [78, 57, 17, 52]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 24, 16, 8, 4], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.math.negative(tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.subtract(sigma, sigma)), tf.math.pow(tf.math.add(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.negative(tf.math.divide_no_nan(sigma, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))), sigma)))))), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09589222073554993, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 0], [0, 1, 0, 1, 1], [5], [0], [8], [1], [], [], [], [], [1, 1, 1, 0, 1, 1, 0, 1, 1], [6, 3, 9, 5, 7], [1, 0, 0, 3], [81, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad)), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08215559273958206, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 0, 1, 1], [50], [1, 1, 1, 0, 1], [0, 0, 0, 1, 0], [0, 9], [0, 1, 3], [7], [1], [1], [], [4], [], [1, 1, 1, 0, 1, 1, 0, 1, 1], [6, 3, 9, 5, 7], [1, 0, 0, 3], [81, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 2, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06828688085079193, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [1, 2, 1, 1], [50], [1], [1], [], [0], [8], [1], [], [], [], [], [0, 1, 1, 1, 0, 0, 1, 0, 1], [6, 3, 0, 5, 7], [1, 0, 0, 1], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09219389408826828, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1], [0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1], [2, 3, 5, 0, 4, 4, 4], [2, 2, 1, 1, 1, 2], [50], [0], [1], [], [5], [8], [0, 1], [0], [0], [], [], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1], [1, 8, 0, 9], [2, 0, 0, 3, 0, 0, 0, 2, 1, 3, 3], [28, 57, 78, 75, 76, 72, 4]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 7, 6, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 5, 4, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.pow(alpha, grad)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.sqrt(beta), tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09589222073554993, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 0, 1], [5, 3, 5, 0], [2, 1, 1], [50], [1], [1], [1, 0, 3], [0, 0, 3], [8], [0], [1], [], [0], [15], [0, 1, 1, 0, 0, 1, 1], [0, 3, 0, 9, 1, 0, 0, 7, 6, 7, 2], [2, 0, 0, 3, 3], [48, 75, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.302030239532243, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09417514503002167, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 1], [2, 3, 5, 0], [2, 0, 1, 1], [50], [0, 1, 0], [1, 1, 1], [5, 0, 3], [4, 1, 3], [52], [1], [], [], [1], [], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [0], [1, 0, 1, 1, 1, 2, 2, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, tf.math.negative(alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07106062769889832, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 0, 0, 1], [1, 3, 5, 0, 7, 3], [2, 1, 1, 2, 0], [50], [0, 1, 0, 1, 0, 0], [0, 1, 1], [2], [0, 1, 3], [8], [1], [], [], [], [], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [7, 3, 0, 5, 7], [0, 0, 1, 1, 1, 2, 2, 3], [81, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3024549590377696, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09589222073554993, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [1, 3, 8, 4, 7, 0], [2, 1, 0, 3, 0], [50, 9], [1, 1, 0, 1, 1], [0, 0, 1, 1, 1], [2, 6], [0, 5, 4], [8], [1], [0, 0, 1], [], [], [], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1], [7, 3, 0, 5, 7, 1, 3], [1, 1, 0, 2, 1, 3], [99, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 4, 4, 1, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(grad, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.sqrt(tf.math.add(alpha, tf.math.pow(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), grad), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(alpha, tf.math.negative(alpha)), tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09457138925790787, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [2, 3, 5, 0, 4, 0], [2, 1, 1, 3], [50], [1, 0], [0, 1], [5], [0], [8], [0, 0, 1], [0, 0, 1], [0, 8], [], [27], [0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1], [6, 3, 0, 3, 9, 6, 6, 3, 3, 9], [1, 1, 2, 2, 3, 3], [95, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 10, 10, 6, 4, 0, 2, 2, 1, 1, 1, 3, 2, 2, 0, 0, 16, 10, 6, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.sqrt(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, alpha), tf.math.negative(tf.math.multiply(tf.constant(9.99898151e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.divide_no_nan(beta, tf.math.multiply(beta, sigma)), tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), sigma)))))", "other_info": {"loss": [2.301110126149968, 2.303495436517113, 2.303193148494696, 2.302922948570992, 2.3044259873174675, 2.302551728450013], "accuracy": [0.09153348207473755, 0.09140139818191528, 0.08585391938686371, 0.0886276587843895, 0.0866464152932167, 0.09021265059709549], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 0, 1, 1, 0, 0, 1], [0, 0, 0, 1, 1, 0, 1, 1], [2, 3, 5, 0], [2, 3, 1, 1], [50], [0, 1, 1, 0], [0, 0, 1, 1], [1, 0, 3], [0, 0, 3], [8, 58], [0, 1], [0], [8], [], [], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [6, 3, 0, 5, 7, 8], [3, 1, 0, 2], [81, 57, 13]], "fitness": -0.03685714304447174, "mapping_values": [1, 7, 7, 4, 3, 0, 4, 4, 2, 2, 2, 2, 1, 1, 0, 0, 10, 6, 4, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.square(grad), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.negative(alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.negative(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(sigma, tf.math.multiply(tf.math.negative(tf.math.square(alpha)), tf.math.add(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(beta))))", "other_info": {"loss": [2.301110126149968, 2.303495436517113, 2.303193148494696, 2.302922948570992, 2.3044259873174675, 2.302551728450013], "accuracy": [0.09153348207473755, 0.09140139818191528, 0.08585391938686371, 0.0886276587843895, 0.0866464152932167, 0.09021265059709549], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 1, 1, 0, 1], [5], [1, 1, 0], [50], [0], [0], [9], [0], [8], [1, 0, 0], [0, 0, 1], [0, 8], [0], [27], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1], [6, 3, 0, 3, 9, 6, 6, 1], [1, 1, 0, 2, 3, 3], [78, 67]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 14, 8, 6, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.math.multiply(tf.math.negative(tf.math.multiply(alpha, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.subtract(beta, sigma), sigma))))", "other_info": {"loss": [2.301110126149968, 2.303495436517113, 2.303193148494696, 2.302922948570992, 2.3044259873174675, 2.302551728450013], "accuracy": [0.09153348207473755, 0.09140139818191528, 0.08585391938686371, 0.0886276587843895, 0.0866464152932167, 0.09021265059709549], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1], [1, 1, 0, 1, 0, 0, 1], [2, 3, 5, 0], [2, 2, 1, 1], [50], [0, 0, 1, 0, 0, 1], [0, 0, 1, 0, 1, 1], [1, 0, 3], [0, 4, 5], [8, 58], [0, 1], [0], [5], [], [], [1, 1, 0, 0, 0, 0, 1], [0, 3, 0, 9, 1, 0, 0, 7, 6, 7, 2], [3, 0, 0, 3, 3], [81, 57, 13]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.negative(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.301110126149968, 2.303495436517113, 2.303193148494696, 2.302922948570992, 2.3044259873174675, 2.302551728450013], "accuracy": [0.09153348207473755, 0.09140139818191528, 0.08585391938686371, 0.0886276587843895, 0.0866464152932167, 0.09021265059709549], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]