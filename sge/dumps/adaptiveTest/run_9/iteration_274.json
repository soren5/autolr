[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 6, 3, 4, 7, 5, 1, 8, 6, 5, 8, 9], [1, 3, 0, 5, 0, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 0, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.8308571577072144, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 1, 3, 3, 1, 2, 1, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.120629848159772, 2.0106813719464394, 1.6133765300755267, 1.1112586950912546, 0.8655081969746006, 0.7807229202751943, 0.7250263232281652, 0.6858863014712577, 0.6295471355002145, 0.6639436552191077, 0.6060744037229497, 0.5533914318678008, 0.5668512164892978, 0.5367964270753852, 0.5386108474220661, 0.5267478031032609, 0.5026161148957194, 0.48239790347384237, 0.47893583880061597, 0.4815785487794668, 0.464617438162669, 0.4712316322446326, 0.4432621182955771, 0.4224665090589318, 0.4214064201556334, 0.4317032089322833, 0.4229980925716319], "accuracy": [0.2694492042064667, 0.3459252417087555, 0.4500066041946411, 0.6083740592002869, 0.6754721999168396, 0.7029454708099365, 0.733060359954834, 0.7446836829185486, 0.7589486241340637, 0.7574957013130188, 0.7689869403839111, 0.7955356240272522, 0.7905164361000061, 0.8035926818847656, 0.800290584564209, 0.8018755912780762, 0.8119139075279236, 0.8206313848495483, 0.8211596608161926, 0.8178576231002808, 0.8256505131721497, 0.8249900937080383, 0.8350284099578857, 0.8453308939933777, 0.842028796672821, 0.8425571322441101, 0.8389908671379089], "val_loss": [1.8881125450134277, 1.2735444818224226, 0.9424021584647042, 0.7368091685431344, 0.6431107691356114, 0.5531724861689976, 0.5530445746013096, 0.5055763721466064, 0.6009445531027657, 0.5632306507655552, 0.46288115637642996, 0.45306784766060965, 0.4756453377859933, 0.42529269627162386, 0.44085218225206646, 0.4446825214794704, 0.45119946343558176, 0.3954475351742336, 0.42077299526759554, 0.4079578604016985, 0.4054585950715201, 0.37899281297411236, 0.3788705808775766, 0.3954548580305917, 0.36988429512296406, 0.4252104163169861, 0.3955802747181484], "val_accuracy": [0.26600000262260437, 0.5009999871253967, 0.6179999709129333, 0.6729999780654907, 0.7073333263397217, 0.7473333477973938, 0.7509999871253967, 0.7743333578109741, 0.7296666502952576, 0.7356666922569275, 0.793666660785675, 0.796999990940094, 0.7996666431427002, 0.8176666498184204, 0.8046666383743286, 0.8029999732971191, 0.7919999957084656, 0.8276666402816772, 0.8106666803359985, 0.8193333148956299, 0.8226666450500488, 0.8393333554267883, 0.8326666951179504, 0.8286666870117188, 0.8299999833106995, 0.8113333582878113, 0.8243333101272583]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 8, 6, 3, 3, 8, 9, 8, 6, 5, 8, 9], [1, 3, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.8222857117652893, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1206280875593335, 1.9934796535611357, 1.6250667339460236, 1.1066816964043664, 0.906931622452535, 0.7844947596362175, 0.7345467357193994, 0.6801446812138062, 0.6430169136501211, 0.6082597376648083, 0.6049230858602891, 0.5738768642762113, 0.5823692482822465, 0.5450378808882637, 0.5422265830371894, 0.49825039811815175, 0.5122126111532671, 0.48594068264555007, 0.49458274696371135, 0.49218017993397195, 0.47552954183436025, 0.45651011395495344, 0.457059242552644, 0.43766980394553734, 0.4267487233467011, 0.43408339512645766], "accuracy": [0.26918503642082214, 0.3485668897628784, 0.4593845009803772, 0.598599910736084, 0.6664905548095703, 0.6995112895965576, 0.7255316376686096, 0.7471932172775269, 0.7568352818489075, 0.7687227725982666, 0.7676661014556885, 0.7790252566337585, 0.7824593782424927, 0.7979130744934082, 0.791969358921051, 0.8140271902084351, 0.8079513907432556, 0.819970965385437, 0.8133667707443237, 0.8195747137069702, 0.8206313848495483, 0.8304054737091064, 0.8273676037788391, 0.8385946154594421, 0.8397833704948425, 0.8396512866020203], "val_loss": [1.8878991944449288, 1.1510402134486608, 1.0654762131827218, 0.8485900333949498, 0.6047812529972622, 0.5778056383132935, 0.5592823198863438, 0.5083741971424648, 0.5356705359050206, 0.47889050415584017, 0.47776167733328684, 0.4609064885548183, 0.4480420010430472, 0.47104029996054514, 0.43702333314078196, 0.4507777861186436, 0.44056769779750277, 0.41528284549713135, 0.4388499770845686, 0.4110378452709743, 0.38371345826557707, 0.4004579186439514, 0.38324300731931416, 0.40200904437473844, 0.37487477915627615, 0.3876041684831892], "val_accuracy": [0.2669999897480011, 0.5393333435058594, 0.5543333292007446, 0.6729999780654907, 0.7360000014305115, 0.7379999756813049, 0.7546666860580444, 0.7739999890327454, 0.7476666569709778, 0.7856666445732117, 0.778333306312561, 0.7973333597183228, 0.8036666512489319, 0.7876666784286499, 0.8086666464805603, 0.7993333339691162, 0.7990000247955322, 0.8223333358764648, 0.8040000200271606, 0.8163333535194397, 0.8346666693687439, 0.8303333520889282, 0.8343333601951599, 0.8196666836738586, 0.8306666612625122, 0.8343333601951599]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 5, 2, 9, 5, 5, 6, 8, 6, 5, 8, 9], [2, 2, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 0, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [1, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.8217142820358276, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 7, 2, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.square(tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(beta, beta))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1206312854418177, 1.998194443157651, 1.5711801206871912, 1.1272582567095553, 0.8448550593914405, 0.7785320463685658, 0.7942522673747953, 0.6728466819495006, 0.644296267784944, 0.6086331145827324, 0.597880336468671, 0.5617138880386549, 0.5805458188875713, 0.5449749724566739, 0.5424188560325361, 0.5029198216204755, 0.5097460043806646, 0.48782552365204285, 0.47815447955193885, 0.4782811581513759, 0.4774577090170531, 0.4572199456853291, 0.4554957694593847, 0.434427460623833, 0.41960566729728366, 0.41835278903236633], "accuracy": [0.2693171203136444, 0.3489631414413452, 0.4679698944091797, 0.589750349521637, 0.6868313550949097, 0.7073041796684265, 0.705058753490448, 0.7473253011703491, 0.7552502751350403, 0.770439863204956, 0.7651565074920654, 0.7885351777076721, 0.7917051911354065, 0.7979130744934082, 0.7940827012062073, 0.8150838613510132, 0.8094043135643005, 0.8177255392074585, 0.8193105459213257, 0.8207634687423706, 0.8214238286018372, 0.8300092220306396, 0.8274996876716614, 0.8459912538528442, 0.8466516733169556, 0.8442742228507996], "val_loss": [1.888085092817034, 1.1917757306780135, 1.1397242886679513, 0.8186048098972866, 0.6354207141058785, 0.5466787304197039, 0.5479541335787091, 0.49886463369641987, 0.5167210442679269, 0.480406607900347, 0.4718412331172398, 0.4640521321977888, 0.4635001931871687, 0.46139022282191683, 0.4372780663626535, 0.4380793571472168, 0.44067042214529856, 0.3982288496834891, 0.3909249986921038, 0.5044093983513969, 0.39566149030412945, 0.3974082129342215, 0.3911638174738203, 0.3905329023088728, 0.4150957465171814, 0.43771045548575266], "val_accuracy": [0.2693333327770233, 0.5363333225250244, 0.5226666927337646, 0.6676666736602783, 0.7096666693687439, 0.7536666393280029, 0.7590000033378601, 0.7786666750907898, 0.7590000033378601, 0.7863333225250244, 0.7889999747276306, 0.8003333210945129, 0.7879999876022339, 0.7903333306312561, 0.8043333292007446, 0.8043333292007446, 0.7926666736602783, 0.8289999961853027, 0.8276666402816772, 0.7723333239555359, 0.8299999833106995, 0.8296666741371155, 0.8223333358764648, 0.8293333053588867, 0.8186666369438171, 0.8080000281333923]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 8, 6, 3, 3, 8, 9, 8, 6, 5, 8, 9], [2, 2, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.8208571672439575, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, beta), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1206569458121685, 1.9800536342190556, 1.5767771527594296, 1.1540997076847015, 0.937445332290411, 0.8010579102295359, 0.7156170997180644, 0.6810894238792942, 0.6629534479239991, 0.6218684846147837, 0.6083153633157481, 0.5726628513494266, 0.584971274367224, 0.5390038344019581, 0.5548713232437696, 0.5052282497583993, 0.5240323940020637, 0.4840397776913067, 0.4896750602314674, 0.4811083977256453, 0.45820478436622825, 0.47625053779182336, 0.46291496823838896, 0.4487769933046682, 0.4506232600327984, 0.4257243941953201, 0.4222880958518836, 0.4400203503070963, 0.4115119554528534, 0.3942123982632684, 0.4031322447497217, 0.38155600065647133, 0.41235258273869896, 0.37089846565534157, 0.37395624782761655, 0.37183091099535265, 0.3656044113613973], "accuracy": [0.26918503642082214, 0.35120856761932373, 0.4683661460876465, 0.6004490852355957, 0.6649055480957031, 0.6954167485237122, 0.7302865982055664, 0.748778223991394, 0.7470611333847046, 0.7618544697761536, 0.770439863204956, 0.7860256433486938, 0.7799497842788696, 0.7980451583862305, 0.7880068421363831, 0.8156121969223022, 0.8005547523498535, 0.8224804997444153, 0.8189142942428589, 0.8189142942428589, 0.8285563588142395, 0.8207634687423706, 0.8264430165290833, 0.8350284099578857, 0.8333113193511963, 0.8428213000297546, 0.844010055065155, 0.835160493850708, 0.8469158411026001, 0.8535200357437134, 0.850350022315979, 0.8617091774940491, 0.8486329317092896, 0.8619733452796936, 0.8661999702453613, 0.859199583530426, 0.8568220734596252], "val_loss": [1.8882942199707031, 1.1369970866612025, 0.8613008771623883, 0.7172683136803764, 0.6845591579164777, 0.5597090721130371, 0.5739437852587018, 0.505735056740897, 0.537787641797747, 0.49985519477299284, 0.47903893675122944, 0.47135554041181293, 0.44567116669246126, 0.465880138533456, 0.4334114279065813, 0.4588587624686105, 0.43731766087668283, 0.4262573037828718, 0.4571917567934309, 0.3861692803246634, 0.40028213603155954, 0.3978673219680786, 0.42291325330734253, 0.39047448124204365, 0.4298581991876875, 0.37665869508470806, 0.41891950368881226, 0.36708708320345196, 0.38288006612232756, 0.3780649644987924, 0.374245354107448, 0.34544072832380024, 0.3686513049261911, 0.3634223427091326, 0.3619249292782375, 0.37185840947287424, 0.3645921604973929], "val_accuracy": [0.2683333456516266, 0.5383333563804626, 0.6193333268165588, 0.6966666579246521, 0.6743333339691162, 0.7423333525657654, 0.7413333058357239, 0.7720000147819519, 0.7443333268165588, 0.7670000195503235, 0.7829999923706055, 0.7913333177566528, 0.8083333373069763, 0.7826666831970215, 0.809333324432373, 0.7919999957084656, 0.7979999780654907, 0.8163333535194397, 0.7913333177566528, 0.8299999833106995, 0.8246666789054871, 0.831333339214325, 0.8146666884422302, 0.8286666870117188, 0.8159999847412109, 0.8363333344459534, 0.8140000104904175, 0.8379999995231628, 0.8316666483879089, 0.831333339214325, 0.8333333134651184, 0.8519999980926514, 0.8399999737739563, 0.8416666388511658, 0.8396666646003723, 0.8346666693687439, 0.8356666564941406]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 6, 3, 2, 4, 5, 1, 8, 6, 5, 8, 9], [2, 2, 3, 3, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.8119999766349792, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1206634543465115, 1.999472854207016, 1.6391550834231514, 1.039853344866156, 0.8757311141234284, 0.8137112992503592, 0.7414134050546116, 0.6752660350713905, 0.6401261001246685, 0.6100520354377879, 0.6037620117698662, 0.565204961605989, 0.5806809986870538, 0.5272188704672932, 0.5557336946756234, 0.5146933197975159, 0.5071912766085513, 0.4902828268056312, 0.48979383159889883, 0.4616858666567613, 0.460050534692659, 0.4584717000590465, 0.44753090912293386, 0.42791250386274, 0.4268748587770642, 0.4154844436828471, 0.42504852600006965], "accuracy": [0.2694492042064667, 0.3485668897628784, 0.45264825224876404, 0.6198652982711792, 0.6730946898460388, 0.694360077381134, 0.7206445932388306, 0.7485140562057495, 0.7564390301704407, 0.7680623531341553, 0.7676661014556885, 0.7835160493850708, 0.7853652238845825, 0.8020076751708984, 0.7971205711364746, 0.8061022162437439, 0.81548011302948, 0.8197067975997925, 0.8170651197433472, 0.8305375576019287, 0.8265751004219055, 0.8323867321014404, 0.8322546482086182, 0.8428213000297546, 0.8426892161369324, 0.844010055065155, 0.8397833704948425], "val_loss": [1.8883226258414132, 1.1480964251926966, 0.9845173358917236, 0.8092242990221296, 0.6748661654336112, 0.5716177906308856, 0.610465373311724, 0.4978795903069632, 0.54001784324646, 0.4846352679388864, 0.47295776435307096, 0.45912677901131765, 0.43383714130946566, 0.5111212730407715, 0.45276990958622526, 0.4724078859601702, 0.41284613949911936, 0.46393600531986784, 0.41279648883002146, 0.40247048650469097, 0.4018762878009251, 0.3867734159742083, 0.38149516923086985, 0.387846120766231, 0.4141576715878078, 0.4226839968136379, 0.41268173285893034], "val_accuracy": [0.2680000066757202, 0.5236666798591614, 0.5766666531562805, 0.6520000100135803, 0.684333324432373, 0.7433333396911621, 0.7263333201408386, 0.7816666960716248, 0.7513333559036255, 0.784333348274231, 0.7839999794960022, 0.8023333549499512, 0.8090000152587891, 0.7666666507720947, 0.7963333129882812, 0.7993333339691162, 0.8213333487510681, 0.7950000166893005, 0.8193333148956299, 0.8166666626930237, 0.8233333230018616, 0.8370000123977661, 0.8363333344459534, 0.8309999704360962, 0.8173333406448364, 0.8119999766349792, 0.8186666369438171]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 0, 3, 2, 7, 5, 1, 8, 6, 5, 8, 9], [1, 3, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.806857168674469, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 0, 4, 3, 2, 1, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.negative(alpha)), tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, grad), tf.math.add(grad, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.120671016287259, 2.0366780326162046, 1.4756887094644806, 1.15594122211742, 0.8399717439167284, 0.7689478311713787, 0.696083232766334, 0.6636499604292675, 0.6306254059930503, 0.61650924058465, 0.5946725802949989, 0.5542156859364382, 0.5725696973828371, 0.5290949924935943, 0.5341954846754365, 0.49377294680099476, 0.49313418291043676, 0.4787855237671224, 0.4679844142455057, 0.4835343963481715, 0.46433219641915496, 0.4594697661490221, 0.4442103590002905, 0.43696588806866055, 0.40685948850361897, 0.42924815394292337, 0.41405172077829433, 0.4257699742710523, 0.40900721036369114, 0.37805348591026045, 0.3965168569806293, 0.3600453108789237, 0.36251401498159946, 0.3741727153213505], "accuracy": [0.2693171203136444, 0.32981112599372864, 0.48527276515960693, 0.5826178789138794, 0.6897371411323547, 0.7067758440971375, 0.7316074371337891, 0.7423061728477478, 0.7555144429206848, 0.7681944370269775, 0.7712323069572449, 0.7909126877784729, 0.7893276810646057, 0.8021397590637207, 0.7946110367774963, 0.8117818236351013, 0.81548011302948, 0.8238013386726379, 0.8322546482086182, 0.8271034359931946, 0.8267071843147278, 0.8289526104927063, 0.8348963260650635, 0.8372738361358643, 0.8474441766738892, 0.8388587832450867, 0.8438779711723328, 0.8437458872795105, 0.8446704745292664, 0.8618412613868713, 0.8475762605667114, 0.8671245574951172, 0.8671245574951172, 0.860652506351471], "val_loss": [1.8886756215776717, 1.529862642288208, 1.2145862238747733, 0.6924399137496948, 0.6162504809243339, 0.5436011041913714, 0.5286408833095005, 0.5639051028660366, 0.48328258310045513, 0.5105088949203491, 0.4666811057499477, 0.4631000246320452, 0.4352640083857945, 0.45125058719090055, 0.44777863366263254, 0.4216118114335196, 0.4107797997338431, 0.39373901912144255, 0.4012299180030823, 0.42296014513288227, 0.4201786858694894, 0.39045617410114836, 0.38799927064350676, 0.3915933881487165, 0.3637459789003645, 0.364038280078343, 0.39815254722322735, 0.37664140122277395, 0.3645305037498474, 0.3679803098951067, 0.3705751299858093, 0.3612135052680969, 0.3778156638145447, 0.3702964612415859], "val_accuracy": [0.2696666717529297, 0.3726666569709778, 0.5083333253860474, 0.7260000109672546, 0.7129999995231628, 0.7393333315849304, 0.7639999985694885, 0.7369999885559082, 0.7816666960716248, 0.7699999809265137, 0.7910000085830688, 0.8009999990463257, 0.8136666417121887, 0.7973333597183228, 0.7983333468437195, 0.8136666417121887, 0.8216666579246521, 0.8259999752044678, 0.8173333406448364, 0.8069999814033508, 0.8090000152587891, 0.8303333520889282, 0.8246666789054871, 0.8253333568572998, 0.8383333086967468, 0.8420000076293945, 0.8253333568572998, 0.8330000042915344, 0.843666672706604, 0.8326666951179504, 0.8306666612625122, 0.8396666646003723, 0.8370000123977661, 0.8363333344459534]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 6, 3, 2, 7, 5, 1, 8, 6, 5, 8, 9], [1, 3, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.8065714240074158, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 4, 5, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, alpha), tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1206277916696266, 2.0161037724078876, 1.6032824965043546, 1.1933643964334895, 0.895534088614437, 0.8280305730872985, 0.7135241480315161, 0.6963234787304734, 0.6554780971923635, 0.6238061626432059, 0.5908243480832145, 0.5819168419901564, 0.5785400169699687, 0.5470389094587016, 0.5505834255928943, 0.5127260428236429, 0.5183538032670802, 0.4865780616984344, 0.4949903870342178, 0.4848529331207968, 0.4572774685251085, 0.4537679067282802, 0.45765666217458184, 0.4258606663123098, 0.43368319212296036, 0.43751130115008074], "accuracy": [0.2693171203136444, 0.342491090297699, 0.44089287519454956, 0.5884295105934143, 0.6740192770957947, 0.6864351034164429, 0.7280412316322327, 0.7329282760620117, 0.7441553473472595, 0.7643640041351318, 0.7753269076347351, 0.7766477465629578, 0.7852331399917603, 0.7954035401344299, 0.7913089394569397, 0.8100647330284119, 0.806630551815033, 0.822348415851593, 0.8153480291366577, 0.8195747137069702, 0.8319904804229736, 0.8323867321014404, 0.8314621448516846, 0.8445383906364441, 0.8383304476737976, 0.8425571322441101], "val_loss": [1.8878399303981237, 1.3451395715985979, 1.1543350900922502, 0.7918446915490287, 0.6207329716001239, 0.591067944254194, 0.6710329907281058, 0.5113938706261771, 0.5039459466934204, 0.47664242131369455, 0.4737041848046439, 0.46692025661468506, 0.4490429844175066, 0.46889775139944895, 0.4543447494506836, 0.47846908228737967, 0.4071995105062212, 0.4738034350531442, 0.4269398365701948, 0.422648480960301, 0.3744243213108608, 0.3989163211413792, 0.3843751209122794, 0.3884226679801941, 0.37427760873522076, 0.4074015532221113], "val_accuracy": [0.26766666769981384, 0.47466665506362915, 0.5289999842643738, 0.6679999828338623, 0.7146666646003723, 0.7286666631698608, 0.7086666822433472, 0.7713333368301392, 0.765666663646698, 0.7860000133514404, 0.7883333563804626, 0.7896666526794434, 0.8063333630561829, 0.7789999842643738, 0.7993333339691162, 0.7916666865348816, 0.8240000009536743, 0.7856666445732117, 0.8086666464805603, 0.8006666898727417, 0.8396666646003723, 0.8346666693687439, 0.8303333520889282, 0.8323333263397217, 0.8309999704360962, 0.8206666707992554]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 6, 3, 5, 7, 5, 1, 8, 6, 5, 8, 9], [0, 2, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.8002856969833374, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.square(tf.math.add(beta, grad)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.12063259650782, 2.014628522841056, 1.6509279096918557, 1.3154077091709562, 0.9372524536517255, 0.8469870484594845, 0.7667180826603823, 0.7271186107925341, 0.6771613305365451, 0.6382313617358134, 0.5943975197467444, 0.6101218684238292, 0.5935322363158385, 0.5699705903036656, 0.5517719311484918, 0.5078635163720352, 0.5455799738193436, 0.49629961628687774, 0.48966813505506784, 0.48753750401795926, 0.4873576003050902, 0.4710636305975923, 0.4583578836475428, 0.4383495072442401, 0.44331045173824013, 0.43313504027857397, 0.4433050232792669, 0.44730701328126937, 0.4123601641133477, 0.3987378169044512, 0.40675808154140025, 0.4058612270551099, 0.38628480857106057, 0.37905029457132844, 0.37153372529506873, 0.37289612202076877, 0.35027596382432846, 0.35551796048749723, 0.3805127989472714, 0.35559246112106496, 0.3475150750329261, 0.3292697295339872, 0.3309217516803754, 0.33060118843378283, 0.3519292087673653, 0.31757449098015034, 0.3343495540985137, 0.30170297177082606, 0.30799924317619914], "accuracy": [0.2693171203136444, 0.3419627547264099, 0.43666622042655945, 0.5695416927337646, 0.6676793098449707, 0.681547999382019, 0.719852089881897, 0.7276449799537659, 0.7387399077415466, 0.757099449634552, 0.7754589915275574, 0.7761194109916687, 0.7738739848136902, 0.7864218950271606, 0.7898560166358948, 0.8128384351730347, 0.7975168228149414, 0.8175934553146362, 0.8216879963874817, 0.8203672170639038, 0.8201030492782593, 0.8230088353157043, 0.8318583965301514, 0.8374059200286865, 0.8379341959953308, 0.8413683772087097, 0.83119797706604, 0.8343679904937744, 0.8477083444595337, 0.8506141901016235, 0.8481045961380005, 0.8462554216384888, 0.8558974862098694, 0.8607845902442932, 0.8660678863525391, 0.8588033318519592, 0.8685774803161621, 0.8656716346740723, 0.863029956817627, 0.8651432991027832, 0.8704266548156738, 0.8772949576377869, 0.8792761564254761, 0.8775591254234314, 0.8684453964233398, 0.8845595121383667, 0.8733324408531189, 0.8873332738876343, 0.8796724081039429], "val_loss": [1.888143471309117, 1.3460567678724016, 1.2657335826328822, 0.9525407723018101, 0.6359819684709821, 0.5879510300500053, 0.5560575553349086, 0.5404564823423114, 0.535888637815203, 0.48461484909057617, 0.5600577933447701, 0.46436050959995817, 0.47166551862444195, 0.47692724636622835, 0.46285133702414377, 0.4326158506529672, 0.4451842989240374, 0.4069119095802307, 0.45641917841775076, 0.4858910526548113, 0.40969206605638775, 0.4135334662028721, 0.39923996584756033, 0.4061309950692313, 0.4287933281489781, 0.4087464724268232, 0.395463764667511, 0.371884286403656, 0.38107430934906006, 0.38679211480276926, 0.35559033496039255, 0.3516725812639509, 0.3771233218056815, 0.3563133307865688, 0.37027386256626676, 0.3433351857321603, 0.3703584500721523, 0.41634152616773334, 0.36585997683661325, 0.34739573512758526, 0.3510793021747044, 0.3381070835249765, 0.36962149824414936, 0.32698245559419903, 0.3532471912247794, 0.3574478030204773, 0.33609652519226074, 0.33307156392506193, 0.32486660139901297], "val_accuracy": [0.26866665482521057, 0.46966665983200073, 0.5429999828338623, 0.6636666655540466, 0.7179999947547913, 0.7353333234786987, 0.7556666731834412, 0.7599999904632568, 0.7543333172798157, 0.7900000214576721, 0.7490000128746033, 0.7996666431427002, 0.7896666526794434, 0.7710000276565552, 0.8006666898727417, 0.8140000104904175, 0.7946666479110718, 0.8266666531562805, 0.8009999990463257, 0.7760000228881836, 0.8163333535194397, 0.8270000219345093, 0.8199999928474426, 0.8236666917800903, 0.8113333582878113, 0.8236666917800903, 0.82833331823349, 0.8420000076293945, 0.82833331823349, 0.8276666402816772, 0.8500000238418579, 0.847000002861023, 0.8403333425521851, 0.8473333120346069, 0.8370000123977661, 0.8516666889190674, 0.8333333134651184, 0.8149999976158142, 0.840666651725769, 0.8519999980926514, 0.8510000109672546, 0.8569999933242798, 0.8363333344459534, 0.862666666507721, 0.8460000157356262, 0.8496666550636292, 0.8560000061988831, 0.859000027179718, 0.862666666507721]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 6, 3, 2, 5, 5, 1, 8, 6, 5, 8, 9], [3, 3, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.19657142460346222, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.676318244281588, 2.4794940282136158, 2.3978235014299627, 2.341068736314301, 2.4771396116164257, 2.3668490229596424, 17.348728800430873], "accuracy": [0.20803064107894897, 0.14898955821990967, 0.20155857503414154, 0.11570466309785843, 0.1372341811656952, 0.10170386731624603, 0.10342095047235489], "val_loss": [2.1572249276297435, 1.866630962916783, 2.0102320398603166, 1.939404078892299, 1.9953252247401647, 2.02767699105399, 3.756007739475795], "val_accuracy": [0.09833333641290665, 0.2213333398103714, 0.09966666996479034, 0.16099999845027924, 0.10333333164453506, 0.10066666454076767, 0.13699999451637268]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 2, 2, 5, 5, 1, 8, 6, 5, 8, 9], [1, 3, 0, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [1, 0, 8, 9, 7], [1, 0], [88, 19], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [0, 2, 0, 2, 3, 3, 2], [11, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 8, 6, 1, 3, 2, 1, 1, 0, 2, 1, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), grad))))), tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)), tf.math.sqrt(grad))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [3.009297651369747, 10.175374766319434, 26.93717964655058, 54.163058345312486, 95.86195750319018, 151.95854509681396], "accuracy": [0.09549596905708313, 0.1026284471154213, 0.09906221181154251, 0.10328886657953262, 0.09840179979801178, 0.1022322028875351], "val_loss": [3.860401289803641, 11.621680123465401, 25.854167938232422, 47.9101551600865, 79.37466648646763, 122.06113106863839], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 9, 6, 3, 3, 8, 9, 8, 6, 5, 8, 9], [1, 4, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, grad))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3032272774954956, 2.302574330632083, 2.302590686505607, 2.30256326988058, 2.3026235508896717, 2.3026089075927674, 2.302577215556723], "accuracy": [0.09509972482919693, 0.10051512718200684, 0.1006472036242485, 0.09787346422672272, 0.09853387624025345, 0.10011887550354004, 0.09800554811954498], "val_loss": [1.9736450740269251, 1.973644529070173, 1.9736446653093611, 1.973644529070173, 1.9736440522330148, 1.9736435072762626, 1.9736439841134208], "val_accuracy": [0.09966666996479034, 0.10000000149011612, 0.10000000149011612, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 2, 2, 5, 5, 1, 8, 6, 5, 8, 9], [2, 4, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0754193663597107, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 6, 3, 2, 7, 5, 1, 8, 6, 5, 8, 9], [1, 3, 0, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [1, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 9, 9, 4, 5, 1, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(alpha), tf.math.pow(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [151718844.0277, 2894061017.385286, 13529741270.883106, 37037183896.80201, 80398271686.68657, 146659994989.58868], "accuracy": [0.09496764093637466, 0.1014397069811821, 0.09866596013307571, 0.10170386731624603, 0.09787346422672272, 0.10249637067317963], "val_loss": [583487067.4285715, 4665083611.428572, 15741469257.142857, 37309338185.14286, 72865789659.42857, 125906705261.71428], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 0, 2, 2, 5, 5, 1, 8, 6, 5, 8, 9], [1, 5, 3, 0, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [4, 0, 8, 9, 7], [2, 0], [88, 19], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [8, 3, 0, 4, 2, 1, 2, 3], [1, 2, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.negative(alpha)), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 8, 6, 3, 3, 8, 9, 8, 6, 5, 8, 9], [5, 2, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [1, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 6, 3, 2, 5, 5, 1, 8, 6, 5, 8, 9], [1, 3, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [9, 0, 8, 9, 7], [1, 0], [88, 19], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [2, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 2, 2, 5, 5, 1, 8, 6, 5, 8, 9], [1, 3, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 1], [6, 0, 8, 9, 7], [1, 0], [88, 19], [0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 8, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06789063662290573, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 6, 3, 2, 5, 5, 1, 8, 6, 5, 8, 9], [1, 3, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 2, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.square(grad)), tf.math.square(grad))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 4, 2, 9, 5, 5, 1, 8, 6, 5, 8, 9], [1, 3, 0, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [1, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [0, 0, 0, 2, 3, 3, 2], [48, 57, 96]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 0, 3, 2, 1, 1, 0, 7, 4, 3, 3], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3032629558549123, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09800554811954498, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 8, 6, 3, 3, 8, 9, 8, 6, 5, 8, 9], [2, 2, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [1, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 0, 3, 2, 1, 1, 0, 7, 4, 3, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, beta))))), tf.math.multiply(tf.math.add(beta, tf.math.multiply(grad, grad)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.negative(tf.math.pow(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.3031334893074584, 2.3034974666492674, 2.3020378717924577, 2.3019473909812125, 2.3029253081307988, 2.302392509934326], "accuracy": [0.09285431355237961, 0.08968432247638702, 0.09311848133802414, 0.09681680053472519, 0.09311848133802414, 0.09166556596755981], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]