[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 8, 6, 8, 2, 5, 1, 2, 2, 0, 8, 9], [3, 3, 3, 3, 0, 2, 2, 4, 2, 0], [95, 62, 0, 81, 53, 45], [0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [47, 57]], "fitness": -0.8402857184410095, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(grad, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1187344455857553, 1.9796512756743183, 1.4747600558883935, 1.2631230938310212, 0.978406920613803, 0.8729559227837989, 0.7609824986820601, 0.7599549213530853, 0.6927348645119824, 0.6665606941245944, 0.63753923193937, 0.6185066522765925, 0.622607574156168, 0.6110983774126986, 0.5684812042408017, 0.5660990326396069, 0.5319031748742066, 0.5600143848881352, 0.5346262366260599, 0.518539350321894, 0.5006953362838514, 0.512547116072706, 0.4913751615776976, 0.4844072238289842, 0.4728709252290659, 0.4874849791272347, 0.4516110747300749, 0.47689125919228675, 0.4457380727746342, 0.4435243593104968, 0.44848843943315364, 0.4096577536900754, 0.41685595884063004, 0.42026686703036126, 0.4044988822974801, 0.3942279910068187, 0.3947743986182288, 0.3875997755521513, 0.4173582740479362, 0.38330861900098695, 0.3640702845492556, 0.37372896684600126, 0.35831324650060076, 0.36507707346526463, 0.37681343041044485], "accuracy": [0.29097872972488403, 0.36441686749458313, 0.5190860033035278, 0.5560691952705383, 0.6391493678092957, 0.6748117804527283, 0.7092854380607605, 0.7063795924186707, 0.7427024245262146, 0.744419515132904, 0.7611940503120422, 0.7648923397064209, 0.7644960880279541, 0.76542067527771, 0.7866860628128052, 0.7889314293861389, 0.8012151718139648, 0.7932901978492737, 0.7971205711364746, 0.8034605979919434, 0.8098005652427673, 0.8107251524925232, 0.8175934553146362, 0.8175934553146362, 0.8231409192085266, 0.8185180425643921, 0.8285563588142395, 0.8260467648506165, 0.8364813327789307, 0.8355567455291748, 0.8325188159942627, 0.8437458872795105, 0.8453308939933777, 0.8462554216384888, 0.8549728989601135, 0.8533879518508911, 0.8529917001724243, 0.859199583530426, 0.8486329317092896, 0.8552370667457581, 0.869502067565918, 0.8588033318519592, 0.8679170608520508, 0.8651432991027832, 0.8561616539955139], "val_loss": [1.9080088479178292, 1.5014474732535226, 1.193913527897426, 0.7361657449177333, 0.7487607342856271, 0.6045441797801426, 0.6038111788885934, 0.5477247749056134, 0.5214439289910453, 0.5255228281021118, 0.49309779916490826, 0.47486633913857595, 0.4838454382760184, 0.5059740202767509, 0.46476141044071745, 0.4670485087803432, 0.478089553969247, 0.4684368882860456, 0.4105679307665144, 0.44089322430746897, 0.45626093660082134, 0.45379880496433805, 0.40681879009519306, 0.4187520146369934, 0.428285436970847, 0.38298358236040386, 0.37855800560542513, 0.37243475232805523, 0.39959543091910227, 0.37437571798052105, 0.38321452481406076, 0.3749462962150574, 0.3664312618119376, 0.35870178256716045, 0.3604673913546971, 0.3522148217473711, 0.36238281215940205, 0.4553002119064331, 0.3898719378880092, 0.34369330746786936, 0.35308865138462614, 0.35280165502003263, 0.36247393063136507, 0.35268705231802805, 0.3734001176697867], "val_accuracy": [0.20000000298023224, 0.48766666650772095, 0.5383333563804626, 0.6850000023841858, 0.6846666932106018, 0.7480000257492065, 0.7170000076293945, 0.765666663646698, 0.7639999985694885, 0.7699999809265137, 0.781333327293396, 0.7926666736602783, 0.7803333401679993, 0.7680000066757202, 0.7886666655540466, 0.7993333339691162, 0.7883333563804626, 0.7923333048820496, 0.8153333067893982, 0.8013333082199097, 0.7946666479110718, 0.8013333082199097, 0.8263333439826965, 0.8143333196640015, 0.8130000233650208, 0.8299999833106995, 0.8393333554267883, 0.8323333263397217, 0.8190000057220459, 0.8323333263397217, 0.8320000171661377, 0.8423333168029785, 0.8363333344459534, 0.8446666598320007, 0.8486666679382324, 0.8500000238418579, 0.8456666469573975, 0.8103333115577698, 0.8240000009536743, 0.8560000061988831, 0.8463333249092102, 0.8543333411216736, 0.8453333377838135, 0.8423333168029785, 0.8399999737739563]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1], [6, 3, 1, 2, 5, 9, 1, 8, 6, 5, 8, 9], [3, 3, 3, 3, 0, 2, 2, 4, 3, 0], [52, 47, 79, 81, 53, 45], [0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.828000009059906, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1627417456251896, 2.142654184620567, 1.793656678483817, 1.4614573410237235, 0.9755451158289392, 0.7741545734939606, 0.716344633941338, 0.6895318617516536, 0.6659713591472458, 0.628375167111994, 0.5929421486320465, 0.5818981067332232, 0.5742275210073076, 0.554591832647801, 0.5198002584763742, 0.5114962845399096, 0.5104712305398366, 0.5177470559473004, 0.4864043038298567, 0.4730097831964587, 0.47674141865774244, 0.45744448701042023, 0.45902095173548685, 0.46308640758390707, 0.43684432569858245, 0.43194831253719873, 0.433322801684124, 0.4325472946652584, 0.40996818398960105, 0.3950644787693729, 0.4048674417060081, 0.3863714771925136, 0.39285170678465103, 0.3821070707508791, 0.3807553004878403, 0.3882079359098212, 0.377499421526806, 0.34737879439367675], "accuracy": [0.2896578907966614, 0.30880993604660034, 0.38541802763938904, 0.4962356388568878, 0.6395456194877625, 0.7073041796684265, 0.7300224304199219, 0.7392682433128357, 0.7478536367416382, 0.7644960880279541, 0.7750627398490906, 0.7868181467056274, 0.7860256433486938, 0.7868181467056274, 0.8026680946350098, 0.8068947196006775, 0.8101968169212341, 0.8067626357078552, 0.8215559124946594, 0.8216879963874817, 0.8211596608161926, 0.8317263126373291, 0.8301413059234619, 0.82683926820755, 0.8356888294219971, 0.842028796672821, 0.837141752243042, 0.8358209133148193, 0.8495575189590454, 0.852331280708313, 0.8437458872795105, 0.857218325138092, 0.8529917001724243, 0.858671247959137, 0.8589354157447815, 0.8512746095657349, 0.8601241707801819, 0.8728041052818298], "val_loss": [1.9465621539524622, 1.8942756652832031, 1.307967049734933, 0.7852548360824585, 0.620055113519941, 0.5967916079929897, 0.574721097946167, 0.5177996328898838, 0.4998680182865688, 0.5176600899015155, 0.46182005746023996, 0.43266476903642925, 0.4414064884185791, 0.4722100666591099, 0.42698462520326885, 0.4306478074618748, 0.45154946190970285, 0.431732714176178, 0.38062035185950144, 0.40758347511291504, 0.4015786647796631, 0.3669869303703308, 0.3960391027586801, 0.4437884943825858, 0.3753167390823364, 0.36023744515010286, 0.36351355484553743, 0.36579774958746775, 0.3463775174958365, 0.35267547198704313, 0.3803908314023699, 0.3633934259414673, 0.3495728203228542, 0.388424813747406, 0.363824086529868, 0.3504828299794878, 0.3438415101596287, 0.4010199989591326], "val_accuracy": [0.21899999678134918, 0.29600000381469727, 0.5056666731834412, 0.6443333625793457, 0.7256666421890259, 0.7283333539962769, 0.737666666507721, 0.7763333320617676, 0.781000018119812, 0.7576666474342346, 0.7893333435058594, 0.8080000281333923, 0.7910000085830688, 0.778333306312561, 0.8119999766349792, 0.8013333082199097, 0.7793333530426025, 0.8119999766349792, 0.8273333311080933, 0.8226666450500488, 0.8220000267028809, 0.8413333296775818, 0.8243333101272583, 0.7803333401679993, 0.8360000252723694, 0.8429999947547913, 0.8346666693687439, 0.8353333473205566, 0.8456666469573975, 0.8423333168029785, 0.8253333568572998, 0.8389999866485596, 0.8510000109672546, 0.8246666789054871, 0.8453333377838135, 0.8479999899864197, 0.8453333377838135, 0.828000009059906]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1], [6, 3, 1, 2, 5, 2, 1, 3, 0, 5, 8, 9], [3, 3, 0, 0, 0, 2, 2, 4, 3, 0], [52, 47, 0, 81, 53, 45], [0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.8162857294082642, "mapping_values": [1, 1, 1, 0, 1, 0, 18, 18, 10, 8, 3, 2, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.square(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, tf.math.negative(beta))), tf.math.add(beta, tf.math.square(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1627381980033396, 2.1686473586823505, 1.8408448747781763, 1.473945232603481, 0.9040970331280066, 0.8095642160966239, 0.7403111215343785, 0.7164850590912705, 0.6596986409490765, 0.6326787013655498, 0.5871759970284818, 0.5781625714426137, 0.5811706888141916, 0.546862393212183, 0.5218224096701303, 0.5171927880963724, 0.5132200497252641, 0.5105627245198245, 0.4996690639273649, 0.46802631527551525, 0.47348701157164913, 0.4630799066822023, 0.4511248674831685, 0.4334372138389743], "accuracy": [0.2896578907966614, 0.3055078685283661, 0.38422930240631104, 0.4916127324104309, 0.6708492636680603, 0.6984546184539795, 0.7169462442398071, 0.7351737022399902, 0.7514199018478394, 0.7582882046699524, 0.7803460359573364, 0.7844406366348267, 0.7827235460281372, 0.7917051911354065, 0.8026680946350098, 0.8041210174560547, 0.806630551815033, 0.8136309385299683, 0.8136309385299683, 0.8289526104927063, 0.8191784620285034, 0.8290846943855286, 0.8370096683502197, 0.8393871188163757], "val_loss": [1.9465814317975725, 1.9267441885811942, 1.534235647746495, 0.7517053740365165, 0.6981124196733747, 0.5971363612583706, 0.5298445395060948, 0.5259691817419869, 0.5034954377583095, 0.510150841304234, 0.5006047316959926, 0.462701678276062, 0.4516587938581194, 0.45863473415374756, 0.4155094879014151, 0.4318318452153887, 0.4404237610953195, 0.42623906476157053, 0.37726246459143503, 0.40107801982334684, 0.41341130222593037, 0.3845768826348441, 0.4046352335384914, 0.43584554536002024], "val_accuracy": [0.21766667068004608, 0.3463333249092102, 0.4646666646003723, 0.6643333435058594, 0.6773333549499512, 0.737333357334137, 0.7570000290870667, 0.7523333430290222, 0.7756666541099548, 0.7583333253860474, 0.7670000195503235, 0.7990000247955322, 0.7853333353996277, 0.7893333435058594, 0.8180000185966492, 0.809333324432373, 0.7940000295639038, 0.8109999895095825, 0.8316666483879089, 0.8243333101272583, 0.8133333325386047, 0.8309999704360962, 0.8243333101272583, 0.7940000295639038]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [1, 2, 2, 4, 1, 5, 1, 3, 6, 0, 2, 9, 0, 9, 8, 6, 7], [3, 3, 3, 3, 0, 2, 2, 4, 2, 0], [45, 62, 0, 81, 53, 45], [0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [39, 57]], "fitness": -0.798285722732544, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.18023165140516, 1.5192695767762026, 1.1879466053296734, 0.9850332890960125, 0.8989524368313341, 0.8550887919766571, 0.808285873855157, 0.7700500806261913, 0.7431739421883405, 0.7313468919737527, 0.7024976879204773, 0.7208758424049859, 0.6786510792264786, 0.6718895457691882, 0.6701777000090922, 0.6439428569350686, 0.635058491497055, 0.6233921502606744, 0.6425518013026185, 0.6263205949750953, 0.6052023108215568], "accuracy": [0.27380794286727905, 0.49768856167793274, 0.5733720660209656, 0.6457535624504089, 0.6687359809875488, 0.6881521344184875, 0.7022850513458252, 0.7156254053115845, 0.7280412316322327, 0.7306828498840332, 0.7386078238487244, 0.7325320243835449, 0.750759482383728, 0.7503632307052612, 0.7481178045272827, 0.7629110813140869, 0.7658169269561768, 0.7693831920623779, 0.759609043598175, 0.7626469135284424, 0.7775723338127136], "val_loss": [1.5378708839416504, 0.9451549053192139, 0.7938168219157627, 0.6856348514556885, 0.6338345152991158, 0.6406831911631993, 0.589551431792123, 0.5629263094493321, 0.5607067176273891, 0.567405070577349, 0.5401725769042969, 0.5225455931254795, 0.518918548311506, 0.5375195911952427, 0.5177573817116874, 0.4828200169972011, 0.4972943067550659, 0.49205197606767925, 0.4766240971429007, 0.47893238067626953, 0.47936417375292095], "val_accuracy": [0.515999972820282, 0.5916666388511658, 0.6620000004768372, 0.7003333568572998, 0.7286666631698608, 0.7059999704360962, 0.7306666374206543, 0.7416666746139526, 0.7559999823570251, 0.7326666712760925, 0.7493333220481873, 0.7723333239555359, 0.7666666507720947, 0.746666669845581, 0.7739999890327454, 0.7913333177566528, 0.7846666574478149, 0.7863333225250244, 0.7863333225250244, 0.7793333530426025, 0.7796666622161865]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [6, 3, 1, 2, 5, 2, 1, 3, 0, 5, 8, 9], [3, 3, 5, 3, 0, 2, 2, 4, 2, 0], [45, 62, 0, 81, 53, 45], [0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [3, 0, 0, 1, 3, 3], [39, 57]], "fitness": -0.797428548336029, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1802278291815385, 1.5193016186933224, 1.1888600672240806, 0.9850310447225167, 0.9001706437569537, 0.8570056427754841, 0.8128102346497, 0.7707356938974433, 0.7440245415257142, 0.7300913971664883, 0.702448886446335, 0.7208658724397385, 0.6757626180493868, 0.6696973997745783, 0.6677260908940685, 0.6407487855579843, 0.6368151851428451, 0.6279699336488911, 0.6373448659636483, 0.6213532055546941, 0.6122163619977482], "accuracy": [0.27380794286727905, 0.49729230999946594, 0.5733720660209656, 0.6454893946647644, 0.6672830581665039, 0.6893408894538879, 0.7018887996673584, 0.7149649858474731, 0.7260599732398987, 0.7301545143127441, 0.7386078238487244, 0.7290979027748108, 0.7523444890975952, 0.7494386434555054, 0.7486461400985718, 0.7633073329925537, 0.763439416885376, 0.7693831920623779, 0.7621186375617981, 0.767930269241333, 0.7736098170280457], "val_loss": [1.5378638335636683, 0.947950942175729, 0.7917207990373883, 0.6846902540751866, 0.6301877668925694, 0.6385591881615775, 0.595502427646092, 0.567624602999006, 0.557400107383728, 0.5683672939028058, 0.5421091829027448, 0.521187458719526, 0.517079063824245, 0.5264408588409424, 0.5120053631918771, 0.48403520243508474, 0.5127829994474139, 0.49107532841818674, 0.4790104457310268, 0.5046691724232265, 0.48112055233546663], "val_accuracy": [0.515999972820282, 0.5913333296775818, 0.6626666784286499, 0.7043333053588867, 0.7253333330154419, 0.7103333473205566, 0.7296666502952576, 0.7383333444595337, 0.7586666941642761, 0.7350000143051147, 0.7450000047683716, 0.7720000147819519, 0.7699999809265137, 0.7523333430290222, 0.7713333368301392, 0.7960000038146973, 0.765666663646698, 0.7886666655540466, 0.7870000004768372, 0.7606666684150696, 0.7829999923706055]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1], [6, 3, 1, 2, 5, 2, 1, 3, 8, 3, 8, 9], [2, 3, 3, 3, 0, 2, 0, 4, 2, 0], [52, 47, 0, 81, 53, 45], [0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [30, 57]], "fitness": -0.7908571362495422, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 2, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2875345661151743, 2.2438919385505187, 2.188226719888887, 2.097227353303975, 1.9581759171227044, 1.7809820284287314, 1.5989864620282555, 1.4303717452458513, 1.312532431083254, 1.207619966359706, 1.1400998012343448, 1.0707014650165476, 1.0424181716222616, 0.9976984346547477, 0.9535760392507842, 0.939008819468033, 0.9277661148315534, 0.9002938289148554, 0.8785647372559565, 0.8591759811775355, 0.8356991751933095, 0.8386478832589637, 0.828729928043682, 0.8107766240122706, 0.8087698228213419, 0.7985368947531837, 0.7728758322296677, 0.7752609376374521, 0.7657811811193578, 0.7603607495085217, 0.7485338768246088, 0.7366196227552333, 0.7251007878202504, 0.7321959833474664, 0.7362552707882731, 0.717146944486391, 0.7123663680286707, 0.7049529158349491, 0.7057397456185504, 0.6965328363568603, 0.6957356691155782, 0.691588712933671, 0.6849774848106374, 0.6839940435047777, 0.6917677934159377, 0.6673357623238464, 0.6686722411376894, 0.6700713967036231, 0.6710804650544522, 0.6529371213635843, 0.6600264163616232, 0.6541564718071874, 0.6519570802228326], "accuracy": [0.12679962813854218, 0.23299431800842285, 0.3181878328323364, 0.37207767367362976, 0.42345792055130005, 0.45568618178367615, 0.490159809589386, 0.5316338539123535, 0.5543521046638489, 0.5838066339492798, 0.5972790718078613, 0.6283186078071594, 0.6273940205574036, 0.6391493678092957, 0.661471426486969, 0.6668868064880371, 0.6729626059532166, 0.6719059348106384, 0.6811517477035522, 0.6880200505256653, 0.6923788189888, 0.6942279934883118, 0.6996433734893799, 0.705058753490448, 0.7054550051689148, 0.7098137736320496, 0.7180029153823853, 0.7157574892044067, 0.7236824631690979, 0.7197200059890747, 0.7252674698829651, 0.7349095344543457, 0.7317395210266113, 0.7371549606323242, 0.7202483415603638, 0.7334566116333008, 0.7338528633117676, 0.7380794882774353, 0.735569953918457, 0.7465327978134155, 0.7425703406333923, 0.7424382567405701, 0.7445515990257263, 0.748249888420105, 0.7425703406333923, 0.7528728246688843, 0.7486461400985718, 0.7466648817062378, 0.752212405204773, 0.7557786107063293, 0.7503632307052612, 0.7540615797042847, 0.7564390301704407], "val_loss": [1.9343455859592982, 1.889286926814488, 1.8209389277866908, 1.7109451293945312, 1.550445488521031, 1.356428521020072, 1.177323375429426, 1.032649040222168, 0.9348687103816441, 0.8627933774675641, 0.810976505279541, 0.7692304509026664, 0.7401465518133981, 0.712648698261806, 0.6910485029220581, 0.6718683753694806, 0.6622147049222674, 0.6506888696125576, 0.6398359026227679, 0.6266570261546544, 0.6161715132849557, 0.609100307737078, 0.6063843624932426, 0.5945306846073696, 0.5879768473761422, 0.5838109936032977, 0.5780126196997506, 0.5729783773422241, 0.566512908254351, 0.5614442655018398, 0.5567907094955444, 0.5513089554650443, 0.5472415855952671, 0.5504062856946673, 0.5421746458326068, 0.5405065502439227, 0.5408144508089338, 0.5332285336085728, 0.5287219796861921, 0.5283665657043457, 0.5258255345480782, 0.5199341944285801, 0.5234884875161308, 0.5202176570892334, 0.5143736600875854, 0.512561729976109, 0.5101979460035052, 0.510601248059954, 0.504990782056536, 0.5027866363525391, 0.5018220458711896, 0.5018933670861381, 0.49828490189143587], "val_accuracy": [0.3163333237171173, 0.398333340883255, 0.47333332896232605, 0.518666684627533, 0.5673333406448364, 0.5929999947547913, 0.621999979019165, 0.6499999761581421, 0.6653333306312561, 0.6740000247955322, 0.6886666417121887, 0.6936666369438171, 0.6973333358764648, 0.7046666741371155, 0.7120000123977661, 0.718666672706604, 0.7160000205039978, 0.7283333539962769, 0.7239999771118164, 0.734000027179718, 0.7300000190734863, 0.737666666507721, 0.734000027179718, 0.7403333187103271, 0.7426666617393494, 0.7509999871253967, 0.7526666522026062, 0.7576666474342346, 0.7570000290870667, 0.7586666941642761, 0.7590000033378601, 0.7586666941642761, 0.7633333206176758, 0.7570000290870667, 0.7639999985694885, 0.7723333239555359, 0.7580000162124634, 0.7696666717529297, 0.7716666460037231, 0.7710000276565552, 0.7730000019073486, 0.7733333110809326, 0.7730000019073486, 0.7676666378974915, 0.7736666798591614, 0.7770000100135803, 0.7773333191871643, 0.781333327293396, 0.7786666750907898, 0.7796666622161865, 0.7770000100135803, 0.781333327293396, 0.7793333530426025]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [1, 2, 2, 4, 1, 5, 1, 3, 6, 0, 2, 9, 0, 9, 8, 6, 7], [3, 3, 3, 3, 0, 2, 2, 4, 2, 0], [45, 62, 0, 81, 53, 45], [0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 8, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [31, 57]], "fitness": -0.2345714271068573, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.add(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.969755363943019, 2.434344092884147, 2.3088144996556403, 2.303830456251891, 2.301361913804475, 2.269804979028829, 2.304278007823998, 2.302776084300817, 2.3000245137127115, 2.157531812600078, 2.6608337817836385, 2.3042961932633137, 2.303114130197499, 2.302928415067192, 2.303048936713877], "accuracy": [0.17870822548866272, 0.16510368883609772, 0.10302469879388809, 0.10011887550354004, 0.11676132678985596, 0.1974640041589737, 0.09813763201236725, 0.1022322028875351, 0.1228371411561966, 0.20723815262317657, 0.11676132678985596, 0.09721305221319199, 0.08915598690509796, 0.09985470771789551, 0.09140139818191528], "val_loss": [1.9775893347603934, 1.9867907932826452, 1.9748612812587194, 1.9729610170636858, 1.967691421508789, 1.9758056231907435, 1.9735897609165736, 1.9728081566946847, 1.9603466987609863, 3.6259995869227817, 1.9755890028817313, 1.973893301827567, 1.9736269542149134, 1.9736601965767997, 1.973656381879534], "val_accuracy": [0.09933333098888397, 0.09700000286102295, 0.09833333641290665, 0.10066666454076767, 0.15600000321865082, 0.10000000149011612, 0.10000000149011612, 0.15199999511241913, 0.23000000417232513, 0.25999999046325684, 0.09799999743700027, 0.09966666996479034, 0.10366666316986084, 0.09799999743700027, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [9, 3, 1, 2, 5, 2, 1, 3, 0, 5, 8, 9], [3, 3, 0, 0, 0, 2, 2, 4, 3, 0], [69, 47, 0, 81, 53, 45], [0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10371428728103638, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.969900459299124, 2.341462814828361, 2.305786028041847, 2.30058819377553, 2.2440151052546775, 2.3035956236822037, 2.3026275240812857, 2.3126967472564655, 2.3093067820927784], "accuracy": [0.17870822548866272, 0.1632545292377472, 0.10500594228506088, 0.11306300014257431, 0.1776515692472458, 0.09932637959718704, 0.10394927859306335, 0.19376568496227264, 0.09576013684272766], "val_loss": [1.9778727803911482, 1.980558122907366, 1.973167555672782, 1.9628306116376604, 1.9742255210876465, 1.973609175000872, 1.9683139664786202, 1.9869232858930315, 1.9747563770839147], "val_accuracy": [0.09933333098888397, 0.09799999743700027, 0.09933333098888397, 0.18400000035762787, 0.09933333098888397, 0.0989999994635582, 0.16966666281223297, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [8, 2, 2, 6, 1, 5, 3, 3, 6, 0, 2, 9, 0, 9, 8, 6, 7], [3, 4, 3, 3, 0, 3, 3, 4, 2, 0], [45, 62, 0, 81, 53, 45], [0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.1014285683631897, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.subtract(grad, tf.math.square(grad)), tf.math.multiply(tf.math.add(beta, grad), tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))))))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [5251.157380008836, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.21172896027565002, 0.10434553027153015, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [250009225.14285713, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.11100000143051147, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [6, 3, 1, 1, 5, 2, 1, 3, 0, 5, 8, 9], [3, 3, 0, 3, 0, 2, 2, 4, 3, 0], [52, 47, 0, 81, 53, 45], [0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10114285349845886, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 7, 7, 2, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.square(tf.math.add(beta, grad)), tf.math.add(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.subtract(beta, tf.math.add(beta, beta)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.96960486929257, 2.4826332172776224, 2.3096568692456367, 2.301804445423171, 2.2846068491348106, 2.306299549981257, 2.3036008115457807, 2.30316681975875, 2.302489441808787], "accuracy": [0.17897239327430725, 0.15374454855918884, 0.10210011899471283, 0.10698718577623367, 0.17712323367595673, 0.09906221181154251, 0.10051512718200684, 0.09893012791872025, 0.10276053100824356], "val_loss": [1.9775840214320592, 1.9924939019339425, 1.9743359429495675, 1.9653473581586565, 1.9799627576555525, 1.974306651524135, 1.9736080169677734, 1.9734721183776855, 1.971460955483573], "val_accuracy": [0.09933333098888397, 0.09799999743700027, 0.09733333438634872, 0.24400000274181366, 0.09799999743700027, 0.10000000149011612, 0.10000000149011612, 0.09933333098888397, 0.10433333367109299]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [1, 2, 2, 4, 1, 5, 1, 3, 6, 0, 2, 9, 0, 9, 8, 6, 7], [3, 2, 3, 3, 0, 2, 2, 4, 2, 0], [45, 62, 0, 81, 53, 45], [0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 18, 18, 9, 9, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, beta))), tf.math.pow(tf.math.subtract(tf.math.square(tf.math.add(beta, grad)), tf.math.subtract(grad, tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)))), tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.add(beta, grad)))))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [795958.1248328167, 2.313908699685871, 2.3055995647161867, 2.3037123676020914, 2.303007249866164, 2.303013225698263, 2.3030106198786116, 2.3029966298316085, 2.3029111733195364, 2.3028977233121863], "accuracy": [0.09760929644107819, 0.09721305221319199, 0.09470347315073013, 0.09708096832036972, 0.09457138925790787, 0.09496764093637466, 0.09417514503002167, 0.09285431355237961, 0.0956280529499054, 0.09734513610601425], "val_loss": [1.989071982247489, 1.9775189672197615, 1.9746364184788294, 1.9737931660243444, 1.9737083571297782, 1.973658902304513, 1.9736384664263045, 1.9736901010785783, 1.9736616270882743, 1.9737134660993303], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09833333641290665, 0.09833333641290665, 0.10366666316986084, 0.09966666996479034, 0.09933333098888397, 0.1003333330154419, 0.09933333098888397, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [6, 8, 6, 0, 2, 5, 1, 2, 2, 0, 8, 9], [3, 3, 3, 3, 0, 2, 2, 4, 2, 0], [45, 62, 0, 81, 53, 45], [1, 0, 1, 1, 0, 1], [1, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [0, 0, 0, 1, 3, 3], [39, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 14, 14, 8, 6, 1, 1, 0, 0, 0, 0, 4, 2, 2, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.negative(tf.math.add(tf.math.square(tf.math.add(beta, grad)), tf.math.subtract(grad, tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [844893.5773313071, 16280302.886804914, 75394745.57548541, 207968855.08175933, 450054421.3192445, 824986118.7964602], "accuracy": [0.09813763201236725, 0.10170386731624603, 0.09787346422672272, 0.10196803510189056, 0.09972262382507324, 0.10038304328918457], "val_loss": [3263732.9285714286, 26018130.85714286, 87710125.71428572, 207786477.7142857, 405693522.28571427, 700879250.2857143], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1], [2, 2, 1, 2, 5, 0, 1, 4, 0, 5, 8, 9], [3, 3, 3, 3, 0, 2, 1, 4, 2, 0], [52, 47, 0, 81, 53, 45], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 8, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [2, 1, 0, 1, 3, 3], [9, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 1, 3, 2, 2, 0, 0, 4, 2, 2, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.square(grad)), tf.math.add(beta, grad)))))), tf.math.negative(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.sqrt(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, alpha))", "other_info": {"loss": [13.428192682207031, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.25518426299095154, 0.10421344637870789, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [47912.216517857145, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 8, 6, 0, 2, 5, 1, 2, 2, 0, 8, 9], [3, 3, 0, 3, 0, 2, 2, 4, 2, 0], [52, 69, 0, 81, 53, 45], [0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [26, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 16, 16, 9, 7, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.square(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(grad, tf.math.add(beta, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, beta)))))))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10276053100824356, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0], [1, 2, 0, 4, 1, 5, 1, 3, 6, 0, 0, 9, 0, 9, 8, 6, 7], [3, 3, 3, 3, 0, 2, 2, 4, 0, 0], [45, 62, 0, 81, 53, 45], [0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 20, 20, 14, 6, 3, 1, 1, 0, 1, 0, 13, 7, 6, 2], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))), tf.math.pow(tf.math.subtract(grad, tf.math.add(beta, tf.math.square(tf.math.subtract(grad, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))))))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(alpha), tf.math.pow(tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, sigma), sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.080042265355587, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1], [6, 2, 2, 4, 1, 5, 1, 3, 6, 0, 2, 9, 0, 9, 8, 6, 7], [3, 3, 0, 0, 0, 2, 2, 4, 3, 0], [52, 47, 0, 81, 53, 45], [0, 1, 1, 1, 0, 1], [1, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 12, 9, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.subtract(tf.math.square(tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)))), tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), grad))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07951393723487854, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [1, 4, 1, 2, 5, 2, 4, 0, 0, 5, 8, 9], [3, 3, 0, 0, 0, 2, 2, 3, 3, 0], [52, 47, 0, 81, 53, 45], [0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [2, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 0, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10276053100824356, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [6, 8, 6, 0, 2, 5, 1, 2, 2, 0, 8, 9], [3, 3, 3, 3, 0, 2, 2, 4, 2, 0], [45, 62, 0, 81, 53, 45], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1], [8, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [39, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 8, 6, 1, 3, 2, 2, 0, 0, 13, 7, 6, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.negative(tf.math.add(tf.math.square(tf.math.add(beta, grad)), tf.math.subtract(grad, tf.math.add(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(alpha), tf.math.pow(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, sigma), sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.080042265355587, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 8, 6, 0, 2, 5, 1, 2, 2, 0, 8, 9], [3, 5, 3, 3, 3, 2, 2, 4, 2, 0], [58, 69, 0, 81, 53, 45], [0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [9, 8, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [26, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 9, 6, 0, 2, 1, 1, 0, 0, 1, 1, 0, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.negative(tf.math.add(tf.math.square(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, grad), tf.math.add(grad, tf.math.add(beta, grad))))), tf.math.add(beta, beta)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3023859307026235, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10276053100824356, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [9, 8, 6, 0, 2, 5, 1, 2, 2, 0, 8, 9], [2, 3, 0, 2, 0, 3, 3, 4, 2, 0], [45, 62, 0, 81, 53, 45], [0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [82, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3038351368894667, 2.3019819702092508, 2.3035589903888294, 2.302117307818152, 2.302869829881492, 2.305244193053784], "accuracy": [0.08942015469074249, 0.09126931428909302, 0.08651433140039444, 0.09245806187391281, 0.09470347315073013, 0.08796724677085876], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]