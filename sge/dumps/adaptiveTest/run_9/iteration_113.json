[{"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7945713996887207, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.291497944116498, 2.265545817508579, 2.234180298432257, 2.1977603797348277, 2.144076420347279, 2.06892469086431, 1.978358136601436, 1.857724406967672, 1.7249686561791557, 1.603990257644477, 1.4801279277754906, 1.3784846255272576, 1.3009596443321128, 1.2433111569223592, 1.1769928200968252, 1.1384082193057203, 1.094276783677644, 1.056338472766899, 1.0332264320615134, 1.018650796545369, 0.9784256202780008, 0.9660522321731407, 0.9524319057750538, 0.9186907558472023, 0.8996514386315749, 0.891133908196652, 0.8828928277965203, 0.8654821301023045, 0.8559312508279747, 0.8582968091322305, 0.8450545651911745, 0.8303000200552129, 0.8298455355599131, 0.8155461587154508, 0.8088082312640104, 0.8065450154417116, 0.7897542789942553, 0.7982839069204591, 0.7799747292596462, 0.7770408366444781, 0.770779809475008, 0.7698222916549176, 0.7613077647004853, 0.7541202640237432, 0.751878810234357, 0.751010527904905, 0.7370286935025423, 0.737749689975671, 0.7295823708233691, 0.7262652695234095, 0.7267019811905985, 0.7206211212745448, 0.7163353918203667, 0.7215796273697196, 0.7025464206497037, 0.7123732877335041, 0.7056022465441599, 0.6988117724220121, 0.6924269954841119, 0.6964193879101553, 0.6842893696165103, 0.7007819807934109, 0.6818282933377507, 0.6861752283854995, 0.6896147791027094, 0.6873656172463293, 0.675016235146367, 0.6809562727161418, 0.6681691185909413, 0.6674301710583515, 0.6744489939441739, 0.6624025789706651, 0.6584629459765924, 0.6580494750665558, 0.6599046971740944, 0.6545897571166052, 0.6584656562047502, 0.6491556008809026], "accuracy": [0.11755382269620895, 0.19218069314956665, 0.25742965936660767, 0.30365869402885437, 0.34222692251205444, 0.38502180576324463, 0.41764628887176514, 0.44644036889076233, 0.47312110662460327, 0.4884427487850189, 0.5279355645179749, 0.5453705191612244, 0.5580504536628723, 0.5778629183769226, 0.5912032723426819, 0.6000528335571289, 0.6170915365219116, 0.6275261044502258, 0.632941484451294, 0.6328094005584717, 0.6571126580238342, 0.656980574131012, 0.6585655808448792, 0.670320987701416, 0.6782459616661072, 0.678642213344574, 0.6826046705245972, 0.6944921612739563, 0.6906617283821106, 0.6896050572395325, 0.6954167485237122, 0.6977941989898682, 0.700171709060669, 0.7036058902740479, 0.7046625018119812, 0.707040011882782, 0.7113987803459167, 0.7094175219535828, 0.7149649858474731, 0.719852089881897, 0.7181349992752075, 0.7186633348464966, 0.7206445932388306, 0.7176066637039185, 0.7190595865249634, 0.7251353859901428, 0.7250033020973206, 0.7341170310974121, 0.7285695672035217, 0.7337207794189453, 0.7351737022399902, 0.733588695526123, 0.7333245277404785, 0.7327961921691895, 0.7403249144554138, 0.733588695526123, 0.7343811988830566, 0.739400327205658, 0.746268630027771, 0.7420420050621033, 0.7413815855979919, 0.7397965788841248, 0.7466648817062378, 0.7413815855979919, 0.7440232634544373, 0.7440232634544373, 0.7526086568832397, 0.7458723783493042, 0.7559106945991516, 0.7524765729904175, 0.7466648817062378, 0.7500990629196167, 0.7577598690986633, 0.7584202885627747, 0.7549861073493958, 0.7540615797042847, 0.7540615797042847, 0.7498348951339722], "val_loss": [1.9465866088867188, 1.9201765060424805, 1.888007368360247, 1.8446132114955358, 1.7849843842642648, 1.703730821609497, 1.6000947611672538, 1.475752932684762, 1.344141960144043, 1.218414272580828, 1.1090309619903564, 1.0187642574310303, 0.9491592134748187, 0.8947654111044747, 0.8503622838429042, 0.8154034614562988, 0.7858083759035382, 0.7593313455581665, 0.7391046966825213, 0.722927348954337, 0.7082043204988752, 0.6941336223057338, 0.6826796361378261, 0.6702130011149815, 0.6612111159733364, 0.6503991058894566, 0.643357379095895, 0.6347769158227103, 0.6275158098765782, 0.6227380888802665, 0.6150174481528146, 0.6103430305208478, 0.6073686225073678, 0.5992118460791451, 0.5957982540130615, 0.5929286820547921, 0.5871492624282837, 0.5836151838302612, 0.5793341568538121, 0.5758354834147862, 0.5712566375732422, 0.5678514753069196, 0.5661722591945103, 0.5611938919339862, 0.559664249420166, 0.5571231671742031, 0.5533784457615444, 0.5513642685753959, 0.5482836791447231, 0.5470725127628872, 0.5419710874557495, 0.5421293292726789, 0.5375004836491176, 0.5363146577562604, 0.5330549308231899, 0.5336449316569737, 0.5307504108973912, 0.5266413348061698, 0.5259138005120414, 0.525287389755249, 0.5220030716487339, 0.5223809650966099, 0.5207465035574776, 0.5187101364135742, 0.5179480654852731, 0.5169282300131661, 0.5121699401310512, 0.5115540027618408, 0.5137804746627808, 0.5087994166782924, 0.5064024754932949, 0.505314861025129, 0.503829939024789, 0.5046982084001813, 0.5028293473379952, 0.5022118602480207, 0.4983917474746704, 0.49764762605939594], "val_accuracy": [0.24166665971279144, 0.35866665840148926, 0.41233333945274353, 0.4519999921321869, 0.4896666705608368, 0.5303333401679993, 0.5433333516120911, 0.5683333277702332, 0.5920000076293945, 0.6129999756813049, 0.6396666765213013, 0.6553333401679993, 0.668666660785675, 0.6756666898727417, 0.6826666593551636, 0.6893333196640015, 0.6930000185966492, 0.6966666579246521, 0.7006666660308838, 0.7086666822433472, 0.7133333086967468, 0.7129999995231628, 0.7183333039283752, 0.7213333249092102, 0.722000002861023, 0.7269999980926514, 0.7310000061988831, 0.7329999804496765, 0.7323333621025085, 0.734333336353302, 0.7409999966621399, 0.734000027179718, 0.7350000143051147, 0.7440000176429749, 0.746999979019165, 0.7440000176429749, 0.7490000128746033, 0.75, 0.7536666393280029, 0.7486666440963745, 0.7553333044052124, 0.7573333382606506, 0.753000020980835, 0.7573333382606506, 0.7580000162124634, 0.762333333492279, 0.7609999775886536, 0.7630000114440918, 0.7616666555404663, 0.7616666555404663, 0.7673333287239075, 0.7663333415985107, 0.7676666378974915, 0.7643333077430725, 0.7703333497047424, 0.7639999985694885, 0.7696666717529297, 0.7726666927337646, 0.7730000019073486, 0.7720000147819519, 0.7743333578109741, 0.7746666669845581, 0.7753333449363708, 0.7743333578109741, 0.7760000228881836, 0.7726666927337646, 0.7746666669845581, 0.7789999842643738, 0.7753333449363708, 0.7796666622161865, 0.7786666750907898, 0.7770000100135803, 0.7823333144187927, 0.781333327293396, 0.781333327293396, 0.7760000228881836, 0.7796666622161865, 0.7806666493415833]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7945713996887207, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.291497975607527, 2.2655460333795814, 2.2341811621052132, 2.1977618504918373, 2.1440826148530827, 2.0689342049654242, 1.9783604555693064, 1.8577316336391814, 1.724979594650994, 1.604011307507773, 1.4801554749623234, 1.3785011612775382, 1.3009836335365468, 1.2433297825747667, 1.1770106184326694, 1.1384140059554644, 1.0942790717685604, 1.056347652826925, 1.0332652727028067, 1.0186659987450528, 0.978444335986878, 0.9660440600858373, 0.9524392203065335, 0.9186727724936912, 0.8996459105074319, 0.8911166629849833, 0.8828887589272885, 0.8654796702593167, 0.8559136119863188, 0.858299993489318, 0.8450731241377101, 0.8302179569691683, 0.8298498928869689, 0.8154747858102279, 0.8086691566619576, 0.806467232537575, 0.7897528510099358, 0.7982485496042081, 0.7798344519522212, 0.7769829479222442, 0.770733290360415, 0.7697882819342623, 0.7612555082510994, 0.7540469954058227, 0.7518710538050155, 0.7510390836312991, 0.7369172481135795, 0.7377636546881412, 0.7295624995433171, 0.7262023768766981, 0.7267509669108776, 0.7205004432512832, 0.7162533562338631, 0.7215614931584349, 0.7025071707273818, 0.7123083874943423, 0.7054516471939127, 0.6988329634280993, 0.692423052264085, 0.696378769238139, 0.6843392258196805, 0.7006752104051298, 0.6819271059902888, 0.6860045281934732, 0.6896408539343629, 0.6872758681448837, 0.6749659523342295, 0.6810188635055966, 0.6681190375418254, 0.6674081789519825, 0.6745633066700372, 0.6624148414828097, 0.658430429143267, 0.6580734213723357, 0.6599302712432807, 0.6544965955213139, 0.6584520658340122, 0.6491913023940986], "accuracy": [0.11755382269620895, 0.19218069314956665, 0.25742965936660767, 0.30365869402885437, 0.3420948386192322, 0.38502180576324463, 0.4173821210861206, 0.4461762011051178, 0.47312110662460327, 0.4881785809993744, 0.5276713967323303, 0.5455026030540466, 0.5577862858772278, 0.5777308344841003, 0.5913353562355042, 0.5996565818786621, 0.6169594526290894, 0.6275261044502258, 0.6326773166656494, 0.6328094005584717, 0.6572447419166565, 0.6568484902381897, 0.6588297486305237, 0.670320987701416, 0.6777176260948181, 0.6790384650230408, 0.6827367544174194, 0.6942279934883118, 0.6909258961677551, 0.6901333928108215, 0.6948884129524231, 0.6977941989898682, 0.7000396251678467, 0.7043983340263367, 0.7046625018119812, 0.7071720957756042, 0.7116629481315613, 0.7099458575248718, 0.7156254053115845, 0.719852089881897, 0.717870831489563, 0.718399167060852, 0.719852089881897, 0.7177387475967407, 0.7191916704177856, 0.7250033020973206, 0.7246070504188538, 0.7341170310974121, 0.7289658188819885, 0.7337207794189453, 0.7358341217041016, 0.733588695526123, 0.7327961921691895, 0.733060359954834, 0.739928662776947, 0.7341170310974121, 0.735041618347168, 0.7400607466697693, 0.746268630027771, 0.7420420050621033, 0.7412495017051697, 0.7396644949913025, 0.7464007139205933, 0.7421740889549255, 0.7450799345970154, 0.7440232634544373, 0.7519482374191284, 0.7450799345970154, 0.7565711140632629, 0.7518161535263062, 0.7470611333847046, 0.7493065595626831, 0.7573636174201965, 0.7585523724555969, 0.7555144429206848, 0.7548540234565735, 0.7539294958114624, 0.7489103078842163], "val_loss": [1.9465866770063127, 1.9201774597167969, 1.8880081857953752, 1.844623633793422, 1.7849946022033691, 1.703737803867885, 1.6001022883823939, 1.4757626056671143, 1.3441674028124129, 1.2184505803244454, 1.1090478556496757, 1.0187721593039376, 0.9491567952292306, 0.8947413648877826, 0.8503332989556449, 0.815380505153111, 0.7858113050460815, 0.7593298298971993, 0.7391100100108555, 0.7229046480996268, 0.7082367965153286, 0.694108145577567, 0.6826570885522025, 0.6702009098870414, 0.6611673150743756, 0.6503738505499703, 0.6433068684169224, 0.6347219944000244, 0.6274865184511457, 0.6226942539215088, 0.6149617944444928, 0.6101951939719064, 0.6073341369628906, 0.5991380895887103, 0.5957143817629132, 0.5928464617047992, 0.5870787586484637, 0.5836044209344047, 0.579282249723162, 0.5758625950132098, 0.5713051898138863, 0.5678862844194684, 0.5662145955221993, 0.5611732857567924, 0.5597108261925834, 0.5571062905447823, 0.5533093043736049, 0.5512801238468715, 0.5480396236692157, 0.5469322545187814, 0.5418836729867118, 0.5419605629784721, 0.5375548941748483, 0.5362592765263149, 0.5331556115831647, 0.5336707830429077, 0.5308625527790615, 0.526624185698373, 0.5259421212332589, 0.5253764050347465, 0.5220442499433245, 0.5224618571145194, 0.5207938466753278, 0.5187107494899205, 0.5179651464734759, 0.5169134310313633, 0.5123122079031808, 0.5116865124021258, 0.5137357882090977, 0.5087368828909737, 0.5064281565802438, 0.5052961111068726, 0.5038374492100307, 0.5046619858060565, 0.5028275932584491, 0.502188001360212, 0.49838931219918386, 0.497578501701355], "val_accuracy": [0.24166665971279144, 0.35866665840148926, 0.41233333945274353, 0.4516666531562805, 0.4906666576862335, 0.5306666493415833, 0.5433333516120911, 0.5683333277702332, 0.5920000076293945, 0.6129999756813049, 0.6393333077430725, 0.6549999713897705, 0.6683333516120911, 0.6756666898727417, 0.6826666593551636, 0.6893333196640015, 0.6933333277702332, 0.6966666579246521, 0.7006666660308838, 0.7083333134651184, 0.7133333086967468, 0.7133333086967468, 0.7183333039283752, 0.7213333249092102, 0.7223333120346069, 0.7269999980926514, 0.7310000061988831, 0.7326666712760925, 0.7323333621025085, 0.7350000143051147, 0.7403333187103271, 0.734000027179718, 0.734666645526886, 0.7436666488647461, 0.746999979019165, 0.7450000047683716, 0.7486666440963745, 0.7493333220481873, 0.7540000081062317, 0.7486666440963745, 0.7546666860580444, 0.7573333382606506, 0.753000020980835, 0.7576666474342346, 0.7586666941642761, 0.762333333492279, 0.7620000243186951, 0.7630000114440918, 0.762333333492279, 0.762333333492279, 0.7680000066757202, 0.765666663646698, 0.7670000195503235, 0.7643333077430725, 0.7699999809265137, 0.7643333077430725, 0.7693333625793457, 0.7730000019073486, 0.7730000019073486, 0.7723333239555359, 0.7743333578109741, 0.7749999761581421, 0.7760000228881836, 0.7749999761581421, 0.7760000228881836, 0.7736666798591614, 0.7739999890327454, 0.7793333530426025, 0.7746666669845581, 0.7786666750907898, 0.7786666750907898, 0.7766666412353516, 0.7829999923706055, 0.7816666960716248, 0.781000018119812, 0.7756666541099548, 0.7796666622161865, 0.7806666493415833]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 1, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [0, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [51, 57]], "fitness": -0.7480000257492065, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.6973945094672773, 2.0191057900616585, 1.8453376728230937, 1.5679321247494342, 1.2319984672690238, 1.0979311420082685, 0.992976614756906, 0.9106015359500396, 0.9062888036786982, 0.7727833936841434, 0.7468885261983195, 0.7358286037830518, 0.7358177882443172, 0.693469743380032, 0.6827921315569053], "accuracy": [0.22480517625808716, 0.3053757846355438, 0.36005812883377075, 0.44287413358688354, 0.5478800535202026, 0.5958262085914612, 0.6287148594856262, 0.6573768258094788, 0.6622639298439026, 0.7013604640960693, 0.7144366502761841, 0.7209087014198303, 0.7186633348464966, 0.7395324110984802, 0.7404569983482361], "val_loss": [1.931661878313337, 1.7040386881147112, 1.542872735432216, 0.8727609770638602, 0.8786623477935791, 0.8237146139144897, 0.7209475721631732, 0.66968492099217, 0.6351896694728306, 0.5684659991945539, 0.5853389160973685, 0.5742841448102679, 0.5516411747251239, 0.5919946943010602, 0.5090392487389701], "val_accuracy": [0.17366667091846466, 0.3266666531562805, 0.3466666638851166, 0.6166666746139526, 0.5843333601951599, 0.6423333287239075, 0.690666675567627, 0.7200000286102295, 0.7279999852180481, 0.7526666522026062, 0.7110000252723694, 0.7233333587646484, 0.7413333058357239, 0.7433333396911621, 0.7526666522026062]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [3, 2, 3, 1, 1, 2, 2, 2, 2, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [43, 57]], "fitness": -0.584857165813446, "mapping_values": [1, 31, 31, 20, 11, 2, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, grad), grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.sqrt(alpha)), alpha), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, grad))))))), grad)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), grad), tf.math.add(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, grad)))), grad))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9547919026770217, 1.3407721040098028, 0.8752498186385674, 0.9518961993427073, 0.8180423379967855, 0.8246659373547407, 0.7460119865589674, 0.8057357946863705, 0.827202349991736, 0.8554485186279064, 0.8522123369432444, 0.8853141322127738, 0.8900057036233316, 0.9962141359360966], "accuracy": [0.35583147406578064, 0.5486725568771362, 0.668339729309082, 0.6695284843444824, 0.698718786239624, 0.7038700580596924, 0.7136441469192505, 0.71100252866745, 0.7087571024894714, 0.7074362635612488, 0.6971337795257568, 0.6905296444892883, 0.6723021864891052, 0.6490556001663208], "val_loss": [1.456343105861119, 0.7202937943594796, 0.5682684864316668, 0.5889011451176235, 0.608853851045881, 0.5320547989436558, 0.5581358671188354, 0.5686727591923305, 0.5472953830446515, 0.617742487362453, 0.6200248343603951, 0.5616556235722133, 0.6169923203332084, 0.8304207835878644], "val_accuracy": [0.581333339214325, 0.6700000166893005, 0.734000027179718, 0.7363333106040955, 0.753000020980835, 0.7493333220481873, 0.7730000019073486, 0.7573333382606506, 0.7739999890327454, 0.7476666569709778, 0.7733333110809326, 0.7616666555404663, 0.7703333497047424, 0.746666669845581]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9, 3, 8, 2, 2], [2, 2, 3, 1, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [98, 8, 15, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3, 0], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.3160000145435333, "mapping_values": [1, 44, 44, 28, 16, 6, 11, 11, 7, 4, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.negative(grad), tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, grad), grad), tf.math.add(alpha, alpha))))), tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), alpha)), tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(grad, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.sqrt(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))))))))))), tf.math.add(alpha, grad)), tf.math.add(tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.square(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.778563886475428, 2.304753900219846, 2.2585636066675594, 2.303934035977006, 2.3035121313285805, 2.302696639016761, 2.298021422306686, 2.3348027052203535, 2.2904475321937876, 2.6763096739036247, 2.3040790836242024, 2.303096472390371, 2.3030664425453002, 2.3029103699519005], "accuracy": [0.1674811840057373, 0.11213842034339905, 0.16021661460399628, 0.09972262382507324, 0.09206181764602661, 0.09853387624025345, 0.13591335713863373, 0.22572976350784302, 0.12534672021865845, 0.11715757846832275, 0.09840179979801178, 0.09576013684272766, 0.09417514503002167, 0.09708096832036972], "val_loss": [1.9798823084150041, 1.9556647028241838, 1.9753070558820451, 1.9739201409476144, 1.9734435081481934, 1.972235883985247, 1.9496028763907296, 1.9804347583225794, 1.7515641621180944, 1.9759531702314104, 1.9741218430655343, 1.9737622397286552, 1.973740918295724, 1.9737530435834612], "val_accuracy": [0.09833333641290665, 0.2423333376646042, 0.09833333641290665, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.30533334612846375, 0.09966666996479034, 0.3113333284854889, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.09933333098888397, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [98, 8, 15, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.19771428406238556, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [3.7784781446861255, 2.304605845966674, 2.2454215862086233, 2.3037214757523534, 2.30278968959043, 2.301278636345632, 2.222671464481185], "accuracy": [0.1674811840057373, 0.11200633645057678, 0.16259410977363586, 0.1022322028875351, 0.09893012791872025, 0.10315678268671036, 0.22797517478466034], "val_loss": [1.9798626218523299, 1.95489958354405, 1.9751624379839217, 1.9737122399466378, 1.9730099950517928, 1.9678442137581962, 1.983346802847726], "val_accuracy": [0.09833333641290665, 0.23999999463558197, 0.09833333641290665, 0.09799999743700027, 0.09799999743700027, 0.20866666734218597, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [3, 5, 2, 8, 8, 0, 9, 0, 3, 3, 3, 0, 8, 9, 3, 4, 9, 6, 7, 8, 7, 1, 4, 9], [2, 2, 1, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 43, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3, 0], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [7, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [1, 0, 0, 1, 3, 3], [51, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 22, 22, 17, 5, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.negative(grad)))), tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, grad), alpha), tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.pow(alpha, alpha), tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 0, 2, 0, 8, 1, 7, 0, 3, 2, 6, 7, 8, 9, 3, 4, 6, 4, 5, 8, 7, 1, 4, 9, 4], [2, 2, 3, 1, 1, 2, 2, 2, 2, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [43, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 12, 7, 5, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(beta), tf.math.pow(tf.math.add(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [3, 2, 3, 1, 1, 2, 2, 2, 2, 3, 2, 0, 3, 2, 3, 0], [98, 8, 15, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 8, 4, 7, 8, 3], [2, 2, 0, 1, 3, 3], [43, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 12, 7, 5, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.math.sqrt(tf.math.pow(tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.multiply(alpha, sigma))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 0, 2, 0, 8, 1, 7, 0, 3, 2, 6, 7, 8, 9, 3, 4, 6, 4, 5, 8, 7, 1, 4, 9, 4], [3, 2, 3, 1, 1, 2, 2, 2, 2, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 3, 0, 1, 3, 3], [43, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 12, 7, 5, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(beta), tf.math.pow(tf.math.add(sigma, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.05626733601093292, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [3, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 12, 7, 5, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(beta), tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 9, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9, 0], [3, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [98, 8, 15, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [2, 3, 0, 4, 7, 8, 4], [3, 3, 0, 1, 3, 3], [51, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 35, 35, 24, 11, 5, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 8, 4, 4, 1], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)), tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, grad), grad), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.pow(tf.math.add(alpha, alpha), alpha), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.sqrt(tf.math.add(alpha, alpha)), tf.math.add(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))))), grad))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(sigma, sigma), tf.math.negative(tf.math.pow(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09602430462837219, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [1, 2, 1, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [98, 8, 15, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3, 0], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [4, 3, 0, 4, 7, 8, 4], [3, 0, 3, 1, 3, 3], [51, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(sigma, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.3024276878068224, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09602430462837219, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [1, 2, 3, 1, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [98, 8, 15, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [6, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 13, 7, 6, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.negative(sigma), tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma)))), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1472724825143814, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [3, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [98, 8, 15, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07119271159172058, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 2, 2, 2, 2, 3, 2, 0, 3, 2, 3, 0], [98, 8, 15, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07132479548454285, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 0, 2, 0, 8, 1, 7, 0, 3, 2, 6, 7, 8, 9, 3, 4, 6, 4, 5, 8, 7, 1, 4, 9, 4], [3, 2, 3, 1, 1, 2, 2, 2, 2, 3, 2, 0, 3, 2, 3, 0], [98, 8, 15, 63, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [5, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [43, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07119271159172058, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 0, 2, 0, 8, 1, 7, 0, 3, 2, 6, 7, 8, 9, 3, 4, 6, 4, 5, 8, 7, 1, 4, 9, 4], [2, 2, 3, 1, 1, 2, 2, 2, 2, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 4, 7, 8, 4], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 1, 3, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3028819318208806, 2.3030157381155236, 2.302922881054226, 2.302936554175515, 2.302984184608515, 2.3030221590733153, 2.3029966208881563, 2.3028657651139666], "accuracy": [0.09179764986038208, 0.09470347315073013, 0.09747721254825592, 0.09457138925790787, 0.09549596905708313, 0.0948355570435524, 0.09206181764602661, 0.09232597798109055], "val_loss": [1.9736401694161552, 1.973698956625802, 1.9736297471182687, 1.9736937114170618, 1.9736671447753906, 1.9737201418195451, 1.9737421444484167, 1.9737016814095634], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.10000000149011612, 0.09799999743700027, 0.09799999743700027, 0.09933333098888397, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [3, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 43, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [5, 4, 3, 0], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3024663088769173, 2.30338158070246, 2.3022957570863642, 2.304573526723809, 2.3038316137991277, 2.302388234208399], "accuracy": [0.09206181764602661, 0.09536388516426086, 0.09259014576673508, 0.08994849026203156, 0.08757099509239197, 0.08968432247638702], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [3, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 9, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3024663088769173, 2.30338158070246, 2.3022957570863642, 2.304573526723809, 2.3038316137991277, 2.302388234208399], "accuracy": [0.09206181764602661, 0.09536388516426086, 0.09259014576673508, 0.08994849026203156, 0.08757099509239197, 0.08968432247638702], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]