[{"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7757142782211304, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 2, 1, 1, 4, 2, 2, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2913150586440754, 2.2636111070451292, 2.2342324378137435, 2.193961197784186, 2.138790052454501, 2.0675823243538844, 1.9678516443678573, 1.8503087850184472, 1.7183599048019196, 1.5886097846329095, 1.47975151138283, 1.3791501519072562, 1.2954657103769405, 1.2297587996822825, 1.1806998320731819, 1.1310145585071834, 1.0969511086143098, 1.0754717354603793, 1.0412267855743864, 0.9986143033455045, 0.9854308582252878, 0.967662164004818, 0.9472912175859112, 0.9110209179308751, 0.9092855242422591, 0.8976891049383308, 0.8879913800522604, 0.8723932824209145, 0.8630336618788758, 0.8471484132777305, 0.8357639816915512, 0.8368315911721308, 0.8200395719612342, 0.8118214343737586, 0.8145496544742219, 0.7985956441094894, 0.7981043709676972, 0.7963756179104171, 0.7718455725263501, 0.7734262923822112, 0.7815432965306716, 0.7591595632871538, 0.7571610983462618, 0.7535789328370317, 0.7566536452477052, 0.7460036028676958, 0.743220074616718, 0.7413459095767838, 0.7382115790116835, 0.7299529265230043, 0.7310544544396195, 0.717315096369257, 0.7239673712612253, 0.7081778528290087, 0.7099511325398709], "accuracy": [0.11676132678985596, 0.19323734939098358, 0.25518426299095154, 0.304979532957077, 0.3457931578159332, 0.3835688829421997, 0.413419634103775, 0.43970412015914917, 0.469819039106369, 0.5007264614105225, 0.5235767960548401, 0.5449742674827576, 0.5654470920562744, 0.5815612077713013, 0.5876370072364807, 0.6065248847007751, 0.6188086271286011, 0.6169594526290894, 0.6367719173431396, 0.6452252268791199, 0.6515651941299438, 0.6560559868812561, 0.6637167930603027, 0.6757363677024841, 0.6662263870239258, 0.6758684515953064, 0.683000922203064, 0.6857746839523315, 0.6915863156318665, 0.698190450668335, 0.6944921612739563, 0.6956809163093567, 0.703209638595581, 0.7047945857048035, 0.705058753490448, 0.7117950320243835, 0.7080966830253601, 0.7117950320243835, 0.7166820764541626, 0.7185312509536743, 0.7160216569900513, 0.7219653725624084, 0.7211728692054749, 0.7250033020973206, 0.7193237543106079, 0.7263241410255432, 0.7264562249183655, 0.7279091477394104, 0.7269845604896545, 0.7294940948486328, 0.7297582626342773, 0.7346453666687012, 0.7325320243835449, 0.7400607466697693, 0.735041618347168], "val_loss": [1.9464887891496931, 1.9196513720921107, 1.886976650782994, 1.8428073610578264, 1.78163480758667, 1.699915783745902, 1.5930237429482597, 1.4677437714168005, 1.3349299430847168, 1.2097079413277763, 1.1027384485517229, 1.017005409513201, 0.9475406919206891, 0.8922891616821289, 0.8491475752421788, 0.8123141527175903, 0.783959082194737, 0.7611074958528791, 0.7405766759599958, 0.7233786412647792, 0.70691864831107, 0.6949026754924229, 0.6827537332262311, 0.671791843005589, 0.6607349940708706, 0.6526199579238892, 0.6434416600636074, 0.6359613112040928, 0.6296075412205288, 0.6223769017628261, 0.6157270669937134, 0.6124466487339565, 0.6079975536891392, 0.6006658758435931, 0.5969762972423008, 0.5920734405517578, 0.5883656229291644, 0.5841232878821236, 0.5816851513726371, 0.5750363383974347, 0.572192737034389, 0.5684366737093244, 0.5670894043786185, 0.5637652703693935, 0.56118300982884, 0.5586247784750802, 0.5545500005994525, 0.5507387774331229, 0.5492701530456543, 0.545748131615775, 0.5441617625100272, 0.539663553237915, 0.5388669286455426, 0.5368870326450893, 0.5334028005599976], "val_accuracy": [0.23866666853427887, 0.3566666543483734, 0.39399999380111694, 0.437666654586792, 0.48233333230018616, 0.5243333578109741, 0.5540000200271606, 0.5693333148956299, 0.5943333506584167, 0.609000027179718, 0.6446666717529297, 0.6623333096504211, 0.6693333387374878, 0.6743333339691162, 0.6816666722297668, 0.6883333325386047, 0.6946666836738586, 0.6963333487510681, 0.6993333101272583, 0.7099999785423279, 0.7139999866485596, 0.7160000205039978, 0.7200000286102295, 0.7196666598320007, 0.718666672706604, 0.7253333330154419, 0.7273333072662354, 0.7319999933242798, 0.7336666584014893, 0.7356666922569275, 0.7390000224113464, 0.7406666874885559, 0.7426666617393494, 0.7443333268165588, 0.7459999918937683, 0.746999979019165, 0.749666690826416, 0.7493333220481873, 0.7536666393280029, 0.7526666522026062, 0.7509999871253967, 0.7609999775886536, 0.7553333044052124, 0.7556666731834412, 0.7599999904632568, 0.7596666812896729, 0.7616666555404663, 0.7646666765213013, 0.7633333206176758, 0.7699999809265137, 0.7683333158493042, 0.7670000195503235, 0.765999972820282, 0.7673333287239075, 0.768666684627533]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 2, 1, 1], [50], [0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 1], [2, 9, 1, 5], [3, 4, 3], [8, 0, 19], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 2], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57, 68]], "fitness": -0.48571428656578064, "mapping_values": [1, 3, 3, 1, 2, 0, 6, 6, 4, 2, 1, 4, 3, 2, 1, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2959865754731754, 2.2822120842790685, 2.2698850073377925, 2.255232259912608, 2.2388396364523673, 2.222590429309557, 2.2012681033648773, 2.1780320415249936, 2.1496146523547823, 2.117506686895751, 2.0827346530809, 2.0386900298268866, 1.998220523807272, 1.9570417346231312, 1.932382033170726, 1.932276655181902, 1.9487840460433528], "accuracy": [0.10447761416435242, 0.1422533392906189, 0.17672698199748993, 0.21172896027565002, 0.24303261935710907, 0.27327960729599, 0.3035266101360321, 0.3234711289405823, 0.34341567754745483, 0.3553031384944916, 0.37564390897750854, 0.3815876245498657, 0.3833047151565552, 0.37762513756752014, 0.3603222966194153, 0.33139610290527344, 0.2999603748321533], "val_loss": [1.958784512111119, 1.9462337493896484, 1.9331277438572474, 1.9191630908421107, 1.9034715379987444, 1.8862006323678153, 1.8654350553240096, 1.8413875443594796, 1.8128227506365096, 1.7803423064095634, 1.7440916470118932, 1.7039694786071777, 1.6666080611092704, 1.6343213490077428, 1.6174898147583008, 1.625901358468192, 1.6529639789036341], "val_accuracy": [0.1276666671037674, 0.23499999940395355, 0.30799999833106995, 0.3396666646003723, 0.34933334589004517, 0.367333322763443, 0.39500001072883606, 0.3959999978542328, 0.4189999997615814, 0.42766666412353516, 0.44600000977516174, 0.4690000116825104, 0.44200000166893005, 0.414000004529953, 0.3643333315849304, 0.29866665601730347, 0.29733332991600037]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [94, 0, 19], [1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 9, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.3782857060432434, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2645519225037787, 2.514344876137833, 2.301841595011963, 2.267846884807465, 2.3674985986454393, 2.301496364279603, 2.343940102554914, 2.305174721136006, 2.303079980916477], "accuracy": [0.2145027071237564, 0.13353586196899414, 0.10210011899471283, 0.15321621298789978, 0.15110288560390472, 0.1138555034995079, 0.12640337646007538, 0.09668471664190292, 0.09800554811954498], "val_loss": [1.8702124186924525, 1.9742388725280762, 1.968836988721575, 1.7084307329995292, 1.9748926843915666, 1.9438134602137975, 1.9767436300005232, 1.9740800857543945, 1.9738150324140276], "val_accuracy": [0.20533333718776703, 0.10333333164453506, 0.09799999743700027, 0.38066667318344116, 0.09799999743700027, 0.10899999737739563, 0.09799999743700027, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1], [9, 5, 4, 8, 7], [4, 7], [88, 19], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.3199999928474426, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 2, 1, 1, 1, 1, 1, 0, 1, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2644642374660706, 2.5196831137544176, 2.301369821579701, 2.3184148728682175, 2.2936092556711705, 2.3049466953207047], "accuracy": [0.2145027071237564, 0.13670584559440613, 0.1072513535618782, 0.16761326789855957, 0.1752740740776062, 0.10091137140989304], "val_loss": [1.8679594993591309, 1.9742207527160645, 1.9652707917349679, 1.9814175878252303, 1.9784047944205148, 1.9733353342328752], "val_accuracy": [0.20133332908153534, 0.09966666996479034, 0.09799999743700027, 0.10366666316986084, 0.09799999743700027, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [4, 1, 3, 7, 8], [1, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 1, 1], [6, 9], [4, 3, 3, 4], [8, 0, 19], [1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 2, 4], [1, 0, 0, 1, 3, 3], [28, 57, 68]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [1, 1, 8, 7, 8], [2, 2, 1, 1], [61], [1, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [1, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [0, 2, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3021129664649203, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09721305221319199, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 1, 1, 0, 1, 1], [2, 9, 1, 3, 5], [3, 4, 3], [8, 0, 19], [0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 9, 0, 4, 7], [1, 0, 0, 1, 3, 3], [91, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(alpha, tf.math.add(alpha, grad)), tf.math.square(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07158895581960678, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [0, 0, 1, 1], [50, 69], [0, 1, 1, 0, 0, 0, 1], [0, 1, 1, 0, 1, 1], [2, 9], [2, 4, 3], [8, 0, 19], [1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1], [2, 0, 8, 9, 7], [4, 7], [90, 19], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 2, 4], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 2, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.80911458e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3021129664649203, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09721305221319199, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1], [2, 0, 6], [3, 4, 3], [8, 0, 19], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [3, 0, 0, 1, 3, 3], [54, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 6, 6, 3, 3, 0, 4, 3, 2, 1, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.negative(grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07290978729724884, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1, 1, 1], [7, 1, 5, 8, 8], [1, 0, 3, 3], [50], [1, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [1, 4, 3], [8, 0, 19], [0, 0, 0, 0, 1, 1, 0], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 3], [88, 19], [0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 5, 3, 3, 2, 7, 0, 1, 0, 9, 2, 0, 4, 5], [0, 0, 0, 1, 3, 3, 3, 0, 0], [88, 51, 60, 32, 96, 75]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 24, 15, 9, 6], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.square(tf.math.add(alpha, alpha)), tf.math.sqrt(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, sigma))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.square(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.multiply(tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, sigma), sigma)), tf.math.negative(tf.math.subtract(tf.math.negative(tf.constant(2.83228820e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.negative(tf.math.pow(sigma, tf.math.square(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [4, 0, 19], [0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0734381154179573, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 1, 5, 7, 8], [1, 2, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 0, 1, 1, 0, 1], [2, 9, 0, 5], [3, 4, 3], [8, 0, 19], [0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 0, 0, 2, 2, 0], [28, 57, 68]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 5, 3, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.subtract(tf.math.square(tf.math.add(alpha, alpha)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.add(alpha, alpha))))))), lambda shape,  alpha, beta, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [4276688074.8760924, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1632545292377472, 0.09972262382507324, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [3.8491361563038542e+28, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 2, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1], [0, 1, 1, 0, 1, 1], [2, 9], [4, 4, 3, 4], [8, 0, 19], [1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 6, 2, 9], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.math.subtract(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [8.656111922682397e+23, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11808215826749802, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [0, 2, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1], [2, 9, 1, 3, 5], [3, 4, 3], [20, 0, 19], [1, 0, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [91, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3022627149354418, 2.3027536919119806, 2.3030036918522736, 2.3042077428046595, 2.3063154110362456, 2.3087448728964737, 2.316703688529945, 2.333414316177368, 2.368682806754172, 2.4287930394932107, 2.5587546921141664], "accuracy": [0.09496764093637466, 0.09840179979801178, 0.09959053993225098, 0.09959053993225098, 0.1006472036242485, 0.10091137140989304, 0.1002509593963623, 0.10077928751707077, 0.09919429570436478, 0.10355303436517715, 0.1010434553027153], "val_loss": [1.9736339024135046, 1.9738527025495256, 1.974301542554583, 1.9753805569240026, 1.9781079292297363, 1.9829261643545968, 1.9927937643868583, 2.0154941422598704, 2.0599519184657504, 2.141962323869978, 2.2827894347054616], "val_accuracy": [0.09966666996479034, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1], [7, 1, 5, 7, 8, 8], [1, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [94, 0, 19], [0, 0, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.square(alpha)), tf.math.add(alpha, tf.math.add(grad, tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))))))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08585391938686371, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1], [2, 9, 8, 0], [3, 4, 3], [8, 0, 19], [1, 0, 1, 1, 0, 1], [0, 1, 0, 0, 0, 1], [2, 0, 8, 9, 7], [4, 2], [88, 19], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 0, 0, 2, 2, 0], [91, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 5, 5, 4, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.math.subtract(tf.math.add(alpha, grad), tf.math.square(alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [0, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 1, 1], [2, 9], [2, 4, 3], [8, 0, 19], [1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1], [2, 0, 8, 9, 7], [4, 7], [90, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 2, 4], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 11, 6, 5, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 1, 5, 7, 8], [0, 1, 1, 1], [54], [0, 1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 1, 1], [2, 9], [2, 4, 3], [8, 0, 19], [0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 6, 2, 9], [0, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 2, 1, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2914.983174720193, 51445.60826055013, 235752.4298433166, 655551.026342293, 1408572.8102298244, 2561822.7422401267], "accuracy": [0.10038304328918457, 0.10421344637870789, 0.09787346422672272, 0.1014397069811821, 0.09919429570436478, 0.09932637959718704], "val_loss": [10688.111328125, 82992.62276785714, 277608.3214285714, 655220.25, 1276514.2857142857, 2202174.9285714286], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 2, 1, 1], [50], [0, 0, 1, 0, 0, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, 1], [8, 9, 3, 3, 5], [3, 4, 3], [8, 0, 19], [0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [91, 57]], "fitness": -0.09314285963773727, "mapping_values": [1, 3, 3, 1, 2, 0, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.347871985055704, 2.697939273058038, 3.2412687553438007, 4.352498059039102, 6.36252840990876, 1.3975420049355752e+17], "accuracy": [0.18134988844394684, 0.15414080023765564, 0.12772421538829803, 0.11662924289703369, 0.1150442510843277, 0.09694888442754745], "val_loss": [2.111374855041504, 2.449677126748221, 3.113886765071324, 4.248973301478794, 6.8860385077340265, NaN], "val_accuracy": [0.25866666436195374, 0.1316666603088379, 0.03200000151991844, 0.023000000044703484, 0.03133333474397659, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1], [3, 1, 5, 7, 8], [1, 2, 1, 1], [50], [1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [9, 9], [3, 4, 3], [8, 0, 19], [0, 0, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1], [2, 8, 4, 8, 7], [4, 7], [88, 19], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 1], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.subtract(tf.math.add(alpha, grad), tf.math.square(alpha)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3023447746991828, 2.3021435693207515, 2.3031497548962028, 2.3030506699486115, 2.302125385455987, 2.303486308527503], "accuracy": [0.08902391046285629, 0.08994849026203156, 0.08981640636920929, 0.08717474341392517, 0.08968432247638702, 0.08796724677085876], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]