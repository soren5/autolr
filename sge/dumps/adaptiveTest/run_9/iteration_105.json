[{"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7911428809165955, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2926418164371265, 2.2638218528196843, 2.2368317830989297, 2.19826586283335, 2.1438670466998313, 2.0726828276914233, 1.9739956405452215, 1.8559833334075178, 1.7243721858149175, 1.5919976991008002, 1.4760835035964246, 1.3841945095116421, 1.3048846958619162, 1.2314635196996166, 1.1967619556115368, 1.1397968866979096, 1.0906530236209058, 1.071283783753314, 1.0420208567751712, 1.010326974396031, 0.9825609777235415, 0.9594528372135649, 0.945637815963197, 0.92785681308048, 0.9183877363354224, 0.8933130305173328, 0.8824840947511315, 0.8659079471095489, 0.8637252458019531, 0.8537807092769286, 0.8381758035055918, 0.8461755980841944, 0.8312557408554899, 0.8237802799682356, 0.8088097751904252, 0.806503139884008, 0.7993503863139789, 0.7825783644732136, 0.7791306201052184, 0.7751304752649396, 0.7706405102474468, 0.7709000414672104, 0.7669078920259452, 0.7584168736598652, 0.7530534286005244, 0.7422116671366195, 0.7414475462739305, 0.7405247031548051, 0.7293868081334434, 0.7331531298174724, 0.727537460307309, 0.7235503563193156, 0.7187638175234016, 0.7072892596047426, 0.7119435848750143, 0.702083111399783, 0.7031406968214005, 0.6960292855636114, 0.6877097085624119, 0.6942246800022607, 0.6827144559899404, 0.6950622577992224, 0.683641719229233, 0.6793166718163652, 0.6868659347402043, 0.6709813607792419, 0.6749867277217185, 0.6669740032101068, 0.6741271066612115], "accuracy": [0.11847840249538422, 0.18914277851581573, 0.24316470324993134, 0.3019416332244873, 0.35279354453086853, 0.383700966835022, 0.41408005356788635, 0.4496103525161743, 0.47206446528434753, 0.4916127324104309, 0.5227842926979065, 0.5452384352684021, 0.5569937825202942, 0.5795799493789673, 0.5860520601272583, 0.6038832664489746, 0.6172236204147339, 0.6209219098091125, 0.6287148594856262, 0.6396777033805847, 0.6490556001663208, 0.657508909702301, 0.6646413803100586, 0.6687359809875488, 0.6675472259521484, 0.677189290523529, 0.6848500967025757, 0.6890767216682434, 0.6890767216682434, 0.700700044631958, 0.698718786239624, 0.6942279934883118, 0.6955488324165344, 0.7029454708099365, 0.7009642124176025, 0.7069079279899597, 0.7113987803459167, 0.7199841737747192, 0.7170783281326294, 0.7153612375259399, 0.7236824631690979, 0.7162858247756958, 0.7232862114906311, 0.7243428826332092, 0.7218332886695862, 0.7306828498840332, 0.7268524765968323, 0.7256637215614319, 0.7310791015625, 0.728701651096344, 0.7296261787414551, 0.7313432693481445, 0.7349095344543457, 0.741909921169281, 0.7362303733825684, 0.7382115721702576, 0.7367587089538574, 0.7405890822410583, 0.7442874312400818, 0.7452120184898376, 0.7424382567405701, 0.741909921169281, 0.7475894689559937, 0.7485140562057495, 0.7497028112411499, 0.7486461400985718, 0.7503632307052612, 0.7494386434555054, 0.7511557340621948], "val_loss": [1.9466490745544434, 1.920313494546073, 1.8885057994297572, 1.8459809848240443, 1.7863689831324987, 1.706423282623291, 1.6013503755841936, 1.476489543914795, 1.3430454730987549, 1.215313162122454, 1.1062588010515486, 1.0186655861990792, 0.9504646573747907, 0.89615341595241, 0.8544034957885742, 0.8177319424492973, 0.7889019421168736, 0.7641328232628959, 0.7434980358396258, 0.7249350888388497, 0.707248398235866, 0.6932926518576485, 0.6825123344148908, 0.6728564500808716, 0.6621497869491577, 0.6516329050064087, 0.6453080517905099, 0.6366077661514282, 0.6319914715630668, 0.6231884104864938, 0.6178870371409825, 0.6133748463221959, 0.6067019360406058, 0.6009184122085571, 0.5954386166163853, 0.5915838309696743, 0.5870015961783273, 0.583328230040414, 0.5782410757882255, 0.5763412884303502, 0.5716506583350045, 0.5695839950016567, 0.5660833460944039, 0.5641165290560041, 0.5593624285289219, 0.5546333278928485, 0.5543572391782489, 0.5529057468686785, 0.5500671012060983, 0.5466129609516689, 0.5430087191717965, 0.5405975580215454, 0.537351131439209, 0.5377069711685181, 0.535528131893703, 0.5312029634203229, 0.5316520929336548, 0.5277919939586094, 0.5267235210963658, 0.5242959942136493, 0.523097174508231, 0.5215261663709369, 0.5179064103535244, 0.5165307692119053, 0.5151140178952899, 0.5146921362195697, 0.5122615780149188, 0.5118423019136701, 0.5105501924242292], "val_accuracy": [0.23399999737739563, 0.35333332419395447, 0.4036666750907898, 0.4333333373069763, 0.4723333418369293, 0.512333333492279, 0.5496666431427002, 0.5669999718666077, 0.5916666388511658, 0.6106666922569275, 0.6380000114440918, 0.6486666798591614, 0.6690000295639038, 0.6713333129882812, 0.6806666851043701, 0.687333345413208, 0.6899999976158142, 0.699999988079071, 0.7016666531562805, 0.7043333053588867, 0.7120000123977661, 0.715666651725769, 0.7149999737739563, 0.7160000205039978, 0.7203333377838135, 0.7276666760444641, 0.7306666374206543, 0.7319999933242798, 0.7360000014305115, 0.7333333492279053, 0.7403333187103271, 0.7386666536331177, 0.7396666407585144, 0.7419999837875366, 0.7450000047683716, 0.7476666569709778, 0.7486666440963745, 0.7476666569709778, 0.7483333349227905, 0.7559999823570251, 0.753000020980835, 0.7540000081062317, 0.7546666860580444, 0.7559999823570251, 0.7576666474342346, 0.7593333125114441, 0.762666642665863, 0.7603333592414856, 0.7613333463668823, 0.7643333077430725, 0.7663333415985107, 0.7670000195503235, 0.768666684627533, 0.7676666378974915, 0.768666684627533, 0.7683333158493042, 0.7673333287239075, 0.7723333239555359, 0.7689999938011169, 0.7706666588783264, 0.7733333110809326, 0.7739999890327454, 0.7770000100135803, 0.7786666750907898, 0.7773333191871643, 0.7753333449363708, 0.7770000100135803, 0.7763333320617676, 0.778333306312561]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [0, 2, 3, 1, 2, 1, 2, 2, 2, 0, 2, 1, 0, 1, 3, 0], [30, 8, 57, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.6548571586608887, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2733506001596044, 2.0151257559670874, 1.474325293279705, 1.1908488238035744, 0.9294771137978848, 0.8437328904044469, 0.8309222859335519, 0.7703808515598713, 0.7571061188203784, 0.7165763260996684, 0.686972829817214, 0.6519023608679564, 0.6296494941449421, 0.6004585585715733, 0.5957367566393634, 0.5829020119330603, 0.5604084003965191, 0.5511318776333857, 0.5465532167633967, 0.5229731329034395, 0.514641092855224, 0.49641947427587646, 0.4843459050960198, 0.47649317331491065, 0.47665767404129633, 0.4628692548650682, 0.46318656481677484, 0.4515585166281241, 0.44761490922216035, 0.44278227053991065, 0.4396513619828832, 0.42602111741048215, 0.41190105103514274, 0.424358741501933, 0.4057718533464096, 0.39614365520793465, 0.3872859257087259, 0.3926893186181874, 0.37797255994558426, 0.3945080853133642, 0.3762725347879619, 0.36411118518013474, 0.36805181665632153, 0.37054970603042103, 0.36128040497502345, 0.36417568507778364, 0.344441858705922], "accuracy": [0.16616034507751465, 0.39004093408584595, 0.49531105160713196, 0.6033549308776855, 0.6540747880935669, 0.6828688383102417, 0.6910579800605774, 0.6964733600616455, 0.7066437602043152, 0.7255316376686096, 0.7363624572753906, 0.746268630027771, 0.757099449634552, 0.7658169269561768, 0.7656848430633545, 0.7693831920623779, 0.7833839654922485, 0.7833839654922485, 0.7895918488502502, 0.7954035401344299, 0.7959318161010742, 0.8070268034934998, 0.8079513907432556, 0.8128384351730347, 0.8100647330284119, 0.8193105459213257, 0.819970965385437, 0.8249900937080383, 0.8294808864593506, 0.8260467648506165, 0.8297450542449951, 0.8348963260650635, 0.8354246616363525, 0.8379341959953308, 0.8428213000297546, 0.8441421389579773, 0.8448025584220886, 0.846387505531311, 0.8510104417800903, 0.8453308939933777, 0.8462554216384888, 0.8581429123878479, 0.8557654023170471, 0.8601241707801819, 0.8603883385658264, 0.852859616279602, 0.8668603897094727], "val_loss": [1.8680321829659599, 1.3074262142181396, 0.8210955347333636, 0.7049693039485386, 0.6831768069948468, 0.629006028175354, 0.598969851221357, 0.5852557080132621, 0.5663994039808001, 0.5481678077152797, 0.5083702802658081, 0.4828600713184902, 0.4910824980054583, 0.4705531426838466, 0.45899687494550434, 0.4537199224744524, 0.4596113988331386, 0.4482153483799526, 0.439986058643886, 0.4365107331957136, 0.4311378683362688, 0.40831905603408813, 0.410149131502424, 0.4110554116112845, 0.402492880821228, 0.40946526186806814, 0.4053432515689305, 0.3895385520798819, 0.401152389390128, 0.41076857703072683, 0.3968058228492737, 0.38938675607953754, 0.4080861977168492, 0.39945465326309204, 0.39962425402232576, 0.4061918003218515, 0.4037603225026812, 0.3916389431272234, 0.39829176664352417, 0.3960445097514561, 0.3832136903490339, 0.39543495007923674, 0.4117664694786072, 0.40524057831083027, 0.40090794222695486, 0.41022476979664396, 0.42004819427217754], "val_accuracy": [0.37466666102409363, 0.5636666417121887, 0.6370000243186951, 0.6676666736602783, 0.7083333134651184, 0.7123333215713501, 0.7239999771118164, 0.750333309173584, 0.7553333044052124, 0.7593333125114441, 0.7643333077430725, 0.7846666574478149, 0.7833333611488342, 0.7873333096504211, 0.7943333387374878, 0.7986666560173035, 0.7883333563804626, 0.8023333549499512, 0.8103333115577698, 0.8066666722297668, 0.8183333277702332, 0.8243333101272583, 0.8263333439826965, 0.8323333263397217, 0.8343333601951599, 0.8376666903495789, 0.8323333263397217, 0.8376666903495789, 0.8446666598320007, 0.8416666388511658, 0.8433333039283752, 0.8413333296775818, 0.8456666469573975, 0.8476666808128357, 0.8463333249092102, 0.8483333587646484, 0.8443333506584167, 0.8526666760444641, 0.8453333377838135, 0.8476666808128357, 0.8543333411216736, 0.8576666712760925, 0.8539999723434448, 0.856333315372467, 0.8506666421890259, 0.8533333539962769, 0.8500000238418579]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0], [3, 4, 2, 7, 8, 0, 1, 0, 0, 3, 8, 5, 8, 9, 8, 2, 6, 5, 2, 8, 7, 2, 4, 9, 5], [3, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 57, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 1, 1], [9, 9, 7, 1, 7, 5, 5, 9], [5, 4, 0], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.6468571424484253, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.273350663141662, 2.015125380499551, 1.4743358294064137, 1.1910602840229725, 0.929600161977684, 0.843222021521232, 0.8305951509619307, 0.770534947650339, 0.7568674746159282, 0.7157938835753458, 0.6876114059700674, 0.6514586128610362, 0.6283539279561238, 0.5992205025119678, 0.5965847126355245, 0.5808722579783105, 0.5575593643893246, 0.5524374528678181, 0.5435495854620731, 0.5204335860666929, 0.5136842085873966, 0.49411861660095996, 0.4836358919497636, 0.4767806516260818, 0.477855858356725, 0.4707418422988062, 0.4635372505117448, 0.4558885791172299, 0.4452895815850186, 0.44922780492255054, 0.43923070244249995, 0.433669502882201, 0.4195401991725267, 0.42286107645940474, 0.40859246824348544, 0.40112398632324414, 0.38470886903369056, 0.39928442329904423, 0.3762608616658489, 0.39622941732469596, 0.3802491711973435, 0.3733400788643829, 0.37910519376359736, 0.37677607402793956, 0.3712079237047802, 0.37046553333673843, 0.36991995000300737, 0.3640410490102772], "accuracy": [0.16616034507751465, 0.39004093408584595, 0.49531105160713196, 0.6037511825561523, 0.6535464525222778, 0.6822084188461304, 0.6919825673103333, 0.6959450244903564, 0.7074362635612488, 0.726192057132721, 0.7366266250610352, 0.7446836829185486, 0.7572315335273743, 0.7656848430633545, 0.7655527591705322, 0.7708360552787781, 0.7868181467056274, 0.7836481332778931, 0.791441023349762, 0.7973847389221191, 0.7957997918128967, 0.8086118102073669, 0.8059701323509216, 0.8146876096725464, 0.8136309385299683, 0.8125742673873901, 0.8171972036361694, 0.8224804997444153, 0.8251221776008606, 0.8249900937080383, 0.8308017253875732, 0.8350284099578857, 0.8315942287445068, 0.8360850811004639, 0.8442742228507996, 0.8438779711723328, 0.8470479249954224, 0.8430854678153992, 0.8540483713150024, 0.8455950617790222, 0.8499537706375122, 0.852859616279602, 0.8475762605667114, 0.8540483713150024, 0.8514066934585571, 0.8576145768165588, 0.8626337051391602, 0.8560295701026917], "val_loss": [1.8680321829659599, 1.3074297904968262, 0.8211529765810285, 0.7051443713051933, 0.6833289861679077, 0.629275015422276, 0.5988748925072807, 0.5852525745119367, 0.5653727565492902, 0.5476010356630597, 0.507293701171875, 0.4829800469534738, 0.4913489307676043, 0.46988415718078613, 0.45818185806274414, 0.451391407421657, 0.4591672420501709, 0.4476910148348127, 0.43778281552451, 0.4305145485060556, 0.43206320490155903, 0.4082477518490383, 0.4079436148915972, 0.4203969751085554, 0.403811582497188, 0.4030324561255319, 0.408616840839386, 0.39541436093194143, 0.4025647129331316, 0.40198550054005217, 0.41537911551339285, 0.39571848937443327, 0.3865085669926235, 0.4056773441178458, 0.41151816504342215, 0.39510861464909147, 0.3897740159715925, 0.3896043130329677, 0.3923885566847665, 0.38314465965543476, 0.4131657140595572, 0.40211568559919086, 0.3989072782652719, 0.3978436844689505, 0.3904205049787249, 0.4211568406649998, 0.4036266377993992, 0.42283332347869873], "val_accuracy": [0.37466666102409363, 0.5636666417121887, 0.6370000243186951, 0.6673333048820496, 0.7083333134651184, 0.7106666564941406, 0.7243333458900452, 0.750333309173584, 0.7559999823570251, 0.7606666684150696, 0.765333354473114, 0.7829999923706055, 0.7836666703224182, 0.7853333353996277, 0.7963333129882812, 0.7993333339691162, 0.7919999957084656, 0.8046666383743286, 0.812333345413208, 0.8113333582878113, 0.8209999799728394, 0.8236666917800903, 0.8276666402816772, 0.8306666612625122, 0.8356666564941406, 0.8393333554267883, 0.8330000042915344, 0.8413333296775818, 0.8389999866485596, 0.8453333377838135, 0.8399999737739563, 0.8446666598320007, 0.846666693687439, 0.8416666388511658, 0.8416666388511658, 0.843666672706604, 0.8513333201408386, 0.8519999980926514, 0.8486666679382324, 0.8463333249092102, 0.847000002861023, 0.8476666808128357, 0.8573333621025085, 0.8519999980926514, 0.8519999980926514, 0.8516666889190674, 0.8429999947547913, 0.8513333201408386]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [3, 4, 0, 7, 8, 0, 7, 4, 3, 3, 3, 3, 2, 9, 6, 0, 6, 5, 7, 8, 7, 3, 4, 6, 9], [0, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 24, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.3082857131958008, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.894155720835585, 2.2521566786959406, 3.4099130792671963, 2.3082457023636227, 2.303785636960051, 2.3033156669245356], "accuracy": [0.1958790123462677, 0.15982036292552948, 0.1710474193096161, 0.09747721254825592, 0.09787346422672272, 0.0956280529499054], "val_loss": [1.9124048096793038, 1.971771308353969, 1.983001777103969, 1.9750779696873255, 1.9738810403006417, 1.973677294594901], "val_accuracy": [0.21933333575725555, 0.09833333641290665, 0.10066666454076767, 0.10000000149011612, 0.10000000149011612, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [2, 4, 6, 7, 1, 0, 0, 6, 9, 3, 8, 5, 8, 9, 8, 6, 6, 5, 0, 8, 7, 2, 4, 9, 6], [3, 2, 3, 1, 2, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 41, 91, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [83, 57]], "fitness": -0.16285714507102966, "mapping_values": [1, 21, 21, 15, 6, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))))), tf.math.multiply(tf.math.add(alpha, grad), grad)), alpha)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.sqrt(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))))))), grad)), tf.math.sqrt(alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.8961870180633107, 2.364799579467441, 2.312772495934614, 2.3052821281547984, 2.2792573731573205, 2.4149660379532984, 2.3045549534724734, 2.397062722166941, 2.4112599217550015, 2.304087716795277], "accuracy": [0.1978602558374405, 0.2281072586774826, 0.1372341811656952, 0.09932637959718704, 0.15678246319293976, 0.1810857206583023, 0.10315678268671036, 0.16021661460399628, 0.09457138925790787, 0.09998679161071777], "val_loss": [1.859274251120431, 1.976125649043492, 1.9770543234688895, 1.9697634152003698, 1.845660822732108, 1.9740607397896903, 1.971109390258789, 1.9799374852861678, 1.974607331412179, 1.9738383293151855], "val_accuracy": [0.265666663646698, 0.09833333641290665, 0.09799999743700027, 0.17533333599567413, 0.36533331871032715, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1], [9, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9, 3, 0, 0, 0], [3, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 2, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1], [2, 9, 0, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10085714608430862, "mapping_values": [1, 1, 1, 1, 0, 1, 6, 6, 4, 2, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3028830554522797, 2.3003963084190024, 2.302171913577014, 2.3025796320208185, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.08955223858356476, 0.09642054885625839, 0.10355303436517715, 0.10038304328918457, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9705683844430106, 1.97279725755964, 1.9736439159938268, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.06933332979679108, 0.09166666865348816, 0.10433333367109299, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [2, 4, 2, 7, 8, 0, 0, 8, 0, 3, 2, 5, 8, 9, 8, 2, 6, 5, 2, 8, 7, 2, 4, 9, 5], [3, 2, 2, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 24, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 9, 5, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 8, 4, 4, 2], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, grad))))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.add(alpha, grad)))))), tf.math.add(alpha, alpha))), alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09509972482919693, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1], [3, 0, 3, 7, 6, 0, 7, 4, 3, 3, 3, 3, 2, 9, 6, 0, 6, 5, 7, 8, 7, 3, 4, 6, 9], [2, 2, 2, 3, 2, 1, 2, 2, 2, 0, 2, 1, 0, 1, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 7, 6, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 12, 7, 5, 2], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))), tf.math.add(alpha, grad))))), tf.math.add(tf.math.add(alpha, grad), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 12, 7, 5, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(beta), tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07000396400690079, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [2, 3, 0, 4, 7, 8, 4], [2, 1, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08241976052522659, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0], [3, 4, 0, 7, 8, 0, 7, 4, 3, 3, 3, 3, 2, 9, 6, 0, 6, 5, 7, 8, 7, 3, 4, 6, 9], [2, 2, 3, 1, 2, 1, 2, 2, 2, 0, 2, 1, 0, 1, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 0, 0, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [2, 9, 7, 3, 7, 5, 5, 9], [3, 4, 3, 0], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.add(grad, tf.math.square(tf.math.add(beta, grad)))))), tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3.708407436678706, 683220454.8999264, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0936468094587326, 0.09470347315073013, 0.09642054885625839, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.0998338971819197, 6.501780308703231e+19, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10199999809265137, 0.10000000149011612, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07053229212760925, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [3, 4, 0, 7, 8, 0, 7, 4, 3, 3, 3, 3, 2, 9, 6, 0, 6, 5, 7, 8, 7, 3, 4, 6, 9], [3, 2, 3, 1, 2, 1, 2, 2, 2, 0, 2, 1, 0, 1, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 3, 0, 4, 7, 8, 4], [2, 2, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 8, 4, 4, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(beta, beta), tf.math.negative(tf.math.pow(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [2.3057981078430427, 2.3179584744269146, 2.34242301940792, 2.355871740223284, 2.3906079864678302, 2.390690026140295, 2.371150270696833, 2.400423456916814, 2.3979679823646047, 2.3807301594675367, 2.404438193762984, 2.4227393089488922, 2.4179139618450987, 2.46648907692929, 2.4912595645295883, 2.473419751316061], "accuracy": [0.09496764093637466, 0.1002509593963623, 0.09840179979801178, 0.10011887550354004, 0.1022322028875351, 0.09602430462837219, 0.1002509593963623, 0.09721305221319199, 0.1006472036242485, 0.1002509593963623, 0.09985470771789551, 0.09853387624025345, 0.10130762308835983, 0.09457138925790787, 0.09919429570436478, 0.10157178342342377], "val_loss": [1.9843121937343053, 2.000500202178955, 1.9953536306108748, 2.0612733023507253, 2.039247989654541, 2.0412499564034596, 2.068052359989711, 2.0470865794590543, 2.0470593997410367, 2.056927067892892, 2.0645957674298967, 2.060436248779297, 2.118868487221854, 2.1374779428754533, 2.1403771127973283, 2.111630916595459], "val_accuracy": [0.09833333641290665, 0.09799999743700027, 0.09799999743700027, 0.10000000149011612, 0.09966666996479034, 0.1003333330154419, 0.1003333330154419, 0.09799999743700027, 0.09799999743700027, 0.10000000149011612, 0.10366666316986084, 0.09966666996479034, 0.09966666996479034, 0.09799999743700027, 0.10199999809265137, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0], [3, 4, 0, 7, 8, 0, 7, 4, 3, 3, 3, 3, 2, 9, 6, 0, 6, 5, 7, 8, 7, 3, 4, 6, 9], [2, 2, 3, 1, 2, 1, 2, 2, 2, 0, 2, 1, 0, 1, 3, 0], [30, 8, 57, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 4, 7, 8, 4], [2, 1, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 33, 33, 20, 13, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 8, 4, 4, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.add(alpha, grad)))), grad)))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, grad))), tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.multiply(alpha, tf.math.multiply(grad, tf.math.add(grad, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))))))), tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(beta, alpha), tf.math.negative(tf.math.pow(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [2, 4, 2, 7, 8, 0, 0, 8, 0, 3, 2, 5, 8, 9, 8, 2, 6, 5, 2, 8, 7, 2, 4, 9, 5], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [36, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 12, 7, 5, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0], [3, 4, 2, 7, 8, 0, 1, 0, 0, 3, 8, 5, 8, 9, 8, 2, 6, 5, 2, 8, 7, 2, 4, 9, 5], [3, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 57, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3, 5], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 6, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 7, 4, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(tf.math.square(tf.math.add(beta, tf.math.square(grad))), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07185312360525131, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0], [2, 4, 2, 7, 8, 0, 0, 8, 0, 3, 2, 5, 8, 9, 8, 2, 6, 5, 2, 8, 7, 2, 4, 9, 5], [3, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [18, 67, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [2, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 2, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07053229212760925, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [3, 4, 0, 7, 8, 0, 7, 4, 3, 3, 3, 3, 2, 9, 6, 0, 6, 5, 7, 8, 7, 3, 4, 6, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1], [2, 5, 7, 1, 7, 5, 5, 9], [3, 3, 3, 4, 4], [65, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.0965714305639267, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), grad)), tf.math.add(tf.math.add(beta, tf.math.square(grad)), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3054912881671066, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09166556596755981, 0.09879804402589798, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9686971391950334, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.12033333629369736, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [2, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303603369971434, 2.30165545975984, 2.304449169753234, 2.304424521000693, 2.303051619308657, 2.302438950384329], "accuracy": [0.08981640636920929, 0.09100515395402908, 0.08717474341392517, 0.09206181764602661, 0.08889182657003403, 0.0878351628780365], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [1, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 3, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [2, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 23, 23, 14, 9, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))))))))))), alpha)), tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(tf.math.sqrt(tf.math.add(alpha, alpha)), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), grad), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.303603369971434, 2.30165545975984, 2.304449169753234, 2.304424521000693, 2.303051619308657, 2.302438950384329], "accuracy": [0.08981640636920929, 0.09100515395402908, 0.08717474341392517, 0.09206181764602661, 0.08889182657003403, 0.0878351628780365], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]