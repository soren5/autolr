[{"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7871428728103638, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2930674480803024, 2.2659875517429344, 2.235793617501975, 2.197231212328013, 2.144925151691933, 2.0741567531707124, 1.9817908162753248, 1.859347332816602, 1.7345032086068173, 1.6000716744034817, 1.490029109467479, 1.3911709580927194, 1.3147968474852805, 1.2430813283086406, 1.1945027519352542, 1.1487388232475133, 1.0892368893440074, 1.0570967631285861, 1.0371850537838103, 1.0092845209963397, 0.9854353512314411, 0.9605214556430892, 0.9369469226595433, 0.9194258764482618, 0.9066374319545376, 0.8998416117578844, 0.8969520786025537, 0.8694992094165251, 0.862255965005358, 0.8563100861803951, 0.8377637915434287, 0.8202778641432189, 0.8217379480005964, 0.8237099156813016, 0.811813788226, 0.7914134003482773, 0.7946610157169512, 0.7817521802328203, 0.7864346614430027, 0.7819884167119355, 0.772752242207354, 0.7698840915708022, 0.7559101015600971, 0.759345099627145, 0.7517073550055512, 0.7427618937989299, 0.7370753935094775, 0.7428271190412544, 0.7367657554730637, 0.7307944202845076, 0.726089485821203, 0.7188567031391891, 0.7177045703595577, 0.7118646963287291, 0.7078229635776766, 0.707646928750261, 0.7056898421630915, 0.7066134228729664, 0.6899933852398038, 0.6957503631917666, 0.6970419605977153, 0.6936943604253019, 0.6960480186634092], "accuracy": [0.11266675591468811, 0.18821820616722107, 0.2592788338661194, 0.30762118101119995, 0.3473781645298004, 0.3835688829421997, 0.41751420497894287, 0.4492141008377075, 0.46704530715942383, 0.5028398036956787, 0.5082551836967468, 0.5390304923057556, 0.5521067380905151, 0.5752212405204773, 0.5845991373062134, 0.6037511825561523, 0.6136573553085327, 0.6338660717010498, 0.6306960582733154, 0.6412627100944519, 0.6520935297012329, 0.6597543358802795, 0.6654338836669922, 0.6762647032737732, 0.6719059348106384, 0.6748117804527283, 0.674679696559906, 0.6876237988471985, 0.6913221478462219, 0.6881521344184875, 0.6970016956329346, 0.7062475085258484, 0.7004358768463135, 0.6970016956329346, 0.7073041796684265, 0.7116629481315613, 0.7071720957756042, 0.713908314704895, 0.7131158113479614, 0.7170783281326294, 0.7136441469192505, 0.7205125093460083, 0.7213049530982971, 0.7166820764541626, 0.7202483415603638, 0.7257958054542542, 0.724739134311676, 0.7313432693481445, 0.7255316376686096, 0.7357020378112793, 0.7354378700256348, 0.737947404384613, 0.7338528633117676, 0.7342491149902344, 0.733588695526123, 0.7382115721702576, 0.7392682433128357, 0.733588695526123, 0.7461365461349487, 0.7400607466697693, 0.7436270117759705, 0.7433628439903259, 0.7392682433128357], "val_loss": [1.9466231891087122, 1.9208259582519531, 1.8889074325561523, 1.8461743763514928, 1.7874033791678292, 1.707517078944615, 1.6043872492653983, 1.4796138490949358, 1.3479831218719482, 1.2212373188563757, 1.1143467426300049, 1.0259789398738317, 0.9553016253880092, 0.8985843999045235, 0.854008640561785, 0.8187381199428013, 0.7881672212055751, 0.761554649897984, 0.7410750048501151, 0.7228744029998779, 0.7068962369646344, 0.6950601850237165, 0.6822241374424526, 0.6703900609697614, 0.6620681967054095, 0.65211968762534, 0.6454429796763829, 0.6375139951705933, 0.6311300141470773, 0.6252576112747192, 0.6185117108481271, 0.6092557055609567, 0.604273932320731, 0.5991793189729963, 0.5962180921009609, 0.591408508164542, 0.586058531488691, 0.581572140966143, 0.5797116075243268, 0.5749740941183907, 0.5706521783556256, 0.5699492863246373, 0.5656160456793649, 0.5625979389463153, 0.5609430244990757, 0.5566132920128959, 0.5535483019692558, 0.5517194271087646, 0.5473757641656058, 0.5455913373402187, 0.5438603503363473, 0.543228166443961, 0.5384752069200788, 0.5365130731037685, 0.5357577800750732, 0.5328208208084106, 0.5302411147526332, 0.5281858955110822, 0.5268337045397077, 0.527493051120213, 0.5249422448022025, 0.5222423928124564, 0.5197757312229702], "val_accuracy": [0.2329999953508377, 0.3700000047683716, 0.4166666567325592, 0.45266667008399963, 0.5, 0.5346666574478149, 0.5493333339691162, 0.5693333148956299, 0.5946666598320007, 0.6079999804496765, 0.6399999856948853, 0.6603333353996277, 0.6690000295639038, 0.6746666431427002, 0.6816666722297668, 0.6869999766349792, 0.6893333196640015, 0.6933333277702332, 0.7009999752044678, 0.7039999961853027, 0.7133333086967468, 0.7170000076293945, 0.7203333377838135, 0.722000002861023, 0.721666693687439, 0.7263333201408386, 0.7266666889190674, 0.7329999804496765, 0.7266666889190674, 0.7369999885559082, 0.7293333411216736, 0.7386666536331177, 0.7383333444595337, 0.7419999837875366, 0.7459999918937683, 0.746999979019165, 0.746999979019165, 0.7506666779518127, 0.7493333220481873, 0.753333330154419, 0.7540000081062317, 0.753333330154419, 0.7580000162124634, 0.7556666731834412, 0.7576666474342346, 0.7599999904632568, 0.7580000162124634, 0.765333354473114, 0.765999972820282, 0.762333333492279, 0.7699999809265137, 0.7636666893959045, 0.7699999809265137, 0.7673333287239075, 0.7630000114440918, 0.7713333368301392, 0.7716666460037231, 0.7746666669845581, 0.7689999938011169, 0.7713333368301392, 0.7736666798591614, 0.7736666798591614, 0.7730000019073486]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 3, 1, 1], [50], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], [2, 2, 4, 2, 4, 3, 1], [3, 2, 3, 5, 4, 4, 4], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 1, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57, 68]], "fitness": -0.5448571443557739, "mapping_values": [1, 3, 3, 1, 2, 0, 13, 13, 6, 7, 0, 3, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, beta))), tf.math.pow(grad, tf.math.add(beta, tf.math.multiply(grad, grad)))), tf.math.add(beta, grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.297757225832714, 2.283907452940925, 2.2704934842078566, 2.2562880476058638, 2.2401649295346866, 2.224216002483315, 2.2050927837589995, 2.179784866009784, 2.153692309473169, 2.1201080220990476, 2.08525790908097, 2.0439007365078488, 2.0030669237975007, 1.962251256170715, 1.9414118706132946, 1.9363401464231262], "accuracy": [0.09998679161071777, 0.14291374385356903, 0.17342491447925568, 0.21371020376682281, 0.23933430016040802, 0.27499669790267944, 0.3016774654388428, 0.3257165551185608, 0.34222692251205444, 0.36824727058410645, 0.372209757566452, 0.3813234567642212, 0.38568219542503357, 0.38383305072784424, 0.35781270265579224, 0.3365473449230194], "val_loss": [1.9589619636535645, 1.9470407622201102, 1.9341795785086495, 1.9202304567609514, 1.905001163482666, 1.8873953138078963, 1.8668904304504395, 1.8427317483084542, 1.8145783288138253, 1.781191621507917, 1.7456530843462263, 1.7066879613058907, 1.6665574823107039, 1.6318890026637487, 1.616875239780971, 1.6265310559953963], "val_accuracy": [0.12266666442155838, 0.23399999737739563, 0.33000001311302185, 0.36033332347869873, 0.3973333239555359, 0.4300000071525574, 0.4546666741371155, 0.4763333201408386, 0.49799999594688416, 0.5296666622161865, 0.5356666445732117, 0.5149999856948853, 0.4866666793823242, 0.44433334469795227, 0.4086666703224182, 0.328000009059906]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [3, 1, 1, 1], [50], [0, 1, 1, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1, 1, 1, 0], [2, 1, 1, 5, 9], [0, 4, 3, 3], [94, 0, 19], [1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [6, 4, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 2, 0, 1, 3, 3], [28, 57, 68]], "fitness": -0.29571428894996643, "mapping_values": [1, 3, 3, 1, 2, 0, 7, 7, 3, 4, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.subtract(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3710857681263833, 2.3271483570404214, 2.3098120202225876, 2.2613101186942526, 2.166308111565665, 2.304691859397591, 2.6992844378612832], "accuracy": [0.17751948535442352, 0.15242372453212738, 0.21238937973976135, 0.14819706976413727, 0.18663319945335388, 0.10077928751707077, 0.1966715157032013], "val_loss": [1.9699254717145647, 1.9322785649980818, 1.9821299144199915, 1.9739962305341447, 1.9797571046011788, 1.964728627886091, 1.9860095977783203], "val_accuracy": [0.09833333641290665, 0.2826666533946991, 0.1003333330154419, 0.1003333330154419, 0.09966666996479034, 0.1003333330154419, 0.09966666996479034]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [3, 3, 1, 1], [50], [0, 0, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 1, 1], [2, 1, 1, 5, 9], [0, 4, 3, 1], [8, 0, 19], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 3, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 7, 7, 3, 4, 1, 4, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))))), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12957337498664856, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [1, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [5.587122766144319, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.1014397069811821, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [306653.0535714286, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 1, 5, 8, 8], [1, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 1, 1], [2, 9], [1, 4, 3], [8, 0, 19], [1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 2], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 1], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 11, 6, 5, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(alpha, sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0734381154179573, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1], [3, 1, 5, 7, 8], [1, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 1], [9, 9, 7], [3, 2, 3, 5], [8, 0, 19], [0, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1], [9, 5, 4, 8, 7], [4, 2], [88, 19], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [3, 0, 0, 1, 3, 3], [28, 57, 68]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.subtract(alpha, tf.math.add(alpha, grad)), tf.math.square(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [1244016052.9955494, 23872058680.840046, 111182176618.47787, 308139916524.28687, 659560486223.5625, 1225419065018.5815], "accuracy": [0.09100515395402908, 0.1026284471154213, 0.10315678268671036, 0.10394927859306335, 0.09879804402589798, 0.0952318087220192], "val_loss": [4791423561.142858, 38319919689.14286, 129316576109.71428, 306512246491.4286, 598638123885.7142, 1034428238116.5714], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 1, 1, 1, 0, 1], [7, 1, 0, 7, 8], [1, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 0, 0, 1, 1], [2, 9], [0, 4, 3, 3], [8, 0, 19], [0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [3, 5, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 3, 0, 4, 7], [1, 2, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 1, 4, 2, 2, 0, 0, 3, 1, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.subtract(alpha, tf.math.add(alpha, grad)), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.square(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(alpha, beta)", "other_info": {"loss": [3.2948079934878487e+19, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.10645885765552521, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [Infinity, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [8, 1, 5, 7, 8], [0, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1], [2, 9, 9], [3, 4, 3], [85, 0, 19], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 2], [88, 19], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 0, 4, 7, 6, 2, 9], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 3, 3, 3, 0, 2, 4, 3, 2, 1, 0, 3, 1, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [42620.224203679856, 6271206.803922864, 107164142.86302999, 754121711.3977017, 3322287807.315282, 11030109793.179237], "accuracy": [0.09140139818191528, 0.1026284471154213, 0.10328886657953262, 0.10394927859306335, 0.09879804402589798, 0.0952318087220192], "val_loss": [356146.89285714284, 18987677.14285714, 203380621.7142857, 1107962294.857143, 4148726345.142857, 12235233865.142857], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [8, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 0, 0], [2, 1, 9, 5, 9], [3, 4, 3], [39, 0, 19], [1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [3, 5, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 6, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57, 68]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09628847241401672, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 5, 3], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 12, 7, 5, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(alpha), tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.multiply(alpha, sigma)))))", "other_info": {"loss": [157544.34602410274, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0812310129404068, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 3, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1], [0, 1, 1, 0, 1, 1], [7, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57, 68]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3000764753273404, 5345.686789437182, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10447761416435242, 0.07819310575723648, 0.09232597798109055, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.19439206804548, 2757850185.142857, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.009666666388511658, 0.09933333098888397, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [3, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1], [8, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [4, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 2, 0, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09628847241401672, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 3, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 0, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 3, 1, 1], [50], [1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 0, 1, 1], [2, 1, 1, 5, 9], [3, 4, 3], [8, 0, 19], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [3, 5, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 4, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [955950.7462615415, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.14014001190662384, 0.10038304328918457, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 0, 1, 1], [2, 3], [4, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [43, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07555144280195236, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [6, 1, 5, 7, 8], [1, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9], [4, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3041782086283824, 2.303282066941529, 2.3030773416533523, 2.3026214876289552, 2.3017178122802986, 2.30394771782131], "accuracy": [0.08426892012357712, 0.09140139818191528, 0.08836349099874496, 0.09417514503002167, 0.09100515395402908, 0.08796724677085876], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 1, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1], [0, 1, 1, 0, 1, 1], [2, 1, 1, 5, 9], [4, 3, 3], [8, 0, 19], [0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [2, 5, 8, 9, 7], [4, 2], [88, 19], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 2, 0, 1, 3, 3], [28, 57, 68]], "fitness": -0.03685714304447174, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 0, 4, 2, 2, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.square(sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3041782086283824, 2.303282066941529, 2.3030773416533523, 2.3026214876289552, 2.3017178122802986, 2.30394771782131], "accuracy": [0.08426892012357712, 0.09140139818191528, 0.08836349099874496, 0.09417514503002167, 0.09100515395402908, 0.08796724677085876], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 2, 0, 1, 3, 3], [28, 57, 68]], "fitness": -0.034857142716646194, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, beta))", "other_info": {"loss": [2.3045836931930763, 2.304319956173215, 2.3049947938993385, 2.305616492718722, 2.3055907221927523, 2.309340005443081], "accuracy": [0.08426892012357712, 0.08968432247638702, 0.08466517180204391, 0.09034473448991776, 0.08440100401639938, 0.08479725569486618], "val_loss": [1.9717803682599748, 1.9723517554146903, 1.9729756627764021, 1.974036625453404, 1.9745795386178153, 1.9754316466195243], "val_accuracy": [0.036666665226221085, 0.03200000151991844, 0.028999999165534973, 0.026333333924412727, 0.024666666984558105, 0.024000000208616257]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1], [2, 9, 0, 5], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 0, 4, 7, 9, 1], [0, 0, 0, 1, 3, 3], [28, 57, 83, 75]], "fitness": -0.016857143491506577, "mapping_values": [1, 6, 6, 3, 3, 0, 5, 5, 4, 1, 1, 1, 0, 0, 0, 0, 12, 7, 5, 4], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)), tf.math.square(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(alpha, sigma))", "other_info": {"loss": [2.3164466268838972, 2.344399059232924, 2.3831942244260036, 2.4371644786761153, 2.5224913814206085, 2.6768522960099532, 2.9599590789309707, 2.9771790821570225, 2.8001938883056257, 2.5337951994213084, 2.57497847686433, 2.482750733924375, 2.4518065576650336, 2.4812543859508263, 2.5327380193837046, 2.616432614629421, 2.486442062030017], "accuracy": [0.06155065447092056, 0.03605864569544792, 0.019680358469486237, 0.012679963372647762, 0.010830801911652088, 0.010434553027153015, 0.010698718950152397, 0.02086910605430603, 0.022454101592302322, 0.03407740220427513, 0.032360322773456573, 0.02985074557363987, 0.03909655287861824, 0.03209615498781204, 0.028001584112644196, 0.022057851776480675, 0.01954827643930912], "val_loss": [1.995769432612828, 2.0257265908377513, 2.065727915082659, 2.1257355553763255, 2.2227056367056712, 2.408918925694057, 2.557149887084961, 2.51035247530256, 2.1350813593183244, 2.2102095058986118, 2.15047093800136, 2.0866054807390486, 2.1097566740853444, 2.1447833606175015, 2.198509080069406, 2.2483266421726773, 2.1125904491969516], "val_accuracy": [0.004000000189989805, 0.0033333334140479565, 0.0033333334140479565, 0.004666666500270367, 0.006000000052154064, 0.007000000216066837, 0.009666666388511658, 0.009999999776482582, 0.014666666276752949, 0.010333333164453506, 0.008333333767950535, 0.015333333052694798, 0.012000000104308128, 0.007666666526347399, 0.007333333138376474, 0.007666666526347399, 0.010333333164453506]}}]