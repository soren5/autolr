[{"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9, 9, 4], [1, 2, 3, 1, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7882857322692871, "mapping_values": [1, 39, 39, 26, 13, 6, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, grad), grad), alpha))), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.sqrt(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))))))))), grad)), tf.math.add(alpha, tf.math.pow(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.291709011886822, 2.265086098149342, 2.234534605981305, 2.195739261982164, 2.14463263212367, 2.0708174167638598, 1.973364459682591, 1.852971695701066, 1.7183498383953966, 1.5916291050796951, 1.4818554730415974, 1.382058398204945, 1.30533329493586, 1.2380156440663064, 1.1888033933076467, 1.1403226720941948, 1.1022442149731777, 1.0583429943537432, 1.039086414917097, 1.0114612431652779, 0.981076809495841, 0.9702304994992261, 0.942452287653481, 0.920694871459576, 0.9078640942292647, 0.8980763774616622, 0.879815648221195, 0.8705759438950671, 0.8543540193042294, 0.8515180591358532, 0.8378596509279214, 0.8306084302721589, 0.8226037880275637, 0.8150921355164865, 0.8161887886375878, 0.7983857333982909, 0.7990344024809863, 0.7846557832255481, 0.7765006750267038, 0.7818370779129681, 0.7674466177630245, 0.7665192761425612, 0.7522314226449426, 0.7653161456886929, 0.7443142319242039, 0.7476202480907311, 0.7426089409036628, 0.7411066131458904, 0.7342921751774597, 0.7264702567933273, 0.7248988058887941, 0.7201379443896587, 0.7168162890066954, 0.7145176646007507, 0.7052690062886925, 0.7047649875938649, 0.7046905621687466, 0.6910118424519257, 0.7003118861085309, 0.6960773482345997, 0.6894076211561758, 0.688958130358642, 0.6824691588805257, 0.6866495810747304, 0.6823557332490713], "accuracy": [0.11834631860256195, 0.18478403985500336, 0.25122177600860596, 0.302469938993454, 0.34843480587005615, 0.3895126283168793, 0.4225333631038666, 0.4485536813735962, 0.4835556745529175, 0.5008585453033447, 0.5221238732337952, 0.5464271306991577, 0.5555408596992493, 0.5830141305923462, 0.5864483118057251, 0.602562427520752, 0.6140536069869995, 0.6337339878082275, 0.6299035549163818, 0.6411306262016296, 0.6552634835243225, 0.6577730774879456, 0.6623960137367249, 0.6699247360229492, 0.6757363677024841, 0.6756042838096619, 0.6888125538825989, 0.678642213344574, 0.6902654767036438, 0.6885483860969543, 0.6988508701324463, 0.7029454708099365, 0.6989829540252686, 0.7014925479888916, 0.7051908373832703, 0.7124554514884949, 0.7083608508110046, 0.7127195596694946, 0.7143045663833618, 0.7123233675956726, 0.7176066637039185, 0.7214370369911194, 0.7276449799537659, 0.7234182953834534, 0.7250033020973206, 0.7260599732398987, 0.7236824631690979, 0.7290979027748108, 0.7320036888122559, 0.7265883088111877, 0.7314753532409668, 0.7322678565979004, 0.7325320243835449, 0.7366266250610352, 0.7349095344543457, 0.7346453666687012, 0.7333245277404785, 0.7423061728477478, 0.7424382567405701, 0.7401928305625916, 0.7427024245262146, 0.7428345084190369, 0.7452120184898376, 0.7400607466697693, 0.7411174178123474], "val_loss": [1.9467812265668596, 1.920433725629534, 1.8880290303911482, 1.8445450919015067, 1.7857770919799805, 1.7053683144705636, 1.6001290253230505, 1.4745818887438094, 1.3404951095581055, 1.2138071400778634, 1.106712852205549, 1.018650668007987, 0.949862003326416, 0.8962435041155133, 0.852067232131958, 0.8162002563476562, 0.78865305015019, 0.7645440442221505, 0.7446624381201608, 0.724743298121861, 0.7086926868983677, 0.6972262518746513, 0.6829407385417393, 0.6728586809975761, 0.6615298305238996, 0.6518154144287109, 0.6450154611042568, 0.6386322975158691, 0.6285645280565534, 0.623179384640285, 0.6190590006964547, 0.6117261477879116, 0.6060716765267509, 0.6007206269672939, 0.5960569552012852, 0.5915237154279437, 0.5869592428207397, 0.5827402898243496, 0.5798495156424386, 0.5762503317424229, 0.5712639944893974, 0.5696014676775251, 0.5662602697099958, 0.5631951263972691, 0.559168781552996, 0.5555337497166225, 0.5532920701163155, 0.5510408708027431, 0.5481454474585397, 0.5438022272927421, 0.5435972043446132, 0.540744526045663, 0.5389062506811959, 0.5366686241967338, 0.5339190278734479, 0.5332643985748291, 0.5289532457079206, 0.528634922845023, 0.5254476581301007, 0.524750930922372, 0.5225691795349121, 0.5200269733156476, 0.5189777101789202, 0.518165009362357, 0.5155785424368722], "val_accuracy": [0.23533333837985992, 0.37066665291786194, 0.41333332657814026, 0.4556666612625122, 0.4906666576862335, 0.5223333239555359, 0.5463333129882812, 0.5699999928474426, 0.5899999737739563, 0.6060000061988831, 0.6359999775886536, 0.656000018119812, 0.6643333435058594, 0.675000011920929, 0.6809999942779541, 0.6869999766349792, 0.6949999928474426, 0.6966666579246521, 0.7036666870117188, 0.7083333134651184, 0.7120000123977661, 0.7099999785423279, 0.718666672706604, 0.722000002861023, 0.7260000109672546, 0.7243333458900452, 0.7246666550636292, 0.731333315372467, 0.734666645526886, 0.7306666374206543, 0.734333336353302, 0.7393333315849304, 0.7396666407585144, 0.7383333444595337, 0.7426666617393494, 0.7443333268165588, 0.746999979019165, 0.746999979019165, 0.7509999871253967, 0.753333330154419, 0.7543333172798157, 0.7553333044052124, 0.7583333253860474, 0.7543333172798157, 0.7559999823570251, 0.7596666812896729, 0.7616666555404663, 0.7630000114440918, 0.765333354473114, 0.765333354473114, 0.7630000114440918, 0.7676666378974915, 0.765666663646698, 0.7663333415985107, 0.7703333497047424, 0.7689999938011169, 0.7703333497047424, 0.7733333110809326, 0.7746666669845581, 0.7766666412353516, 0.7743333578109741, 0.7739999890327454, 0.7749999761581421, 0.7760000228881836, 0.7766666412353516]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 8, 7, 8, 7, 1, 4, 9, 7, 0, 9, 6, 5], [2, 2, 3, 2, 1, 1, 2, 2, 0, 3, 2, 0, 0, 2, 3, 0], [18, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7877143025398254, "mapping_values": [1, 44, 44, 29, 15, 6, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 50, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, grad), grad), grad)))), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.sqrt(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(alpha, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.negative(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))))))))))))))), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.291709011886822, 2.265086129640371, 2.2345345115082185, 2.195739405927657, 2.1446308238143224, 2.0708124730502293, 1.973358004588524, 1.8529627434943787, 1.7183381929342159, 1.5916212626640995, 1.4818742511263299, 1.3820704746838368, 1.3053534239857283, 1.2380256003644472, 1.1888231270191392, 1.1403362519705473, 1.102262934342887, 1.0583635494929766, 1.039102553030157, 1.0114588964695566, 0.9810341909151854, 0.9702551066363728, 0.9424524993204312, 0.9206957552946633, 0.9078857155760061, 0.8980979317246396, 0.8798570217646627, 0.8705650809465886, 0.8544136532120433, 0.8515762643586722, 0.8378239933525834, 0.8305968114130249, 0.8226129216776863, 0.815129970617739, 0.8162334605435402, 0.7983749310149335, 0.7991066902950692, 0.7846845626169743, 0.7764986481538712, 0.7818065820242892, 0.7675113559729703, 0.766540001829334, 0.7522552422859319, 0.765275531834804, 0.7441973112845355, 0.747759873982607, 0.7426751796060219, 0.7411111170479399, 0.734334515652967, 0.7266244891139857, 0.7248628595564675, 0.7200168840574346, 0.7167022164392906, 0.7144485689220396, 0.7051014778337238, 0.7045929162037167, 0.7046196174234243, 0.6909302101867735, 0.7003731683906295, 0.6959991589623545, 0.6894117381436997, 0.688875772996806, 0.6825195470852639, 0.6866701737433976, 0.6823561279576263], "accuracy": [0.11834631860256195, 0.18478403985500336, 0.25122177600860596, 0.302469938993454, 0.34843480587005615, 0.3895126283168793, 0.42266544699668884, 0.4485536813735962, 0.48368775844573975, 0.5005943775177002, 0.5219917893409729, 0.5462950468063354, 0.5558050274848938, 0.5831462144851685, 0.5867124795913696, 0.602562427520752, 0.6139215230941772, 0.6339981555938721, 0.6297714710235596, 0.6409985423088074, 0.6548672318458557, 0.6584334969520569, 0.6625280380249023, 0.669792652130127, 0.6758684515953064, 0.6758684515953064, 0.6885483860969543, 0.6781138777732849, 0.6901333928108215, 0.6886804699897766, 0.6993792057037354, 0.702681303024292, 0.6992471218109131, 0.7020208835601807, 0.7053229212760925, 0.7113987803459167, 0.7082287669181824, 0.7127195596694946, 0.7143045663833618, 0.7124554514884949, 0.7168141603469849, 0.7217012047767639, 0.7277770638465881, 0.7231541275978088, 0.7240787148475647, 0.7257958054542542, 0.7232862114906311, 0.7285695672035217, 0.7317395210266113, 0.7259278893470764, 0.7321357727050781, 0.7334566116333008, 0.7317395210266113, 0.7371549606323242, 0.7341170310974121, 0.7347774505615234, 0.7337207794189453, 0.7424382567405701, 0.7428345084190369, 0.7400607466697693, 0.7433628439903259, 0.7421740889549255, 0.7456082701683044, 0.7397965788841248, 0.7409853339195251], "val_loss": [1.9467812265668596, 1.920433725629534, 1.8880287579127721, 1.8445441382271903, 1.7857745034354073, 1.7053634779793876, 1.600121191569737, 1.4745760985783167, 1.3404905796051025, 1.2138269969395228, 1.1067306995391846, 1.0186585017613001, 0.9498797825404576, 0.8962525299617222, 0.8520677259990147, 0.8161858490535191, 0.7886411121913365, 0.764536874634879, 0.7446503298623222, 0.7247216190610614, 0.70871901512146, 0.6972349030630929, 0.6829450471060616, 0.672864488192967, 0.6615674665996006, 0.651876619883946, 0.6450094836098808, 0.6386048112596784, 0.6285445179258075, 0.6232150793075562, 0.6190292494637626, 0.6117466858455113, 0.6060852663857597, 0.6006723301751273, 0.5960890906197684, 0.5915938786097935, 0.5870467594691685, 0.5827688830239433, 0.5798940488270351, 0.5763713802610125, 0.5713659524917603, 0.569757308278765, 0.5664435454777309, 0.5632354531969342, 0.5592960119247437, 0.5555498600006104, 0.5532887492861066, 0.5509802784238543, 0.548161404473441, 0.5438347714287894, 0.5437911919185093, 0.5407920735222953, 0.5390039001192365, 0.5367622205189296, 0.5339429037911552, 0.533342821257455, 0.5290008102144513, 0.5287572486060006, 0.5254212106977191, 0.5248180457523891, 0.5225576673235212, 0.5200664486203875, 0.5190364803586688, 0.5181447778429303, 0.515588675226484], "val_accuracy": [0.23533333837985992, 0.37066665291786194, 0.41333332657814026, 0.4556666612625122, 0.4906666576862335, 0.5223333239555359, 0.5463333129882812, 0.5699999928474426, 0.5896666646003723, 0.6060000061988831, 0.6359999775886536, 0.656000018119812, 0.6643333435058594, 0.675000011920929, 0.6809999942779541, 0.6866666674613953, 0.6953333616256714, 0.6966666579246521, 0.7036666870117188, 0.7080000042915344, 0.7120000123977661, 0.7099999785423279, 0.718666672706604, 0.721666693687439, 0.7263333201408386, 0.7239999771118164, 0.7246666550636292, 0.7316666841506958, 0.7353333234786987, 0.7306666374206543, 0.7353333234786987, 0.7393333315849304, 0.7396666407585144, 0.7383333444595337, 0.7429999709129333, 0.7446666955947876, 0.7463333606719971, 0.746999979019165, 0.75, 0.7519999742507935, 0.7540000081062317, 0.7549999952316284, 0.7563333511352539, 0.7549999952316284, 0.7563333511352539, 0.7599999904632568, 0.7613333463668823, 0.7620000243186951, 0.7649999856948853, 0.765666663646698, 0.7630000114440918, 0.7673333287239075, 0.7670000195503235, 0.7663333415985107, 0.7703333497047424, 0.768666684627533, 0.7696666717529297, 0.7739999890327454, 0.7746666669845581, 0.7766666412353516, 0.7743333578109741, 0.7743333578109741, 0.7753333449363708, 0.7760000228881836, 0.7766666412353516]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7874285578727722, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.291709011886822, 2.2650861926224284, 2.234535051232961, 2.1957427977318966, 2.144638034409662, 2.070828680852936, 1.9733840749405789, 1.8529968490501074, 1.718380573072674, 1.5916657393807827, 1.481928018279095, 1.3821096033420797, 1.3053816668093874, 1.2380771129799872, 1.1888393411200517, 1.140334635913931, 1.1022881002411031, 1.0583668909115704, 1.0391298573109389, 1.011518504224071, 0.9810515372445476, 0.9702312169278444, 0.9424411767840055, 0.9206673185649943, 0.907893309377802, 0.8980420711663705, 0.8798329979988248, 0.8705847478341181, 0.854473668932836, 0.85162572608947, 0.837851281533577, 0.830615604227686, 0.8224788360969817, 0.8150623289585555, 0.8161954466283534, 0.7984031338213677, 0.7990951673024996, 0.7847022140707873, 0.77640653852427, 0.7818278228019474, 0.7675609445732504, 0.7664775547964257, 0.7521956724544888, 0.7652456927466402, 0.7442881825451744, 0.7474944316841718, 0.7425378958909047, 0.7409971197204757, 0.7342437077050417, 0.726504581125106, 0.7248960340326929, 0.7199787647811382, 0.7167238011855838, 0.7144062443258834, 0.7052375404999446, 0.7045841310648099, 0.7046642405261547, 0.6908448640979937, 0.7003010429128003, 0.6960964683985053, 0.6893179142527088, 0.6888601430780962, 0.682410400250112, 0.6865285943370406, 0.6823530566769506], "accuracy": [0.11834631860256195, 0.18478403985500336, 0.25122177600860596, 0.302469938993454, 0.3485668897628784, 0.389380544424057, 0.4225333631038666, 0.4484215974807739, 0.48329150676727295, 0.5004622936248779, 0.5219917893409729, 0.5462950468063354, 0.555408775806427, 0.5830141305923462, 0.5861841440200806, 0.6024303436279297, 0.6136573553085327, 0.6341302394866943, 0.6296393871307373, 0.6409985423088074, 0.6548672318458557, 0.6581693291664124, 0.6622639298439026, 0.6699247360229492, 0.6754721999168396, 0.6761326193809509, 0.6890767216682434, 0.6789063811302185, 0.6901333928108215, 0.6884163022041321, 0.698718786239624, 0.7028133869171143, 0.6992471218109131, 0.7021529674530029, 0.7043983340263367, 0.7111346125602722, 0.7079645991325378, 0.7132478952407837, 0.7144366502761841, 0.7128516435623169, 0.7181349992752075, 0.722229540348053, 0.7275128960609436, 0.7238145470619202, 0.7248712182044983, 0.7257958054542542, 0.7240787148475647, 0.7284374833106995, 0.7318716049194336, 0.7268524765968323, 0.7312111854553223, 0.733060359954834, 0.7321357727050781, 0.7367587089538574, 0.7345132827758789, 0.7357020378112793, 0.733588695526123, 0.7417778372764587, 0.7421740889549255, 0.7403249144554138, 0.7434949278831482, 0.741909921169281, 0.7448157668113708, 0.7395324110984802, 0.7408532500267029], "val_loss": [1.9467812265668596, 1.920433725629534, 1.8880316189357214, 1.8445496559143066, 1.7857888085501534, 1.705383198601859, 1.6001577377319336, 1.4746109076908656, 1.340519666671753, 1.21385771887643, 1.106769663946969, 1.0186987604413713, 0.9499250139508929, 0.8963066850389753, 0.8521015473774501, 0.8162163496017456, 0.7886521816253662, 0.7645397015980312, 0.7446909632001605, 0.7247731855937413, 0.70875084400177, 0.6972516434533256, 0.6829473291124616, 0.6728606224060059, 0.6615218605313983, 0.6518430880137852, 0.6449818440846035, 0.6386107206344604, 0.6285764489855085, 0.6231836932046073, 0.619018520627703, 0.6117470605032784, 0.6060750484466553, 0.6007002081189837, 0.596042377608163, 0.5915093081338065, 0.5868338346481323, 0.5826101643698556, 0.5798377820423671, 0.5763408456529889, 0.5713144881384713, 0.5696284770965576, 0.5662865809031895, 0.5632426738739014, 0.5591735669544765, 0.5554967778069633, 0.5532558986118862, 0.5508995226451329, 0.5481217588697161, 0.5438178947993687, 0.5436749798910958, 0.5406782797404698, 0.5388513973781041, 0.5366813966206142, 0.5339512654713222, 0.5334947960717338, 0.5292127132415771, 0.5288845641272408, 0.5254690817424229, 0.5247857570648193, 0.5225534098488944, 0.5200187138148716, 0.5189036982400077, 0.5180950675691877, 0.5154849461146763], "val_accuracy": [0.23533333837985992, 0.37066665291786194, 0.41333332657814026, 0.45533332228660583, 0.4906666576862335, 0.5223333239555359, 0.5463333129882812, 0.5699999928474426, 0.5896666646003723, 0.6060000061988831, 0.6359999775886536, 0.656000018119812, 0.6643333435058594, 0.6746666431427002, 0.6806666851043701, 0.6866666674613953, 0.6946666836738586, 0.6963333487510681, 0.7036666870117188, 0.7083333134651184, 0.7126666903495789, 0.7096666693687439, 0.718666672706604, 0.7223333120346069, 0.7260000109672546, 0.7246666550636292, 0.7243333458900452, 0.7319999933242798, 0.7350000143051147, 0.731333315372467, 0.734666645526886, 0.7393333315849304, 0.7400000095367432, 0.7379999756813049, 0.7433333396911621, 0.7446666955947876, 0.746666669845581, 0.7476666569709778, 0.7509999871253967, 0.753333330154419, 0.7546666860580444, 0.7546666860580444, 0.7580000162124634, 0.7543333172798157, 0.7563333511352539, 0.7599999904632568, 0.7620000243186951, 0.762666642665863, 0.765666663646698, 0.7649999856948853, 0.7630000114440918, 0.7676666378974915, 0.7666666507720947, 0.7666666507720947, 0.7693333625793457, 0.7689999938011169, 0.7693333625793457, 0.7736666798591614, 0.7746666669845581, 0.7766666412353516, 0.7739999890327454, 0.7739999890327454, 0.7763333320617676, 0.7760000228881836, 0.7763333320617676]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [1, 2, 3, 1, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [98, 8, 15, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 12, 7, 5, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(sigma), tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma)))))", "other_info": {"loss": [2.3757539279488302, 2.658033219594304, 4.625959384143785, 22.623701717591857, 187.2997257432697, 1668.8372156991934, 15716.203034708922, 138268.63901730286, 1254596.9882776383, 11446417.61960111], "accuracy": [0.021001188084483147, 0.016114119440317154, 0.029982829466462135, 0.0602298229932785, 0.09549596905708313, 0.09985470771789551, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.1067425182887485, 2.6392296382359097, 7.352617263793945, 51.815424237932476, 459.0487758091518, 4194.329799107143, 39683.109375, 340208.9464285714, 3122605.8571428573, 28421489.14285714], "val_accuracy": [0.008333333767950535, 0.024666666984558105, 0.039000000804662704, 0.09333333373069763, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 0, 2, 0, 8, 1, 7, 0, 3, 2, 6, 7, 8, 9, 3, 4, 6, 4, 5, 8, 7, 1, 4, 9, 4], [3, 2, 3, 1, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [5, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07251353561878204, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [0, 4, 2, 8, 8, 2, 7, 0, 3, 3, 3, 7, 8, 9, 2, 4, 6, 9, 7, 8, 7, 1, 4, 9, 6, 8, 7, 2, 5], [1, 2, 3, 1, 1, 2, 2, 2, 0, 2, 2, 0, 3, 2, 3, 0], [30, 8, 39, 38, 70, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [1, 0, 0, 1, 3, 3], [0, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 45, 45, 29, 16, 6, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 50, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.math.add(tf.math.add(grad, tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, alpha))), tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), alpha)), tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.pow(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), grad)), tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))))))), tf.math.sqrt(tf.math.add(alpha, grad)))))), tf.math.add(tf.math.add(grad, tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.square(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [1, 2, 1, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 0, 1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 0, 3, 0], [76, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [0, 0, 0, 1, 3, 3], [51, 57, 27]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 3, 1, 0, 0, 0, 0, 12, 7, 5, 3], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))), tf.math.add(grad, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.pow(tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma))))))", "other_info": {"loss": [2.3024070926739824, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09615638852119446, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9, 9, 6], [2, 2, 3, 1, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 5, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [31, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 39, 39, 26, 13, 6, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, grad), grad), alpha))), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.sqrt(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))))))))), grad)), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 4, 4, 8, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 8, 9, 3], [1, 2, 3, 1, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [1, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [2, 3, 4, 4, 1, 8, 4], [3, 0, 0, 1, 3, 3], [51, 38]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3020598131352883, 2.302388040727518, 2.302662046216089, 2.304884613024765, 2.315121065057138, 2.3712140036895213], "accuracy": [0.10368511080741882, 0.10236428678035736, 0.1026284471154213, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.97370822089059, 1.973874773297991, 1.9746505873543876, 1.9787911006382533, 1.9996822220938546, 2.1269119126456126], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1], [3, 5, 2, 8, 8, 6, 9, 0, 3, 3, 3, 0, 8, 9, 3, 4, 9, 6, 7, 8, 7, 1, 4, 9, 2, 9], [2, 2, 3, 1, 1, 2, 1, 1, 0, 0, 2, 0, 3, 2, 3, 0, 1, 2, 2, 2, 0], [30, 8, 39, 25, 23, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1, 0], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [0, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 2, 1, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2858.5280086047237, 51712.610892922006, 239706.4683289856, 660804.6408664641, 1420808.9337108703, 2577248.787709682], "accuracy": [0.10659094154834747, 0.09708096832036972, 0.09628847241401672, 0.09602430462837219, 0.09826971590518951, 0.09840179979801178], "val_loss": [10688.111328125, 82992.62276785714, 277608.3214285714, 655220.25, 1276514.2857142857, 2202174.9285714286], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [3, 5, 2, 8, 8, 0, 9, 0, 3, 3, 3, 0, 8, 9, 3, 4, 9, 6, 7, 8, 7, 1, 4, 9], [1, 2, 1, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [0, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2858.5280086047237, 51712.610892922006, 239706.4683289856, 660804.6408664641, 1420808.9337108703, 2577248.787709682], "accuracy": [0.10659094154834747, 0.09708096832036972, 0.09628847241401672, 0.09602430462837219, 0.09826971590518951, 0.09840179979801178], "val_loss": [10688.111328125, 82992.62276785714, 277608.3214285714, 655220.25, 1276514.2857142857, 2202174.9285714286], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 3, 1, 7, 8, 5, 3, 3, 7, 3, 9, 3, 4, 6, 9, 7, 6, 7, 1, 4, 9], [3, 2, 3, 1, 1, 2, 2, 2, 2, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3, 4], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 8, 4, 7, 8, 3], [0, 0, 0, 1, 3, 3], [79, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 31, 31, 19, 12, 3, 11, 11, 7, 4, 1, 3, 1, 1, 0, 0, 4, 2, 2, 2], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.square(tf.math.add(alpha, grad)))))), alpha))), tf.math.add(alpha, alpha))), tf.math.multiply(tf.math.add(alpha, tf.math.multiply(grad, grad)), tf.math.add(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad))))), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(tf.math.square(tf.math.add(beta, grad)), tf.math.square(tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [674610996.0498266, 12949050967.576279, 60894672363.373924, 168886201661.97964, 364303259918.23535, 662171023252.6091], "accuracy": [0.10698718577623367, 0.09681680053472519, 0.09668471664190292, 0.09602430462837219, 0.09826971590518951, 0.09826971590518951], "val_loss": [2623438336.0, 20979895149.714287, 70798463561.14285, 167808331190.85715, 327742165577.1429, 566324962450.2858], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9, 6, 4, 1, 5, 0, 6, 6, 5, 0], [2, 2, 3, 1, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0, 0, 1], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [51, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 51, 51, 33, 18, 7, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.pow(tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.negative(grad), tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, grad), grad), tf.math.add(alpha, alpha))))), tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), alpha)), tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.pow(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))))))))), tf.math.subtract(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.negative(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07251353561878204, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [3, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [51, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(sigma, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [234894229.69161764, 4507562965.124819, 21195724336.623432, 58782510227.01994, 126796930352.45436, 230466313187.19113], "accuracy": [0.10698718577623367, 0.09681680053472519, 0.09668471664190292, 0.09602430462837219, 0.09826971590518951, 0.09840179979801178], "val_loss": [913313115.4285715, 7302713197.714286, 24642424246.857143, 58406883913.14286, 114070213193.14285, 197106616612.57144], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9, 1, 7, 5, 7, 1, 3], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0, 1, 1], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [30, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 48, 48, 30, 18, 6, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 8, 4, 4, 2], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, grad), grad), alpha))), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.sqrt(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))), tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.add(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))))))))), tf.math.square(grad))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(alpha, alpha)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(sigma, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09615638852119446, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 6, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 8, 6, 2, 7, 8, 7, 1, 4, 9, 3, 8, 2, 6, 0, 2, 2, 3, 4, 0], [0, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3, 0], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [0, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 9, 9, 5, 4, 2, 3, 1, 1, 0, 0, 2, 1, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), tf.math.add(grad, tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2858.5280086047237, 51712.610892922006, 239706.4683289856, 660804.6408664641, 1420808.9337108703, 2577248.787709682], "accuracy": [0.10659094154834747, 0.09708096832036972, 0.09628847241401672, 0.09602430462837219, 0.09826971590518951, 0.09840179979801178], "val_loss": [10688.111328125, 82992.62276785714, 277608.3214285714, 655220.25, 1276514.2857142857, 2202174.9285714286], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302652925374942, 2.3028622537067993, 2.3032541967197226, 2.3033615369145517, 2.304253268597731, 2.302587420193117], "accuracy": [0.09087307006120682, 0.08691058307886124, 0.09179764986038208, 0.09219389408826828, 0.08228767663240433, 0.08968432247638702], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 3, 0, 1, 3, 3], [51, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, sigma))", "other_info": {"loss": [2.302652925374942, 2.3028622537067993, 2.3032541967197226, 2.3033615369145517, 2.304253268597731, 2.302587420193117], "accuracy": [0.09087307006120682, 0.08691058307886124, 0.09179764986038208, 0.09219389408826828, 0.08228767663240433, 0.08968432247638702], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [1, 2, 3, 1, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 23, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [2, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 1, 0, 1, 3, 3], [43, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, alpha))", "other_info": {"loss": [2.302652925374942, 2.3028622537067993, 2.3032541967197226, 2.3033615369145517, 2.304253268597731, 2.302587420193117], "accuracy": [0.09087307006120682, 0.08691058307886124, 0.09179764986038208, 0.09219389408826828, 0.08228767663240433, 0.08968432247638702], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [98, 8, 15, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.302652925374942, 2.3028622537067993, 2.3032541967197226, 2.3033615369145517, 2.304253268597731, 2.302587420193117], "accuracy": [0.09087307006120682, 0.08691058307886124, 0.09179764986038208, 0.09219389408826828, 0.08228767663240433, 0.08968432247638702], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]