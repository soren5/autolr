[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1], [6, 3, 1, 2, 5, 2, 1, 3, 0, 5, 8, 9], [3, 3, 0, 0, 0, 2, 2, 4, 3, 0], [52, 47, 0, 81, 53, 45], [0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.7997142672538757, "mapping_values": [1, 1, 1, 0, 1, 0, 18, 18, 10, 8, 3, 2, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.square(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, tf.math.negative(beta))), tf.math.add(beta, tf.math.square(grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3184963663287874, 2.2451183454566204, 1.7074800303205602, 1.606308034098994, 1.1655563411459458, 1.0069496170121288, 0.8962559750712763, 0.835834609109649, 0.7981223748218681, 0.7929292872691781, 0.7379639042744847, 0.7404970297440562, 0.7043830570039685, 0.7114875830789645, 0.6881707651409507, 0.6775981542960512, 0.644490740523126, 0.6621493474603597, 0.6289585091497416, 0.6297190442943081, 0.6244621659865106], "accuracy": [0.22480517625808716, 0.19601109623908997, 0.3901730179786682, 0.44828951358795166, 0.5696737766265869, 0.6395456194877625, 0.6752080321311951, 0.687887966632843, 0.7025492191314697, 0.6996433734893799, 0.7293620109558105, 0.7214370369911194, 0.7383436560630798, 0.7321357727050781, 0.7358341217041016, 0.7430986762046814, 0.7543256878852844, 0.7470611333847046, 0.7601373791694641, 0.7621186375617981, 0.7573636174201965], "val_loss": [1.9707053729466029, 1.5433646270206995, 1.229774066380092, 0.8157173565455845, 0.7847833803721836, 0.7117122411727905, 0.6403354065758842, 0.6099597385951451, 0.5806898559842791, 0.5738434621265956, 0.5564550501959664, 0.549032279423305, 0.6020499978746686, 0.5514974253518241, 0.5306797879082816, 0.5138111284800938, 0.549213171005249, 0.5033494915281024, 0.5134427717753819, 0.5226996796471732, 0.5254973513739449], "val_accuracy": [0.10366666316986084, 0.4073333442211151, 0.4646666646003723, 0.6460000276565552, 0.6549999713897705, 0.6813333630561829, 0.7193333506584167, 0.7166666388511658, 0.721666693687439, 0.749666690826416, 0.750333309173584, 0.7603333592414856, 0.7203333377838135, 0.753333330154419, 0.7440000176429749, 0.7730000019073486, 0.734000027179718, 0.7689999938011169, 0.7580000162124634, 0.765333354473114, 0.746999979019165]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [1, 2, 2, 4, 1, 5, 1, 3, 6, 0, 2, 9, 0, 9, 8, 6, 7], [3, 3, 3, 3, 0, 2, 2, 4, 2, 0], [45, 62, 0, 81, 53, 45], [0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [39, 57]], "fitness": -0.7977142930030823, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1792568063786346, 1.4965234118178063, 1.1656131422231542, 0.9763372011975747, 0.8500379058883616, 0.8460555790264561, 0.7735719110955966, 0.7667984148026646, 0.7260900002901407, 0.7124507867066521, 0.7065587834816851, 0.6792313482279255, 0.6839335814222699, 0.6622687255103339, 0.6339505024400952, 0.6363100574520743, 0.6182739269842074, 0.616431100044772, 0.6249124069082235, 0.5985885958913421, 0.5996931697777187, 0.5793485512681185, 0.5823641605601413, 0.579176217534082], "accuracy": [0.2793554365634918, 0.5110289454460144, 0.573107898235321, 0.651168942451477, 0.6906617283821106, 0.6869634389877319, 0.7143045663833618, 0.7123233675956726, 0.7306828498840332, 0.7321357727050781, 0.7349095344543457, 0.7380794882774353, 0.7470611333847046, 0.7454761862754822, 0.765949010848999, 0.7563069462776184, 0.7692511081695557, 0.7675340175628662, 0.7638356685638428, 0.7733456492424011, 0.7753269076347351, 0.7885351777076721, 0.78113853931427, 0.7791573405265808], "val_loss": [1.522305692945208, 0.9544374942779541, 0.8026084218706403, 0.6888231379645211, 0.6299805641174316, 0.5970442635672433, 0.6123159612928119, 0.557463560785566, 0.5756830317633492, 0.5736562183925084, 0.5465690749032157, 0.5918185710906982, 0.5208825213568551, 0.5140363148280552, 0.4974233422960554, 0.5020082678113665, 0.5105864831379482, 0.4844844341278076, 0.4791526624134609, 0.47775513785226004, 0.46456568581717356, 0.46280084337506977, 0.5234491314206805, 0.46521077837262836], "val_accuracy": [0.5383333563804626, 0.6313333511352539, 0.6553333401679993, 0.7193333506584167, 0.7146666646003723, 0.7473333477973938, 0.7440000176429749, 0.7580000162124634, 0.7440000176429749, 0.7379999756813049, 0.7523333430290222, 0.7443333268165588, 0.7699999809265137, 0.778333306312561, 0.7829999923706055, 0.7846666574478149, 0.7726666927337646, 0.784333348274231, 0.7960000038146973, 0.7886666655540466, 0.793666660785675, 0.7926666736602783, 0.7456666827201843, 0.7910000085830688]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [1, 2, 2, 4, 1, 5, 1, 3, 6, 0, 2, 9, 0, 9, 8, 6, 7], [3, 3, 3, 3, 0, 2, 2, 4, 2, 0], [45, 62, 0, 81, 53, 45], [0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.7962856888771057, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3192203619287723, 2.2489646448828933, 1.7717169252258833, 1.4430874172628139, 1.2397656122360563, 0.9931197347201376, 0.9309069034036408, 0.8264722845195669, 0.8229904963576231, 0.7955752877810565, 0.7268953783369461, 0.6989048762076472, 0.7127107477710861, 0.7231946719195061, 0.686603976884743, 0.6878330976719618, 0.6497676957473937, 0.6471865269659438, 0.6335773606184467, 0.6186456897743405, 0.6111389408179593, 0.6109198645719716, 0.5938091078659232, 0.5893150571157526, 0.5615330736209783, 0.5604229104312625, 0.5454659269958549, 0.5606245135807516, 0.5480232824581395], "accuracy": [0.2246730923652649, 0.1954827606678009, 0.37181350588798523, 0.4917448163032532, 0.5457667708396912, 0.6267336010932922, 0.6593580842018127, 0.691850483417511, 0.6857746839523315, 0.7059833407402039, 0.7309470176696777, 0.7360982894897461, 0.7296261787414551, 0.7322678565979004, 0.7417778372764587, 0.7401928305625916, 0.754589855670929, 0.7613261342048645, 0.7561748623847961, 0.7646281719207764, 0.7677981853485107, 0.770439863204956, 0.7757231593132019, 0.7765156626701355, 0.7944789528846741, 0.785629391670227, 0.7954035401344299, 0.789459764957428, 0.7928939461708069], "val_loss": [1.9708623204912459, 1.5515781470707484, 1.0346601349966866, 1.207930394581386, 0.7249444723129272, 0.7216330255780902, 0.6313431944165911, 0.6651672465460641, 0.6654447998319354, 0.5677246025630406, 0.5460642235619682, 0.5502667256764003, 0.6572077444621495, 0.6121740511485508, 0.5415329081671578, 0.5116346904209682, 0.5696540560041156, 0.5223665237426758, 0.49726271629333496, 0.4889690024512155, 0.5147647346769061, 0.46422079631260466, 0.47325585569654194, 0.4591623544692993, 0.45060363837650846, 0.4513586759567261, 0.45492892605917795, 0.44652933733803885, 0.4378069298607962], "val_accuracy": [0.10366666316986084, 0.3916666805744171, 0.5630000233650208, 0.5566666722297668, 0.6830000281333923, 0.6919999718666077, 0.7203333377838135, 0.6863333582878113, 0.7009999752044678, 0.7450000047683716, 0.7596666812896729, 0.7526666522026062, 0.7039999961853027, 0.7260000109672546, 0.7570000290870667, 0.7766666412353516, 0.7446666955947876, 0.7493333220481873, 0.7716666460037231, 0.7860000133514404, 0.7556666731834412, 0.7929999828338623, 0.7903333306312561, 0.8056666851043701, 0.7956666946411133, 0.8003333210945129, 0.784333348274231, 0.7929999828338623, 0.8029999732971191]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [6, 4, 6, 0, 2, 5, 1, 2, 2, 0, 8, 9], [3, 3, 0, 3, 0, 2, 2, 4, 2, 0], [45, 62, 0, 81, 53, 45], [0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.7905714511871338, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(grad, tf.math.square(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3192226654345474, 2.2477156512253256, 1.7374130461776829, 1.7388371027944078, 1.2818932000121042, 1.1020349043077875, 0.9560594169801615, 0.8896787189032817, 0.8240580412501026, 0.804130590476884, 0.7682469376735463, 0.7645058363987045, 0.7030576820213561, 0.7144056292903453, 0.7196753927981455, 0.6949794142473926, 0.6430748131186688, 0.6568837273610566, 0.6354195786552218, 0.6153012876969759, 0.6259412317149406, 0.5991038899726525, 0.5949197767858161, 0.587108627034531, 0.5516704525756735, 0.570570588127623, 0.5453404020938765, 0.5567255439287195, 0.534687408776158], "accuracy": [0.22480517625808716, 0.19561484456062317, 0.38224804401397705, 0.43706247210502625, 0.5322942733764648, 0.5938449501991272, 0.6516972780227661, 0.6729626059532166, 0.6876237988471985, 0.6993792057037354, 0.7100779414176941, 0.7180029153823853, 0.7354378700256348, 0.7327961921691895, 0.7296261787414551, 0.739928662776947, 0.7589486241340637, 0.7499669790267944, 0.7592127919197083, 0.770439863204956, 0.7584202885627747, 0.7799497842788696, 0.7823272943496704, 0.778761088848114, 0.7952714562416077, 0.7878747582435608, 0.7975168228149414, 0.7917051911354065, 0.8005547523498535], "val_loss": [1.9708786691938127, 1.5476727826254708, 1.3311570031302316, 1.1658025809696742, 0.9807567255837577, 0.7648169142859322, 0.7114367485046387, 0.6295803444726127, 0.5832298823765346, 0.5907576084136963, 0.5900286436080933, 0.5597382613590786, 0.5998765570776803, 0.637102586882455, 0.5372781923839024, 0.517276474407741, 0.5448407275336129, 0.5021712098802839, 0.49903546060834614, 0.49555698462894987, 0.47836947441101074, 0.4855703626360212, 0.4376459888049534, 0.4379241466522217, 0.45942461490631104, 0.44386208057403564, 0.45254431452069965, 0.4313697559492929, 0.4485248327255249], "val_accuracy": [0.10366666316986084, 0.39533331990242004, 0.43166667222976685, 0.5009999871253967, 0.5683333277702332, 0.6633333563804626, 0.6970000267028809, 0.7023333311080933, 0.7326666712760925, 0.7419999837875366, 0.7310000061988831, 0.7413333058357239, 0.7269999980926514, 0.6903333067893982, 0.7673333287239075, 0.7773333191871643, 0.7369999885559082, 0.762666642665863, 0.7699999809265137, 0.7870000004768372, 0.7896666526794434, 0.7903333306312561, 0.8076666593551636, 0.8096666932106018, 0.7943333387374878, 0.8040000200271606, 0.7940000295639038, 0.8090000152587891, 0.7950000166893005]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 8, 6, 0, 2, 5, 1, 2, 2, 0, 8, 9], [3, 5, 3, 3, 0, 2, 2, 4, 2, 0], [52, 69, 0, 81, 53, 45], [0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [26, 57]], "fitness": -0.7739999890327454, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 9, 7, 1, 2, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, grad), tf.math.add(grad, tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, beta))))))), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.296635085817467, 2.27768496052464, 2.2576842127285928, 2.237705135011654, 2.2144819744479434, 2.186261504412233, 2.14937317527249, 2.102101156818963, 2.048154186752132, 1.9804453014335486, 1.9048255217498902, 1.8189939141761609, 1.7373290330726614, 1.6456085098040119, 1.561943318424696, 1.481269385112102, 1.4106500417549124, 1.35085372025106, 1.296977676231753, 1.2571034698029078, 1.2127449861244834, 1.190255521798981, 1.1456043326135137, 1.1322754506563482, 1.107088364630233, 1.0769810473300117, 1.0441271742778038, 1.0249571627976006, 1.0178307436870122, 0.9963280173293383, 0.9804422518265734, 0.9718872078059293, 0.9510526922967503, 0.9470612305250812, 0.934011816317143, 0.9238284760226254, 0.9136707520740002, 0.8967897502139355, 0.8967990322655313, 0.881129653706385, 0.8850013253915863, 0.8640872622682528, 0.8562618127714421, 0.852857534525779, 0.8451618453641027, 0.8372532021194763, 0.8380752397471604, 0.8327220790831168, 0.8194637504535313, 0.8185450787384276, 0.8161459137199577, 0.8140481336556721, 0.8005441931087296, 0.7979628427814986, 0.7953267808776757, 0.7860134238139309, 0.7772821601843869, 0.7763746793810812, 0.7782059074739314, 0.774376920925675, 0.7593245085960114, 0.7710578106319144, 0.7695505331457252, 0.7623103037801291, 0.7660104202052715, 0.7529818984605947, 0.7615463344522707, 0.7389552382083853, 0.7424286753195088, 0.7408807179899799, 0.7317500573186481, 0.7256048926272963, 0.7313570092540328, 0.7305176348230228], "accuracy": [0.1018359512090683, 0.15400871634483337, 0.19931316375732422, 0.2522784173488617, 0.29124289751052856, 0.3203011453151703, 0.34724608063697815, 0.3757759928703308, 0.39690926671028137, 0.4161933660507202, 0.43587371706962585, 0.4574032425880432, 0.47404569387435913, 0.49993395805358887, 0.499009370803833, 0.5184255838394165, 0.5337471961975098, 0.5540879964828491, 0.5565975308418274, 0.577070415019989, 0.5805045366287231, 0.590278685092926, 0.6071853041648865, 0.6013736724853516, 0.6128648519515991, 0.6235635876655579, 0.6332056522369385, 0.6394135355949402, 0.6425835490226746, 0.6439043879508972, 0.648659348487854, 0.659490168094635, 0.6680755615234375, 0.6623960137367249, 0.6688680648803711, 0.6695284843444824, 0.678642213344574, 0.6833971738815308, 0.6748117804527283, 0.6811517477035522, 0.683529257774353, 0.6865671873092651, 0.693831741809845, 0.6936996579170227, 0.6936996579170227, 0.6992471218109131, 0.6956809163093567, 0.700700044631958, 0.6976621150970459, 0.7025492191314697, 0.7030775547027588, 0.7028133869171143, 0.7082287669181824, 0.7100779414176941, 0.7084929347038269, 0.7120591998100281, 0.7140403985977173, 0.7180029153823853, 0.709021270275116, 0.713908314704895, 0.7194558382034302, 0.7149649858474731, 0.7189275026321411, 0.7190595865249634, 0.7219653725624084, 0.72672039270401, 0.719852089881897, 0.7301545143127441, 0.726192057132721, 0.7290979027748108, 0.7360982894897461, 0.7321357727050781, 0.7316074371337891, 0.7327961921691895], "val_loss": [1.9548051016671317, 1.938225473676409, 1.9201581137520927, 1.8988749640328544, 1.8735036168779646, 1.842357976096017, 1.8035014697483607, 1.7552530424935477, 1.6971721308571952, 1.6281486238752092, 1.5488022395542689, 1.4623125961848669, 1.3734430244990758, 1.2856499126979284, 1.2037250314440047, 1.1290507997785295, 1.0639019012451172, 1.0090723037719727, 0.9617301736559186, 0.9217442444392613, 0.8881067548479352, 0.8600450072969709, 0.8338683503014701, 0.811546870640346, 0.7926061834607806, 0.7747663940702166, 0.7579219000680106, 0.7433275835854667, 0.7316057852336338, 0.719962443624224, 0.7096094574247088, 0.6999784708023071, 0.6910147496632167, 0.6823830604553223, 0.675839730671474, 0.669301952634539, 0.6616588660648891, 0.6571038961410522, 0.649529048374721, 0.6436980451856341, 0.638983964920044, 0.6338719129562378, 0.628952179636274, 0.6239796195711408, 0.6205376386642456, 0.6156818015234811, 0.6111432995115008, 0.6087312698364258, 0.605434945651463, 0.6011283227375576, 0.5980951104845319, 0.5947085278374808, 0.5922217879976545, 0.5891550098146711, 0.5878658464976719, 0.5836681468146188, 0.580681460244315, 0.5785257986613682, 0.5766286339078631, 0.5730405364717756, 0.5714630229132516, 0.5682674986975533, 0.5659106629235404, 0.564983674458095, 0.5629710129329136, 0.56088730267116, 0.5609668493270874, 0.5558006422860282, 0.5543260063443866, 0.553233231816973, 0.5508961166654315, 0.5496617896216256, 0.5501470565795898, 0.5474078825541905], "val_accuracy": [0.16099999845027924, 0.3009999990463257, 0.36800000071525574, 0.40166667103767395, 0.43433332443237305, 0.45766666531562805, 0.4896666705608368, 0.5063333511352539, 0.5346666574478149, 0.546999990940094, 0.5590000152587891, 0.5766666531562805, 0.581333339214325, 0.5983333587646484, 0.6169999837875366, 0.6343333125114441, 0.6470000147819519, 0.6523333191871643, 0.6673333048820496, 0.668666660785675, 0.6726666688919067, 0.6793333292007446, 0.6813333630561829, 0.687333345413208, 0.6909999847412109, 0.6970000267028809, 0.6973333358764648, 0.6993333101272583, 0.7080000042915344, 0.7016666531562805, 0.7059999704360962, 0.7086666822433472, 0.7123333215713501, 0.718999981880188, 0.715666651725769, 0.7213333249092102, 0.7246666550636292, 0.7203333377838135, 0.7266666889190674, 0.7293333411216736, 0.7333333492279053, 0.7326666712760925, 0.7350000143051147, 0.734666645526886, 0.7386666536331177, 0.7400000095367432, 0.7403333187103271, 0.7413333058357239, 0.7419999837875366, 0.7429999709129333, 0.7446666955947876, 0.7453333139419556, 0.7459999918937683, 0.7493333220481873, 0.7486666440963745, 0.7493333220481873, 0.7526666522026062, 0.7523333430290222, 0.7509999871253967, 0.7540000081062317, 0.7559999823570251, 0.7546666860580444, 0.7556666731834412, 0.7549999952316284, 0.7580000162124634, 0.7580000162124634, 0.7536666393280029, 0.7609999775886536, 0.765333354473114, 0.7633333206176758, 0.7643333077430725, 0.762666642665863, 0.7620000243186951, 0.7643333077430725]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 8, 6, 8, 2, 5, 1, 2, 2, 0, 8, 9], [2, 3, 0, 2, 0, 3, 3, 4, 2, 0], [95, 62, 0, 81, 53, 45], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [23, 57]], "fitness": -0.7591428756713867, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 3, 2, 2, 0, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2999399014436306, 2.288907968546059, 2.2775224363956594, 2.2684060848620526, 2.2590018803212684, 2.249240864285263, 2.237295032539514, 2.2232392577132405, 2.20917878017418, 2.191667448213119, 2.174108709184926, 2.15378882324124, 2.1327612012085457, 2.105191985456431, 2.0761888236291592, 2.044909899843493, 2.0082159295073905, 1.96838462958955, 1.926545984410276, 1.8847834437262854, 1.8325942675073181, 1.7921545889241868, 1.7344583538875697, 1.694088187703934, 1.6469874024438411, 1.5978222054544615, 1.5464046216203142, 1.5029746251508718, 1.4714517155186124, 1.4281056664166685, 1.3936971205415476, 1.367299289892945, 1.3271927645870598, 1.3137307057779353, 1.28525383260508, 1.2598877460288018, 1.2348786485571477, 1.2083604302876787, 1.199157328763737, 1.1739777109925584, 1.1639531721859055, 1.1442063834610208, 1.1199566166650634, 1.1132343406643235, 1.0967818242904297, 1.0810275191187528, 1.0758073477461008, 1.066263014094673, 1.0424644993501269, 1.0402552426341596, 1.0236816464193492, 1.0266445736449865, 1.0033390591991986, 0.9995596506859822, 0.9918522663781546, 0.9764401941031134, 0.964194054419984, 0.962429495441002, 0.9602985430103897, 0.9550811457690656, 0.9302965014791129, 0.9429523990280545, 0.9413454245582563, 0.9326963684483605, 0.9260074234736232, 0.9161462633837452, 0.9201752466532565, 0.9011260638808877, 0.8965515839409567, 0.8921499135566346, 0.8791425296611884, 0.8727086025962205, 0.8808591475402989, 0.8721148911059068, 0.8755084241795392, 0.8722363226386329, 0.8608421208426748, 0.8502703224505731, 0.8582683432182505, 0.855059951492635, 0.8410773619354015, 0.8431967886022337, 0.8366208743771951, 0.842763568172208, 0.8287596074093476, 0.8324950189480865, 0.8297553330427619, 0.8337000054517018, 0.8145333479471399, 0.818582328571037, 0.8069461015756844, 0.814335211487557, 0.8024940400815769, 0.8066383098189258, 0.8111587651433128, 0.79389865068381, 0.8049105158445464, 0.8002809651492215, 0.796618728589829, 0.7941110616960955], "accuracy": [0.09496764093637466, 0.12429005652666092, 0.1516312211751938, 0.18134988844394684, 0.20393607020378113, 0.22718267142772675, 0.23933430016040802, 0.2771100103855133, 0.29097872972488403, 0.31224408745765686, 0.3288865387439728, 0.3443402349948883, 0.36520934104919434, 0.37287017703056335, 0.38845595717430115, 0.3959846794605255, 0.4093250632286072, 0.42649585008621216, 0.4245145916938782, 0.4439307749271393, 0.45145952701568604, 0.45872408151626587, 0.4745740294456482, 0.4707436263561249, 0.48646149039268494, 0.4979526996612549, 0.5019152164459229, 0.5177651643753052, 0.5238409638404846, 0.5263505578041077, 0.5354642868041992, 0.5399550795555115, 0.5589750409126282, 0.5527671575546265, 0.5651829242706299, 0.5744287371635437, 0.5783912539482117, 0.5816932916641235, 0.5855237245559692, 0.5974111557006836, 0.5960903167724609, 0.6032228469848633, 0.6085061430931091, 0.6118082404136658, 0.6140536069869995, 0.6243560910224915, 0.6244881749153137, 0.6281865239143372, 0.632941484451294, 0.627129852771759, 0.6337339878082275, 0.6336019039154053, 0.6491876840591431, 0.6449610590934753, 0.6445648074150085, 0.655527651309967, 0.6540747880935669, 0.6608110070228577, 0.6527539491653442, 0.6617355942726135, 0.6707172393798828, 0.6660943031311035, 0.6670188903808594, 0.6651697158813477, 0.6725663542747498, 0.672698438167572, 0.6701889038085938, 0.6778497099876404, 0.6798309087753296, 0.6823405027389526, 0.6870955228805542, 0.6888125538825989, 0.6789063811302185, 0.6890767216682434, 0.6864351034164429, 0.6934354901313782, 0.687887966632843, 0.6911900639533997, 0.6906617283821106, 0.6907938122749329, 0.6979262828826904, 0.6947563290596008, 0.6951525807380676, 0.6973979473114014, 0.7022850513458252, 0.6991150379180908, 0.7022850513458252, 0.7000396251678467, 0.7103421092033386, 0.7071720957756042, 0.7038700580596924, 0.7036058902740479, 0.71100252866745, 0.7033417224884033, 0.7003037929534912, 0.7137762308120728, 0.7077004313468933, 0.7108704447746277, 0.7111346125602722, 0.7137762308120728], "val_loss": [1.9621422631399972, 1.9531771796090263, 1.9440796715872628, 1.934624126979283, 1.924665859767369, 1.9140647479466029, 1.9023705210004533, 1.8893214634486608, 1.8749782017299108, 1.8587071555001395, 1.8403514453342982, 1.8196460178920202, 1.796797411782401, 1.7709664617265974, 1.7421325274876185, 1.7099921022142683, 1.674405642918178, 1.635486330304827, 1.5933360372270857, 1.5488940988268172, 1.5021310533796037, 1.4542981556483678, 1.404778071812221, 1.3561008317129952, 1.3075379644121443, 1.260586942945208, 1.2150118691580636, 1.1722445147378104, 1.1329661437443324, 1.0959597315107072, 1.0623487404414587, 1.031334059579032, 1.0022011825016566, 0.9764499323708671, 0.9532348769051688, 0.9319012846265521, 0.9119872365679059, 0.8930693013327462, 0.8759736674172538, 0.8598395245415824, 0.8452061585017613, 0.8316116843904767, 0.8191654000963483, 0.8073735407420567, 0.7969163996832711, 0.7861428601401192, 0.7764250210353306, 0.7676755019596645, 0.7591532979692731, 0.7512258120945522, 0.7434222017015729, 0.7364648410252163, 0.7295838083539691, 0.7232177938733783, 0.7178139516285488, 0.7118642670767648, 0.705986636025565, 0.700532146862575, 0.6959476811545235, 0.690622363771711, 0.6860643965857369, 0.6817627634320941, 0.677768383707319, 0.6743660313742501, 0.6704361949648175, 0.6667276620864868, 0.6639236552374703, 0.6589899063110352, 0.655493003981454, 0.6528046301433018, 0.6492727313722882, 0.6460407461438861, 0.6441020114081246, 0.6408265488488334, 0.6379198517118182, 0.6350931610379901, 0.6326265335083008, 0.6298826592309135, 0.6276076861790248, 0.6249280486788068, 0.6225201913288662, 0.6202950647899083, 0.6182354348046439, 0.6154802697045463, 0.6131380115236554, 0.6109349046434674, 0.6093984501702445, 0.6074853454317365, 0.6055242334093366, 0.6038739681243896, 0.6012669972011021, 0.5996061563491821, 0.5977916036333356, 0.596082329750061, 0.5944432531084333, 0.5927339451653617, 0.5910229682922363, 0.5892807926450457, 0.5875191688537598, 0.5857611043112618], "val_accuracy": [0.09566666930913925, 0.17666666209697723, 0.2549999952316284, 0.3230000138282776, 0.35766667127609253, 0.37599998712539673, 0.39366665482521057, 0.40933331847190857, 0.4313333332538605, 0.44200000166893005, 0.4566666781902313, 0.46700000762939453, 0.48399999737739563, 0.4983333349227905, 0.5063333511352539, 0.5260000228881836, 0.5360000133514404, 0.5440000295639038, 0.5503333210945129, 0.5606666803359985, 0.5680000185966492, 0.5763333439826965, 0.5836666822433472, 0.5896666646003723, 0.593999981880188, 0.6003333330154419, 0.606333315372467, 0.6169999837875366, 0.6290000081062317, 0.6366666555404663, 0.6460000276565552, 0.6486666798591614, 0.6566666960716248, 0.6623333096504211, 0.6639999747276306, 0.6673333048820496, 0.671999990940094, 0.671999990940094, 0.6740000247955322, 0.6796666383743286, 0.6840000152587891, 0.6859999895095825, 0.6880000233650208, 0.6913333535194397, 0.6919999718666077, 0.6949999928474426, 0.6933333277702332, 0.6973333358764648, 0.6973333358764648, 0.6990000009536743, 0.7006666660308838, 0.7049999833106995, 0.7066666483879089, 0.7059999704360962, 0.7083333134651184, 0.7096666693687439, 0.7089999914169312, 0.7129999995231628, 0.7153333425521851, 0.715666651725769, 0.7183333039283752, 0.721666693687439, 0.7226666808128357, 0.7203333377838135, 0.7236666679382324, 0.7256666421890259, 0.721666693687439, 0.7266666889190674, 0.7260000109672546, 0.7303333282470703, 0.7276666760444641, 0.7316666841506958, 0.7289999723434448, 0.731333315372467, 0.7319999933242798, 0.7353333234786987, 0.7350000143051147, 0.7360000014305115, 0.7353333234786987, 0.7353333234786987, 0.7363333106040955, 0.7369999885559082, 0.7366666793823242, 0.7390000224113464, 0.7390000224113464, 0.7396666407585144, 0.7400000095367432, 0.7413333058357239, 0.7406666874885559, 0.7423333525657654, 0.7419999837875366, 0.7423333525657654, 0.7426666617393494, 0.7450000047683716, 0.7446666955947876, 0.7443333268165588, 0.7453333139419556, 0.7450000047683716, 0.7463333606719971, 0.7456666827201843]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [6, 8, 6, 0, 2, 5, 1, 2, 2, 0, 8, 9], [3, 4, 3, 3, 0, 2, 2, 4, 2, 0], [45, 62, 0, 81, 53, 45], [0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.41028571128845215, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1582092539729727, 1.9903296206400867, 1.4489418375588143, 1.1506290009402484, 1.0526713880691483, 2.2662275199325816, 2.214776865637077, 3.4549248510143302, 2.439940278335821], "accuracy": [0.28939375281333923, 0.313300758600235, 0.4986131191253662, 0.5805045366287231, 0.6147140264511108, 0.4241183400154114, 0.3199048936367035, 0.12996962666511536, 0.09972262382507324], "val_loss": [1.9328013828822546, 1.0162381785256522, 0.8325214045388358, 0.7543011392865863, 0.6828319004603794, 1.3555756637028284, 2.073643548148019, 2.088928290775844, 2.068554605756487], "val_accuracy": [0.2669999897480011, 0.5676666498184204, 0.621999979019165, 0.6883333325386047, 0.6496666669845581, 0.4480000138282776, 0.14666666090488434, 0.10366666316986084, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [6, 8, 6, 0, 2, 5, 1, 2, 2, 0, 8, 9], [3, 5, 0, 3, 0, 2, 2, 4, 2, 0], [45, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.2605714201927185, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1582136538365355, 1.967730194554589, 1.2357967740682296, 1.2503971419298512, 1.1041107431866977, 520.2453050478622, NaN, NaN, NaN], "accuracy": [0.28939375281333923, 0.31382909417152405, 0.5523709058761597, 0.5696737766265869, 0.5919957756996155, 0.22691850364208221, 0.10645885765552521, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9330791745867049, 1.1485283715384347, 1.1066185065678187, 0.7473830836159843, 0.9328473295484271, 4133.277413504465, NaN, NaN, NaN], "val_accuracy": [0.26499998569488525, 0.49900001287460327, 0.5536666512489319, 0.668666660785675, 0.6066666841506958, 0.050333332270383835, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1], [8, 2, 2, 4, 1, 5, 1, 3, 6, 0, 2, 9, 0, 9, 8, 6, 7], [3, 3, 3, 3, 0, 2, 2, 4, 2, 0], [45, 62, 0, 81, 53, 45], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.24542857706546783, "mapping_values": [1, 1, 1, 0, 1, 0, 18, 18, 10, 8, 1, 3, 2, 2, 0, 0, 2, 1, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.subtract(tf.math.square(tf.math.subtract(tf.math.add(beta, grad), tf.math.multiply(grad, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.negative(beta))), tf.math.add(beta, beta))))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.5096138462083784, 2.278424042783724, 2.30536962046741, 2.303616505383406, 2.3027630041556004, 2.293843068844764, 2.2666722865955564, 2.3036565209077478, 2.303145784916674, 2.3028268398090423, 2.3028162899994817], "accuracy": [0.18663319945335388, 0.13868708908557892, 0.09628847241401672, 0.10381719470024109, 0.09708096832036972, 0.1356491893529892, 0.15414080023765564, 0.09945846349000931, 0.09813763201236725, 0.10487385839223862, 0.10077928751707077], "val_loss": [1.977875028337751, 1.9773242133004325, 1.9740636689322335, 1.9733914647783553, 1.972193649836949, 1.8819390024457658, 1.97479282106672, 1.97383029120309, 1.9736687796456474, 1.973625728062221, 1.9736401694161552], "val_accuracy": [0.1080000028014183, 0.09966666996479034, 0.09966666996479034, 0.09733333438634872, 0.10366666316986084, 0.24933333694934845, 0.09933333098888397, 0.09799999743700027, 0.10000000149011612, 0.10000000149011612, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [8, 2, 2, 4, 1, 5, 1, 3, 6, 0, 2, 9, 0, 9, 8, 6, 7], [1, 3, 3, 3, 0, 2, 2, 4, 2, 0], [45, 62, 0, 81, 53, 45], [1, 0, 1, 1, 0, 1], [1, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 9, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 2, 2, 0, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [96277542.74448566, 1845499802.4250429, 8545827738.560296, 23479917821.328754, 50303161967.92181, 92761051130.04887], "accuracy": [0.08809932321310043, 0.1002509593963623, 0.09576013684272766, 0.10157178342342377, 0.09932637959718704, 0.1018359512090683], "val_loss": [368101211.4285714, 2942741211.428571, 9929427529.142857, 23533703168.0, 45960715117.71429, 79416751835.42857], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 8, 6, 4, 2, 8, 1, 6, 6, 0, 8, 9], [3, 1, 0, 2, 0, 2, 2, 4, 2, 0], [52, 47, 0, 81, 53, 45], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 2, 3, 2, 2, 0, 0, 5, 2, 3, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, alpha))))), tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(beta, beta), tf.math.divide_no_nan(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0738343670964241, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 5, 1, 2, 6, 2, 1, 3, 6, 5, 8, 9], [3, 3, 1, 3, 0, 2, 0, 1, 3, 0], [52, 47, 0, 81, 53, 45], [0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1], [9, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3, 2], [26, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 20, 20, 11, 9, 2, 1, 1, 1, 0, 1, 14, 7, 7, 2], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.multiply(alpha, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, beta))), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))))))))), tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.negative(alpha), tf.math.pow(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, sigma), sigma))), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0], [1, 2, 2, 4, 1, 5, 1, 3, 6, 0, 2, 9, 0, 9, 8, 6, 7], [3, 3, 3, 3, 0, 2, 2, 4, 2, 0], [45, 62, 0, 81, 53, 45], [0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [0, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 12, 9, 2, 1, 1, 0, 1, 1, 8, 4, 4, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.subtract(tf.math.square(tf.math.add(beta, grad)), tf.math.subtract(grad, tf.math.multiply(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)))), tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.add(beta, grad)))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(beta, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [2.3028574024823207, 2.3024821356696665, 2.3024945311684255, 2.3025120959195635, 2.3024942465210163, 2.302526028652894], "accuracy": [0.1018359512090683, 0.10659094154834747, 0.10685510188341141, 0.1014397069811821, 0.10474177449941635, 0.10632677376270294], "val_loss": [1.9736315182277135, 1.97363247190203, 1.9736312457493372, 1.9736433029174805, 1.973649365561349, 1.973651681627546], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10199999809265137, 0.09799999743700027, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [6, 8, 6, 0, 8, 5, 1, 2, 2, 0, 8, 9], [3, 3, 3, 3, 0, 2, 2, 4, 2, 0], [45, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [4, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 9, 9, 6, 3, 0, 1, 0, 0, 0, 0, 8, 4, 4, 2], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.negative(tf.math.sqrt(tf.math.square(tf.math.add(beta, grad)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [1, 6, 2, 4, 1, 5, 1, 3, 6, 0, 2, 9, 0, 9, 8, 6, 7], [3, 3, 3, 3, 0, 2, 2, 4, 2, 0], [45, 62, 0, 81, 53, 45], [0, 0, 1, 1, 0, 1], [1, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 1, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, alpha))", "other_info": {"loss": [2.3046457289137843, 2.3048408210332667, 2.3051372363881946, 2.308054303795418, 2.3114602162365303, 2.3164345000980866, 2.321432574833578, 2.326320006059791, 2.3333404924828285, 2.347126019298597, 2.390485575674327, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08334434032440186, 0.08625016361474991, 0.08849557489156723, 0.07858935743570328, 0.08374059200286865, 0.07766477018594742, 0.07713644206523895, 0.07158895581960678, 0.07687227427959442, 0.0750231146812439, 0.08228767663240433, 0.09866596013307571, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.972292423248291, 1.9737016814095634, 1.9750768797738212, 1.9769369534083776, 1.9789992741176061, 1.9815477643694197, 1.9847190039498466, 1.9888989584786552, 1.9956489971705846, 2.0107289041791643, 2.11871760232108, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.032999999821186066, 0.028333334252238274, 0.026000000536441803, 0.024666666984558105, 0.028999999165534973, 0.03700000047683716, 0.04833333194255829, 0.06733333319425583, 0.08799999952316284, 0.09933333098888397, 0.09933333098888397, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [6, 6, 6, 0, 8, 5, 1, 2, 2, 0, 8, 9], [3, 3, 3, 3, 0, 2, 2, 4, 2, 0], [45, 62, 0, 81, 53, 45], [0, 0, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1], [9, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [0, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [53075358.12726205, 1017100370.3352265, 4709437271.948223, 12938870293.84335, 27719572184.47233, 51115328990.38965], "accuracy": [0.08809932321310043, 0.1002509593963623, 0.09576013684272766, 0.10157178342342377, 0.09932637959718704, 0.1018359512090683], "val_loss": [202891012.57142857, 1621735021.7142856, 5471795638.857142, 12968371053.714285, 25326704347.42857, 43761776347.42857], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 3, 1, 2, 6, 2, 1, 3, 0, 5, 8, 9], [3, 3, 1, 3, 0, 2, 0, 1, 1, 0], [45, 62, 0, 81, 53, 45], [0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [2, 0, 0, 1, 3, 3], [0, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.437798778410239, 5.779265962146481, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.17461365461349487, 0.13815876841545105, 0.10355303436517715, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.4876411301749095, 86.08260672433036, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.1003333330154419, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [8, 2, 2, 4, 1, 5, 1, 3, 6, 0, 2, 9, 0, 9, 8, 6, 7], [1, 3, 3, 3, 0, 2, 2, 4, 2, 0], [45, 62, 0, 81, 53, 45], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [5, 8, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 2, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [3.018112767652836e+24, 7.784564237301108, 14.965916791187064, 22.155534400884516, 29.36041952265945, 36.55863281247984], "accuracy": [0.08836349099874496, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4.198221342904227, 10.289028440202985, 16.45484869820731, 22.635574340820312, 28.809825352260045, 34.984667096819194], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 1, 2, 6, 2, 1, 2, 0, 5, 8, 9], [3, 3, 3, 3, 0, 2, 2, 4, 2, 0], [52, 47, 0, 81, 53, 45], [0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [5, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [11, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 18, 18, 9, 9, 1, 2, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(grad, grad))), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta)), tf.math.add(beta, beta)))), grad)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(alpha, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3040337544926057, 2.302765106024318, 2.301117135580615, 2.3018573302917824, 2.3025843846468863, 2.3036392345058134], "accuracy": [0.08387266844511032, 0.09087307006120682, 0.0940430611371994, 0.08928807079792023, 0.09219389408826828, 0.09060890227556229], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712322098868233, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [6, 8, 6, 0, 8, 5, 1, 2, 2, 0, 8, 9], [3, 3, 3, 3, 0, 2, 2, 4, 2, 0], [45, 62, 0, 81, 53, 45], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [5, 2, 0, 4, 2, 1, 2, 3], [3, 0, 0, 1, 3, 3], [91, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 3, 2, 2, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3040337544926057, 2.302765137515347, 2.301117135580615, 2.3018573302917824, 2.3025844026282636, 2.3036392345058134], "accuracy": [0.08387266844511032, 0.09087307006120682, 0.0940430611371994, 0.08928807079792023, 0.09219389408826828, 0.09060890227556229], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]