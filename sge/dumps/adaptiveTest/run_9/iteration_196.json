[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [2, 2, 2, 0, 1, 5, 1, 3, 2, 0, 2, 9, 0, 6, 8, 6], [3, 3, 3, 1, 0, 2, 2, 4, 2, 2], [52, 47, 0, 81, 53, 45], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.8299999833106995, "mapping_values": [1, 1, 1, 0, 1, 0, 23, 23, 14, 9, 2, 3, 3, 2, 1, 0, 4, 2, 2, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(grad, tf.math.negative(grad))), alpha))), tf.math.add(beta, tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(beta, beta)))), tf.math.add(beta, grad))), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2484702280153135, 1.7379808671218435, 1.7895845589368824, 1.2034487876090958, 1.1050499024770326, 0.868165804504986, 0.801726564188297, 0.7668716815075051, 0.7146784308139028, 0.6999928260507711, 0.655715064845931, 0.6306910909492861, 0.6300255821885182, 0.588830962322486, 0.5775084058370226, 0.5445215783225011, 0.5557700903534402, 0.5316546397942279, 0.5542205132592262, 0.5287677164736551, 0.5264585500246246, 0.5187967816175109, 0.4777239964441648, 0.498376880815835, 0.47680254719276566, 0.525811128581063, 0.46118548849806446, 0.44633645675815625, 0.4405115650566483, 0.4238143020562051, 0.48335765714123263, 0.42916684725170895, 0.40714747892583697, 0.41011154058035953, 0.3884104641673272, 0.4095063835496617, 0.3689129687555399, 0.3881953189858293, 0.38419550906051464, 0.37321911161176724, 0.3873898539017567], "accuracy": [0.25980716943740845, 0.4691586196422577, 0.41408005356788635, 0.5736362338066101, 0.6110157370567322, 0.6777176260948181, 0.6940959095954895, 0.7040021419525146, 0.7255316376686096, 0.7339849472045898, 0.7493065595626831, 0.7626469135284424, 0.7576277852058411, 0.7790252566337585, 0.7815347909927368, 0.7971205711364746, 0.7901201844215393, 0.8043851256370544, 0.7902522683143616, 0.8053097128868103, 0.8031964302062988, 0.8061022162437439, 0.8236692547798157, 0.8157442808151245, 0.8169330358505249, 0.802800178527832, 0.8280280232429504, 0.8380662798881531, 0.8381983637809753, 0.8441421389579773, 0.8170651197433472, 0.842028796672821, 0.850350022315979, 0.8477083444595337, 0.8578787446022034, 0.8495575189590454, 0.8634262084960938, 0.8527275323867798, 0.860652506351471, 0.8595958352088928, 0.8506141901016235], "val_loss": [1.6172099794660295, 1.9262807709830148, 1.365123953138079, 1.0223065784999303, 0.6685855048043388, 0.6499919210161481, 0.630596399307251, 0.550846917288644, 0.5942019905362811, 0.5189925602504185, 0.4975453274590628, 0.5118181194577899, 0.4816610302243914, 0.46881587164742605, 0.4686307225908552, 0.444095288004194, 0.4264411670821054, 0.5556984118052891, 0.46285888126918245, 0.423693801675524, 0.48330092430114746, 0.4084760972431728, 0.4317564538546971, 0.41252171993255615, 0.496776819229126, 0.4059902940477644, 0.4413706064224243, 0.37332271678107126, 0.37060678005218506, 0.4215001549039568, 0.3560077462877546, 0.3538620557103838, 0.37115512575422016, 0.36837109497615267, 0.3540524329457964, 0.3444218124662127, 0.34846135548182894, 0.3713529706001282, 0.35542318650654386, 0.372747540473938, 0.3409360136304583], "val_accuracy": [0.5770000219345093, 0.3136666715145111, 0.3889999985694885, 0.5663333535194397, 0.7086666822433472, 0.7046666741371155, 0.7170000076293945, 0.7556666731834412, 0.7446666955947876, 0.7573333382606506, 0.7866666913032532, 0.7606666684150696, 0.7886666655540466, 0.7763333320617676, 0.7883333563804626, 0.8019999861717224, 0.8196666836738586, 0.7549999952316284, 0.7963333129882812, 0.8159999847412109, 0.7743333578109741, 0.8226666450500488, 0.8166666626930237, 0.8196666836738586, 0.7760000228881836, 0.8270000219345093, 0.8029999732971191, 0.8366666436195374, 0.8370000123977661, 0.8143333196640015, 0.8483333587646484, 0.8383333086967468, 0.8383333086967468, 0.8356666564941406, 0.8473333120346069, 0.8553333282470703, 0.8479999899864197, 0.8349999785423279, 0.8533333539962769, 0.82833331823349, 0.8453333377838135]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0], [5, 8, 8, 0, 6, 5, 1, 2, 2, 0, 8, 9], [3, 1, 3, 1, 0, 2, 2], [57, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.826285719871521, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.248435194907077, 1.735511762055707, 1.7363774029648993, 1.1924021838914607, 1.0805873094123384, 0.8976825521905833, 0.8340865439900066, 0.7696615004693795, 0.7224500793995654, 0.7050470196339496, 0.653705197027126, 0.6350485703350295, 0.6090087310087884, 0.6229475094830875, 0.5772884150915583, 0.5890399155095899, 0.569021682264688, 0.5617070606025361, 0.5273785487362548, 0.523193977008548, 0.5129257662500042, 0.5068068246658153, 0.5028448690827717, 0.46842139678671535, 0.4803103216296536, 0.4734254340847737, 0.4645642280547122, 0.4617895767468629], "accuracy": [0.2596750855445862, 0.46889445185661316, 0.4208162724971771, 0.5864483118057251, 0.6071853041648865, 0.669792652130127, 0.6851142644882202, 0.7127195596694946, 0.7234182953834534, 0.7366266250610352, 0.7508915662765503, 0.7544577717781067, 0.7697794437408447, 0.7664773464202881, 0.7847048044204712, 0.7761194109916687, 0.7852331399917603, 0.7913089394569397, 0.8057059645652771, 0.8055738806724548, 0.8042530417442322, 0.8112534880638123, 0.8108572363853455, 0.8251221776008606, 0.8214238286018372, 0.822348415851593, 0.8278959393501282, 0.8360850811004639], "val_loss": [1.6170389652252197, 1.919788224356515, 0.8700258391244071, 0.8825473785400391, 0.7750061580113002, 0.7593112673078265, 0.5820255279541016, 0.5607167993273053, 0.6045030014855521, 0.512954865183149, 0.5245692900248936, 0.4783475399017334, 0.5222034965242658, 0.46795250688280376, 0.47693761757441927, 0.44379065717969624, 0.44330293791634695, 0.43150356837681364, 0.45066031387874056, 0.4697807346071516, 0.4392235449382237, 0.4421816723687308, 0.391065742288317, 0.3919105444635664, 0.3973402295793806, 0.40340906381607056, 0.4652635540281023, 0.37740362542016165], "val_accuracy": [0.5766666531562805, 0.34166666865348816, 0.6539999842643738, 0.6650000214576721, 0.6826666593551636, 0.684333324432373, 0.7329999804496765, 0.7413333058357239, 0.7540000081062317, 0.7666666507720947, 0.7549999952316284, 0.7893333435058594, 0.7726666927337646, 0.7953333258628845, 0.7739999890327454, 0.8083333373069763, 0.8086666464805603, 0.8183333277702332, 0.8019999861717224, 0.7733333110809326, 0.8146666884422302, 0.8133333325386047, 0.8370000123977661, 0.8339999914169312, 0.8299999833106995, 0.8330000042915344, 0.7833333611488342, 0.831333339214325]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1], [4, 3, 2, 2, 6, 8, 1, 3, 2, 0, 8, 9], [3, 1, 3, 1, 0, 2, 2, 2, 2], [3, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.8174285888671875, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 8, 8, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad)), tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.sqrt(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.multiply(beta, tf.math.add(beta, beta)), beta))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2484189798299425, 1.6971495416359328, 1.3702136954894675, 1.1555971753847614, 0.9516238550137787, 0.8526894784228771, 0.8310592550139275, 0.7594976830145529, 0.7264102781374756, 0.6832173353787095, 0.6847880836632809, 0.6342592969971751, 0.6166193856460512, 0.603736583645853, 0.5857533916285829, 0.5657089560605972, 0.5735057507917283, 0.5620238479606197, 0.5688720526964185, 0.5367282795600604, 0.5318212666925328, 0.5330180039243329, 0.48981669629412145, 0.5102712369913028, 0.4796098071420985, 0.492414539327333, 0.46069418255049305, 0.46890792128211867, 0.44607336641838047, 0.4477611540126259, 0.4551617582444864, 0.4395999629869752, 0.4241733343263328, 0.4120231869237739, 0.3965531140821737, 0.4170999292605557, 0.4089517884045985, 0.39536031525620946, 0.3837774878818251, 0.38325624973105404, 0.40968959843005487], "accuracy": [0.2592788338661194, 0.471800297498703, 0.5408796668052673, 0.5860520601272583, 0.6445648074150085, 0.6765288710594177, 0.6845859289169312, 0.7086250185966492, 0.7217012047767639, 0.7347774505615234, 0.7372870445251465, 0.7619865536689758, 0.7638356685638428, 0.7691190242767334, 0.7779685854911804, 0.7905164361000061, 0.7799497842788696, 0.7857614755630493, 0.7839123010635376, 0.7965922355651855, 0.802271842956543, 0.802271842956543, 0.8208954930305481, 0.8098005652427673, 0.8165367841720581, 0.8131026029586792, 0.8337075710296631, 0.8293488025665283, 0.8348963260650635, 0.8348963260650635, 0.8315942287445068, 0.8388587832450867, 0.8422929644584656, 0.8502179384231567, 0.8531237840652466, 0.8465195894241333, 0.843481719493866, 0.8562937378883362, 0.8585391640663147, 0.8564258217811584, 0.8441421389579773], "val_loss": [1.6170964241027832, 1.3590188707624162, 0.9588380200522286, 0.7706168038504464, 0.7036568437303815, 0.7772776229040963, 0.5804784979139056, 0.5643671580723354, 0.5531440802982875, 0.5828045776912144, 0.5404742615563529, 0.4894367456436157, 0.5914104325430733, 0.4817394699369158, 0.4685170650482178, 0.4658523457390921, 0.45056354999542236, 0.5222671713147845, 0.44060468673706055, 0.4709341015134539, 0.43236207962036133, 0.4269876650401524, 0.43363567761012484, 0.40876972675323486, 0.4123851146016802, 0.41413638421467375, 0.4389862503324236, 0.3697671890258789, 0.37959385769707815, 0.37654965264456614, 0.37403982877731323, 0.3618500828742981, 0.37358014072690693, 0.4072619846888951, 0.35176232031413485, 0.34329440764018465, 0.3788535850388663, 0.3926352432795933, 0.3872118081365313, 0.3927678976740156, 0.3446303265435355], "val_accuracy": [0.5756666660308838, 0.5633333325386047, 0.5926666855812073, 0.6783333420753479, 0.6620000004768372, 0.6489999890327454, 0.7360000014305115, 0.7490000128746033, 0.7379999756813049, 0.7136666774749756, 0.7383333444595337, 0.7829999923706055, 0.7300000190734863, 0.7863333225250244, 0.7876666784286499, 0.7933333516120911, 0.7996666431427002, 0.7753333449363708, 0.8046666383743286, 0.765333354473114, 0.8190000057220459, 0.8080000281333923, 0.8053333163261414, 0.8256666660308838, 0.8213333487510681, 0.8289999961853027, 0.8063333630561829, 0.8413333296775818, 0.8356666564941406, 0.8426666855812073, 0.840666651725769, 0.8396666646003723, 0.8389999866485596, 0.8153333067893982, 0.8473333120346069, 0.8519999980926514, 0.8320000171661377, 0.8259999752044678, 0.8326666951179504, 0.8223333358764648, 0.8456666469573975]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1], [5, 8, 8, 0, 6, 5, 1, 2, 2, 0, 8, 9], [3, 1, 3, 1, 0, 2, 2], [3, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.4097142815589905, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.158726932822658, 3.207835975151178, 2.4418456898924696, 2.321197868102042, 2.317453390823584, 2.315136588024441], "accuracy": [0.2946770489215851, 0.16880200803279877, 0.11121384054422379, 0.13974376022815704, 0.1410645842552185, 0.16114120185375214], "val_loss": [1.6551198278154646, 2.074096475328718, 2.0030716487339566, 1.8954779079982214, 1.8835362025669642, 1.8565936769757951], "val_accuracy": [0.3863333463668823, 0.10366666316986084, 0.10100000351667404, 0.19566667079925537, 0.20033332705497742, 0.20533333718776703]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [2, 1, 2, 2, 6, 5, 1, 3, 2, 0, 8, 9], [3, 3, 3, 3, 0, 2, 2, 4, 2], [45, 62, 0, 81, 53, 45], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.3554285764694214, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 7, 7, 1, 3, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(grad, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.square(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(beta, tf.math.add(beta, beta))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.627043114551196, 2.304717086230948, 2.3027603130582426, 2.300199410477964, 2.3397730972316237, 2.305325321659294, 2.3028257817734565, 2.3017263497501363, 2.279085371393837, 2.318522584814642, 2.288188329603946, 2.3035921725803568, 2.303729291353338, 2.3007617625326073], "accuracy": [0.1732928305864334, 0.0944393053650856, 0.09985470771789551, 0.12191256135702133, 0.1916523575782776, 0.10011887550354004, 0.09853387624025345, 0.1072513535618782, 0.18201030790805817, 0.18174614012241364, 0.13234710693359375, 0.10328886657953262, 0.09893012791872025, 0.11636507511138916], "val_loss": [1.9767607961382185, 1.9739485468183244, 1.9726434435163225, 1.965230873652867, 1.981980323791504, 1.9738027027675085, 1.9731546129499162, 1.9710467202322823, 1.7601406914847237, 1.973520006452288, 1.9742694582257951, 1.9736231395176478, 1.9729320662362235, 1.9640049934387207], "val_accuracy": [0.10366666316986084, 0.10000000149011612, 0.10199999809265137, 0.2043333351612091, 0.10199999809265137, 0.09933333098888397, 0.09799999743700027, 0.10433333367109299, 0.34033334255218506, 0.1003333330154419, 0.09799999743700027, 0.10199999809265137, 0.10100000351667404, 0.11699999868869781]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0], [5, 8, 8, 0, 6, 5, 1, 2, 2, 0, 8, 9], [3, 1, 3, 1, 0, 2, 2], [57, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.26342856884002686, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.6272888397102925, 2.3046973782318805, 2.302776994643478, 2.3003032242129144, 2.2382462434701917, 2.254696227650459, 2.325505331034642, 2.3249875757877208, 2.30397357683707], "accuracy": [0.17355699837207794, 0.09694888442754745, 0.09932637959718704, 0.11702549457550049, 0.20235107839107513, 0.16338661313056946, 0.16642451286315918, 0.09734513610601425, 0.09932637959718704], "val_loss": [1.9767576626368932, 1.9738949366978236, 1.9726807730538505, 1.9658936773027693, 1.983977930886405, 1.9101270948137556, 2.0646374566214427, 1.9742381232125419, 1.9737070628574915], "val_accuracy": [0.10366666316986084, 0.10000000149011612, 0.10000000149011612, 0.23999999463558197, 0.13833333551883698, 0.23199999332427979, 0.1003333330154419, 0.09799999743700027, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0], [6, 8, 6, 0, 2, 5, 1, 2, 2, 0, 8, 9], [3, 1, 3, 1, 0, 2, 2], [57, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [75, 57]], "fitness": -0.21171428263187408, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.negative(tf.math.add(tf.math.square(tf.math.add(beta, grad)), tf.math.subtract(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3.596184932922627, 2.3047405186425016, 2.3024361731590077, 2.395559882443768, 2.3030740348119085, 2.266418445033168, 2.304033071231754, 2.302968626938098, 2.303215361479141, 2.3031602061073526], "accuracy": [0.17474573850631714, 0.10315678268671036, 0.09893012791872025, 0.12640337646007538, 0.10566636174917221, 0.15176330506801605, 0.09549596905708313, 0.10210011899471283, 0.09708096832036972, 0.1010434553027153], "val_loss": [1.9766747610909599, 1.9737602642604284, 1.971214771270752, 1.9755634580339705, 1.9630615370614188, 1.975658893585205, 1.9740136691502161, 1.9736221858433314, 1.9735584259033203, 1.9734675543648856], "val_accuracy": [0.1066666692495346, 0.10000000149011612, 0.09966666996479034, 0.09799999743700027, 0.16566666960716248, 0.09799999743700027, 0.09799999743700027, 0.10366666316986084, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [2, 8, 2, 0, 6, 5, 1, 2, 2, 0, 8, 9], [1, 3, 3, 1, 0, 2, 2], [57, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.21142856776714325, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 10, 7, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(alpha, tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, grad)), tf.math.subtract(alpha, tf.math.add(tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.negative(beta))), tf.math.add(beta, beta))))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.62728834926901, 2.304681125743404, 2.302741096854572, 2.300270132778532, 2.2851539036664255, 2.534050245011692, 163.51939953008048, 2.3113799167898086, 2.30479338200274], "accuracy": [0.1736890822649002, 0.09721305221319199, 0.09893012791872025, 0.11874257028102875, 0.16034869849681854, 0.15070664882659912, 0.09972262382507324, 0.10381719470024109, 0.09549596905708313], "val_loss": [1.9767577988760812, 1.973865304674421, 1.9726367677961076, 1.9658656120300293, 1.973282745906285, 2.9899022238595143, 1.988044193812779, 1.9768020766122, 1.9741855348859514], "val_accuracy": [0.10366666316986084, 0.10000000149011612, 0.10000000149011612, 0.19900000095367432, 0.13633333146572113, 0.10366666316986084, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1], [2, 1, 2, 0, 6, 6, 1, 9, 3, 1, 8, 9], [3, 2, 3, 1, 0, 2, 2, 0], [68, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [85, 57]], "fitness": -0.19628570973873138, "mapping_values": [1, 1, 1, 0, 1, 0, 19, 19, 11, 8, 3, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(tf.math.add(beta, beta), tf.math.negative(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.subtract(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.math.subtract(beta, tf.math.add(beta, beta)))))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3.6258508614293334, 2.3047481617041394, 2.3030238143047717, 2.301321977511562, 2.2392447981710335, 2.5352534383688905, 2.309374366816182, 2.303734504031845, 2.3030767271374164, 2.303320320353863], "accuracy": [0.17302866280078888, 0.09470347315073013, 0.09919429570436478, 0.11319508403539658, 0.17778365314006805, 0.19561484456062317, 0.1022322028875351, 0.09496764093637466, 0.10447761416435242, 0.09351472556591034], "val_loss": [1.9767407008579798, 1.9740097182137626, 1.973125730242048, 1.9699397768293108, 1.9617834772382463, 1.9819801875523158, 1.9747027669634138, 1.9738184383937292, 1.9736373765128, 1.9736829485212053], "val_accuracy": [0.10366666316986084, 0.10000000149011612, 0.09966666996479034, 0.11966666579246521, 0.16833333671092987, 0.09933333098888397, 0.10000000149011612, 0.09933333098888397, 0.10066666454076767, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0], [5, 8, 8, 0, 6, 5, 1, 2, 2, 0, 8, 9], [2, 1, 3, 1, 0, 2, 2], [57, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [10, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 13, 7, 6, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, sigma), sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10236428678035736, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1], [2, 2, 2, 0, 1, 1, 1, 2, 2, 0, 2, 9, 5, 4, 8, 6, 5], [2, 3, 2, 2, 0, 1, 2, 5, 3, 2, 1], [38, 47, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 28, 28, 17, 11, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.add(tf.math.add(beta, beta), tf.math.add(grad, tf.math.negative(beta))), tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.sqrt(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha))))))), beta)))), tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, grad))), tf.math.add(beta, beta))), alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08255184441804886, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [9, 8, 2, 0, 6, 5, 1, 2, 2, 0, 8, 9], [1, 3, 3, 1, 0, 2, 2], [57, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 9, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08255184441804886, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1], [2, 1, 2, 2, 6, 5, 1, 3, 2, 0, 8, 9], [3, 3, 3, 1, 0, 2, 2, 4, 2], [3, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 20, 20, 11, 9, 1, 1, 0, 0, 0, 0, 13, 7, 6, 2], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, grad)), tf.math.subtract(alpha, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))))))))))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, sigma), sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08215559273958206, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1], [9, 8, 2, 0, 6, 5, 1, 2, 2, 0, 8, 9], [3, 3, 3, 1, 0, 2, 2, 4, 2], [3, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 3, 0, 4, 2, 1, 2, 3], [3, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 8, 4, 4, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(sigma, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [2.3023524136040048, 2.302647943431203, 2.3026493632042366, 2.302660898620017, 2.302666871617924, 2.3026634663670147, 2.3026718931773775, 2.3026400891907257, 2.3026652369501095, 2.3026873502969396, 2.302642827965501], "accuracy": [0.09787346422672272, 0.09377889335155487, 0.09325055778026581, 0.09866596013307571, 0.09153348207473755, 0.09166556596755981, 0.09087307006120682, 0.09998679161071777, 0.0944393053650856, 0.09549596905708313, 0.09800554811954498], "val_loss": [1.9736435753958566, 1.9736425536019462, 1.9736441203526087, 1.9736497061593192, 1.9736441203526087, 1.973642008645194, 1.9736460958208357, 1.9736412593296595, 1.973634924207415, 1.9736405100141252, 1.973635128566197], "val_accuracy": [0.09833333641290665, 0.10000000149011612, 0.10000000149011612, 0.1003333330154419, 0.1003333330154419, 0.10366666316986084, 0.09799999743700027, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0], [5, 8, 8, 0, 6, 5, 1, 2, 2, 0, 8, 9], [3, 1, 3, 1, 0, 2, 2], [57, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10236428678035736, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0], [2, 2, 2, 0, 1, 5, 1, 2, 2, 0, 2, 9, 0, 4, 8, 6], [0, 1, 3, 1, 0, 2, 2], [57, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [46, 57]], "fitness": -0.09771428257226944, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1087049684661836, 1.8265865969226471, 3.1322331376252723, 2.5269385933513893, 2.08010907049397, 1.8963326696139664, 2.0111980909653124, 2.3474074188177503, 2.3550704738892554, 2.344674112553988, 2.3346272134950934], "accuracy": [0.34803855419158936, 0.4225333631038666, 0.17183992266654968, 0.14449875056743622, 0.28120461106300354, 0.3593977093696594, 0.34843480587005615, 0.2859595715999603, 0.12442214041948318, 0.1018359512090683, 0.09998679161071777], "val_loss": [1.7012534141540527, 1.859849316733224, 2.1709489822387695, 1.8386524745396204, 1.3164614949907576, 1.2807175431932722, 1.5459155355181013, 1.7775780132838659, 2.001505102430071, 1.998837607247489, 1.9938694408961706], "val_accuracy": [0.40533334016799927, 0.47699999809265137, 0.15000000596046448, 0.3230000138282776, 0.45133334398269653, 0.4830000102519989, 0.3916666805744171, 0.3619999885559082, 0.10766666382551193, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0], [5, 8, 8, 0, 6, 5, 1, 2, 2, 0, 8, 9], [4, 1, 3, 1, 0, 2, 2], [57, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [5, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [64, 57]], "fitness": -0.06542856991291046, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 13, 7, 6, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(alpha, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, sigma), sigma)))))", "other_info": {"loss": [2.3018780008771276, 2.3014753696515715, 2.3014325829481863, 2.3006536535158006, 2.300004838590278, 2.300129313652211, 2.3004569477645114, 2.3002210725268606, 2.2992892699581113, 2.300590087803458, 2.299466947948046, 2.299473898049595, 2.299607508784949, 2.2999373867590163], "accuracy": [0.09311848133802414, 0.09509972482919693, 0.09245806187391281, 0.09734513610601425, 0.1026284471154213, 0.09774138033390045, 0.09589222073554993, 0.09840179979801178, 0.09734513610601425, 0.1022322028875351, 0.09853387624025345, 0.09694888442754745, 0.1002509593963623, 0.09694888442754745], "val_loss": [1.9706594603402274, 1.970240865434919, 1.9698997906276159, 1.9698612349373954, 1.9698542867388045, 1.9699499266488212, 1.9698540823800224, 1.9697232927594865, 1.9696294239589147, 1.9696390969412667, 1.9697715214320592, 1.9700647762843542, 1.9703641619001115, 1.970667907169887], "val_accuracy": [0.043666668236255646, 0.050333332270383835, 0.05533333495259285, 0.0573333315551281, 0.05900000035762787, 0.05999999865889549, 0.06599999964237213, 0.0716666653752327, 0.07366666942834854, 0.0716666653752327, 0.06966666877269745, 0.06599999964237213, 0.06400000303983688, 0.06333333253860474]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1], [2, 1, 2, 0, 6, 5, 1, 1, 2, 0, 8, 9, 6, 5], [3, 2, 3, 1, 3, 2, 2, 0], [57, 7, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [94, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 22, 22, 14, 8, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, grad)), tf.math.subtract(tf.math.add(beta, alpha), tf.math.subtract(tf.math.add(grad, tf.math.add(beta, tf.math.negative(tf.math.sqrt(tf.math.add(beta, beta))))), tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, beta)), tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.302243889063073, 2.3025310172097493, 2.3031185950585455, 2.302695879295691, 2.302151330788657, 2.3017459302735195], "accuracy": [0.09298639744520187, 0.09192973375320435, 0.09021265059709549, 0.09417514503002167, 0.09457138925790787, 0.09140139818191528], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0], [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [8, 3, 4, 0, 1, 5, 1, 2, 2, 0, 8, 9], [3, 2, 3, 1, 3, 2, 2], [45, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [3, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.302243889063073, 2.3025310172097493, 2.3031185950585455, 2.302695879295691, 2.302151330788657, 2.3017459302735195], "accuracy": [0.09298639744520187, 0.09192973375320435, 0.09021265059709549, 0.09417514503002167, 0.09457138925790787, 0.09140139818191528], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0], [2, 9, 2, 2, 6, 3, 1, 3, 2, 0, 8, 9], [1, 3, 3, 1, 0, 2, 2, 4], [3, 62, 0, 81, 53, 45], [0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [2, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 4, 3, 3, 0, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.sqrt(sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302243889063073, 2.302530985718721, 2.3031185635675167, 2.302695879295691, 2.3021512992976287, 2.301745961764548], "accuracy": [0.09298639744520187, 0.09192973375320435, 0.09021265059709549, 0.09417514503002167, 0.09457138925790787, 0.09140139818191528], "val_loss": [1.9712321417672294, 1.9712322098868233, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]