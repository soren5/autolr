[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 8, 6, 3, 3, 8, 9, 8, 6, 5, 8, 9], [2, 2, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.8320000171661377, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.481663939628808, 1.9392362296888306, 1.6247979165572122, 1.3130082164883314, 1.1575440169482922, 1.0091501067831312, 0.9049414391247446, 0.9629611646447278, 0.8093652739548145, 0.7537779370397861, 0.746249837921658, 0.717289637336799, 0.6730656560149726, 0.6473777029791749, 0.6550475043265449, 0.6015813920035291, 0.6345980119680007, 0.582817724312868, 0.5583867001228046, 0.5756611392057457, 0.5598799973163371, 0.5405909609344295, 0.5463829881337813, 0.5143674324453468, 0.5238680667479465, 0.5282811318028321, 0.48814008459438973, 0.4932251251597273, 0.489763936771614, 0.4537621311043326, 0.46505227174032726, 0.44810109783031404, 0.4491120476480866, 0.4451792057258672, 0.41886205894284795, 0.4473711522169369, 0.41421103227517986, 0.413358833787936, 0.4151044304439216, 0.40379009326262294, 0.39637009225753256, 0.39167877210995716, 0.3887484028016288, 0.389649594071015, 0.39261252441820044], "accuracy": [0.24144762754440308, 0.32624489068984985, 0.46968695521354675, 0.5176330804824829, 0.5653150081634521, 0.6165632009506226, 0.6462818384170532, 0.6468101739883423, 0.6857746839523315, 0.7074362635612488, 0.7079645991325378, 0.7252674698829651, 0.7357020378112793, 0.7494386434555054, 0.7471932172775269, 0.765949010848999, 0.7585523724555969, 0.7802139520645142, 0.7868181467056274, 0.7766477465629578, 0.7864218950271606, 0.7952714562416077, 0.7886672616004944, 0.8076872229576111, 0.8020076751708984, 0.8080834746360779, 0.8152159452438354, 0.8212917447090149, 0.8185180425643921, 0.8265751004219055, 0.8284242749214172, 0.8372738361358643, 0.8367455005645752, 0.83119797706604, 0.8442742228507996, 0.8359529972076416, 0.8474441766738892, 0.846387505531311, 0.8411042094230652, 0.8442742228507996, 0.8502179384231567, 0.854708731174469, 0.8573504090309143, 0.8568220734596252, 0.8578787446022034], "val_loss": [1.7780139105660575, 1.784928458077567, 1.0019819395882743, 0.8754654611860003, 0.8751650878361293, 0.7501719338553292, 0.8715841770172119, 0.6357056072780064, 0.5863737719399589, 0.6065474067415509, 0.5782665014266968, 0.57400039264134, 0.5142033100128174, 0.5609947953905378, 0.52579665184021, 0.496255738394601, 0.46665024757385254, 0.4920057398932321, 0.4835712398801531, 0.4544001306806292, 0.42696285247802734, 0.45130588327135357, 0.42709953444344656, 0.4347832032612392, 0.44012634243283955, 0.4231603060449873, 0.42828246525355745, 0.3940224051475525, 0.4152740410396031, 0.3815161500658308, 0.37902967418943134, 0.3734836663518633, 0.3985160504068647, 0.38736442157200407, 0.4130471774509975, 0.39575527395520893, 0.368063143321446, 0.3602978161403111, 0.37689163855143953, 0.35303416422435213, 0.3753601057188852, 0.3904644846916199, 0.38378632068634033, 0.37644942317690167, 0.3646255135536194], "val_accuracy": [0.3556666672229767, 0.367333322763443, 0.5286666750907898, 0.593999981880188, 0.6150000095367432, 0.6516666412353516, 0.6200000047683716, 0.7173333168029785, 0.7256666421890259, 0.7276666760444641, 0.7256666421890259, 0.7293333411216736, 0.7590000033378601, 0.7403333187103271, 0.7580000162124634, 0.7616666555404663, 0.7946666479110718, 0.7643333077430725, 0.7853333353996277, 0.7913333177566528, 0.8100000023841858, 0.7983333468437195, 0.8176666498184204, 0.8080000281333923, 0.8149999976158142, 0.800000011920929, 0.8056666851043701, 0.8259999752044678, 0.8086666464805603, 0.8370000123977661, 0.824999988079071, 0.8396666646003723, 0.8209999799728394, 0.8203333616256714, 0.8133333325386047, 0.8186666369438171, 0.8453333377838135, 0.8349999785423279, 0.8370000123977661, 0.8483333587646484, 0.8336666822433472, 0.8316666483879089, 0.8346666693687439, 0.846666693687439, 0.8413333296775818]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 5, 5, 1, 8, 6, 5, 8, 9], [1, 3, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.8282856941223145, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.square(grad)), grad))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.481646092182704, 1.8769373798319975, 1.7536110173851318, 1.3423848222543093, 1.1891631901838902, 0.9852512477017696, 0.8758398812476277, 0.8948186699661675, 0.7973182193985107, 0.7324923466319784, 0.7156882105549455, 0.7181046720052423, 0.6580411535464478, 0.6334856043496797, 0.6242290646912415, 0.6067012616624733, 0.6051010790439314, 0.5840614643535909, 0.5689202781838985, 0.5499275023312759, 0.5438686616117487, 0.5391310851933887, 0.5392988678596874, 0.502238701823806, 0.5276603522459435, 0.5022690633048377, 0.4983973544326677, 0.4831259222731945, 0.48642382899201103, 0.4630780216055996, 0.45984727552837434, 0.44553596463894346, 0.4553631659449052, 0.4477085464776326, 0.43676477790335466], "accuracy": [0.24144762754440308, 0.35001981258392334, 0.3949280083179474, 0.5087835192680359, 0.551050066947937, 0.6313564777374268, 0.6630563735961914, 0.6584334969520569, 0.6914542317390442, 0.7238145470619202, 0.7185312509536743, 0.7314753532409668, 0.7478536367416382, 0.7560427784919739, 0.7582882046699524, 0.7677981853485107, 0.7705719470977783, 0.7799497842788696, 0.7862898111343384, 0.7913089394569397, 0.7918372750282288, 0.8005547523498535, 0.7907806038856506, 0.811649739742279, 0.8024039268493652, 0.8165367841720581, 0.8107251524925232, 0.8207634687423706, 0.8214238286018372, 0.8286884427070618, 0.830669641494751, 0.8313300609588623, 0.8293488025665283, 0.830669641494751, 0.8388587832450867], "val_loss": [1.777981894356864, 1.6129557405199324, 1.2131922245025635, 1.1564711502620153, 0.7580678633281163, 0.7780719144003732, 0.7849521636962891, 0.6466780730656215, 0.5651509250913348, 0.5514553785324097, 0.558026807648795, 0.56025573185512, 0.502662215914045, 0.5499532393046788, 0.5306584664753505, 0.528370703969683, 0.44965074743543354, 0.4609478030885969, 0.45646345615386963, 0.43753327642168316, 0.43577826023101807, 0.4682236228670393, 0.40914264747074675, 0.43066868611744474, 0.42362322977610994, 0.42475054945264545, 0.40530688422066824, 0.39514302355902536, 0.4158937335014343, 0.3739371384893145, 0.37570675781794954, 0.41086363792419434, 0.3975214106695993, 0.41485399859292166, 0.4189409017562866], "val_accuracy": [0.3553333282470703, 0.3230000138282776, 0.4659999907016754, 0.5143333077430725, 0.6546666622161865, 0.6826666593551636, 0.643666684627533, 0.6993333101272583, 0.7400000095367432, 0.753333330154419, 0.737666666507721, 0.734666645526886, 0.7680000066757202, 0.7490000128746033, 0.7566666603088379, 0.7516666650772095, 0.8050000071525574, 0.7853333353996277, 0.7993333339691162, 0.8106666803359985, 0.8036666512489319, 0.7826666831970215, 0.8199999928474426, 0.8073333501815796, 0.8159999847412109, 0.8066666722297668, 0.8230000138282776, 0.8286666870117188, 0.8059999942779541, 0.840666651725769, 0.8336666822433472, 0.8180000185966492, 0.8256666660308838, 0.8136666417121887, 0.828000009059906]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 2, 2, 5, 5, 1, 8, 6, 5, 8, 9], [4, 3, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.8214285969734192, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 0, 3, 2, 1, 1, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.square(grad)), tf.math.add(beta, grad)))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.481952307262378, 2.04047690123111, 1.8759758012043786, 1.437745460713182, 1.226378601508417, 1.01882536282802, 0.9494100734227369, 0.9669392794476933, 0.8110872629123074, 0.7681604782036976, 0.7172019652182856, 0.7122445086352089, 0.6791529859754593, 0.6451430427887972, 0.6603530530664411, 0.6030189814647553, 0.6216397799631198, 0.5944440349328315, 0.5782406472684275, 0.5641859634645926, 0.5563597392569821, 0.5543287696697929, 0.5621893773414612, 0.5200639835611358, 0.5600352045323288, 0.4975169515880564, 0.502972504182845, 0.4916984003768889, 0.485927021687671, 0.4764040499638258, 0.47529764390577495, 0.4603740253256076, 0.4593764417962848, 0.44863296177062567, 0.4377610398722898, 0.44962074235524513, 0.439471166544996, 0.4321164015246074, 0.44650217081813637, 0.4040697284496503, 0.4174607906752826, 0.4005211675644173], "accuracy": [0.2417117953300476, 0.28780874609947205, 0.3855501115322113, 0.4811781942844391, 0.5431250929832458, 0.6152423620223999, 0.6392814517021179, 0.6304318904876709, 0.685510516166687, 0.7063795924186707, 0.7187954187393188, 0.7259278893470764, 0.7326641082763672, 0.7479857206344604, 0.7467969655990601, 0.7703077793121338, 0.7651565074920654, 0.7820631265640259, 0.7784969210624695, 0.7810064554214478, 0.7890635132789612, 0.7932901978492737, 0.7847048044204712, 0.8029322624206543, 0.7906485199928284, 0.8145555257797241, 0.8078193068504333, 0.8240655064582825, 0.819970965385437, 0.817989706993103, 0.8204993009567261, 0.8305375576019287, 0.8327829837799072, 0.8289526104927063, 0.8313300609588623, 0.8400475382804871, 0.833179235458374, 0.8356888294219971, 0.8290846943855286, 0.8492933511734009, 0.8470479249954224, 0.8549728989601135], "val_loss": [1.777956281389509, 1.356724670955113, 1.3135738713400704, 1.0271491663796561, 0.783880387033735, 0.8641564335141864, 0.8199899877820697, 0.6276188748223441, 0.5990299327032906, 0.5773412670407977, 0.5647843394960675, 0.5872307164328439, 0.49689761229923796, 0.5787989241736275, 0.5284558875220162, 0.5160238572529384, 0.4502358095986502, 0.47115893023354666, 0.4739430121013096, 0.44256811482565744, 0.4283874375479562, 0.4393423540251596, 0.4143162114279611, 0.4445268596921648, 0.41181135177612305, 0.4311977284295218, 0.4056574617113386, 0.4240032945360456, 0.41093696866716656, 0.37942194087164743, 0.38502176318849834, 0.375081513609205, 0.38371589354106356, 0.39623069763183594, 0.43193585532052176, 0.41411175046648296, 0.3785743883677891, 0.36335315874644686, 0.38292521238327026, 0.37231595175606863, 0.37344666038240704, 0.3776580776487078], "val_accuracy": [0.3556666672229767, 0.4009999930858612, 0.49799999594688416, 0.6000000238418579, 0.6696666479110718, 0.5686666369438171, 0.6190000176429749, 0.718666672706604, 0.7173333168029785, 0.7300000190734863, 0.7326666712760925, 0.7129999995231628, 0.7699999809265137, 0.7350000143051147, 0.7543333172798157, 0.7609999775886536, 0.8036666512489319, 0.7820000052452087, 0.7903333306312561, 0.8083333373069763, 0.8143333196640015, 0.7979999780654907, 0.8163333535194397, 0.8040000200271606, 0.8136666417121887, 0.8013333082199097, 0.8169999718666077, 0.8149999976158142, 0.8149999976158142, 0.8349999785423279, 0.8293333053588867, 0.8426666855812073, 0.8303333520889282, 0.8133333325386047, 0.8233333230018616, 0.8106666803359985, 0.843999981880188, 0.8349999785423279, 0.8376666903495789, 0.8346666693687439, 0.840666651725769, 0.8356666564941406]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 5, 5, 1, 8, 6, 5, 8, 9], [4, 3, 3, 5, 2, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.8208571672439575, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.square(grad)), grad))))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.481936075180088, 1.9023766661395707, 1.7246711311748455, 1.5249802040590854, 1.101661746787861, 1.0103092927344486, 0.9442935012209102, 0.8512453390717144, 0.8137219032323624, 0.7459656659165834, 0.7002111592659341, 0.7050736962749091, 0.6603336512231556, 0.6229855542201187, 0.6489475902675276, 0.5999935636226259, 0.6242050158349263, 0.5662779933772366, 0.5480696878586274, 0.5628692771717384, 0.5413731425791967, 0.5434422657993948, 0.5313104613660868, 0.5135779034869389, 0.5108603286650265], "accuracy": [0.2413155436515808, 0.3377360999584198, 0.4375908076763153, 0.4636111557483673, 0.5943732857704163, 0.611411988735199, 0.6452252268791199, 0.6757363677024841, 0.6919825673103333, 0.709549605846405, 0.7256637215614319, 0.7323999404907227, 0.7479857206344604, 0.763967752456665, 0.7500990629196167, 0.7683265209197998, 0.7604015469551086, 0.7880068421363831, 0.791969358921051, 0.7800818681716919, 0.7965922355651855, 0.7996301651000977, 0.7954035401344299, 0.8014793395996094, 0.8079513907432556], "val_loss": [1.77854585647583, 1.6269643987928117, 1.6713275568825858, 0.856367996760777, 0.8015604530061994, 0.914482729775565, 0.7324036870683942, 0.6046508891241891, 0.577747072492327, 0.563627907208034, 0.5289659329823085, 0.5667260033743722, 0.4953902619225638, 0.548457111631121, 0.5145326341901507, 0.5415806770324707, 0.46028508458818707, 0.46779167652130127, 0.45955499580928255, 0.42759885106767925, 0.4190675616264343, 0.4292053409985134, 0.4237409063747951, 0.43086570501327515, 0.4256869213921683], "val_accuracy": [0.35600000619888306, 0.36000001430511475, 0.3323333263397217, 0.6473333239555359, 0.6359999775886536, 0.593666672706604, 0.6836666464805603, 0.7289999723434448, 0.7279999852180481, 0.7383333444595337, 0.753000020980835, 0.7379999756813049, 0.7763333320617676, 0.7463333606719971, 0.7636666893959045, 0.7473333477973938, 0.7929999828338623, 0.7786666750907898, 0.7940000295639038, 0.8153333067893982, 0.8040000200271606, 0.8066666722297668, 0.8100000023841858, 0.8103333115577698, 0.8119999766349792]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 1, 2, 5, 5, 1, 8, 6, 5, 8, 9], [0, 3, 2, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.8180000185966492, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 1, 3, 2, 1, 1, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))), tf.math.add(beta, grad)))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.4820609382114958, 2.074204808984529, 1.7671392493008025, 1.5878277421391258, 1.2052529643413619, 1.1301203489681482, 0.9610956822876382, 0.8757455002803372, 0.8034589838641525, 0.7587776972381209, 0.7111671178285173, 0.7183583520816349, 0.6667998468225595, 0.6285109565935398, 0.6364747460933016, 0.6047166042623267, 0.6195866113971206, 0.5781646717131618, 0.5580689776622387, 0.5503196250320095, 0.5467220039777689, 0.5513570442915813, 0.5496896820895943, 0.5191983586808773, 0.5289697915673839, 0.5086178770666472, 0.49283104872407535, 0.4786141056150666, 0.49984779707145666, 0.4530378901931698, 0.4715456161689859, 0.46495247715814725, 0.45415809692692183, 0.4391938712398185, 0.4305215040729849, 0.4282251171676191, 0.4109771808321765, 0.42513367009751785, 0.4221195509098052, 0.39565488890161793, 0.41205794795345807, 0.3956405015480501, 0.383374829640903], "accuracy": [0.24118345975875854, 0.2662792205810547, 0.41606128215789795, 0.4445911943912506, 0.535332202911377, 0.5769383311271667, 0.6361114978790283, 0.6649055480957031, 0.6880200505256653, 0.7112666964530945, 0.7206445932388306, 0.7309470176696777, 0.7430986762046814, 0.7573636174201965, 0.7578919529914856, 0.7662131786346436, 0.7655527591705322, 0.7823272943496704, 0.7872143983840942, 0.7862898111343384, 0.7947431206703186, 0.7959318161010742, 0.7893276810646057, 0.8000264167785645, 0.8042530417442322, 0.8088759779930115, 0.8125742673873901, 0.8244617581367493, 0.81548011302948, 0.8321225643157959, 0.8211596608161926, 0.8239334225654602, 0.8309338092803955, 0.8381983637809753, 0.8350284099578857, 0.8408400416374207, 0.8514066934585571, 0.8391229510307312, 0.8362171649932861, 0.8512746095657349, 0.8474441766738892, 0.8568220734596252, 0.8541803956031799], "val_loss": [1.7776738575526647, 1.9234325545174735, 1.6859010287693568, 1.0146491868155343, 0.8427043812615531, 0.7470018182482038, 0.824785556112017, 0.6415730203901019, 0.5805003983633858, 0.6007510764258248, 0.5619586195264544, 0.560373204095023, 0.4931635005133493, 0.5544032539640155, 0.4876784937722342, 0.4765347072056362, 0.46004869256700787, 0.479926449911935, 0.46099724088396343, 0.4448638473238264, 0.42425154788153513, 0.43922882420676096, 0.424152135848999, 0.41952392884663176, 0.4225288118634905, 0.42068856954574585, 0.39082350049700054, 0.39201728786740986, 0.43583968707493376, 0.38204916034426006, 0.39807547841753277, 0.39956124339784893, 0.38426806245531353, 0.4020733748163496, 0.3994717597961426, 0.37822587149483816, 0.38213562965393066, 0.35447236469813753, 0.3829824754170009, 0.36729094811848234, 0.3834868584360395, 0.39003061396735056, 0.4104012761797224], "val_accuracy": [0.3556666672229767, 0.1889999955892563, 0.39633333683013916, 0.5609999895095825, 0.621666669845581, 0.653333306312561, 0.6276666522026062, 0.721666693687439, 0.7329999804496765, 0.7223333120346069, 0.7296666502952576, 0.7393333315849304, 0.7689999938011169, 0.7423333525657654, 0.7796666622161865, 0.7796666622161865, 0.7913333177566528, 0.7753333449363708, 0.7879999876022339, 0.8019999861717224, 0.8133333325386047, 0.7993333339691162, 0.8116666674613953, 0.8183333277702332, 0.8109999895095825, 0.8013333082199097, 0.8270000219345093, 0.8306666612625122, 0.7973333597183228, 0.8303333520889282, 0.8136666417121887, 0.8240000009536743, 0.8309999704360962, 0.8136666417121887, 0.8246666789054871, 0.8396666646003723, 0.8450000286102295, 0.8473333120346069, 0.8306666612625122, 0.8343333601951599, 0.8333333134651184, 0.8356666564941406, 0.8246666789054871]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 5, 5, 1, 8, 6, 5, 8, 9], [4, 3, 3, 5, 0, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.805142879486084, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.square(grad)), grad))))), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.482116502588766, 1.9599650507007278, 1.596833775245345, 1.3564111323577694, 1.1587277955193924, 0.9751288610883377, 0.8697403257690826, 0.8246747008671834, 0.7733066556255627, 0.7520248057064112, 0.7154995447467299, 0.695692930388775, 0.6550055201405374, 0.6297221710621768, 0.6297376863929054, 0.5931789859127548, 0.6248353761279462, 0.5707529422361711, 0.5588445072995358, 0.5583779137872387, 0.5435140590311246, 0.5542959493967867, 0.5316742343468641, 0.49590530657749354, 0.5197182425166543, 0.4946842762174041, 0.47891273907997256, 0.4741116810499984, 0.4828151350700939, 0.4621904806186337, 0.45405220103270155, 0.4497031475873813, 0.4498016936408058], "accuracy": [0.2413155436515808, 0.3181878328323364, 0.4711398780345917, 0.5134063959121704, 0.5680887699127197, 0.6239598393440247, 0.6605468392372131, 0.6777176260948181, 0.69673752784729, 0.7148329019546509, 0.7168141603469849, 0.7327961921691895, 0.7486461400985718, 0.7560427784919739, 0.7625148296356201, 0.76542067527771, 0.7621186375617981, 0.7854973077774048, 0.7887993454933167, 0.7897239327430725, 0.789988100528717, 0.7932901978492737, 0.7994980812072754, 0.8158763647079468, 0.8010830879211426, 0.8136309385299683, 0.8149517774581909, 0.8305375576019287, 0.8211596608161926, 0.82683926820755, 0.8304054737091064, 0.8293488025665283, 0.8319904804229736], "val_loss": [1.7792181968688965, 1.3500583853040422, 1.3265825339726038, 0.8958588668278286, 0.7183365140642438, 0.6842027732304165, 0.6262015615190778, 0.6245779309953962, 0.5710794925689697, 0.5505034582955497, 0.5635525499071393, 0.5512051241738456, 0.5071103913443429, 0.5348207439695086, 0.5161932195935931, 0.5507995571408953, 0.4540923663548061, 0.4852636882237026, 0.4988163879939488, 0.4412925754274641, 0.4227684225354876, 0.4396879162107195, 0.41855702229908537, 0.4241771101951599, 0.42434575728007723, 0.41238753284726826, 0.42421408210481915, 0.3905011074883597, 0.40696098123277935, 0.38260886498859953, 0.38455408811569214, 0.3959455830710275, 0.38581676142556326], "val_accuracy": [0.3569999933242798, 0.46266666054725647, 0.45500001311302185, 0.5809999704360962, 0.6936666369438171, 0.6830000281333923, 0.7183333039283752, 0.7129999995231628, 0.7353333234786987, 0.7509999871253967, 0.7319999933242798, 0.7443333268165588, 0.7663333415985107, 0.7570000290870667, 0.7606666684150696, 0.7456666827201843, 0.7973333597183228, 0.7689999938011169, 0.7730000019073486, 0.8033333420753479, 0.809333324432373, 0.8029999732971191, 0.8153333067893982, 0.8109999895095825, 0.8103333115577698, 0.8086666464805603, 0.8043333292007446, 0.8323333263397217, 0.8136666417121887, 0.82833331823349, 0.8233333230018616, 0.831333339214325, 0.8270000219345093]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 1, 5, 5, 1, 8, 6, 5, 8, 9], [4, 3, 3, 3, 3, 2, 2, 4, 2, 0], [98, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.8040000200271606, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(beta, tf.math.square(grad)), grad))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.481770262442969, 1.9968219135321206, 1.6901589835151438, 1.2823921500605173, 1.1109189197623797, 1.0374235513660304, 1.082550256031222, 0.8421800460215211, 0.7744467406697387, 0.7400840303019572, 0.7013962850783558, 0.6827230048988946, 0.6617967615416022, 0.6271963024876295, 0.6302418095513483, 0.5925713486092643, 0.6236541157763286, 0.5684903295772927, 0.5579204090424753, 0.5559255699707674, 0.5534477541002977, 0.5436978264570457, 0.5251726109779049, 0.5113206283448788, 0.5132690026673186, 0.5214311955170687, 0.4802542506837574, 0.4798523233102502, 0.4767754664038151, 0.47207016681384073, 0.45213526322416203, 0.449118736775607, 0.4309732805090715, 0.4654856041091513, 0.429060625815042, 0.4333646950106406, 0.4130720024402698, 0.39881330335286663, 0.4387207829390125, 0.39272709673248685, 0.39562355953987954, 0.38308546473762345, 0.392502442122356, 0.3741734964956839, 0.3815879774698256, 0.37487411815508276, 0.36855312109213967, 0.3712304180733768, 0.3662366086835827], "accuracy": [0.2413155436515808, 0.3078853487968445, 0.43587371706962585, 0.5332188606262207, 0.5766741633415222, 0.6015057563781738, 0.6071853041648865, 0.6802271604537964, 0.698190450668335, 0.7129837274551392, 0.7250033020973206, 0.739928662776947, 0.7436270117759705, 0.7547219395637512, 0.7511557340621948, 0.7701756954193115, 0.7646281719207764, 0.7873464822769165, 0.7902522683143616, 0.7865539789199829, 0.7897239327430725, 0.8000264167785645, 0.8009510040283203, 0.8086118102073669, 0.8062343001365662, 0.8074230551719666, 0.819970965385437, 0.8240655064582825, 0.8216879963874817, 0.8191784620285034, 0.8304054737091064, 0.8323867321014404, 0.8396512866020203, 0.8238013386726379, 0.8376700282096863, 0.8408400416374207, 0.8467837572097778, 0.8506141901016235, 0.8348963260650635, 0.8515387773513794, 0.8525954484939575, 0.8618412613868713, 0.852331280708313, 0.8632941246032715, 0.8570862412452698, 0.8595958352088928, 0.8614450097084045, 0.8618412613868713, 0.8636903762817383], "val_loss": [1.7785939489092146, 1.251155138015747, 1.2886900901794434, 0.988919905253819, 0.7245833873748779, 0.6617107391357422, 0.7545936448233468, 0.6173317943300519, 0.5776781865528652, 0.5763971975871495, 0.5208721842084613, 0.5625274181365967, 0.48518618515559603, 0.5131755726678031, 0.534420336995806, 0.49606350490025114, 0.4579403911318098, 0.47403151648385183, 0.46526687485831125, 0.4445922204426357, 0.42271692412240164, 0.4375703249658857, 0.41706349168504986, 0.43858357838221956, 0.4282762408256531, 0.4171715293611799, 0.4252754364694868, 0.393165511744363, 0.42446782759257723, 0.3840289967400687, 0.38135108777454924, 0.3658966336931501, 0.3977568745613098, 0.39936368806021555, 0.4087180921009609, 0.4037829892975943, 0.3682848981448582, 0.36457171610423494, 0.3821782554898943, 0.3499720437186105, 0.3735273650714329, 0.3901102202279227, 0.3923403194972447, 0.3520182285990034, 0.3671958701951163, 0.3425738385745457, 0.34963334458214895, 0.3455389993531363, 0.3563928178378514], "val_accuracy": [0.3569999933242798, 0.5206666588783264, 0.5236666798591614, 0.5386666655540466, 0.6623333096504211, 0.6970000267028809, 0.6579999923706055, 0.7200000286102295, 0.7360000014305115, 0.7369999885559082, 0.7590000033378601, 0.734666645526886, 0.7730000019073486, 0.7696666717529297, 0.7606666684150696, 0.7683333158493042, 0.7876666784286499, 0.7739999890327454, 0.7926666736602783, 0.800000011920929, 0.8056666851043701, 0.8053333163261414, 0.8113333582878113, 0.8076666593551636, 0.8143333196640015, 0.8033333420753479, 0.8029999732971191, 0.8293333053588867, 0.7996666431427002, 0.8330000042915344, 0.8230000138282776, 0.8370000123977661, 0.8233333230018616, 0.8149999976158142, 0.8130000233650208, 0.8209999799728394, 0.8479999899864197, 0.8423333168029785, 0.8376666903495789, 0.8483333587646484, 0.8429999947547913, 0.8296666741371155, 0.8320000171661377, 0.8526666760444641, 0.8393333554267883, 0.8489999771118164, 0.8443333506584167, 0.8510000109672546, 0.8389999866485596]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 4, 5, 5, 5, 5, 1, 8, 6, 5, 8, 9], [1, 3, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 0, 1, 0, 0, 1], [0, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.2720000147819519, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.negative(sigma)), tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3894368472620164, 2.3486734922016304, 2.27560652431291, 2.4472404262251497, 2.305103852748556, 2.3034874747032816, 2.303339095588657, 2.3030260134492773], "accuracy": [0.228899747133255, 0.11042134463787079, 0.12917712330818176, 0.14317791163921356, 0.09840179979801178, 0.1010434553027153, 0.09470347315073013, 0.0948355570435524], "val_loss": [2.0862315041678294, 1.971238681248256, 1.8193234034946986, 1.9765667915344238, 1.9749276297433036, 1.9736767496381487, 1.9737180301121302, 1.9737352643694197], "val_accuracy": [0.2043333351612091, 0.09866666793823242, 0.21199999749660492, 0.09966666996479034, 0.09966666996479034, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 6, 5, 5, 1, 8, 6, 5, 8, 9], [4, 3, 3, 5, 0, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.2160000056028366, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, tf.math.square(grad))), grad)), grad))), tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.385828520533368, 2.564134154762527, 2.306370586278873, 2.2993967349833784, 2.180073810716457, 2.3051918521297132], "accuracy": [0.23074890673160553, 0.11662924289703369, 0.09932637959718704, 0.11266675591468811, 0.2024831622838974, 0.09509972482919693], "val_loss": [2.3049842289515903, 1.978226593562535, 1.9734772954668318, 1.935389586857387, 1.9757037162780762, 1.9738870348249162], "val_accuracy": [0.19599999487400055, 0.09833333641290665, 0.10366666316986084, 0.17800000309944153, 0.10066666454076767, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 5, 5, 1, 8, 6, 5, 8, 9], [4, 3, 0, 1, 1, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [1, 1, 1, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.1834285706281662, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.5012752313529494, 2.539145044158746, 2.4768836378279677, 2.3377972154600934, 2.3446821786031244, 2.3542054245232937, 2.342434859310458], "accuracy": [0.20644564926624298, 0.14978206157684326, 0.11372341960668564, 0.09787346422672272, 0.1018359512090683, 0.09430722147226334, 0.1022322028875351], "val_loss": [1.9739083562578474, 1.9072010176522392, 2.0208237511771068, 2.01780435017177, 1.9928748948233468, 1.9950177328927177, 2.0237226486206055], "val_accuracy": [0.0989999994635582, 0.14866666495800018, 0.09966666996479034, 0.10000000149011612, 0.10066666454076767, 0.09833333641290665, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 5, 5, 1, 8, 6, 5, 8, 9], [5, 2, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 2, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.14657142758369446, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 0, 3, 2, 1, 1, 0, 4, 2, 2, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(grad, beta), tf.math.add(tf.math.add(beta, grad), tf.math.square(grad)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, beta))", "other_info": {"loss": [3.693740263528135, 1.3973804950875623e+34, NaN, NaN, NaN, NaN], "accuracy": [0.09417514503002167, 0.09642054885625839, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [14.133209773472377, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.11866666376590729, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 2, 3, 2, 5, 5, 1, 8, 6, 5, 8, 9], [0, 3, 2, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 1, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 10, 10, 5, 5, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.add(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.square(beta)), tf.math.add(beta, grad)))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 9, 5, 9, 4, 4, 1, 8, 6, 5, 8, 9], [4, 2, 3, 5, 0, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [79, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 4, 4, 4, 0, 2, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09945846349000931, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 8, 6, 1, 3, 8, 9, 8, 6, 5, 8, 9], [4, 1, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 10, 10, 5, 5, 0, 3, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.subtract(tf.math.add(beta, grad), tf.math.multiply(grad, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3031152314387766, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09945846349000931, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 5, 5, 1, 8, 6, 5, 8, 9], [3, 3, 2, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 13, 7, 6, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(tf.math.pow(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(beta, sigma), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06472064554691315, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 5, 5, 1, 8, 6, 5, 8, 9], [0, 3, 2, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [3, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 1, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 6, 3, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.subtract(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303402282117522, 2.3029129567824618, 2.302871813123504, 2.3028706218178843, 2.3028972293124177, 2.3029838293582188, 2.302951569412961, 2.302886064703501], "accuracy": [0.09140139818191528, 0.09576013684272766, 0.09879804402589798, 0.0936468094587326, 0.09391097724437714, 0.0948355570435524, 0.09615638852119446, 0.09642054885625839], "val_loss": [1.973620891571045, 1.9736430304391044, 1.9736222539629256, 1.9736435753958566, 1.9736958231244768, 1.9736554963248116, 1.9736370359148299, 1.9736554282052177], "val_accuracy": [0.1003333330154419, 0.10000000149011612, 0.10366666316986084, 0.09833333641290665, 0.09833333641290665, 0.09933333098888397, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 5, 5, 1, 8, 6, 5, 8, 9], [2, 3, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [8, 3, 0, 4, 2, 1, 2, 3], [0, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 0, 1, 1, 0, 1, 0, 4, 2, 2, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, beta), tf.math.add(beta, grad)), tf.math.add(tf.math.add(beta, tf.math.square(tf.math.square(grad))), grad)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3031152314387766, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09945846349000931, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 1, 2, 5, 5, 1, 8, 6, 5, 8, 9], [4, 3, 3, 1, 1, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), grad), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06987188011407852, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 8, 5, 1, 8, 6, 5, 8, 9], [4, 3, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, grad))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06973979622125626, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 4, 5, 5, 5, 5, 1, 8, 6, 5, 8, 9], [0, 3, 3, 0, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 0, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 5, 0, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [79, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, alpha), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303603009021262, 2.3043148104761255, 2.304186722479949, 2.3030479534694845, 2.303812685927317, 2.3017328173461418], "accuracy": [0.0886276587843895, 0.08215559273958206, 0.09272222965955734, 0.09496764093637466, 0.09087307006120682, 0.09153348207473755], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]