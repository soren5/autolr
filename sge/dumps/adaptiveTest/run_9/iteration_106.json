[{"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7860000133514404, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2929939411855127, 2.2654742460209287, 2.235388649169716, 2.1938741037386156, 2.1390386481468373, 2.0650528191166027, 1.972912148430426, 1.847913113236821, 1.7202748008108788, 1.5909195750727394, 1.4733011299167815, 1.3820441495536135, 1.3102493902412247, 1.2358824069458085, 1.1873038675743812, 1.1466821162392986, 1.1056734050631822, 1.079099661544046, 1.0341487874790756, 1.0146911570251484, 0.996481121373671, 0.9746347902599279, 0.9453033915978097, 0.9417283278509232, 0.9298489667153425, 0.9118863304198899, 0.9034908625821648, 0.8954675685082444, 0.8708803815266019, 0.866514391572232, 0.8519858746417777, 0.840434884461335, 0.826086254018157, 0.8314043040036871, 0.8360404223262705, 0.8081750620420756, 0.8098883311100734, 0.8073101428915181, 0.8013302842859956, 0.8034698169040264, 0.7876339746567047, 0.7860166670513695, 0.770045945397489, 0.7727104114928753, 0.7706839232522861, 0.7638961386608174, 0.7529370956543083, 0.7610037115822851, 0.7481335176374179, 0.7419260361049437, 0.7480395350080234, 0.7374085776558044, 0.7359226044961695, 0.7338851244379391, 0.7258675471666608, 0.7263696336821794, 0.719255854495843, 0.7167625974953812, 0.725875384992439, 0.7080586164886642, 0.710516869958838, 0.7109712180192554, 0.7058563754936771, 0.7056410221092422, 0.7036520499736563, 0.692088050109174, 0.6912894600795921, 0.698646256834241, 0.6924611610696143, 0.6895218822918611, 0.6810597449859939, 0.6764936911163865], "accuracy": [0.11161009222269058, 0.18980319797992706, 0.24461762607097626, 0.31382909417152405, 0.35768061876296997, 0.3965130150318146, 0.42187294363975525, 0.4461762011051178, 0.46427157521247864, 0.49465063214302063, 0.5145951509475708, 0.540219247341156, 0.5544841885566711, 0.5868445634841919, 0.5890899300575256, 0.603090763092041, 0.6124686598777771, 0.6205257177352905, 0.6409985423088074, 0.6448289752006531, 0.6494518518447876, 0.6585655808448792, 0.6650376319885254, 0.6707172393798828, 0.6670188903808594, 0.6804913282394409, 0.6807554960250854, 0.6823405027389526, 0.6897371411323547, 0.6917183995246887, 0.6972658634185791, 0.6955488324165344, 0.7055870890617371, 0.7054550051689148, 0.7016246318817139, 0.7100779414176941, 0.71100252866745, 0.709549605846405, 0.713379979133606, 0.7098137736320496, 0.7177387475967407, 0.7153612375259399, 0.7218332886695862, 0.7206445932388306, 0.7255316376686096, 0.7255316376686096, 0.7292299270629883, 0.7312111854553223, 0.7269845604896545, 0.7323999404907227, 0.7253995537757874, 0.7318716049194336, 0.7341170310974121, 0.728701651096344, 0.7371549606323242, 0.7392682433128357, 0.7408532500267029, 0.7400607466697693, 0.7367587089538574, 0.741909921169281, 0.7375511527061462, 0.7376832365989685, 0.7445515990257263, 0.746268630027771, 0.7427024245262146, 0.748778223991394, 0.750231146812439, 0.7469290494918823, 0.7478536367416382, 0.7465327978134155, 0.7530049085617065, 0.7511557340621948], "val_loss": [1.9467426708766393, 1.920435973576137, 1.8881771223885673, 1.8442681857517786, 1.7837067331586565, 1.702089582170759, 1.5967923232487269, 1.470871925354004, 1.3397248813084193, 1.2146833964756556, 1.106602498463222, 1.0217139380318778, 0.9534649848937988, 0.8994648115975517, 0.8558919259480068, 0.8214678764343262, 0.7917780876159668, 0.7686242886951992, 0.7466012239456177, 0.7280189139502389, 0.7135884761810303, 0.7008334738867623, 0.6868723460606166, 0.6766288110188076, 0.6668796198708671, 0.6585561718259539, 0.6489005259105137, 0.642770801271711, 0.6339103834969657, 0.626609376498631, 0.6221076590674264, 0.6135352849960327, 0.6084451845714024, 0.6035774946212769, 0.6014751877103534, 0.5944844995226178, 0.590153694152832, 0.5870379039219448, 0.5833605868475777, 0.5789515801838466, 0.575698903628758, 0.5726159811019897, 0.5678314311163766, 0.5667058399745396, 0.5658052137919835, 0.5588782514844622, 0.5559619665145874, 0.5541273525782994, 0.5507525035313198, 0.5483059712818691, 0.546779888016837, 0.5432893548692975, 0.5405313117163522, 0.5376583848680768, 0.5362663439341954, 0.5329477957316807, 0.5317740951265607, 0.529744063104902, 0.5292804070881435, 0.5264044829777309, 0.524254594530378, 0.523175733430045, 0.5213159152439663, 0.5203570808683123, 0.5187825816018241, 0.5159974949700492, 0.513670836176191, 0.5128228323800224, 0.5115629945482526, 0.5101425477436611, 0.5083603177751813, 0.5085592269897461], "val_accuracy": [0.24433332681655884, 0.3553333282470703, 0.38999998569488525, 0.4283333420753479, 0.4659999907016754, 0.5009999871253967, 0.5336666703224182, 0.5619999766349792, 0.5866666436195374, 0.6060000061988831, 0.637333333492279, 0.6483333110809326, 0.6639999747276306, 0.67166668176651, 0.6766666769981384, 0.684333324432373, 0.6883333325386047, 0.6919999718666077, 0.6916666626930237, 0.7003333568572998, 0.7013333439826965, 0.7120000123977661, 0.7120000123977661, 0.7163333296775818, 0.7206666469573975, 0.7203333377838135, 0.7276666760444641, 0.7260000109672546, 0.7333333492279053, 0.737666666507721, 0.7300000190734863, 0.7393333315849304, 0.7390000224113464, 0.7409999966621399, 0.7366666793823242, 0.7453333139419556, 0.7436666488647461, 0.7436666488647461, 0.7476666569709778, 0.7473333477973938, 0.753000020980835, 0.7516666650772095, 0.7546666860580444, 0.753333330154419, 0.7526666522026062, 0.7616666555404663, 0.7559999823570251, 0.7606666684150696, 0.762666642665863, 0.765333354473114, 0.7646666765213013, 0.7670000195503235, 0.7696666717529297, 0.7680000066757202, 0.7710000276565552, 0.7680000066757202, 0.7680000066757202, 0.7706666588783264, 0.7683333158493042, 0.7720000147819519, 0.7743333578109741, 0.7736666798591614, 0.7736666798591614, 0.7713333368301392, 0.7716666460037231, 0.7749999761581421, 0.7796666622161865, 0.7760000228881836, 0.7739999890327454, 0.7776666879653931, 0.7766666412353516, 0.7760000228881836]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7820000052452087, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2929939411855127, 2.2654741155850875, 2.235389269952367, 2.193877005290519, 2.1390351752846892, 2.065044820962124, 1.9729057805350176, 1.847905345895838, 1.7202718356156064, 1.5909221534794504, 1.4732840714784048, 1.3820242846977315, 1.310232333771037, 1.2358711542722303, 1.187294502693507, 1.146705258350803, 1.1057110809615385, 1.0791555636468548, 1.0342329413332503, 1.0147671684093322, 0.9965549568458555, 0.974712952945872, 0.9453833556572019, 0.9417286601285138, 0.929897513647499, 0.9119678877757572, 0.9034993725682073, 0.8955674707110154, 0.8708292968347796, 0.8665180824152814, 0.8520422499130399, 0.8405425662550992, 0.8261361147324171, 0.8314191397580142, 0.8360654959557724, 0.8082286266130526, 0.8099046906444296, 0.8072793915869774, 0.8014057416248913, 0.8035474447542099, 0.7876291105287769, 0.7860379550576981, 0.770051619207004, 0.7727127989064968, 0.7706710681970708, 0.7639356180267752, 0.7529530544180865, 0.7610816401560482, 0.7481842138873998, 0.7419733694437047, 0.7481081579434101, 0.7374606161242888, 0.7359645948229275, 0.7339832256608998, 0.7259398691563826, 0.726322952554116, 0.7192606733790352, 0.7168210228641099, 0.7259441300027989, 0.7082300648839167, 0.7106535868669277, 0.7110256397996549, 0.7059778455950407, 0.705581390122381, 0.7036796327138605, 0.6920425247097406], "accuracy": [0.11161009222269058, 0.18980319797992706, 0.24461762607097626, 0.31382909417152405, 0.35768061876296997, 0.39664509892463684, 0.421740859746933, 0.44630828499794006, 0.4644036591053009, 0.49465063214302063, 0.5144630670547485, 0.540219247341156, 0.5547483563423157, 0.5871087312698364, 0.5890899300575256, 0.603090763092041, 0.6129969358444214, 0.6207898855209351, 0.6404702067375183, 0.6446968913078308, 0.6495839357376099, 0.6584334969520569, 0.6642451286315918, 0.6707172393798828, 0.6674151420593262, 0.6803592443466187, 0.68101966381073, 0.6826046705245972, 0.6901333928108215, 0.6919825673103333, 0.6973979473114014, 0.696209192276001, 0.7058512568473816, 0.7055870890617371, 0.7016246318817139, 0.709549605846405, 0.7108704447746277, 0.7092854380607605, 0.7135120630264282, 0.7098137736320496, 0.7177387475967407, 0.7154933214187622, 0.7214370369911194, 0.7211728692054749, 0.7250033020973206, 0.7255316376686096, 0.7292299270629883, 0.7312111854553223, 0.7277770638465881, 0.7325320243835449, 0.7257958054542542, 0.7317395210266113, 0.7345132827758789, 0.7280412316322327, 0.7374191284179688, 0.7395324110984802, 0.7408532500267029, 0.7395324110984802, 0.7366266250610352, 0.7413815855979919, 0.7371549606323242, 0.7382115721702576, 0.7449478507041931, 0.7460044622421265, 0.7428345084190369, 0.7486461400985718], "val_loss": [1.9467426708766393, 1.9204354967389787, 1.8881803240094865, 1.8442726135253906, 1.7837016923086983, 1.7020851884569441, 1.5967840126582555, 1.4708631379263741, 1.339717081614903, 1.2146542753492082, 1.1065658160618372, 1.021670171192714, 0.9534404958997454, 0.8994307518005371, 0.8558885199683053, 0.8214863538742065, 0.7918187550136021, 0.7686565262930733, 0.7467038631439209, 0.7281020879745483, 0.713642052241734, 0.7009003502982003, 0.6869166919163295, 0.676606399672372, 0.6668472800936017, 0.658541066305978, 0.6489081723349435, 0.6427516937255859, 0.633997014590672, 0.6267032282693046, 0.6221697671072823, 0.6135422672544207, 0.6085122994014195, 0.6036485263279506, 0.6014653614589146, 0.5945147616522652, 0.5902029957090106, 0.5870325565338135, 0.5833584240504673, 0.5789271422794887, 0.5757793358394078, 0.572575398853847, 0.5678659166608538, 0.5667372260774884, 0.5658479077475411, 0.5588794435773577, 0.5560179437909808, 0.5541771139417376, 0.5508039508547101, 0.5482965367180961, 0.5467395101274762, 0.5432527916772025, 0.5404918193817139, 0.5378008740288871, 0.5363250459943499, 0.5330374240875244, 0.5318634339741298, 0.5298175300870623, 0.5291249581745693, 0.526259286063058, 0.5241816554750715, 0.5232173715318952, 0.5212634461266654, 0.5204556839806693, 0.5188760246549334, 0.515876156943185], "val_accuracy": [0.24433332681655884, 0.35499998927116394, 0.38999998569488525, 0.4283333420753479, 0.4659999907016754, 0.5013333559036255, 0.5336666703224182, 0.5619999766349792, 0.5866666436195374, 0.6060000061988831, 0.637333333492279, 0.6483333110809326, 0.6639999747276306, 0.67166668176651, 0.6769999861717224, 0.684333324432373, 0.6893333196640015, 0.6913333535194397, 0.6919999718666077, 0.6996666789054871, 0.7013333439826965, 0.7120000123977661, 0.7113333344459534, 0.7166666388511658, 0.7203333377838135, 0.7210000157356262, 0.7286666631698608, 0.7250000238418579, 0.7329999804496765, 0.7379999756813049, 0.7303333282470703, 0.7386666536331177, 0.7386666536331177, 0.7413333058357239, 0.7363333106040955, 0.7453333139419556, 0.7436666488647461, 0.7440000176429749, 0.7480000257492065, 0.7473333477973938, 0.7536666393280029, 0.7513333559036255, 0.7549999952316284, 0.7540000081062317, 0.753000020980835, 0.7613333463668823, 0.7566666603088379, 0.7606666684150696, 0.7620000243186951, 0.7649999856948853, 0.7643333077430725, 0.7670000195503235, 0.7693333625793457, 0.7683333158493042, 0.7710000276565552, 0.7676666378974915, 0.7676666378974915, 0.7706666588783264, 0.768666684627533, 0.7713333368301392, 0.7749999761581421, 0.7736666798591614, 0.7733333110809326, 0.7713333368301392, 0.7716666460037231, 0.7749999761581421]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [9, 57]], "fitness": -0.7442857027053833, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2993553723672977, 2.2977529827314926, 2.289028472368822, 2.2755958955868314, 2.257032642841906, 2.2366002400506204, 2.210161159445093, 2.1765477687234593, 2.1344051478545523, 2.0790407137706404, 2.0046820615213687, 1.911505745260581, 1.7925602425012324, 1.681358060517473, 1.5579208527983077, 1.4751505076436475, 1.4106774313134005, 1.384803469910708, 1.3587056497588463, 1.395877946747324, 1.3873235606687448, 1.31569498324706, 1.22768309265631, 1.156743582465535, 1.0863403951833592, 0.9817372363603442, 0.938823369893699, 0.9164828717621988, 0.9082796087259976, 0.9098755193030624, 0.907836239264862, 0.9175293988492494, 0.9047540689204363, 0.8815039219542612, 0.8592250077259335, 0.8287424851386554, 0.8056765750115495, 0.8108682150082456, 0.7999971129670356, 0.8093763179530904, 0.811747064506688, 0.8155926877575905, 0.8026062465850876, 0.8365860702087378], "accuracy": [0.09496764093637466, 0.10328886657953262, 0.1282525360584259, 0.16338661313056946, 0.21120063960552216, 0.26178839802742004, 0.29982829093933105, 0.34222692251205444, 0.3611147701740265, 0.37683266401290894, 0.4017963409423828, 0.40985339879989624, 0.43072250485420227, 0.44128912687301636, 0.4690265357494354, 0.486989825963974, 0.5090476870536804, 0.5209351181983948, 0.5386342406272888, 0.5392946600914001, 0.5469554662704468, 0.563730001449585, 0.5984678268432617, 0.6199973821640015, 0.6328094005584717, 0.6523576974868774, 0.6532822847366333, 0.6514331102371216, 0.6513010263442993, 0.6544709801673889, 0.6674151420593262, 0.6708492636680603, 0.6785101294517517, 0.6787742972373962, 0.6869634389877319, 0.6890767216682434, 0.6973979473114014, 0.691850483417511, 0.7012283802032471, 0.6954167485237122, 0.6972658634185791, 0.6925109028816223, 0.6976621150970459, 0.6921146512031555], "val_loss": [1.9687604222978865, 1.9620398793901717, 1.9512521880013602, 1.936755997794015, 1.918771403176444, 1.8969909804207938, 1.8702847617013114, 1.8358042580740792, 1.7898368835449219, 1.7284203256879533, 1.647395168031965, 1.5439207553863525, 1.4199469770703996, 1.2848963396889823, 1.1548521518707275, 1.042905058179583, 0.9523756504058838, 0.883159978049142, 0.8392976011548724, 0.8266323293958392, 0.7968481779098511, 0.7602414063044957, 0.7658332075391497, 0.7597617932728359, 0.716869422367641, 0.6747407232012067, 0.669401901108878, 0.6808949027742658, 0.6900481837136405, 0.699175408908299, 0.7097351721354893, 0.7107553652354649, 0.6960489579609462, 0.6711574622562954, 0.645721401487078, 0.6279565947396415, 0.6199962411608014, 0.618582912853786, 0.618118269102914, 0.6161199126924787, 0.6154819386346, 0.6183197668620518, 0.6206416743142265, 0.6169376373291016], "val_accuracy": [0.055666666477918625, 0.09533333033323288, 0.19733333587646484, 0.3190000057220459, 0.3633333444595337, 0.38600000739097595, 0.40033334493637085, 0.4156666696071625, 0.4339999854564667, 0.45766666531562805, 0.4749999940395355, 0.5053333044052124, 0.5376666784286499, 0.5686666369438171, 0.5893333554267883, 0.624666690826416, 0.6476666927337646, 0.6596666574478149, 0.6636666655540466, 0.640999972820282, 0.6600000262260437, 0.6823333501815796, 0.6859999895095825, 0.6919999718666077, 0.699999988079071, 0.7020000219345093, 0.7126666903495789, 0.6893333196640015, 0.6853333115577698, 0.6980000138282776, 0.7229999899864197, 0.7193333506584167, 0.7226666808128357, 0.7266666889190674, 0.7283333539962769, 0.7273333072662354, 0.7289999723434448, 0.7296666502952576, 0.7326666712760925, 0.7323333621025085, 0.7326666712760925, 0.7296666502952576, 0.7283333539962769, 0.731333315372467]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9, 5, 5], [0, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.6711428761482239, "mapping_values": [1, 39, 39, 26, 13, 6, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, grad), grad), alpha))), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.sqrt(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))), tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(grad)))))))))), tf.math.add(alpha, tf.math.square(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.269752614990343, 2.0126370772741033, 1.438506610562631, 1.179448662243814, 0.9309639751147506, 0.8348227404899381, 0.8134044023348025, 0.7705131849088783, 0.7409067533633744, 0.7000982968042934, 0.6880656290347188, 0.649023648581217, 0.6147315353056727, 0.613185925348922, 0.5987703597871556, 0.5614733552620979, 0.5660838128600564, 0.5352791538721597, 0.5211124302389568, 0.516549774952033, 0.5055089675991243, 0.4980034150735278, 0.48411493848705683, 0.4632641805744033, 0.4660325566728149, 0.4540864486483976, 0.45151581726117046, 0.44813208879339317, 0.4324164027433039, 0.4262001533998616, 0.4110608228272325, 0.41961958147058903, 0.4216857884247006, 0.391199325833417, 0.38607032920832113, 0.39070053727099957, 0.38286154270329575, 0.3791750203766418, 0.37584988605769837, 0.3684294622737372, 0.3720153163625989, 0.3595648983985741, 0.35691134604669567, 0.3528738077392888, 0.34828098143694847, 0.34461924314829556, 0.33158127951143346, 0.33115410784279364, 0.33366886311124705, 0.33043639533287655, 0.32259521278030034, 0.31983057990632807], "accuracy": [0.16933034360408783, 0.38185179233551025, 0.5090476870536804, 0.6075815558433533, 0.651168942451477, 0.6828688383102417, 0.6873596906661987, 0.7037379741668701, 0.7129837274551392, 0.7343811988830566, 0.7383436560630798, 0.7471932172775269, 0.7637035846710205, 0.767930269241333, 0.7670056819915771, 0.7795535326004028, 0.7791573405265808, 0.7910447716712952, 0.7943468689918518, 0.7992339134216309, 0.8076872229576111, 0.809140145778656, 0.8173292875289917, 0.8175934553146362, 0.8190463781356812, 0.8271034359931946, 0.8321225643157959, 0.8261788487434387, 0.8339717388153076, 0.8376700282096863, 0.8393871188163757, 0.8355567455291748, 0.843481719493866, 0.8492933511734009, 0.8516708612442017, 0.8491612672805786, 0.8558974862098694, 0.850350022315979, 0.8539162874221802, 0.8577466607093811, 0.8561616539955139, 0.8573504090309143, 0.8580108284950256, 0.857218325138092, 0.8646149635314941, 0.8628978729248047, 0.8708229064941406, 0.8656716346740723, 0.8648791313171387, 0.872407853603363, 0.8689737319946289, 0.8753136992454529], "val_loss": [1.865574904850551, 1.296165875026158, 0.8170614923749652, 0.684518711907523, 0.6764334099633353, 0.6200269971575055, 0.6017872776303973, 0.586474963596889, 0.5644443035125732, 0.5280988556998116, 0.5068306582314628, 0.47818897451673237, 0.48541385786873953, 0.46620101588112967, 0.45267932755606516, 0.45030983856746126, 0.44182893208095003, 0.4367643509592329, 0.42616535084588186, 0.4215448243277414, 0.41590817485536846, 0.4224453057561602, 0.4132907816341945, 0.40082664149148123, 0.39537140301295687, 0.3948810952050345, 0.39376644577298847, 0.3896862779344831, 0.4015188046864101, 0.3937815768378122, 0.37551818575177875, 0.37590960945401874, 0.39081744636808124, 0.3702076928956168, 0.3822770799909319, 0.3872747761862619, 0.3857098477227347, 0.3689485958644322, 0.3592254178864615, 0.387544972555978, 0.39419529267719816, 0.3715035319328308, 0.3698772192001343, 0.3924457515989031, 0.377862172467368, 0.3651853544371469, 0.38225869621549335, 0.39285534620285034, 0.4116026248250689, 0.40206004892076763, 0.4012889010565622, 0.4234760318483625], "val_accuracy": [0.4183333218097687, 0.5603333115577698, 0.6546666622161865, 0.7073333263397217, 0.7196666598320007, 0.7133333086967468, 0.7296666502952576, 0.7476666569709778, 0.7526666522026062, 0.7633333206176758, 0.7749999761581421, 0.7900000214576721, 0.7886666655540466, 0.7896666526794434, 0.8066666722297668, 0.8053333163261414, 0.8040000200271606, 0.8103333115577698, 0.8153333067893982, 0.8196666836738586, 0.8226666450500488, 0.8303333520889282, 0.831333339214325, 0.8320000171661377, 0.8366666436195374, 0.8353333473205566, 0.8370000123977661, 0.8403333425521851, 0.8403333425521851, 0.8456666469573975, 0.8506666421890259, 0.8493333458900452, 0.8483333587646484, 0.8510000109672546, 0.8546666502952576, 0.8413333296775818, 0.8506666421890259, 0.8550000190734863, 0.8516666889190674, 0.8493333458900452, 0.8486666679382324, 0.8603333234786987, 0.8536666631698608, 0.8573333621025085, 0.8576666712760925, 0.8640000224113464, 0.8666666746139526, 0.8616666793823242, 0.8613333106040955, 0.8576666712760925, 0.8519999980926514, 0.8556666374206543]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0], [3, 4, 2, 7, 8, 0, 1, 0, 0, 3, 8, 5, 8, 9, 8, 2, 6, 5, 2, 8, 7, 2, 4, 9, 5], [3, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 57, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 1, 1], [9, 9, 7, 1, 7, 5, 5, 9], [5, 4, 0], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.6645714044570923, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.269752646481372, 2.012637050302037, 1.438492652652223, 1.1794419965220009, 0.9309819441634619, 0.8349214495369913, 0.8134147800773819, 0.7703187807187932, 0.7406094792323452, 0.70010367092156, 0.6878528900433682, 0.6485869260732414, 0.6144092215554526, 0.6124156827010877, 0.5981112972793483, 0.5613502801495961, 0.5647681831069642, 0.5354249642399466, 0.5208409789247505, 0.5165314193037066, 0.5071204254466939, 0.49836247810645423, 0.4860499741741065, 0.4633841422318688, 0.46672436458370736, 0.4548588112093092, 0.45130191286163496, 0.4484640103423474, 0.4322678880637364, 0.4263891294143928, 0.4112664195784583, 0.4197148144237275, 0.4226747040955807, 0.39253745045108945, 0.3868426869392962, 0.39301112728379645, 0.3840358822203394, 0.37524428394460846, 0.3687073189498033, 0.3628926275428638, 0.36846486976306986, 0.35950034626911753, 0.3523518740186098, 0.3451740058335047, 0.3486891578784031, 0.35231491379718327, 0.33857744952643853, 0.3366126640401008], "accuracy": [0.16933034360408783, 0.38185179233551025, 0.5090476870536804, 0.6075815558433533, 0.651168942451477, 0.6832650899887085, 0.6872276067733765, 0.7038700580596924, 0.713908314704895, 0.7351737022399902, 0.7382115721702576, 0.7467969655990601, 0.763439416885376, 0.7681944370269775, 0.767401933670044, 0.780610203742981, 0.7796856164932251, 0.7881389260292053, 0.7932901978492737, 0.8014793395996094, 0.8055738806724548, 0.8074230551719666, 0.8168009519577026, 0.8166688680648804, 0.8186501264572144, 0.8257825970649719, 0.8302733898162842, 0.8259146809577942, 0.8323867321014404, 0.8381983637809753, 0.8378021121025085, 0.8364813327789307, 0.8384625315666199, 0.8486329317092896, 0.8533879518508911, 0.8454629778862, 0.8557654023170471, 0.8519350290298462, 0.8574824929237366, 0.8574824929237366, 0.8556333184242249, 0.8580108284950256, 0.8588033318519592, 0.8628978729248047, 0.8642187118530273, 0.8626337051391602, 0.8688416481018066, 0.8646149635314941], "val_loss": [1.8655749729701452, 1.2961649554116386, 0.8170639617102486, 0.6844851119177682, 0.6763530458722796, 0.6198780025754657, 0.6016950607299805, 0.5861357791083199, 0.5640344619750977, 0.5275681700025286, 0.5065814426967076, 0.47744929790496826, 0.4846654619489397, 0.46602041380746023, 0.45192108835492817, 0.44984441144125803, 0.4414324590138027, 0.4372499074254717, 0.42514232226780485, 0.4210226535797119, 0.4166187899453299, 0.42266603878566195, 0.4138642634664263, 0.40245507444654194, 0.3963262694222586, 0.39685219526290894, 0.39559931414467947, 0.38877021414893015, 0.39793345757893156, 0.3931188072477068, 0.3734489934785025, 0.37656465598515104, 0.3939458557537624, 0.3787565401622227, 0.37672790459224154, 0.37623230048588346, 0.3929448553494045, 0.36350285155432566, 0.3560164826256888, 0.3708176187106541, 0.3883968251092093, 0.37624023641858784, 0.3556185109274728, 0.37528464623859953, 0.39873974663870676, 0.3926833527428763, 0.39056551456451416, 0.4094351274626596], "val_accuracy": [0.4183333218097687, 0.5603333115577698, 0.6546666622161865, 0.7073333263397217, 0.7200000286102295, 0.7129999995231628, 0.7286666631698608, 0.7476666569709778, 0.7523333430290222, 0.762666642665863, 0.7756666541099548, 0.7900000214576721, 0.7883333563804626, 0.7900000214576721, 0.8053333163261414, 0.8053333163261414, 0.8056666851043701, 0.8100000023841858, 0.8136666417121887, 0.8213333487510681, 0.8236666917800903, 0.82833331823349, 0.8299999833106995, 0.8273333311080933, 0.8343333601951599, 0.8356666564941406, 0.8370000123977661, 0.8403333425521851, 0.8373333215713501, 0.8450000286102295, 0.8489999771118164, 0.8453333377838135, 0.8510000109672546, 0.8556666374206543, 0.8556666374206543, 0.843999981880188, 0.8493333458900452, 0.8560000061988831, 0.8560000061988831, 0.8606666922569275, 0.8560000061988831, 0.8629999756813049, 0.8673333525657654, 0.859333336353302, 0.856333315372467, 0.859666645526886, 0.8576666712760925, 0.8579999804496765]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9, 8, 3, 4, 3, 2, 8], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0, 2], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.6579999923706055, "mapping_values": [1, 47, 47, 30, 17, 6, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, grad), grad), alpha))), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.sqrt(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))), tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.sqrt(grad)))))))))), tf.math.add(alpha, tf.math.multiply(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))), tf.math.pow(tf.math.multiply(grad, tf.math.add(grad, tf.math.sqrt(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.269752646481372, 2.0126372504747616, 1.4385059849775983, 1.1794479299593028, 0.9309769710135923, 0.8348429137925745, 0.8133418284875212, 0.7707153198001344, 0.740767498238999, 0.6998613375037211, 0.6879554185428325, 0.6488335904286537, 0.6147168116594082, 0.6122261543929569, 0.5996782862829919, 0.5608132052745928, 0.5650009538881405, 0.5352371065781306, 0.5220142306511224, 0.5167530460435449, 0.5058322278043424, 0.49918890452860465, 0.4840687001937133, 0.46227779803400765, 0.4659672433658283, 0.4549296258651916, 0.4492935713067141, 0.44517410303371424, 0.4309001937085422, 0.4231358128665634, 0.40891739749684863, 0.41232952903432146, 0.4175359753491053, 0.390782608871431, 0.38236460131802785, 0.38293457474879866, 0.3788570701768921, 0.37836753738287054, 0.3766053730210828, 0.38001914613865084, 0.37494195236616196, 0.3740103572996742, 0.36951355904777683, 0.34856263252218495, 0.35307828716125783, 0.35747052537231333, 0.33889784327256856, 0.3371330395846744, 0.3423438645734952, 0.3311294018789258, 0.3414132532867474, 0.32740319885629404], "accuracy": [0.16933034360408783, 0.38185179233551025, 0.5090476870536804, 0.6077136397361755, 0.6509047746658325, 0.6828688383102417, 0.6876237988471985, 0.7034738063812256, 0.7123233675956726, 0.7339849472045898, 0.7371549606323242, 0.7470611333847046, 0.763439416885376, 0.7675340175628662, 0.7671377658843994, 0.7808743715286255, 0.7784969210624695, 0.7881389260292053, 0.7942147850990295, 0.7989697456359863, 0.806630551815033, 0.8078193068504333, 0.816008448600769, 0.8169330358505249, 0.817989706993103, 0.8259146809577942, 0.8319904804229736, 0.8267071843147278, 0.8323867321014404, 0.837537944316864, 0.8380662798881531, 0.8411042094230652, 0.8430854678153992, 0.8486329317092896, 0.8535200357437134, 0.8515387773513794, 0.8573504090309143, 0.8520671129226685, 0.8527275323867798, 0.8491612672805786, 0.8506141901016235, 0.8508783578872681, 0.8515387773513794, 0.8601241707801819, 0.8627657890319824, 0.8650112152099609, 0.8706908226013184, 0.8706908226013184, 0.8650112152099609, 0.871879518032074, 0.8656716346740723, 0.8705587387084961], "val_loss": [1.865574904850551, 1.2961664199829102, 0.8170558384486607, 0.6845544576644897, 0.6764382464545113, 0.6201157399586269, 0.6018067598342896, 0.5862726654325213, 0.5641813107899257, 0.5276283706937518, 0.5068920339856829, 0.4779204641069685, 0.4846987383706229, 0.4648352180208479, 0.4522278308868408, 0.4495467117854527, 0.44190631593976704, 0.43716862371989657, 0.4271073511668614, 0.4220095532281058, 0.41864923919950214, 0.4253374678747995, 0.4125540001051767, 0.40209460258483887, 0.39596727064677645, 0.3954546707017081, 0.39609603370938984, 0.389826910836356, 0.4007217458316258, 0.3973768268312727, 0.379659823008946, 0.3797289558819362, 0.3895146761621748, 0.3756963866097586, 0.3738324046134949, 0.3801248073577881, 0.3947973591940744, 0.37070171322141376, 0.3664404920169285, 0.3764784336090088, 0.3829071266310556, 0.3935909526688712, 0.38200370754514423, 0.37051223857062204, 0.37885681220463346, 0.3911777564457485, 0.4149738209588187, 0.4003326552254813, 0.39840945175715853, 0.4193245087351118, 0.38507541588374544, 0.40095638377325876], "val_accuracy": [0.4183333218097687, 0.5603333115577698, 0.6546666622161865, 0.7070000171661377, 0.7196666598320007, 0.7129999995231628, 0.7286666631698608, 0.7480000257492065, 0.7516666650772095, 0.7630000114440918, 0.7756666541099548, 0.7896666526794434, 0.7883333563804626, 0.7910000085830688, 0.8046666383743286, 0.8053333163261414, 0.8043333292007446, 0.8130000233650208, 0.8149999976158142, 0.8216666579246521, 0.8209999799728394, 0.8276666402816772, 0.8293333053588867, 0.8296666741371155, 0.8356666564941406, 0.8353333473205566, 0.8403333425521851, 0.840666651725769, 0.8396666646003723, 0.8476666808128357, 0.8493333458900452, 0.8473333120346069, 0.8496666550636292, 0.8539999723434448, 0.8546666502952576, 0.846666693687439, 0.8510000109672546, 0.8456666469573975, 0.8550000190734863, 0.8569999933242798, 0.8633333444595337, 0.8560000061988831, 0.856333315372467, 0.8579999804496765, 0.8569999933242798, 0.8659999966621399, 0.8676666617393494, 0.8636666536331177, 0.8583333492279053, 0.8566666841506958, 0.8583333492279053, 0.8519999980926514]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [0, 2, 3, 1, 2, 1, 2, 2, 2, 0, 2, 1, 0, 1, 3, 0], [67, 8, 57, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.6462857127189636, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.269752646481372, 2.012637297711305, 1.438491376982137, 1.1794328198000235, 0.930918358312606, 0.8348483812886144, 0.8138277974221306, 0.7706333910075822, 0.7403151734693096, 0.7009130593981205, 0.6880605127266323, 0.6484474510706301, 0.6134651426263789, 0.6112826468922191, 0.5978562952174392, 0.560581352819053, 0.5650907951717001, 0.5364565035261104, 0.5187564954946952, 0.5138698058861468, 0.5068628978436381, 0.49461286953018013, 0.48134724687764735, 0.46082172878681943, 0.46579379381804087, 0.4509607347215817, 0.44810845652796166, 0.44711789519102535, 0.43394995485991533, 0.42204388276208993, 0.41163461530890366, 0.41910432679242837, 0.4200560950670795, 0.39250760461597267, 0.38440507231151044, 0.38876055662248743, 0.3807413297015379, 0.36573739048118653, 0.37186340484809977, 0.3645172611739043, 0.36725785505612607, 0.3609371657195801, 0.34991832285540814, 0.35403273408250124, 0.34127851387749353, 0.34841642028557046, 0.3314846341226709, 0.3394213582640862, 0.3260919254186084, 0.3257021922413951], "accuracy": [0.16933034360408783, 0.38185179233551025, 0.5090476870536804, 0.6079778075218201, 0.6501122713088989, 0.6839255094528198, 0.6881521344184875, 0.7038700580596924, 0.713379979133606, 0.733588695526123, 0.737947404384613, 0.7481178045272827, 0.763439416885376, 0.765949010848999, 0.7692511081695557, 0.7810064554214478, 0.7783648371696472, 0.7890635132789612, 0.7960638999938965, 0.8001585006713867, 0.8062343001365662, 0.8055738806724548, 0.8182538747787476, 0.8177255392074585, 0.8168009519577026, 0.8240655064582825, 0.8352925777435303, 0.8247259259223938, 0.832650899887085, 0.8412362933158875, 0.8380662798881531, 0.8368775844573975, 0.842028796672821, 0.8459912538528442, 0.8502179384231567, 0.8470479249954224, 0.8553691506385803, 0.8582749962806702, 0.8570862412452698, 0.8565579056739807, 0.8561616539955139, 0.8533879518508911, 0.8623695969581604, 0.858671247959137, 0.8597279191017151, 0.8638224601745605, 0.8651432991027832, 0.8636903762817383, 0.8730682730674744, 0.8704266548156738], "val_loss": [1.865574904850551, 1.2961647510528564, 0.8170480728149414, 0.6841958250318255, 0.6765082733971732, 0.6203474657876151, 0.6019340072359357, 0.5858892372676304, 0.5640082018715995, 0.5273967129843575, 0.5071913344519479, 0.47824692726135254, 0.4847511053085327, 0.4647406339645386, 0.45177907603127615, 0.4509096656526838, 0.44187309060777935, 0.4377488153321402, 0.4243148224694388, 0.4201949068478176, 0.4154352034841265, 0.4203686203275408, 0.41125174931117464, 0.39992996624537874, 0.3955625295639038, 0.39503482409885954, 0.3948847140584673, 0.3921257512910025, 0.404925457068852, 0.3942120671272278, 0.3781507100377764, 0.37738804306302753, 0.38670189891542706, 0.3708510228565761, 0.3717096277645656, 0.376940769808633, 0.38546433619090487, 0.36410761731011526, 0.37176579236984253, 0.3807337965284075, 0.3945237227848598, 0.39118456840515137, 0.366088262626103, 0.38302155903407503, 0.39004490205219816, 0.3834988134247916, 0.3903480087007795, 0.3926878997257778, 0.3902937684740339, 0.41564224447522846], "val_accuracy": [0.4183333218097687, 0.5603333115577698, 0.6546666622161865, 0.7089999914169312, 0.718999981880188, 0.7123333215713501, 0.7283333539962769, 0.746666669845581, 0.7513333559036255, 0.7636666893959045, 0.7726666927337646, 0.7889999747276306, 0.7889999747276306, 0.7889999747276306, 0.8069999814033508, 0.8053333163261414, 0.7996666431427002, 0.812333345413208, 0.8159999847412109, 0.8190000057220459, 0.8223333358764648, 0.8303333520889282, 0.831333339214325, 0.8306666612625122, 0.8309999704360962, 0.8339999914169312, 0.8370000123977661, 0.8383333086967468, 0.8386666774749756, 0.8473333120346069, 0.8483333587646484, 0.8523333072662354, 0.8516666889190674, 0.8556666374206543, 0.8573333621025085, 0.8496666550636292, 0.8506666421890259, 0.8513333201408386, 0.859666645526886, 0.859000027179718, 0.8579999804496765, 0.859666645526886, 0.8569999933242798, 0.8613333106040955, 0.8666666746139526, 0.8640000224113464, 0.859000027179718, 0.8640000224113464, 0.8653333187103271, 0.8640000224113464]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 1, 0, 1, 3, 3], [28, 57]], "fitness": -0.4334285855293274, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2898751761950775, 2.2438853628458113, 2.3033994887058116, 2.2570977574719917, 2.1473684987025474, 2.3066830858027285, 2.2986752754819078, 2.238839988364614, 2.311920673210135], "accuracy": [0.2098798006772995, 0.1476687341928482, 0.10289261490106583, 0.1534803807735443, 0.2561088502407074, 0.09919429570436478, 0.11662924289703369, 0.18557654321193695, 0.09866596013307571], "val_loss": [1.7271462168012346, 1.9753345080784388, 1.9711847305297852, 1.544149466923305, 1.9809939520699638, 1.973379271371024, 1.9487428665161133, 1.9974331174577986, 1.9748714991978236], "val_accuracy": [0.3440000116825104, 0.09833333641290665, 0.10133333504199982, 0.40700000524520874, 0.09099999815225601, 0.09933333098888397, 0.17766666412353516, 0.09933333098888397, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [3, 4, 2, 7, 8, 0, 1, 0, 0, 3, 8, 5, 8, 9, 8, 2, 6, 5, 2, 8, 7, 2, 4, 9, 5], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 57, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1], [9, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10542856901884079, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2999069429958627, 2.3024655078396177, 2.302237743431346, 2.3019113281793158, 2.3013169408049237, 2.301352967140209, 2.3018155204401105, 2.30084246452915, 2.30120596777352, 2.3009841243084854, 2.3009921469000023, 2.3008563008369505, 2.3009352046957483, 2.301145747951497, 2.300988475833319, 2.301135422861918, 2.3012346722871526], "accuracy": [0.09298639744520187, 0.09153348207473755, 0.09628847241401672, 0.08928807079792023, 0.09668471664190292, 0.09853387624025345, 0.09628847241401672, 0.09893012791872025, 0.09391097724437714, 0.09972262382507324, 0.09391097724437714, 0.09549596905708313, 0.09985470771789551, 0.10117553919553757, 0.09826971590518951, 0.09932637959718704, 0.10394927859306335], "val_loss": [1.9709907940455846, 1.9707856178283691, 1.9706380026681083, 1.970573834010533, 1.9705849375043596, 1.9706579617091589, 1.9707983561924525, 1.9710113661629813, 1.9712750571114677, 1.9715398379734583, 1.9717971256801061, 1.9720244407653809, 1.9722279139927454, 1.9724038669041224, 1.97254855292184, 1.9726801599775041, 1.972797053200858], "val_accuracy": [0.04633333161473274, 0.052666667848825455, 0.05833333358168602, 0.06499999761581421, 0.07400000095367432, 0.08100000023841858, 0.08833333104848862, 0.0949999988079071, 0.09933333098888397, 0.10100000351667404, 0.10066666454076767, 0.10166666656732559, 0.0976666659116745, 0.09600000083446503, 0.09799999743700027, 0.09600000083446503, 0.09166666865348816]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [3, 4, 0, 7, 8, 0, 7, 4, 3, 3, 3, 3, 2, 9, 6, 0, 6, 5, 7, 8, 7, 3, 4, 6, 9], [0, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 24, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 12, 7, 5, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07634394615888596, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [0, 2, 3, 1, 2, 1, 2, 2, 2, 0, 2, 1, 0, 1, 3, 0], [30, 8, 57, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07660810649394989, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [3, 2, 3, 1, 2, 1, 2, 2, 2, 0, 2, 1, 0, 1, 3, 0], [89, 8, 57, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [9, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 1, 0, 1, 3, 3], [82, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 8, 5, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 12, 7, 5, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, alpha)), grad))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(beta), tf.math.pow(tf.math.add(alpha, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [2, 4, 6, 7, 1, 0, 0, 6, 9, 3, 8, 5, 8, 9, 8, 6, 6, 5, 0, 8, 7, 2, 4, 9, 6], [3, 2, 3, 1, 2, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 41, 91, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [1, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 7, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 34, 34, 24, 10, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))))), tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), alpha)), tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.sqrt(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))))), grad)), tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.square(tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha)))))), tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [0, 2, 3, 1, 2, 1, 2, 2, 2, 0, 2, 1, 0, 1, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [1, 4, 3, 2], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 1, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 11, 11, 7, 4, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, grad))), tf.math.add(tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08268392831087112, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0], [3, 4, 2, 7, 8, 0, 1, 0, 0, 3, 8, 5, 8, 9, 8, 2, 6, 5, 2, 8, 7, 2, 4, 9, 5], [0, 2, 3, 1, 2, 1, 2, 2, 2, 0, 2, 1, 0, 1, 3, 0], [30, 8, 57, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 1, 1], [9, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 9, 0, 4, 7, 8, 4], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3018748627961068, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09787346422672272, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [0, 2, 3, 1, 2, 1, 2, 2, 2, 0, 2, 1, 0, 1, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [90, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 12, 7, 5, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9, 3, 0, 0, 0], [0, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 24, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [0, 7], [88, 19], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 8, 5, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))))))), tf.math.negative(tf.math.add(alpha, alpha)))), alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07687227427959442, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1], [3, 4, 1, 5, 8, 8, 1, 0, 0, 3, 8, 5, 8, 9, 8, 2, 6, 5, 2, 8, 7, 2, 4, 9, 5], [3, 2, 3, 1, 1, 2, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 57, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1, 1], [9, 9, 7, 1, 7, 5, 5, 9], [5, 4, 0], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 19, 19, 14, 5, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.negative(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, grad)))))), alpha))))))), tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.sqrt(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))))), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.30004890433329, 2.3030740435034325, 2.3034023239690993, 2.3033873734142265, 2.302647158989675, 2.3030447595233787], "accuracy": [0.09259014576673508, 0.09100515395402908, 0.09060890227556229, 0.08942015469074249, 0.09047681838274002, 0.09047681838274002], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [0, 2, 3, 1, 2, 1, 2, 2, 2, 0, 2, 1, 0, 1, 3, 0], [30, 8, 57, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 3, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, sigma))", "other_info": {"loss": [2.30004890433329, 2.3030740435034325, 2.3034023239690993, 2.3033873734142265, 2.302647158989675, 2.3030447595233787], "accuracy": [0.09259014576673508, 0.09100515395402908, 0.09060890227556229, 0.08942015469074249, 0.09047681838274002, 0.09047681838274002], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [3, 4, 2, 7, 8, 0, 1, 0, 0, 3, 8, 5, 8, 9, 8, 2, 6, 5, 2, 8, 7, 2, 4, 9, 5], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 57, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 5, 4, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.035999998450279236, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 4, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(beta), tf.math.square(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.300192942031701, 2.3035658293585373, 2.3042398289194383, 2.3045760030208595, 2.304193918809852, 2.30493153440576], "accuracy": [0.09232597798109055, 0.08981640636920929, 0.0886276587843895, 0.0866464152932167, 0.0866464152932167, 0.08730682730674744], "val_loss": [1.9715533937726701, 1.9718734196254186, 1.9721931729997908, 1.9725160598754883, 1.9728400366646903, 1.973163332257952], "val_accuracy": [0.038333334028720856, 0.035999998450279236, 0.03433333337306976, 0.03233333304524422, 0.03099999949336052, 0.028999999165534973]}}]