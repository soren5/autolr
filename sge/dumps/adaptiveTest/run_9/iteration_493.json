[{"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 6, 1, 4, 6, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 1, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 56, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [1, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8468571305274963, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.220944881439209, 2.1038360595703125, 1.6675989627838135, 1.3160439729690552, 1.1257601976394653, 0.9069022536277771, 0.7849146723747253, 0.725378155708313, 0.7357641458511353, 0.6876781582832336, 0.6374661922454834, 0.6452011466026306, 0.6175776720046997, 0.6234239339828491, 0.5774145126342773, 0.5935168266296387, 0.564098596572876, 0.5324265360832214, 0.5469310283660889, 0.5295929908752441, 0.5251631736755371, 0.5036900639533997, 0.48066818714141846, 0.4957827031612396, 0.47908905148506165, 0.47558724880218506, 0.4627600312232971, 0.43995165824890137, 0.45211201906204224, 0.45576226711273193, 0.4357506334781647, 0.4243095815181732, 0.4211443066596985, 0.4032139480113983, 0.40350615978240967, 0.4214334785938263, 0.4028574526309967, 0.3965599238872528, 0.4183242619037628, 0.37510451674461365, 0.3991934657096863, 0.3778071403503418, 0.40492814779281616], "accuracy": [0.2996962070465088, 0.26826047897338867, 0.445779949426651, 0.516180157661438, 0.5880332589149475, 0.6431118845939636, 0.6976621150970459, 0.7218332886695862, 0.719852089881897, 0.7368907928466797, 0.7598732113838196, 0.7585523724555969, 0.7707040309906006, 0.7660810947418213, 0.785101056098938, 0.7837802171707153, 0.791969358921051, 0.8038568496704102, 0.8021397590637207, 0.7969884872436523, 0.8010830879211426, 0.8157442808151245, 0.8304054737091064, 0.8132346868515015, 0.8248580098152161, 0.8248580098152161, 0.8308017253875732, 0.8389908671379089, 0.8356888294219971, 0.8302733898162842, 0.8376700282096863, 0.8474441766738892, 0.8461233377456665, 0.8557654023170471, 0.8529917001724243, 0.8446704745292664, 0.8529917001724243, 0.8507462739944458, 0.8448025584220886, 0.8648791313171387, 0.8467837572097778, 0.8631620407104492, 0.850350022315979], "val_loss": [1.9768164157867432, 1.517688512802124, 1.4530693292617798, 1.3088879585266113, 0.811570942401886, 0.789432942867279, 0.6719444394111633, 0.6289056539535522, 0.6231382489204407, 0.6306771636009216, 0.6217385530471802, 0.5315819382667542, 0.5127118229866028, 0.5171656608581543, 0.5021830201148987, 0.4993451237678528, 0.4866504669189453, 0.4638217091560364, 0.46956518292427063, 0.4971669912338257, 0.48277759552001953, 0.4364126920700073, 0.4634239077568054, 0.43291208148002625, 0.4158855080604553, 0.45752421021461487, 0.42033371329307556, 0.40669938921928406, 0.40937358140945435, 0.4118959903717041, 0.44877779483795166, 0.3903595805168152, 0.41710057854652405, 0.4123595356941223, 0.3920394778251648, 0.3721123933792114, 0.395594984292984, 0.37856167554855347, 0.40697917342185974, 0.37797626852989197, 0.3875141143798828, 0.4596370756626129, 0.3736382722854614], "val_accuracy": [0.3426666557788849, 0.5176666378974915, 0.429666668176651, 0.5513333082199097, 0.6633333563804626, 0.699999988079071, 0.7409999966621399, 0.7540000081062317, 0.7413333058357239, 0.7546666860580444, 0.7519999742507935, 0.8056666851043701, 0.8086666464805603, 0.7953333258628845, 0.8143333196640015, 0.8140000104904175, 0.8076666593551636, 0.8289999961853027, 0.8193333148956299, 0.8103333115577698, 0.8173333406448364, 0.8366666436195374, 0.831333339214325, 0.843666672706604, 0.8420000076293945, 0.8173333406448364, 0.8506666421890259, 0.8476666808128357, 0.8379999995231628, 0.8399999737739563, 0.831333339214325, 0.8529999852180481, 0.846666693687439, 0.8410000205039978, 0.8476666808128357, 0.8633333444595337, 0.8486666679382324, 0.8676666617393494, 0.8453333377838135, 0.8616666793823242, 0.8526666760444641, 0.8169999718666077, 0.8633333444595337]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 6, 8, 5, 6, 0, 4, 9, 3, 3, 2, 4, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 2, 1, 0, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 40, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8399999737739563, "mapping_values": [1, 10, 10, 6, 4, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(alpha, grad)), tf.math.square(tf.math.add(alpha, grad)))), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(alpha)), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2209386825561523, 2.137256383895874, 1.5100351572036743, 1.1944831609725952, 1.0161627531051636, 0.8636667132377625, 0.7725353837013245, 0.7465536594390869, 0.6948933601379395, 0.705317497253418, 0.6559653282165527, 0.641076922416687, 0.6291012167930603, 0.6022621393203735, 0.5557122826576233, 0.5807567834854126, 0.5857338309288025, 0.5501307845115662, 0.5378689169883728, 0.5342704653739929, 0.5179890990257263, 0.4925699830055237, 0.4675033986568451, 0.48356589674949646, 0.4793998599052429, 0.4625895023345947, 0.46323439478874207, 0.4415215849876404, 0.4578979015350342, 0.44109588861465454, 0.42791131138801575, 0.4191620945930481, 0.4164893627166748, 0.39916104078292847], "accuracy": [0.29982829093933105, 0.26244881749153137, 0.4710077941417694, 0.5560691952705383, 0.6026945114135742, 0.6646413803100586, 0.7025492191314697, 0.7123233675956726, 0.7339849472045898, 0.72672039270401, 0.7510236501693726, 0.759080708026886, 0.7655527591705322, 0.7749306559562683, 0.7971205711364746, 0.7864218950271606, 0.7808743715286255, 0.7981772422790527, 0.8021397590637207, 0.7917051911354065, 0.8033285140991211, 0.8168009519577026, 0.8321225643157959, 0.8189142942428589, 0.8310658931732178, 0.8325188159942627, 0.8276317715644836, 0.839519202709198, 0.8296129703521729, 0.8392550349235535, 0.8388587832450867, 0.8467837572097778, 0.8507462739944458, 0.8521991968154907], "val_loss": [1.9755127429962158, 1.2982583045959473, 1.4251058101654053, 0.9805135130882263, 0.7503514885902405, 0.7269753217697144, 0.6754653453826904, 0.6702650785446167, 0.6002126336097717, 0.5887215733528137, 0.6326162219047546, 0.5419778823852539, 0.5359110832214355, 0.5113975405693054, 0.5254824757575989, 0.5002097487449646, 0.4736070930957794, 0.47432589530944824, 0.4766691029071808, 0.4906753599643707, 0.45973074436187744, 0.4251498878002167, 0.43301984667778015, 0.4259564280509949, 0.40284186601638794, 0.45164892077445984, 0.41992881894111633, 0.4840170443058014, 0.3963317573070526, 0.4051658809185028, 0.45660844445228577, 0.3942699432373047, 0.4069567024707794, 0.42865511775016785], "val_accuracy": [0.343666672706604, 0.5376666784286499, 0.5423333048820496, 0.5889999866485596, 0.7143333554267883, 0.7089999914169312, 0.7393333315849304, 0.746666669845581, 0.7593333125114441, 0.7726666927337646, 0.7456666827201843, 0.7876666784286499, 0.7860000133514404, 0.7919999957084656, 0.7940000295639038, 0.812333345413208, 0.8163333535194397, 0.8236666917800903, 0.8033333420753479, 0.8119999766349792, 0.8326666951179504, 0.840666651725769, 0.8456666469573975, 0.8510000109672546, 0.8523333072662354, 0.8180000185966492, 0.8529999852180481, 0.8076666593551636, 0.8560000061988831, 0.8353333473205566, 0.8266666531562805, 0.8506666421890259, 0.8500000238418579, 0.8306666612625122]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 6, 8, 5, 6, 0, 4, 9, 3, 3, 2, 4, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 1, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 56, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [1, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8217142820358276, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.220937728881836, 2.1347787380218506, 1.5605738162994385, 1.1835674047470093, 0.9558814167976379, 0.8718871474266052, 0.8096033930778503, 0.7487307190895081, 0.7060221433639526, 0.6838113069534302, 0.6648091673851013, 0.6460109949111938, 0.6160842180252075, 0.6147090792655945, 0.571601927280426, 0.576529860496521, 0.59328693151474, 0.5542877316474915, 0.5412557125091553, 0.5310218334197998, 0.521117091178894, 0.500734269618988, 0.47605058550834656, 0.48872140049934387, 0.4798164367675781, 0.46769294142723083, 0.4612715244293213, 0.43946945667266846, 0.4569231867790222, 0.45530223846435547], "accuracy": [0.29982829093933105, 0.26284506916999817, 0.460969477891922, 0.5562012791633606, 0.6394135355949402, 0.6686038970947266, 0.6905296444892883, 0.7055870890617371, 0.7372870445251465, 0.7413815855979919, 0.7504953145980835, 0.7564390301704407, 0.7683265209197998, 0.7726852297782898, 0.7864218950271606, 0.7924976944923401, 0.7763835787773132, 0.7947431206703186, 0.800818920135498, 0.7951393723487854, 0.8001585006713867, 0.8158763647079468, 0.8313300609588623, 0.8165367841720581, 0.8284242749214172, 0.8289526104927063, 0.8249900937080383, 0.8417646288871765, 0.8269713521003723, 0.8323867321014404], "val_loss": [1.9756790399551392, 1.3068238496780396, 1.154941439628601, 0.8438019752502441, 0.7725810408592224, 0.7370043992996216, 0.6591790914535522, 0.6553365588188171, 0.6251020431518555, 0.5906081795692444, 0.6012898683547974, 0.5432075262069702, 0.5351988077163696, 0.51739501953125, 0.49959099292755127, 0.5002148151397705, 0.4861142039299011, 0.4698244631290436, 0.4915502965450287, 0.47941040992736816, 0.46042048931121826, 0.4261726438999176, 0.4429383873939514, 0.4227030575275421, 0.40950867533683777, 0.4381290674209595, 0.4131688177585602, 0.4453345239162445, 0.40679922699928284, 0.40099242329597473], "val_accuracy": [0.343666672706604, 0.5413333177566528, 0.593999981880188, 0.6946666836738586, 0.6943333148956299, 0.7200000286102295, 0.7459999918937683, 0.7549999952316284, 0.7429999709129333, 0.7710000276565552, 0.7693333625793457, 0.7886666655540466, 0.7889999747276306, 0.7910000085830688, 0.8163333535194397, 0.8083333373069763, 0.812666654586792, 0.8263333439826965, 0.8009999990463257, 0.8163333535194397, 0.8306666612625122, 0.8420000076293945, 0.8420000076293945, 0.8510000109672546, 0.8519999980926514, 0.8213333487510681, 0.8506666421890259, 0.8253333568572998, 0.8479999899864197, 0.8450000286102295]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 6, 6, 5, 6, 0, 4, 9, 3, 3, 2, 4, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 1, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 56, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8208571672439575, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2209112644195557, 2.008009195327759, 1.5588878393173218, 1.1268638372421265, 0.9559926986694336, 0.8475276231765747, 0.8410624861717224, 0.7264430522918701, 0.7229627966880798, 0.6976677179336548, 0.6762955784797668, 0.6445714831352234, 0.6242030262947083, 0.6207507252693176, 0.5737994313240051, 0.580629289150238, 0.564228892326355, 0.5356759428977966, 0.5381245017051697, 0.5390759110450745, 0.5327218770980835, 0.5107483863830566, 0.4797893166542053, 0.49145859479904175, 0.47897064685821533, 0.4667125642299652, 0.45752036571502686, 0.4398685693740845, 0.46650657057762146, 0.4438617527484894], "accuracy": [0.2995641231536865, 0.30762118101119995, 0.46704530715942383, 0.572579562664032, 0.6302998065948486, 0.6818121671676636, 0.6807554960250854, 0.7220974564552307, 0.7224937081336975, 0.728701651096344, 0.7441553473472595, 0.7589486241340637, 0.7650244235992432, 0.7646281719207764, 0.7845727205276489, 0.783119797706604, 0.7882710099220276, 0.8017435073852539, 0.8057059645652771, 0.7910447716712952, 0.7985734939575195, 0.8098005652427673, 0.8289526104927063, 0.8144234418869019, 0.8286884427070618, 0.83119797706604, 0.8286884427070618, 0.839519202709198, 0.8253863453865051, 0.8391229510307312], "val_loss": [1.9726468324661255, 1.578267216682434, 0.958473801612854, 0.9608281254768372, 0.8424572944641113, 0.7139536142349243, 0.7308813333511353, 0.6315147876739502, 0.6455613374710083, 0.609569251537323, 0.6410388946533203, 0.5476673245429993, 0.5517562031745911, 0.5055806636810303, 0.525187075138092, 0.5050181150436401, 0.48960164189338684, 0.4692089557647705, 0.49328458309173584, 0.4915342330932617, 0.4626810848712921, 0.44392818212509155, 0.44987553358078003, 0.43900808691978455, 0.40692487359046936, 0.45206770300865173, 0.42184022068977356, 0.4303419888019562, 0.4045092463493347, 0.40098947286605835], "val_accuracy": [0.34566667675971985, 0.5233333110809326, 0.6516666412353516, 0.6243333220481873, 0.6399999856948853, 0.7229999899864197, 0.7226666808128357, 0.7599999904632568, 0.7409999966621399, 0.7753333449363708, 0.7450000047683716, 0.7866666913032532, 0.7820000052452087, 0.8006666898727417, 0.7816666960716248, 0.8066666722297668, 0.8006666898727417, 0.828000009059906, 0.8119999766349792, 0.8166666626930237, 0.8349999785423279, 0.8339999914169312, 0.8346666693687439, 0.843999981880188, 0.8533333539962769, 0.8193333148956299, 0.8453333377838135, 0.8323333263397217, 0.8506666421890259, 0.8460000157356262]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 6, 1, 4, 6, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 1, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 56, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [1, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.7874285578727722, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.071302652359009, 1.6830905675888062, 1.446861743927002, 1.08897066116333, 0.8646080493927002, 0.7922736406326294, 0.741614043712616, 0.7167021632194519, 0.6589064002037048, 0.6599774956703186, 0.6391040682792664, 0.5994223356246948, 0.5802369117736816, 0.549651026725769, 0.5567643642425537, 0.5310138463973999, 0.5367183089256287], "accuracy": [0.3077532649040222, 0.41223087906837463, 0.528992235660553, 0.5996565818786621, 0.6778497099876404, 0.6984546184539795, 0.7210407853126526, 0.7293620109558105, 0.7523444890975952, 0.7461365461349487, 0.7534011602401733, 0.7708360552787781, 0.7713643908500671, 0.793950617313385, 0.785629391670227, 0.8043851256370544, 0.7961959838867188], "val_loss": [1.8639953136444092, 1.3639057874679565, 1.0573667287826538, 0.7782136797904968, 0.8723593950271606, 0.6600461602210999, 0.7294272184371948, 0.5690550208091736, 0.6286042332649231, 0.596664309501648, 0.5322064161300659, 0.49867358803749084, 0.48196715116500854, 0.4879975914955139, 0.5084905028343201, 0.4943082630634308, 0.4909543991088867], "val_accuracy": [0.3190000057220459, 0.5176666378974915, 0.5910000205039978, 0.6893333196640015, 0.6476666927337646, 0.7306666374206543, 0.7149999737739563, 0.7793333530426025, 0.7426666617393494, 0.7763333320617676, 0.7896666526794434, 0.8100000023841858, 0.8050000071525574, 0.7996666431427002, 0.8023333549499512, 0.7850000262260437, 0.7986666560173035]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 6, 1, 4, 6, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 2, 1, 0, 2, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 40, 39, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [27, 57, 40, 62]], "fitness": -0.7820000052452087, "mapping_values": [1, 11, 11, 5, 6, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.subtract(tf.math.add(alpha, grad), tf.math.pow(tf.math.add(alpha, grad), tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))), grad), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2939095497131348, 2.2723159790039062, 2.2479498386383057, 2.221142292022705, 2.1848113536834717, 2.139875650405884, 2.0832102298736572, 2.0078999996185303, 1.9136221408843994, 1.8111650943756104, 1.7037162780761719, 1.5920510292053223, 1.5055135488510132, 1.4140949249267578, 1.3407349586486816, 1.2885091304779053, 1.2150037288665771, 1.1799967288970947, 1.15050208568573, 1.1044503450393677, 1.082313895225525, 1.0442156791687012, 1.0292067527770996, 1.0062265396118164, 0.9866554141044617, 0.9569182395935059, 0.9477589130401611, 0.9388012886047363, 0.9196796417236328, 0.9068005681037903, 0.9061102867126465, 0.8808414936065674, 0.8749776482582092, 0.8774058818817139, 0.8683441877365112, 0.8473073244094849, 0.8460592031478882, 0.8426331281661987, 0.8261108994483948, 0.8196918368339539, 0.8091002702713013, 0.8082168102264404, 0.8001722097396851, 0.7978248000144958, 0.8014878630638123, 0.7850958704948425, 0.7858253121376038, 0.7827661037445068, 0.7853747010231018, 0.7730425596237183, 0.7574092745780945, 0.7709231972694397, 0.7529638409614563, 0.7593639492988586, 0.7472110986709595, 0.75148606300354, 0.7424337267875671, 0.7402037978172302, 0.7314102649688721, 0.7303591966629028, 0.7356125712394714, 0.7279618978500366, 0.7225742340087891, 0.7165772914886475, 0.7156385183334351, 0.7153851985931396, 0.707264244556427, 0.7019002437591553, 0.7133092880249023, 0.7033488750457764, 0.7061835527420044, 0.7025834918022156, 0.7040435075759888, 0.705594539642334, 0.6991129517555237, 0.6883326172828674, 0.6931543946266174, 0.6905860304832458, 0.6880975365638733, 0.6848626136779785, 0.6832844018936157, 0.678231954574585, 0.6804226636886597, 0.6732140779495239, 0.672174334526062, 0.6683768033981323, 0.6604865789413452, 0.6683079600334167, 0.6607262492179871, 0.6565951704978943, 0.6648915410041809, 0.6559247970581055, 0.653103768825531, 0.64936763048172, 0.6500331163406372, 0.6526210308074951, 0.651753842830658, 0.6452134847640991, 0.651750385761261, 0.6513887643814087], "accuracy": [0.11081759631633759, 0.17316074669361115, 0.22652225196361542, 0.2769779562950134, 0.3225465714931488, 0.3541143834590912, 0.3859463632106781, 0.4107779562473297, 0.4367983043193817, 0.4539690911769867, 0.4772156774997711, 0.5045568346977234, 0.5123497843742371, 0.535860538482666, 0.5538238286972046, 0.5622771382331848, 0.5875049233436584, 0.5980715751647949, 0.600581169128418, 0.6159027814865112, 0.6198652982711792, 0.633469820022583, 0.6419231295585632, 0.6457535624504089, 0.6513010263442993, 0.666358470916748, 0.6662263870239258, 0.6688680648803711, 0.6715096831321716, 0.6720380187034607, 0.6818121671676636, 0.6893408894538879, 0.693831741809845, 0.6876237988471985, 0.6919825673103333, 0.6977941989898682, 0.7000396251678467, 0.695813000202179, 0.7040021419525146, 0.7054550051689148, 0.7092854380607605, 0.7132478952407837, 0.7125874757766724, 0.7172104120254517, 0.7107383608818054, 0.7147008180618286, 0.713908314704895, 0.7145687341690063, 0.7201162576675415, 0.7201162576675415, 0.7268524765968323, 0.7187954187393188, 0.7301545143127441, 0.7210407853126526, 0.7273808121681213, 0.7220974564552307, 0.7318716049194336, 0.7346453666687012, 0.735569953918457, 0.7322678565979004, 0.7317395210266113, 0.7388719916343689, 0.7351737022399902, 0.7326641082763672, 0.7401928305625916, 0.7442874312400818, 0.7456082701683044, 0.7432307600975037, 0.7417778372764587, 0.7354378700256348, 0.7405890822410583, 0.7423061728477478, 0.7457403540611267, 0.7386078238487244, 0.7504953145980835, 0.750231146812439, 0.7489103078842163, 0.7461365461349487, 0.7489103078842163, 0.7526086568832397, 0.7442874312400818, 0.7483819723129272, 0.7485140562057495, 0.7503632307052612, 0.7548540234565735, 0.7493065595626831, 0.7623828053474426, 0.748249888420105, 0.7553823590278625, 0.7577598690986633, 0.7567031979560852, 0.7588165402412415, 0.7601373791694641, 0.7613261342048645, 0.761590301990509, 0.7582882046699524, 0.759609043598175, 0.7648923397064209, 0.7618544697761536, 0.7614582180976868], "val_loss": [2.2763211727142334, 2.251835346221924, 2.2238731384277344, 2.1897292137145996, 2.145124912261963, 2.08687686920166, 2.013162136077881, 1.919620156288147, 1.8065569400787354, 1.6811745166778564, 1.552069067955017, 1.4270856380462646, 1.317751407623291, 1.224544882774353, 1.1463619470596313, 1.0837773084640503, 1.031770944595337, 0.986646294593811, 0.949472188949585, 0.9171993732452393, 0.8913609385490417, 0.8647084832191467, 0.8488181233406067, 0.8298560976982117, 0.8143726587295532, 0.7985737323760986, 0.7854535579681396, 0.7737369537353516, 0.7642003297805786, 0.7543798089027405, 0.7458135485649109, 0.7370203733444214, 0.7288274168968201, 0.7226901054382324, 0.7153776288032532, 0.7094619274139404, 0.7035678625106812, 0.697495698928833, 0.6900668144226074, 0.6870312690734863, 0.6826941967010498, 0.6772672533988953, 0.6722764372825623, 0.6668627858161926, 0.6624680757522583, 0.6579399704933167, 0.6561480164527893, 0.6523861289024353, 0.6511960625648499, 0.6458390355110168, 0.641934871673584, 0.6394796967506409, 0.6338850259780884, 0.6330470442771912, 0.6284630298614502, 0.626207172870636, 0.6243171095848083, 0.6203347444534302, 0.6189374327659607, 0.6175125241279602, 0.6141774654388428, 0.6104743480682373, 0.6079972982406616, 0.6053404211997986, 0.6038352251052856, 0.6019600033760071, 0.6000680327415466, 0.5961295962333679, 0.5937793254852295, 0.5913379788398743, 0.5882759094238281, 0.5862328410148621, 0.5860527157783508, 0.584223210811615, 0.5823429226875305, 0.5800027847290039, 0.5777830481529236, 0.5754333138465881, 0.5750599503517151, 0.5739756226539612, 0.5723003149032593, 0.5695064067840576, 0.568247377872467, 0.565686821937561, 0.565874457359314, 0.5635526776313782, 0.5609903335571289, 0.5613684058189392, 0.5594835877418518, 0.5589606165885925, 0.5564384460449219, 0.5547518134117126, 0.5533258318901062, 0.551775336265564, 0.55011385679245, 0.5493391752243042, 0.5497376918792725, 0.547124445438385, 0.5475934743881226, 0.5452532172203064], "val_accuracy": [0.2199999988079071, 0.34066668152809143, 0.37833333015441895, 0.4259999990463257, 0.4519999921321869, 0.4896666705608368, 0.5193333625793457, 0.534333348274231, 0.5566666722297668, 0.5709999799728394, 0.581333339214325, 0.6113333106040955, 0.6303333044052124, 0.6583333611488342, 0.6616666913032532, 0.6763333082199097, 0.6830000281333923, 0.6946666836738586, 0.6986666917800903, 0.7016666531562805, 0.7026666402816772, 0.7089999914169312, 0.7046666741371155, 0.7123333215713501, 0.7153333425521851, 0.7126666903495789, 0.7236666679382324, 0.7223333120346069, 0.7273333072662354, 0.7266666889190674, 0.734000027179718, 0.7279999852180481, 0.7350000143051147, 0.7390000224113464, 0.7436666488647461, 0.7446666955947876, 0.746666669845581, 0.7446666955947876, 0.7480000257492065, 0.749666690826416, 0.7463333606719971, 0.753000020980835, 0.7570000290870667, 0.7580000162124634, 0.7599999904632568, 0.7606666684150696, 0.7620000243186951, 0.762333333492279, 0.7590000033378601, 0.7603333592414856, 0.7609999775886536, 0.7639999985694885, 0.7649999856948853, 0.7603333592414856, 0.7643333077430725, 0.762666642665863, 0.765999972820282, 0.7666666507720947, 0.768666684627533, 0.7696666717529297, 0.7673333287239075, 0.7703333497047424, 0.7703333497047424, 0.7706666588783264, 0.7699999809265137, 0.7713333368301392, 0.7713333368301392, 0.7739999890327454, 0.777999997138977, 0.7796666622161865, 0.7796666622161865, 0.778333306312561, 0.7793333530426025, 0.7820000052452087, 0.7816666960716248, 0.7826666831970215, 0.7829999923706055, 0.7826666831970215, 0.7793333530426025, 0.7826666831970215, 0.7826666831970215, 0.7850000262260437, 0.7850000262260437, 0.7873333096504211, 0.7860000133514404, 0.7850000262260437, 0.7879999876022339, 0.7850000262260437, 0.7863333225250244, 0.7900000214576721, 0.7866666913032532, 0.7900000214576721, 0.7896666526794434, 0.7903333306312561, 0.7919999957084656, 0.7900000214576721, 0.7889999747276306, 0.7916666865348816, 0.7919999957084656, 0.7946666479110718]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 6, 1, 4, 6, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 2, 1, 0, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 56, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [1, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.3822857141494751, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), grad)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.360327959060669, 2.3059933185577393, 2.252152681350708, 2.9499566555023193, 2.304779052734375, 2.3004260063171387, 2.233684778213501, 2.5666182041168213, 2.304457187652588, 2.3030710220336914, 2.3032822608947754, 2.3029487133026123], "accuracy": [0.19561484456062317, 0.17038699984550476, 0.177255317568779, 0.1628582775592804, 0.10791176557540894, 0.1162329912185669, 0.17831197381019592, 0.12429005652666092, 0.09760929644107819, 0.10302469879388809, 0.09496764093637466, 0.10210011899471283], "val_loss": [2.267163038253784, 2.2961182594299316, 2.1063694953918457, 2.3078348636627197, 2.3021140098571777, 2.2756457328796387, 3.877112865447998, 2.305483341217041, 2.303138256072998, 2.3027503490448, 2.302802085876465, 2.3025732040405273], "val_accuracy": [0.1966666728258133, 0.19699999690055847, 0.17533333599567413, 0.10233332961797714, 0.13566666841506958, 0.19566667079925537, 0.3840000033378601, 0.10066666454076767, 0.10066666454076767, 0.10133333504199982, 0.10133333504199982, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [8, 6, 8, 0, 6, 0, 4, 9, 3, 3, 2, 4, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 1, 1, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 56, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.3822857141494751, "mapping_values": [1, 6, 6, 4, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.362786054611206, 2.30959415435791, 2.262904405593872, 2.269226551055908, 2.480701208114624, 2.3034021854400635, 2.2076916694641113, 2.0875346660614014, 2.4348437786102295, 2.3049087524414062, 2.2468039989471436, 2.3053884506225586, 2.2772769927978516], "accuracy": [0.19561484456062317, 0.16814158856868744, 0.1728965789079666, 0.13934750854969025, 0.24976885318756104, 0.11636507511138916, 0.19455818831920624, 0.2995641231536865, 0.15770703554153442, 0.09681680053472519, 0.175670325756073, 0.11795007437467575, 0.20103025436401367], "val_loss": [2.266333818435669, 2.2989351749420166, 2.306882858276367, 2.155912399291992, 2.312560796737671, 2.264784812927246, 2.1838538646698, 1.930747389793396, 2.3041491508483887, 2.2964513301849365, 2.2894814014434814, 2.2577457427978516, 2.3045461177825928], "val_accuracy": [0.19366666674613953, 0.12033333629369736, 0.10266666859388351, 0.21666666865348816, 0.10066666454076767, 0.17766666412353516, 0.18266665935516357, 0.3720000088214874, 0.10133333504199982, 0.10133333504199982, 0.09166666865348816, 0.19233334064483643, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 6, 8, 5, 6, 0, 4, 9, 3, 3, 2, 4, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 1, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 40, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [1, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 3, 4, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), alpha), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.242773879456057e+23, 7147.24560546875, 12572.125, 18018.01953125, 23511.265625, 28790.005859375], "accuracy": [0.09153348207473755, 0.09998679161071777, 0.09998679161071777, 0.09826971590518951, 0.09998679161071777, 0.09998679161071777], "val_loss": [4837.02392578125, 10311.0859375, 15726.4482421875, 21166.685546875, 26562.8984375, 31899.994140625], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09700000286102295, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 6, 1, 4, 6, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 2, 1, 0, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 56, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [2, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [0, 0, 0, 2, 3, 3, 2], [96, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [673821248.0, 13001114624.0, 60479569920.0, 168935292928.0, 358231834624.0, 664137236480.0], "accuracy": [0.0948355570435524, 0.09576013684272766, 0.09893012791872025, 0.09972262382507324, 0.10408136248588562, 0.1002509593963623], "val_loss": [3073522688.0, 24579264512.0, 82944770048.0, 196598677504.0, 383968968704.0, 663484956672.0], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 1, 8, 5, 6, 0, 4, 9, 3, 3, 2, 4, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 2, 1, 0, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 40, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [4, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [27, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 8, 4, 2, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 7, 3, 4, 2], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.subtract(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.square(tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, alpha)))), tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [8, 6, 8, 0, 6, 0, 4, 9, 3, 3, 2, 4, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [1, 1, 1, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 56, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [0, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 1], [3, 6, 9, 9, 7], [7, 0, 6], [74, 44], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [0, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 8, 4, 4, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), beta)))", "other_info": {"loss": [2.3032150268554688, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 6, 8, 5, 6, 0, 4, 9, 3, 3, 2, 4, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [3, 2, 2, 0, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [93, 56, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 2, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 8, 4, 4, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.add(tf.math.pow(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 6, 8, 5, 6, 1, 4, 9, 3, 3, 2, 4, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 2, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 56, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [8, 7, 2, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [86, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 47, 47, 26, 21, 11, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.math.add(alpha, grad)))))), tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(grad, tf.math.pow(grad, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(grad, tf.math.multiply(tf.math.pow(tf.math.multiply(tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.square(grad)), tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.pow(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))))), grad), grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 6, 1, 4, 6, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [3, 1, 1, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 56, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [1, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 3, 2, 4, 2, 1, 2, 3], [0, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 2], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, alpha)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [106780368.0, 2059189888.0, 9577561088.0, 26750711808.0, 56723296256.0, 105157812224.0], "accuracy": [0.0948355570435524, 0.09576013684272766, 0.09893012791872025, 0.09959053993225098, 0.10408136248588562, 0.1002509593963623], "val_loss": [486902464.0, 3892601088.0, 13134596096.0, 31130331136.0, 60797173760.0, 105052798976.0], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [8, 6, 7, 0, 6, 0, 4, 9, 3, 3, 2, 4, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [3, 1, 1, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 56, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [2, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [0, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(grad, alpha), alpha)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 6, 1, 4, 6, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 1, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [96, 56, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(9.99916780e-01, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08083476126194, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 6, 8, 5, 6, 0, 4, 9, 3, 3, 2, 4, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 0, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 40, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [0, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [27, 57, 40, 62]], "fitness": -0.09971428662538528, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.301243305206299, 2.3022687435150146, 2.302581310272217, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09047681838274002, 0.10157178342342377, 0.10051512718200684, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3020572662353516, 2.3025851249694824, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.0949999988079071, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 7, 8, 5, 6, 0, 4, 9, 3, 3, 2, 4, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 3, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [0, 56, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [5, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.06714285910129547, "mapping_values": [1, 5, 5, 2, 3, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 14, 7, 7, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(sigma, tf.math.add(tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(beta, sigma), sigma))), beta)))", "other_info": {"loss": [2.3027384281158447, 2.302884578704834, 2.3016207218170166, 2.3020708560943604, 2.300682783126831, 2.3012261390686035, 2.302086353302002, 2.301335334777832, 2.300973653793335, 2.3020732402801514, 2.3019893169403076, 2.300476551055908, 2.3012068271636963, 2.299955368041992, 2.3009865283966064, 2.301893472671509, 2.29964017868042, 2.3000259399414062, 2.3011512756347656, 2.3010094165802, 2.3007092475891113, 2.3003950119018555, 2.2988388538360596, 2.3005034923553467, 2.3007524013519287, 2.2995827198028564, 2.300165891647339, 2.3005237579345703, 2.299997091293335, 2.3007211685180664, 2.3016622066497803, 2.2994508743286133, 2.300931692123413, 2.300231695175171, 2.3006460666656494, 2.3006796836853027, 2.299374580383301, 2.3001208305358887, 2.298943281173706, 2.299671173095703, 2.2989015579223633, 2.3005452156066895, 2.2997946739196777, 2.3009161949157715, 2.2994751930236816, 2.2991597652435303, 2.2996153831481934], "accuracy": [0.08770307898521423, 0.09655263274908066, 0.09192973375320435, 0.09391097724437714, 0.09972262382507324, 0.09087307006120682, 0.09325055778026581, 0.08889182657003403, 0.09734513610601425, 0.09126931428909302, 0.0878351628780365, 0.09734513610601425, 0.0948355570435524, 0.09509972482919693, 0.0940430611371994, 0.09074098616838455, 0.09351472556591034, 0.09840179979801178, 0.09536388516426086, 0.09655263274908066, 0.09655263274908066, 0.09668471664190292, 0.09853387624025345, 0.09351472556591034, 0.09576013684272766, 0.09906221181154251, 0.09496764093637466, 0.0936468094587326, 0.09681680053472519, 0.0952318087220192, 0.09430722147226334, 0.09800554811954498, 0.09998679161071777, 0.09628847241401672, 0.09747721254825592, 0.09681680053472519, 0.09893012791872025, 0.09457138925790787, 0.10474177449941635, 0.10315678268671036, 0.10117553919553757, 0.09840179979801178, 0.10130762308835983, 0.0948355570435524, 0.10394927859306335, 0.1006472036242485, 0.09853387624025345], "val_loss": [2.2997405529022217, 2.2994866371154785, 2.2992913722991943, 2.2991130352020264, 2.299013376235962, 2.298880100250244, 2.298738956451416, 2.298617362976074, 2.298496723175049, 2.298419713973999, 2.298332929611206, 2.2982678413391113, 2.2982070446014404, 2.298157215118408, 2.2981135845184326, 2.2980926036834717, 2.2981016635894775, 2.2980763912200928, 2.298062562942505, 2.2980690002441406, 2.2980761528015137, 2.298093795776367, 2.298121690750122, 2.298130750656128, 2.298119068145752, 2.298123359680176, 2.2981348037719727, 2.2981386184692383, 2.2981343269348145, 2.298100471496582, 2.298074245452881, 2.2980592250823975, 2.2980220317840576, 2.2979917526245117, 2.297947406768799, 2.2979164123535156, 2.29789137840271, 2.2978477478027344, 2.2978248596191406, 2.2978062629699707, 2.297818422317505, 2.2977943420410156, 2.2977771759033203, 2.2977678775787354, 2.297766923904419, 2.2977917194366455, 2.2978010177612305], "val_accuracy": [0.04699999839067459, 0.04766666516661644, 0.04800000041723251, 0.04933333396911621, 0.04899999871850014, 0.050999999046325684, 0.052000001072883606, 0.052666667848825455, 0.054666668176651, 0.055666666477918625, 0.05766666680574417, 0.057999998331069946, 0.05833333358168602, 0.05833333358168602, 0.06066666543483734, 0.06066666543483734, 0.06133333221077919, 0.061666667461395264, 0.06300000101327896, 0.06266666948795319, 0.06199999898672104, 0.06366666406393051, 0.06466666609048843, 0.06533333659172058, 0.06499999761581421, 0.06800000369548798, 0.06866666674613953, 0.070333331823349, 0.07199999690055847, 0.07233333587646484, 0.07266666740179062, 0.07366666942834854, 0.07233333587646484, 0.0729999989271164, 0.07433333247900009, 0.07533333450555801, 0.07699999958276749, 0.0793333351612091, 0.0793333351612091, 0.08100000023841858, 0.08233333379030228, 0.08366666734218597, 0.08366666734218597, 0.08366666734218597, 0.08266666531562805, 0.08233333379030228, 0.08299999684095383]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [8, 6, 8, 0, 6, 0, 4, 9, 3, 3, 2, 4, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 1, 1, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 56, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [1, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.04085714370012283, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3028364181518555, 2.3032450675964355, 2.3021788597106934, 2.3028604984283447, 2.301553249359131, 2.30228328704834], "accuracy": [0.08717474341392517, 0.09615638852119446, 0.09245806187391281, 0.09272222965955734, 0.09919429570436478, 0.08902391046285629], "val_loss": [2.299954414367676, 2.299954414367676, 2.299954414367676, 2.299954414367676, 2.299954414367676, 2.299954414367676], "val_accuracy": [0.04466666653752327, 0.04466666653752327, 0.04466666653752327, 0.04466666653752327, 0.04466666653752327, 0.04466666653752327]}}]