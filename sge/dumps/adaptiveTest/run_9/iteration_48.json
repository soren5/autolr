[{"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [0, 1, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [1, 0, 0, 1], [0, 1], [1], [7], [], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7914285659790039, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2805460552419135, 2.218627309566161, 2.113781299069573, 1.9292945195781146, 1.6733286071683375, 1.4554169239573995, 1.2892484845675498, 1.1834804467741744, 1.103631324945046, 1.0443860643559664, 0.9964555586255096, 0.9457189090153356, 0.9311987375854076, 0.9001433959159679, 0.8783978498559886, 0.8584370066492611, 0.8439469513970596, 0.8368157190637913, 0.8105526630038583, 0.794406036651366, 0.793828626185077, 0.7813002574776048, 0.7750154450081123, 0.7763766530419479, 0.7494057727102528, 0.7428468356846094, 0.7402689235085399, 0.7306013875444725, 0.732333859652891, 0.7162361721777724, 0.7170771910388157, 0.7140762237289467, 0.7102517182753622, 0.7042681904689999, 0.69620420347509, 0.6891768728548336, 0.6949478402003605, 0.6850004793866719, 0.6745323530907456, 0.6772265789798851, 0.6720500470719333, 0.6630880839049053, 0.6687441517601018, 0.6641664352430848, 0.6579606767737429, 0.6498959732014725, 0.6474073653239395, 0.6480234848462579, 0.650184250038534], "accuracy": [0.15295206010341644, 0.28120461106300354, 0.3675868511199951, 0.422929584980011, 0.4815744161605835, 0.5145951509475708, 0.5626733303070068, 0.5860520601272583, 0.6128648519515991, 0.6338660717010498, 0.646149754524231, 0.6659622192382812, 0.6707172393798828, 0.6767930388450623, 0.6836613416671753, 0.69673752784729, 0.6991150379180908, 0.6964733600616455, 0.7113987803459167, 0.713379979133606, 0.7124554514884949, 0.7186633348464966, 0.7219653725624084, 0.7193237543106079, 0.7313432693481445, 0.7341170310974121, 0.7251353859901428, 0.7358341217041016, 0.7343811988830566, 0.7430986762046814, 0.7408532500267029, 0.7427024245262146, 0.7357020378112793, 0.7391361594200134, 0.746268630027771, 0.7458723783493042, 0.7512878179550171, 0.7498348951339722, 0.7572315335273743, 0.7535332441329956, 0.76106196641922, 0.7561748623847961, 0.7556465268135071, 0.7537974119186401, 0.7555144429206848, 0.7598732113838196, 0.7611940503120422, 0.7651565074920654, 0.7633073329925537], "val_loss": [1.9207244600568498, 1.8458360944475447, 1.7075361183711462, 1.483790363584246, 1.22384136063712, 1.0303572586604528, 0.9075171606881278, 0.8276709488459996, 0.7758744614464896, 0.7372734376362392, 0.7035330704280308, 0.6765251500265939, 0.6610275847571236, 0.645954932485308, 0.6338678087506976, 0.6200132369995117, 0.6103051560265678, 0.6003482001168388, 0.5888026782444545, 0.5818043606621879, 0.57675187928336, 0.5683749573571342, 0.5664776052747454, 0.5619829041617257, 0.5503354583467756, 0.5448830468314034, 0.5430088213511876, 0.5377968379429409, 0.5358650854655674, 0.5281800201960972, 0.5273646286555699, 0.5261903830936977, 0.5182304382324219, 0.5164950404848371, 0.5132175854274205, 0.5102626936776298, 0.507118650845119, 0.5032719884599958, 0.5017271723066058, 0.4990541083472116, 0.502007007598877, 0.49734348910195486, 0.4980175495147705, 0.4897299494062151, 0.49097451141902376, 0.4851572172982352, 0.4905259609222412, 0.48410732405526297, 0.480837277003697], "val_accuracy": [0.3606666624546051, 0.44733333587646484, 0.5253333449363708, 0.5636666417121887, 0.5953333377838135, 0.6460000276565552, 0.6676666736602783, 0.6826666593551636, 0.6933333277702332, 0.70333331823349, 0.7083333134651184, 0.7166666388511658, 0.7229999899864197, 0.7266666889190674, 0.7250000238418579, 0.7329999804496765, 0.7429999709129333, 0.7400000095367432, 0.7463333606719971, 0.75, 0.7453333139419556, 0.75, 0.7546666860580444, 0.7540000081062317, 0.7636666893959045, 0.7613333463668823, 0.7683333158493042, 0.7689999938011169, 0.765666663646698, 0.7689999938011169, 0.7726666927337646, 0.765333354473114, 0.7746666669845581, 0.7743333578109741, 0.7723333239555359, 0.7789999842643738, 0.7796666622161865, 0.7820000052452087, 0.7836666703224182, 0.7893333435058594, 0.7763333320617676, 0.7823333144187927, 0.7873333096504211, 0.7919999957084656, 0.7853333353996277, 0.7910000085830688, 0.7876666784286499, 0.7839999794960022, 0.7913333177566528]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 1, 1], [2, 9], [5, 4, 3], [8, 0, 19], [1, 0, 0, 1], [0, 1], [1], [7], [], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7902857065200806, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.290313085623547, 2.265339091752798, 2.236615969693546, 2.1955503733119377, 2.1400961710587625, 2.0682002009496463, 1.974959326520997, 1.8538571856261528, 1.7241012245955925, 1.593921275391413, 1.488342283077842, 1.3826680352045104, 1.3058205378636583, 1.244332119977989, 1.2011157832424701, 1.149154740664087, 1.1007613271785812, 1.064421192325259, 1.0322341042707437, 1.001230529231355, 0.9827169166768878, 0.9639854092781239, 0.9474640232208871, 0.9273975606544725, 0.912167538261023, 0.8988452328824411, 0.8919336080173255, 0.8683193188223148, 0.8655551569321057, 0.8572331135062935, 0.8452355652563387, 0.8420967260970258, 0.8201107018501878, 0.8208224298679723, 0.8118160665704433, 0.8112773953443347, 0.7995260971223264, 0.7941677661824457, 0.774557695546564, 0.777847041385899, 0.7708028337234645, 0.7625236106570749, 0.7534136017079619, 0.7614528582616017, 0.7563050147360028, 0.7465117758039345, 0.7367600736805728, 0.7386389938894752, 0.7400627134655917, 0.7295503974937099, 0.7343596609245595, 0.7247804019114502, 0.7127422950271256, 0.7165199701166612, 0.7205849433257012, 0.7124332555170781, 0.70806222894267, 0.7057427032402305, 0.7001133575305302, 0.697397470285297, 0.6957845354376215, 0.6884160678164046, 0.6918531884811401, 0.691971354291833, 0.6828317106234604, 0.6767834720358384, 0.6783313481893679, 0.681480398692664, 0.658210025424451, 0.665527256559214, 0.6707199171092989, 0.6706658094912755, 0.6609465713829114, 0.6571683011286766, 0.6651021591770871, 0.6557829771705072, 0.6523879808111119, 0.6488148382531653, 0.6526440914831991], "accuracy": [0.12032756209373474, 0.18755778670310974, 0.25439175963401794, 0.31026285886764526, 0.3579447865486145, 0.3936071991920471, 0.4103817343711853, 0.447761207818985, 0.46849822998046875, 0.5004622936248779, 0.5204068422317505, 0.5400871634483337, 0.5562012791633606, 0.5670320987701416, 0.5840708017349243, 0.594241201877594, 0.6147140264511108, 0.6304318904876709, 0.6330735683441162, 0.6439043879508972, 0.6510368585586548, 0.6552634835243225, 0.6600185036659241, 0.6676793098449707, 0.6740192770957947, 0.6744155287742615, 0.683000922203064, 0.6873596906661987, 0.6886804699897766, 0.6942279934883118, 0.6877558827400208, 0.6940959095954895, 0.7017567157745361, 0.7013604640960693, 0.7051908373832703, 0.7062475085258484, 0.7051908373832703, 0.7127195596694946, 0.7170783281326294, 0.7166820764541626, 0.7176066637039185, 0.7215691208839417, 0.7191916704177856, 0.7239466309547424, 0.7211728692054749, 0.7243428826332092, 0.72672039270401, 0.7275128960609436, 0.7276449799537659, 0.7257958054542542, 0.7298903465270996, 0.7341170310974121, 0.735041618347168, 0.7345132827758789, 0.7329282760620117, 0.7339849472045898, 0.7401928305625916, 0.7434949278831482, 0.7360982894897461, 0.7345132827758789, 0.7404569983482361, 0.7452120184898376, 0.7432307600975037, 0.7432307600975037, 0.7543256878852844, 0.7441553473472595, 0.7506273984909058, 0.7458723783493042, 0.7519482374191284, 0.7528728246688843, 0.7458723783493042, 0.7532690763473511, 0.7560427784919739, 0.7474573850631714, 0.7520803213119507, 0.7556465268135071, 0.7556465268135071, 0.7556465268135071, 0.7547219395637512], "val_loss": [1.946457862854004, 1.9202519144330705, 1.8882474899291992, 1.8453271048409599, 1.7849922180175781, 1.7038928440638952, 1.5995591367994035, 1.4751012665884835, 1.3422902992793493, 1.215024369103568, 1.1070103645324707, 1.02086455481393, 0.9530484335763114, 0.8969721794128418, 0.8536331483295986, 0.8197988952909198, 0.7910988330841064, 0.7644379649843488, 0.7432207209723336, 0.7253070729119437, 0.710099356515067, 0.6950681720461164, 0.6834439890725272, 0.6715119225638253, 0.6625047922134399, 0.6537354333060128, 0.6455140284129551, 0.639130779675075, 0.630798169544765, 0.6239905187061855, 0.6159676143101284, 0.6112121854509626, 0.6048469884055001, 0.6011470556259155, 0.596848624093192, 0.5910281794411796, 0.5873661892754691, 0.5848182780402047, 0.577997122492109, 0.5759654726300921, 0.5720227956771851, 0.5684789419174194, 0.564948388508388, 0.5630736861910138, 0.5604180097579956, 0.5593460117067609, 0.5544717822756086, 0.5523537737982613, 0.5477318593433925, 0.545797484261649, 0.5450762510299683, 0.5417870794023786, 0.5402682679040092, 0.5354760544640678, 0.5348497629165649, 0.5350590603692191, 0.5302948440824237, 0.5285107748849052, 0.5274634872164045, 0.5250823838370187, 0.5252199854169574, 0.520732045173645, 0.5200101137161255, 0.5182132210050311, 0.5161535058702741, 0.5151239292962211, 0.5132730347769601, 0.5121374470846993, 0.5082271269389561, 0.5109853063310895, 0.5081862381526402, 0.5060159649167743, 0.5052086966378349, 0.5064974682671683, 0.5038164002554757, 0.5007483107703072, 0.4996161460876465, 0.4996026413781302, 0.4975232056209019], "val_accuracy": [0.23866666853427887, 0.35733333230018616, 0.40033334493637085, 0.44466665387153625, 0.4833333194255829, 0.5246666669845581, 0.5473333597183228, 0.5653333067893982, 0.5889999866485596, 0.6036666631698608, 0.6323333382606506, 0.6536666750907898, 0.6626666784286499, 0.6736666560173035, 0.6826666593551636, 0.6850000023841858, 0.690666675567627, 0.6966666579246521, 0.703000009059906, 0.703000009059906, 0.7120000123977661, 0.718999981880188, 0.7170000076293945, 0.7200000286102295, 0.722000002861023, 0.7226666808128357, 0.7279999852180481, 0.7229999899864197, 0.7276666760444641, 0.7350000143051147, 0.7336666584014893, 0.7366666793823242, 0.7433333396911621, 0.7413333058357239, 0.7450000047683716, 0.7459999918937683, 0.7476666569709778, 0.7516666650772095, 0.7536666393280029, 0.7556666731834412, 0.7559999823570251, 0.7573333382606506, 0.7566666603088379, 0.7580000162124634, 0.7596666812896729, 0.7566666603088379, 0.7596666812896729, 0.7576666474342346, 0.7630000114440918, 0.7646666765213013, 0.7639999985694885, 0.7683333158493042, 0.7639999985694885, 0.7696666717529297, 0.7696666717529297, 0.7713333368301392, 0.7710000276565552, 0.7746666669845581, 0.7763333320617676, 0.7726666927337646, 0.7723333239555359, 0.7736666798591614, 0.7766666412353516, 0.7756666541099548, 0.7773333191871643, 0.777999997138977, 0.7736666798591614, 0.7773333191871643, 0.7786666750907898, 0.7789999842643738, 0.777999997138977, 0.7820000052452087, 0.7773333191871643, 0.7826666831970215, 0.7820000052452087, 0.7806666493415833, 0.781000018119812, 0.7793333530426025, 0.7806666493415833]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [3, 0, 1, 1], [50], [0, 0, 1, 0, 0, 0, 1, 1], [0, 1, 1, 0, 1, 1], [2, 9, 3, 9], [4, 4, 3], [6, 0, 19], [1, 0, 0, 1], [0, 1], [1], [3], [], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 0, 0, 1, 3, 3], [33, 57]], "fitness": -0.4480000138282776, "mapping_values": [1, 6, 6, 3, 3, 1, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.subtract(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2668531077050766, 2.1711243580770434, 2.0830650275110365, 2.2117542284291734, 2.2994333175132144, 2.339045218283931, 2.394026929109387], "accuracy": [0.17751948535442352, 0.30841368436813354, 0.2740721106529236, 0.16602826118469238, 0.14040417969226837, 0.13168670237064362, 0.1328754425048828], "val_loss": [1.8970771517072404, 1.774045807974679, 1.8038921356201172, 1.8929986272539412, 1.9405060495649065, 1.9754322596958704, 1.996767793382917], "val_accuracy": [0.3959999978542328, 0.40966665744781494, 0.20333333313465118, 0.14733333885669708, 0.11933333426713943, 0.10233332961797714, 0.10133333504199982]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 0, 1, 1], [50], [0, 0, 1, 0, 0, 0, 1, 1], [1, 1, 1, 0, 1, 1], [2, 9, 3, 9], [5, 4, 3], [6, 0, 19], [1, 0, 0, 1], [0, 1], [1], [3], [], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 3, 0, 1, 3, 3], [28, 57]], "fitness": -0.18657143414020538, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.241270749355745, 2.4142292872270055, 4.357309214710764, 2.455260922329033, 2.304320372075232, 2.3033109277451373], "accuracy": [0.19984149932861328, 0.14700831472873688, 0.18121780455112457, 0.10738343745470047, 0.09681680053472519, 0.09813763201236725], "val_loss": [2.5158326966421947, 1.930352006639753, 1.9459945814950126, 1.9760503087724959, 1.974064826965332, 1.9736112185886927], "val_accuracy": [0.16566666960716248, 0.1003333330154419, 0.09600000083446503, 0.09799999743700027, 0.09799999743700027, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [1, 2, 1, 1], [11], [0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 1, 1, 1], [6, 9, 3, 3, 4], [0, 3, 4], [8, 0, 19], [1, 0, 0, 1], [0, 1], [1, 7], [5], [], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 0, 4, 7], [3, 1, 0, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(sigma, alpha))", "other_info": {"loss": [2.327032179864579, 2.8914777383261416, 3.889996123650858, 5.736882173122274, 33469091742.50937, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.16814158856868744, 0.11174217611551285, 0.09734513610601425, 0.09509972482919693, 0.10487385839223862, 0.09457138925790787, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.087390899658203, 2.7503909383501326, 3.879040173121861, 6.180456433977399, 3.6333837122415304e+26, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.01600000075995922, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [9, 1, 5, 7, 8], [1, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 1, 1, 1], [6, 9, 3, 3, 4], [0, 3, 4], [8, 0, 19], [1, 0, 1, 1], [0, 1], [1, 7], [5], [], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 3, 0, 4, 7], [3, 0, 0, 3], [80, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 8, 4, 4, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(sigma, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), sigma)))", "other_info": {"loss": [2.302462485393655, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09893012791872025, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [0, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 0], [0, 0, 1, 0, 1, 1, 1, 1], [6, 9, 3, 3, 4], [3, 4, 3, 0], [8, 0, 19], [0, 0, 1, 1], [0, 1], [1, 7], [3], [], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 7, 0, 4, 7, 8, 2], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 2, 1, 1, 3, 2, 1, 1, 0, 12, 7, 5, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, sigma), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, sigma))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 0, 1, 0, 0, 0, 1, 1], [1, 1, 1, 0, 1, 1], [2, 9, 3, 9], [5, 4, 3], [6, 0, 19], [0, 0, 0, 1], [0, 1, 1], [1], [3, 5], [], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, sigma), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0816272646188736, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 0, 1, 1], [50], [0, 0, 1, 0, 0, 0, 1, 1], [1, 1, 1, 0, 1, 1], [2, 9, 3, 9], [5, 4, 3], [6, 0, 19], [0, 0, 0, 1], [0, 1, 0], [1, 8], [3], [], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 1, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 4, 3, 2, 1, 0, 4, 2, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, sigma), tf.math.add(sigma, tf.math.sqrt(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06260731816291809, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 1, 1, 1, 1], [2, 9, 3, 9], [5, 4, 3], [8, 0, 19], [1, 0, 0, 1], [0, 1], [1], [3], [], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 0, 0, 1, 3, 3], [80, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(grad, tf.math.add(alpha, grad)), tf.math.square(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11187426000833511, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [1, 2, 1, 1], [11], [1, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 1, 1, 1], [6, 9, 3, 3, 4], [0, 3, 4], [8, 0, 19], [0, 0, 1, 1], [0, 1], [1, 7], [5], [], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 9, 0, 4, 7], [3, 0, 0, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 2, 2, 0, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2823.325627595899, 53382.92707989367, 240742.44112815347, 658218.3901647734, 1391494.7212224277, 2550041.6271298374], "accuracy": [0.09681680053472519, 0.09919429570436478, 0.09893012791872025, 0.1022322028875351, 0.10091137140989304, 0.10355303436517715], "val_loss": [10688.111328125, 82992.62276785714, 277608.3214285714, 655220.25, 1276514.2857142857, 2202174.9285714286], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 0, 1, 0, 0, 0, 1, 1], [1, 1, 1, 0, 1, 1], [6, 9, 3, 3, 4], [5, 4, 3], [6, 0, 19], [0, 1, 1, 1], [1, 1], [1, 7], [2], [], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 4, 8, 7, 8, 5], [0, 3, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 10, 6, 4, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.pow(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(sigma, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), tf.math.sqrt(alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [0, 1, 1, 0, 1, 1], [6, 9, 3, 3, 4], [3, 4, 3], [6, 0, 19], [1, 0, 0, 1], [0, 1], [1], [2], [], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(grad, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1216046050.0158045, 24446894492.250957, 111822923575.01413, 307593987500.07556, 652412233265.1644, 1198072993110.0547], "accuracy": [0.09655263274908066, 0.09906221181154251, 0.09893012791872025, 0.1022322028875351, 0.10091137140989304, 0.10355303436517715], "val_loss": [4795326171.428572, 38359632164.57143, 129460774034.28572, 306868144420.5714, 599349676324.5714, 1035665370550.8572], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 0, 1, 0, 0, 0, 1, 1], [1, 1, 1, 0, 1, 1], [2, 9, 3, 9], [1, 4, 3], [6, 0, 19], [1, 0, 0, 1], [0, 1], [1], [3], [], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [218.72470617111662, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.15136705338954926, 0.10315678268671036, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1664026.1785714286, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09266666322946548, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [0, 1, 0, 0, 1, 1], [2, 9], [1, 4, 3], [8, 0, 19], [1, 0, 0, 1], [0, 1], [1], [3], [], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 0, 0, 1, 3, 3], [64, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 1, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [1, 0, 0, 1], [0, 1], [1, 7], [7], [], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [8, 3, 0, 4, 7], [0, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302462485393655, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09893012791872025, 0.09668471664190292, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [0, 2, 1, 1], [73], [1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 0, 1, 0, 1, 1, 1, 1], [2, 9, 3, 9], [0, 4, 3, 0], [6, 0, 19], [1, 0, 0, 1], [0, 1], [1, 7], [3], [], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [5, 3, 0, 4, 7], [2, 0, 0, 1, 3, 3], [70, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, grad: tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [3.4092364499534615, 60.353382650225974, 610.9676534309835, 3689.759131910621, 15302.25466908062, 49273.15888133998], "accuracy": [0.09430722147226334, 0.09893012791872025, 0.09893012791872025, 0.1022322028875351, 0.10091137140989304, 0.10315678268671036], "val_loss": [8.135393960135323, 131.73822893415178, 1045.5394112723213, 5266.704659598215, 19151.86941964286, 55675.8203125], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 1, 0, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [1, 0, 0, 1], [0, 1], [1], [7], [], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 8, 0, 4, 7], [2, 0, 0, 1, 3, 3], [4, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0816272646188736, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [1, 2, 1, 1], [11], [0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 1, 1, 1], [6, 9, 3, 3, 4], [0, 3, 4], [8, 0, 19], [1, 0, 1, 1], [0, 1], [1, 7], [5], [], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [3, 0, 0, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3014537023121826, 2.303384296488784, 2.304487080826594, 2.302532170726135, 2.300838637361437, 2.303138879248967], "accuracy": [0.0866464152932167, 0.09245806187391281, 0.0874389111995697, 0.08955223858356476, 0.08875974267721176, 0.09325055778026581], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [1, 2, 1, 1], [11], [0, 1, 1, 0, 0, 0, 0], [1, 0, 1, 0, 1, 1, 1, 1], [6, 9, 3, 3, 4], [1, 3, 4], [82, 0, 19], [0, 0, 1, 1], [0, 1], [1, 7], [5], [], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [2, 3, 0, 4, 7], [2, 0, 0, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [2.3014537023121826, 2.303384296488784, 2.304487080826594, 2.302532170726135, 2.300838637361437, 2.303138879248967], "accuracy": [0.0866464152932167, 0.09245806187391281, 0.0874389111995697, 0.08955223858356476, 0.08875974267721176, 0.09325055778026581], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]