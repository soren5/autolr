[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 6, 2, 2, 5, 9, 1, 8, 6, 5, 8, 9], [4, 3, 3, 5, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [0, 0, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [9, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.8180000185966492, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 1, 1, 0, 1, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.40110013645874, 1.8635398648623163, 1.5387482454023813, 1.261020131366852, 1.0099922469294917, 0.9037194947021165, 0.8744984934783773, 0.7633417672988777, 0.7355333943377081, 0.7424374151113342, 0.7176109036796554, 0.6387776002876353, 0.6746656904918422, 0.6177321273684423, 0.619622872096515, 0.5963722768004356, 0.5782542672486054, 0.5424013538068359, 0.5749040086980132, 0.5835073107599882, 0.5305133447859974, 0.5105937655811942, 0.5258662487773721, 0.510101332270537, 0.5010593249545577, 0.48733017392178035, 0.47064990991646066, 0.4750196754247474, 0.4660694997434398, 0.44107158855833883, 0.4557311186433358, 0.4489443542903456, 0.43229078330525694, 0.43922217918692513, 0.40892557535881946, 0.3960485793792844, 0.4203819866193646, 0.39177982097587816, 0.4018759974761331, 0.42281063908142513, 0.39950540595680667, 0.3988675940400495, 0.38023542489484, 0.3655239389344544, 0.38910506632444236], "accuracy": [0.3035266101360321, 0.42108044028282166, 0.4831594228744507, 0.5478800535202026, 0.627129852771759, 0.663848876953125, 0.674679696559906, 0.7040021419525146, 0.7217012047767639, 0.7226257920265198, 0.7290979027748108, 0.7589486241340637, 0.7428345084190369, 0.7640998363494873, 0.7670056819915771, 0.7795535326004028, 0.7766477465629578, 0.7924976944923401, 0.7903843522071838, 0.7817989587783813, 0.8004226684570312, 0.8117818236351013, 0.8050455451011658, 0.8124422430992126, 0.8123101592063904, 0.8137630224227905, 0.8255184292793274, 0.8210275769233704, 0.8315942287445068, 0.8358209133148193, 0.83119797706604, 0.8350284099578857, 0.8401796221733093, 0.8339717388153076, 0.846387505531311, 0.8515387773513794, 0.8446704745292664, 0.8568220734596252, 0.8461233377456665, 0.8429533839225769, 0.8527275323867798, 0.850350022315979, 0.8578787446022034, 0.8639545440673828, 0.8609166741371155], "val_loss": [1.5214013372148787, 1.446131672177996, 1.3145196778433663, 0.9067698206220355, 0.8044003759111676, 0.7740842274257115, 0.5972167423793248, 0.5937229565211705, 0.6098392861230033, 0.5909474747521537, 0.5377555915287563, 0.528180650302342, 0.521675671849932, 0.49434471130371094, 0.5054394177028111, 0.4755917617252895, 0.4441624198641096, 0.5452187401907784, 0.5601047958646502, 0.42866766452789307, 0.4516596964427403, 0.42726666586739676, 0.42413619586399626, 0.4232975585120065, 0.4147212249892099, 0.4351611988885062, 0.39900057656424387, 0.4119355423109872, 0.3851259010178702, 0.3910404443740845, 0.3941587039402553, 0.40825556005750385, 0.4147125482559204, 0.4002706067902701, 0.37081073011670795, 0.36997799362455097, 0.3643599493162973, 0.400802595274789, 0.3567729507173811, 0.3625695620264326, 0.40488635642187937, 0.35840059178216116, 0.36678323575428556, 0.42577219009399414, 0.3620297908782959], "val_accuracy": [0.500333309173584, 0.47833332419395447, 0.40033334493637085, 0.6446666717529297, 0.6266666650772095, 0.6606666445732117, 0.7306666374206543, 0.7463333606719971, 0.7326666712760925, 0.7203333377838135, 0.781333327293396, 0.7596666812896729, 0.7523333430290222, 0.7910000085830688, 0.7770000100135803, 0.7816666960716248, 0.8100000023841858, 0.7710000276565552, 0.7526666522026062, 0.8176666498184204, 0.8059999942779541, 0.8149999976158142, 0.8063333630561829, 0.8046666383743286, 0.8203333616256714, 0.8083333373069763, 0.8193333148956299, 0.8166666626930237, 0.8286666870117188, 0.8316666483879089, 0.8309999704360962, 0.8136666417121887, 0.8133333325386047, 0.8286666870117188, 0.8416666388511658, 0.8399999737739563, 0.8500000238418579, 0.824999988079071, 0.8506666421890259, 0.8523333072662354, 0.8056666851043701, 0.8486666679382324, 0.8370000123977661, 0.8140000104904175, 0.8420000076293945]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 8, 2, 2, 5, 9, 1, 8, 6, 5, 8, 9], [4, 1, 5, 5, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [9, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.8159999847412109, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.4016964251039963, 1.9078356510203165, 1.6854985440175736, 1.250759612378695, 1.0202676249044824, 0.8895985847529703, 0.8590593439413808, 0.7569595474088984, 0.701052374993144, 0.6768940517521648, 0.6968831751624024, 0.6216986192578039, 0.6199100145716094, 0.6005540372531459, 0.5777739422700157, 0.5947412320604225, 0.5449970299935281, 0.5316600307749404, 0.5512677878200449, 0.5289740206983977, 0.4988172435765222, 0.5041257097516093, 0.5066932673861149, 0.4794475329456045, 0.4787209235666104, 0.4640006864107107, 0.42996630342235626, 0.4579662259000404, 0.4429136566190892, 0.42337125066626957, 0.4240841189899528, 0.4190566281852878, 0.41274714877324853, 0.4279288419477692, 0.41248771612040513, 0.38796442975819684, 0.37897221056178354, 0.3667458292673041, 0.37695027520753893, 0.40766312121526205, 0.3631038586768366, 0.3709484463110576, 0.3534066551444301, 0.34136133618862435, 0.3675846793648117], "accuracy": [0.30379077792167664, 0.40285298228263855, 0.42689210176467896, 0.575089156627655, 0.6206578016281128, 0.667811393737793, 0.678642213344574, 0.7034738063812256, 0.7337207794189453, 0.7420420050621033, 0.7342491149902344, 0.7667415142059326, 0.7626469135284424, 0.7718927264213562, 0.7844406366348267, 0.7779685854911804, 0.7979130744934082, 0.8035926818847656, 0.791441023349762, 0.7998943328857422, 0.8142913579940796, 0.8113855719566345, 0.8099326491355896, 0.817989706993103, 0.8207634687423706, 0.8228767514228821, 0.8422929644584656, 0.82683926820755, 0.834632158279419, 0.844010055065155, 0.8405758738517761, 0.8462554216384888, 0.8462554216384888, 0.8396512866020203, 0.8475762605667114, 0.8544445633888245, 0.8625016212463379, 0.8677849769592285, 0.8595958352088928, 0.8459912538528442, 0.8687095642089844, 0.8578787446022034, 0.8672566413879395, 0.8758420348167419, 0.8650112152099609], "val_loss": [1.5216432639530726, 1.0609642778124129, 0.9629345280783517, 0.8630056210926601, 0.70479645047869, 0.7560084547315326, 0.58490218435015, 0.5916187082018171, 0.5463861737932477, 0.6170638799667358, 0.5085241283689227, 0.505804215158735, 0.5174229655947004, 0.5454011133738926, 0.5348529815673828, 0.44944305079323904, 0.42938735655375887, 0.4831991365977696, 0.4500659704208374, 0.42529129130499704, 0.42295397179467337, 0.4535710981913975, 0.41700394664491924, 0.45015222685677664, 0.40574582133974346, 0.40208013568605694, 0.3969088281903948, 0.3846334474427359, 0.37632925169808523, 0.38215552057538715, 0.37132086072649273, 0.42836534125464304, 0.3887931874820164, 0.386917633669717, 0.3533895526613508, 0.3493988173348563, 0.35455392939703806, 0.35670286417007446, 0.3825847932270595, 0.35061207839420866, 0.36823220763887676, 0.35007011890411377, 0.3415711692401341, 0.4181251014981951, 0.3453644939831325], "val_accuracy": [0.5006666779518127, 0.5963333249092102, 0.6773333549499512, 0.621999979019165, 0.6803333163261414, 0.6650000214576721, 0.7266666889190674, 0.7516666650772095, 0.7570000290870667, 0.6836666464805603, 0.7770000100135803, 0.7836666703224182, 0.7689999938011169, 0.7440000176429749, 0.7509999871253967, 0.8059999942779541, 0.8136666417121887, 0.7866666913032532, 0.7996666431427002, 0.8190000057220459, 0.8106666803359985, 0.8006666898727417, 0.8166666626930237, 0.7923333048820496, 0.8193333148956299, 0.8263333439826965, 0.8246666789054871, 0.8343333601951599, 0.8326666951179504, 0.8353333473205566, 0.8393333554267883, 0.7990000247955322, 0.8236666917800903, 0.8370000123977661, 0.8500000238418579, 0.8423333168029785, 0.8460000157356262, 0.8473333120346069, 0.8220000267028809, 0.8536666631698608, 0.8393333554267883, 0.8473333120346069, 0.8519999980926514, 0.8183333277702332, 0.8519999980926514]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 6, 2, 2, 5, 9, 1, 8, 6, 5, 8, 9], [4, 1, 3, 5, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [0, 0, 1, 0, 0, 1], [1, 1, 1, 0, 0, 1], [7, 0, 8, 9, 7], [0, 7], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [15, 57]], "fitness": -0.5634285807609558, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302032977015886, 2.3010483724944044, 2.2990902430660705, 2.2977714041645783, 2.2954486235494014, 2.2923483418719233, 2.2899236967849883, 2.2886929164048055, 2.2841975130913297, 2.284850471197039, 2.283321164933178, 2.2803470304912627, 2.2786746031068743, 2.276256806090555, 2.274990607939219, 2.2730358012552982, 2.2706691516215667, 2.269800353626518, 2.2685010241101744, 2.264593407305051, 2.263247999580009, 2.2606284793782714, 2.257533043823726, 2.2561810796035044, 2.2545351248690637, 2.2510786799391926, 2.2504413647186237, 2.2475801640025472, 2.2451358647347126, 2.2428259354509366, 2.2398897509423104, 2.2372310686860937, 2.2363423769263986, 2.2335881397724466, 2.23245768445657, 2.228390738696722, 2.22517557762019, 2.2227369582002754, 2.2177220062257876, 2.2144384083415947, 2.2141107443443078, 2.2098923283734293, 2.2067738575721854, 2.205263136872652, 2.2022685581399246, 2.196749516450466, 2.1929733479232394, 2.1908017474552266, 2.1879739185381624, 2.186888421893419, 2.18014008075239, 2.1779494411232703, 2.173702058318489, 2.1734951889951075, 2.1629601506792624, 2.16312749079426, 2.155513455130562, 2.152003425884839, 2.1492916610908233, 2.140085215865188, 2.135839439795679, 2.133598178432224, 2.1280587973800618, 2.126314650090804, 2.117763931095293, 2.115289674033862, 2.108449891069861, 2.1005493612683694, 2.096332676705746, 2.0908188241080143, 2.086370062031341, 2.080050757973343, 2.0761022394548365, 2.068550013217314, 2.0608741933832455, 2.0563289632949657, 2.0488412435957626, 2.0427635602506395, 2.0340689121062936, 2.027460340590068, 2.0165063722998693, 2.012345976817562, 2.0052823341281707, 1.995938400944478, 1.9898516565596722, 1.97674276554479, 1.9704586829586177, 1.964477982928551, 1.9612277135904423, 1.9506801589919969, 1.9416317791435556, 1.933800088683801, 1.9232829674564695, 1.9139552336043968, 1.9055822104699796, 1.8962200126470339, 1.8910804726837838, 1.878600332069674, 1.8718762373990387, 1.8574850448858564], "accuracy": [0.09166556596755981, 0.09338264167308807, 0.10210011899471283, 0.09813763201236725, 0.10777968913316727, 0.1158367469906807, 0.12917712330818176, 0.12191256135702133, 0.13353586196899414, 0.13749834895133972, 0.14357416331768036, 0.14700831472873688, 0.15215955674648285, 0.15678246319293976, 0.1620657742023468, 0.16259410977363586, 0.17131158709526062, 0.17540615797042847, 0.18082155287265778, 0.1912561058998108, 0.19535067677497864, 0.1970677524805069, 0.2110685557126999, 0.2078985571861267, 0.2188614457845688, 0.2250693440437317, 0.22361643612384796, 0.23259806632995605, 0.2378813922405243, 0.23656055331230164, 0.2448817789554596, 0.24607053399085999, 0.25214633345603943, 0.25558051466941833, 0.2522784173488617, 0.2616563141345978, 0.2715625464916229, 0.27037379145622253, 0.2806762754917145, 0.2958658039569855, 0.29203540086746216, 0.2996962070465088, 0.29441288113594055, 0.2895258367061615, 0.30220577120780945, 0.3073570132255554, 0.3179236650466919, 0.3139611780643463, 0.31739532947540283, 0.3148857355117798, 0.32281073927879333, 0.32267865538597107, 0.33364152908325195, 0.3237352967262268, 0.33522653579711914, 0.33166027069091797, 0.3416985869407654, 0.34883105754852295, 0.3483027219772339, 0.3625676929950714, 0.3541143834590912, 0.35385021567344666, 0.3703605830669403, 0.35741645097732544, 0.3677189350128174, 0.36388853192329407, 0.3617751896381378, 0.381719708442688, 0.3811914026737213, 0.3727380931377411, 0.38026681542396545, 0.3847576379776001, 0.3875313699245453, 0.38224804401397705, 0.38845595717430115, 0.39083343744277954, 0.39122968912124634, 0.3979659080505371, 0.40047550201416016, 0.4084004759788513, 0.41526877880096436, 0.413419634103775, 0.41011756658554077, 0.4139479696750641, 0.41725003719329834, 0.4294016659259796, 0.4262316823005676, 0.4247787594795227, 0.42002376914024353, 0.4247787594795227, 0.4267600178718567, 0.4297979176044464, 0.42002376914024353, 0.43006208539009094, 0.4345529079437256, 0.43085458874702454, 0.43785497546195984, 0.4353454113006592, 0.4375908076763153, 0.44908201694488525], "val_loss": [1.969397953578404, 1.967588152204241, 1.965773378099714, 1.963973045349121, 1.9621879713875907, 1.960418973650251, 1.9586263384137834, 1.956845692225865, 1.9550548962184362, 1.9532732963562012, 1.9514761652265276, 1.949683461870466, 1.9478826522827148, 1.9460456030709403, 1.9442071914672852, 1.9423657144818987, 1.940492834363665, 1.9386341912405831, 1.9367531367710658, 1.9348438807896204, 1.9329207284109933, 1.930955137525286, 1.928952966417585, 1.926945413861956, 1.9249179703848702, 1.9228342601231165, 1.9207439422607422, 1.9186064856392997, 1.916414669581822, 1.9142072541373116, 1.9119648252214705, 1.9096713747297014, 1.9073362350463867, 1.9049574307032995, 1.9025610515049525, 1.9001014573233468, 1.897573607308524, 1.8950111525399345, 1.8923536028180803, 1.889655930655343, 1.8869175229753767, 1.8840776171003069, 1.8811766079493932, 1.8782400403703963, 1.8752382142203194, 1.87213100705828, 1.8689155578613281, 1.8656646183558874, 1.8623533930097307, 1.8589810643877303, 1.8554823739188058, 1.8519219670976912, 1.8482451438903809, 1.8445350783211845, 1.840648583003453, 1.8367342948913574, 1.8326799528939384, 1.828535761151995, 1.8243253571646554, 1.8199263981410436, 1.8154216493879045, 1.8108911514282227, 1.8062018666948592, 1.801464012690953, 1.7965525899614607, 1.7915378979274206, 1.7864409855433874, 1.7811551775251115, 1.775824955531529, 1.7703744343348913, 1.764828818184989, 1.7591228485107422, 1.753354208809989, 1.7474262373788017, 1.7413859367370605, 1.7352027211870467, 1.7288573128836495, 1.7224625859941756, 1.7159063475472587, 1.709200722830636, 1.7022675105503626, 1.695284162248884, 1.6881427083696638, 1.6809097698756628, 1.6734742437090193, 1.6658755370548792, 1.6581521715436662, 1.650360005242484, 1.6425262519291468, 1.6345020702907018, 1.6263528551374162, 1.618086508342198, 1.6097349098750524, 1.6011595385415214, 1.5925246647426061, 1.583789587020874, 1.574941771371024, 1.5660021986280168, 1.5569883755275182, 1.547853640147618], "val_accuracy": [0.05166666582226753, 0.06233333423733711, 0.07066666334867477, 0.08533333241939545, 0.09566666930913925, 0.11033333092927933, 0.1263333261013031, 0.14266666769981384, 0.15700000524520874, 0.1756666600704193, 0.19333332777023315, 0.21066667139530182, 0.22766666114330292, 0.2383333295583725, 0.2540000081062317, 0.27399998903274536, 0.28600001335144043, 0.2983333468437195, 0.3076666593551636, 0.31933334469795227, 0.32766667008399963, 0.33633333444595337, 0.34166666865348816, 0.3503333330154419, 0.3543333411216736, 0.35766667127609253, 0.3606666624546051, 0.3636666536331177, 0.3683333396911621, 0.36933332681655884, 0.37299999594688416, 0.3776666522026062, 0.38366666436195374, 0.3863333463668823, 0.38966667652130127, 0.39366665482521057, 0.3959999978542328, 0.398333340883255, 0.4023333191871643, 0.4073333442211151, 0.4129999876022339, 0.41466665267944336, 0.4189999997615814, 0.42266666889190674, 0.4266666769981384, 0.4300000071525574, 0.4320000112056732, 0.4326666593551636, 0.43533334136009216, 0.43833333253860474, 0.4403333365917206, 0.44466665387153625, 0.44733333587646484, 0.44966667890548706, 0.4519999921321869, 0.4546666741371155, 0.4573333263397217, 0.4593333303928375, 0.4606666564941406, 0.46399998664855957, 0.46566668152809143, 0.47200000286102295, 0.47566667199134827, 0.47966668009757996, 0.4830000102519989, 0.48533332347869873, 0.4886666536331177, 0.492333322763443, 0.4950000047683716, 0.4950000047683716, 0.49666666984558105, 0.4986666738986969, 0.503000020980835, 0.5070000290870667, 0.5093333125114441, 0.5116666555404663, 0.515666663646698, 0.5166666507720947, 0.5189999938011169, 0.5243333578109741, 0.528333306312561, 0.531000018119812, 0.5326666831970215, 0.5346666574478149, 0.5373333096504211, 0.5406666398048401, 0.5406666398048401, 0.5423333048820496, 0.5443333387374878, 0.5453333258628845, 0.5473333597183228, 0.5476666688919067, 0.550000011920929, 0.5503333210945129, 0.5519999861717224, 0.5536666512489319, 0.5553333163261414, 0.5573333501815796, 0.559333324432373, 0.5609999895095825]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 6, 2, 2, 0, 9, 1, 8, 6, 5, 8, 9], [4, 1, 3, 5, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [0, 0, 1, 0, 0, 1], [1, 1, 1, 0, 0, 1], [7, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [3, 0, 0, 1, 3, 3, 2], [48, 57]], "fitness": -0.31771427392959595, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.977644814350318, 2.2947657163731097, 2.3035710284329203, 2.300224573573479, 2.2721824626786566, 2.275029684212135, 2.2342875577581243, 2.3054941581649993, 2.3034179964558072, 2.3034002309493604, 2.3034260566791036], "accuracy": [0.19402985274791718, 0.11359133571386337, 0.09985470771789551, 0.10474177449941635, 0.18570862710475922, 0.1438383311033249, 0.18372738361358643, 0.0940430611371994, 0.09668471664190292, 0.09470347315073013, 0.09945846349000931], "val_loss": [1.7884270804268974, 1.97396605355399, 1.9734435081481934, 1.9522004127502441, 1.976862975529262, 1.5952088832855225, 1.9756887980869837, 1.9744650976998466, 1.9737396240234375, 1.9739866937909807, 1.9737374441964286], "val_accuracy": [0.19833333790302277, 0.09799999743700027, 0.09799999743700027, 0.11100000143051147, 0.1003333330154419, 0.3190000057220459, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 6, 0, 2, 5, 9, 1, 8, 6, 5, 8, 9], [4, 3, 3, 5, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [0, 0, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1], [9, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.30314284563064575, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 1, 1, 1, 0, 1, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(grad)), grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.978120186356915, 2.311661575763548, 2.3036727488017306, 2.303061097037633, 2.301091915801248, 2.4437662058691574, 2.3049125284676886, 2.3051845045483987, 2.304285626102196, 2.303609465500934], "accuracy": [0.19297318160533905, 0.11266675591468811, 0.09972262382507324, 0.09787346422672272, 0.10593052208423615, 0.1636507660150528, 0.09747721254825592, 0.09945846349000931, 0.09576013684272766, 0.10342095047235489], "val_loss": [1.8831633159092493, 1.9739865575517928, 1.9735963003976005, 1.9732985496520996, 1.9626368113926478, 1.9758530344281877, 1.97463744027274, 1.974278245653425, 1.973630700792585, 1.974984577723912], "val_accuracy": [0.19733333587646484, 0.09733333438634872, 0.12833333015441895, 0.10066666454076767, 0.2029999941587448, 0.1003333330154419, 0.09966666996479034, 0.1003333330154419, 0.10199999809265137, 0.10100000351667404]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 6, 6, 2, 5, 9, 1, 8, 6, 5, 8, 9], [4, 1, 5, 5, 3, 2, 2, 4, 2, 0], [97, 47, 79, 81, 53, 45], [1, 0, 1, 0, 0, 1], [1, 1, 1, 0, 0, 1], [7, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [89, 57]], "fitness": -0.2919999957084656, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, alpha)), tf.math.square(grad))), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.9778340867387305, 2.2962696260354774, 2.3036200940380667, 2.303139432231433, 2.301988713918597, 2.2751470449468036, 2.2645532921745857, 2.307325176574834, 2.303433527831215, 2.303270892727849, 2.303070748124723], "accuracy": [0.19270901381969452, 0.11279883980751038, 0.09906221181154251, 0.09734513610601425, 0.10513802617788315, 0.1702549159526825, 0.18016114830970764, 0.09615638852119446, 0.09417514503002167, 0.10051512718200684, 0.09721305221319199], "val_loss": [1.7971784046718053, 1.973944868360247, 1.9735982758658273, 1.9733965737479073, 1.9691438674926758, 1.9347975594656808, 1.9810923848833357, 1.9750845772879464, 1.9739387375967843, 1.9738429614475794, 1.9736646924700056], "val_accuracy": [0.19833333790302277, 0.09799999743700027, 0.09799999743700027, 0.10066666454076767, 0.12999999523162842, 0.2056666612625122, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.09966666996479034, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 6, 2, 2, 0, 9, 1, 8, 6, 5, 8, 9], [4, 1, 3, 5, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [0, 0, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1], [9, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.19914285838603973, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.9777806864249596, 2.2977522619963167, 2.303592084185039, 2.3031244458397695, 2.3016780769631313, 2.2674388729302546], "accuracy": [0.19284109771251678, 0.11094967275857925, 0.10038304328918457, 0.09430722147226334, 0.10593052208423615, 0.18042530119419098], "val_loss": [1.8063836097717285, 1.9739674159458704, 1.9736012731279646, 1.9733996391296387, 1.96684353692191, 1.9758894784109933], "val_accuracy": [0.19833333790302277, 0.09799999743700027, 0.09799999743700027, 0.10066666454076767, 0.1236666664481163, 0.13099999725818634]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 6, 2, 2, 5, 9, 1, 8, 6, 5, 8, 9], [4, 3, 3, 5, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [0, 0, 1, 0, 0, 1], [1, 1, 1, 0, 0, 1], [1, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [3, 0, 0, 1, 3, 3, 2], [48, 57]], "fitness": -0.17800000309944153, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.9777224225107357, 2.298671622680021, 2.303569744606658, 2.302727645871, 2.3928650097840056, 2.2523358392992576, 2.316730012447764, 2.3054054207285994, 2.3036770703156138, 2.3036545444363066, 2.3032568985555213], "accuracy": [0.19270901381969452, 0.11068551242351532, 0.09734513610601425, 0.09932637959718704, 0.16682076454162598, 0.14912164211273193, 0.11662924289703369, 0.09377889335155487, 0.0940430611371994, 0.09787346422672272, 0.09985470771789551], "val_loss": [1.8118932587759835, 1.9740229334150041, 1.9735713005065918, 1.9713091169084822, 1.9872186524527413, 1.9125268799918038, 1.9761962890625, 1.9742721830095564, 1.973850999559675, 1.9738834244864327, 1.9736686434064592], "val_accuracy": [0.19833333790302277, 0.09799999743700027, 0.09799999743700027, 0.10066666454076767, 0.09799999743700027, 0.2423333376646042, 0.09266666322946548, 0.1003333330154419, 0.1003333330154419, 0.09966666996479034, 0.1003333330154419]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 6, 2, 2, 5, 9, 1, 8, 6, 5, 8, 9], [4, 1, 3, 5, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [0, 0, 1, 0, 0, 1], [1, 1, 1, 0, 0, 1], [7, 0, 8, 9, 7], [6, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.691017472874676, 2.341395092867054, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.16721701622009277, 0.12917712330818176, 0.09760929644107819, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.05524103982108, 39.66038840157645, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09833333641290665, 0.10233332961797714, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 6, 0, 2, 5, 9, 1, 8, 6, 5, 8, 9], [4, 1, 3, 5, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [0, 0, 1, 0, 0, 1], [1, 1, 1, 0, 0, 1], [7, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [9, 1, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3025511641307768, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 6, 2, 2, 5, 9, 1, 8, 6, 5, 8, 9], [1, 1, 5, 5, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [9, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(alpha, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3025511641307768, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 6, 2, 2, 5, 9, 1, 8, 6, 5, 8, 9], [4, 3, 3, 5, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [0, 0, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1], [9, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [3, 1, 0, 1, 3, 3, 2], [53, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08466517180204391, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 6, 2, 2, 0, 9, 1, 8, 6, 5, 8, 9], [4, 0, 3, 5, 4, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [0, 0, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1], [1, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [3, 0, 0, 1, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 7, 4, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.negative(tf.math.pow(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07938185334205627, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 6, 2, 2, 5, 9, 1, 8, 6, 5, 8, 9], [4, 1, 5, 5, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [0, 0, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1], [1, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 0, 4, 2, 1, 2, 3], [3, 0, 0, 1, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07726852595806122, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 6, 7, 3, 5, 9, 1, 8, 6, 5, 8, 9], [4, 3, 4, 5, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [7, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 0, 4, 2, 1, 2, 3], [3, 0, 0, 1, 3, 3, 2], [89, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 0, 3, 2, 1, 1, 0, 3, 1, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(grad, grad)), grad)), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(sigma, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08875974267721176, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 6, 8, 2, 5, 2, 1, 8, 6, 5, 8, 9], [4, 3, 3, 4, 3, 2, 2, 4, 2, 0], [97, 47, 79, 81, 53, 45], [0, 0, 1, 0, 0, 1], [1, 1, 1, 0, 0, 1], [9, 0, 8, 9, 7], [3, 7], [88, 19], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 1, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.sqrt(grad), tf.math.add(beta, grad)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08466517180204391, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 6, 2, 2, 5, 9, 1, 8, 6, 5, 8, 9], [2, 3, 3, 5, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [9, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 6, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 1, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, grad))), grad)), tf.math.add(grad, tf.math.add(beta, tf.math.square(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.negative(alpha), tf.math.pow(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09377889335155487, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 6, 2, 2, 5, 9, 1, 8, 6, 5, 8, 9], [4, 3, 1, 5, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [0, 0, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [9, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [42, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 7, 4, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.pow(grad, tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.negative(tf.math.pow(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [18688368.478497278, 350384292.4929336, 1639035990.4266279, 4575637849.1655, 9807170218.215824, 17627831665.916786], "accuracy": [0.0944393053650856, 0.1022322028875351, 0.0952318087220192, 0.09496764093637466, 0.10210011899471283, 0.09932637959718704], "val_loss": [70860994.28571428, 566193792.0, 1910129920.0, 4526799872.0, 8840327460.571428, 15274797056.0], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [9, 6, 7, 3, 5, 9, 1, 8, 6, 5, 8, 9], [4, 3, 3, 5, 3, 2, 2, 4, 2, 0], [9, 47, 79, 81, 53, 45], [0, 0, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [9, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 7, 4, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(sigma), tf.math.pow(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [153882639.50076976, 2888140380.8511424, 13514550961.113724, 37733483217.70968, 80882692944.84744, 145389431078.5809], "accuracy": [0.0944393053650856, 0.1022322028875351, 0.0952318087220192, 0.09496764093637466, 0.10210011899471283, 0.09919429570436478], "val_loss": [583851666.2857143, 4667997769.142858, 15751284443.428572, 37332802413.71429, 72911501019.42857, 125985535707.42857], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 6, 3, 3, 5, 9, 1, 8, 6, 5, 8, 9], [4, 1, 5, 5, 3, 2, 2, 4, 2, 0], [97, 47, 79, 81, 53, 45], [0, 0, 1, 0, 0, 1], [1, 1, 1, 0, 0, 1], [7, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [7, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [89, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 1, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.square(tf.math.add(beta, grad)))), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302111570467613, 2.3023969302985487, 2.302854365393029, 2.305268529793212, 2.3173248555288337, 2.3824756320882323], "accuracy": [0.10460969805717468, 0.10632677376270294, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9737364905221122, 1.9740542003086634, 1.9752003805977958, 1.9803060804094588, 2.005701950618199, 2.155754770551409], "val_accuracy": [0.10000000149011612, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}]