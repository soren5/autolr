[{"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7894285917282104, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.291349444674652, 2.2644753193480542, 2.2353042307594087, 2.195521908854418, 2.143332179542766, 2.069849578381026, 1.982393375398492, 1.8518909262218937, 1.7308659458424924, 1.5936391047829288, 1.4843487166741174, 1.3828554081800293, 1.3006467035559615, 1.2370631892399906, 1.1880034254746996, 1.1386764239578389, 1.1031162682116198, 1.0667983025072305, 1.0447898835490927, 1.009191369005812, 0.9878310884356798, 0.968413131458412, 0.9308661998003198, 0.9217579918388897, 0.914598469028163, 0.8990624182496041, 0.8872168149615575, 0.8786994127423583, 0.8703264038891226, 0.8607663202988016, 0.8501762634554338, 0.8433487627484527, 0.8320277173442612, 0.8077864057242107, 0.8068163773843783, 0.8019349443488952, 0.795233400915718, 0.7937043478003646, 0.7903221734857138, 0.783041694751269, 0.7746556423926287, 0.7675354149693968, 0.7625749470409449, 0.7548018482461691, 0.7534290754784052, 0.7439616241821634, 0.7466736489503675, 0.7414297102984342, 0.7413697793593638, 0.7268989051117354, 0.73490931174979, 0.723658661966106, 0.7254963378707227, 0.718149841209649, 0.7141961294347269, 0.7091284122181732, 0.7069549337432935, 0.7037949345099566, 0.6956573557056975, 0.6905080810388035, 0.69370815481067, 0.6872417978984711, 0.6877870112047408, 0.6871071960380947, 0.6867346936260406, 0.6873430912961671, 0.6806333422377409, 0.6716323084897998], "accuracy": [0.11649715900421143, 0.18623696267604828, 0.2546559274196625, 0.3069607615470886, 0.3531897962093353, 0.37987056374549866, 0.4093250632286072, 0.4415532946586609, 0.4683661460876465, 0.49953770637512207, 0.5165764093399048, 0.5436534285545349, 0.5647866725921631, 0.5758816599845886, 0.5842028856277466, 0.6067890524864197, 0.6123365759849548, 0.6239598393440247, 0.629111111164093, 0.644300639629364, 0.6553955674171448, 0.6590939164161682, 0.6647734642028809, 0.6674151420593262, 0.6741513609886169, 0.6793025732040405, 0.6819442510604858, 0.6819442510604858, 0.6873596906661987, 0.691850483417511, 0.693831741809845, 0.6984546184539795, 0.6973979473114014, 0.7079645991325378, 0.7069079279899597, 0.709021270275116, 0.7083608508110046, 0.7086250185966492, 0.7077004313468933, 0.7111346125602722, 0.7169462442398071, 0.7201162576675415, 0.7173424959182739, 0.7215691208839417, 0.7265883088111877, 0.722757875919342, 0.7257958054542542, 0.7239466309547424, 0.7288337349891663, 0.7316074371337891, 0.7333245277404785, 0.7345132827758789, 0.7309470176696777, 0.735041618347168, 0.7345132827758789, 0.7358341217041016, 0.7358341217041016, 0.7397965788841248, 0.7440232634544373, 0.7434949278831482, 0.7464007139205933, 0.7428345084190369, 0.7497028112411499, 0.7448157668113708, 0.7445515990257263, 0.7427024245262146, 0.750759482383728, 0.7499669790267944], "val_loss": [1.9467026846749442, 1.9205094746180944, 1.8885367938450404, 1.8451853479657854, 1.7855212347848075, 1.7044832365853446, 1.6011578014918737, 1.4751781054905482, 1.3448456355503626, 1.2174782752990723, 1.1088313375200545, 1.020287139075143, 0.9498188495635986, 0.8963429246629987, 0.8516598428998675, 0.8171936103275844, 0.7875596795763288, 0.7639345782143729, 0.7439059700284686, 0.7257879291261945, 0.7101508378982544, 0.6957521438598633, 0.680453726223537, 0.6717808416911534, 0.6605841602597918, 0.6534208399908883, 0.6441785948617118, 0.6371648481913975, 0.6296081372669765, 0.6239798409598214, 0.6179555654525757, 0.6133187328066144, 0.6084655012403216, 0.6014710494450161, 0.5960193702152797, 0.5940444980348859, 0.5874159165791103, 0.5827134507043021, 0.5797225918088641, 0.5763345275606427, 0.5728815283094134, 0.5686633586883545, 0.5666451794760567, 0.5622658218656268, 0.5590494360242572, 0.555865866797311, 0.5545498473303658, 0.5527069057737078, 0.5533599512917655, 0.5453172751835415, 0.5450968742370605, 0.5419164555413383, 0.5407943895884922, 0.5391103540148053, 0.5353781495775495, 0.5325156109673637, 0.5306888137544904, 0.5277868679591587, 0.5262206792831421, 0.5250933510916573, 0.5229702166148594, 0.5210093600409371, 0.5179601226534162, 0.5163516317095075, 0.5159967797143119, 0.5139374222074237, 0.5154892035893032, 0.5115394081388202], "val_accuracy": [0.2383333295583725, 0.3659999966621399, 0.41333332657814026, 0.453000009059906, 0.4970000088214874, 0.5320000052452087, 0.5569999814033508, 0.5643333196640015, 0.5920000076293945, 0.6023333072662354, 0.6346666812896729, 0.6510000228881836, 0.6669999957084656, 0.6700000166893005, 0.6823333501815796, 0.6823333501815796, 0.6899999976158142, 0.7020000219345093, 0.6976666450500488, 0.7046666741371155, 0.7129999995231628, 0.7146666646003723, 0.7166666388511658, 0.718666672706604, 0.722000002861023, 0.7293333411216736, 0.7273333072662354, 0.7296666502952576, 0.734333336353302, 0.7353333234786987, 0.7426666617393494, 0.7336666584014893, 0.7333333492279053, 0.7440000176429749, 0.7446666955947876, 0.746666669845581, 0.7456666827201843, 0.7490000128746033, 0.7523333430290222, 0.7549999952316284, 0.7573333382606506, 0.7513333559036255, 0.7563333511352539, 0.7613333463668823, 0.7556666731834412, 0.7636666893959045, 0.7583333253860474, 0.7616666555404663, 0.7580000162124634, 0.7639999985694885, 0.7636666893959045, 0.7646666765213013, 0.7649999856948853, 0.765666663646698, 0.7639999985694885, 0.7676666378974915, 0.7693333625793457, 0.7670000195503235, 0.7710000276565552, 0.7743333578109741, 0.7726666927337646, 0.7749999761581421, 0.7793333530426025, 0.7760000228881836, 0.7730000019073486, 0.7743333578109741, 0.7770000100135803, 0.7770000100135803]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [98, 8, 15, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7888571619987488, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.291349476165681, 2.2644753193480542, 2.235304014793933, 2.195523208930051, 2.1433384008789265, 2.0698567933536176, 1.9823990322264697, 1.8518975093269927, 1.730875268856044, 1.5936535459389194, 1.4843579620465375, 1.3828652675487834, 1.3006536982330617, 1.237053995733295, 1.1879984806903743, 1.13866739625141, 1.1031182600034461, 1.0668079772283372, 1.0448288200490778, 1.0092002003578038, 0.9878287074934647, 0.9684083129294938, 0.930843115120579, 0.9217463819389534, 0.9146259991862219, 0.8990365797187579, 0.887103228891184, 0.878631105063661, 0.8702311682238193, 0.8606437755030979, 0.8501374071001172, 0.843279213299762, 0.8319732274330208, 0.8077935755150493, 0.8067492193644151, 0.8018665679725185, 0.7951795213242343, 0.7936987667161838, 0.7902818675196135, 0.7830167190273755, 0.774610992774452, 0.7676340004535257, 0.7625299345358976, 0.7547523511037094, 0.7533400798313149, 0.743891113643019, 0.7465901320337415, 0.7412906762646992, 0.7414320223697692, 0.7269410012640958, 0.7349778569416993, 0.7236548786102868, 0.725661129526978, 0.718078400441259, 0.7141901103182082, 0.709227385057702, 0.7070095774803368, 0.7037347901010746, 0.695746765192143, 0.6905573771110441, 0.6938060405169023, 0.6872066984386366, 0.6878082725224226, 0.6872152972451259, 0.6866680677021184, 0.6874160972552891, 0.6806781002244204, 0.6716874005331293], "accuracy": [0.11649715900421143, 0.18623696267604828, 0.25478801131248474, 0.3069607615470886, 0.3531897962093353, 0.3797384798526764, 0.40945714712142944, 0.4415532946586609, 0.4683661460876465, 0.49927353858947754, 0.5165764093399048, 0.5436534285545349, 0.5649187564849854, 0.5758816599845886, 0.5842028856277466, 0.6066569685935974, 0.6123365759849548, 0.6236956715583801, 0.6287148594856262, 0.6440364718437195, 0.6551313996315002, 0.658961832523346, 0.6646413803100586, 0.6672830581665039, 0.6744155287742615, 0.6798309087753296, 0.6819442510604858, 0.681547999382019, 0.6872276067733765, 0.6911900639533997, 0.6936996579170227, 0.6976621150970459, 0.6973979473114014, 0.7077004313468933, 0.7073041796684265, 0.7087571024894714, 0.7083608508110046, 0.7088891863822937, 0.7078325152397156, 0.7108704447746277, 0.7165499925613403, 0.7199841737747192, 0.7176066637039185, 0.7213049530982971, 0.7269845604896545, 0.7235503792762756, 0.7257958054542542, 0.7244749665260315, 0.728701651096344, 0.7318716049194336, 0.7322678565979004, 0.7354378700256348, 0.7306828498840332, 0.7351737022399902, 0.7345132827758789, 0.7362303733825684, 0.7366266250610352, 0.7400607466697693, 0.7440232634544373, 0.7437590956687927, 0.7465327978134155, 0.7425703406333923, 0.7497028112411499, 0.7446836829185486, 0.7448157668113708, 0.7428345084190369, 0.7514199018478394, 0.7500990629196167], "val_loss": [1.9467027527945382, 1.9205092702593123, 1.8885374069213867, 1.8451896395002092, 1.7855270249503, 1.704484019960676, 1.6011626039232527, 1.475182022367205, 1.3448536055428642, 1.2174920354570662, 1.1088310650416784, 1.0202919415065221, 0.9498179299490792, 0.8963254179273333, 0.8516263450895037, 0.8171566895076207, 0.7875232185636248, 0.7639312062944684, 0.7439266272953579, 0.7257919822420392, 0.7100965295519147, 0.6957440376281738, 0.6804528066090175, 0.6717486722128732, 0.6605563504355294, 0.6532750129699707, 0.6440371956144061, 0.6370775018419538, 0.6295308555875506, 0.6238931587764195, 0.617870569229126, 0.6132336854934692, 0.6084878104073661, 0.6014111382620675, 0.5959465503692627, 0.5940186636788505, 0.587444611958095, 0.5826777049473354, 0.579635773386274, 0.5762754849025181, 0.572819709777832, 0.5686449834278652, 0.5665618692125592, 0.5623248985835484, 0.5590905461992536, 0.5558939831597465, 0.5545674903052193, 0.5527085406439645, 0.5534024919782367, 0.5451936210904803, 0.5450896876198905, 0.5420015369142804, 0.5407807145799909, 0.5391276393617902, 0.5354324408939907, 0.5325874601091657, 0.5306306907108852, 0.5278911249978202, 0.5261657067707607, 0.5252249240875244, 0.5229574612208775, 0.5212130546569824, 0.5180532932281494, 0.5163578476224627, 0.5160681009292603, 0.513877374785287, 0.5154533386230469, 0.5114804676600865], "val_accuracy": [0.2383333295583725, 0.3659999966621399, 0.41333332657814026, 0.4533333480358124, 0.4970000088214874, 0.5320000052452087, 0.5573333501815796, 0.5643333196640015, 0.5926666855812073, 0.6023333072662354, 0.6346666812896729, 0.6513333320617676, 0.6669999957084656, 0.6693333387374878, 0.6823333501815796, 0.6823333501815796, 0.6899999976158142, 0.7016666531562805, 0.6973333358764648, 0.7043333053588867, 0.7136666774749756, 0.7146666646003723, 0.7166666388511658, 0.718999981880188, 0.722000002861023, 0.7296666502952576, 0.7279999852180481, 0.7293333411216736, 0.734666645526886, 0.7353333234786987, 0.7426666617393494, 0.7336666584014893, 0.7333333492279053, 0.7443333268165588, 0.7440000176429749, 0.746666669845581, 0.7456666827201843, 0.7490000128746033, 0.7519999742507935, 0.7549999952316284, 0.7573333382606506, 0.7513333559036255, 0.7566666603088379, 0.7620000243186951, 0.7546666860580444, 0.7639999985694885, 0.7583333253860474, 0.7620000243186951, 0.7576666474342346, 0.7639999985694885, 0.7643333077430725, 0.7643333077430725, 0.765333354473114, 0.765999972820282, 0.7643333077430725, 0.7676666378974915, 0.7693333625793457, 0.7673333287239075, 0.7706666588783264, 0.7736666798591614, 0.7730000019073486, 0.7743333578109741, 0.778333306312561, 0.7763333320617676, 0.7733333110809326, 0.7746666669845581, 0.7776666879653931, 0.777999997138977]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [3, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [98, 8, 15, 63, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [5, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7774285674095154, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.291349413183623, 2.2644753373294315, 2.235304046284962, 2.195523316912789, 2.1433336910176757, 2.069850229993394, 1.9823938592266586, 1.851894019050306, 1.7308796049187827, 1.5936553499182502, 1.4843688181378445, 1.3828657001410463, 1.3006592503533687, 1.2370711913780845, 1.1880291940009888, 1.1386726206288347, 1.1031272684058746, 1.0667933194770505, 1.0448011997715672, 1.0091709537576015, 0.9878087449209203, 0.968402698937188, 0.9308466486108301, 0.9217626384897727, 0.914585224342321, 0.8990628549908098, 0.8871927651605114, 0.8786528916123395, 0.8702388983975154, 0.8607470658886403, 0.8501308899765961, 0.8432817570505959, 0.832022294313554, 0.8077729068349113, 0.8067763493738438, 0.8018932318832298, 0.7952099705432085, 0.7937284645907017, 0.7903697290094285, 0.7830070137993346, 0.7746081645651548, 0.7675688398937743, 0.7625055876878495, 0.754800150179041, 0.7533728120868957, 0.7439507517627579, 0.7466489018985797, 0.7414517159302001, 0.7413578683343373, 0.7268125704565793, 0.734830660937154], "accuracy": [0.11649715900421143, 0.18623696267604828, 0.25478801131248474, 0.3069607615470886, 0.3531897962093353, 0.3797384798526764, 0.40945714712142944, 0.4415532946586609, 0.4683661460876465, 0.49953770637512207, 0.5164443254470825, 0.5436534285545349, 0.5647866725921631, 0.5761458277702332, 0.5842028856277466, 0.6067890524864197, 0.6123365759849548, 0.6238277554512024, 0.6284506916999817, 0.6445648074150085, 0.6552634835243225, 0.658961832523346, 0.6647734642028809, 0.6670188903808594, 0.6744155287742615, 0.6789063811302185, 0.6818121671676636, 0.6820763349533081, 0.687491774559021, 0.6911900639533997, 0.6940959095954895, 0.6984546184539795, 0.6972658634185791, 0.707568347454071, 0.707040011882782, 0.7086250185966492, 0.7083608508110046, 0.7084929347038269, 0.7078325152397156, 0.71100252866745, 0.7172104120254517, 0.7197200059890747, 0.7172104120254517, 0.7217012047767639, 0.726192057132721, 0.722229540348053, 0.7260599732398987, 0.724210798740387, 0.7285695672035217, 0.7318716049194336, 0.7329282760620117], "val_loss": [1.9467026846749442, 1.9205092702593123, 1.8885377475193568, 1.8451852117265974, 1.7855209623064314, 1.7044801030840193, 1.60115875516619, 1.4751811708722795, 1.3448622567313058, 1.217496701649257, 1.1088365486689977, 1.0202974591936385, 0.9498199054173061, 0.8963368620191302, 0.851662107876369, 0.817192622593471, 0.7875503982816424, 0.7639420202800206, 0.7439075367791312, 0.7257890360695975, 0.7101111922945295, 0.6957448720932007, 0.6804207393101284, 0.671744806425912, 0.6605416366032192, 0.6533201081412179, 0.6441173553466797, 0.6371710641043526, 0.629589285169329, 0.6239770310265678, 0.6179256609507969, 0.6133398158209664, 0.60850042956216, 0.6013951642172677, 0.5959279537200928, 0.5939867155892509, 0.5874604327338082, 0.5827797651290894, 0.5797578777585711, 0.5763452223369053, 0.5728590658732823, 0.5687063591820853, 0.5666323729923793, 0.562250018119812, 0.5590803112302508, 0.5557324375425067, 0.5544871262141636, 0.5527509791510445, 0.5534158263887677, 0.5452919006347656, 0.54506744657244], "val_accuracy": [0.2383333295583725, 0.3659999966621399, 0.41333332657814026, 0.45366665720939636, 0.4970000088214874, 0.5320000052452087, 0.5573333501815796, 0.5643333196640015, 0.5926666855812073, 0.6023333072662354, 0.6346666812896729, 0.6510000228881836, 0.6669999957084656, 0.6700000166893005, 0.6823333501815796, 0.6819999814033508, 0.6899999976158142, 0.7020000219345093, 0.6973333358764648, 0.7046666741371155, 0.7133333086967468, 0.7146666646003723, 0.7166666388511658, 0.718666672706604, 0.7223333120346069, 0.7296666502952576, 0.7279999852180481, 0.7289999723434448, 0.7350000143051147, 0.7350000143051147, 0.7426666617393494, 0.7336666584014893, 0.7336666584014893, 0.7436666488647461, 0.7440000176429749, 0.746666669845581, 0.7450000047683716, 0.7490000128746033, 0.7523333430290222, 0.7546666860580444, 0.7570000290870667, 0.7509999871253967, 0.7570000290870667, 0.7620000243186951, 0.7549999952316284, 0.7636666893959045, 0.7580000162124634, 0.7616666555404663, 0.7576666474342346, 0.7636666893959045, 0.7633333206176758]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 0, 2, 0, 8, 1, 7, 0, 3, 2, 6, 7, 8, 9, 3, 4, 6, 4, 5, 8, 7, 1, 4, 9, 4], [3, 2, 3, 1, 1, 2, 2, 2, 2, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [43, 57]], "fitness": -0.7222856879234314, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.8528714558357386, 1.0236887951033258, 0.8048601838355492, 0.7223915664700312, 0.67830555345467, 0.6698285968721567, 0.6642330890129492, 0.6591074648408558, 0.6729793162110334, 0.7195809894013697, 0.6962035740953884], "accuracy": [0.3793422281742096, 0.6242240071296692, 0.696209192276001, 0.7347774505615234, 0.7421740889549255, 0.7388719916343689, 0.7584202885627747, 0.7537974119186401, 0.7547219395637512, 0.7368907928466797, 0.7543256878852844], "val_loss": [0.9103777408599854, 0.7287063939230782, 0.5903634684426444, 0.5399543217250279, 0.5198618343898228, 0.5453100374766758, 0.49141994544437956, 0.5177215508052281, 0.523195573261806, 0.4958112580435617, 0.643562912940979], "val_accuracy": [0.6129999756813049, 0.6613333225250244, 0.7509999871253967, 0.7676666378974915, 0.7696666717529297, 0.7903333306312561, 0.7853333353996277, 0.777999997138977, 0.7876666784286499, 0.7876666784286499, 0.7666666507720947]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [3, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7051428556442261, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2720665847305703, 2.0167177228438873, 1.4703357207257088, 1.1261706227135775, 0.9061347911103117, 0.8354050755862941, 0.81890945809471, 0.7511717670030913, 0.7521667910006383, 0.7230485594189162, 0.6775940182879459, 0.6639053518541296, 0.6199461122891844, 0.606878042945363, 0.5841244327913359, 0.5780968128918437, 0.5653463515150801, 0.5460432640014465, 0.5312347482373733, 0.5076195034037932, 0.5090454477659857, 0.4894518066611446, 0.4785813036816483, 0.49148823724147617, 0.4731227299241562, 0.46917753920830974, 0.4693825944752316, 0.459190940332608, 0.4347978945712781, 0.43439254333172744, 0.43373752993646786, 0.426460049392021, 0.40388555912341045, 0.40361025796007755, 0.4111308423464466, 0.3968016069090645, 0.39590130359615394, 0.37577459296026344, 0.3771179336574745, 0.3789999594958923], "accuracy": [0.16470743715763092, 0.38026681542396545, 0.49953770637512207, 0.6100911498069763, 0.6675472259521484, 0.6851142644882202, 0.6964733600616455, 0.7065116763114929, 0.7113987803459167, 0.7325320243835449, 0.7408532500267029, 0.739400327205658, 0.7627789974212646, 0.7670056819915771, 0.7751948237419128, 0.7792893648147583, 0.7792893648147583, 0.7873464822769165, 0.7942147850990295, 0.7984414100646973, 0.8075551390647888, 0.813498854637146, 0.8168009519577026, 0.8133667707443237, 0.8150838613510132, 0.8197067975997925, 0.8228767514228821, 0.8190463781356812, 0.8296129703521729, 0.8343679904937744, 0.832650899887085, 0.832650899887085, 0.8416325449943542, 0.8426892161369324, 0.8392550349235535, 0.8397833704948425, 0.8430854678153992, 0.8537842035293579, 0.8561616539955139, 0.8573504090309143], "val_loss": [1.8673364775521415, 1.308946234839303, 0.796818562916347, 0.666436927659171, 0.6612233775002616, 0.6107821634837559, 0.6047667605536324, 0.5923252616609845, 0.5539862087794712, 0.5400138412203107, 0.5278105906077794, 0.48389855452946257, 0.47696893555777414, 0.4660132782799857, 0.4661704812731062, 0.45655027457645964, 0.45272966793605257, 0.4456503050667899, 0.42697077989578247, 0.42121511697769165, 0.42231797320502146, 0.4119670305933271, 0.41754010745457243, 0.4071058971541269, 0.40379217692783903, 0.40143739325659616, 0.3967584456716265, 0.3830861278942653, 0.39540486676352365, 0.38965654373168945, 0.37966935123716083, 0.384926438331604, 0.38109769991465975, 0.3996355193001883, 0.3829999055181231, 0.3810739006314959, 0.3888418163572039, 0.3869176592145647, 0.41261926719120573, 0.41376964535032], "val_accuracy": [0.414000004529953, 0.5580000281333923, 0.6660000085830688, 0.6963333487510681, 0.7279999852180481, 0.7126666903495789, 0.737666666507721, 0.7303333282470703, 0.7630000114440918, 0.7609999775886536, 0.762666642665863, 0.7836666703224182, 0.7913333177566528, 0.7946666479110718, 0.8019999861717224, 0.7973333597183228, 0.8036666512489319, 0.8009999990463257, 0.8080000281333923, 0.8133333325386047, 0.8236666917800903, 0.8226666450500488, 0.8266666531562805, 0.8336666822433472, 0.831333339214325, 0.8309999704360962, 0.8299999833106995, 0.8393333554267883, 0.8443333506584167, 0.8446666598320007, 0.8429999947547913, 0.8383333086967468, 0.8479999899864197, 0.8473333120346069, 0.8533333539962769, 0.8453333377838135, 0.8460000157356262, 0.8510000109672546, 0.8513333201408386, 0.8426666855812073]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 5, 2, 8, 8, 0, 9, 0, 3, 3, 3, 0, 8, 9, 3, 4, 9, 6, 7, 8, 7, 1, 4, 9], [2, 2, 1, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [98, 8, 15, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [51, 57]], "fitness": -0.6045714020729065, "mapping_values": [1, 8, 8, 7, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2476131983122034, 2.4630556701747826, 2.298622738778111, 2.155794321065723, 2.164238741888803, 1.7316250279437533, 1.4824869239870362, 1.3016907283894814, 2.05093120013907, 2.1681656013972974, 2.20144988079396, 2.313869436387735, 2.0626139621913486], "accuracy": [0.2509576082229614, 0.21621978282928467, 0.11847840249538422, 0.2475234419107437, 0.21938978135585785, 0.42108044028282166, 0.4810461103916168, 0.514198899269104, 0.2945449650287628, 0.2078985571861267, 0.22031435370445251, 0.10540219396352768, 0.28397834300994873], "val_loss": [1.9420180320739746, 1.975475651877267, 1.9438084193638392, 1.4036436762128557, 1.5484488010406494, 1.0384752750396729, 0.9809697014944894, 0.8876662594931466, 1.975125857761928, 1.972642081124442, 2.000936848776681, 1.8769007410321916, 1.9769225801740373], "val_accuracy": [0.3499999940395355, 0.11133333295583725, 0.23766666650772095, 0.3970000147819519, 0.40700000524520874, 0.6016666889190674, 0.5929999947547913, 0.6236666440963745, 0.09933333098888397, 0.12666666507720947, 0.10000000149011612, 0.3553333282470703, 0.30533334612846375]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 5, 2, 8, 8, 0, 9, 0, 3, 3, 3, 0, 8, 9, 3, 4, 9, 6, 7, 8, 7, 1, 4, 9], [3, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 43, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3, 0], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [7, 7], [88, 19], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [1, 0, 0, 1, 3, 3], [44, 57]], "fitness": -0.20200000703334808, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [4.587202600531527, 2.8141068982693813, 2.474009919963288, 1.977820165769468e+32, 2.9189329735906195, 3.152771263232147, 2.8179756486263132, 2.8968134196269717], "accuracy": [0.17751948535442352, 0.13578127324581146, 0.09642054885625839, 0.09074098616838455, 0.10236428678035736, 0.10276053100824356, 0.09893012791872025, 0.1002509593963623], "val_loss": [2.133922849382673, 2.0837422779628207, 2.0280376843043735, 2.159454413822719, 2.7458846228463307, 2.6457079478672574, 2.1929102625165666, 2.4614663124084473], "val_accuracy": [0.09833333641290665, 0.09799999743700027, 0.1003333330154419, 0.09933333098888397, 0.09966666996479034, 0.10000000149011612, 0.1003333330154419, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 43, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [2, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 8, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [85, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [98, 8, 15, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 8, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [51, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 0], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.math.negative(sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 43, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [0, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [37, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 3, 2, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(sigma))", "other_info": {"loss": [1242405844.091323, 23913499470.41289, 111463629968.58539, 307311677979.38873, 658875552833.0566, 1218658109201.1433], "accuracy": [0.10091137140989304, 0.10091137140989304, 0.09774138033390045, 0.09496764093637466, 0.1018359512090683, 0.10447761416435242], "val_loss": [4791423561.142858, 38319919689.14286, 129316576109.71428, 306512246491.4286, 598638123885.7142, 1034428238116.5714], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [98, 8, 15, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [2, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [51, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 12, 7, 5, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [3, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [1, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 9, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07621186226606369, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 5, 2, 8, 4, 0, 9, 0, 3, 3, 3, 0, 8, 9, 3, 4, 9, 6, 7, 8, 7, 1, 4, 9], [2, 2, 1, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [98, 8, 15, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 1, 0, 1, 1], [2, 9, 6, 1, 7, 5, 5, 9], [3, 4, 3, 0], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [4, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [51, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 22, 22, 17, 5, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 8, 4, 4, 2], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.sqrt(tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, grad), alpha), tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.pow(tf.math.add(alpha, alpha), alpha), tf.math.add(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(sigma, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [3, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 12, 7, 5, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(sigma), tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 9, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 0, 9, 7, 8, 7, 0, 4, 9, 4], [2, 2, 1, 1, 1, 1, 2, 2, 0, 3, 1, 0, 3, 2, 3, 0], [98, 8, 15, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 8, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 5, 2, 8, 8, 0, 9, 0, 3, 3, 3, 0, 8, 9, 3, 4, 9, 6, 7, 8, 7, 1, 4, 9], [2, 2, 1, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [98, 8, 15, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 5, 3, 3], [8, 59, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [0, 0, 0, 1, 3, 3], [51, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [130565820.82517584, 2511658512.9742436, 11705178784.748117, 32269491962.15031, 69182558911.8563, 127956525411.98573], "accuracy": [0.10091137140989304, 0.10091137140989304, 0.09774138033390045, 0.09496764093637466, 0.1018359512090683, 0.10447761416435242], "val_loss": [503361956.5714286, 4024355840.0, 13579336850.285715, 32184799817.142857, 62856675328.0, 108611282066.28572], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 43, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [1, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [2, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3065586555210387, 2.378060472104465, 3.835477724870151, 13.001533423400968, 44.764360500663706, 864.6791713353334], "accuracy": [0.09628847241401672, 0.10117553919553757, 0.1002509593963623, 0.10249637067317963, 0.1018359512090683, 0.09985470771789551], "val_loss": [1.9756594385419572, 2.051146984100342, 5.17541367667062, 23.597869328090123, 78.74339294433594, 157.40778459821428], "val_accuracy": [0.10199999809265137, 0.09833333641290665, 0.10199999809265137, 0.09799999743700027, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 5, 2, 8, 8, 0, 9, 0, 3, 3, 3, 0, 8, 9, 3, 4, 9, 6, 7, 8, 7, 1, 4, 9], [2, 2, 1, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [98, 8, 15, 25, 98, 52, 94, 1], [0, 1, 1, 0, 1, 0, 1, 1, 0], [0, 1, 0, 0, 1, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 4, 1], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [51, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 7, 1, 1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 12, 7, 5, 2], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.square(tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))))), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(sigma), tf.math.pow(tf.math.add(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [3, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [4, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 1, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, alpha))", "other_info": {"loss": [2.302227466397077, 2.3022265287202033, 2.302334825234595, 2.301947675786077, 2.3031917022377066, 2.3023912587012787], "accuracy": [0.08928807079792023, 0.09259014576673508, 0.0944393053650856, 0.09219389408826828, 0.08928807079792023, 0.09589222073554993], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 5, 3, 4, 6, 9, 7, 8, 3, 4, 4, 9, 1, 3, 2, 9, 2, 2, 7, 6, 8, 1], [2, 2, 1, 1, 1, 1, 2, 2, 0, 2, 2, 0, 3, 2, 3, 0, 0, 0, 3, 1, 3], [98, 8, 15, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 55, 55, 34, 21, 8, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 50, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(grad, tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, alpha), alpha)))))))), tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))), tf.math.multiply(tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(grad, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))))))), tf.math.add(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))))))), tf.math.add(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.sqrt(grad), grad)), tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, grad))))), tf.math.subtract(alpha, tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302227466397077, 2.3022265287202033, 2.302334825234595, 2.301947675786077, 2.3031917022377066, 2.3023912587012787], "accuracy": [0.08928807079792023, 0.09259014576673508, 0.0944393053650856, 0.09219389408826828, 0.08928807079792023, 0.09589222073554993], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]