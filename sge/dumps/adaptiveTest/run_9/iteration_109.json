[{"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 4, 7, 8, 4], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.798285722732544, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 8, 4, 4, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [2.292397475718129, 2.266585140117423, 2.232420640677635, 2.196713425904973, 2.1449106304227654, 2.070175671196412, 1.9677850299460335, 1.8567726875356065, 1.7265855930169907, 1.596236386980599, 1.4770459250814296, 1.3831045005961085, 1.3011785423310047, 1.2425783535177997, 1.1850282830521888, 1.1371957935346604, 1.09906961005897, 1.064196759100997, 1.0370075592606092, 1.00612182148601, 0.9897041531003399, 0.9676467159153086, 0.9482051229291132, 0.9346804997042705, 0.9165718903426308, 0.9035328208116917, 0.8858907738885765, 0.8731810190359268, 0.8533801221891621, 0.8448594884314415, 0.8435672769740493, 0.8361266628783597, 0.8173830066185743, 0.8174492974858226, 0.8057262902608747, 0.8044601188375493, 0.7948448483844113, 0.8016096047989176, 0.7851410292442276, 0.7863851979801982, 0.7754171444613621, 0.7598627399239385, 0.7723894515734748, 0.763331125464658, 0.7542548033350636, 0.7470751867837847, 0.7360659348037281, 0.7460838008581955, 0.7419103069028928, 0.7282733544225092, 0.7275006323757582, 0.7153699121470811, 0.7155387542424437, 0.7211213631558144, 0.7234434205244057, 0.7137669901869254, 0.7007308303247023, 0.7016484349977858, 0.705039059835544, 0.694889681489791, 0.6965201285851866, 0.6873649941648333, 0.686875248605612, 0.6769870627101198, 0.6757043191486298, 0.6784217442976186, 0.6747528214763893, 0.6655499592921391, 0.6613701262084831, 0.6661431448901445, 0.6660845619166894, 0.659789473601714, 0.6766296332821854, 0.6687984111806294, 0.6522674285394011, 0.6518918681122671, 0.6577002396121898, 0.645685468115559, 0.6542826036200186, 0.6445836440651818, 0.6432222866221599, 0.6478477457196028, 0.6397597859359578, 0.638123173306505, 0.6355457510836073, 0.6355571667232597, 0.6372049405920885, 0.6261399583478945, 0.6282361321335282, 0.6258332302557432, 0.6256552305692034], "accuracy": [0.12653546035289764, 0.18702945113182068, 0.2596750855445862, 0.29877161979675293, 0.3473781645298004, 0.38488972187042236, 0.42187294363975525, 0.43825122714042664, 0.4711398780345917, 0.4904239773750305, 0.5233126282691956, 0.5472196340560913, 0.5655791759490967, 0.5739004015922546, 0.587769091129303, 0.605468213558197, 0.6144498586654663, 0.6222427487373352, 0.6276581883430481, 0.6429798007011414, 0.648659348487854, 0.6559239029884338, 0.6601505875587463, 0.6705851554870605, 0.667811393737793, 0.6803592443466187, 0.681547999382019, 0.683529257774353, 0.6956809163093567, 0.6975300312042236, 0.6950204968452454, 0.6971337795257568, 0.7022850513458252, 0.7012283802032471, 0.7117950320243835, 0.7103421092033386, 0.7074362635612488, 0.7057191729545593, 0.7144366502761841, 0.7131158113479614, 0.7161537408828735, 0.7177387475967407, 0.7135120630264282, 0.718399167060852, 0.7224937081336975, 0.7290979027748108, 0.7294940948486328, 0.7228899598121643, 0.7259278893470764, 0.7292299270629883, 0.7314753532409668, 0.7366266250610352, 0.7325320243835449, 0.7326641082763672, 0.7329282760620117, 0.7366266250610352, 0.7392682433128357, 0.7378153204917908, 0.7347774505615234, 0.7420420050621033, 0.7375511527061462, 0.743891179561615, 0.7412495017051697, 0.7450799345970154, 0.7452120184898376, 0.750759482383728, 0.7450799345970154, 0.7537974119186401, 0.7504953145980835, 0.7460044622421265, 0.752740740776062, 0.755118191242218, 0.7479857206344604, 0.7544577717781067, 0.7543256878852844, 0.754589855670929, 0.7536653280258179, 0.7573636174201965, 0.750759482383728, 0.7585523724555969, 0.7623828053474426, 0.7552502751350403, 0.7635715007781982, 0.7631752490997314, 0.7638356685638428, 0.7646281719207764, 0.7614582180976868, 0.7650244235992432, 0.7617223858833313, 0.7611940503120422, 0.7621186375617981], "val_loss": [1.9465716225760323, 1.9206839288984026, 1.8884193556649345, 1.8454467909676688, 1.7855184418814523, 1.7038137572152274, 1.597301994051252, 1.4722137451171875, 1.3402022293635778, 1.212899582726615, 1.1048613616398402, 1.0174387182508196, 0.9489744050162179, 0.8942076478685651, 0.8501789229256767, 0.8157599823815482, 0.7865104675292969, 0.7635915619986398, 0.7415372814450946, 0.7251346451895577, 0.7092110429491315, 0.6939799615315029, 0.6814530066081456, 0.6711665221623012, 0.6606970855167934, 0.6531818083354405, 0.6436121804373605, 0.6364350489207676, 0.6279185158865792, 0.6220875808170864, 0.6157222645623344, 0.6116600377219064, 0.6071643999644688, 0.5994162048612323, 0.5964535985674176, 0.5909611667905535, 0.5884492227009365, 0.5837426696504865, 0.5814252580915179, 0.5768393959317889, 0.5721733229500907, 0.5695731128965106, 0.5649704933166504, 0.561254790851048, 0.5589394569396973, 0.5563423122678485, 0.5529577221189227, 0.5513207401548114, 0.5494109221867153, 0.5452497175761631, 0.5429882492337909, 0.5397396257945469, 0.5380614655358451, 0.5354898316519601, 0.5339882373809814, 0.5342760596956525, 0.531653881072998, 0.5276428971971784, 0.52626861844744, 0.5245574372155326, 0.5217317342758179, 0.5221741880689349, 0.5179648058755058, 0.516911506652832, 0.5155552285058158, 0.5120278937476022, 0.5124225957053048, 0.5092628853661674, 0.5101146868297032, 0.5065072774887085, 0.5066011122294835, 0.504428608076913, 0.5049513408115932, 0.5024085896355766, 0.5011507953916278, 0.4986229794366019, 0.49798236574445454, 0.4974560907908848, 0.5001020431518555, 0.4958045652934483, 0.4955491168158395, 0.49413767882755827, 0.49313741070883615, 0.49016426290784565, 0.49001709052494596, 0.48899541582380024, 0.4882790190832956, 0.48826466287885395, 0.48435022149767193, 0.4859880208969116, 0.4832947254180908], "val_accuracy": [0.2356666624546051, 0.36899998784065247, 0.4193333387374878, 0.4546666741371155, 0.4896666705608368, 0.5170000195503235, 0.5476666688919067, 0.5653333067893982, 0.593666672706604, 0.6043333411216736, 0.6356666684150696, 0.6603333353996277, 0.6696666479110718, 0.67166668176651, 0.6790000200271606, 0.6846666932106018, 0.6880000233650208, 0.6956666707992554, 0.6980000138282776, 0.7043333053588867, 0.7106666564941406, 0.7166666388511658, 0.7206666469573975, 0.7213333249092102, 0.7243333458900452, 0.7239999771118164, 0.7239999771118164, 0.7273333072662354, 0.7360000014305115, 0.737333357334137, 0.7386666536331177, 0.7440000176429749, 0.7419999837875366, 0.7400000095367432, 0.746999979019165, 0.7473333477973938, 0.7490000128746033, 0.7456666827201843, 0.75, 0.7563333511352539, 0.7526666522026062, 0.7553333044052124, 0.7599999904632568, 0.7596666812896729, 0.7559999823570251, 0.7576666474342346, 0.7616666555404663, 0.765333354473114, 0.765333354473114, 0.7663333415985107, 0.7673333287239075, 0.7666666507720947, 0.7699999809265137, 0.768666684627533, 0.7689999938011169, 0.765666663646698, 0.7670000195503235, 0.7730000019073486, 0.7726666927337646, 0.7716666460037231, 0.7723333239555359, 0.7710000276565552, 0.7733333110809326, 0.777999997138977, 0.7746666669845581, 0.7760000228881836, 0.7799999713897705, 0.7776666879653931, 0.7776666879653931, 0.778333306312561, 0.7806666493415833, 0.7796666622161865, 0.781000018119812, 0.7820000052452087, 0.7786666750907898, 0.7839999794960022, 0.7826666831970215, 0.7803333401679993, 0.7796666622161865, 0.7853333353996277, 0.781000018119812, 0.7833333611488342, 0.7870000004768372, 0.7820000052452087, 0.7839999794960022, 0.7883333563804626, 0.784333348274231, 0.7823333144187927, 0.7870000004768372, 0.7870000004768372, 0.7860000133514404]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 6, 3, 5, 7, 8, 9, 3, 4, 2, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 2, 2, 2, 0, 1, 2, 0, 3, 2, 3, 0], [30, 8, 43, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7862856984138489, "mapping_values": [1, 21, 21, 14, 7, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.sqrt(grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))), tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.divide_no_nan(tf.math.add(alpha, grad), alpha))), tf.math.add(alpha, tf.math.multiply(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), alpha))), tf.math.add(alpha, grad))))), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.292397817553247, 2.2665950316385177, 2.2324553633158186, 2.1968017911174123, 2.145103516123314, 2.070583156480639, 1.9685450407807161, 1.8579679305574535, 1.7281862360973557, 1.5980934803559244, 1.4789040882070035, 1.3848569514555875, 1.3027144886514908, 1.2438865458850359, 1.1862137931889987, 1.1382750911546373, 1.1000375016458974, 1.0651278380531408, 1.0378472662998652, 1.0068267590617617, 0.9904729124104987, 0.9683588862718293, 0.9488728717333605, 0.9352758332659871, 0.9171962450760199, 0.9039535245654794, 0.8863019463786391, 0.8735915802378837, 0.8538237766441085, 0.8452409047177282, 0.8439462589250816, 0.8365015259681519, 0.8176508567446904, 0.8177602337713901, 0.806082475147605, 0.8047235032051246, 0.795104838806357, 0.8018936822049417, 0.7854939264754232, 0.7867336940094622, 0.7756033350747134, 0.7600568167490336, 0.7726349823463232, 0.7635087834656624, 0.754467257088548, 0.7472661520905419, 0.7362239392851448, 0.7463122643358152, 0.7421145771378304, 0.7284279627696697, 0.7275823782290513, 0.7156229817305164, 0.7157181107199597, 0.7213174482346715, 0.7236342453181924, 0.7138711384983111, 0.7009067949507419, 0.7018334482639158, 0.7052523556119021, 0.695098256658585, 0.6967520897949944, 0.6875291895699491, 0.687053470626688], "accuracy": [0.12653546035289764, 0.18716153502464294, 0.2595430016517639, 0.2989037036895752, 0.34684982895851135, 0.38488972187042236, 0.4220050275325775, 0.4379870593547821, 0.4710077941417694, 0.49068814516067505, 0.5233126282691956, 0.5472196340560913, 0.5651829242706299, 0.5742966532707214, 0.5871087312698364, 0.605468213558197, 0.6145819425582886, 0.6214502453804016, 0.6281865239143372, 0.6424514651298523, 0.6490556001663208, 0.6563201546669006, 0.6598864197731018, 0.6701889038085938, 0.6676793098449707, 0.6796988248825073, 0.681547999382019, 0.6832650899887085, 0.6950204968452454, 0.6968696117401123, 0.6950204968452454, 0.6971337795257568, 0.7022850513458252, 0.7014925479888916, 0.7112666964530945, 0.7103421092033386, 0.707040011882782, 0.7055870890617371, 0.7137762308120728, 0.7129837274551392, 0.7164179086685181, 0.7176066637039185, 0.7125874757766724, 0.7182670831680298, 0.722229540348053, 0.728701651096344, 0.7298903465270996, 0.7226257920265198, 0.7250033020973206, 0.7296261787414551, 0.7318716049194336, 0.7363624572753906, 0.7323999404907227, 0.7329282760620117, 0.7333245277404785, 0.7375511527061462, 0.7396644949913025, 0.737947404384613, 0.7339849472045898, 0.7423061728477478, 0.7375511527061462, 0.7432307600975037, 0.7408532500267029], "val_loss": [1.9465776171003069, 1.9207038198198592, 1.8884852273123605, 1.8455915451049805, 1.7858119692121233, 1.704399687903268, 1.598329714366368, 1.4737567901611328, 1.342139516557966, 1.2149935109274728, 1.1068806988852364, 1.0192662647792272, 0.9505430289677211, 0.8955050536564418, 0.8513207946504865, 0.816771217754909, 0.7874564954212734, 0.7643431765692574, 0.7421540873391288, 0.7257441452571324, 0.709708571434021, 0.6944679873330253, 0.681945971080235, 0.6715597765786308, 0.6611466748373849, 0.6536431653159005, 0.6439706257411412, 0.6366740976061139, 0.6282305717468262, 0.6223845141274589, 0.6159939425332206, 0.611904672213963, 0.6073749916894096, 0.5997044699532645, 0.5966195208685738, 0.591298154422215, 0.5886587756020683, 0.5839439289910453, 0.5816527094159808, 0.5770859888621739, 0.5724200010299683, 0.5696454729352679, 0.5651915073394775, 0.5613863979067121, 0.5591021946498326, 0.5565421070371356, 0.5530532598495483, 0.5515100615365165, 0.5495309659412929, 0.5454073803765433, 0.5431393555232457, 0.5399362359728131, 0.5382628951753888, 0.5356566054480416, 0.5341789381844657, 0.5343883207866124, 0.5318963187081474, 0.5278465918132237, 0.5264501912253243, 0.524836710521153, 0.5218681267329625, 0.5222374030521938, 0.5180203403745379], "val_accuracy": [0.2356666624546051, 0.36899998784065247, 0.4193333387374878, 0.4543333351612091, 0.4896666705608368, 0.5170000195503235, 0.5476666688919067, 0.5649999976158142, 0.5933333039283752, 0.6043333411216736, 0.6346666812896729, 0.6596666574478149, 0.6703333258628845, 0.67166668176651, 0.6796666383743286, 0.6840000152587891, 0.6880000233650208, 0.6970000267028809, 0.6980000138282776, 0.7046666741371155, 0.7106666564941406, 0.7170000076293945, 0.7193333506584167, 0.7213333249092102, 0.7246666550636292, 0.7243333458900452, 0.7246666550636292, 0.7273333072662354, 0.7360000014305115, 0.7366666793823242, 0.7390000224113464, 0.7436666488647461, 0.7423333525657654, 0.7396666407585144, 0.7456666827201843, 0.7486666440963745, 0.7490000128746033, 0.7459999918937683, 0.749666690826416, 0.7563333511352539, 0.7526666522026062, 0.7553333044052124, 0.7599999904632568, 0.7583333253860474, 0.7553333044052124, 0.7573333382606506, 0.7613333463668823, 0.765333354473114, 0.765666663646698, 0.765999972820282, 0.7683333158493042, 0.7666666507720947, 0.7696666717529297, 0.7683333158493042, 0.7689999938011169, 0.765666663646698, 0.7666666507720947, 0.7730000019073486, 0.7730000019073486, 0.7713333368301392, 0.7730000019073486, 0.7720000147819519, 0.7730000019073486]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7854285836219788, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.292397817553247, 2.266595018128866, 2.2324554307696025, 2.1968012512981963, 2.1450997920887205, 2.0705719911474296, 1.9685275600633885, 1.8579536734350353, 1.728165074740072, 1.5980391560323863, 1.4788556424712682, 1.3847721664897046, 1.3026425402792075, 1.24383753279118, 1.1861673112810562, 1.1382674362996092, 1.10001416170775, 1.06509140275961, 1.0378251755163574, 1.0068755331229635, 0.990443989522327, 0.9683563962997997, 0.9488389172558425, 0.9352375957802412, 0.9171600060896898, 0.9039732890594526, 0.8862892957395645, 0.8735420693338445, 0.8538099281335346, 0.8452067145613505, 0.8439413412624047, 0.8364535730512718, 0.8176240263251644, 0.817712667391143, 0.8060179637203032, 0.8047193933581915, 0.7951151051651674, 0.8018472422194314, 0.7855395885852854, 0.7866392755442292, 0.7755961473733521, 0.7600172465472032, 0.7726376557299773, 0.7634522890638382, 0.7544466756700509, 0.7472018582111399, 0.7361939686983174, 0.7462904716385134, 0.7421757136085927, 0.7284837667228146, 0.7276531944988489, 0.7156590591206322, 0.7156453268198274, 0.7212893207154144, 0.72357038248012, 0.7138772615982069, 0.7009155275468671, 0.7017864451715738, 0.7052799903201767, 0.6950079517640994, 0.6966796637274224, 0.6874953472319847, 0.6869932840277002], "accuracy": [0.12653546035289764, 0.18716153502464294, 0.2595430016517639, 0.2989037036895752, 0.3467177450656891, 0.3847576379776001, 0.421740859746933, 0.4379870593547821, 0.47087571024894714, 0.4905560612678528, 0.5233126282691956, 0.5472196340560913, 0.5650508403778076, 0.5740324854850769, 0.5871087312698364, 0.6057323813438416, 0.614317774772644, 0.6215823292732239, 0.6277902722358704, 0.6429798007011414, 0.6479989290237427, 0.6563201546669006, 0.6598864197731018, 0.6704530715942383, 0.6676793098449707, 0.6796988248825073, 0.6819442510604858, 0.6832650899887085, 0.6950204968452454, 0.6972658634185791, 0.6946242451667786, 0.6972658634185791, 0.7024171352386475, 0.7008321285247803, 0.7119271159172058, 0.7100779414176941, 0.7069079279899597, 0.7053229212760925, 0.7136441469192505, 0.713379979133606, 0.7165499925613403, 0.7174745798110962, 0.7124554514884949, 0.7190595865249634, 0.7231541275978088, 0.7283053994178772, 0.7302865982055664, 0.7219653725624084, 0.7257958054542542, 0.7300224304199219, 0.7313432693481445, 0.7362303733825684, 0.7320036888122559, 0.733060359954834, 0.7337207794189453, 0.7367587089538574, 0.739928662776947, 0.7380794882774353, 0.7349095344543457, 0.7421740889549255, 0.7372870445251465, 0.7437590956687927, 0.7416457533836365], "val_loss": [1.946577685219901, 1.9207038879394531, 1.8884855679103307, 1.8455896377563477, 1.7858031817844935, 1.7043814659118652, 1.5983120032719202, 1.4737348556518555, 1.3420946257455009, 1.2149313858577184, 1.1068229334695, 1.0191831929343087, 0.9504608426775251, 0.8954339708600726, 0.8512765850339618, 0.8167198385511126, 0.7873772723334176, 0.764318449156625, 0.7422204869134086, 0.7258101872035435, 0.7097821065357753, 0.6944811344146729, 0.6819602080753872, 0.6715773854936872, 0.6611201933452061, 0.6536177396774292, 0.6439671686717442, 0.636676515851702, 0.6282050779887608, 0.6223624774387905, 0.6159824303218296, 0.6118566308702741, 0.6073859759739467, 0.5997043677738735, 0.5965766906738281, 0.5911969116755894, 0.5885525260652814, 0.583905816078186, 0.5815234354564122, 0.5770496640886579, 0.5723139728818621, 0.5695983682359967, 0.5650717190333775, 0.5613022531781878, 0.5590477330344064, 0.5564198664256504, 0.553150841167995, 0.5514611516680036, 0.5495391062327794, 0.5454069886888776, 0.5431469849177769, 0.5399277550833566, 0.5383151258741107, 0.5356726816722325, 0.5341979265213013, 0.5344163349696568, 0.5317941393171038, 0.5277785233088902, 0.5263754810605731, 0.5247278213500977, 0.5218574830463955, 0.5223249878202166, 0.5181786673409599], "val_accuracy": [0.2356666624546051, 0.36899998784065247, 0.4193333387374878, 0.4543333351612091, 0.4896666705608368, 0.5170000195503235, 0.5476666688919067, 0.5649999976158142, 0.5926666855812073, 0.6046666502952576, 0.6349999904632568, 0.659333348274231, 0.6700000166893005, 0.6713333129882812, 0.6796666383743286, 0.6840000152587891, 0.6880000233650208, 0.6976666450500488, 0.6976666450500488, 0.7036666870117188, 0.7106666564941406, 0.7170000076293945, 0.7203333377838135, 0.7210000157356262, 0.7246666550636292, 0.7243333458900452, 0.7243333458900452, 0.7273333072662354, 0.7360000014305115, 0.7366666793823242, 0.7390000224113464, 0.7436666488647461, 0.7423333525657654, 0.7390000224113464, 0.746666669845581, 0.7480000257492065, 0.7486666440963745, 0.7459999918937683, 0.749666690826416, 0.7556666731834412, 0.7519999742507935, 0.7549999952316284, 0.7599999904632568, 0.7590000033378601, 0.7549999952316284, 0.7573333382606506, 0.7609999775886536, 0.7646666765213013, 0.765666663646698, 0.765999972820282, 0.765999972820282, 0.7663333415985107, 0.7696666717529297, 0.7683333158493042, 0.7689999938011169, 0.765333354473114, 0.7670000195503235, 0.7730000019073486, 0.7730000019073486, 0.7716666460037231, 0.7730000019073486, 0.7716666460037231, 0.7730000019073486]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 2, 6, 3, 3, 7, 8, 9, 0, 4, 8, 6, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 2, 1, 2, 0, 2, 2, 0, 3, 2, 3, 0], [30, 4, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.6791428327560425, "mapping_values": [1, 7, 7, 4, 3, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.272737376489313, 2.0204744065647127, 1.4522852176027117, 1.1734380566558944, 0.932649505806007, 0.8491179863097503, 0.8237029031251699, 0.7498728706458493, 0.7638031018487278, 0.7260841653174129, 0.6937667759906158, 0.6481237441021863, 0.6209681416310497, 0.6095212830481291, 0.595155397457863, 0.5787845235443417, 0.5618625732539525, 0.5477631839747285, 0.5283778224756941, 0.51336657272716, 0.513077317904708, 0.5029193633708972, 0.4811764889783107, 0.48238470670160066, 0.481287110345459, 0.474049577694433, 0.4524954325881034, 0.44333525665085693, 0.4348991548679666, 0.4343235924645123, 0.4247630154766883, 0.42837346318517266, 0.4179706482477255, 0.41696242714728093, 0.4071060324648919, 0.3948008219689709, 0.3967840101591049, 0.38338474492985164, 0.3871458521521937, 0.3797944433511823, 0.37895936791009716, 0.3589214161205695, 0.37631444032512495, 0.3664870182670512, 0.36046280903886135], "accuracy": [0.17817988991737366, 0.3887201249599457, 0.50350022315979, 0.6059965491294861, 0.6588297486305237, 0.6807554960250854, 0.6942279934883118, 0.7088891863822937, 0.7053229212760925, 0.7189275026321411, 0.737947404384613, 0.7511557340621948, 0.7621186375617981, 0.7692511081695557, 0.7650244235992432, 0.7775723338127136, 0.7794214487075806, 0.7880068421363831, 0.7959318161010742, 0.8005547523498535, 0.796328067779541, 0.8064984679222107, 0.8156121969223022, 0.8127063512802124, 0.8182538747787476, 0.8197067975997925, 0.8215559124946594, 0.8264430165290833, 0.8301413059234619, 0.8372738361358643, 0.8330471515655518, 0.8383304476737976, 0.8396512866020203, 0.8362171649932861, 0.8404437899589539, 0.8482366800308228, 0.8450667262077332, 0.8449346423149109, 0.852331280708313, 0.8561616539955139, 0.8555012345314026, 0.8569541573524475, 0.8498216867446899, 0.8590674996376038, 0.858671247959137], "val_loss": [1.8686837468828474, 1.3110976900373186, 0.8078651087624686, 0.6784732001168388, 0.683524659701756, 0.6229526996612549, 0.6120889016560146, 0.5824747426169259, 0.5859555176326207, 0.5343480450766427, 0.5166293382644653, 0.4947783776691982, 0.4984480823789324, 0.47895067078726633, 0.45887274401528494, 0.4697026184626988, 0.45380655356815885, 0.4401532070977347, 0.4332014407430376, 0.4278691751616342, 0.42080871547971455, 0.4185585379600525, 0.40559730359486174, 0.41983896493911743, 0.4019050342696054, 0.4023801343781607, 0.4038094197000776, 0.39510749067579, 0.3884951557431902, 0.39592069387435913, 0.39468748228890554, 0.3958088074411665, 0.4014197587966919, 0.3887148840086801, 0.39878020116261076, 0.4110278912952968, 0.38181797095707487, 0.37524769987378803, 0.38981722933905466, 0.38346678018569946, 0.3692795549120222, 0.3910225544657026, 0.4080690400941031, 0.3865499326160976, 0.38294851779937744], "val_accuracy": [0.41366666555404663, 0.5669999718666077, 0.6613333225250244, 0.6976666450500488, 0.7113333344459534, 0.7149999737739563, 0.7353333234786987, 0.7400000095367432, 0.7450000047683716, 0.7509999871253967, 0.7723333239555359, 0.7756666541099548, 0.7786666750907898, 0.7929999828338623, 0.7916666865348816, 0.7910000085830688, 0.800000011920929, 0.8053333163261414, 0.8169999718666077, 0.8143333196640015, 0.8213333487510681, 0.8240000009536743, 0.8276666402816772, 0.831333339214325, 0.8333333134651184, 0.8323333263397217, 0.8346666693687439, 0.8389999866485596, 0.8416666388511658, 0.8393333554267883, 0.8399999737739563, 0.8473333120346069, 0.8450000286102295, 0.8476666808128357, 0.843666672706604, 0.8433333039283752, 0.8476666808128357, 0.8529999852180481, 0.8550000190734863, 0.8610000014305115, 0.859000027179718, 0.8553333282470703, 0.8529999852180481, 0.8606666922569275, 0.8603333234786987]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 0, 2, 8, 8, 2, 7, 0, 6, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 2, 2, 2, 2, 2, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [93, 57]], "fitness": -0.2102857083082199, "mapping_values": [1, 7, 7, 5, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(grad)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3.8843663948370466, 2.3227853067735906, 2.307172786384888, 2.304402927854168, 2.3040359585497123, 2.30345088159246, 2.303490028657209, 2.303177944122131], "accuracy": [0.2008981704711914, 0.10011887550354004, 0.09721305221319199, 0.09589222073554993, 0.09893012791872025, 0.09853387624025345, 0.10038304328918457, 0.09628847241401672], "val_loss": [2.006575516292027, 1.9790126255580358, 1.9745043345860072, 1.9737001146589006, 1.9736285209655762, 1.973642076764788, 1.973611763545445, 1.9736268179757255], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.10366666316986084, 0.09966666996479034, 0.1003333330154419, 0.10066666454076767, 0.09966666996479034, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.16828571259975433, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.8080733717393254, 17.812716222946214, 48140279042.217476, NaN, NaN, NaN], "accuracy": [0.16999074816703796, 0.15691454708576202, 0.1026284471154213, 0.09840179979801178, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.0999197959899902, 190.52532958984375, 4.2845548743071253e+27, NaN, NaN, NaN], "val_accuracy": [0.13699999451637268, 0.10366666316986084, 0.08533333241939545, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.16599999368190765, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.6489195637872363, 2.3233995515404913, 2.3081660659920034, 2.304172476946229, 2.303418668474362, 2.30298541373486, 2.303207360836871, 2.3028734914063933, 2.3030938971799992, 2.30330967040283, 2.3033323068156486, 2.302856258381753], "accuracy": [0.20155857503414154, 0.09959053993225098, 0.09470347315073013, 0.09417514503002167, 0.09972262382507324, 0.09391097724437714, 0.09721305221319199, 0.10038304328918457, 0.09787346422672272, 0.09272222965955734, 0.09060890227556229, 0.09800554811954498], "val_loss": [2.0052363531930104, 1.9798908914838518, 1.9749000413077218, 1.97378328868321, 1.9736347879682268, 1.973646640777588, 1.9736055646623885, 1.9736460958208357, 1.9736462320600237, 1.9737063816615514, 1.973681926727295, 1.97371734891619], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.1003333330154419, 0.10333333164453506, 0.10466666519641876, 0.10199999809265137, 0.09966666996479034, 0.09933333098888397, 0.1003333330154419, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 9, 9, 3, 4, 6, 9, 3, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 3, 0, 1, 3, 3], [28, 57]], "fitness": -0.13342857360839844, "mapping_values": [1, 13, 13, 8, 5, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.sqrt(grad), tf.math.sqrt(tf.math.add(alpha, grad)))), tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, alpha))), alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.612060320643449, 2.324095893608439, 2.308536995702715, 2.3044317821076423, 2.303252712453062, 2.3028959025638827, 2.3030122310541183, 2.302939933603781, 2.3030240518730927, 2.303190477205195, 2.3030855753607264], "accuracy": [0.2008981704711914, 0.10077928751707077, 0.09642054885625839, 0.09325055778026581, 0.09774138033390045, 0.0952318087220192, 0.1014397069811821, 0.09536388516426086, 0.09589222073554993, 0.09100515395402908, 0.09311848133802414], "val_loss": [2.005396774836949, 1.980435848236084, 1.9750697272164481, 1.9738164629255022, 1.9736221177237374, 1.9736488206045968, 1.9736148289271764, 1.9736209596906389, 1.9736358097621374, 1.9736995697021484, 1.973672662462507], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.1003333330154419, 0.10199999809265137, 0.09966666996479034, 0.10199999809265137, 0.09966666996479034, 0.09933333098888397, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0], [3, 4, 7, 1, 7, 5, 5, 9, 2, 7, 5, 5, 8, 0, 9], [3, 4, 3, 3, 3, 0], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 15, 6, 3, 1, 0, 0, 0, 0, 12, 7, 5, 2], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.pow(tf.math.add(tf.math.add(beta, grad), grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(tf.math.square(tf.math.square(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.square(tf.math.sqrt(tf.math.negative(tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))))))))))))))), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(beta), tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 9, 7, 8, 0, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 2, 1, 1, 2, 2, 2, 0, 2, 2, 0, 3, 2, 3, 0], [30, 8, 50, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [2, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 21, 14, 7, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.sqrt(grad), tf.math.add(alpha, tf.math.sqrt(grad)))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, grad), alpha))), tf.math.multiply(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.math.negative(alpha)), grad)))), grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302602830359555, 2.3024581477563646, 2.3036327751604575, 2.3089480854815907, 2.340796273665705, 2.6861229829658466], "accuracy": [0.10632677376270294, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9737883976527624, 1.9743388039725167, 1.9765807560511999, 1.988407748086112, 2.0644282613481795, 3.4113918713160922], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 4, 7, 8, 4], [1, 1, 0, 1, 3, 3], [39, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 12, 7, 5, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(alpha, tf.math.negative(tf.math.pow(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 6, 3, 3, 7, 8, 9, 3, 4, 8, 9, 7, 8, 7, 1, 4, 9], [2, 2, 0, 1, 1, 2, 2, 2, 0, 2, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 12, 7, 5, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad)), tf.math.add(alpha, tf.math.sqrt(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 2, 2, 2, 0, 2, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 1, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1], [2, 0, 2, 4, 7, 5, 5, 9], [3, 4, 2, 2], [37, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 12, 7, 5, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, grad))), beta)), beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(beta), tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 7, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 12, 7, 5, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(sigma, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0], [3, 4, 2, 7, 8, 0, 1, 0, 0, 3, 8, 5, 8, 9, 8, 2, 6, 5, 2, 8, 7, 2, 4, 9, 5], [3, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [3, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 5, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [9, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 3, 1, 1, 0, 0, 3, 2, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(beta))", "other_info": {"loss": [2.3035483006961184, 2.3053385841375675, 2.303393501096067, 2.3277396725594266, 2.4205039133878827, 2.793029021908185, 3.942187551935005, 6.8164027357271495, 12.74032588717393, 24.04550381963909, 43.53280033962586], "accuracy": [0.09721305221319199, 0.09087307006120682, 0.08955223858356476, 0.09496764093637466, 0.09325055778026581, 0.09338264167308807, 0.09470347315073013, 0.09721305221319199, 0.09866596013307571, 0.09708096832036972, 0.10091137140989304], "val_loss": [1.9713448115757533, 1.9722723960876465, 1.9753333500453405, 1.9903676169259208, 2.079887185777937, 2.43995155606951, 3.569298335484096, 6.211240223475865, 11.399048941476005, 20.975360870361328, 38.057999747140066], "val_accuracy": [0.038333334028720856, 0.023000000044703484, 0.0416666679084301, 0.09133332967758179, 0.09733333438634872, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [86, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 7], [88, 19], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 8, 3, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, grad), grad), tf.math.add(grad, tf.math.square(tf.math.square(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09391097724437714, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [4, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 7], [88, 19], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07290978729724884, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [1, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1], [2, 9, 7, 0, 7, 5, 5, 9], [3, 4, 3], [36, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [7, 3, 0, 4, 7, 8, 4], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 1, 1, 0, 0, 0, 0, 8, 4, 4, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [1233442351.7825994, 24237183454.25439, 110627140816.96579, 310777965329.8196, 664908398323.6582, 1217523457053.6204], "accuracy": [0.10011887550354004, 0.10289261490106583, 0.09628847241401672, 0.0948355570435524, 0.0936468094587326, 0.09628847241401672], "val_loss": [4797446582.857142, 38368167058.28571, 129480182052.57143, 306902485284.5714, 599399783277.7142, 1035744238445.7142], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 1, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1], [0, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 2, 0, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.304204581514751, 2.3148770201333746, 2.3503728606335286, 2.571722144889101, 3.2002063777547205, 4.658096113445548, 7.3147357451429205, 11.81667766928783, 18.809778310745273, 29.376032352006636], "accuracy": [0.09470347315073013, 0.0886276587843895, 0.0952318087220192, 0.09509972482919693, 0.09576013684272766, 0.09655263274908066, 0.0956280529499054, 0.09708096832036972, 0.09879804402589798, 0.09655263274908066], "val_loss": [1.9727040018354143, 1.978748117174421, 2.0239710126604353, 2.209052426474435, 2.7590980529785156, 4.0002851486206055, 6.227705138070243, 9.774606432233538, 15.137446812220983, 22.987752641950333], "val_accuracy": [0.02199999988079071, 0.07866666465997696, 0.09566666930913925, 0.0976666659116745, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 8, 4, 4, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [2.303506106590913, 2.3042494985232533, 2.2999419980218554, 2.303009282076726, 2.3044471319372692, 2.3032285303030946], "accuracy": [0.09787346422672272, 0.09496764093637466, 0.09126931428909302, 0.09087307006120682, 0.08981640636920929, 0.08453308790922165], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]