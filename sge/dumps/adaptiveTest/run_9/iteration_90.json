[{"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [0, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7902857065200806, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.square(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.291530431269529, 2.263889357177982, 2.234004726751275, 2.194993194414561, 2.137247122604739, 2.0656531223956667, 1.9643804116444958, 1.8440476093057943, 1.7129499520828475, 1.5891328127691853, 1.47813681054975, 1.3788182698441156, 1.3017884069319807, 1.23539462467116, 1.1838573761714402, 1.1380777574249972, 1.1077187300011813, 1.0728421117241955, 1.0398155417440433, 1.020705123666318, 0.9981484974553289, 0.9746392126474492, 0.9537548713475611, 0.9412031519320095, 0.9418051441064396, 0.9156530636286833, 0.8935085645425495, 0.8861792984891798, 0.8711925088737336, 0.8727694837928306, 0.8526136141017979, 0.8491976360965477, 0.8447014527896518, 0.8332184398289229, 0.8207701439036197, 0.815431087000684, 0.8192115268529666, 0.8075940275330822, 0.8058796983510905, 0.7846429288001533, 0.789490722480971, 0.7838306791982977, 0.778097611164231, 0.780640974398759, 0.770834102024098, 0.7716798282507278, 0.7585618064828977, 0.7591993548158075, 0.7519664924772361, 0.75164076017902, 0.7455228402031695, 0.7301193930768632, 0.7366575357731638, 0.7368152960180339, 0.7346636534382749, 0.7337242341816245, 0.7195411754589763, 0.7301955899510795, 0.7134314532277449, 0.7199658517588116, 0.7145325811059483, 0.7159678180613586, 0.7115803347870249, 0.7020783085770154, 0.703655952278964, 0.6928430070982255, 0.7004946050249024, 0.6906033736713779, 0.690553656564082, 0.6962509318554422, 0.6876199853229736, 0.6901317734004107, 0.6908398978210412, 0.6805685420849414, 0.6735679161169148, 0.6817840321141778, 0.674576714070025, 0.6702196850689757, 0.6663085615803396, 0.6742139306790824, 0.6674313395487209, 0.6725460235405876], "accuracy": [0.12112006545066833, 0.1896711140871048, 0.2576938271522522, 0.311319500207901, 0.3564918637275696, 0.3859463632106781, 0.4239862561225891, 0.44591203331947327, 0.4777440130710602, 0.49848103523254395, 0.5209351181983948, 0.5383700728416443, 0.55791836977005, 0.5740324854850769, 0.5886936783790588, 0.6052040457725525, 0.6124686598777771, 0.6238277554512024, 0.635979413986206, 0.6424514651298523, 0.6568484902381897, 0.6548672318458557, 0.6720380187034607, 0.6690001487731934, 0.6641130447387695, 0.6790384650230408, 0.6823405027389526, 0.6860388517379761, 0.6922467350959778, 0.6844538450241089, 0.6946242451667786, 0.6992471218109131, 0.6929071545600891, 0.6996433734893799, 0.7058512568473816, 0.7051908373832703, 0.7077004313468933, 0.7077004313468933, 0.7102100253105164, 0.7170783281326294, 0.7185312509536743, 0.7143045663833618, 0.7185312509536743, 0.7195879220962524, 0.7215691208839417, 0.7235503792762756, 0.7210407853126526, 0.7255316376686096, 0.7280412316322327, 0.7294940948486328, 0.7269845604896545, 0.735041618347168, 0.7374191284179688, 0.7288337349891663, 0.7347774505615234, 0.7313432693481445, 0.7380794882774353, 0.7334566116333008, 0.7413815855979919, 0.7400607466697693, 0.7396644949913025, 0.737947404384613, 0.7465327978134155, 0.7466648817062378, 0.7423061728477478, 0.7479857206344604, 0.7500990629196167, 0.7495707273483276, 0.7514199018478394, 0.7446836829185486, 0.7512878179550171, 0.7485140562057495, 0.7481178045272827, 0.7504953145980835, 0.7586844563484192, 0.7474573850631714, 0.7541936039924622, 0.7567031979560852, 0.7600052952766418, 0.7625148296356201, 0.759080708026886, 0.7500990629196167], "val_loss": [1.946643284388951, 1.9202193532671248, 1.8877184050423759, 1.8435452325003487, 1.7816089221409388, 1.6992825780596053, 1.5922410147530692, 1.4665578774043493, 1.335167578288487, 1.2111682891845703, 1.1057178292955672, 1.0193651403699602, 0.9508404731750488, 0.8983690057482038, 0.8562390123094831, 0.8202255283083234, 0.7920338766915458, 0.76698556968144, 0.7457951136997768, 0.7280141796384539, 0.713945780481611, 0.7009123734065464, 0.6861577204295567, 0.6752537659236363, 0.6669624873570034, 0.6572882107325962, 0.6478590454374041, 0.6402721915926252, 0.6324709142957415, 0.6275845425469535, 0.6209297861371722, 0.6135309423719134, 0.6091784068516323, 0.6049005133765084, 0.5987979003361293, 0.5955829960959298, 0.5920507226671491, 0.5884753635951451, 0.5829052243913923, 0.5774059636252267, 0.5753289120537894, 0.5769489662987846, 0.5708545105797904, 0.5648894309997559, 0.5623862062181745, 0.5617781196321759, 0.5563870668411255, 0.5544815233775547, 0.551804678780692, 0.5496346780232021, 0.5453537361962455, 0.5434141669954572, 0.5411029372896466, 0.5387574434280396, 0.5361840724945068, 0.5359347547803607, 0.5323130403246198, 0.5302553517477853, 0.5281912939889091, 0.5303876059395927, 0.5255381720406669, 0.52338365146092, 0.5209769691739764, 0.5194778782980782, 0.5175280911581857, 0.5145683629172189, 0.514365587915693, 0.5121062994003296, 0.5112224817276001, 0.5108203547341483, 0.5079874651772636, 0.505764535495213, 0.5045089040483747, 0.503257325717381, 0.5016631739480155, 0.500887564250401, 0.4989769629069737, 0.4967514787401472, 0.4957235370363508, 0.494525636945452, 0.4949972459248134, 0.4924322026116507], "val_accuracy": [0.2383333295583725, 0.3566666543483734, 0.4009999930858612, 0.4323333203792572, 0.4726666808128357, 0.5099999904632568, 0.5419999957084656, 0.5673333406448364, 0.5860000252723694, 0.6023333072662354, 0.6326666474342346, 0.6520000100135803, 0.6653333306312561, 0.6706666946411133, 0.6763333082199097, 0.6836666464805603, 0.6913333535194397, 0.6953333616256714, 0.6923333406448364, 0.6976666450500488, 0.7116666436195374, 0.7070000171661377, 0.7166666388511658, 0.718999981880188, 0.7149999737739563, 0.7226666808128357, 0.7279999852180481, 0.7323333621025085, 0.7289999723434448, 0.737333357334137, 0.7336666584014893, 0.7360000014305115, 0.7393333315849304, 0.7356666922569275, 0.7429999709129333, 0.7446666955947876, 0.7400000095367432, 0.7423333525657654, 0.7476666569709778, 0.7490000128746033, 0.7509999871253967, 0.7436666488647461, 0.749666690826416, 0.753333330154419, 0.7556666731834412, 0.7593333125114441, 0.7590000033378601, 0.7603333592414856, 0.7616666555404663, 0.7620000243186951, 0.762666642665863, 0.7630000114440918, 0.7649999856948853, 0.765999972820282, 0.765999972820282, 0.7673333287239075, 0.7699999809265137, 0.7710000276565552, 0.7680000066757202, 0.7606666684150696, 0.7739999890327454, 0.7746666669845581, 0.7696666717529297, 0.7753333449363708, 0.7736666798591614, 0.7763333320617676, 0.777999997138977, 0.7746666669845581, 0.7766666412353516, 0.7763333320617676, 0.7829999923706055, 0.784333348274231, 0.7803333401679993, 0.781333327293396, 0.781333327293396, 0.7820000052452087, 0.7879999876022339, 0.7846666574478149, 0.7846666574478149, 0.7846666574478149, 0.7803333401679993, 0.7860000133514404]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [3, 3, 1, 1], [50], [0, 0, 1, 0, 0, 0, 1, 1], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7900000214576721, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2915303503060938, 2.2638887904339366, 2.234002473001325, 2.1949886915753343, 2.1372453862209015, 2.0656468243788515, 1.9643726675124011, 1.8440384955501292, 1.7129323539197279, 1.5891120493325417, 1.4781149009183854, 1.3787925913664234, 1.3017390092539356, 1.2353745762068347, 1.183818764769091, 1.1380677344760937, 1.1076841760132023, 1.0728644419025042, 1.0397718014450688, 1.0206924410953404, 0.9981206096772741, 0.9746126370454555, 0.9537180331026983, 0.9411862966894962, 0.9417780470444999, 0.9156657957586677, 0.893530872873957, 0.8862167928575005, 0.8712353337757371, 0.872794124404941, 0.8526139103693969, 0.8492715384556775, 0.8447413428379891, 0.8332115473717022, 0.820807758063814, 0.8154751937607606, 0.8192260528615343, 0.8076603711478038, 0.8058541706996807, 0.7845463432325364, 0.7895398032175567, 0.7837324645289058, 0.7782096179988737, 0.7805389042039825, 0.770924669065653, 0.7716179960093021, 0.7584525764012113, 0.7592100954924939, 0.7520103853108814, 0.751721482117257, 0.7455195675137462, 0.730114157142231, 0.7366522848645474, 0.7369337628042347, 0.7346627219651338, 0.7336183987698613, 0.7195626215266514, 0.7301941039839032, 0.713479106050866, 0.7199618683247409, 0.7147631328639069, 0.715875990866922, 0.711501992074742, 0.7021287355944466, 0.7037042789471195, 0.6928295109958823, 0.7005384446465817, 0.6905870797328347, 0.690726150878747, 0.6961785062759811, 0.6875845005074197, 0.6900869119027193, 0.6908621115376528, 0.6805242845773098, 0.6735685998501322, 0.6817336498848624, 0.6746667963859191, 0.6702456851251815, 0.6663118722164525, 0.6741394817459112, 0.6674423377354226, 0.6728491851949988], "accuracy": [0.12112006545066833, 0.1896711140871048, 0.25782591104507446, 0.311319500207901, 0.3564918637275696, 0.38607844710350037, 0.4239862561225891, 0.44604411721229553, 0.4777440130710602, 0.49848103523254395, 0.5209351181983948, 0.5383700728416443, 0.5577862858772278, 0.5741645693778992, 0.5886936783790588, 0.6050719618797302, 0.6123365759849548, 0.6242240071296692, 0.6361114978790283, 0.6431118845939636, 0.6572447419166565, 0.6547351479530334, 0.6724342703819275, 0.6687359809875488, 0.6639809608459473, 0.6794346570968628, 0.6831330060958862, 0.6860388517379761, 0.6922467350959778, 0.6843217611312866, 0.694360077381134, 0.6989829540252686, 0.6930392384529114, 0.6996433734893799, 0.7062475085258484, 0.7053229212760925, 0.7071720957756042, 0.7071720957756042, 0.7099458575248718, 0.7173424959182739, 0.717870831489563, 0.7152291536331177, 0.7180029153823853, 0.7195879220962524, 0.7214370369911194, 0.7231541275978088, 0.7207766771316528, 0.7253995537757874, 0.7277770638465881, 0.7290979027748108, 0.7273808121681213, 0.7342491149902344, 0.7382115721702576, 0.728701651096344, 0.7347774505615234, 0.7312111854553223, 0.7383436560630798, 0.7331924438476562, 0.7412495017051697, 0.739928662776947, 0.739928662776947, 0.7386078238487244, 0.7460044622421265, 0.7465327978134155, 0.7424382567405701, 0.7481178045272827, 0.7504953145980835, 0.7497028112411499, 0.7508915662765503, 0.7448157668113708, 0.7514199018478394, 0.7489103078842163, 0.7493065595626831, 0.7500990629196167, 0.7586844563484192, 0.748249888420105, 0.755118191242218, 0.7569673657417297, 0.7605336308479309, 0.7619865536689758, 0.7585523724555969, 0.7500990629196167], "val_loss": [1.9466434206281389, 1.920217514038086, 1.8877156121390206, 1.8435401235307967, 1.7816071510314941, 1.6992787293025426, 1.5922298771994454, 1.4665378843035017, 1.335155759538923, 1.2111457415989466, 1.1056946686335973, 1.019298996244158, 0.9508004188537598, 0.8983180522918701, 0.8561955179486956, 0.8201620749064854, 0.7919655357088361, 0.7669339520590646, 0.7457390172140939, 0.7279830660138812, 0.7139381510870797, 0.7009116922106061, 0.6861112117767334, 0.6752580574580601, 0.6669590132577079, 0.6572909184864589, 0.6478584153311593, 0.6403153453554425, 0.6325128759656634, 0.6275835888726371, 0.6209837709154401, 0.6135550907679966, 0.6091972930090768, 0.604912417275565, 0.5988913433892387, 0.5956717899867466, 0.5921608209609985, 0.5883631535938808, 0.5829111507960728, 0.5774664538247245, 0.575392484664917, 0.5769534962517875, 0.5708811453410557, 0.5650390897478376, 0.5624153103147235, 0.5616771493639264, 0.5562833206994193, 0.5543634721211025, 0.5516661405563354, 0.5495798076902118, 0.5453522375651768, 0.5434150695800781, 0.5410961423601423, 0.5387517554419381, 0.5361217260360718, 0.5358893530709403, 0.5322354691369193, 0.5302437714168003, 0.5281263419560024, 0.5304563896996635, 0.5256790944508144, 0.5234352350234985, 0.5210826907839093, 0.5195388283048358, 0.5175785848072597, 0.5146068334579468, 0.5143065111977714, 0.5120776210512433, 0.5113235371453422, 0.5108203377042498, 0.5080083949225289, 0.5057020017078945, 0.5043594666889736, 0.5032616513116019, 0.5016033138547625, 0.5007945810045514, 0.4989148037774222, 0.49674168654850553, 0.4956831421170916, 0.49449888297489714, 0.49517500400543213, 0.49257353373936247], "val_accuracy": [0.2383333295583725, 0.3566666543483734, 0.4009999930858612, 0.4323333203792572, 0.4723333418369293, 0.5099999904632568, 0.5423333048820496, 0.5673333406448364, 0.5860000252723694, 0.6019999980926514, 0.6326666474342346, 0.6520000100135803, 0.6653333306312561, 0.6706666946411133, 0.6763333082199097, 0.6836666464805603, 0.6913333535194397, 0.6953333616256714, 0.6926666498184204, 0.6976666450500488, 0.7120000123977661, 0.7070000171661377, 0.7170000076293945, 0.718999981880188, 0.7149999737739563, 0.7223333120346069, 0.7279999852180481, 0.7319999933242798, 0.7286666631698608, 0.737333357334137, 0.7333333492279053, 0.7360000014305115, 0.7393333315849304, 0.7353333234786987, 0.7429999709129333, 0.7446666955947876, 0.7400000095367432, 0.7423333525657654, 0.7476666569709778, 0.7486666440963745, 0.75, 0.7440000176429749, 0.75, 0.7526666522026062, 0.7556666731834412, 0.7593333125114441, 0.7590000033378601, 0.7599999904632568, 0.762333333492279, 0.7620000243186951, 0.7630000114440918, 0.7630000114440918, 0.7646666765213013, 0.765999972820282, 0.7663333415985107, 0.7673333287239075, 0.7696666717529297, 0.7716666460037231, 0.7683333158493042, 0.7616666555404663, 0.7733333110809326, 0.7749999761581421, 0.7699999809265137, 0.7753333449363708, 0.7739999890327454, 0.7773333191871643, 0.777999997138977, 0.7746666669845581, 0.7756666541099548, 0.7766666412353516, 0.7829999923706055, 0.784333348274231, 0.781000018119812, 0.781333327293396, 0.7816666960716248, 0.7826666831970215, 0.7883333563804626, 0.7846666574478149, 0.7846666574478149, 0.7846666574478149, 0.781000018119812, 0.7863333225250244]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [0, 3, 2, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [29, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.2639999985694885, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3408667133342886, 2.2540222622573243, 2.3515816712029904, 2.3043461686127915, 2.3034958493015187, 2.3031790020947347], "accuracy": [0.1935015171766281, 0.17751948535442352, 0.1678774207830429, 0.09642054885625839, 0.09642054885625839, 0.09866596013307571], "val_loss": [1.81721373966762, 1.7688031196594238, 1.976010526929583, 1.9740120342799596, 1.9739156450544084, 1.9737935747419084], "val_accuracy": [0.2709999978542328, 0.23499999940395355, 0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1], [0, 1, 5, 7, 8], [0, 3, 1, 1], [50], [0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [2, 6, 1, 1, 7, 5, 5, 9], [3, 4, 3, 4, 3, 0], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 1, 8, 9], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.16114285588264465, "mapping_values": [1, 1, 1, 0, 1, 1, 12, 12, 6, 6, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.subtract(tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, grad))), grad), tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), grad)), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [21547661.223880723, 44213057.1068551, 114006820.10725136, 144255262.05785233, 193104304.60863823, 223258374.8978999, 466326511.4399683, 514318781.480914, 653920234.0298507], "accuracy": [0.09906221181154251, 0.10566636174917221, 0.1146479994058609, 0.11398758739233017, 0.1080438494682312, 0.1018359512090683, 0.08558975160121918, 0.0944393053650856, 0.0940430611371994], "val_loss": [18713074.85714286, 62688930.28571428, 83874038.85714285, 100857005.71428572, 132586592.0, 140489270.85714287, 276966427.4285714, 291527908.5714286, 485482130.28571427], "val_accuracy": [0.14133332669734955, 0.16200000047683716, 0.14233332872390747, 0.17499999701976776, 0.0976666659116745, 0.08699999749660492, 0.0560000017285347, 0.06466666609048843, 0.07599999755620956]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1], [7, 1, 3, 7, 8], [0, 3, 0, 1], [50, 64], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [5, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 3, 4, 2, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.multiply(tf.math.add(alpha, tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [11745748.664205499, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09694888442754745, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [4.5102215146853217e+18, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09799999743700027, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [0, 3, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 4, 4, 7, 6, 8, 5, 7, 9, 0, 1, 5, 7, 7, 9], [1, 0, 2, 1, 1, 3, 1, 0], [50, 57, 84, 26]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 24, 16, 8, 4], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.pow(alpha, tf.math.pow(tf.math.add(tf.math.divide_no_nan(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.square(beta))), tf.math.add(alpha, alpha)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.negative(tf.math.subtract(tf.math.square(tf.math.add(tf.math.add(sigma, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), alpha)), tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [0, 0, 1, 1], [50, 9], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [5, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 0, 0], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 11, 7, 4, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), alpha)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.negative(alpha))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08849557489156723, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 1, 1, 0, 1], [7, 1, 5, 7, 8], [0, 1, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [4, 2, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 1, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, alpha), alpha))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, alpha))", "other_info": {"loss": [1.7992199341050446e+16, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.05468234047293663, 0.10077928751707077, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.0726003777981645e+17, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [0, 1, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [5, 2, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [8, 4, 0, 4, 7, 6, 9], [3, 0, 0, 3, 3, 3], [57, 57, 51]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.pow(sigma, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [8, 1, 5, 7, 8], [3, 0, 1, 1], [50], [1, 0, 1, 0, 0, 0, 1, 1], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 9], [0, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 4, 2], [0, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303036314920585, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09959053993225098, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 1, 5, 7, 8], [0, 3, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [29, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [2, 4, 0, 4, 7, 7, 8], [2, 2, 0, 1, 3, 3], [50, 57, 84, 26]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 13, 7, 6, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.math.square(grad), tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.pow(tf.math.negative(beta), tf.math.pow(tf.math.add(beta, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, sigma))), tf.math.sqrt(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [3, 3, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [4, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [29, 19], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [9, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303036314920585, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09959053993225098, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1], [5, 1, 5, 7, 8, 1], [0, 1, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 0, 2], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 12, 7, 5, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.sqrt(alpha), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.add(alpha, sigma))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08849557489156723, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [8, 1, 5, 7, 8], [3, 3, 1, 1], [50], [1, 0, 1, 0, 0, 0, 1, 1], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 5, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 4, 0, 4, 7, 6, 1], [1, 0, 0, 1, 3, 3], [23, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 2, 1, 0, 0, 0, 0, 13, 7, 6, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(alpha, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(4.70911357e-03, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.subtract(alpha, sigma), sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1], [1, 0, 1, 0, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 3, 1, 1], [72], [1, 1, 1, 0, 0, 0, 1, 1], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0730418711900711, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1], [3, 1, 5, 7, 8], [3, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [9, 3, 0, 4, 7], [1, 1, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.math.subtract(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303036314920585, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09959053993225098, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [3, 3, 1, 1], [50], [0, 0, 1, 0, 0, 0, 1, 1], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [0, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1649.6584431463466, 28770.733894135516, 132518.98231326774, 363786.42677651567, 771544.1329084665, 1426423.7571820102], "accuracy": [0.09747721254825592, 0.10196803510189056, 0.09906221181154251, 0.09840179979801178, 0.1002509593963623, 0.09813763201236725], "val_loss": [5976.017438616072, 46012.28571428572, 153558.1205357143, 362050.4910714286, 704927.8928571428, 1215628.5714285714], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 0, 1, 0, 1], [7, 1, 5, 7, 8], [3, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [0, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2911.0457985975863, 51757.826804170516, 239330.11317444855, 658008.9671361115, 1396692.6602496367, 2583467.0727777043], "accuracy": [0.09747721254825592, 0.10196803510189056, 0.09906221181154251, 0.09840179979801178, 0.1002509593963623, 0.09813763201236725], "val_loss": [10688.111328125, 82992.62276785714, 277608.3214285714, 655220.25, 1276514.2857142857, 2202174.9285714286], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [0, 3, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [29, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.08542857319116592, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.3508718763249914, 4.9937871948854875, 22.116636084370278, 2.513752104064272, 2.5234097507037445, 2.5380189437057523, 23.970518009364408, 2.952330152482373, 2.8354964533092764, 2.804281653571894, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1760665625333786, 0.12930920720100403, 0.09496764093637466, 0.09457138925790787, 0.09853387624025345, 0.10513802617788315, 0.09932637959718704, 0.10170386731624603, 0.09998679161071777, 0.09959053993225098, 0.10117553919553757, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [6.5681240899222235, 123.45454624720982, 2.219700813293457, 2.2444518634251187, 2.225198950086321, 2.1774846485682895, 2.4388484954833984, 2.6695828437805176, 2.1554196902683804, 2.296420301709856, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.046666666865348816, 0.09833333641290665, 0.09933333098888397, 0.09966666996479034, 0.1003333330154419, 0.09799999743700027, 0.09966666996479034, 0.09933333098888397, 0.10766666382551193, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [3, 3, 1, 1], [50], [0, 0, 1, 0, 0, 0, 1, 1], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 6, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 6, 6, 3, 3, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.square(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3021816133807254, 2.3031463346870553, 2.301746283791809, 2.30305326219563, 2.302885094905778, 2.3027019852802124], "accuracy": [0.0936468094587326, 0.0870426595211029, 0.09008057415485382, 0.09166556596755981, 0.08968432247638702, 0.09325055778026581], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]