[{"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 6, 8, 3, 6, 0, 4, 9, 3, 3, 2, 4, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 2, 2, 0, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 40, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [1, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8345714211463928, "mapping_values": [1, 10, 10, 5, 5, 3, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9595080614089966, 1.427760124206543, 1.004787564277649, 0.8936718106269836, 0.7888383269309998, 0.7451303005218506, 0.7313092350959778, 0.731980562210083, 0.6616845726966858, 0.6420338749885559, 0.6128818988800049, 0.6542212963104248, 0.5887223482131958, 0.5923095345497131, 0.5772707462310791, 0.5549328923225403, 0.5486807823181152, 0.5361340045928955, 0.541260302066803, 0.5031171441078186, 0.5107564330101013, 0.5246381163597107, 0.4781237840652466, 0.47547784447669983, 0.4618739187717438, 0.47133487462997437, 0.44747963547706604, 0.453909695148468, 0.43368837237358093, 0.4518432915210724, 0.4288788437843323, 0.40845757722854614, 0.42320021986961365, 0.4000053405761719, 0.4115321934223175], "accuracy": [0.3461894094944, 0.5130101442337036, 0.6365077495574951, 0.6583014130592346, 0.705058753490448, 0.7181349992752075, 0.7194558382034302, 0.7186633348464966, 0.7515519857406616, 0.7565711140632629, 0.7716285586357117, 0.748249888420105, 0.7771760821342468, 0.7803460359573364, 0.78113853931427, 0.7906485199928284, 0.7885351777076721, 0.7965922355651855, 0.7987055778503418, 0.81548011302948, 0.8078193068504333, 0.8074230551719666, 0.8274996876716614, 0.8234050869941711, 0.8281601071357727, 0.822348415851593, 0.8337075710296631, 0.8308017253875732, 0.8433496356010437, 0.8304054737091064, 0.8370096683502197, 0.852331280708313, 0.8418967127799988, 0.8541803956031799, 0.8454629778862], "val_loss": [1.2897396087646484, 1.0226147174835205, 0.9374349117279053, 0.749703586101532, 0.6650258898735046, 0.7033145427703857, 0.6516754627227783, 0.6119971871376038, 0.5979371070861816, 0.5602999925613403, 0.6588437557220459, 0.5741548538208008, 0.492966890335083, 0.5037003755569458, 0.509317934513092, 0.506956934928894, 0.4799392819404602, 0.5853341221809387, 0.46920761466026306, 0.4509025812149048, 0.5322149991989136, 0.4800002872943878, 0.49575820565223694, 0.45960840582847595, 0.42927131056785583, 0.4057745635509491, 0.39828258752822876, 0.4304017722606659, 0.44498658180236816, 0.3796566128730774, 0.40190747380256653, 0.4324909746646881, 0.4050074815750122, 0.3836927115917206, 0.4127415716648102], "val_accuracy": [0.5799999833106995, 0.6629999876022339, 0.6186666488647461, 0.6936666369438171, 0.7223333120346069, 0.7246666550636292, 0.7316666841506958, 0.7706666588783264, 0.7516666650772095, 0.7929999828338623, 0.7436666488647461, 0.7663333415985107, 0.8043333292007446, 0.8006666898727417, 0.7829999923706055, 0.7893333435058594, 0.8109999895095825, 0.7566666603088379, 0.8116666674613953, 0.8216666579246521, 0.8019999861717224, 0.8053333163261414, 0.8096666932106018, 0.8256666660308838, 0.8486666679382324, 0.8516666889190674, 0.8519999980926514, 0.8403333425521851, 0.8286666870117188, 0.862666666507721, 0.8556666374206543, 0.8270000219345093, 0.8503333330154419, 0.8539999723434448, 0.8356666564941406]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 6, 1, 3, 6, 0, 4, 9, 3, 3, 2, 4, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 0, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [53, 40, 16, 37, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8334285616874695, "mapping_values": [1, 49, 49, 28, 21, 13, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(grad))), tf.math.pow(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(grad, tf.math.multiply(tf.math.pow(tf.math.multiply(tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), tf.math.square(grad)), tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.pow(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))))), grad), grad))))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.96003258228302, 1.4244412183761597, 1.0630499124526978, 0.900446891784668, 0.8008188009262085, 0.7251582741737366, 0.7393220067024231, 0.7386125922203064, 0.6566212773323059, 0.6510429382324219, 0.6219074726104736, 0.6334129571914673, 0.5922843217849731, 0.5863701105117798, 0.5513049960136414, 0.5486434698104858, 0.5551998615264893, 0.5481698513031006, 0.5335834622383118, 0.5048473477363586, 0.5044611096382141, 0.5221373438835144, 0.4778444170951843, 0.47496268153190613, 0.4597128629684448, 0.47096797823905945, 0.4532318711280823, 0.42499276995658875, 0.4569634795188904, 0.4423699378967285, 0.43278366327285767, 0.42484408617019653], "accuracy": [0.34605732560157776, 0.5122177004814148, 0.6058644652366638, 0.6675472259521484, 0.6984546184539795, 0.722757875919342, 0.7140403985977173, 0.7201162576675415, 0.7531369924545288, 0.7556465268135071, 0.7642319202423096, 0.761590301990509, 0.7766477465629578, 0.7802139520645142, 0.7951393723487854, 0.7895918488502502, 0.7853652238845825, 0.7932901978492737, 0.8031964302062988, 0.8140271902084351, 0.8133667707443237, 0.8100647330284119, 0.8236692547798157, 0.8238013386726379, 0.8296129703521729, 0.8204993009567261, 0.8329150676727295, 0.842028796672821, 0.8273676037788391, 0.8348963260650635, 0.8358209133148193, 0.845859169960022], "val_loss": [1.2854039669036865, 1.0031484365463257, 0.9173820614814758, 0.745809018611908, 0.6589411497116089, 0.6599633097648621, 0.6527277231216431, 0.6269800662994385, 0.6039735674858093, 0.5635184049606323, 0.6631577014923096, 0.544227659702301, 0.5789498090744019, 0.49761343002319336, 0.5002844333648682, 0.471800833940506, 0.47516849637031555, 0.5573797225952148, 0.46882742643356323, 0.4573588967323303, 0.5355346202850342, 0.4753968417644501, 0.4819183349609375, 0.44699954986572266, 0.4311453402042389, 0.4330446422100067, 0.40334203839302063, 0.4615517854690552, 0.42435717582702637, 0.3914409577846527, 0.4027355909347534, 0.4105960428714752], "val_accuracy": [0.5799999833106995, 0.6420000195503235, 0.6683333516120911, 0.6976666450500488, 0.7360000014305115, 0.7333333492279053, 0.7350000143051147, 0.7566666603088379, 0.7559999823570251, 0.7946666479110718, 0.7446666955947876, 0.7900000214576721, 0.7599999904632568, 0.7956666946411133, 0.7926666736602783, 0.8169999718666077, 0.8146666884422302, 0.7620000243186951, 0.8119999766349792, 0.8230000138282776, 0.7960000038146973, 0.8029999732971191, 0.8083333373069763, 0.8370000123977661, 0.8413333296775818, 0.8299999833106995, 0.859000027179718, 0.7993333339691162, 0.8346666693687439, 0.856333315372467, 0.8506666421890259, 0.8433333039283752]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 0, 2, 2, 0, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 2, 2, 0, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [47, 40, 97, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8320000171661377, "mapping_values": [1, 8, 8, 5, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.negative(grad))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.960010051727295, 1.4384933710098267, 1.0221588611602783, 0.8943125009536743, 0.8151264190673828, 0.7578418254852295, 0.7352669835090637, 0.7201687097549438, 0.6571804285049438, 0.6377916932106018, 0.6237015724182129, 0.6375320553779602, 0.5903675556182861, 0.5826507806777954, 0.5555248260498047, 0.5541157126426697, 0.5449947118759155, 0.542033851146698, 0.5314326286315918, 0.49838078022003174, 0.5024616122245789, 0.5073527097702026, 0.48076310753822327, 0.473690390586853, 0.46010100841522217, 0.47242629528045654, 0.4493018686771393, 0.44321316480636597, 0.4336290657520294, 0.4466603398323059, 0.4234781265258789, 0.4157311022281647, 0.4067836105823517, 0.4058714807033539, 0.4055013060569763], "accuracy": [0.3459252417087555, 0.5102364420890808, 0.6244881749153137, 0.6605468392372131, 0.6933034062385559, 0.7132478952407837, 0.7177387475967407, 0.7357020378112793, 0.7518161535263062, 0.761590301990509, 0.7638356685638428, 0.7574957013130188, 0.7783648371696472, 0.78113853931427, 0.7935543656349182, 0.7858935594558716, 0.7890635132789612, 0.7979130744934082, 0.8004226684570312, 0.8158763647079468, 0.8098005652427673, 0.8138951063156128, 0.8285563588142395, 0.8234050869941711, 0.8271034359931946, 0.8207634687423706, 0.8319904804229736, 0.8355567455291748, 0.8370096683502197, 0.8318583965301514, 0.8413683772087097, 0.8485008478164673, 0.8494254350662231, 0.8527275323867798, 0.8496896028518677], "val_loss": [1.2853392362594604, 1.0574524402618408, 0.8913547992706299, 0.8434856534004211, 0.772340714931488, 0.6526540517807007, 0.6485493183135986, 0.6214606165885925, 0.5887731313705444, 0.5692975521087646, 0.6423092484474182, 0.567808210849762, 0.5153196454048157, 0.49488916993141174, 0.5093141198158264, 0.5091726183891296, 0.47765448689460754, 0.5134328007698059, 0.4659664034843445, 0.4520013928413391, 0.5172009468078613, 0.5171548128128052, 0.4268854260444641, 0.46641525626182556, 0.4534684121608734, 0.42493656277656555, 0.3915846347808838, 0.4508829712867737, 0.42820844054222107, 0.38115668296813965, 0.3988408148288727, 0.41902250051498413, 0.39536505937576294, 0.394113689661026, 0.4057965874671936], "val_accuracy": [0.5793333053588867, 0.6536666750907898, 0.6489999890327454, 0.6579999923706055, 0.6949999928474426, 0.7246666550636292, 0.7416666746139526, 0.7559999823570251, 0.7603333592414856, 0.7919999957084656, 0.746999979019165, 0.7736666798591614, 0.7910000085830688, 0.8006666898727417, 0.7850000262260437, 0.7990000247955322, 0.8096666932106018, 0.7896666526794434, 0.8113333582878113, 0.8236666917800903, 0.8006666898727417, 0.7853333353996277, 0.8293333053588867, 0.8259999752044678, 0.8273333311080933, 0.8353333473205566, 0.8586666584014893, 0.8193333148956299, 0.8356666564941406, 0.8646666407585144, 0.8503333330154419, 0.8346666693687439, 0.8539999723434448, 0.8456666469573975, 0.8389999866485596]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 6, 8, 2, 9, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 2, 2, 0, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 40, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8119999766349792, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9598435163497925, 1.4250390529632568, 1.03842294216156, 0.8734512329101562, 0.7951305508613586, 0.7676226496696472, 0.731441855430603, 0.7139074802398682, 0.6671210527420044, 0.6334019899368286, 0.6152471303939819, 0.644244372844696, 0.5841997265815735, 0.5872717499732971, 0.5584763288497925, 0.5514473915100098, 0.5461159944534302, 0.5426430702209473, 0.534069299697876, 0.5046749711036682, 0.5057758092880249, 0.5160691142082214, 0.47668907046318054, 0.47802066802978516, 0.45458412170410156, 0.47184455394744873, 0.4504728317260742, 0.44408756494522095, 0.4341559410095215, 0.4588594138622284, 0.42620620131492615, 0.41128453612327576], "accuracy": [0.3459252417087555, 0.5119535326957703, 0.6153744459152222, 0.6719059348106384, 0.6963412761688232, 0.7084929347038269, 0.7209087014198303, 0.7320036888122559, 0.7470611333847046, 0.7606657147407532, 0.7663452625274658, 0.7532690763473511, 0.7817989587783813, 0.7821952104568481, 0.7880068421363831, 0.7903843522071838, 0.7911768555641174, 0.7944789528846741, 0.7997622489929199, 0.8150838613510132, 0.8127063512802124, 0.8100647330284119, 0.8264430165290833, 0.8183859586715698, 0.8318583965301514, 0.8206313848495483, 0.8338396549224854, 0.8334434032440186, 0.839519202709198, 0.8273676037788391, 0.8405758738517761, 0.8488970994949341], "val_loss": [1.2840651273727417, 1.0095922946929932, 0.9365898370742798, 0.760892391204834, 0.6790544390678406, 0.6836659908294678, 0.6496532559394836, 0.6254804134368896, 0.5856075882911682, 0.5586425065994263, 0.6754879951477051, 0.5413476824760437, 0.5189544558525085, 0.5004301071166992, 0.5253382325172424, 0.519967794418335, 0.4800121784210205, 0.5686458945274353, 0.4711926579475403, 0.4480920433998108, 0.5314655303955078, 0.49693846702575684, 0.47457051277160645, 0.44989708065986633, 0.44409283995628357, 0.42940446734428406, 0.3957499861717224, 0.4437490701675415, 0.41630056500434875, 0.38928645849227905, 0.399028480052948, 0.40888822078704834], "val_accuracy": [0.5809999704360962, 0.6480000019073486, 0.640999972820282, 0.6800000071525574, 0.718666672706604, 0.7166666388511658, 0.7566666603088379, 0.7609999775886536, 0.7670000195503235, 0.7916666865348816, 0.7386666536331177, 0.7976666688919067, 0.7856666445732117, 0.796999990940094, 0.7733333110809326, 0.7866666913032532, 0.8106666803359985, 0.7643333077430725, 0.8116666674613953, 0.8236666917800903, 0.796999990940094, 0.7963333129882812, 0.8130000233650208, 0.8383333086967468, 0.8333333134651184, 0.8393333554267883, 0.8603333234786987, 0.8223333358764648, 0.8426666855812073, 0.8579999804496765, 0.8529999852180481, 0.8476666808128357]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 2, 0, 3, 6, 0, 4, 9, 3, 3, 2, 4, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 2, 1, 0, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [47, 40, 75, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [24, 57, 40, 62]], "fitness": -0.7522857189178467, "mapping_values": [1, 11, 11, 6, 5, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.divide_no_nan(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.add(alpha, tf.math.negative(alpha))))), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2977206707000732, 2.285630941390991, 2.2736709117889404, 2.2613937854766846, 2.2484161853790283, 2.2347140312194824, 2.2149150371551514, 2.1986083984375, 2.178455352783203, 2.1527750492095947, 2.1263296604156494, 2.091458320617676, 2.0499229431152344, 2.0078420639038086, 1.9590911865234375, 1.9087435007095337, 1.8525416851043701, 1.790791392326355, 1.735244870185852, 1.668344259262085, 1.6148625612258911, 1.5617104768753052, 1.5026594400405884, 1.4508888721466064, 1.4105277061462402, 1.3627134561538696, 1.3302948474884033, 1.2975513935089111, 1.265679955482483, 1.2353124618530273, 1.2052052021026611, 1.1819379329681396, 1.159190058708191, 1.1454622745513916, 1.121436595916748, 1.1136809587478638, 1.0924341678619385, 1.064239501953125, 1.0581374168395996, 1.0482730865478516, 1.0287526845932007, 1.0141538381576538, 1.0120165348052979, 0.9944257736206055, 0.9913511276245117, 0.9780374765396118, 0.9608967304229736, 0.9616878032684326, 0.9439836740493774, 0.9312300682067871, 0.9366029500961304, 0.9349514842033386, 0.9189735054969788, 0.9139450788497925, 0.8958262205123901, 0.8968474268913269, 0.8918977379798889, 0.8925110101699829, 0.876838207244873, 0.8756296038627625, 0.8768612146377563, 0.8552781939506531, 0.8521113395690918, 0.8534377217292786, 0.8628383874893188, 0.8442348837852478, 0.8379174470901489, 0.8403348922729492, 0.8514634370803833, 0.8258021473884583, 0.8192547559738159, 0.8269672989845276, 0.8028197884559631, 0.8134915828704834, 0.8048896193504333, 0.8021789193153381, 0.8119245767593384, 0.8112914562225342, 0.8034229278564453, 0.7891078591346741, 0.7956150770187378, 0.7929653525352478, 0.7909911870956421, 0.7871212959289551, 0.7881172299385071, 0.773931622505188, 0.7826432585716248, 0.7907376289367676, 0.7776750326156616], "accuracy": [0.10315678268671036, 0.1332716941833496, 0.16536785662174225, 0.19970941543579102, 0.22639016807079315, 0.2566371560096741, 0.2938845455646515, 0.3066965937614441, 0.3206973969936371, 0.3486989736557007, 0.3671905994415283, 0.38383305072784424, 0.39585259556770325, 0.41262713074684143, 0.43270373344421387, 0.43745872378349304, 0.4559503495693207, 0.4675736427307129, 0.47708359360694885, 0.4892352521419525, 0.49148064851760864, 0.4975564777851105, 0.5297846794128418, 0.5291243195533752, 0.5311055183410645, 0.5458987951278687, 0.5548804402351379, 0.5617488026618958, 0.5742966532707214, 0.5753533244132996, 0.5860520601272583, 0.5976753234863281, 0.6033549308776855, 0.6057323813438416, 0.6120724081993103, 0.6085061430931091, 0.620261549949646, 0.6262052655220032, 0.629507303237915, 0.6324131488800049, 0.6384889483451843, 0.6516972780227661, 0.6420552134513855, 0.6503764390945435, 0.6501122713088989, 0.6598864197731018, 0.6579051613807678, 0.6634526252746582, 0.665830135345459, 0.6713775992393494, 0.6715096831321716, 0.6724342703819275, 0.6744155287742615, 0.6720380187034607, 0.6761326193809509, 0.6800950765609741, 0.6818121671676636, 0.6789063811302185, 0.6873596906661987, 0.6901333928108215, 0.6922467350959778, 0.6919825673103333, 0.6970016956329346, 0.6906617283821106, 0.6907938122749329, 0.6983225345611572, 0.7034738063812256, 0.7041342258453369, 0.6902654767036438, 0.7063795924186707, 0.7082287669181824, 0.7080966830253601, 0.7116629481315613, 0.711530864238739, 0.7104741930961609, 0.7121912837028503, 0.7098137736320496, 0.709549605846405, 0.7099458575248718, 0.7148329019546509, 0.7156254053115845, 0.7108704447746277, 0.7191916704177856, 0.7191916704177856, 0.7156254053115845, 0.7231541275978088, 0.718399167060852, 0.7143045663833618, 0.7164179086685181], "val_loss": [2.286937952041626, 2.274122476577759, 2.2610130310058594, 2.2470641136169434, 2.2318496704101562, 2.214778184890747, 2.195234775543213, 2.173048496246338, 2.1475937366485596, 2.1179118156433105, 2.0837604999542236, 2.0443904399871826, 1.9991035461425781, 1.9481490850448608, 1.8911864757537842, 1.829023003578186, 1.7621700763702393, 1.692426323890686, 1.6216908693313599, 1.5502952337265015, 1.4808127880096436, 1.4161360263824463, 1.3540757894515991, 1.2978171110153198, 1.2461661100387573, 1.1998971700668335, 1.1573476791381836, 1.1198468208312988, 1.0857332944869995, 1.0559536218643188, 1.0282502174377441, 1.0029679536819458, 0.9795607328414917, 0.9593479037284851, 0.941495418548584, 0.9240807294845581, 0.9083032011985779, 0.8933123350143433, 0.8800116181373596, 0.8678900599479675, 0.8560441136360168, 0.8454431891441345, 0.8351420760154724, 0.8260812759399414, 0.8175472021102905, 0.8095292448997498, 0.8016228675842285, 0.7949196100234985, 0.7874264121055603, 0.7807239294052124, 0.7743331789970398, 0.7695357203483582, 0.7638395428657532, 0.7585647106170654, 0.7529656291007996, 0.7481865286827087, 0.742020845413208, 0.7383418083190918, 0.7343212366104126, 0.7311471104621887, 0.7262795567512512, 0.721669614315033, 0.7178071141242981, 0.7141273021697998, 0.7113867998123169, 0.7070661783218384, 0.7040970325469971, 0.7000380754470825, 0.6979004144668579, 0.6947656273841858, 0.6918430924415588, 0.6895222067832947, 0.6854221820831299, 0.6825075149536133, 0.6797963976860046, 0.6773995161056519, 0.6746145486831665, 0.672234296798706, 0.6695627570152283, 0.6669862866401672, 0.6646081805229187, 0.6628301739692688, 0.6606753468513489, 0.6594494581222534, 0.6580798029899597, 0.6552203893661499, 0.6539789438247681, 0.6510519981384277, 0.6492619514465332], "val_accuracy": [0.12533333897590637, 0.2409999966621399, 0.31833332777023315, 0.359333336353302, 0.382999986410141, 0.40166667103767395, 0.43166667222976685, 0.4480000138282776, 0.46166667342185974, 0.48266667127609253, 0.4986666738986969, 0.512333333492279, 0.5230000019073486, 0.5316666960716248, 0.5479999780654907, 0.5543333292007446, 0.5616666674613953, 0.5733333230018616, 0.57833331823349, 0.5873333215713501, 0.6000000238418579, 0.6079999804496765, 0.6176666617393494, 0.628333330154419, 0.637333333492279, 0.6480000019073486, 0.6576666831970215, 0.6679999828338623, 0.6769999861717224, 0.6776666641235352, 0.6826666593551636, 0.6886666417121887, 0.6933333277702332, 0.6953333616256714, 0.6959999799728394, 0.6980000138282776, 0.7003333568572998, 0.7009999752044678, 0.7006666660308838, 0.7066666483879089, 0.7086666822433472, 0.7096666693687439, 0.7126666903495789, 0.7116666436195374, 0.7110000252723694, 0.7126666903495789, 0.7196666598320007, 0.7153333425521851, 0.7179999947547913, 0.7203333377838135, 0.721666693687439, 0.7203333377838135, 0.7269999980926514, 0.7260000109672546, 0.7310000061988831, 0.7319999933242798, 0.7323333621025085, 0.7319999933242798, 0.7329999804496765, 0.7319999933242798, 0.7369999885559082, 0.7419999837875366, 0.7400000095367432, 0.7440000176429749, 0.7450000047683716, 0.7463333606719971, 0.7456666827201843, 0.7480000257492065, 0.7486666440963745, 0.7486666440963745, 0.7486666440963745, 0.7486666440963745, 0.7509999871253967, 0.7513333559036255, 0.753333330154419, 0.7546666860580444, 0.7523333430290222, 0.7556666731834412, 0.7559999823570251, 0.7583333253860474, 0.7583333253860474, 0.7586666941642761, 0.7590000033378601, 0.7616666555404663, 0.7586666941642761, 0.7609999775886536, 0.7599999904632568, 0.7603333592414856, 0.7599999904632568]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 1, 2, 2, 0, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 2, 0, 0, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [47, 40, 97, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 2, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [24, 57, 40, 62]], "fitness": -0.7522857189178467, "mapping_values": [1, 8, 8, 4, 4, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), grad), tf.math.add(alpha, tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2977206707000732, 2.285630702972412, 2.2736685276031494, 2.2613906860351562, 2.2484121322631836, 2.234710693359375, 2.2149112224578857, 2.1986043453216553, 2.178450345993042, 2.152768135070801, 2.1263222694396973, 2.091452121734619, 2.0499167442321777, 2.007833480834961, 1.9590791463851929, 1.90873122215271, 1.8525301218032837, 1.7907795906066895, 1.7352356910705566, 1.6683353185653687, 1.6148521900177002, 1.561696171760559, 1.5026459693908691, 1.4508758783340454, 1.4105165004730225, 1.362707495689392, 1.3302851915359497, 1.2975413799285889, 1.265671730041504, 1.2353214025497437, 1.205214262008667, 1.1819556951522827, 1.1592053174972534, 1.1454707384109497, 1.1214433908462524, 1.1136740446090698, 1.0924322605133057, 1.0642451047897339, 1.0581382513046265, 1.0482765436172485, 1.0287524461746216, 1.0141528844833374, 1.0120223760604858, 0.9944236278533936, 0.9913610816001892, 0.9780565500259399, 0.9608943462371826, 0.9616913199424744, 0.9439870715141296, 0.931235134601593, 0.9366021752357483, 0.9349608421325684, 0.9189773797988892, 0.9139609932899475, 0.8958374857902527, 0.8968619108200073, 0.8918992877006531, 0.8925287127494812, 0.8768490552902222, 0.8756452798843384, 0.8768830895423889, 0.8552993535995483, 0.8521324396133423, 0.8534448742866516, 0.8628575801849365, 0.8442366719245911, 0.8379229307174683, 0.8403274416923523, 0.8514864444732666, 0.825792670249939, 0.8192738890647888, 0.8269608616828918, 0.8028254508972168, 0.8134859204292297, 0.804889440536499, 0.8021923899650574, 0.8119221329689026, 0.8112696409225464, 0.803471028804779, 0.7891247272491455, 0.795608401298523, 0.7929655909538269, 0.7909815311431885, 0.7870960235595703, 0.7880987524986267, 0.7739346623420715, 0.7826573848724365, 0.790713906288147, 0.7776862978935242], "accuracy": [0.10315678268671036, 0.1332716941833496, 0.16523577272891998, 0.19970941543579102, 0.22639016807079315, 0.2565050721168518, 0.29401662945747375, 0.30643242597579956, 0.3205653131008148, 0.3486989736557007, 0.3671905994415283, 0.38383305072784424, 0.395720511674881, 0.4127592146396637, 0.43270373344421387, 0.43745872378349304, 0.4558182656764984, 0.4675736427307129, 0.47708359360694885, 0.48949941992759705, 0.49148064851760864, 0.4974243938922882, 0.5299167633056641, 0.5291243195533752, 0.5312376022338867, 0.5458987951278687, 0.5550125241279602, 0.5620129704475403, 0.5742966532707214, 0.5752212405204773, 0.5860520601272583, 0.5978074073791504, 0.6032228469848633, 0.6057323813438416, 0.611940324306488, 0.6087703108787537, 0.6201294660568237, 0.6263373494148254, 0.629507303237915, 0.6324131488800049, 0.6384889483451843, 0.6515651941299438, 0.6421872973442078, 0.6505085229873657, 0.6501122713088989, 0.6598864197731018, 0.6579051613807678, 0.6637167930603027, 0.6656980514526367, 0.6712455153465271, 0.6716417670249939, 0.6723021864891052, 0.674679696559906, 0.6720380187034607, 0.6761326193809509, 0.6800950765609741, 0.681547999382019, 0.6789063811302185, 0.6872276067733765, 0.6901333928108215, 0.6921146512031555, 0.691850483417511, 0.6972658634185791, 0.6907938122749329, 0.6906617283821106, 0.698190450668335, 0.7034738063812256, 0.7042662501335144, 0.6902654767036438, 0.7065116763114929, 0.7087571024894714, 0.7084929347038269, 0.7120591998100281, 0.711530864238739, 0.7104741930961609, 0.7120591998100281, 0.709549605846405, 0.7098137736320496, 0.7096816897392273, 0.7149649858474731, 0.7153612375259399, 0.7106062769889832, 0.7190595865249634, 0.7190595865249634, 0.7161537408828735, 0.7228899598121643, 0.7186633348464966, 0.7140403985977173, 0.7164179086685181], "val_loss": [2.286937952041626, 2.2741200923919678, 2.2610092163085938, 2.2470595836639404, 2.231844425201416, 2.214775323867798, 2.1952311992645264, 2.1730451583862305, 2.147587299346924, 2.1179068088531494, 2.0837562084198, 2.044384717941284, 1.9990947246551514, 1.9481396675109863, 1.8911726474761963, 1.8290070295333862, 1.7621527910232544, 1.6924163103103638, 1.6216850280761719, 1.5502880811691284, 1.4808069467544556, 1.4161252975463867, 1.3540595769882202, 1.2978073358535767, 1.24615478515625, 1.1998851299285889, 1.1573361158370972, 1.1198418140411377, 1.08574378490448, 1.055971622467041, 1.0282701253890991, 1.0029937028884888, 0.9795799255371094, 0.9593634605407715, 0.9414986968040466, 0.9240970611572266, 0.9083089232444763, 0.8933284282684326, 0.8800349831581116, 0.8679134249687195, 0.856070339679718, 0.8454581499099731, 0.8351659178733826, 0.826100766658783, 0.8175440430641174, 0.8095526695251465, 0.8016313314437866, 0.794930636882782, 0.7874391078948975, 0.7807507514953613, 0.7743453979492188, 0.7695330381393433, 0.763834536075592, 0.7585595846176147, 0.7529505491256714, 0.7481784820556641, 0.7420253157615662, 0.7383129596710205, 0.7343124747276306, 0.7311390042304993, 0.7262955904006958, 0.7217077016830444, 0.7178375124931335, 0.7141767740249634, 0.7114039659500122, 0.7070747017860413, 0.7041066288948059, 0.7000585198402405, 0.6979109644889832, 0.6947833895683289, 0.691859781742096, 0.689522922039032, 0.6854183673858643, 0.6825037598609924, 0.6797979474067688, 0.6773837804794312, 0.6745848655700684, 0.6722138524055481, 0.6695717573165894, 0.6669846773147583, 0.6646229028701782, 0.6628385782241821, 0.6606881618499756, 0.6594275832176208, 0.658079206943512, 0.6552079916000366, 0.6539741158485413, 0.6509965658187866, 0.6492396593093872], "val_accuracy": [0.12533333897590637, 0.2409999966621399, 0.31833332777023315, 0.359333336353302, 0.382999986410141, 0.40166667103767395, 0.43166667222976685, 0.4476666748523712, 0.4620000123977661, 0.48266667127609253, 0.4983333349227905, 0.512333333492279, 0.5230000019073486, 0.5316666960716248, 0.5479999780654907, 0.5543333292007446, 0.5616666674613953, 0.5730000138282776, 0.57833331823349, 0.5873333215713501, 0.6000000238418579, 0.6079999804496765, 0.6176666617393494, 0.628333330154419, 0.637333333492279, 0.6480000019073486, 0.6576666831970215, 0.6679999828338623, 0.6769999861717224, 0.6776666641235352, 0.6826666593551636, 0.6886666417121887, 0.6933333277702332, 0.6953333616256714, 0.6959999799728394, 0.6980000138282776, 0.699999988079071, 0.7009999752044678, 0.7006666660308838, 0.7066666483879089, 0.7086666822433472, 0.7096666693687439, 0.7126666903495789, 0.7116666436195374, 0.7113333344459534, 0.7126666903495789, 0.7200000286102295, 0.7153333425521851, 0.7179999947547913, 0.7203333377838135, 0.721666693687439, 0.7203333377838135, 0.7269999980926514, 0.7260000109672546, 0.7306666374206543, 0.7319999933242798, 0.7326666712760925, 0.7319999933242798, 0.7329999804496765, 0.7319999933242798, 0.7366666793823242, 0.7419999837875366, 0.7403333187103271, 0.7440000176429749, 0.7450000047683716, 0.7463333606719971, 0.7456666827201843, 0.7476666569709778, 0.7486666440963745, 0.7486666440963745, 0.7486666440963745, 0.7486666440963745, 0.7509999871253967, 0.7513333559036255, 0.753333330154419, 0.7543333172798157, 0.7526666522026062, 0.7556666731834412, 0.7559999823570251, 0.7580000162124634, 0.7583333253860474, 0.7590000033378601, 0.7586666941642761, 0.7616666555404663, 0.7590000033378601, 0.7609999775886536, 0.7599999904632568, 0.7603333592414856, 0.7596666812896729]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [8, 5, 8, 3, 6, 0, 4, 9, 3, 3, 2, 4, 3, 4, 2, 4, 5, 1, 8, 5, 7, 1, 6, 2, 6, 4, 5, 5, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 2, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [8, 40, 16, 37, 98, 52, 94, 1, 97, 93, 55, 76, 16], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 2, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.5137143135070801, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.198483943939209, 1.7930787801742554, 6.6391706466674805, NaN, NaN, NaN, NaN], "accuracy": [0.26099589467048645, 0.3765684962272644, 0.3469819128513336, 0.1216483935713768, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.183926582336426, 1.8094978332519531, 1987.384521484375, NaN, NaN, NaN, NaN], "val_accuracy": [0.25566667318344116, 0.4896666705608368, 0.2680000066757202, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 6, 8, 2, 9, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 2, 2, 0, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [47, 40, 97, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 3, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.36228570342063904, "mapping_values": [1, 11, 11, 8, 3, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), grad)))))), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.1701884269714355, 2.2765674591064453, 2.341273546218872, 2.3043415546417236, 2.303778886795044, 2.2894935607910156, 2.297240972518921, 2.3038463592529297, 2.3032662868499756, 2.3038837909698486, 2.303297996520996], "accuracy": [0.251750111579895, 0.12191256135702133, 0.17263241112232208, 0.10117553919553757, 0.09826971590518951, 0.13340377807617188, 0.11187426000833511, 0.09708096832036972, 0.09959053993225098, 0.09602430462837219, 0.10302469879388809], "val_loss": [1.9317026138305664, 2.2967617511749268, 2.307361364364624, 2.303438901901245, 2.302461862564087, 2.1445658206939697, 2.3025946617126465, 2.3029229640960693, 2.3026351928710938, 2.3025319576263428, 2.3027048110961914], "val_accuracy": [0.296999990940094, 0.10199999809265137, 0.16300000250339508, 0.09700000286102295, 0.09933333098888397, 0.3176666796207428, 0.10199999809265137, 0.10133333504199982, 0.10199999809265137, 0.10199999809265137, 0.09700000286102295]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 6, 8, 2, 2, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 0, 2, 0, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [47, 40, 97, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.26600000262260437, "mapping_values": [1, 11, 11, 6, 5, 4, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), grad), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))))), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.1703314781188965, 2.2819156646728516, 2.3060083389282227, 2.304945468902588, 2.304234504699707, 2.3031492233276367], "accuracy": [0.25201427936553955, 0.12112006545066833, 0.16338661313056946, 0.09760929644107819, 0.09377889335155487, 0.09800554811954498], "val_loss": [1.964583158493042, 2.2978217601776123, 2.3092527389526367, 2.303236722946167, 2.3027262687683105, 2.302125930786133], "val_accuracy": [0.29499998688697815, 0.10199999809265137, 0.09933333098888397, 0.09700000286102295, 0.09700000286102295, 0.10400000214576721]}}, {"genotype": [[0], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 6, 8, 3, 6, 0, 4, 9, 3, 3, 2, 4, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 2, 1, 0, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 40, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 2, 9, 9, 7], [4, 0, 6], [24, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [24, 57, 40, 62]], "fitness": -0.2639999985694885, "mapping_values": [1, 11, 11, 6, 5, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.add(alpha, tf.math.negative(alpha)))), tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.1702420711517334, 2.2793052196502686, 2.276026964187622, 2.3042778968811035, 2.3035531044006348, 2.2983744144439697], "accuracy": [0.2514859437942505, 0.12191256135702133, 0.17170783877372742, 0.1014397069811821, 0.09747721254825592, 0.11662924289703369], "val_loss": [1.947218418121338, 2.297609806060791, 2.307708978652954, 2.3030846118927, 2.302121162414551, 2.2505686283111572], "val_accuracy": [0.29366666078567505, 0.10199999809265137, 0.09933333098888397, 0.09700000286102295, 0.09833333641290665, 0.18466666340827942]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 6, 8, 3, 6, 0, 4, 9, 3, 3, 2, 4, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 2, 2, 0, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 40, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 2, 9, 9, 7], [4, 0, 6], [24, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.2639999985694885, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.1702332496643066, 2.2797579765319824, 2.30479097366333, 2.304835557937622, 2.3038692474365234, 2.301832675933838], "accuracy": [0.2514859437942505, 0.12217672914266586, 0.1694624274969101, 0.09840179979801178, 0.09166556596755981, 0.10302469879388809], "val_loss": [1.950000524520874, 2.2980613708496094, 2.3087005615234375, 2.303264856338501, 2.3021767139434814, 2.295780658721924], "val_accuracy": [0.2933333218097687, 0.10199999809265137, 0.09799999743700027, 0.09700000286102295, 0.15800000727176666, 0.14866666495800018]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 6, 8, 2, 9, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 0, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [47, 40, 71, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [48, 57, 40, 62]], "fitness": -0.26257142424583435, "mapping_values": [1, 7, 7, 5, 2, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))), tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.1703784465789795, 2.2796921730041504, 2.296855926513672, 2.303950786590576, 2.2465460300445557, 2.786947011947632], "accuracy": [0.2513538599014282, 0.1228371411561966, 0.17791573703289032, 0.10447761416435242, 0.1530841439962387, 0.11993131786584854], "val_loss": [1.9530221223831177, 2.296811580657959, 2.3069820404052734, 2.3022828102111816, 2.2201638221740723, 2.3040311336517334], "val_accuracy": [0.2930000126361847, 0.10199999809265137, 0.09933333098888397, 0.09700000286102295, 0.19366666674613953, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 0, 2, 2, 0, 1, 4, 9, 3, 3, 4, 2, 3, 4, 3, 4, 5, 1, 3, 5, 7, 5, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 0, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [49, 42, 97, 29, 59, 52, 94, 1, 97, 93, 39, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [2, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 8, 4, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 13, 6, 7, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(tf.math.negative(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.pow(grad, grad), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(beta, tf.math.add(tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), beta)), tf.math.add(tf.math.subtract(sigma, sigma), beta))", "other_info": {"loss": [5.435440129957167e+18, 2.6313796043395996, 4.470065593719482, 8.790779113769531, 13.454974174499512, 18.127546310424805], "accuracy": [0.08836349099874496, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.4268672466278076, 3.2460601329803467, 6.903156280517578, 11.578171730041504, 16.263700485229492, 20.949113845825195], "val_accuracy": [0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872, 0.09733333438634872]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 6, 8, 3, 6, 0, 4, 9, 3, 3, 2, 4, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 8, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 0, 2, 2, 0, 0, 1, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [53, 40, 16, 37, 98, 52, 14, 1, 97, 93, 0, 96, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [1, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 6, 5, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 0, 2, 2, 0, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 2, 2, 0, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [47, 40, 97, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [0, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3023858070373535, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.10117553919553757, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 0, 2, 2, 0, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 2, 2, 0, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [47, 41, 97, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 2, 9, 9, 7], [4, 0, 6], [24, 44], [1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 2, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), grad), tf.math.add(alpha, tf.math.subtract(grad, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09959053993225098, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 0, 2, 2, 0, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 2, 2, 0, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [54, 40, 97, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [2, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [47, 48, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08255184441804886, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 6, 3, 6, 6, 0, 4, 9, 3, 3, 2, 4, 3, 4, 3, 4, 5, 1, 9, 3, 7, 1, 1, 2, 8, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 2, 2, 0, 0, 0, 2, 1, 0, 2, 2, 1, 2, 0, 0, 0, 2, 1, 0, 2, 2, 3], [88, 77, 16, 37, 68, 52, 94, 1, 97, 93, 47, 76, 16], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 6, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.09542857110500336, "mapping_values": [1, 47, 47, 27, 20, 11, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 8, 4, 4, 2], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32), grad))), grad), tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))), grad), tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.multiply(tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.add(alpha, grad))), tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, alpha))))), tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.square(grad)))), alpha)), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))))), grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), beta))", "other_info": {"loss": [4.633881919118891e+23, 5.290554302801574e+23, 5.431166050655306e+23, 5.261385028447051e+23, 5.3637014076613556e+23, 5.346157184952971e+23, 5.407247252890356e+23, 5.2282493438287096e+23], "accuracy": [0.09959053993225098, 0.10077928751707077, 0.09800554811954498, 0.09232597798109055, 0.09708096832036972, 0.09642054885625839, 0.09576013684272766, 0.0948355570435524], "val_loss": [3.929977583984197e+23, 3.9347308631749086e+23, 3.9395677291747045e+23, 3.9459455468230015e+23, 3.953578247471469e+23, 3.961930082908435e+23, 3.969743648117938e+23, 3.978497204641665e+23], "val_accuracy": [0.10000000149011612, 0.10066666454076767, 0.10166666656732559, 0.10166666656732559, 0.10100000351667404, 0.10000000149011612, 0.09933333098888397, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 6, 2, 2, 0, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 0, 0, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [51, 70, 53, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [58, 57, 40, 62]], "fitness": -0.04571428522467613, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.644275426864624, 2.766233444213867, 2.3679494857788086, 2.7056167125701904, 2.418322801589966, 2.412823438644409], "accuracy": [0.18531237542629242, 0.15638621151447296, 0.11345925182104111, 0.10553427785634995, 0.0948355570435524, 0.10910051316022873], "val_loss": [2.558640241622925, 2.3446152210235596, 2.3878583908081055, 2.3913187980651855, 2.4056315422058105, 2.3803653717041016], "val_accuracy": [0.11599999666213989, 0.09700000286102295, 0.10266666859388351, 0.10199999809265137, 0.09700000286102295, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 6, 8, 2, 9, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 0, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [63, 12, 16, 37, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [2, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.04085714370012283, "mapping_values": [1, 11, 11, 7, 4, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.pow(grad, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3026576042175293, 2.302259922027588, 2.3021042346954346, 2.302095413208008, 2.302300214767456, 2.3038558959960938], "accuracy": [0.09219389408826828, 0.09192973375320435, 0.0956280529499054, 0.09245806187391281, 0.09219389408826828, 0.08928807079792023], "val_loss": [2.299954414367676, 2.299954414367676, 2.299954414367676, 2.299954414367676, 2.299954414367676, 2.299954414367676], "val_accuracy": [0.04466666653752327, 0.04466666653752327, 0.04466666653752327, 0.04466666653752327, 0.04466666653752327, 0.04466666653752327]}}]