[{"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [0, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7945713996887207, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), tf.math.square(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2908324760736303, 2.266143604150585, 2.2343736252906283, 2.193132069006635, 2.1370234315295527, 2.0664141832199774, 1.9618896489224618, 1.8447839145127571, 1.711704573107276, 1.5793468828734123, 1.4632627626435946, 1.3754793252171527, 1.2807548201677743, 1.2318372833982294, 1.1689893869502812, 1.1281214888227173, 1.1020209280381097, 1.0630609922798917, 1.0359829775078768, 0.9962897117048789, 0.9899762647184382, 0.9663100048866191, 0.9419447246984705, 0.9324591286020855, 0.9138045900801091, 0.9077420388277668, 0.8847967536536663, 0.8784716823916346, 0.8576513187382373, 0.8538045851923864, 0.8452523018564011, 0.8403054888474234, 0.8381930134787993, 0.8192009895138532, 0.8034635721464136, 0.8027809012630565, 0.7984632094066062, 0.800662309777672, 0.7947447085345914, 0.7669693488391982, 0.7789800526711289, 0.764263527906015, 0.7627532377754457, 0.7503621883049711, 0.7544745718089738, 0.7520636240363106, 0.7499456167095105, 0.7431472559583626, 0.7343752421817571, 0.7333269094227327, 0.7191472837024628, 0.7288470636930732, 0.7172154142572864, 0.7101352661198566, 0.7116130173655076, 0.7079642571793288, 0.708876577248395, 0.702451231882415, 0.7012316306048947, 0.6954010086304571, 0.6944404795909555, 0.6949989092253959, 0.6915966878477703, 0.6899703794923268, 0.6857576510767974, 0.6873322809062157, 0.6739653782396741, 0.6787402720625185, 0.6782638112614735, 0.6649843623782697, 0.6738982013329665, 0.6662254185409531, 0.6608000212357485, 0.665026611742358, 0.6693965791002666, 0.6586868849334118, 0.6600260597808313, 0.6530864642139093, 0.6485504118868105, 0.6512226950238961, 0.6462984615785571, 0.6417347199377398, 0.6462740105818039, 0.6503169767104907, 0.6306815893343647, 0.6388186156600143], "accuracy": [0.11834631860256195, 0.1838594675064087, 0.2509576082229614, 0.3077532649040222, 0.3559635579586029, 0.38409721851348877, 0.4251750111579895, 0.45647865533828735, 0.4753665328025818, 0.5069343447685242, 0.525029718875885, 0.5488046407699585, 0.5705983638763428, 0.5801082849502563, 0.5993924140930176, 0.609430730342865, 0.6063928008079529, 0.6223748326301575, 0.6297714710235596, 0.6474705934524536, 0.6520935297012329, 0.6530181169509888, 0.6635847091674805, 0.6668868064880371, 0.6760005354881287, 0.6796988248825073, 0.6857746839523315, 0.6897371411323547, 0.6952846646308899, 0.694360077381134, 0.7034738063812256, 0.7041342258453369, 0.6977941989898682, 0.705058753490448, 0.7099458575248718, 0.7147008180618286, 0.7128516435623169, 0.7098137736320496, 0.7136441469192505, 0.7232862114906311, 0.7214370369911194, 0.7219653725624084, 0.7268524765968323, 0.7292299270629883, 0.7275128960609436, 0.7248712182044983, 0.728701651096344, 0.7288337349891663, 0.735041618347168, 0.7341170310974121, 0.7359662055969238, 0.7308149337768555, 0.7409853339195251, 0.7429665923118591, 0.7400607466697693, 0.7387399077415466, 0.7403249144554138, 0.7486461400985718, 0.746268630027771, 0.7481178045272827, 0.7481178045272827, 0.744419515132904, 0.7539294958114624, 0.7520803213119507, 0.7534011602401733, 0.7475894689559937, 0.7530049085617065, 0.7536653280258179, 0.7520803213119507, 0.7561748623847961, 0.7531369924545288, 0.7565711140632629, 0.7536653280258179, 0.759080708026886, 0.7544577717781067, 0.7544577717781067, 0.7647602558135986, 0.7598732113838196, 0.7580240368843079, 0.7630431652069092, 0.7644960880279541, 0.7668735980987549, 0.7598732113838196, 0.7598732113838196, 0.7693831920623779, 0.7685906887054443], "val_loss": [1.9465649468558175, 1.9202265739440918, 1.8875160217285156, 1.8431386947631836, 1.7820397785731725, 1.6999908174787248, 1.5928367206028529, 1.4672349521092005, 1.3361953326633997, 1.2095317499978202, 1.1026035036359514, 1.0175234249659948, 0.9477296216147286, 0.8956069605691093, 0.8520845174789429, 0.8164291381835938, 0.7901859964643206, 0.7654152427400861, 0.7468054124287197, 0.7269316571099418, 0.712842515536717, 0.6975241558892387, 0.6837153434753418, 0.6749059472765241, 0.6632338421685355, 0.6562824760164533, 0.6463762862341744, 0.6384499754224505, 0.6352368252617973, 0.6267169543675014, 0.6195826530456543, 0.6149297612054008, 0.6089613097054618, 0.6043965986796788, 0.598169207572937, 0.5947613034929548, 0.5891631330762591, 0.585800221988133, 0.5826611859457833, 0.5791092600141253, 0.5752301386424473, 0.5712535211018154, 0.5695910283497402, 0.5645426682063511, 0.5622331755501884, 0.5603016104016986, 0.5584439209529332, 0.5536959682192121, 0.5515982593808856, 0.5495071751730782, 0.546430162021092, 0.5448202405657087, 0.5438981907708305, 0.5425893919808524, 0.5384672198976789, 0.5358342954090664, 0.533748950277056, 0.5325288942881993, 0.529879995754787, 0.5263931240354266, 0.5261438063212803, 0.5238588196890694, 0.523425715310233, 0.521738989012582, 0.5190410954611642, 0.5178694895335606, 0.515446594783238, 0.5153365986687797, 0.5147603579929897, 0.5118522133146014, 0.5108860390526908, 0.5098238331930978, 0.5081999983106341, 0.5078133514949253, 0.5050251994814191, 0.5044207913534982, 0.5037127392632621, 0.5018722840717861, 0.4990315777914865, 0.49798212732587543, 0.4977731193814959, 0.49910712242126465, 0.4950448274612427, 0.49404726709638325, 0.4934793710708618, 0.49326014518737793], "val_accuracy": [0.23466666042804718, 0.34933334589004517, 0.39100000262260437, 0.42533332109451294, 0.47200000286102295, 0.5056666731834412, 0.5366666913032532, 0.5506666898727417, 0.5703333616256714, 0.5973333120346069, 0.6236666440963745, 0.6366666555404663, 0.6579999923706055, 0.6696666479110718, 0.6773333549499512, 0.687333345413208, 0.6893333196640015, 0.6993333101272583, 0.7003333568572998, 0.7066666483879089, 0.7076666951179504, 0.7176666855812073, 0.7170000076293945, 0.722000002861023, 0.7293333411216736, 0.731333315372467, 0.734666645526886, 0.7353333234786987, 0.7319999933242798, 0.7406666874885559, 0.7426666617393494, 0.7416666746139526, 0.7456666827201843, 0.7446666955947876, 0.7480000257492065, 0.746666669845581, 0.7493333220481873, 0.753333330154419, 0.7523333430290222, 0.7546666860580444, 0.7553333044052124, 0.7563333511352539, 0.7580000162124634, 0.7586666941642761, 0.7620000243186951, 0.765333354473114, 0.7643333077430725, 0.7643333077430725, 0.7649999856948853, 0.765333354473114, 0.7689999938011169, 0.765333354473114, 0.7680000066757202, 0.7693333625793457, 0.7713333368301392, 0.7736666798591614, 0.7706666588783264, 0.7683333158493042, 0.7726666927337646, 0.7753333449363708, 0.7746666669845581, 0.7776666879653931, 0.7746666669845581, 0.7733333110809326, 0.777999997138977, 0.7776666879653931, 0.7796666622161865, 0.7803333401679993, 0.7799999713897705, 0.7823333144187927, 0.7806666493415833, 0.781333327293396, 0.784333348274231, 0.7816666960716248, 0.7853333353996277, 0.7863333225250244, 0.7850000262260437, 0.7870000004768372, 0.7879999876022339, 0.7866666913032532, 0.7903333306312561, 0.7879999876022339, 0.7886666655540466, 0.7886666655540466, 0.7856666445732117, 0.7853333353996277]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1, 1, 0, 1], [7, 1, 5, 7, 8], [0, 2, 1, 1], [48], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7008571624755859, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.square(grad))), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2723064621315814, 2.0113383055583536, 1.4528075178238569, 1.1589375239290252, 0.9173232677779288, 0.8293174769915862, 0.8152090985824435, 0.760115766860648, 0.7314597231018198, 0.6922140388976251, 0.673734576466565, 0.6492382408353583, 0.6284114224500408, 0.605691920008878, 0.5857619810428728, 0.569744490385213, 0.5333101521031479, 0.5435033763294222, 0.5131633336738336, 0.5132573082493974, 0.5088197272908119, 0.48900507458795284, 0.480415575469033, 0.4849517269062722, 0.4612075905317423, 0.46856781447473816, 0.4535102028305725, 0.4476715395550104, 0.4204642503662447, 0.4210717400004284, 0.4169326515056674, 0.4179356011692811, 0.40285798234159226, 0.391399827733756, 0.3943660589863265, 0.39036710175934436, 0.3772711956962351, 0.374071780445081, 0.3656664621348174, 0.35971592370828603, 0.36042838595515275, 0.36983927422274593, 0.3547678061676945, 0.3508341054615013, 0.3405484526723588], "accuracy": [0.1636507660150528, 0.39043718576431274, 0.5115572810173035, 0.6151102781295776, 0.6617355942726135, 0.6831330060958862, 0.6975300312042236, 0.7098137736320496, 0.7152291536331177, 0.7321357727050781, 0.7458723783493042, 0.752740740776062, 0.7576277852058411, 0.7703077793121338, 0.7774402499198914, 0.7845727205276489, 0.7965922355651855, 0.7836481332778931, 0.8038568496704102, 0.8088759779930115, 0.8033285140991211, 0.8083476424217224, 0.8145555257797241, 0.8119139075279236, 0.8232730031013489, 0.8264430165290833, 0.8276317715644836, 0.8269713521003723, 0.842028796672821, 0.8392550349235535, 0.8442742228507996, 0.8400475382804871, 0.8387266993522644, 0.8486329317092896, 0.8502179384231567, 0.8481045961380005, 0.8565579056739807, 0.8552370667457581, 0.8527275323867798, 0.8607845902442932, 0.8580108284950256, 0.8607845902442932, 0.86118084192276, 0.8650112152099609, 0.86553955078125], "val_loss": [1.867238930293492, 1.2958502769470215, 0.8070769309997559, 0.6601381472178868, 0.6699789421898978, 0.6076393808637347, 0.5978626523699079, 0.5685515063149589, 0.5667999642235892, 0.5286481380462646, 0.5013863018580845, 0.4835570880344936, 0.4780414955956595, 0.4686812332698277, 0.45451154027666363, 0.45761583532605854, 0.436949040208544, 0.4331386089324951, 0.4285533343042646, 0.42479948486600605, 0.4213467070034572, 0.4148706708635603, 0.4148005417415074, 0.41964819601603914, 0.4113462567329407, 0.4028035913194929, 0.4038149969918387, 0.3835921032088144, 0.3979839171682085, 0.37950823988233295, 0.386744567326137, 0.38756827797208515, 0.3766905239650181, 0.3880414196423122, 0.3913841588156564, 0.39239669697625296, 0.40747761726379395, 0.403773946421487, 0.4056509222303118, 0.3930793063981192, 0.40043083259037565, 0.43983781337738037, 0.404509288924081, 0.3996561510222299, 0.43267244952065603], "val_accuracy": [0.4259999990463257, 0.5856666564941406, 0.6456666588783264, 0.7103333473205566, 0.7173333168029785, 0.7179999947547913, 0.7393333315849304, 0.7426666617393494, 0.749666690826416, 0.7620000243186951, 0.7816666960716248, 0.7789999842643738, 0.7850000262260437, 0.7889999747276306, 0.7976666688919067, 0.8009999990463257, 0.809333324432373, 0.8096666932106018, 0.8163333535194397, 0.8256666660308838, 0.8243333101272583, 0.8316666483879089, 0.8270000219345093, 0.8266666531562805, 0.8273333311080933, 0.8349999785423279, 0.8343333601951599, 0.8403333425521851, 0.8356666564941406, 0.8386666774749756, 0.8373333215713501, 0.8426666855812073, 0.843666672706604, 0.8453333377838135, 0.8503333330154419, 0.8446666598320007, 0.8429999947547913, 0.8526666760444641, 0.8500000238418579, 0.8556666374206543, 0.8550000190734863, 0.8543333411216736, 0.8539999723434448, 0.8536666631698608, 0.8523333072662354]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [0, 3, 1, 1], [50], [0, 0, 1, 0, 0, 0, 1, 1], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [5, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [3, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 0, 2], [2, 0, 0, 2, 0, 3], [28, 57]], "fitness": -0.5082857012748718, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2963807594821817, 2.2841459326441136, 2.273175295113163, 2.2597563731246826, 2.2478624366104736, 2.2338085753680565, 2.2195003532761866, 2.203139968599232, 2.1841823700129033, 2.1616167250310645, 2.13848191856346, 2.1091151017995324, 2.08363560766765, 2.0578193122905084, 2.033844568977865, 2.022888184475499], "accuracy": [0.10368511080741882, 0.14449875056743622, 0.175670325756073, 0.21291771531105042, 0.2429005354642868, 0.2748646140098572, 0.30022454261779785, 0.32439571619033813, 0.32967904210090637, 0.349359393119812, 0.3505481481552124, 0.3637564480304718, 0.3531897962093353, 0.34803855419158936, 0.3354906737804413, 0.3065645098686218], "val_loss": [1.9593728610447474, 1.9482154164995467, 1.9373993873596191, 1.926515783582415, 1.914654050554548, 1.9017750195094518, 1.8877966744559151, 1.8716586657932825, 1.8533721651349748, 1.832367283957345, 1.8084320340837752, 1.7814456394740514, 1.7543719836643763, 1.7306858471461706, 1.7129215172358923, 1.705620629446847], "val_accuracy": [0.12333333492279053, 0.23100000619888306, 0.3336666524410248, 0.38999998569488525, 0.4163333475589752, 0.4363333284854889, 0.45899999141693115, 0.476666659116745, 0.4833333194255829, 0.4909999966621399, 0.49166667461395264, 0.48399999737739563, 0.4573333263397217, 0.4090000092983246, 0.3383333384990692, 0.2913333475589752]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [0, 3, 1, 1], [50], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [1, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 0, 4, 7, 3, 6], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10285714268684387, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [11.96624825709626, 6484109.186797124, 2.3382877696695705, 2.3126760432276474, 2.3049779043473495, 2.3034340802153515, 8168148838.854046, 2.9916694260023892e+16, 2.308849844493571, 2.3044541818653794, 2.3034982483195843, 2.303106164604744], "accuracy": [0.09615638852119446, 0.10077928751707077, 0.09998679161071777, 0.09747721254825592, 0.09760929644107819, 0.09998679161071777, 0.10276053100824356, 0.09417514503002167, 0.09760929644107819, 0.09377889335155487, 0.08968432247638702, 0.09311848133802414], "val_loss": [2.0820066588265553, 2.0194947378976003, 1.9871888841901506, 1.9766629764011927, 1.9743009975978307, 1.9737990924290247, 2.1791474722103062e+17, 1.9815867287772042, 1.975606918334961, 1.9741738864353724, 1.9737437793186732, 1.97363247190203], "val_accuracy": [0.09966666996479034, 0.10199999809265137, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.10066666454076767, 0.11033333092927933, 0.09799999743700027, 0.10199999809265137, 0.10066666454076767, 0.10366666316986084, 0.10000000149011612]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 1, 1, 1, 0, 1], [7, 6, 5, 7, 8], [0, 1, 0, 1], [50, 48], [1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 3, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 2, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.divide_no_nan(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, sigma))", "other_info": {"loss": [2.303378227695167, 2.3062324208070764, 2.3108966817252465, 2.312274811494903, 2.3164937381243047, 2.3225124195629436, 2.327675173610445, 2.336034420002343, 2.348808833369017, 2.374928294612495, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08770307898521423, 0.0886276587843895, 0.07858935743570328, 0.07330603897571564, 0.07357019931077957, 0.06868313252925873, 0.0676264688372612, 0.07079645991325378, 0.06987188011407852, 0.0738343670964241, 0.09325055778026581, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.972696031842913, 1.97479248046875, 1.9775032315935408, 1.9806052616664342, 1.9839646475655692, 1.988152367728097, 1.9932682173592704, 2.000082424708775, 2.012753350394113, 2.051340784345354, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.033666666597127914, 0.02433333359658718, 0.022333333268761635, 0.01899999938905239, 0.026333333924412727, 0.03433333337306976, 0.05066666752099991, 0.07233333587646484, 0.09433333575725555, 0.09933333098888397, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 1, 3, 7, 8], [0, 3, 1, 1], [9], [0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 1, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [9, 3, 0, 4, 7, 1, 8, 9], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 3, 4, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, alpha), alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07475894689559937, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1], [7, 1, 5, 7, 8, 3, 1, 0, 5, 4, 5, 1, 5], [0, 2, 1, 1, 1, 3, 0, 3], [48, 91], [1, 0, 0, 0, 0, 0, 1, 1], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [1, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 21, 21, 13, 8, 2, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.negative(tf.math.square(tf.math.add(alpha, alpha)))), tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))), tf.math.add(alpha, alpha))), tf.math.add(alpha, grad))))), tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [0, 3, 1, 1], [50], [1, 0, 0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [2, 7], [88, 19], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 4, 7], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [97942919677.67354, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.108440101146698, 0.09536388516426086, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [Infinity, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [1, 1, 0, 1, 0, 1, 1, 0, 1], [0, 1, 5, 7, 8], [1, 3, 3, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [2, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [9, 3, 0, 4, 7], [2, 3, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302476782320733, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09972262382507324, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1], [7, 5, 5, 7, 8], [0, 3, 0, 1], [48, 54], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 9, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07475894689559937, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 0, 1, 1, 1, 1, 1, 0, 1], [7, 1, 5, 7, 8], [0, 3, 1, 1], [50], [0, 0, 1, 0, 0, 0, 1, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 1, 8], [2, 0, 0, 2, 0, 3], [83, 57, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 12, 7, 5, 3], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)), alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(beta), tf.math.pow(tf.math.add(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.sqrt(beta), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1, 0, 0, 0], [7, 1, 5, 7, 8], [2, 2, 1, 1], [48], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [39, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 12, 7, 5, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(beta), tf.math.pow(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [0, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [4, 7, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(tf.math.add(alpha, grad), alpha))), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [3, 2, 1, 1], [50], [1, 0, 0, 0, 0, 0, 1, 1], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 4, 7], [0, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2918.0542228337467, 51844.83094311353, 239416.77985074627, 657641.2886590279, 1407659.8835523708, 2578109.4046361116], "accuracy": [0.09787346422672272, 0.10011887550354004, 0.09325055778026581, 0.1006472036242485, 0.10170386731624603, 0.09866596013307571], "val_loss": [10688.111328125, 82992.62276785714, 277608.3214285714, 655220.25, 1276514.2857142857, 2202174.9285714286], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 1, 1, 1, 0, 1], [0, 1, 5, 7, 8], [0, 3, 3, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 3, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07475894689559937, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [7, 1, 6, 7, 8, 7, 6], [0, 3, 1, 1, 3, 3, 0], [50, 19], [1, 0, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [1, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 8, 7, 3, 6, 6], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 7, 7, 2, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 14, 8, 6, 2], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), grad), tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha)))))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(tf.math.sqrt(tf.math.add(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha), sigma)))), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 1, 1, 1, 0, 1], [7, 1, 5, 7, 8], [0, 0, 0, 1], [50, 48, 27], [0, 0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [2, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 3, 1], [2, 1, 0, 2, 0, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 3, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 13, 7, 6, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.math.negative(tf.math.pow(tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.subtract(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1], [1, 1, 0, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [0, 3, 1, 1], [50], [1, 0, 1, 0, 0, 0, 1, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [2, 7], [88, 19], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 0, 2, 7], [2, 0, 0, 2, 0, 3], [28, 57, 35]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 14, 8, 6, 3], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(tf.math.pow(tf.math.add(tf.math.negative(beta), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), beta), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))), sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [0, 3, 3, 1], [55], [1, 1, 1, 0, 0, 0, 1, 1], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 3, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.302476782320733, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09972262382507324, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [0, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [2, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 1, 2], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 13, 7, 6, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(sigma), tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, sigma), sigma))))", "other_info": {"loss": [2.302735982963422, 2.303307808810662, 2.3044238053985544, 2.3028825239466952, 2.303062287178085, 2.3033026957697698], "accuracy": [0.08875974267721176, 0.0940430611371994, 0.08506141602993011, 0.09126931428909302, 0.08928807079792023, 0.0874389111995697], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]