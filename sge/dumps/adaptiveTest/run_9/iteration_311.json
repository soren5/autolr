[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 3, 2, 3, 2, 8, 2, 6, 9, 6, 8, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8140000104904175, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.sqrt(tf.math.multiply(tf.math.add(beta, grad), grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.216464382451775, 1.7249214688879135, 1.3394991596062202, 1.099261999130249, 0.956645615899788, 0.8358538878938667, 0.7774695119979343, 0.7716784488491929, 0.7073140604668258, 0.7268343585719365, 0.6753331670955093, 0.6371174566954544, 0.6132078342402474, 0.6278648496052026, 0.5842470772561459, 0.5789845587555066, 0.5723215737174042, 0.5402525930026141, 0.545852005107764, 0.5574999700337668, 0.5463928277379785, 0.5120331475353984, 0.5325475441442741, 0.4795261871080987, 0.47312488242257555, 0.48164818370268253, 0.4553291552952646, 0.47626924647426466, 0.45498291914095546, 0.4370506165868744, 0.4399006610116025, 0.42069125010148173, 0.42924175286777994, 0.43955744885418946, 0.41887561817289487, 0.40731724388941704], "accuracy": [0.26535463333129883, 0.44644036889076233, 0.538237988948822, 0.6022982597351074, 0.6474705934524536, 0.6881521344184875, 0.6991150379180908, 0.7084929347038269, 0.7380794882774353, 0.7226257920265198, 0.7416457533836365, 0.7582882046699524, 0.7728173136711121, 0.7618544697761536, 0.7829877138137817, 0.7807422876358032, 0.7812706232070923, 0.7985734939575195, 0.798309326171875, 0.7847048044204712, 0.7972526550292969, 0.8087438941001892, 0.8047813773155212, 0.8260467648506165, 0.8255184292793274, 0.8207634687423706, 0.8281601071357727, 0.8228767514228821, 0.8364813327789307, 0.839519202709198, 0.835160493850708, 0.8450667262077332, 0.8358209133148193, 0.8348963260650635, 0.8433496356010437, 0.8473120927810669], "val_loss": [1.5759774616786413, 1.1120356151035853, 0.9481762817927769, 0.8302099534443447, 0.7217320374080113, 0.6204276595796857, 0.594069106238229, 0.6203815255846296, 0.5707071508680072, 0.5323371376310077, 0.5234944820404053, 0.5006832224982125, 0.5197074583598545, 0.46635537488119944, 0.47527527809143066, 0.48923444747924805, 0.4568011590412685, 0.5076274360929217, 0.44898128509521484, 0.42916654688971384, 0.4284060938017709, 0.44159092221941265, 0.45014286041259766, 0.4079354320253645, 0.4379514030047825, 0.4356106349400112, 0.4192201410021101, 0.39451401574271067, 0.39081690992627827, 0.4088491031101772, 0.37300433431352886, 0.4353881904057094, 0.3980845298085894, 0.36590783085141865, 0.387197060244424, 0.38807137523378643], "val_accuracy": [0.5659999847412109, 0.4959999918937683, 0.6473333239555359, 0.6416666507720947, 0.6986666917800903, 0.7316666841506958, 0.7350000143051147, 0.7286666631698608, 0.7433333396911621, 0.753333330154419, 0.7689999938011169, 0.7929999828338623, 0.7570000290870667, 0.7953333258628845, 0.7956666946411133, 0.7689999938011169, 0.8106666803359985, 0.7553333044052124, 0.8003333210945129, 0.8143333196640015, 0.8116666674613953, 0.8063333630561829, 0.7993333339691162, 0.8230000138282776, 0.8066666722297668, 0.7956666946411133, 0.8163333535194397, 0.8360000252723694, 0.8299999833106995, 0.8143333196640015, 0.8410000205039978, 0.7996666431427002, 0.82833331823349, 0.8396666646003723, 0.831333339214325, 0.8293333053588867]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 3, 1, 3, 2, 8, 2, 6, 9, 6, 8, 9], [2, 3, 3, 2, 2, 0, 3, 0, 0, 3, 1, 0, 5, 0], [18, 53, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.808571457862854, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2161780139002047, 1.7250029296922866, 1.2761167473466153, 1.1800068972400781, 1.0176990874344882, 0.8730190462833697, 0.7881809163480906, 0.7502451072814931, 0.7221474106663552, 0.7014260416915152, 0.6741844771513298, 0.6822921334240714, 0.6458147151626695, 0.6299633626310565, 0.5870662855670563, 0.5975482859915084, 0.5769697230300883, 0.5522094187861216, 0.5436839248171698, 0.5600811561982645, 0.5303387171706314, 0.5190832787666338, 0.5365085391761478, 0.48503707005457714, 0.4951952619953178], "accuracy": [0.26522254943847656, 0.4472328722476959, 0.5519746541976929, 0.5947695374488831, 0.6341302394866943, 0.6798309087753296, 0.698190450668335, 0.7131158113479614, 0.7239466309547424, 0.7306828498840332, 0.7448157668113708, 0.7506273984909058, 0.7565711140632629, 0.7564390301704407, 0.7814027070999146, 0.7769119143486023, 0.7792893648147583, 0.7960638999938965, 0.7965922355651855, 0.7860256433486938, 0.8043851256370544, 0.8038568496704102, 0.8054417967796326, 0.8210275769233704, 0.8153480291366577], "val_loss": [1.5769568852015905, 1.0501318659101213, 1.0435590403420585, 0.7357485464641026, 0.716033799307687, 0.6853927033288139, 0.6085776090621948, 0.6182786055973598, 0.5518222876957485, 0.5477016823632377, 0.6533346687044416, 0.49654957226344515, 0.5293916123253959, 0.47872468403407503, 0.5163899149213519, 0.5047493662152972, 0.4728199413844517, 0.4776097536087036, 0.46140480041503906, 0.4314747623034886, 0.43837508133479525, 0.4442655529294695, 0.437581615788596, 0.4258652329444885, 0.4098630206925528], "val_accuracy": [0.5659999847412109, 0.5136666893959045, 0.5979999899864197, 0.6940000057220459, 0.6923333406448364, 0.6926666498184204, 0.7276666760444641, 0.7146666646003723, 0.7546666860580444, 0.7509999871253967, 0.7283333539962769, 0.7820000052452087, 0.750333309173584, 0.7940000295639038, 0.765999972820282, 0.7736666798591614, 0.8003333210945129, 0.7863333225250244, 0.7993333339691162, 0.8209999799728394, 0.8073333501815796, 0.809333324432373, 0.8033333420753479, 0.8119999766349792, 0.8153333067893982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 3, 2, 3, 2, 8, 5, 9, 9, 6, 8, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [11, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [1, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8031428456306458, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))))), grad), tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2164574975051647, 1.7269829584701644, 1.3094878782449444, 1.0935495316376067, 0.99026125979666, 0.8145291948945153, 0.8314621296493904, 0.7458652482607802, 0.7372981303356358, 0.721310054479636, 0.6878088973437979, 0.6425175129887041, 0.6291172121494139, 0.6354127193423089, 0.600610392519732, 0.589398452358916, 0.5738830262124184, 0.5458728792865467, 0.5541281235287329, 0.5452222394165409, 0.5337772687601612, 0.5271585351204309, 0.5318904814309511, 0.4831318739634841, 0.5089432077007271], "accuracy": [0.26522254943847656, 0.44604411721229553, 0.5488046407699585, 0.6127327680587769, 0.631488561630249, 0.6980583667755127, 0.6907938122749329, 0.7145687341690063, 0.7164179086685181, 0.7236824631690979, 0.7354378700256348, 0.7602694630622864, 0.7600052952766418, 0.7557786107063293, 0.7736098170280457, 0.7778365015983582, 0.7803460359573364, 0.7955356240272522, 0.7869502305984497, 0.7930260300636292, 0.7993659973144531, 0.7965922355651855, 0.802271842956543, 0.8231409192085266, 0.8068947196006775], "val_loss": [1.5762859753199987, 1.112189735685076, 0.9497297831944057, 0.9096835340772357, 0.665437136377607, 0.6718880449022565, 0.5801757914679391, 0.6362739971705845, 0.56736877986363, 0.533605831010001, 0.5174131223133632, 0.5130959238324847, 0.5014359610421317, 0.475956882749285, 0.4779439653669085, 0.5170325040817261, 0.4610707759857178, 0.5044095345905849, 0.441110406603132, 0.43248690026147024, 0.4505006415503366, 0.4322095087596348, 0.4356281076158796, 0.4851050887789045, 0.41978260449000765], "val_accuracy": [0.5653333067893982, 0.49533334374427795, 0.6806666851043701, 0.6190000176429749, 0.7179999947547913, 0.7039999961853027, 0.7356666922569275, 0.7306666374206543, 0.7429999709129333, 0.7590000033378601, 0.7683333158493042, 0.7776666879653931, 0.7760000228881836, 0.7889999747276306, 0.7846666574478149, 0.7596666812896729, 0.812666654586792, 0.7593333125114441, 0.8076666593551636, 0.8163333535194397, 0.7983333468437195, 0.8163333535194397, 0.8069999814033508, 0.7753333449363708, 0.8140000104904175]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 3, 2, 3, 2, 8, 2, 3, 9, 6, 8, 9], [5, 2, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [63, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.7720000147819519, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(grad, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1227909091472816, 1.9970752299186214, 1.6775563877524167, 1.1035155972878947, 0.9528072763978844, 0.8832699915578951, 0.8337576800113214, 0.7602928965996443, 0.7775014024274602, 0.6729026065920133, 0.7000662600359566, 0.6472833018340077, 0.6776519882412887, 0.6271519948777711], "accuracy": [0.29665830731391907, 0.36124685406684875, 0.4419495463371277, 0.6003170013427734, 0.6420552134513855, 0.6705851554870605, 0.6808875799179077, 0.7078325152397156, 0.7034738063812256, 0.7446836829185486, 0.7255316376686096, 0.7544577717781067, 0.7454761862754822, 0.7633073329925537], "val_loss": [1.2774252550942558, 1.6533218792506628, 0.8806086608341762, 0.7590922968728202, 0.7238815682274955, 0.7333803347178868, 0.607746056147984, 0.5872467075075422, 0.5365007604871478, 0.5716025659016201, 0.5257112809589931, 0.5500897169113159, 0.5243585450308663, 0.5102740526199341], "val_accuracy": [0.5666666626930237, 0.3779999911785126, 0.6399999856948853, 0.6676666736602783, 0.6966666579246521, 0.684333324432373, 0.7176666855812073, 0.7393333315849304, 0.7646666765213013, 0.737666666507721, 0.7630000114440918, 0.7573333382606506, 0.7590000033378601, 0.7596666812896729]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1], [3, 8, 4, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [5, 3, 3, 2, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.7580000162124634, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 10, 6, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.sqrt(tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.multiply(tf.math.add(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.sqrt(tf.math.add(beta, grad))), tf.math.divide_no_nan(tf.math.add(beta, beta), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2160452907709884, 1.736392751660849, 1.3367048577861764, 1.1868636878316807, 0.9875859194317703, 0.8720889715722617, 0.8313092276278803, 0.742682253301986, 0.7324616521923628, 0.7346463972204916, 0.6840810722851908, 0.6633394063818079], "accuracy": [0.26535463333129883, 0.4468366205692291, 0.5329546928405762, 0.5852595567703247, 0.629507303237915, 0.67666095495224, 0.6926429867744446, 0.7177387475967407, 0.724739134311676, 0.7140403985977173, 0.7382115721702576, 0.7470611333847046], "val_loss": [1.575289045061384, 1.0100596972874232, 0.8789100646972656, 0.7905082702636719, 0.7132394824709211, 0.6490855898175921, 0.5802850723266602, 0.6733577081135341, 0.5601715019771031, 0.5667447532926287, 0.5488183328083583, 0.5556863035474505], "val_accuracy": [0.5659999847412109, 0.5083333253860474, 0.6420000195503235, 0.6883333325386047, 0.7103333473205566, 0.7193333506584167, 0.7583333253860474, 0.7070000171661377, 0.7450000047683716, 0.7350000143051147, 0.7453333139419556, 0.7526666522026062]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 3, 2, 3, 2, 8, 5, 9, 9, 6, 8, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [11, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [1, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [15, 57]], "fitness": -0.5631428360939026, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))))), grad), tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302109694200626, 2.2995265524983486, 2.2984005910467555, 2.2956773009140887, 2.2933536107750174, 2.292685492069273, 2.2921864717801204, 2.287822467524063, 2.2873100449049777, 2.2833113150747146, 2.281330253091927, 2.2795983814465735, 2.2774746557189616, 2.275627383938901, 2.2744294166438976, 2.273600448565067, 2.2702666576968964, 2.2686844323021846, 2.2654590499305045, 2.2641940914550083, 2.2625448973958897, 2.259551051774313, 2.259259956261863, 2.255897443056138, 2.254143403867894, 2.25229113899627, 2.2486702925367537, 2.247895873375478, 2.2462606853293137, 2.2423113191982758, 2.241009433082759, 2.237650163358528, 2.2346941468706536, 2.232567467693923, 2.2310873414106247, 2.228470816824493, 2.223926889583057, 2.221534975767608, 2.2194738126056164, 2.2166306293557083, 2.2152129117413724, 2.21049171419286, 2.2068003161456433, 2.204858688866662, 2.1983703187648507, 2.197396317997062, 2.1942559280226717, 2.1898933352575076, 2.188559964789281, 2.1848210475668695, 2.1794724063220796, 2.1761293650586704, 2.1732874635881076, 2.16727212596138, 2.1639302539283793, 2.161712087896506, 2.155738365821803, 2.1507101087301885, 2.1474475722035176, 2.1417847170002817, 2.138753066587568, 2.135821742656256, 2.130193941439809, 2.1218203623785143, 2.1198513341885294, 2.1121592980806683, 2.1074115739380757, 2.101317339412068, 2.0947876453336676, 2.088559783759953, 2.0872742761915006, 2.079415841266983, 2.0692185161451007, 2.065040820908663, 2.0591487692426207, 2.051866634914573, 2.0451597568774975, 2.0395528980769564, 2.0302623163172124, 2.024737356235291, 2.0150408488789946, 2.0096081537325556, 2.003873336962296, 1.994861838288862, 1.9891047184698145, 1.9802773210901894, 1.9735534836225317, 1.964584155499014, 1.9587059942738507, 1.945908177057986, 1.9413286301406651, 1.929065750810716, 1.9185932926482308, 1.9160017680498305, 1.9030994023188403, 1.8986396631308362, 1.8828261430001199, 1.876677283474231, 1.8715680702377258, 1.8616758472868133], "accuracy": [0.09338264167308807, 0.10157178342342377, 0.10051512718200684, 0.10289261490106583, 0.11134592443704605, 0.11993131786584854, 0.11478008329868317, 0.1310262829065323, 0.1328754425048828, 0.13630960881710052, 0.149649977684021, 0.1492537260055542, 0.15519747138023376, 0.1612732857465744, 0.1682736724615097, 0.16378284990787506, 0.17831197381019592, 0.17791573703289032, 0.19231277704238892, 0.1942940205335617, 0.19838859140872955, 0.2016906589269638, 0.20103025436401367, 0.2141064554452896, 0.2176727056503296, 0.21780477464199066, 0.22784309089183807, 0.23180557787418365, 0.2312772423028946, 0.2452780306339264, 0.2448817789554596, 0.2479196935892105, 0.24765552580356598, 0.2599392533302307, 0.26178839802742004, 0.26244881749153137, 0.2801479399204254, 0.2785629332065582, 0.2817329168319702, 0.2864879071712494, 0.28622373938560486, 0.2954695522785187, 0.299299955368042, 0.2989037036895752, 0.30722492933273315, 0.3043191134929657, 0.3085457682609558, 0.31145158410072327, 0.31039494276046753, 0.3187161684036255, 0.32333904504776, 0.320169061422348, 0.3311319649219513, 0.3419627547264099, 0.3440760672092438, 0.3415665030479431, 0.349359393119812, 0.35028398036956787, 0.3541143834590912, 0.35768061876296997, 0.3477744162082672, 0.35345396399497986, 0.35081231594085693, 0.360190212726593, 0.3595297932624817, 0.3700964152812958, 0.37485140562057495, 0.375379741191864, 0.37722888588905334, 0.3875313699245453, 0.37088891863822937, 0.3877955377101898, 0.39228636026382446, 0.395720511674881, 0.3929467797279358, 0.3999471664428711, 0.3971734344959259, 0.39664509892463684, 0.402588814496994, 0.40364548563957214, 0.4113062918186188, 0.40430590510368347, 0.4093250632286072, 0.41870296001434326, 0.413419634103775, 0.4173821210861206, 0.4201558530330658, 0.4177783727645874, 0.4113062918186188, 0.42649585008621216, 0.43508124351501465, 0.4279487431049347, 0.4301941692829132, 0.4361378848552704, 0.4345529079437256, 0.43745872378349304, 0.44670453667640686, 0.4430062174797058, 0.4387795627117157, 0.4418174624443054], "val_loss": [1.9694170951843262, 1.9676069532121931, 1.9658209255763464, 1.9640155519757951, 1.962226186479841, 1.9604236057826452, 1.958634308406285, 1.956836223602295, 1.955047539302281, 1.953233310154506, 1.9514244624546595, 1.9496241297040666, 1.9478064264569963, 1.94598354612078, 1.9441373688834054, 1.9423042706080846, 1.9404422215053014, 1.9385779925755091, 1.936657088143485, 1.9347376823425293, 1.9327896663120814, 1.930805274418422, 1.9288196563720703, 1.9267896243504115, 1.9247444697788783, 1.9226764270237513, 1.9205604961940221, 1.9184263774326868, 1.9162736620221819, 1.9140466962541853, 1.9117755889892578, 1.9094520977565221, 1.907088347843715, 1.9046916280473982, 1.9022588729858398, 1.8997774805341447, 1.897218976702009, 1.894620759146554, 1.89197724206107, 1.8892809322902135, 1.8865347589765276, 1.8837005751473563, 1.8808029719761439, 1.877870968409947, 1.8748244558061873, 1.8717004912240165, 1.8685054097856795, 1.8652455466134208, 1.8618929726736886, 1.858478614262172, 1.854971272604806, 1.851362705230713, 1.8476931027003698, 1.8438997268676758, 1.8400517872401647, 1.836082594735282, 1.8320156506129675, 1.8278209822518485, 1.8235556057521276, 1.8191869599478585, 1.8147225379943848, 1.8101929255894251, 1.8055426733834403, 1.8007635389055525, 1.7959060668945312, 1.7908975056239538, 1.7857797486441476, 1.7805649893624442, 1.7751778875078474, 1.7696731431143624, 1.7641213962009974, 1.7584217616489954, 1.7525059155055456, 1.7465026719229562, 1.7403816495622908, 1.7341185978480749, 1.7277475084577287, 1.7212510108947754, 1.7145791053771973, 1.707801376070295, 1.7008393151419503, 1.6938023567199707, 1.686638423374721, 1.6793139321463448, 1.6718897819519043, 1.6642924036298479, 1.6566031319754464, 1.6488307884761266, 1.6409377029963903, 1.6328470366341727, 1.6246695859091622, 1.6163433960505895, 1.6078785487583704, 1.5994353975568498, 1.5907188824244909, 1.5820000852857317, 1.573082344872611, 1.5641361304691859, 1.555128472191947, 1.5460658073425293], "val_accuracy": [0.052000001072883606, 0.06133333221077919, 0.07066666334867477, 0.08566666394472122, 0.09600000083446503, 0.1106666699051857, 0.12733332812786102, 0.1433333307504654, 0.15800000727176666, 0.17633333802223206, 0.19333332777023315, 0.21066667139530182, 0.22866666316986084, 0.23999999463558197, 0.25466665625572205, 0.273333340883255, 0.2866666615009308, 0.2983333468437195, 0.3100000023841858, 0.3233333230018616, 0.33033332228660583, 0.33933332562446594, 0.3453333377838135, 0.3526666760444641, 0.359333336353302, 0.36266666650772095, 0.367333322763443, 0.3709999918937683, 0.37400001287460327, 0.37700000405311584, 0.3813333213329315, 0.3853333294391632, 0.38733333349227905, 0.39133334159851074, 0.3933333456516266, 0.39800000190734863, 0.40033334493637085, 0.4050000011920929, 0.40966665744781494, 0.41333332657814026, 0.4163333475589752, 0.42133334279060364, 0.4246666729450226, 0.4273333251476288, 0.429666668176651, 0.43166667222976685, 0.43299999833106995, 0.4359999895095825, 0.4386666715145111, 0.4403333365917206, 0.4423333406448364, 0.445333331823349, 0.4466666579246521, 0.44966667890548706, 0.4519999921321869, 0.45533332228660583, 0.45633333921432495, 0.4586666524410248, 0.46133333444595337, 0.46399998664855957, 0.4673333466053009, 0.4713333249092102, 0.4753333330154419, 0.4793333411216736, 0.4816666543483734, 0.48500001430511475, 0.49000000953674316, 0.4936666786670685, 0.49533334374427795, 0.4963333308696747, 0.4986666738986969, 0.5009999871253967, 0.5049999952316284, 0.5073333382606506, 0.5090000033378601, 0.5130000114440918, 0.5173333287239075, 0.5189999938011169, 0.5216666460037231, 0.5256666541099548, 0.5296666622161865, 0.5326666831970215, 0.5339999794960022, 0.5373333096504211, 0.5393333435058594, 0.5403333306312561, 0.5413333177566528, 0.5426666736602783, 0.5440000295639038, 0.5450000166893005, 0.5443333387374878, 0.5460000038146973, 0.5486666560173035, 0.5506666898727417, 0.5533333420753479, 0.5536666512489319, 0.5543333292007446, 0.5566666722297668, 0.559333324432373, 0.5609999895095825]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 3, 2, 3, 2, 8, 5, 6, 9, 6, 8, 9], [0, 3, 3, 2, 3, 3, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 6, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.42399999499320984, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 9, 7, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.add(beta, tf.math.add(grad, grad)), tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, beta)), tf.math.square(tf.math.add(beta, grad)))), tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.469904275319013, 2.3545917723676735, 3.2579113687301877, 2.293403097068818, 2.3034598131410324, 2.2815215353637623, 2.258916904708697, 2.1461443811942402, 2.061310907475244, 2.310174572091486, 2.306794912807851, 2.3047240997239378, 2.3038913338585236], "accuracy": [0.201294407248497, 0.1550653874874115, 0.24065512418746948, 0.11649715900421143, 0.13670584559440613, 0.13313961029052734, 0.14819706976413727, 0.25359925627708435, 0.32426363229751587, 0.09576013684272766, 0.09760929644107819, 0.0948355570435524, 0.09945846349000931], "val_loss": [1.82792786189488, 1.959503173828125, 1.9960259710039412, 1.911886147090367, 1.974327836717878, 1.9819253512791224, 1.6726835795811243, 1.554929154259818, 1.9826209204537528, 1.975463935307094, 1.9752243586948939, 1.9738550186157227, 1.973996571132115], "val_accuracy": [0.20800000429153442, 0.1743333339691162, 0.10199999809265137, 0.24533332884311676, 0.09799999743700027, 0.10100000351667404, 0.42800000309944153, 0.43066665530204773, 0.10000000149011612, 0.10000000149011612, 0.09799999743700027, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 2, 3, 1, 3, 2, 8, 2, 6, 9, 6, 8, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [18, 53, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.3271428644657135, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 8, 8, 2, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.multiply(grad, tf.math.subtract(tf.math.multiply(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta)))), grad), tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3505894789810995, 8.27726360819737, 2.5680651980903817, 2.4639301183532023, 2.438794393423542, 2.483761140273909], "accuracy": [0.22982433438301086, 0.14119666814804077, 0.09549596905708313, 0.10091137140989304, 0.09959053993225098, 0.1006472036242485], "val_loss": [5.739708764212472, 2.5046708243233815, 2.0269568988255093, 2.0344762120928084, 2.191112450190953, 2.049894537244524], "val_accuracy": [0.33766666054725647, 0.10166666656732559, 0.10000000149011612, 0.09933333098888397, 0.09833333641290665, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 8, 2, 2, 3, 2, 8, 2, 6, 9, 4, 8, 9], [2, 2, 3, 1, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 26, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [6, 3, 8, 9, 7], [1, 0], [88, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.29514285922050476, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.multiply(beta, tf.math.add(beta, grad)), tf.math.add(beta, alpha)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.4696815940351566, 2.8406234927511864, 2.305637502871831, 2.3037042149841165, 2.30345101382329, 2.303126550605662], "accuracy": [0.20142649114131927, 0.1578391194343567, 0.09945846349000931, 0.09787346422672272, 0.10091137140989304, 0.09391097724437714], "val_loss": [1.8056453977312361, 1.976893084389823, 1.9743432317461287, 1.9739550181797572, 1.9736761365618025, 1.9735897609165736], "val_accuracy": [0.22833333909511566, 0.09833333641290665, 0.09933333098888397, 0.1003333330154419, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 3, 2, 3, 9, 8, 5, 6, 9, 6, 8, 9], [3, 0, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 6, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.2937142848968506, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.469755889622763, 3.020305846109366, 2.305285316369537, 2.3035832873865787, 2.3033407992533155, 2.3027256424117475], "accuracy": [0.20116232335567474, 0.13630960881710052, 0.09985470771789551, 0.10117553919553757, 0.09760929644107819, 0.10170386731624603], "val_loss": [1.804332937513079, 1.9762086868286133, 1.9740159170968192, 1.9738176209586007, 1.9735240936279297, 1.9727532523018974], "val_accuracy": [0.22633333504199982, 0.09933333098888397, 0.09933333098888397, 0.10866666585206985, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 3, 5, 3, 2, 8, 6, 6, 9, 6, 8, 9], [5, 3, 3, 3, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [68, 13, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [2, 3, 5, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 0, 1, 1, 0, 1, 0, 6, 3, 3, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.sqrt(grad)), tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302644679858432, 2.302418725932389, 2.302460030479013, 2.3024406296749316, 2.3024376812328864, 2.3024691078625397], "accuracy": [0.1014397069811821, 0.10817593336105347, 0.10566636174917221, 0.10513802617788315, 0.10711926966905594, 0.10381719470024109], "val_loss": [1.973651954105922, 1.973651613507952, 1.9736528396606445, 1.9736687115260534, 1.9736787932259696, 1.9737070628574915], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 8, 6, 2, 3, 0, 5, 9, 2, 8, 6, 8, 9], [2, 2, 3, 2, 3, 3, 3, 0, 0, 3, 1, 0, 5, 0], [18, 53, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0, 1], [88, 44], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 6, 3, 3, 1, 6, 3, 3, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [8.926939791433731e+23, 34.87285153992723, 63.323816233181354, 91.78128593403508, 120.25625326781146, 148.70978759072318], "accuracy": [0.09192973375320435, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [19.83864321027483, 44.24215916224888, 68.65075247628349, 93.07737513950893, 117.48344203404018, 141.89215087890625], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 3, 1, 3, 2, 8, 2, 6, 9, 6, 8, 9], [2, 3, 3, 2, 2, 0, 3, 0, 0, 3, 1, 0, 5, 0], [18, 53, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [25, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 13, 7, 6, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.square(tf.math.pow(tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(beta, sigma), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 2, 2, 3, 2, 8, 2, 6, 9, 4, 8, 9], [2, 2, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 26, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [6, 3, 8, 9, 7], [1, 0], [88, 44], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [9, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, beta))), grad), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302817924635805, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09826971590518951, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 3, 2, 3, 2, 8, 2, 6, 9, 6, 8, 9], [5, 3, 3, 1, 1, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 12, 12, 6, 6, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 8, 3, 2, 3, 2, 8, 2, 6, 9, 6, 8, 9], [2, 3, 0, 2, 2, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 96, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [4, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 8, 5, 4, 2, 1, 2, 3], [1, 1, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 3, 1, 3, 2, 8, 2, 6, 9, 6, 8, 9], [2, 3, 3, 2, 2, 0, 3, 0, 0, 3, 1, 0, 5, 0], [18, 53, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [7, 0], [88, 44], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 5, 4, 2, 1, 2, 3], [0, 3, 0, 2, 3, 3, 2], [35, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 4, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.square(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.pow(sigma, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09826971590518951, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 3, 2, 3, 8, 8, 2, 6, 9, 8, 8, 9], [1, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [88, 73, 66, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [34, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 10, 6, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.multiply(alpha, tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(beta, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, grad)))))), tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(alpha, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [244.28266502554075, 2.3760534729766745, 2.3314892822142683, 2.311826470757614, 2.3053483472382466, 2.303535979421714, 36591261601.730576, 2.3131946582426375], "accuracy": [0.09734513610601425, 0.09655263274908066, 0.09549596905708313, 0.09470347315073013, 0.09589222073554993, 0.09285431355237961, 0.09893012791872025, 0.09787346422672272], "val_loss": [2.056600570678711, 2.008052280970982, 1.984973634992327, 1.9765210832868303, 1.9742580822535925, 1.9737181663513184, 1.9862491062709264, 1.9773400851658411], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.10066666454076767, 0.09966666996479034, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 8, 2, 3, 3, 2, 8, 2, 6, 9, 4, 8, 9], [2, 2, 3, 4, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 26, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [6, 3, 8, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [0, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 20, 20, 12, 8, 3, 1, 1, 0, 1, 0, 4, 2, 2, 2], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.multiply(beta, tf.math.multiply(tf.math.add(tf.math.sqrt(tf.math.add(beta, beta)), tf.math.add(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.math.add(beta, grad), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.sqrt(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [36476666.15448389, 702210070.9422797, 3277301181.9289393, 8989602272.553692, 19362806718.402325, 35868075493.4228], "accuracy": [0.09932637959718704, 0.10355303436517715, 0.09853387624025345, 0.10170386731624603, 0.09576013684272766, 0.09787346422672272], "val_loss": [141105696.0, 1127751168.0, 3804934070.857143, 9017662902.857143, 17610963821.714287, 30429777920.0], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 3, 1, 3, 2, 8, 2, 6, 9, 6, 8, 9], [2, 2, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 26, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [6, 3, 8, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [2, 2, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, beta))", "other_info": {"loss": [2.302911224051584, 2.3023052034817666, 2.303107142873554, 2.302378201544513, 2.301919006825816, 2.303336065805284], "accuracy": [0.09126931428909302, 0.09602430462837219, 0.09074098616838455, 0.08809932321310043, 0.09232597798109055, 0.09259014576673508], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]