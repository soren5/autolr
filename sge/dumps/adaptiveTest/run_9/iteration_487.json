[{"genotype": [[0], [1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 6, 1, 4, 6, 0, 9, 9, 3, 3, 2, 4, 5, 4, 3, 8, 2, 0, 7, 2, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 0, 1, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 56, 16, 25, 98, 52, 94, 1, 97, 93, 55, 47, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8208571672439575, "mapping_values": [1, 7, 7, 3, 4, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.divide_no_nan(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, grad), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0468761920928955, 1.78783118724823, 1.243171215057373, 0.9510719180107117, 0.8252663612365723, 0.7663869261741638, 0.7237928509712219, 0.6883490681648254, 0.6477355360984802, 0.6532683968544006, 0.5806238055229187, 0.5948736071586609, 0.5770235657691956, 0.5371623635292053, 0.5614660978317261, 0.525201678276062, 0.506842851638794, 0.5115102529525757, 0.4806068539619446, 0.4909529387950897, 0.477363258600235, 0.4591216444969177, 0.4479365050792694, 0.4570399224758148, 0.42980384826660156, 0.42402535676956177, 0.4259251356124878, 0.406494677066803, 0.42825692892074585, 0.4196797013282776, 0.3953287899494171, 0.397490918636322, 0.387471079826355, 0.4107142388820648, 0.3705752491950989, 0.36407092213630676, 0.3779311776161194], "accuracy": [0.33707568049430847, 0.4029850661754608, 0.5440496802330017, 0.6441685557365417, 0.6901333928108215, 0.7162858247756958, 0.7327961921691895, 0.7440232634544373, 0.7536653280258179, 0.7549861073493958, 0.7878747582435608, 0.7836481332778931, 0.7844406366348267, 0.8026680946350098, 0.7909126877784729, 0.8034605979919434, 0.813498854637146, 0.8105930685997009, 0.8207634687423706, 0.8182538747787476, 0.8248580098152161, 0.83119797706604, 0.8347642421722412, 0.8383304476737976, 0.8424250483512878, 0.842028796672821, 0.8448025584220886, 0.8520671129226685, 0.8459912538528442, 0.8445383906364441, 0.8610487580299377, 0.8561616539955139, 0.8578787446022034, 0.8475762605667114, 0.8676528930664062, 0.8677849769592285, 0.8617091774940491], "val_loss": [1.517129898071289, 1.2408825159072876, 0.9340882301330566, 0.7782586812973022, 0.661923885345459, 0.6708756685256958, 0.6114199757575989, 0.5872238874435425, 0.6112317442893982, 0.5344637632369995, 0.5417701005935669, 0.518284261226654, 0.47606444358825684, 0.4745056927204132, 0.46457868814468384, 0.4822561740875244, 0.49316439032554626, 0.47292932868003845, 0.44828131794929504, 0.47205016016960144, 0.444703608751297, 0.42909571528434753, 0.4557112157344818, 0.3877260684967041, 0.4027336835861206, 0.3895376920700073, 0.3848910629749298, 0.4028891921043396, 0.43576303124427795, 0.41820141673088074, 0.38394853472709656, 0.36384496092796326, 0.3907579779624939, 0.38427960872650146, 0.38896602392196655, 0.36535245180130005, 0.3552359640598297], "val_accuracy": [0.492333322763443, 0.5306666493415833, 0.6386666893959045, 0.6830000281333923, 0.7403333187103271, 0.7356666922569275, 0.7580000162124634, 0.7586666941642761, 0.7426666617393494, 0.8033333420753479, 0.7929999828338623, 0.8109999895095825, 0.8163333535194397, 0.8193333148956299, 0.8116666674613953, 0.8180000185966492, 0.8029999732971191, 0.809333324432373, 0.8339999914169312, 0.8033333420753479, 0.8226666450500488, 0.8349999785423279, 0.8183333277702332, 0.8533333539962769, 0.8396666646003723, 0.8539999723434448, 0.8583333492279053, 0.8500000238418579, 0.8296666741371155, 0.8506666421890259, 0.8579999804496765, 0.8706666827201843, 0.856333315372467, 0.8579999804496765, 0.8533333539962769, 0.8679999709129333, 0.8629999756813049]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 6, 8, 5, 6, 0, 4, 9, 3, 3, 2, 4, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 2, 1, 0, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 40, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [1, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8202857375144958, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.046884775161743, 1.7861298322677612, 1.2499316930770874, 0.9626778960227966, 0.8290489315986633, 0.7595721483230591, 0.7242431640625, 0.6578203439712524, 0.6778056621551514, 0.6803969144821167, 0.6095197796821594, 0.5618204474449158, 0.5716521739959717, 0.5457074046134949, 0.5331048965454102, 0.5165822505950928, 0.5504170060157776, 0.5049138069152832, 0.4807093143463135, 0.4854746162891388, 0.4765312075614929, 0.46072739362716675, 0.44779565930366516, 0.4532600939273834], "accuracy": [0.33707568049430847, 0.4035134017467499, 0.5588429570198059, 0.6366398334503174, 0.6910579800605774, 0.7165499925613403, 0.7224937081336975, 0.7535332441329956, 0.7450799345970154, 0.7478536367416382, 0.7758552432060242, 0.793422281742096, 0.7849689722061157, 0.7961959838867188, 0.8037247657775879, 0.8117818236351013, 0.7926297783851624, 0.8113855719566345, 0.8212917447090149, 0.8228767514228821, 0.8284242749214172, 0.8304054737091064, 0.8356888294219971, 0.8368775844573975], "val_loss": [1.5175420045852661, 1.3027851581573486, 0.87872713804245, 0.8166857957839966, 0.7542163133621216, 0.6391002535820007, 0.6009151935577393, 0.5733678936958313, 0.5908703804016113, 0.5311846733093262, 0.5286001563072205, 0.5023835897445679, 0.49343645572662354, 0.464588463306427, 0.4694632589817047, 0.48945650458335876, 0.4929983615875244, 0.45320388674736023, 0.44424930214881897, 0.4894988536834717, 0.4545910954475403, 0.42134514451026917, 0.4218500852584839, 0.4224861264228821], "val_accuracy": [0.492333322763443, 0.5193333625793457, 0.6740000247955322, 0.6953333616256714, 0.6903333067893982, 0.7493333220481873, 0.7609999775886536, 0.7683333158493042, 0.7710000276565552, 0.796999990940094, 0.8053333163261414, 0.8046666383743286, 0.8143333196640015, 0.8289999961853027, 0.8136666417121887, 0.8003333210945129, 0.8043333292007446, 0.8243333101272583, 0.8383333086967468, 0.7946666479110718, 0.8149999976158142, 0.8370000123977661, 0.8326666951179504, 0.8376666903495789]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 6, 1, 3, 6, 0, 4, 9, 3, 3, 1, 4, 3, 4, 3, 4, 2, 1, 7, 5, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [10, 40, 16, 37, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8197143077850342, "mapping_values": [1, 48, 48, 28, 20, 12, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 53, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.divide_no_nan(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), grad), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.negative(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), alpha)), tf.math.add(alpha, tf.math.pow(grad, tf.math.multiply(tf.math.pow(tf.math.multiply(tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), tf.math.add(grad, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.square(grad))))), alpha))), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, grad)))))))), tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.046884536743164, 1.78688645362854, 1.2414357662200928, 0.9426249861717224, 0.8436217904090881, 0.7559495568275452, 0.7158269286155701, 0.6756707429885864, 0.657669186592102, 0.6375260353088379, 0.5915536880493164, 0.5836164951324463, 0.5813495516777039, 0.5345820784568787, 0.5339230895042419, 0.533288300037384, 0.5192448496818542, 0.4968302249908447, 0.4820566773414612, 0.48959723114967346, 0.4792621433734894, 0.4525271952152252, 0.4493583142757416, 0.44871002435684204, 0.4387851357460022, 0.4173257350921631, 0.45299649238586426, 0.4094904363155365, 0.41704219579696655, 0.4288611114025116, 0.4052087962627411], "accuracy": [0.33707568049430847, 0.4037775695323944, 0.5466912984848022, 0.6547351479530334, 0.6888125538825989, 0.718399167060852, 0.7305507659912109, 0.750231146812439, 0.7539294958114624, 0.7642319202423096, 0.7821952104568481, 0.7824593782424927, 0.7795535326004028, 0.804649293422699, 0.8000264167785645, 0.7993659973144531, 0.806630551815033, 0.8190463781356812, 0.8211596608161926, 0.8171972036361694, 0.8251221776008606, 0.8379341959953308, 0.8343679904937744, 0.8426892161369324, 0.8397833704948425, 0.8512746095657349, 0.8366134166717529, 0.8521991968154907, 0.8485008478164673, 0.8392550349235535, 0.857218325138092], "val_loss": [1.5175670385360718, 1.2582283020019531, 0.9972342252731323, 0.7899169325828552, 0.6750434637069702, 0.7218663692474365, 0.6289494037628174, 0.5668007135391235, 0.5491660237312317, 0.5484785437583923, 0.5380199551582336, 0.5827545523643494, 0.4874238967895508, 0.5193716287612915, 0.4573354423046112, 0.4826926290988922, 0.507438063621521, 0.48237863183021545, 0.4483618438243866, 0.48904114961624146, 0.44288235902786255, 0.41655346751213074, 0.4071536958217621, 0.40422573685646057, 0.40634286403656006, 0.38325390219688416, 0.40303194522857666, 0.38960370421409607, 0.46564656496047974, 0.43054524064064026, 0.3955570459365845], "val_accuracy": [0.492333322763443, 0.5346666574478149, 0.6506666541099548, 0.684333324432373, 0.7409999966621399, 0.7123333215713501, 0.7383333444595337, 0.7820000052452087, 0.7993333339691162, 0.7973333597183228, 0.777999997138977, 0.781000018119812, 0.8119999766349792, 0.7906666398048401, 0.812666654586792, 0.8113333582878113, 0.8003333210945129, 0.8029999732971191, 0.8343333601951599, 0.7956666946411133, 0.8296666741371155, 0.8396666646003723, 0.8403333425521851, 0.8443333506584167, 0.8399999737739563, 0.8543333411216736, 0.8513333201408386, 0.8533333539962769, 0.8293333053588867, 0.8379999995231628, 0.8503333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 2, 8, 3, 6, 0, 4, 9, 3, 3, 2, 4, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 2, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [53, 40, 16, 37, 98, 52, 94, 1, 97, 93, 55, 76, 16], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [1, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8191428780555725, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0469231605529785, 1.786860704421997, 1.3493250608444214, 1.0270750522613525, 0.8334605693817139, 0.7616128921508789, 0.7192690372467041, 0.6927839517593384, 0.6373555660247803, 0.6444423198699951, 0.5992931723594666, 0.5606856942176819, 0.557876467704773, 0.5381374359130859, 0.5553691983222961, 0.536017656326294, 0.5199787616729736, 0.500414252281189, 0.47784188389778137, 0.4890846908092499, 0.4744220972061157, 0.455495685338974, 0.45279231667518616, 0.45071205496788025, 0.4425205886363983, 0.4196968376636505, 0.44365695118904114, 0.40984436869621277, 0.4052414298057556, 0.431292861700058, 0.3957316279411316, 0.3904697000980377, 0.3870924711227417, 0.39865928888320923, 0.37722477316856384, 0.36068758368492126, 0.3799556791782379, 0.3534930348396301, 0.3490162193775177, 0.34136420488357544, 0.34572920203208923], "accuracy": [0.3369435966014862, 0.4035134017467499, 0.5243692994117737, 0.6247523427009583, 0.6893408894538879, 0.713908314704895, 0.7317395210266113, 0.7416457533836365, 0.76542067527771, 0.7609298825263977, 0.7790252566337585, 0.7913089394569397, 0.7868181467056274, 0.8001585006713867, 0.7979130744934082, 0.8049134612083435, 0.8061022162437439, 0.8164047002792358, 0.8228767514228821, 0.8216879963874817, 0.828292191028595, 0.8341038227081299, 0.8356888294219971, 0.8391229510307312, 0.8389908671379089, 0.8499537706375122, 0.8368775844573975, 0.8499537706375122, 0.8536521196365356, 0.8372738361358643, 0.8599920868873596, 0.8578787446022034, 0.8609166741371155, 0.8494254350662231, 0.8626337051391602, 0.8688416481018066, 0.8603883385658264, 0.8693699836730957, 0.871879518032074, 0.8741249442100525, 0.8770307898521423], "val_loss": [1.5167887210845947, 1.2458689212799072, 1.2776449918746948, 0.742367684841156, 0.6870427131652832, 0.6828769445419312, 0.6173568367958069, 0.5684536695480347, 0.5651884078979492, 0.5350242257118225, 0.5305876731872559, 0.5085375308990479, 0.47906559705734253, 0.46661368012428284, 0.4912125766277313, 0.502396821975708, 0.493464857339859, 0.4728894531726837, 0.44373995065689087, 0.4674001932144165, 0.4514188766479492, 0.4212511479854584, 0.41709673404693604, 0.4088194668292999, 0.40395915508270264, 0.400515615940094, 0.3938778340816498, 0.3881557881832123, 0.46086522936820984, 0.4114012122154236, 0.406245619058609, 0.3777512311935425, 0.3765283226966858, 0.37659674882888794, 0.37536290287971497, 0.36412495374679565, 0.3610200881958008, 0.4148799180984497, 0.3541536033153534, 0.35843411087989807, 0.3810439109802246], "val_accuracy": [0.492333322763443, 0.5293333530426025, 0.5569999814033508, 0.7113333344459534, 0.7233333587646484, 0.7269999980926514, 0.7536666393280029, 0.7829999923706055, 0.7906666398048401, 0.7960000038146973, 0.8080000281333923, 0.8006666898727417, 0.8183333277702332, 0.8259999752044678, 0.7986666560173035, 0.8013333082199097, 0.8066666722297668, 0.8103333115577698, 0.8403333425521851, 0.8076666593551636, 0.8240000009536743, 0.8360000252723694, 0.8346666693687439, 0.846666693687439, 0.8413333296775818, 0.8420000076293945, 0.8606666922569275, 0.8566666841506958, 0.8323333263397217, 0.8496666550636292, 0.8399999737739563, 0.8686666488647461, 0.8610000014305115, 0.8600000143051147, 0.8629999756813049, 0.871666669845581, 0.8640000224113464, 0.847000002861023, 0.8696666955947876, 0.8696666955947876, 0.859333336353302]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 9, 1, 3, 6, 0, 4, 9, 9, 3, 2, 4, 6, 4, 3, 4, 5, 1, 7, 5, 7, 1, 2, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 2, 1, 0, 2, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 2, 0, 2, 0, 3], [85, 40, 16, 25, 98, 52, 94, 1, 61, 93, 55, 76, 16], [1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8162857294082642, "mapping_values": [1, 3, 3, 2, 1, 2, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.046879291534424, 1.7880369424819946, 1.2458007335662842, 0.947903573513031, 0.8464162945747375, 0.7538424134254456, 0.7364516258239746, 0.6825133562088013, 0.650219738483429, 0.6514813303947449, 0.6065303087234497, 0.5596733689308167, 0.5741237998008728, 0.5431957840919495, 0.5566460490226746, 0.5247821807861328, 0.5329726934432983, 0.4926997721195221, 0.48036664724349976, 0.48780557513237, 0.4798465371131897, 0.4547521471977234, 0.4505344331264496, 0.4529179036617279, 0.44737741351127625, 0.42022383213043213, 0.4443606436252594, 0.4059782028198242, 0.40953829884529114, 0.39565742015838623, 0.41996634006500244, 0.395479679107666, 0.391615092754364, 0.40678107738494873, 0.3769431710243225, 0.35834574699401855, 0.3690015375614166], "accuracy": [0.33707568049430847, 0.402588814496994, 0.5443138480186462, 0.6530181169509888, 0.6869634389877319, 0.7186633348464966, 0.7201162576675415, 0.7413815855979919, 0.7537974119186401, 0.7536653280258179, 0.7798177003860474, 0.7906485199928284, 0.783119797706604, 0.7954035401344299, 0.7915731072425842, 0.8031964302062988, 0.8041210174560547, 0.8191784620285034, 0.8227446675300598, 0.8193105459213257, 0.8241975903511047, 0.8327829837799072, 0.8343679904937744, 0.8387266993522644, 0.8408400416374207, 0.8477083444595337, 0.8334434032440186, 0.8507462739944458, 0.8551049828529358, 0.8545766472816467, 0.8488970994949341, 0.8562937378883362, 0.8569541573524475, 0.8485008478164673, 0.8617091774940491, 0.8710870146751404, 0.8647470474243164], "val_loss": [1.5175164937973022, 1.266803503036499, 1.0128847360610962, 0.7842852473258972, 0.7084903717041016, 0.6939244866371155, 0.6005034446716309, 0.5683979392051697, 0.6495897173881531, 0.5309228301048279, 0.5208499431610107, 0.5283893346786499, 0.49025699496269226, 0.46920010447502136, 0.4525299370288849, 0.4719397723674774, 0.48820486664772034, 0.45611825585365295, 0.4477349519729614, 0.4831293821334839, 0.44322437047958374, 0.4193062484264374, 0.4154279828071594, 0.4228519797325134, 0.40463846921920776, 0.42053133249282837, 0.3956737816333771, 0.3944905996322632, 0.41436994075775146, 0.4569825828075409, 0.39168640971183777, 0.3670157194137573, 0.3786173462867737, 0.38789698481559753, 0.3804047703742981, 0.3660446107387543, 0.3527655303478241], "val_accuracy": [0.492000013589859, 0.528333306312561, 0.6520000100135803, 0.690666675567627, 0.7243333458900452, 0.7256666421890259, 0.765999972820282, 0.7716666460037231, 0.7306666374206543, 0.7993333339691162, 0.8043333292007446, 0.7910000085830688, 0.8149999976158142, 0.8266666531562805, 0.8223333358764648, 0.8230000138282776, 0.8069999814033508, 0.8176666498184204, 0.8379999995231628, 0.7993333339691162, 0.8240000009536743, 0.8399999737739563, 0.8333333134651184, 0.8326666951179504, 0.8413333296775818, 0.8316666483879089, 0.8556666374206543, 0.8510000109672546, 0.8479999899864197, 0.8270000219345093, 0.8510000109672546, 0.8740000128746033, 0.8603333234786987, 0.8516666889190674, 0.8603333234786987, 0.8663333058357239, 0.8706666827201843]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 1, 1, 3, 6, 0, 4, 3, 3, 3, 1, 4, 3, 2, 3, 4, 2, 1, 7, 5, 7, 8, 1, 2, 5, 8, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 0, 2, 2, 0, 1, 2, 2, 2, 2, 2, 0, 0, 0, 0, 1, 2, 2, 0, 0, 2, 3], [10, 40, 16, 37, 98, 52, 94, 1, 97, 24, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [24, 57, 40, 62]], "fitness": -0.7605714201927185, "mapping_values": [1, 46, 46, 24, 22, 9, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.subtract(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.multiply(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), grad), tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.negative(tf.math.pow(tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(alpha, grad)), tf.math.add(alpha, tf.math.subtract(grad, tf.math.pow(tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, grad))), tf.math.pow(grad, tf.math.add(tf.math.add(alpha, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, alpha)))))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, grad)), grad))), tf.math.subtract(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), grad)))), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2964112758636475, 2.287322521209717, 2.274009943008423, 2.2610702514648438, 2.2465193271636963, 2.234375238418579, 2.215254545211792, 2.1983227729797363, 2.1751797199249268, 2.152014970779419, 2.1222472190856934, 2.0870814323425293, 2.051649808883667, 2.006303310394287, 1.9607598781585693, 1.9029921293258667, 1.8540798425674438, 1.788510799407959, 1.7316628694534302, 1.6665817499160767, 1.6140059232711792, 1.5483100414276123, 1.4887981414794922, 1.4541640281677246, 1.4094829559326172, 1.353989839553833, 1.3263630867004395, 1.2966443300247192, 1.2615751028060913, 1.2346889972686768, 1.205308198928833, 1.185925841331482, 1.164857268333435, 1.1417979001998901, 1.1224944591522217, 1.096131443977356, 1.0781502723693848, 1.0675069093704224, 1.0455608367919922, 1.043774127960205, 1.0277172327041626, 1.0110780000686646, 1.0100064277648926, 0.9894211888313293, 0.9870970845222473, 0.9764201045036316, 0.9684188961982727, 0.9438673853874207, 0.9450607895851135, 0.9459317922592163, 0.9256333112716675, 0.9387621879577637, 0.9275442361831665, 0.9047110080718994, 0.9055402278900146, 0.8888130784034729, 0.8813090324401855, 0.892634391784668, 0.8849605917930603, 0.8778493404388428, 0.8707190155982971, 0.8604600429534912, 0.8626673817634583, 0.8570020794868469, 0.8626207709312439, 0.8383970856666565, 0.8436805009841919, 0.8442742824554443, 0.8249537944793701, 0.8326372504234314, 0.8302452564239502, 0.8171796798706055, 0.8213516473770142, 0.8077972531318665, 0.8040671348571777, 0.8158054351806641, 0.8065205216407776, 0.8078912496566772, 0.801331102848053, 0.7941840291023254, 0.7880536913871765, 0.7832702398300171, 0.7834059000015259, 0.7825468182563782, 0.7780359387397766, 0.7762078642845154, 0.7852057814598083, 0.7760419845581055, 0.7606574892997742, 0.7687076926231384, 0.7675157189369202, 0.7716403603553772, 0.7688385248184204, 0.7631583213806152, 0.7527769804000854, 0.7595759034156799, 0.7549225687980652, 0.7633450627326965, 0.7594359517097473, 0.7492807507514954], "accuracy": [0.09893012791872025, 0.12310130894184113, 0.16853784024715424, 0.20340773463249207, 0.2308809906244278, 0.2538634240627289, 0.2879408299922943, 0.30022454261779785, 0.33007529377937317, 0.3459252417087555, 0.3675868511199951, 0.38528597354888916, 0.39730551838874817, 0.41368380188941956, 0.4255712628364563, 0.44591203331947327, 0.4465724527835846, 0.4632149040699005, 0.4707436263561249, 0.48910316824913025, 0.49649980664253235, 0.5134063959121704, 0.5301809310913086, 0.5275393128395081, 0.5366530418395996, 0.557390034198761, 0.5630695819854736, 0.5659754276275635, 0.5736362338066101, 0.5799762010574341, 0.5848633050918579, 0.5910711884498596, 0.5933166146278381, 0.600581169128418, 0.6057323813438416, 0.6198652982711792, 0.628582775592804, 0.6306960582733154, 0.6336019039154053, 0.6370360851287842, 0.6435081362724304, 0.64667809009552, 0.6465460062026978, 0.655527651309967, 0.6528860330581665, 0.6580372452735901, 0.6539427042007446, 0.6631884574890137, 0.668339729309082, 0.6627922058105469, 0.6732267737388611, 0.6691322326660156, 0.6674151420593262, 0.6803592443466187, 0.678642213344574, 0.6848500967025757, 0.6913221478462219, 0.6833971738815308, 0.683529257774353, 0.6888125538825989, 0.6901333928108215, 0.6985867023468018, 0.6866992712020874, 0.6915863156318665, 0.6936996579170227, 0.6976621150970459, 0.6977941989898682, 0.6985867023468018, 0.71100252866745, 0.7020208835601807, 0.7030775547027588, 0.7045304179191589, 0.7014925479888916, 0.7059833407402039, 0.7103421092033386, 0.7086250185966492, 0.7099458575248718, 0.7112666964530945, 0.7113987803459167, 0.7152291536331177, 0.7193237543106079, 0.7170783281326294, 0.7202483415603638, 0.7149649858474731, 0.7187954187393188, 0.7201162576675415, 0.713908314704895, 0.7156254053115845, 0.7275128960609436, 0.7210407853126526, 0.7182670831680298, 0.7248712182044983, 0.7232862114906311, 0.7246070504188538, 0.7265883088111877, 0.7275128960609436, 0.7255316376686096, 0.7226257920265198, 0.7232862114906311, 0.7292299270629883], "val_loss": [2.2869255542755127, 2.274193048477173, 2.261000633239746, 2.2469401359558105, 2.231485605239868, 2.214195966720581, 2.1945598125457764, 2.1721911430358887, 2.146045684814453, 2.116079330444336, 2.0815176963806152, 2.0415291786193848, 1.9967522621154785, 1.9458109140396118, 1.8889994621276855, 1.8260009288787842, 1.759921908378601, 1.6895413398742676, 1.6188666820526123, 1.5472443103790283, 1.4784384965896606, 1.4125233888626099, 1.3505160808563232, 1.294453501701355, 1.2431408166885376, 1.1959978342056274, 1.15407395362854, 1.1173489093780518, 1.084744930267334, 1.0538820028305054, 1.0263164043426514, 1.0015522241592407, 0.9781819581985474, 0.9581908583641052, 0.9396317005157471, 0.9216268062591553, 0.9051814079284668, 0.891092836856842, 0.8769353032112122, 0.8660762310028076, 0.8535020351409912, 0.8435332179069519, 0.8348475694656372, 0.8247165679931641, 0.8162736296653748, 0.8084294199943542, 0.8026646971702576, 0.7941360473632812, 0.7866227030754089, 0.7808071374893188, 0.7737950682640076, 0.7690226435661316, 0.7638821601867676, 0.7573511600494385, 0.7520462274551392, 0.746990978717804, 0.7415722608566284, 0.7384240031242371, 0.7346725463867188, 0.7303136587142944, 0.7251837849617004, 0.7210384011268616, 0.7180026173591614, 0.7143964171409607, 0.7109202742576599, 0.7064287066459656, 0.7025116086006165, 0.7002970576286316, 0.6952781677246094, 0.6923906207084656, 0.6898204684257507, 0.6864081025123596, 0.6842443943023682, 0.6817784905433655, 0.679444432258606, 0.6769781112670898, 0.6749981641769409, 0.6743937730789185, 0.6697930693626404, 0.6679932475090027, 0.664519190788269, 0.6625117063522339, 0.6589998602867126, 0.6582224369049072, 0.6553239822387695, 0.6535214781761169, 0.6520493626594543, 0.6513344049453735, 0.6479015946388245, 0.6454559564590454, 0.6433702111244202, 0.641964852809906, 0.6407396197319031, 0.6386673450469971, 0.6364957690238953, 0.6331834197044373, 0.6323641538619995, 0.63177490234375, 0.6299895644187927, 0.627160906791687], "val_accuracy": [0.1276666671037674, 0.24300000071525574, 0.3233333230018616, 0.3569999933242798, 0.3763333261013031, 0.3933333456516266, 0.414000004529953, 0.4333333373069763, 0.45533332228660583, 0.4723333418369293, 0.4893333315849304, 0.5076666474342346, 0.5226666927337646, 0.5299999713897705, 0.5423333048820496, 0.5476666688919067, 0.5596666932106018, 0.5709999799728394, 0.5796666741371155, 0.5879999995231628, 0.6003333330154419, 0.6116666793823242, 0.6196666955947876, 0.6336666941642761, 0.6483333110809326, 0.6583333611488342, 0.6666666865348816, 0.6666666865348816, 0.6740000247955322, 0.6773333549499512, 0.6836666464805603, 0.687666654586792, 0.6936666369438171, 0.6926666498184204, 0.6953333616256714, 0.7016666531562805, 0.7009999752044678, 0.70333331823349, 0.7056666612625122, 0.7066666483879089, 0.7083333134651184, 0.7080000042915344, 0.7106666564941406, 0.7110000252723694, 0.7113333344459534, 0.7183333039283752, 0.7123333215713501, 0.715666651725769, 0.7236666679382324, 0.7223333120346069, 0.7210000157356262, 0.7213333249092102, 0.7256666421890259, 0.7269999980926514, 0.7293333411216736, 0.7306666374206543, 0.7336666584014893, 0.7326666712760925, 0.737666666507721, 0.7366666793823242, 0.7403333187103271, 0.7369999885559082, 0.7416666746139526, 0.7436666488647461, 0.7416666746139526, 0.7436666488647461, 0.7456666827201843, 0.746666669845581, 0.7463333606719971, 0.7480000257492065, 0.7480000257492065, 0.7519999742507935, 0.7523333430290222, 0.7509999871253967, 0.753333330154419, 0.7549999952316284, 0.7536666393280029, 0.7513333559036255, 0.7573333382606506, 0.7519999742507935, 0.7556666731834412, 0.7566666603088379, 0.7586666941642761, 0.7596666812896729, 0.7603333592414856, 0.7586666941642761, 0.7590000033378601, 0.7603333592414856, 0.7620000243186951, 0.7596666812896729, 0.7609999775886536, 0.7620000243186951, 0.7609999775886536, 0.762333333492279, 0.762333333492279, 0.765333354473114, 0.7620000243186951, 0.7639999985694885, 0.765333354473114, 0.7663333415985107]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 2, 8, 3, 8, 0, 4, 3, 3, 3, 2, 4, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 1, 0, 0, 2, 2, 2, 1, 0, 2, 2, 3], [10, 40, 16, 37, 98, 52, 94, 1, 97, 93, 55, 76, 16], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.3751428425312042, "mapping_values": [1, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.negative(grad)))))), grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2742130756378174, 2.136382818222046, 1.9824503660202026, 8.00989055633545, 2.7591118812561035, 2.4416117668151855, 2.4392545223236084, 2.399869680404663], "accuracy": [0.2938845455646515, 0.3151499032974243, 0.33060362935066223, 0.21925769746303558, 0.09906221181154251, 0.10130762308835983, 0.09866596013307571, 0.09959053993225098], "val_loss": [2.256279468536377, 1.7470407485961914, 1.976194143295288, 2.804702043533325, 2.4370124340057373, 2.3631865978240967, 2.4991047382354736, 2.350836992263794], "val_accuracy": [0.19599999487400055, 0.3790000081062317, 0.43299999833106995, 0.09933333098888397, 0.09933333098888397, 0.09866666793823242, 0.10133333504199982, 0.09733333438634872]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [4, 2, 1, 3, 6, 0, 4, 9, 3, 3, 2, 4, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 2, 0, 0, 2, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [53, 35, 16, 37, 98, 52, 94, 1, 97, 93, 55, 76, 16], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [9, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [0, 57, 40, 62]], "fitness": -0.1128571406006813, "mapping_values": [1, 9, 9, 4, 5, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.math.add(tf.math.add(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), grad), tf.math.subtract(tf.math.add(alpha, tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.300628423690796, 2.301987648010254, 2.302536725997925, 2.3025853633880615, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09734513610601425, 0.10236428678035736, 0.1002509593963623, 0.10011887550354004, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.301487684249878, 2.3025546073913574, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09833333641290665, 0.10700000077486038, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 2, 8, 3, 6, 5, 4, 9, 2, 3, 2, 4, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 2, 2, 0, 2, 0, 2, 1, 0, 2, 2, 0, 0, 2, 0, 0, 2, 1, 0, 2, 2, 3], [85, 40, 1, 25, 98, 52, 94, 1, 3, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 32, 32, 18, 14, 7, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.sqrt(tf.math.multiply(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.square(tf.math.pow(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(grad, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(grad, tf.math.multiply(tf.math.pow(tf.math.multiply(tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))), grad), grad), tf.math.square(tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09536388516426086, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 6, 8, 8, 6, 0, 4, 9, 3, 3, 2, 2, 3, 4, 0, 4, 5, 1, 7, 5, 7, 1, 2, 2, 8, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 0, 2, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 40, 16, 25, 98, 52, 94, 1, 49, 93, 55, 73, 16], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [0, 0, 6], [24, 44], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [0, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 1, 8, 4, 4, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.divide_no_nan(grad, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))))), grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))), beta))", "other_info": {"loss": [2.3032238483428955, 2.3355627059936523, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08545766770839691, 0.07555144280195236, 0.09457138925790787, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3080999851226807, 2.3969085216522217, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.02500000037252903, 0.09733333438634872, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 2, 8, 3, 6, 0, 4, 9, 3, 3, 2, 4, 3, 4, 3, 4, 5, 1, 8, 5, 7, 1, 1, 4, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 2, 2, 0, 0, 2, 2, 1, 0, 2, 1, 0, 0, 0, 0, 1, 2, 1, 0, 2, 2, 3], [85, 51, 16, 79, 98, 52, 94, 1, 97, 93, 55, 76, 16], [1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [1, 0, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [7, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 1, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 4, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), grad), tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(grad, tf.math.add(alpha, tf.math.divide_no_nan(tf.math.negative(tf.math.pow(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), grad)), grad))))))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, alpha), tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09536388516426086, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 2, 0, 4, 6, 0, 4, 9, 3, 3, 2, 4, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 2, 2, 0, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 40, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 9, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0750231146812439, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [7, 0, 2, 2, 0, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [47, 40, 97, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 8, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 51, 51, 31, 20, 13, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 50, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.negative(tf.math.add(tf.math.add(tf.math.negative(tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(grad, tf.math.pow(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.multiply(alpha, tf.math.pow(tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, grad)), tf.math.subtract(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad)))), tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32))), grad))))))), alpha), tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0750231146812439, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 6, 8, 3, 8, 0, 4, 9, 3, 0, 1, 4, 3, 3, 3, 4, 2, 1, 1, 5, 7, 8, 1, 2, 5, 4, 6, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 0, 2, 2, 0, 2, 2, 2, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [10, 40, 16, 37, 98, 52, 94, 1, 97, 93, 55, 70, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [9, 3, 2, 4, 2, 1, 2, 3], [2, 1, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302675724029541, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09536388516426086, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 6, 1, 3, 8, 3, 4, 9, 3, 3, 1, 5, 0, 4, 3, 4, 2, 1, 7, 5, 7, 8, 1, 2, 5, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 2, 2, 0, 0, 0, 2, 1, 0, 2, 2, 0, 2, 0, 2, 0, 1, 1, 0, 2, 2, 3], [47, 40, 97, 25, 98, 52, 94, 28, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 5, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [71, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 26, 26, 15, 11, 6, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.divide_no_nan(tf.math.subtract(tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), grad), tf.math.add(alpha, tf.math.multiply(grad, tf.math.pow(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))))), tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.square(grad)))), tf.math.negative(tf.math.pow(alpha, tf.math.add(alpha, tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), grad)))))), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(beta))", "other_info": {"loss": [2.3017349243164062, 2.306122303009033, 2.3066794872283936, 2.308323860168457, 2.309110164642334, 2.3165597915649414, 2.315746784210205, 2.3238561153411865, 2.328474521636963, 2.3409249782562256, 2.363250494003296, 10175609.0, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08836349099874496, 0.08228767663240433, 0.08875974267721176, 0.08466517180204391, 0.080042265355587, 0.07924976944923401, 0.07660810649394989, 0.0750231146812439, 0.07647603005170822, 0.0754193663597107, 0.07568352669477463, 0.09311848133802414, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.30129075050354, 2.3031320571899414, 2.305018424987793, 2.307199478149414, 2.3097147941589355, 2.313082695007324, 2.3160958290100098, 2.320706844329834, 2.3270041942596436, 2.3396968841552734, 2.3751819133758545, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03766666725277901, 0.03099999949336052, 0.029666665941476822, 0.030666666105389595, 0.033666666597127914, 0.03866666555404663, 0.05000000074505806, 0.05966666713356972, 0.0716666653752327, 0.09233333170413971, 0.09733333438634872, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1], [0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 4, 1, 3, 6, 0, 4, 9, 3, 3, 3, 9, 3, 4, 3, 4, 9, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 0, 2, 1, 0, 1, 2, 2, 0, 2, 0, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [54, 40, 16, 37, 98, 52, 94, 1, 97, 93, 55, 76, 16], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [65, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 8, 4, 4, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(grad, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.math.add(tf.math.pow(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1784440577030182, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 6, 8, 2, 9, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 2, 2, 0, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 40, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 8, 4, 4, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.math.add(tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), beta)))", "other_info": {"loss": [50.18182373046875, 1.7699941619911885e+17, 2.303788900375366, 2.303340435028076, 2.3030803203582764, 2.3028829097747803], "accuracy": [0.21754062175750732, 0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.2685304793430753e+18, 2.304196357727051, 2.3033578395843506, 2.303008556365967, 2.302858352661133, 2.3027408123016357], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 2, 8, 0, 6, 0, 4, 2, 3, 3, 4, 4, 2, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 0, 6, 4, 9, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 0, 2, 1, 0, 1, 2, 2, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 2, 2, 2, 3], [85, 40, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.07314285635948181, "mapping_values": [1, 7, 7, 4, 3, 2, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.negative(tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))), grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.301168918609619, 2.3033883571624756, 2.3018851280212402, 2.301295280456543, 2.2997212409973145, 2.30256986618042, 2.3000128269195557, 2.301201581954956, 2.300330877304077, 2.301405191421509, 2.3004989624023438, 2.3000361919403076, 2.301389694213867, 2.30033802986145, 2.301276206970215, 2.3007547855377197, 2.3004000186920166, 2.3008954524993896, 2.300828218460083, 2.299983024597168, 2.300812244415283, 2.299494981765747, 2.2994437217712402, 2.2997841835021973, 2.3006982803344727, 2.298985004425049, 2.300300359725952, 2.3003005981445312, 2.299499273300171, 2.299844980239868, 2.2993998527526855, 2.2996063232421875, 2.3004469871520996, 2.300635576248169, 2.3010802268981934], "accuracy": [0.08968432247638702, 0.08770307898521423, 0.09747721254825592, 0.09549596905708313, 0.09642054885625839, 0.09153348207473755, 0.09826971590518951, 0.09285431355237961, 0.08942015469074249, 0.09642054885625839, 0.09959053993225098, 0.0956280529499054, 0.09496764093637466, 0.09417514503002167, 0.09721305221319199, 0.0944393053650856, 0.09760929644107819, 0.09642054885625839, 0.0956280529499054, 0.0948355570435524, 0.09721305221319199, 0.09747721254825592, 0.1014397069811821, 0.0936468094587326, 0.10038304328918457, 0.09681680053472519, 0.09800554811954498, 0.10328886657953262, 0.09681680053472519, 0.09576013684272766, 0.09985470771789551, 0.09893012791872025, 0.10157178342342377, 0.09589222073554993, 0.09100515395402908], "val_loss": [2.299597978591919, 2.2992284297943115, 2.298973321914673, 2.298794984817505, 2.2986719608306885, 2.2984797954559326, 2.298424243927002, 2.2983689308166504, 2.2983779907226562, 2.2983601093292236, 2.2983710765838623, 2.298448324203491, 2.298374652862549, 2.2984635829925537, 2.298492670059204, 2.2984848022460938, 2.298473596572876, 2.298389434814453, 2.2982840538024902, 2.298161268234253, 2.298064947128296, 2.2980148792266846, 2.2979743480682373, 2.297952890396118, 2.297900676727295, 2.2979702949523926, 2.2979562282562256, 2.297990322113037, 2.2980613708496094, 2.298123836517334, 2.2981746196746826, 2.2982945442199707, 2.298401355743408, 2.2985427379608154, 2.2986679077148438], "val_accuracy": [0.04633333161473274, 0.04899999871850014, 0.04933333396911621, 0.05233333259820938, 0.05533333495259285, 0.0560000017285347, 0.0573333315551281, 0.05833333358168602, 0.05966666713356972, 0.05966666713356972, 0.060333333909511566, 0.060333333909511566, 0.06400000303983688, 0.06533333659172058, 0.06700000166893005, 0.07100000232458115, 0.07100000232458115, 0.07100000232458115, 0.07233333587646484, 0.07466666400432587, 0.07633333653211594, 0.07900000363588333, 0.07966666668653488, 0.08133333176374435, 0.08299999684095383, 0.08266666531562805, 0.0833333358168602, 0.08299999684095383, 0.08366666734218597, 0.08533333241939545, 0.08433333039283752, 0.0833333358168602, 0.08033332973718643, 0.07800000160932541, 0.07666666805744171]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 6, 8, 2, 9, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 2, 2, 0, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [44, 40, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.04085714370012283, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.301302909851074, 2.303957939147949, 2.3027455806732178, 2.302347421646118, 2.3008971214294434, 2.3041892051696777], "accuracy": [0.08928807079792023, 0.08545766770839691, 0.09496764093637466, 0.09325055778026581, 0.09219389408826828, 0.08849557489156723], "val_loss": [2.299954414367676, 2.299954414367676, 2.299954414367676, 2.299954414367676, 2.299954414367676, 2.299954414367676], "val_accuracy": [0.04466666653752327, 0.04466666653752327, 0.04466666653752327, 0.04466666653752327, 0.04466666653752327, 0.04466666653752327]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [3, 6, 1, 3, 6, 9, 2, 9, 3, 3, 1, 9, 3, 4, 3, 4, 2, 1, 8, 5, 7, 8, 1, 3, 4, 4, 8, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 0, 2, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 0, 0, 2, 2, 1, 0, 2, 2, 3], [10, 40, 16, 37, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [1, 2, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.03885714337229729, "mapping_values": [1, 19, 19, 12, 7, 6, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.subtract(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), grad)), tf.math.multiply(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), alpha)), tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))), grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, beta))", "other_info": {"loss": [2.3014278411865234, 2.3044979572296143, 2.303624153137207, 2.303537368774414, 2.302482843399048, 2.30631160736084], "accuracy": [0.08928807079792023, 0.08387266844511032, 0.09166556596755981, 0.08994849026203156, 0.08902391046285629, 0.08730682730674744], "val_loss": [2.3003365993499756, 2.3007421493530273, 2.301109790802002, 2.301483631134033, 2.3018739223480225, 2.3023433685302734], "val_accuracy": [0.0416666679084301, 0.039000000804662704, 0.03766666725277901, 0.03633333370089531, 0.036666665226221085, 0.033666666597127914]}}]