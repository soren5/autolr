[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 6, 3, 2, 7, 5, 1, 8, 6, 5, 8, 9], [3, 3, 5, 1, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 0, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.840571403503418, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 0, 3, 3, 1, 2, 1, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(grad, grad)))), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.130202258094553, 1.7709842526350574, 1.443393264338325, 1.0873341010215496, 0.8868278451583735, 0.8419950036812988, 0.7549448720830354, 0.6910358596203933, 0.6888537985647769, 0.658421980974114, 0.6308039319734091, 0.5982903013328882, 0.6030748028718028, 0.5591616078910102, 0.5471815534665238, 0.5395398571774346, 0.5347920357511815, 0.5180288472424063, 0.4958951754883973, 0.5020241217252018, 0.4959188121389546, 0.5013139426763331, 0.4636602502977056, 0.47111387692343654, 0.4293343200305387, 0.44814649933616735, 0.4211239906121648, 0.43566414969724165, 0.4067727771606491, 0.4153282602488987, 0.40051235799240853, 0.4050893695827457, 0.37685124079123966, 0.39528754621197, 0.36587438947016676, 0.35417045927035135, 0.37903704006028544, 0.354791510370445, 0.34864381651254206, 0.3629639926698025, 0.33561060382485025, 0.3506040986282415, 0.3419595826823147], "accuracy": [0.26218464970588684, 0.4410249590873718, 0.49768856167793274, 0.6067890524864197, 0.672698438167572, 0.6896050572395325, 0.7137762308120728, 0.7359662055969238, 0.7341170310974121, 0.7511557340621948, 0.7578919529914856, 0.7749306559562683, 0.7732135653495789, 0.7901201844215393, 0.7913089394569397, 0.8039889335632324, 0.7992339134216309, 0.8000264167785645, 0.8165367841720581, 0.8109893202781677, 0.8150838613510132, 0.8103289008140564, 0.828820526599884, 0.8208954930305481, 0.8407079577445984, 0.8368775844573975, 0.847840428352356, 0.8392550349235535, 0.8515387773513794, 0.8461233377456665, 0.8519350290298462, 0.8485008478164673, 0.8582749962806702, 0.8514066934585571, 0.8640866279602051, 0.8683133125305176, 0.8555012345314026, 0.8697662353515625, 0.8725399374961853, 0.8627657890319824, 0.8776912093162537, 0.8728041052818298, 0.8721436858177185], "val_loss": [1.4834025246756417, 1.2718722139086043, 0.7892337015696934, 0.8179888554981777, 0.6568242141178676, 0.5614592177527291, 0.5876382078443255, 0.596242002078465, 0.5615063054221017, 0.5615732158933368, 0.47931550230298725, 0.459979738507952, 0.450208272252764, 0.47584242480141775, 0.42766672372817993, 0.4971202952521188, 0.4113613452230181, 0.4204629063606262, 0.4411094529288156, 0.3967072878565107, 0.4412815741130284, 0.41655448504856657, 0.4651705878121512, 0.3882400819233486, 0.38726247208459036, 0.40847441979816984, 0.371618458202907, 0.3556474191801889, 0.38171214716775076, 0.3562071663992746, 0.39033191544669016, 0.3514559864997864, 0.35023765904562815, 0.3581330009869167, 0.3426832897322519, 0.43011283023016794, 0.3513837456703186, 0.3309885859489441, 0.36284707273755756, 0.3548805458205087, 0.36388301849365234, 0.3706915719168527, 0.36106427226747784], "val_accuracy": [0.4300000071525574, 0.47566667199134827, 0.6366666555404663, 0.6493333578109741, 0.7059999704360962, 0.7519999742507935, 0.7350000143051147, 0.734666645526886, 0.7356666922569275, 0.7513333559036255, 0.781000018119812, 0.7923333048820496, 0.796999990940094, 0.7860000133514404, 0.809333324432373, 0.781333327293396, 0.815666675567627, 0.8226666450500488, 0.7946666479110718, 0.824999988079071, 0.7933333516120911, 0.8163333535194397, 0.7836666703224182, 0.8273333311080933, 0.8423333168029785, 0.8240000009536743, 0.8373333215713501, 0.8460000157356262, 0.8293333053588867, 0.8463333249092102, 0.8273333311080933, 0.847000002861023, 0.8453333377838135, 0.8413333296775818, 0.8553333282470703, 0.8069999814033508, 0.8526666760444641, 0.8573333621025085, 0.8486666679382324, 0.8413333296775818, 0.8423333168029785, 0.8363333344459534, 0.8519999980926514]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 6, 3, 4, 7, 5, 6, 8, 6, 5, 8, 9], [1, 3, 3, 5, 0, 2, 2, 4, 2, 0], [80, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.8374285697937012, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(beta, grad))))), tf.math.add(beta, grad)), tf.math.add(beta, grad))), tf.math.sqrt(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))), beta)), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1300252320948783, 1.8050949748134602, 1.485546963215819, 1.0966401766981226, 0.9340593820045874, 0.856426554766345, 0.716964574907875, 0.6963316473143999, 0.703031155395785, 0.6208109272280546, 0.6127074332584275, 0.6057633012592234, 0.6103443945120228, 0.5637482480444787, 0.5460725270635841, 0.5310002837308945, 0.5354959401850057, 0.4873432301377513, 0.49849232187706954, 0.497753368400548, 0.4874271585437143, 0.4903011266006817, 0.48385305410803836, 0.46655068009316314, 0.43164618763831064, 0.43214526392638547, 0.4302304637839907, 0.42677362841653504, 0.4058529189934804, 0.43032133390307975, 0.3842893564477494, 0.40878758861042047, 0.37116590023765067, 0.4012166736951326, 0.36678270839145866, 0.3485393715084284, 0.3748727984369203], "accuracy": [0.26297715306282043, 0.43059042096138, 0.4892352521419525, 0.5952978730201721, 0.6623960137367249, 0.6816800832748413, 0.7272487282752991, 0.7375511527061462, 0.7327961921691895, 0.765949010848999, 0.7687227725982666, 0.7718927264213562, 0.7689869403839111, 0.789459764957428, 0.7965922355651855, 0.8058380484580994, 0.7965922355651855, 0.819970965385437, 0.8183859586715698, 0.8100647330284119, 0.8158763647079468, 0.8201030492782593, 0.8224804997444153, 0.8216879963874817, 0.8387266993522644, 0.8433496356010437, 0.8368775844573975, 0.8408400416374207, 0.8537842035293579, 0.8374059200286865, 0.8595958352088928, 0.8446704745292664, 0.8634262084960938, 0.8491612672805786, 0.8652753829956055, 0.8696341514587402, 0.858671247959137], "val_loss": [1.4841199942997523, 1.3127686977386475, 0.9417609146663121, 0.7854005438940865, 0.7627954142434257, 0.5552475111825126, 0.580486604145595, 0.5385902779442924, 0.5207496711186, 0.5094715016228812, 0.47464743682316374, 0.47582404954092844, 0.44839910098484587, 0.4872269800731114, 0.43129066058567594, 0.4626929589680263, 0.4017891543252127, 0.41049547706331524, 0.4070285643850054, 0.4089098572731018, 0.45458294664110455, 0.4027734909738813, 0.4473362820489066, 0.38590156180518015, 0.38942221232822966, 0.4006971035684858, 0.3820470230919974, 0.3541144132614136, 0.43715113401412964, 0.3646047966820853, 0.4110013246536255, 0.3483360324587141, 0.3810836672782898, 0.35999246154512676, 0.3465800796236311, 0.3939312611307417, 0.3543509415217808], "val_accuracy": [0.43533334136009216, 0.4776666760444641, 0.609000027179718, 0.6570000052452087, 0.6690000295639038, 0.7490000128746033, 0.7286666631698608, 0.7630000114440918, 0.7673333287239075, 0.765666663646698, 0.7863333225250244, 0.781000018119812, 0.79666668176651, 0.7796666622161865, 0.8053333163261414, 0.7946666479110718, 0.8259999752044678, 0.8183333277702332, 0.812333345413208, 0.8270000219345093, 0.8003333210945129, 0.8256666660308838, 0.7976666688919067, 0.8309999704360962, 0.8403333425521851, 0.8293333053588867, 0.8320000171661377, 0.8473333120346069, 0.8003333210945129, 0.8356666564941406, 0.8180000185966492, 0.856333315372467, 0.8386666774749756, 0.8403333425521851, 0.8536666631698608, 0.8230000138282776, 0.8539999723434448]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 6, 3, 2, 7, 5, 1, 8, 6, 5, 8, 9], [1, 3, 2, 5, 0, 2, 3, 4, 2, 0], [67, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 1, 0, 0, 0, 1], [1, 0, 8, 9, 7], [1, 0], [96, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.8277142643928528, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, tf.math.subtract(alpha, grad))), tf.math.add(beta, beta))), grad), tf.math.sqrt(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), beta)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1294606545692294, 1.8272992589171095, 1.2884141176824855, 1.1068902381847974, 0.9158639944209053, 0.8110804029302102, 0.7428344101197905, 0.71995405827405, 0.6740644385219171, 0.6447464151704284, 0.6412031263124831, 0.5933144887393381, 0.5974915085010808, 0.5822406956595578, 0.5678660792681551, 0.5300786273669352, 0.5420949844604848, 0.4868421700565712, 0.5004691337203904, 0.49280170284446834, 0.48747426051001397, 0.4878181006418416, 0.4741625929269273, 0.4723719743658224, 0.433284871141436, 0.4468805201025907, 0.42302766550549303, 0.4327778914002789, 0.4138649203647885, 0.4241044217482723, 0.39216620561752524, 0.40016646022888586, 0.38219352971687137, 0.3835874724743971, 0.3738868942413159, 0.35277077200201445, 0.38407352327780875, 0.36675677950891444, 0.35789646289178867, 0.3477485696747633, 0.33524560400869996, 0.3565695284183204, 0.3367120766439741, 0.3340433449391534, 0.3371608341059838, 0.3187320673501943, 0.32226491960489106, 0.3168521513398518], "accuracy": [0.26324132084846497, 0.41764628887176514, 0.568220853805542, 0.6008453369140625, 0.6674151420593262, 0.6964733600616455, 0.718399167060852, 0.724739134311676, 0.7412495017051697, 0.7585523724555969, 0.7578919529914856, 0.7779685854911804, 0.7791573405265808, 0.780610203742981, 0.7893276810646057, 0.8039889335632324, 0.7946110367774963, 0.8206313848495483, 0.8108572363853455, 0.8177255392074585, 0.8206313848495483, 0.8256505131721497, 0.8314621448516846, 0.8219521641731262, 0.8405758738517761, 0.8352925777435303, 0.8417646288871765, 0.8407079577445984, 0.847840428352356, 0.8436138033866882, 0.8560295701026917, 0.8533879518508911, 0.8577466607093811, 0.8593316674232483, 0.8631620407104492, 0.8687095642089844, 0.8577466607093811, 0.8652753829956055, 0.8705587387084961, 0.8693699836730957, 0.8774270415306091, 0.8691058158874512, 0.8712190985679626, 0.8749174475669861, 0.8714832663536072, 0.8813894987106323, 0.878879964351654, 0.8821820020675659], "val_loss": [1.4848848751613073, 0.9434970106397357, 1.0693418979644775, 0.8190984896251133, 0.6678162131990705, 0.5744399854115078, 0.6040298768452236, 0.5463782548904419, 0.545417172568185, 0.5231978382383075, 0.5256556272506714, 0.5173261846814837, 0.47242236137390137, 0.475004894392831, 0.46843133653913227, 0.48855769634246826, 0.4151141047477722, 0.42214289733341764, 0.41732641628810335, 0.4077831506729126, 0.3993865166391645, 0.39603627579552786, 0.47790963309151785, 0.3935618911470686, 0.3955626147133963, 0.40267332962581087, 0.365812463419778, 0.3608126810618809, 0.40443512371608187, 0.35120407172611784, 0.39434923444475445, 0.3495468241827829, 0.3479162965502058, 0.3445878284318106, 0.3447024737085615, 0.41791229588644846, 0.3505463259560721, 0.33559671470097135, 0.3717332737786429, 0.359801036970956, 0.36677796500069754, 0.34576092447553364, 0.33820254462105886, 0.3365277647972107, 0.34881278446742464, 0.33260426351002287, 0.3667441095624651, 0.34628719091415405], "val_accuracy": [0.43700000643730164, 0.6286666393280029, 0.5176666378974915, 0.6326666474342346, 0.7070000171661377, 0.7433333396911621, 0.7166666388511658, 0.7643333077430725, 0.749666690826416, 0.7633333206176758, 0.7613333463668823, 0.7440000176429749, 0.7910000085830688, 0.7910000085830688, 0.781333327293396, 0.7716666460037231, 0.8130000233650208, 0.8130000233650208, 0.8096666932106018, 0.8276666402816772, 0.8276666402816772, 0.8303333520889282, 0.7853333353996277, 0.82833331823349, 0.8379999995231628, 0.8199999928474426, 0.840666651725769, 0.8450000286102295, 0.8159999847412109, 0.8456666469573975, 0.8226666450500488, 0.8519999980926514, 0.8493333458900452, 0.8513333201408386, 0.8550000190734863, 0.8149999976158142, 0.8500000238418579, 0.8576666712760925, 0.843999981880188, 0.8383333086967468, 0.843666672706604, 0.8526666760444641, 0.8613333106040955, 0.8546666502952576, 0.847000002861023, 0.8610000014305115, 0.8450000286102295, 0.8573333621025085]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 5, 2, 9, 5, 3, 6, 8, 6, 5, 8, 9], [2, 3, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 0, 1, 0, 0, 1], [1, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.8234285712242126, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 7, 3, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.square(tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(beta, grad)), tf.math.add(beta, grad)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.129464496065361, 1.7886560013297055, 1.3581173241083349, 1.0710147669475627, 0.9386490645220944, 0.7963220572915642, 0.7122091224416844, 0.742769884671108, 0.6706165431701843, 0.6277741505217638, 0.6175523627120837, 0.584468830444274, 0.583926159400887, 0.5605761304570542, 0.549917282996444, 0.5063294960743621, 0.5431107374277444, 0.5172124709774081, 0.4923207680302966, 0.5155431991948617, 0.4844230620332949, 0.47438972080309694, 0.48560517276865445, 0.46107945154371704, 0.4208274448017135, 0.4374340860410027, 0.42239058107873784, 0.4298064709142718, 0.40424515180788684, 0.4088579279328413, 0.3953297543621743, 0.41178310161111786, 0.37907847016557744, 0.3901736571127161, 0.3686707299682427, 0.3496090976506365, 0.37495902535733044, 0.35593619699003265, 0.35251558825261464, 0.37445127042513543, 0.33859750360010354, 0.3494837625529615, 0.33276319900571144, 0.31859023562196914, 0.33719658631579974, 0.33243547564389886, 0.33129783983810657, 0.31487390735539555], "accuracy": [0.2631092369556427, 0.4336283206939697, 0.5222559571266174, 0.6168273687362671, 0.6656980514526367, 0.7008321285247803, 0.7331924438476562, 0.7140403985977173, 0.7450799345970154, 0.7656848430633545, 0.7637035846710205, 0.7803460359573364, 0.7853652238845825, 0.7946110367774963, 0.7897239327430725, 0.8171972036361694, 0.8006868362426758, 0.805177628993988, 0.8177255392074585, 0.8013472557067871, 0.8175934553146362, 0.8238013386726379, 0.8204993009567261, 0.8212917447090149, 0.8461233377456665, 0.8385946154594421, 0.843481719493866, 0.8405758738517761, 0.8529917001724243, 0.8469158411026001, 0.8520671129226685, 0.8462554216384888, 0.8585391640663147, 0.8535200357437134, 0.8654074668884277, 0.8714832663536072, 0.8610487580299377, 0.8668603897094727, 0.8705587387084961, 0.8618412613868713, 0.8730682730674744, 0.8717474341392517, 0.8739928603172302, 0.8833707571029663, 0.8685774803161621, 0.8735966086387634, 0.8745211958885193, 0.8868049383163452], "val_loss": [1.4848565714699882, 1.2669099058423723, 0.8840645040784564, 0.8935816628592355, 0.6705585888453892, 0.5744380269731794, 0.6652459417070661, 0.5322320120675224, 0.5189118555613926, 0.542853696005685, 0.4880474635532924, 0.5042704343795776, 0.45552728857312885, 0.4845774344035557, 0.4311097690037319, 0.5465599809374128, 0.4090438996042524, 0.4147786157471793, 0.3996884397097996, 0.39838744912828716, 0.42630099398749216, 0.39165134940828594, 0.43856885603496004, 0.38819598300116404, 0.4008517180170332, 0.42917866366250174, 0.3893858364650181, 0.36248559611184256, 0.35628644057682585, 0.3580424359866551, 0.39650241817746845, 0.3539919001715524, 0.3530884725706918, 0.37612301111221313, 0.3415653961045401, 0.377324640750885, 0.3380707246916635, 0.3351032223020281, 0.3606024810246059, 0.3624294825962612, 0.3538456303732736, 0.3710064973149981, 0.3340428727013724, 0.3321917653083801, 0.3582838092531477, 0.32453315598624094, 0.3675292560032436, 0.3564475519316537], "val_accuracy": [0.4363333284854889, 0.5453333258628845, 0.6003333330154419, 0.6276666522026062, 0.7166666388511658, 0.7396666407585144, 0.6993333101272583, 0.7699999809265137, 0.7643333077430725, 0.7563333511352539, 0.7839999794960022, 0.7733333110809326, 0.796999990940094, 0.7833333611488342, 0.8053333163261414, 0.7586666941642761, 0.8213333487510681, 0.8190000057220459, 0.8193333148956299, 0.8263333439826965, 0.8059999942779541, 0.8256666660308838, 0.8043333292007446, 0.8256666660308838, 0.8379999995231628, 0.8163333535194397, 0.8263333439826965, 0.8483333587646484, 0.8403333425521851, 0.8376666903495789, 0.8163333535194397, 0.8486666679382324, 0.8413333296775818, 0.8333333134651184, 0.8553333282470703, 0.8326666951179504, 0.8560000061988831, 0.859000027179718, 0.8510000109672546, 0.8346666693687439, 0.8519999980926514, 0.8383333086967468, 0.8636666536331177, 0.856333315372467, 0.8396666646003723, 0.8586666584014893, 0.8420000076293945, 0.856333315372467]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 6, 3, 4, 7, 5, 1, 8, 6, 5, 8, 9], [1, 3, 0, 5, 0, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.7928571701049805, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.123670213510017, 1.7566917444878345, 1.3868379842776821, 1.0683905796493915, 0.9903343344455886, 0.8594227329914076, 0.7966885207477514, 0.7400749538631614, 0.7224316480546784, 0.6769283904438526, 0.6401471403832008, 0.6260512665262501, 0.6036835521943754, 0.5749193894675757, 0.584931757849725], "accuracy": [0.28899750113487244, 0.4554220139980316, 0.5363888740539551, 0.6244881749153137, 0.6339981555938721, 0.6840575933456421, 0.7073041796684265, 0.7197200059890747, 0.7297582626342773, 0.7434949278831482, 0.7651565074920654, 0.7619865536689758, 0.7795535326004028, 0.7845727205276489, 0.7794214487075806], "val_loss": [1.589226143700736, 1.4656623091016496, 0.8538000413349697, 0.8293405771255493, 0.8225853783743722, 0.6603068964821952, 0.5607921225684029, 0.5850087404251099, 0.5298628977366856, 0.5002846206937518, 0.491524406841823, 0.47277172974177767, 0.5073841299329486, 0.4878064053399222, 0.48568831171308247], "val_accuracy": [0.4180000126361847, 0.4569999873638153, 0.6800000071525574, 0.5979999899864197, 0.6433333158493042, 0.7089999914169312, 0.749666690826416, 0.7553333044052124, 0.7463333606719971, 0.781000018119812, 0.7736666798591614, 0.7803333401679993, 0.7649999856948853, 0.762333333492279, 0.7753333449363708]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 5, 2, 9, 4, 3, 2, 8, 6, 5, 8, 9], [2, 3, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 0, 1, 0, 0, 1], [1, 0, 8, 9, 7], [1, 0], [88, 19], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.3554285764694214, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 4, 1, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.63319526227584, 2.374615699576349, 2.3171366097479607, 2.3038739473781, 2.302917734317933, 2.3000770200591565], "accuracy": [0.2067098170518875, 0.2814687490463257, 0.0874389111995697, 0.09774138033390045, 0.10091137140989304, 0.1026284471154213], "val_loss": [1.7554847853524345, 2.027813570840018, 1.9747145516531808, 1.9737967082432337, 1.9735822677612305, 1.9189105033874512], "val_accuracy": [0.33000001311302185, 0.0013333333190530539, 0.10000000149011612, 0.09799999743700027, 0.10133333504199982, 0.19233334064483643]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 6, 3, 4, 7, 5, 1, 8, 6, 5, 8, 9], [3, 3, 2, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 0, 0, 0, 0, 1], [1, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [2, 0], [88, 19], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 8, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.34285715222358704, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(beta, beta)), tf.math.add(beta, grad))), tf.math.add(beta, grad))))))), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.6332429714364114, 2.248345163126411, 2.256325204909958, 2.269980280768712, 2.281736276184705, 2.329072296595797], "accuracy": [0.20578522980213165, 0.2989037036895752, 0.148064985871315, 0.18240654468536377, 0.12798838317394257, 0.1636507660150528], "val_loss": [1.7638107708522253, 1.9798081942967005, 1.966766629900251, 1.9697773797171456, 1.9733480725969588, 1.9854241098676408], "val_accuracy": [0.3149999976158142, 0.10000000149011612, 0.12433333694934845, 0.10133333504199982, 0.09799999743700027, 0.10000000149011612]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 6, 3, 4, 7, 5, 1, 8, 6, 5, 8, 9], [2, 3, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 0, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07436270266771317, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 9, 4, 3, 3, 8, 9, 8, 6, 5, 8, 9], [1, 3, 2, 2, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 9, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 2, 2, 0, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [98393226.3339004, 1821325125.891956, 8524502600.02219, 23606235389.734512, 50128300969.302864, 94014167375.15678], "accuracy": [0.09787346422672272, 0.09800554811954498, 0.10645885765552521, 0.1014397069811821, 0.1026284471154213, 0.09932637959718704], "val_loss": [368101211.4285714, 2942741211.428571, 9929427529.142857, 23533703168.0, 45960715117.71429, 79416751835.42857], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 3, 9, 7, 5, 1, 8, 6, 5, 8, 9], [2, 3, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 7, 4, 1, 1, 1, 0, 1, 0, 7, 4, 3, 2], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(beta, tf.math.add(beta, grad))))), tf.math.add(beta, grad)))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(alpha), tf.math.pow(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06630563735961914, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [7, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 6, 3, 2, 7, 5, 1, 8, 6, 5, 8, 9], [3, 3, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 0, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [1, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 5, 1, 2, 3, 3, 1, 2, 0, 3, 3, 1, 2, 1, 7, 4, 3, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.negative(grad))), tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(alpha), tf.math.pow(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.9269883770610004e+31, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1010434553027153, 0.10474177449941635, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.0446075859904777e+31, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10000000149011612, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 0, 0, 4, 7, 5, 1, 8, 6, 5, 8, 9], [0, 3, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 4, 4, 2, 2, 1, 4, 3, 2, 1, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 6, 3, 4, 7, 5, 1, 8, 6, 5, 8, 9], [1, 2, 0, 5, 0, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 0, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [0, 0, 0, 2, 3, 3, 2], [48, 57, 61]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 11, 11, 5, 6, 2, 3, 3, 1, 2, 1, 7, 4, 3, 3], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.pow(alpha, tf.math.add(beta, beta)), tf.math.add(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.3022383952326604, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 1, 3, 2, 7, 5, 1, 8, 6, 5, 8, 9], [1, 3, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 0, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [7, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 3, 3, 1, 2, 1, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.474689032649203e+21, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0870426595211029, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 6, 3, 4, 7, 5, 1, 8, 6, 5, 8, 9], [1, 3, 0, 0, 0, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 0, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [1, 0, 8, 9, 7], [1, 0], [88, 19], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 3, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(alpha, tf.math.add(beta, grad))))), tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.sqrt(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))), beta)), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07489103078842163, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 1, 3, 2, 7, 5, 1, 8, 6, 5, 8, 9], [1, 3, 3, 5, 3, 2, 2, 4, 2, 0], [94, 23, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [2, 0], [88, 19], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 9, 0, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 5, 6, 0, 1, 0, 0, 0, 0, 2, 2, 0, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, alpha), tf.math.subtract(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(grad, grad)), tf.math.add(grad, tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [98393226.3339004, 1821325125.891956, 8524502600.02219, 23606235389.734512, 50128300969.302864, 94014167375.15678], "accuracy": [0.09787346422672272, 0.09800554811954498, 0.10645885765552521, 0.1014397069811821, 0.1026284471154213, 0.09932637959718704], "val_loss": [368101211.4285714, 2942741211.428571, 9929427529.142857, 23533703168.0, 45960715117.71429, 79416751835.42857], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 5, 2, 9, 5, 3, 6, 8, 6, 5, 8, 9], [2, 3, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 0, 1, 0, 0, 1], [1, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 7, 3, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.square(tf.math.add(tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.square(tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(beta, grad)), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06379606574773788, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 0, 3, 4, 7, 5, 1, 8, 6, 5, 8, 9], [3, 4, 0, 5, 0, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 0, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 3, 3, 1, 2, 1, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.negative(tf.math.add(beta, grad)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.4746827867376876e+21, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0870426595211029, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 5, 2, 9, 5, 3, 6, 8, 6, 5, 8, 9], [0, 3, 3, 5, 3, 2, 2, 4, 2, 0], [94, 81, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 0, 1, 0, 0, 1], [1, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3022383952326604, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 5, 2, 9, 5, 3, 6, 8, 6, 5, 8, 9], [2, 3, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 0, 1, 0, 0, 1], [1, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 13, 7, 6, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(tf.math.pow(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(beta, sigma), sigma)))", "other_info": {"loss": [2.3035549295891733, 2.303163553855643, 2.303640374071673, 2.302512599177695, 2.302781504914588, 2.3028720847336275], "accuracy": [0.08836349099874496, 0.08598599582910538, 0.08809932321310043, 0.08809932321310043, 0.09166556596755981, 0.0882314071059227], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]