[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [9, 2, 2, 0, 6, 2, 1, 9], [0, 2, 3, 3, 0, 2, 2], [57, 49, 47], [0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [3, 0, 0, 1, 2, 3], [48, 57]], "fitness": -0.8357142806053162, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1091151141440156, 1.7341817471770373, 1.2450381942539168, 1.0005795865987255, 0.8895558417040234, 0.7741330781664437, 0.7218409516571724, 0.7201038525561457, 0.6737499414040129, 0.6414295792296232, 0.6249042318765088, 0.5825906523057199, 0.5831876741408546, 0.5861957077856597, 0.5449068534328575, 0.5064084815342885, 0.5211675033955416, 0.5140963510916832, 0.4989927070346475, 0.47348471732817277, 0.46770629096638966, 0.4892246367720061, 0.47500240530367493, 0.44151540941188144, 0.44798383004928954, 0.4401603131923441, 0.41929881090674465, 0.4301841403270961, 0.41729185154818743, 0.3898785563311037, 0.4243310991137838, 0.39755384841489283], "accuracy": [0.2845066785812378, 0.44168537855148315, 0.5583146214485168, 0.639809787273407, 0.6653017997741699, 0.7062475085258484, 0.7298903465270996, 0.7223616242408752, 0.7395324110984802, 0.7618544697761536, 0.7592127919197083, 0.780610203742981, 0.7738739848136902, 0.7755910754203796, 0.793422281742096, 0.8112534880638123, 0.802800178527832, 0.8088759779930115, 0.8117818236351013, 0.8264430165290833, 0.8252542614936829, 0.8183859586715698, 0.8208954930305481, 0.8364813327789307, 0.8334434032440186, 0.837141752243042, 0.8499537706375122, 0.837537944316864, 0.8444063067436218, 0.8590674996376038, 0.8449346423149109, 0.850350022315979], "val_loss": [1.8486430304391044, 1.29206269127982, 0.7721062047140939, 0.7887253590992519, 0.6267700876508441, 0.624704395021711, 0.6095602342060634, 0.5660503080912999, 0.5332190649850028, 0.5668709107807705, 0.4888560601643154, 0.5035238776888166, 0.4533918925694057, 0.45291788237435476, 0.4288996287754604, 0.480600220816476, 0.4326032655579703, 0.4402496729578291, 0.4624079976763044, 0.4011900084359305, 0.45598743643079487, 0.4152814916202, 0.3991370712007795, 0.3750534398215158, 0.4206404004778181, 0.36979198455810547, 0.36801877192088533, 0.39165779522487093, 0.3576791541916983, 0.40139550822121756, 0.44805310453687397, 0.39615923166275024], "val_accuracy": [0.4026666581630707, 0.4963333308696747, 0.6690000295639038, 0.6506666541099548, 0.7286666631698608, 0.7163333296775818, 0.7253333330154419, 0.7570000290870667, 0.7609999775886536, 0.7396666407585144, 0.784333348274231, 0.762666642665863, 0.7956666946411133, 0.7996666431427002, 0.809333324432373, 0.781000018119812, 0.809333324432373, 0.8083333373069763, 0.7829999923706055, 0.8293333053588867, 0.7846666574478149, 0.8183333277702332, 0.8226666450500488, 0.8326666951179504, 0.8180000185966492, 0.8403333425521851, 0.8413333296775818, 0.8273333311080933, 0.8393333554267883, 0.815666675567627, 0.7903333306312561, 0.8276666402816772]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [6, 2, 2, 0, 6, 2, 1, 9], [3, 2, 3, 0, 3, 2, 2, 1], [54, 7, 47], [0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.824571430683136, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 8, 6, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, grad))), tf.math.negative(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), beta))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.109070933616204, 1.7350126557330634, 1.1908680672627303, 1.1373558919884195, 0.9326855931394151, 0.7860787739181846, 0.761331239719401, 0.7255423748891556, 0.6784767447965272, 0.6466172211567929, 0.6289614574500771, 0.583718212793028, 0.5862613926159314, 0.5792030527953538, 0.5485255717837564, 0.5413999698023834, 0.515357765169223, 0.5166862606333074, 0.5041077527757712, 0.4751994233593697, 0.4949031732125195, 0.4839677974107385, 0.48670937154964133, 0.44931261026312913, 0.43091561211775703, 0.447248361932918, 0.42989532861097407, 0.43425875557349136, 0.41222130278428754, 0.38820516313654385, 0.40662417769935927, 0.39776545115875106], "accuracy": [0.2843745946884155, 0.44062870740890503, 0.5744287371635437, 0.6081098914146423, 0.6586976647377014, 0.7020208835601807, 0.7108704447746277, 0.7220974564552307, 0.7391361594200134, 0.7532690763473511, 0.7574957013130188, 0.7803460359573364, 0.7724210619926453, 0.7798177003860474, 0.7898560166358948, 0.7915731072425842, 0.8087438941001892, 0.7994980812072754, 0.8062343001365662, 0.824329674243927, 0.81548011302948, 0.8193105459213257, 0.8212917447090149, 0.8341038227081299, 0.8356888294219971, 0.8321225643157959, 0.8428213000297546, 0.8376700282096863, 0.8502179384231567, 0.8588033318519592, 0.848368763923645, 0.8551049828529358], "val_loss": [1.8490097182137626, 1.246060950415475, 0.9701719284057617, 0.82368722983769, 0.6176449741636004, 0.6369223764964512, 0.6540037393569946, 0.5209455149514335, 0.5152268239430019, 0.5306846414293561, 0.4895655257361276, 0.5041137933731079, 0.4401911667415074, 0.4518338441848755, 0.43739656039646696, 0.4503247226987566, 0.43211240427834646, 0.44755334513528006, 0.4368936504636492, 0.40649862800325665, 0.4621403047016689, 0.4509100914001465, 0.3974821822983878, 0.375525210584913, 0.4073710186140878, 0.3727487325668335, 0.3671504855155945, 0.39578866958618164, 0.3685853566442217, 0.37610167264938354, 0.4257332682609558, 0.36740667479378836], "val_accuracy": [0.40299999713897705, 0.5019999742507935, 0.6173333525657654, 0.6556666493415833, 0.7390000224113464, 0.7016666531562805, 0.687333345413208, 0.7736666798591614, 0.7676666378974915, 0.7440000176429749, 0.7793333530426025, 0.7683333158493042, 0.7983333468437195, 0.8043333292007446, 0.8076666593551636, 0.8080000281333923, 0.8096666932106018, 0.8013333082199097, 0.7910000085830688, 0.824999988079071, 0.7663333415985107, 0.8009999990463257, 0.8213333487510681, 0.8306666612625122, 0.8220000267028809, 0.8353333473205566, 0.8403333425521851, 0.8270000219345093, 0.8326666951179504, 0.8389999866485596, 0.8016666769981384, 0.8379999995231628]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [6, 2, 2, 0, 0, 2, 0, 9], [0, 2, 3, 3, 0, 2, 2], [54, 93, 47], [0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [1, 0, 0, 1, 2, 3], [48, 57]], "fitness": -0.822857141494751, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, grad))), tf.math.negative(tf.math.negative(tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.109075871535485, 1.721947629327992, 1.3231430880350443, 0.9558528690306014, 0.8822456675671063, 0.7508994316333604, 0.7570104222130136, 0.7131466324759859, 0.6597148139384508, 0.6420713557370067, 0.6253630366575417, 0.5984714608253221, 0.5668839639786637, 0.5588498485165502, 0.5466763164703919, 0.5377773352665058, 0.5017073658935745, 0.5024363042309677, 0.4980197212581448, 0.4842160747051554, 0.4624689477128659, 0.496438146550752], "accuracy": [0.2845066785812378, 0.4469687044620514, 0.5532954931259155, 0.6479989290237427, 0.6798309087753296, 0.7186633348464966, 0.7147008180618286, 0.7215691208839417, 0.7408532500267029, 0.7573636174201965, 0.7569673657417297, 0.7746664881706238, 0.7860256433486938, 0.7872143983840942, 0.7952714562416077, 0.7910447716712952, 0.8096684813499451, 0.8133667707443237, 0.8087438941001892, 0.8239334225654602, 0.8277638554573059, 0.8156121969223022], "val_loss": [1.8476877212524414, 1.4443697248186385, 0.8533519336155483, 0.6840811627251762, 0.6070035525730678, 0.5998858554022652, 0.616084200995309, 0.5370662382670811, 0.5256962946483067, 0.5458942481449672, 0.4867138011114938, 0.4515825850622995, 0.4754854610988072, 0.44618078640529085, 0.4866140740258353, 0.45018001965114046, 0.42428232942308697, 0.4589805432728359, 0.42400082520076204, 0.4150343792779105, 0.44822209221976145, 0.5045993328094482], "val_accuracy": [0.4046666622161865, 0.47333332896232605, 0.643666684627533, 0.6806666851043701, 0.7446666955947876, 0.7179999947547913, 0.7133333086967468, 0.7450000047683716, 0.7643333077430725, 0.7446666955947876, 0.778333306312561, 0.7963333129882812, 0.781000018119812, 0.812666654586792, 0.7646666765213013, 0.8069999814033508, 0.8163333535194397, 0.7906666398048401, 0.8143333196640015, 0.8053333163261414, 0.7866666913032532, 0.7756666541099548]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [7, 1, 2, 4, 6, 5, 1, 9], [0, 2, 3, 3, 0, 2, 2], [54, 7, 47], [0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [3, 0, 0, 1, 2, 3], [47, 57]], "fitness": -0.8074285984039307, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1383078838966116, 1.8778266476728283, 1.3940271564588698, 1.029343771377118, 0.9576600391898472, 0.856920855802048, 0.7680953661952399, 0.7510660595078872, 0.7510762551221015, 0.6816095904257823, 0.6553706543918897, 0.6563168738685374, 0.6327097315231508, 0.6393468752828146, 0.5923068587255044, 0.5798543696594969, 0.5528653679176203, 0.5430986127360874, 0.533850373522386, 0.5119530425930162, 0.5072911442499182], "accuracy": [0.29718664288520813, 0.4237220883369446, 0.4998018741607666, 0.6308281421661377, 0.6436402201652527, 0.6839255094528198, 0.7046625018119812, 0.7157574892044067, 0.7185312509536743, 0.7396644949913025, 0.7493065595626831, 0.7495707273483276, 0.7580240368843079, 0.7573636174201965, 0.7728173136711121, 0.7798177003860474, 0.7885351777076721, 0.7965922355651855, 0.7968564033508301, 0.8079513907432556, 0.8127063512802124], "val_loss": [1.5101769651685442, 1.0737454210008894, 1.0432801246643066, 0.7711733749934605, 0.6782088450023106, 0.605529955455235, 0.6728539637156895, 0.6145759310041156, 0.5673537254333496, 0.5846091849463326, 0.5109211547034127, 0.5059084381375994, 0.4838419641767229, 0.4592971290860857, 0.45743066923958914, 0.4565803664071219, 0.4812811953680856, 0.44524552140917095, 0.4663947820663452, 0.4238554154123579, 0.4457040173666818], "val_accuracy": [0.5226666927337646, 0.5663333535194397, 0.6003333330154419, 0.6446666717529297, 0.7049999833106995, 0.7483333349227905, 0.6986666917800903, 0.7453333139419556, 0.7400000095367432, 0.7300000190734863, 0.7693333625793457, 0.7666666507720947, 0.7736666798591614, 0.7993333339691162, 0.7979999780654907, 0.8053333163261414, 0.7803333401679993, 0.7996666431427002, 0.7756666541099548, 0.8016666769981384, 0.7816666960716248]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1], [9, 2, 2, 0, 6, 2, 9, 9], [3, 2, 3, 0, 3, 2, 2, 1], [54, 7, 47], [0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [1, 0, 0, 1, 3, 3], [33, 57]], "fitness": -0.7997142672538757, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2719969946269614, 2.1742390889092333, 1.9680268139241472, 1.6445870846175341, 1.35493665573824, 1.1927460542743578, 1.0785651010387467, 1.0034033926785693, 0.9489254034379564, 0.9160380766864434, 0.8784852974513392, 0.8533614998275673, 0.813372591333524, 0.7988496887339042, 0.7876294522930398, 0.7773497241394568, 0.7630969747465993, 0.7559761862949437, 0.7492426356635058, 0.7351908600561812, 0.7182486482095473, 0.7083675709650611, 0.7028922298958808, 0.7049750360468233, 0.6896548983348816, 0.6824018623393997, 0.6776020719925993, 0.6744995754723379, 0.6669225586230618, 0.6622398830974863, 0.6513450987634091, 0.6494312091683667, 0.6583360712746461, 0.6398473874830756, 0.6348270787586232, 0.6328148263210256, 0.6291690517520514, 0.6315629192709277, 0.6309271607936223, 0.6094013680682411, 0.6127149851299185, 0.6064594660562972, 0.6161460633117919, 0.602655460364972], "accuracy": [0.1632545292377472, 0.3267732262611389, 0.41909918189048767, 0.4854048490524292, 0.5527671575546265, 0.5880332589149475, 0.6260731816291809, 0.6489235162734985, 0.6610751748085022, 0.6742834448814392, 0.6869634389877319, 0.6968696117401123, 0.7055870890617371, 0.7132478952407837, 0.7195879220962524, 0.713908314704895, 0.7238145470619202, 0.7231541275978088, 0.7272487282752991, 0.7309470176696777, 0.739400327205658, 0.743891179561615, 0.7460044622421265, 0.7440232634544373, 0.748249888420105, 0.7516840696334839, 0.7520803213119507, 0.7520803213119507, 0.7582882046699524, 0.7523444890975952, 0.7594769597053528, 0.761590301990509, 0.7584202885627747, 0.7658169269561768, 0.7652885913848877, 0.76106196641922, 0.7681944370269775, 0.765949010848999, 0.770439863204956, 0.7757231593132019, 0.7738739848136902, 0.7734777331352234, 0.7755910754203796, 0.7730814814567566], "val_loss": [1.9002872194562639, 1.7635365213666643, 1.4838627406529017, 1.1507572446550642, 0.9390319074903216, 0.8309940610613141, 0.7593555620738438, 0.7102799585887364, 0.6840152059282575, 0.656032817704337, 0.6356228930609567, 0.618612459727696, 0.607116665158953, 0.5957522562571934, 0.5850482838494437, 0.5795043366295951, 0.5734752757208688, 0.5641205992017474, 0.5544871432440621, 0.5456597123827253, 0.5470013448170253, 0.5352027927126203, 0.5344133377075195, 0.5325171777180263, 0.528119649205889, 0.5282952274594989, 0.5228255135672433, 0.5149296011243548, 0.5121258837836129, 0.5103505509240287, 0.5026024750300816, 0.5062247174126762, 0.4970491783959525, 0.4911087581089565, 0.49308128016335623, 0.4903763362339565, 0.4890263421194894, 0.485700113432748, 0.4798374516623361, 0.4879676273890904, 0.47533232825142996, 0.4916682754244123, 0.4810987540653774, 0.47354487010410856], "val_accuracy": [0.36633333563804626, 0.48366665840148926, 0.5559999942779541, 0.6243333220481873, 0.6596666574478149, 0.6833333373069763, 0.6933333277702332, 0.7143333554267883, 0.7173333168029785, 0.7276666760444641, 0.7400000095367432, 0.746666669845581, 0.7390000224113464, 0.749666690826416, 0.7463333606719971, 0.7476666569709778, 0.7480000257492065, 0.7543333172798157, 0.7676666378974915, 0.7670000195503235, 0.765333354473114, 0.7710000276565552, 0.762333333492279, 0.7746666669845581, 0.7723333239555359, 0.765333354473114, 0.7649999856948853, 0.7773333191871643, 0.777999997138977, 0.7763333320617676, 0.7853333353996277, 0.7889999747276306, 0.7896666526794434, 0.7886666655540466, 0.7913333177566528, 0.793666660785675, 0.7906666398048401, 0.7953333258628845, 0.7979999780654907, 0.7836666703224182, 0.7933333516120911, 0.7756666541099548, 0.7846666574478149, 0.7940000295639038]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [6, 1, 2, 4, 6, 5, 1, 9], [0, 4, 3, 1, 0, 2, 2], [43, 99, 47, 61], [0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [3, 0, 0, 1, 2, 3], [48, 57]], "fitness": -0.4448571503162384, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3433438958178234, 2.2463123246332626, 2.3074395078410403, 2.3032169184585873, 2.2935750826459125, 2.228130426893082], "accuracy": [0.1946902722120285, 0.21965394914150238, 0.10236428678035736, 0.09536388516426086, 0.14700831472873688, 0.24039097130298615], "val_loss": [1.8928959710257394, 1.9828779356820243, 1.9747559002467565, 1.9729783875601632, 1.8559722219194685, 1.84891939163208], "val_accuracy": [0.41066667437553406, 0.10066666454076767, 0.10066666454076767, 0.1693333387374878, 0.32766667008399963, 0.21799999475479126]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [1, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [5, 9, 2, 0, 6, 4, 1, 9], [0, 2, 3, 3, 0, 2, 2], [54, 7, 47], [0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10114285349845886, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.281535199415635, 2.0495601881606906, 1.974307979212902, 1.7104340958132358, 1.7895534653248584, 13.512689285652433, NaN, NaN, NaN], "accuracy": [0.2635054886341095, 0.3089420199394226, 0.36283186078071594, 0.47008320689201355, 0.4768194556236267, 0.2845066785812378, 0.14542332291603088, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.4941554069519043, 1.8576164926801408, 1.3674050058637346, 1.0947661740439278, 1.6888042518070765, 1.9066085134233748, NaN, NaN, NaN], "val_accuracy": [0.38366666436195374, 0.5076666474342346, 0.5253333449363708, 0.5696666836738586, 0.289000004529953, 0.2863333225250244, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [5, 2, 9, 2, 6, 9, 1, 9], [3, 2, 3, 0, 3, 2, 2, 1], [54, 7, 47], [0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [0, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [1, 0, 0, 1, 3, 3], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [9, 2, 2, 0, 6, 2, 1, 9], [0, 2, 3, 1, 0, 2, 2], [54, 7, 47], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [35, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 2, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302932457507578, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09774138033390045, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [2, 2, 2, 0, 6, 2, 1, 9], [0, 2, 3, 1, 0, 2, 2], [60, 55, 47, 61], [0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1], [6, 3, 4, 4, 7, 8, 4, 6, 5, 4, 5, 5, 9, 1, 2], [3, 3, 0, 1, 2, 3, 1, 0, 2, 1], [84, 47, 51]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 8, 6, 3, 1, 1, 0, 1, 0, 25, 15, 10, 3], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, grad))), tf.math.negative(tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), beta))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.math.pow(tf.math.add(tf.math.sqrt(sigma), tf.math.pow(sigma, tf.math.divide_no_nan(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), alpha))), beta), sigma), tf.math.square(tf.math.pow(tf.math.square(tf.math.square(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(alpha, tf.math.add(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), beta))))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [6, 2, 2, 0, 6, 2, 1, 9], [4, 3, 3, 3, 0, 2, 2], [54, 7, 47], [1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 0, 4, 2, 1, 2, 3], [1, 2, 0, 1, 3, 3], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 8, 6, 2, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(tf.math.add(beta, grad), grad), tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), grad)), tf.math.add(beta, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta))))), tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(alpha, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [6, 2, 2, 0, 6, 2, 1, 9], [3, 2, 3, 3, 0, 2, 2], [54, 7, 47], [1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 4, 7, 8, 4], [1, 0, 0, 1, 2, 3], [91, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(alpha, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302932457507578, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09774138033390045, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [6, 1, 2, 4, 6, 5, 1, 9], [3, 2, 3, 0, 3, 2, 2, 1], [54, 7, 47], [1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [1, 2, 2, 0, 6, 2, 1, 9], [0, 2, 3, 0, 3, 2, 2, 1], [43, 99, 47, 61], [1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [2, 3, 0, 4, 7, 8, 4], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 14, 14, 8, 6, 3, 1, 0, 0, 0, 0, 8, 4, 4, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, grad))), tf.math.negative(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), tf.math.add(grad, tf.math.subtract(tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), beta)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [2, 4, 2, 0, 6, 4, 1, 9], [0, 2, 3, 1, 0, 2, 2], [1, 54, 47, 61], [0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [1, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [4, 6, 0, 4, 2, 1, 2, 3], [3, 0, 0, 1, 2, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 7, 7, 2, 1, 1, 0, 1, 0, 8, 4, 4, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(alpha, tf.math.add(beta, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))))), beta))))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.divide_no_nan(sigma, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09774138033390045, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [9, 2, 2, 0, 6, 2, 1, 9], [0, 2, 3, 0, 3, 2, 2, 1], [43, 99, 47, 61], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [3, 7], [88, 19], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [4, 3, 0, 4, 2, 1, 2, 3], [3, 0, 3, 1, 3, 3], [80, 96]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.303825085551401, 2.302927583168684, 2.303088743862081, 2.3023786764922094, 2.302240837897292, 2.3036424683510526], "accuracy": [0.08638224750757217, 0.09298639744520187, 0.0886276587843895, 0.08796724677085876, 0.09060890227556229, 0.09021265059709549], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [5, 2, 9, 2, 6, 9, 1, 9], [0, 2, 3, 3, 0, 2, 2], [82, 55, 47, 61], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [3, 0, 0, 1, 2, 3], [47, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 5, 5, 4, 1, 2, 2, 2, 1, 1, 1, 2, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303825085551401, 2.302927583168684, 2.303088743862081, 2.3023786764922094, 2.302240837897292, 2.3036424683510526], "accuracy": [0.08638224750757217, 0.09298639744520187, 0.0886276587843895, 0.08796724677085876, 0.09060890227556229, 0.09021265059709549], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [9, 2, 2, 0, 6, 2, 1, 9], [0, 2, 3, 1, 0, 2, 2], [88, 99, 47, 61], [1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [3, 0, 0, 1, 2, 3], [48, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303825085551401, 2.302927583168684, 2.303088743862081, 2.3023786764922094, 2.302240837897292, 2.3036424683510526], "accuracy": [0.08638224750757217, 0.09298639744520187, 0.0886276587843895, 0.08796724677085876, 0.09060890227556229, 0.09021265059709549], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [9, 2, 2, 0, 6, 2, 1, 9], [1, 2, 3, 0, 3, 2, 2, 1], [5, 7, 47], [0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [1, 1, 0, 1, 3, 3], [48, 57]], "fitness": -0.03342857211828232, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, alpha))", "other_info": {"loss": [2.3043913422101965, 2.3049427589735947, 2.307147639664708, 2.308866414285654, 2.311867170078155, 2.31706764861467], "accuracy": [0.08506141602993011, 0.08875974267721176, 0.08506141602993011, 0.07951393723487854, 0.0758156105875969, 0.07449477910995483], "val_loss": [1.9723051616123743, 1.9736974579947335, 1.9752219745091029, 1.9772723061697823, 1.9796066284179688, 1.9822539602007185], "val_accuracy": [0.03400000184774399, 0.0273333340883255, 0.024000000208616257, 0.02566666714847088, 0.0273333340883255, 0.03266666829586029]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [5, 2, 9, 2, 6, 9, 1, 9], [1, 2, 3, 0, 3, 2, 2, 1], [54, 7, 47], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [1, 1, 0, 1, 3, 3], [48, 57]], "fitness": -0.03342857211828232, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 2, 1, 1, 0, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, alpha))", "other_info": {"loss": [2.3043913422101965, 2.3049427589735947, 2.3071482963156407, 2.308866432455978, 2.3118678852394194, 2.3170672623457107], "accuracy": [0.08506141602993011, 0.08875974267721176, 0.08506141602993011, 0.07951393723487854, 0.07594769448041916, 0.07436270266771317], "val_loss": [1.9723051616123743, 1.9736976623535156, 1.9752234731401717, 1.9772725105285645, 1.9796075820922852, 1.9822484425136022], "val_accuracy": [0.03400000184774399, 0.0273333340883255, 0.024000000208616257, 0.02566666714847088, 0.02666666731238365, 0.03266666829586029]}}]