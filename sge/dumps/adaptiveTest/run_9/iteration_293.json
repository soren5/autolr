[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 8, 3, 2, 0, 5, 1, 1, 8, 5, 8, 9], [2, 2, 2, 2, 3, 2, 3, 0, 0, 3, 1, 0, 5, 0], [84, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [42, 57]], "fitness": -0.8268571496009827, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.025039490109122, 1.352560520597248, 1.0932044626274255, 0.8849194092584277, 0.8325004249421472, 0.8048808515867018, 0.732267450780885, 0.7344175522054396, 0.6844108919929819, 0.6881772421055372, 0.669552817265623, 0.6374409295202262, 0.6263534259471785, 0.6213192794978296, 0.6195637911160577, 0.5835511222050694, 0.5820726982874247, 0.5831542410917916, 0.5867919527213682, 0.5683617543834091, 0.5477930711103295, 0.553581000303375, 0.5329874371414753, 0.5251183141696534, 0.5160873705732069, 0.51828884192745, 0.5075465759990426, 0.4864167633498775, 0.47766487463952495, 0.496656170272084, 0.5066842459818282, 0.4826024192049676, 0.46372592015792946, 0.4645526758620862, 0.45492112290164843, 0.45728013962566294, 0.4567500769013443, 0.4436447920934352, 0.4325548245875024, 0.42589722379496886, 0.4261713251697861, 0.4322364253650457, 0.41829911966318184, 0.4121128813567934, 0.4229949516446095], "accuracy": [0.33007529377937317, 0.5324263572692871, 0.6139215230941772, 0.672698438167572, 0.6836613416671753, 0.6971337795257568, 0.7234182953834534, 0.7176066637039185, 0.7404569983482361, 0.7323999404907227, 0.7460044622421265, 0.7537974119186401, 0.76106196641922, 0.7687227725982666, 0.7607977986335754, 0.7862898111343384, 0.7765156626701355, 0.776251494884491, 0.7784969210624695, 0.7885351777076721, 0.7923656105995178, 0.7824593782424927, 0.8009510040283203, 0.8043851256370544, 0.8072909712791443, 0.8109893202781677, 0.8113855719566345, 0.8212917447090149, 0.8241975903511047, 0.8164047002792358, 0.8152159452438354, 0.8212917447090149, 0.828820526599884, 0.828292191028595, 0.834632158279419, 0.8338396549224854, 0.8315942287445068, 0.8325188159942627, 0.8424250483512878, 0.8461233377456665, 0.8405758738517761, 0.8385946154594421, 0.8482366800308228, 0.8479725122451782, 0.8392550349235535], "val_loss": [1.0970031874520438, 1.110187598637172, 0.7589258125850132, 0.7002500806535993, 0.5991650819778442, 0.5920257568359375, 0.641393916947501, 0.532104355948312, 0.5333700520651681, 0.5508435113089425, 0.5041830539703369, 0.5165716069085258, 0.513224618775504, 0.5142151968819755, 0.5003988572529384, 0.5217380353382656, 0.49269069944109234, 0.4734628030232021, 0.4569332259041922, 0.4788764204297747, 0.4537254912512643, 0.44076243468693327, 0.44698733942849295, 0.4578415496008737, 0.45877175671713694, 0.4600386449268886, 0.42625874280929565, 0.43361897127968924, 0.40628436633518766, 0.4207509926387242, 0.43571328265326364, 0.3993376408304487, 0.39482778310775757, 0.39809966938836233, 0.39661024297986713, 0.38250316040856497, 0.37981079305921284, 0.3954614656312125, 0.3737336993217468, 0.3711385897227696, 0.38878291845321655, 0.37358776160648893, 0.38311287334987093, 0.38572748218263897, 0.38082462549209595], "val_accuracy": [0.5879999995231628, 0.5933333039283752, 0.6660000085830688, 0.6936666369438171, 0.7480000257492065, 0.7540000081062317, 0.7020000219345093, 0.7676666378974915, 0.7473333477973938, 0.7450000047683716, 0.7733333110809326, 0.7596666812896729, 0.7733333110809326, 0.7673333287239075, 0.7876666784286499, 0.7519999742507935, 0.7753333449363708, 0.7836666703224182, 0.8006666898727417, 0.7910000085830688, 0.8033333420753479, 0.8069999814033508, 0.7953333258628845, 0.7879999876022339, 0.7963333129882812, 0.7886666655540466, 0.8103333115577698, 0.8140000104904175, 0.8176666498184204, 0.8199999928474426, 0.8109999895095825, 0.8270000219345093, 0.8323333263397217, 0.8333333134651184, 0.8309999704360962, 0.8303333520889282, 0.8343333601951599, 0.8289999961853027, 0.8366666436195374, 0.8379999995231628, 0.8326666951179504, 0.8349999785423279, 0.8330000042915344, 0.8339999914169312, 0.8320000171661377]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 5, 3, 2, 0, 5, 1, 1, 8, 5, 8, 9], [1, 3, 3, 0, 2, 3, 3, 4, 0, 0, 4, 3, 5], [84, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.819428563117981, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 12, 5, 2, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.multiply(alpha, tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.subtract(tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.sqrt(tf.math.add(beta, grad))))), grad), tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))), beta)))), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0738898896900197, 1.84861982591463, 1.7287089529133208, 1.1072345469543066, 0.9107685688149424, 0.8449244903236443, 0.7336362267466363, 0.7171208106720405, 0.663964303619023, 0.6563509434221475, 0.625944927226535, 0.6049663527625002, 0.5911986421694798, 0.5970020996281941, 0.5433252017731994, 0.534229937348903, 0.5434133327396208, 0.5229640539650432, 0.5010355211653651, 0.49541322605689564, 0.5007050568795144, 0.48698967026445483, 0.48705817550605773], "accuracy": [0.310130774974823, 0.40589091181755066, 0.4270241856575012, 0.5978074073791504, 0.6534143686294556, 0.6816800832748413, 0.726192057132721, 0.7279091477394104, 0.7465327978134155, 0.7471932172775269, 0.7585523724555969, 0.7721568942070007, 0.7725531458854675, 0.7766477465629578, 0.7969884872436523, 0.8014793395996094, 0.7967243194580078, 0.8090080618858337, 0.8100647330284119, 0.8171972036361694, 0.8098005652427673, 0.8187822103500366, 0.8189142942428589], "val_loss": [1.3465137822287423, 1.9874719892229353, 0.9438821247645787, 0.6819960219519479, 0.6444450787135533, 0.5857115643365043, 0.5930076156343732, 0.5527858223233905, 0.5192967312676566, 0.49893270220075336, 0.5116099630083356, 0.4857050691332136, 0.45651492050715853, 0.4615431342806135, 0.472335798399789, 0.42579661096845356, 0.41000317675726755, 0.41162188564028057, 0.40613352400915964, 0.49287210191999165, 0.4105306693485805, 0.42522627115249634, 0.43547662666865755], "val_accuracy": [0.5490000247955322, 0.351666659116745, 0.6696666479110718, 0.6913333535194397, 0.7269999980926514, 0.737666666507721, 0.7393333315849304, 0.746666669845581, 0.7516666650772095, 0.7766666412353516, 0.762333333492279, 0.7796666622161865, 0.8009999990463257, 0.7796666622161865, 0.7953333258628845, 0.8059999942779541, 0.8226666450500488, 0.828000009059906, 0.8246666789054871, 0.7586666941642761, 0.8223333358764648, 0.8136666417121887, 0.8006666898727417]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 3, 2, 0, 5, 1, 1, 8, 5, 8, 9], [2, 2, 2, 2, 3, 2, 3, 0, 0, 3, 1, 0, 5, 0], [84, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [42, 57]], "fitness": -0.8165714144706726, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 7, 4, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.multiply(beta, tf.math.add(beta, tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.subtract(beta, beta)))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0250502843048124, 1.3535150361020158, 1.0981925749397705, 0.9073866359971187, 0.8164958960706721, 0.8084497552002425, 0.7331691633488256, 0.7356998799278941, 0.6823214328583473, 0.6835564687550895, 0.67094329865129, 0.6359737263993659, 0.6210818431396621, 0.6328592289078269, 0.6171568020570075, 0.583681612423524, 0.5749901432591722, 0.5874148974045786, 0.5821002852159358, 0.569814744099272, 0.5502746581495902, 0.5510815541033479, 0.5329438664925459, 0.5252263266900747, 0.5137098406512488, 0.522875230569944, 0.5085741697348435, 0.48504292532720933, 0.4748487897190703, 0.485952533443984, 0.505649765177709, 0.4858605377922252, 0.46184040320043973, 0.4619654125273582, 0.45120244420373035, 0.45735505416944056, 0.44894164985260077, 0.4477915102582739, 0.4344015193849963, 0.42757279320462915, 0.42480364314332975, 0.43591504145559773, 0.41933903292957125, 0.4110185144725745], "accuracy": [0.33020737767219543, 0.5321621894836426, 0.6131290197372437, 0.665830135345459, 0.6922467350959778, 0.696209192276001, 0.7252674698829651, 0.7177387475967407, 0.739928662776947, 0.7353057861328125, 0.7432307600975037, 0.7560427784919739, 0.7651565074920654, 0.7622507214546204, 0.763439416885376, 0.7878747582435608, 0.7825914621353149, 0.7714964747428894, 0.7775723338127136, 0.785629391670227, 0.7930260300636292, 0.7833839654922485, 0.7996301651000977, 0.8043851256370544, 0.8101968169212341, 0.8128384351730347, 0.813498854637146, 0.8198388814926147, 0.8249900937080383, 0.8187822103500366, 0.8166688680648804, 0.8215559124946594, 0.830669641494751, 0.828292191028595, 0.8366134166717529, 0.8297450542449951, 0.8330471515655518, 0.8329150676727295, 0.8408400416374207, 0.8428213000297546, 0.8412362933158875, 0.8359529972076416, 0.8510104417800903, 0.8461233377456665], "val_loss": [1.0974018914358956, 1.1082980632781982, 0.757913623537336, 0.6797818626676287, 0.5911719628742763, 0.5927438225064959, 0.6325088739395142, 0.5332430260522025, 0.542141284261431, 0.5424286297389439, 0.5061876262937274, 0.5136603968484061, 0.51084303855896, 0.5040852001735142, 0.4985825504575457, 0.49034156118120464, 0.504380294254848, 0.4771305663245065, 0.45617670672280447, 0.47590179102761404, 0.4520464965275356, 0.44276043346949984, 0.4525993892124721, 0.4512754849025181, 0.4734044756208147, 0.4593475375856672, 0.42497968673706055, 0.4169548068727766, 0.4184430411883763, 0.42759558132716585, 0.4288311260087149, 0.4011416605540684, 0.39657832043511526, 0.39185856921332224, 0.39521272693361553, 0.3843309368406023, 0.380392108644758, 0.3887270263263157, 0.3730832593781607, 0.3713714735848563, 0.3978214178766523, 0.3754131283078875, 0.3814385788781302, 0.38218080145972116], "val_accuracy": [0.5889999866485596, 0.5929999947547913, 0.6713333129882812, 0.7136666774749756, 0.7429999709129333, 0.7523333430290222, 0.7066666483879089, 0.7613333463668823, 0.7443333268165588, 0.7480000257492065, 0.7706666588783264, 0.7636666893959045, 0.7786666750907898, 0.7870000004768372, 0.7946666479110718, 0.7726666927337646, 0.7696666717529297, 0.7839999794960022, 0.7990000247955322, 0.7913333177566528, 0.7996666431427002, 0.8046666383743286, 0.7910000085830688, 0.7963333129882812, 0.7923333048820496, 0.7893333435058594, 0.8103333115577698, 0.8236666917800903, 0.8059999942779541, 0.812333345413208, 0.8109999895095825, 0.8259999752044678, 0.8293333053588867, 0.82833331823349, 0.8336666822433472, 0.82833331823349, 0.8293333053588867, 0.8330000042915344, 0.8393333554267883, 0.8376666903495789, 0.8246666789054871, 0.8343333601951599, 0.8343333601951599, 0.8379999995231628]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 5, 3, 2, 6, 5, 1, 1, 8, 5, 8, 9], [2, 2, 2, 2, 1, 2, 3, 0, 0, 3, 1, 0, 5, 0], [84, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [42, 57]], "fitness": -0.8151428699493408, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 9, 6, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), beta)), alpha)))))), tf.math.sqrt(beta)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0250529949738443, 1.3541197796318871, 1.096814776817884, 0.9017084804051714, 0.8204679231145489, 0.7843639842822425, 0.7649475397718518, 0.7296765511062057, 0.6838781448670854, 0.6807089703682313, 0.6696079022470892, 0.6406779959925791, 0.6251390919142459, 0.6295741101880162, 0.6191980013317042, 0.5849367032245071, 0.571664180257742, 0.5811817233415406, 0.5810407428945517, 0.5699504694965742, 0.557385622242643, 0.5367937202246402, 0.5263122552736419, 0.5368167700674303, 0.5077336525809983, 0.5188224714162281, 0.5153865284766063, 0.4820668880634965, 0.479032595277919, 0.4837244691873633, 0.5063374537077594, 0.4820165479888596, 0.46246937249141706, 0.45986595422741977, 0.46110388229173865, 0.4551969312713005, 0.4506780202433481, 0.44588443118473164, 0.43806227436233836, 0.4225901276317995, 0.4257738531903348, 0.4342454347423417, 0.4180691196634753, 0.41138397500247625, 0.41886121488486644, 0.4012922934293275, 0.39743492319804014, 0.3990548263412063, 0.40052338556417655, 0.39874867972696554, 0.3941776003024802, 0.3882292797064438, 0.3820819950980785, 0.38530372543940217, 0.3730296446953971, 0.3622414626229346, 0.3763586723801325, 0.3534076904041294, 0.3679614324556161, 0.3443125116866042, 0.3670998604156558, 0.3670410506005111, 0.3553319432086413, 0.3481989365212276, 0.34829231210199596, 0.34243766369285555, 0.3437164004618041, 0.3292896023649723, 0.3235592689055651, 0.31879652046004714, 0.34375614939884125, 0.3351851509719902, 0.31839072633066734, 0.32058928212737203, 0.30709832470178633, 0.3123453089022885, 0.31998490768416743], "accuracy": [0.33020737767219543, 0.5320301055908203, 0.6116761565208435, 0.6666226387023926, 0.6906617283821106, 0.7112666964530945, 0.709549605846405, 0.7210407853126526, 0.7417778372764587, 0.7368907928466797, 0.7464007139205933, 0.7526086568832397, 0.7642319202423096, 0.7630431652069092, 0.7625148296356201, 0.7853652238845825, 0.7837802171707153, 0.7740060687065125, 0.7778365015983582, 0.7881389260292053, 0.7868181467056274, 0.7930260300636292, 0.8087438941001892, 0.800818920135498, 0.8145555257797241, 0.8078193068504333, 0.8094043135643005, 0.8201030492782593, 0.8232730031013489, 0.8201030492782593, 0.8157442808151245, 0.8219521641731262, 0.8300092220306396, 0.8271034359931946, 0.8335754871368408, 0.8313300609588623, 0.8347642421722412, 0.8363492488861084, 0.8380662798881531, 0.8466516733169556, 0.8399154543876648, 0.835160493850708, 0.8510104417800903, 0.8470479249954224, 0.8432175517082214, 0.8520671129226685, 0.8527275323867798, 0.8495575189590454, 0.8519350290298462, 0.8518029451370239, 0.8560295701026917, 0.857218325138092, 0.8585391640663147, 0.8594637513160706, 0.8619733452796936, 0.8667283058166504, 0.863558292388916, 0.8721436858177185, 0.8639545440673828, 0.8758420348167419, 0.8581429123878479, 0.8669924736022949, 0.8730682730674744, 0.8712190985679626, 0.871879518032074, 0.8702945709228516, 0.8729361891746521, 0.8779553771018982, 0.8819178342819214, 0.8805969953536987, 0.8701624870300293, 0.8722757697105408, 0.8817857503890991, 0.8836349248886108, 0.8848236799240112, 0.8853520154953003, 0.8791441321372986], "val_loss": [1.0973142896379744, 1.110574551991054, 0.7620197364262172, 0.6697325876780919, 0.5965930393763951, 0.666222095489502, 0.6282585688999721, 0.5373134102140155, 0.5403492961611066, 0.5443598713193621, 0.5063080957957676, 0.5177710737500872, 0.5142081465039935, 0.5173309189932687, 0.5025122335978917, 0.48079846586499897, 0.45843144825526644, 0.47701617649623324, 0.45790088176727295, 0.47770111901419504, 0.4484738962990897, 0.44677843366350445, 0.4307169829096113, 0.4442986931119646, 0.46267145020621164, 0.4728657007217407, 0.4225006784711565, 0.4221713968685695, 0.4004647135734558, 0.42767915555409025, 0.4250869240079607, 0.40056792327335905, 0.3934564335005624, 0.39210481303078787, 0.39677137987954275, 0.38635304144450594, 0.3793357866150992, 0.38768185036523, 0.37296157223837717, 0.3742095913205828, 0.4030595506940569, 0.37591034173965454, 0.3800982577460153, 0.3793993081365313, 0.3753348844391959, 0.37352978331702097, 0.381615264075143, 0.3520954762186323, 0.4025155135563442, 0.3664089526448931, 0.35741994210651945, 0.35245655264173237, 0.3643343448638916, 0.37997221095221384, 0.3484950235911778, 0.37941042866025654, 0.34876103912081036, 0.34314215183258057, 0.3380912201745169, 0.35172683000564575, 0.3538029449326651, 0.356036765234811, 0.3412305882998875, 0.34225915159497944, 0.33588859864643644, 0.33115191970552715, 0.3311882870537894, 0.3578462771006993, 0.3269044416291373, 0.33769369976861136, 0.34831417458398, 0.34341907501220703, 0.3381835903440203, 0.3248171721185957, 0.3471626894814627, 0.335567695753915, 0.32755047934395926], "val_accuracy": [0.5896666646003723, 0.5889999866485596, 0.6723333597183228, 0.722000002861023, 0.7393333315849304, 0.7039999961853027, 0.7089999914169312, 0.7620000243186951, 0.7390000224113464, 0.7509999871253967, 0.765666663646698, 0.7573333382606506, 0.7723333239555359, 0.7649999856948853, 0.7870000004768372, 0.7806666493415833, 0.7933333516120911, 0.7823333144187927, 0.7983333468437195, 0.7926666736602783, 0.8053333163261414, 0.8036666512489319, 0.8059999942779541, 0.7993333339691162, 0.79666668176651, 0.7826666831970215, 0.8153333067893982, 0.8186666369438171, 0.8230000138282776, 0.8119999766349792, 0.8146666884422302, 0.8263333439826965, 0.8309999704360962, 0.831333339214325, 0.8256666660308838, 0.8256666660308838, 0.8326666951179504, 0.8339999914169312, 0.8376666903495789, 0.8366666436195374, 0.8246666789054871, 0.8346666693687439, 0.8370000123977661, 0.8399999737739563, 0.8346666693687439, 0.8309999704360962, 0.8296666741371155, 0.843999981880188, 0.812666654586792, 0.8360000252723694, 0.8453333377838135, 0.846666693687439, 0.8393333554267883, 0.8320000171661377, 0.8500000238418579, 0.831333339214325, 0.8513333201408386, 0.8486666679382324, 0.8526666760444641, 0.8399999737739563, 0.8519999980926514, 0.8486666679382324, 0.8493333458900452, 0.8529999852180481, 0.846666693687439, 0.8546666502952576, 0.8579999804496765, 0.8456666469573975, 0.8566666841506958, 0.8583333492279053, 0.8503333330154419, 0.8606666922569275, 0.8586666584014893, 0.859666645526886, 0.8486666679382324, 0.8533333539962769, 0.8576666712760925]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [3, 8, 1, 2, 5, 2, 1, 6, 6, 6, 8, 9, 2], [2, 2, 0, 2, 3, 2, 3, 0, 0, 3, 1, 0, 5, 0], [84, 18, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [42, 57]], "fitness": -0.8059999942779541, "mapping_values": [1, 1, 1, 0, 1, 0, 20, 20, 12, 8, 3, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.subtract(beta, tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.divide_no_nan(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(beta, beta), grad)), tf.math.add(beta, beta)), grad))))))))), tf.math.add(beta, tf.math.divide_no_nan(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.025050650482495, 1.3548396973325876, 1.0944907964889825, 0.8846798261174625, 0.8263480754466089, 0.7935986940446011, 0.7435115078625788, 0.7393268448738705, 0.6786144660637442, 0.6829407255505653, 0.6725927316800809, 0.6378389859731722, 0.6213484185246775, 0.6306871531535889, 0.6158208268319516, 0.584480231826363, 0.5705982292049581, 0.5823789922993622, 0.5762028771620763, 0.5766718519078805, 0.547750310993245, 0.5349084044239698, 0.5435426953194431, 0.5284860634753387, 0.5179576558554099, 0.5228448568507114], "accuracy": [0.33007529377937317, 0.531369686126709, 0.6120724081993103, 0.6753401160240173, 0.6857746839523315, 0.7098137736320496, 0.7197200059890747, 0.7150970697402954, 0.7427024245262146, 0.7349095344543457, 0.7434949278831482, 0.7560427784919739, 0.7646281719207764, 0.7622507214546204, 0.7650244235992432, 0.7860256433486938, 0.7833839654922485, 0.7763835787773132, 0.7810064554214478, 0.7857614755630493, 0.7942147850990295, 0.7975168228149414, 0.7947431206703186, 0.8020076751708984, 0.807158887386322, 0.8096684813499451], "val_loss": [1.0973691259111678, 1.0992130211421423, 0.7542304481778827, 0.6941068342753819, 0.5975341967173985, 0.6378464187894549, 0.6239994083132062, 0.5323721511023385, 0.539333871432713, 0.5469016517911639, 0.5061331135886056, 0.5133008446012225, 0.5107614142554147, 0.5015136514391217, 0.5028754813330514, 0.48074850014277865, 0.4566928318568638, 0.49812958921704975, 0.460980875151498, 0.46776054586683, 0.4454595702035086, 0.44615423679351807, 0.4545665809086391, 0.4607821362359183, 0.4652909551348005, 0.4583578620638166], "val_accuracy": [0.5896666646003723, 0.5903333425521851, 0.6713333129882812, 0.7003333568572998, 0.7419999837875366, 0.7136666774749756, 0.715666651725769, 0.7706666588783264, 0.7423333525657654, 0.753333330154419, 0.7706666588783264, 0.765999972820282, 0.7773333191871643, 0.7896666526794434, 0.7886666655540466, 0.7856666445732117, 0.7956666946411133, 0.7696666717529297, 0.7963333129882812, 0.7910000085830688, 0.8073333501815796, 0.8003333210945129, 0.7883333563804626, 0.7866666913032532, 0.7946666479110718, 0.7883333563804626]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 9, 1, 2, 5, 2, 1, 6, 6, 6, 8, 9, 2, 4], [2, 1, 2, 2, 2, 2, 3, 0, 2, 3, 1, 0, 5, 0], [84, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [42, 57]], "fitness": -0.7417142987251282, "mapping_values": [1, 1, 1, 0, 1, 0, 23, 23, 14, 9, 3, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(alpha, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(beta, beta)), beta), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.pow(beta, grad)))))), tf.math.add(beta, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), beta))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.035232079736057, 1.4909107957014145, 1.008212014770999, 0.8879703926750383, 0.8432288522166724, 0.7846466671631651, 0.7467928717810606, 0.7453950649916362, 0.6891656712439586, 0.6834456178222775], "accuracy": [0.3241315484046936, 0.4900277256965637, 0.6444327235221863, 0.6675472259521484, 0.6799629926681519, 0.7003037929534912, 0.7186633348464966, 0.7185312509536743, 0.7353057861328125, 0.7364945411682129], "val_loss": [1.2386712687356132, 0.8652771200452533, 0.6657156944274902, 0.6734462124960763, 0.6059917722429548, 0.6338869503566197, 0.6070703097752163, 0.5674831015723092, 0.5918510981968471, 0.6010231801441738], "val_accuracy": [0.5076666474342346, 0.6786666512489319, 0.7049999833106995, 0.7026666402816772, 0.7383333444595337, 0.7149999737739563, 0.734000027179718, 0.7279999852180481, 0.718666672706604, 0.7279999852180481]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [2, 5, 3, 8, 0, 5, 2, 1, 8, 5, 8, 9], [2, 2, 2, 2, 3, 2, 3, 0, 0, 3, 1, 0, 5, 0], [84, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [42, 57]], "fitness": -0.6700000166893005, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 9, 5, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.square(tf.math.multiply(beta, tf.math.sqrt(beta))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.add(tf.math.subtract(beta, tf.math.sqrt(tf.math.add(beta, beta))), tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9477252042241588, 1.4419422427251622, 0.9393078500584305, 0.7775351238792378, 0.7859415804327377, 0.7235575090183983, 0.7138825569957743, 0.7060269337950004, 0.696963472018987, 0.6932600343452547, 0.7251460799892517, 0.831816253652977, 0.872573695556284, 0.940963579537358], "accuracy": [0.36045435070991516, 0.5042926669120789, 0.6498481035232544, 0.7086250185966492, 0.7024171352386475, 0.7263241410255432, 0.7223616242408752, 0.7277770638465881, 0.7333245277404785, 0.7432307600975037, 0.7302865982055664, 0.7038700580596924, 0.6968696117401123, 0.6903975605964661], "val_loss": [1.2776006971086775, 0.7660708427429199, 0.591829742704119, 0.56112083366939, 0.5802252803530011, 0.5415886129651751, 0.5197672503335136, 0.5357459613255092, 0.5386298554284232, 0.56158675466265, 0.6138824394771031, 0.6563106775283813, 0.7437075206211635, 0.6536489384514945], "val_accuracy": [0.5789999961853027, 0.6439999938011169, 0.734666645526886, 0.7523333430290222, 0.7556666731834412, 0.7666666507720947, 0.762333333492279, 0.7680000066757202, 0.7730000019073486, 0.7553333044052124, 0.7553333044052124, 0.7630000114440918, 0.7693333625793457, 0.734666645526886]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 2, 3, 2, 5, 5, 1, 6, 2, 5, 8, 9], [2, 2, 2, 2, 3, 3, 3, 0, 0, 3, 1, 0, 5, 0], [84, 47, 79, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [0, 0, 1, 0, 0, 1], [2, 3, 9, 9, 7], [1, 0], [88, 40], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [42, 57]], "fitness": -0.22714285552501678, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 4, 3, 1, 1, 2, 1, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.281227619892665, 2.251582700058989, 2.188903328355561, 2.309996877726216, 2.303416202474878, 2.2987686581284756, 2.282330499774256, 2.39332475691833, 2.2289234005370395, 2.231434501566828, 2.3064928548588903], "accuracy": [0.18702945113182068, 0.16232994198799133, 0.19693566858768463, 0.09694888442754745, 0.09826971590518951, 0.10936468094587326, 0.16972659528255463, 0.1880861222743988, 0.15414080023765564, 0.1702549159526825, 0.1014397069811821], "val_loss": [1.9125910486493791, 1.9627663067408971, 1.9889904430934362, 1.9746625764029366, 1.9728311811174666, 1.9256350653512138, 1.8855419840131487, 1.9659783499581474, 1.6891848700387138, 1.9776288441249303, 1.974240779876709], "val_accuracy": [0.2796666622161865, 0.10400000214576721, 0.10466666519641876, 0.09833333641290665, 0.1303333342075348, 0.3086666762828827, 0.20000000298023224, 0.18266665935516357, 0.23666666448116302, 0.09799999743700027, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [2, 5, 3, 2, 0, 5, 1, 1, 8, 5, 8, 9], [2, 2, 2, 2, 3, 2, 3, 0, 0, 3, 1, 0, 5, 0], [84, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [82, 57]], "fitness": -0.21942856907844543, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 8, 6, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.square(tf.math.multiply(beta, tf.math.add(beta, tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.subtract(beta, beta))))))))), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2812293397437124, 2.2502884792377764, 2.5940201868549266, 2.3315052408914463, 2.304427133748371, 2.3036373343056438], "accuracy": [0.1868973672389984, 0.16180160641670227, 0.21714437007904053, 0.09628847241401672, 0.10394927859306335, 0.09813763201236725], "val_loss": [1.9129502432686942, 1.9633203915187292, 2.1010057585580006, 1.9763157708304269, 1.9741732733590263, 1.973703111921038], "val_accuracy": [0.2826666533946991, 0.10300000011920929, 0.10366666316986084, 0.09833333641290665, 0.09799999743700027, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 3, 3, 0, 5, 1, 1, 8, 5, 8, 9], [2, 2, 2, 2, 3, 2, 3, 0, 0, 3, 1, 0, 5, 0], [84, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [42, 57]], "fitness": -0.2191428542137146, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 7, 4, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(beta, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, beta))))))))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2812829964574397, 2.576654146155661, 2.2879827441698084, 2.3914647429547746, 2.1820897097128444, 2.3057257279806826], "accuracy": [0.18676528334617615, 0.2254655957221985, 0.12600713968276978, 0.19112402200698853, 0.1904636174440384, 0.09721305221319199], "val_loss": [1.9106168746948242, 1.9748212269374303, 2.5006103515625, 2.041965961456299, 1.9774185589381628, 1.9736551557268416], "val_accuracy": [0.34200000762939453, 0.09966666996479034, 0.10700000077486038, 0.11266666650772095, 0.10366666316986084, 0.10333333164453506]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1], [8, 5, 3, 2, 0, 2, 1, 1, 8, 5, 8, 9], [2, 2, 2, 2, 3, 2, 3, 0, 0, 3, 1, 0, 5, 0], [84, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 9, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [42, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 2, 0, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [7264984.840854297, 139010471.10500595, 648506843.41408, 1810045011.8906353, 3848776538.518029, 7111213543.722097], "accuracy": [0.10038304328918457, 0.10540219396352768, 0.10210011899471283, 0.09721305221319199, 0.10077928751707077, 0.09840179979801178], "val_loss": [28138105.14285714, 224727401.14285713, 758036041.1428572, 1796330130.2857144, 3507878985.142857, 6060947309.714286], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 5, 3, 2, 0, 5, 1, 1, 9, 5, 8, 9], [0, 3, 3, 0, 2, 3, 3, 4, 0, 0, 4, 3, 5], [84, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [42, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 14, 14, 10, 4, 3, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.square(tf.math.multiply(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.subtract(grad, tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.add(beta, grad))))))), tf.math.add(beta, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 4, 4, 2, 5, 5, 1, 6, 2, 5, 8, 9, 4], [1, 3, 3, 0, 2, 3, 3, 4, 0, 0, 4, 3, 5], [84, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [0, 2, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 13, 8, 2, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.math.square(grad), tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.square(grad), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))))), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))))))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.pow(grad, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 2, 3, 2, 5, 5, 1, 6, 2, 5, 8, 9], [2, 2, 2, 2, 3, 3, 3, 0, 0, 3, 1, 0, 5, 0], [84, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [42, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 1, 2, 5, 1, 1, 4, 6, 6, 8, 9, 2], [0, 3, 0, 3, 0, 2, 3, 4, 3, 0, 1, 0, 5], [53, 18, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 4, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 20, 20, 12, 8, 4, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.subtract(tf.math.add(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.square(grad), tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.pow(tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))))))))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09813763201236725, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 9, 3, 6, 9, 5, 1, 6, 2, 5, 8, 9], [1, 3, 3, 0, 2, 3, 3, 4, 0, 0, 4, 3, 5], [84, 62, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [97, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.multiply(alpha, tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.negative(tf.math.pow(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [50570913236.3519, 7720245410310.019, 132033539233735.47, 936587277131333.5, 4091598617238334.5, 1.3622503611507178e+16], "accuracy": [0.10038304328918457, 0.10527011007070541, 0.10210011899471283, 0.09721305221319199, 0.1010434553027153, 0.09813763201236725], "val_loss": [436068108580.5714, 23508154169051.43, 252322809493211.44, 1375604358550089.2, 5152196750774857.0, 1.5196466785175844e+16], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 2, 3, 2, 5, 5, 1, 6, 2, 5, 8, 9], [2, 2, 2, 2, 3, 3, 3, 0, 0, 3, 1, 0, 5, 0], [84, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 5], [88, 19], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [0, 2, 0, 2, 3, 3, 2], [42, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [7264984.840854297, 139010471.10500595, 648506843.41408, 1810045011.8906353, 3848776538.518029, 7111213543.722097], "accuracy": [0.10038304328918457, 0.10540219396352768, 0.10210011899471283, 0.09721305221319199, 0.10077928751707077, 0.09840179979801178], "val_loss": [28138105.14285714, 224727401.14285713, 758036041.1428572, 1796330130.2857144, 3507878985.142857, 6060947309.714286], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 2, 3, 2, 0, 5, 9, 6, 2, 5, 8, 9], [1, 3, 3, 0, 2, 3, 3, 4, 0, 0, 4, 3, 5], [84, 79, 79, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [0, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 9, 6, 2, 7, 6, 4, 2, 2, 4, 2, 2, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), beta), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), sigma)))), tf.math.add(sigma, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [36404667.487548925, 697433428.2287676, 3254819788.874389, 9085973966.294544, 19321633941.4545, 35701754985.36204], "accuracy": [0.10038304328918457, 0.10540219396352768, 0.10210011899471283, 0.09721305221319199, 0.10077928751707077, 0.09840179979801178], "val_loss": [141105696.0, 1127751168.0, 3804934070.857143, 9017662902.857143, 17610963821.714287, 30429777920.0], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 2, 3, 2, 5, 5, 1, 2, 2, 9, 8, 9, 8, 6, 1], [0, 3, 0, 3, 0, 2, 3, 4, 2, 0, 1, 0, 5], [84, 18, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 3, 0, 2, 3, 3, 2], [9, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 23, 23, 15, 8, 5, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.square(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.math.add(beta, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), beta))))))), tf.math.add(beta, grad))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, sigma))", "other_info": {"loss": [2.303227113899601, 2.302630038702918, 2.3025026977369265, 2.3036752368764257, 2.301711231316589, 2.3034417513040046], "accuracy": [0.0874389111995697, 0.09272222965955734, 0.09721305221319199, 0.08651433140039444, 0.09126931428909302, 0.09457138925790787], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 1, 2, 5, 2, 1, 6, 6, 6, 8, 2, 2], [2, 2, 2, 2, 3, 2, 3, 3, 0, 3, 1, 0, 5, 0], [84, 16, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [42, 57]], "fitness": -0.036571428179740906, "mapping_values": [1, 1, 1, 0, 1, 0, 22, 22, 12, 10, 1, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.subtract(beta, tf.math.add(tf.math.square(beta), tf.math.add(tf.math.subtract(tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, grad)))), beta), tf.math.add(beta, tf.math.sqrt(grad))), tf.math.add(grad, tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.square(alpha), tf.math.pow(tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.303358403147802, 2.303105525084931, 2.3033333886584524, 2.3050178550631535, 2.303270741822839, 2.3057718762569204], "accuracy": [0.0874389111995697, 0.09272222965955734, 0.09576013684272766, 0.08308017253875732, 0.08889182657003403, 0.09298639744520187], "val_loss": [1.9714881352015905, 1.9717833655221122, 1.9720401082720076, 1.9723902429853166, 1.9726698057992118, 1.973100253513881], "val_accuracy": [0.03733333200216293, 0.03700000047683716, 0.03533333167433739, 0.03400000184774399, 0.03099999949336052, 0.02866666577756405]}}]