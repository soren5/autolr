[{"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7960000038146973, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.342517057792181, 2.1736556298665684, 2.1808924979506044, 2.3313661800982097, 1.9557680664218695, 2.3052519189683185, 2.3008271981192587, 2.2268770819626087, 2.0823331109095937, 1.907308681246438, 1.3466622941702773, 1.2261213392172792, 0.9791511267309475, 0.9343706736979058, 0.9240749073129336, 0.8182269567275611, 0.7962010272064733, 0.7468372990961922, 0.6902430884794961, 0.6946354048394761, 0.6590191703493947, 0.6535053383940326, 0.5913196519349844, 0.6254199543775206, 0.566618077538631, 0.6002342665688299, 0.5310877022678984, 0.5306225119328628, 0.5312323691570653, 0.5114688777282742, 0.506353066428431, 0.4868860213653586, 0.4721957666998951, 0.47564226962461637, 0.5202142849432684, 0.4473651240270655], "accuracy": [0.2071060687303543, 0.21120063960552216, 0.22203142940998077, 0.18016114830970764, 0.3205653131008148, 0.10117553919553757, 0.11795007437467575, 0.21159687638282776, 0.30458328127861023, 0.3669264316558838, 0.5624092221260071, 0.5946374535560608, 0.6650376319885254, 0.6742834448814392, 0.6775855422019958, 0.7014925479888916, 0.7053229212760925, 0.7150970697402954, 0.7360982894897461, 0.7312111854553223, 0.7523444890975952, 0.7567031979560852, 0.7692511081695557, 0.7601373791694641, 0.7773081660270691, 0.7693831920623779, 0.7965922355651855, 0.7948752045631409, 0.7961959838867188, 0.7989697456359863, 0.8039889335632324, 0.8098005652427673, 0.8153480291366577, 0.8191784620285034, 0.8025360107421875, 0.8318583965301514], "val_loss": [1.9659716742379325, 1.547118868146624, 2.0425531523568288, 1.4232016972133092, 1.9761360032217843, 1.973489761352539, 1.9587945256914412, 1.6778336252485002, 1.3079520634242467, 1.3033152988978796, 0.7743237018585205, 0.8151987109865461, 0.7341608319963727, 0.6927774293082101, 0.6339391810553414, 0.6423772743770054, 0.5172037737710136, 0.5261051995413644, 0.5235887595585415, 0.4715454067502703, 0.5071509054728917, 0.4631636313029698, 0.5364511183329991, 0.44187324387686594, 0.45530378818511963, 0.41151732206344604, 0.42281653199877056, 0.4546345983232771, 0.4209311008453369, 0.4199902244976589, 0.39395759786878315, 0.41091915539332796, 0.3994348134313311, 0.43064154045922415, 0.41939770323889597, 0.40414481503622873], "val_accuracy": [0.09933333098888397, 0.3853333294391632, 0.18566666543483734, 0.47699999809265137, 0.1003333330154419, 0.1003333330154419, 0.2626666724681854, 0.2893333435058594, 0.5133333206176758, 0.4793333411216736, 0.6923333406448364, 0.6786666512489319, 0.7076666951179504, 0.7173333168029785, 0.7070000171661377, 0.6993333101272583, 0.7566666603088379, 0.7570000290870667, 0.7776666879653931, 0.7963333129882812, 0.7823333144187927, 0.7946666479110718, 0.7419999837875366, 0.7990000247955322, 0.7976666688919067, 0.8140000104904175, 0.8246666789054871, 0.7929999828338623, 0.8153333067893982, 0.8059999942779541, 0.8393333554267883, 0.8263333439826965, 0.8326666951179504, 0.8196666836738586, 0.8153333067893982, 0.8363333344459534]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7911428809165955, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.292606941256399, 2.2655064259474824, 2.2360463265524944, 2.196005591375008, 2.1433876772220377, 2.0720582172115165, 1.9760430243037017, 1.8575703722532195, 1.729215248905515, 1.5962368024574878, 1.4797709888360755, 1.383191912401905, 1.3060349348498026, 1.2412648172017022, 1.1865143093529347, 1.1322844794649631, 1.1025620538167131, 1.069074451679315, 1.0292528628074828, 1.007986617291435, 0.9834707531206612, 0.9654352996390588, 0.9396469854817273, 0.934049183634908, 0.9025107047041693, 0.9018972027319109, 0.8841292785064593, 0.8706177713423515, 0.8606731087272477, 0.8509629457271835, 0.8435041866030408, 0.8276967079081099, 0.8224628121310285, 0.8212331660183397, 0.8146648477364872, 0.7997236650271297, 0.8013436250588394, 0.7920888968903422, 0.7878807775490256, 0.7774718036473373, 0.7722246383852286, 0.759836878672315, 0.7617536950908113, 0.7641580467761988, 0.7541192733474679, 0.7431180553822989, 0.7413412243100268, 0.7389432011641343, 0.7317741227156261, 0.7246613548085705, 0.7234619273611614, 0.7229988903354392, 0.7260894179501632, 0.7174747218907455, 0.7125766292507654, 0.7090121618256892, 0.7056870476177041, 0.7094709081908637, 0.7042686711795546, 0.6966817498506257, 0.7056652501416386, 0.6867382220619815, 0.687295311886983, 0.6840949679850713, 0.6865553198363314, 0.683008637402776, 0.6835595904214113, 0.6775663741087444, 0.665419248919902, 0.6757388037933634, 0.6672439568660924, 0.6763612724503096], "accuracy": [0.11596883088350296, 0.1896711140871048, 0.24580636620521545, 0.3144895136356354, 0.3435477614402771, 0.3821159601211548, 0.42108044028282166, 0.4434024691581726, 0.47166821360588074, 0.5033681392669678, 0.5205389261245728, 0.5386342406272888, 0.5591071248054504, 0.5773345828056335, 0.5886936783790588, 0.6077136397361755, 0.6174877882003784, 0.6252806782722473, 0.6353189945220947, 0.6419231295585632, 0.6514331102371216, 0.6571126580238342, 0.6684718132019043, 0.6670188903808594, 0.677189290523529, 0.6778497099876404, 0.6816800832748413, 0.6882842183113098, 0.6900013089179993, 0.6917183995246887, 0.6964733600616455, 0.7033417224884033, 0.7008321285247803, 0.7042662501335144, 0.7054550051689148, 0.7100779414176941, 0.7111346125602722, 0.7120591998100281, 0.7170783281326294, 0.7096816897392273, 0.7161537408828735, 0.7185312509536743, 0.7170783281326294, 0.7180029153823853, 0.7231541275978088, 0.7252674698829651, 0.7290979027748108, 0.7294940948486328, 0.7318716049194336, 0.7331924438476562, 0.7316074371337891, 0.7353057861328125, 0.7288337349891663, 0.7312111854553223, 0.733060359954834, 0.7384757399559021, 0.7375511527061462, 0.737947404384613, 0.7387399077415466, 0.7403249144554138, 0.7349095344543457, 0.7465327978134155, 0.7404569983482361, 0.7454761862754822, 0.7471932172775269, 0.7465327978134155, 0.7405890822410583, 0.7515519857406616, 0.7530049085617065, 0.7511557340621948, 0.748249888420105, 0.7495707273483276], "val_loss": [1.9468344960893904, 1.9207076345171248, 1.8889109747750419, 1.8453821454729353, 1.7859659876142229, 1.705728190285819, 1.6011393410818917, 1.4765956401824951, 1.3448521069117956, 1.2165825026375907, 1.1066695962633406, 1.019671882901873, 0.9499408858163017, 0.8954984801156181, 0.8520275865282331, 0.8162380116326469, 0.7861793892724174, 0.7617342301777431, 0.7404408795492989, 0.7250805922916957, 0.707769342831203, 0.6940281561442784, 0.6826035976409912, 0.6731971332005092, 0.6616953951971871, 0.6512575149536133, 0.6440297535487584, 0.6355346952165876, 0.6288318463734218, 0.6241745267595563, 0.6179137229919434, 0.6100388595036098, 0.6049465451921735, 0.601468665259225, 0.5960893290383475, 0.5904915503093174, 0.5873141629355294, 0.5839665446962629, 0.5783791371754238, 0.5756039449146816, 0.5753809894834246, 0.5687350034713745, 0.5665258509772164, 0.5634632962090629, 0.560293163572039, 0.5556658336094448, 0.5549417904445103, 0.5510345016207013, 0.5477675540106637, 0.5478082043784005, 0.5434604712894985, 0.5409042154039655, 0.5403423649924142, 0.5387165205819267, 0.536058749471392, 0.5319902726582119, 0.5305770976202828, 0.52884612764631, 0.5274872268949237, 0.5259546892983573, 0.5230011599404472, 0.5209911891392299, 0.5197201115744454, 0.5158442088535854, 0.5155593838010516, 0.5136850731713432, 0.5121149165289742, 0.5118376868111747, 0.5090464183262416, 0.5102562734058925, 0.5066981485911778, 0.5057056971958706], "val_accuracy": [0.23466666042804718, 0.36399999260902405, 0.4020000100135803, 0.4313333332538605, 0.4866666793823242, 0.5203333497047424, 0.5416666865348816, 0.5616666674613953, 0.5849999785423279, 0.606333315372467, 0.6359999775886536, 0.6480000019073486, 0.6700000166893005, 0.6703333258628845, 0.6830000281333923, 0.6819999814033508, 0.6949999928474426, 0.6983333230018616, 0.7003333568572998, 0.6993333101272583, 0.7113333344459534, 0.7133333086967468, 0.7226666808128357, 0.7213333249092102, 0.7229999899864197, 0.7286666631698608, 0.7306666374206543, 0.7303333282470703, 0.737333357334137, 0.731333315372467, 0.7393333315849304, 0.7393333315849304, 0.7416666746139526, 0.7383333444595337, 0.7446666955947876, 0.7463333606719971, 0.7493333220481873, 0.7473333477973938, 0.7553333044052124, 0.7566666603088379, 0.7516666650772095, 0.7556666731834412, 0.7526666522026062, 0.7566666603088379, 0.7593333125114441, 0.7643333077430725, 0.7646666765213013, 0.765999972820282, 0.7636666893959045, 0.7689999938011169, 0.765999972820282, 0.765666663646698, 0.7699999809265137, 0.7670000195503235, 0.7676666378974915, 0.7693333625793457, 0.7689999938011169, 0.7749999761581421, 0.7723333239555359, 0.7683333158493042, 0.7733333110809326, 0.7736666798591614, 0.7753333449363708, 0.7766666412353516, 0.7760000228881836, 0.7749999761581421, 0.7793333530426025, 0.7743333578109741, 0.7770000100135803, 0.7766666412353516, 0.778333306312561, 0.777999997138977]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7908571362495422, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.292606972747428, 2.2655064259474824, 2.236046439006958, 2.1960062751397165, 2.1433895350982644, 2.0720601514849792, 1.9760460002531606, 1.8575762359142745, 1.7292242658577575, 1.596253498371141, 1.4797819517606978, 1.3832067648464772, 1.306042719558088, 1.2412754523676968, 1.1865263815805378, 1.13229077049077, 1.1026013758928548, 1.0691384997869826, 1.0292694742307058, 1.0079768471367654, 0.9835293251588565, 0.9655221064392098, 0.9396953335637823, 0.9341687377669697, 0.9025429249234943, 0.9019045857327599, 0.8842683153192774, 0.871011714263914, 0.8608092061753098, 0.8512987290957915, 0.8436442562350035, 0.8276908597248955, 0.8224300097370538, 0.8212994182224775, 0.8147417011356719, 0.7996776008004478, 0.8014050345883126, 0.7921295280170605, 0.787900050672731, 0.7774530953782157, 0.7721831140705875, 0.7597972056758937, 0.7617910795554415, 0.7641813108209669, 0.7541020421571798, 0.7431602283806423, 0.741426514612449, 0.7390991543829165, 0.7318784177909516, 0.7247197588027634, 0.7234487734718282, 0.7230002325775601, 0.7261485492060481, 0.7175599731757829, 0.7125513171869388, 0.7089186051360777, 0.7056689622490051, 0.7094910738018163, 0.704333061090849, 0.6965724953712646, 0.7057648843085178, 0.6867812470186183, 0.6873298409813037, 0.6841217262429049, 0.6866051349988184, 0.682975008180349, 0.6837446677560395, 0.6773422624866141, 0.6655451133030438, 0.67572831191155, 0.6672826260702249, 0.6763121193079759], "accuracy": [0.11596883088350296, 0.1896711140871048, 0.24580636620521545, 0.3144895136356354, 0.34341567754745483, 0.3819838762283325, 0.4212125241756439, 0.44327038526535034, 0.47166821360588074, 0.5033681392669678, 0.5209351181983948, 0.5387663245201111, 0.5589750409126282, 0.5772024989128113, 0.5888257622718811, 0.6079778075218201, 0.6170915365219116, 0.6252806782722473, 0.6350548267364502, 0.641791045665741, 0.6515651941299438, 0.657508909702301, 0.668339729309082, 0.6668868064880371, 0.677189290523529, 0.6773213744163513, 0.6816800832748413, 0.6881521344184875, 0.6896050572395325, 0.6906617283821106, 0.695813000202179, 0.7036058902740479, 0.6993792057037354, 0.7040021419525146, 0.705058753490448, 0.7103421092033386, 0.7112666964530945, 0.7119271159172058, 0.7164179086685181, 0.7096816897392273, 0.7156254053115845, 0.7181349992752075, 0.7161537408828735, 0.717870831489563, 0.7234182953834534, 0.7256637215614319, 0.7292299270629883, 0.7300224304199219, 0.7316074371337891, 0.733588695526123, 0.7316074371337891, 0.7354378700256348, 0.7283053994178772, 0.7304186820983887, 0.7326641082763672, 0.7383436560630798, 0.7367587089538574, 0.7383436560630798, 0.7384757399559021, 0.7407211661338806, 0.735041618347168, 0.7471932172775269, 0.7407211661338806, 0.7449478507041931, 0.7470611333847046, 0.7464007139205933, 0.7400607466697693, 0.7514199018478394, 0.7526086568832397, 0.7516840696334839, 0.7483819723129272, 0.750231146812439], "val_loss": [1.9468344960893904, 1.9207076345171248, 1.888911315373012, 1.8453823498317175, 1.7859674862452917, 1.7057308128901891, 1.6011438369750977, 1.4766077995300293, 1.34487019266401, 1.2165983404432024, 1.1066969122205461, 1.019683769771031, 0.949958324432373, 0.8955443246023995, 0.8520701783043998, 0.8162599802017212, 0.7861584254673549, 0.7617449249540057, 0.7404999222074237, 0.7251180580684117, 0.7077776363917759, 0.6940238135201591, 0.6826442650386265, 0.6732498066765922, 0.6617960248674665, 0.6513784953526088, 0.644432817186628, 0.6357733181544712, 0.6289972237178257, 0.6241932255881173, 0.6179116283144269, 0.6101386036191668, 0.6050360883985247, 0.6014583281108311, 0.5962110928126744, 0.5904335124152047, 0.5872387715748378, 0.5838279213224139, 0.5782958609717233, 0.5755284173148019, 0.575291531426566, 0.5686912196023124, 0.5665198564529419, 0.5634876659938267, 0.5602434022086007, 0.5556381259645734, 0.5549323899405343, 0.551073431968689, 0.5477661575589862, 0.5477559566497803, 0.5434837000710624, 0.5409057310649327, 0.540478093283517, 0.5385766880852836, 0.536056467464992, 0.5320443596158709, 0.5305456604276385, 0.5288064309528896, 0.5274249826158796, 0.5258550643920898, 0.5228902782712664, 0.5210422107151577, 0.5197396959577288, 0.5158907856260028, 0.515658974647522, 0.513723509652274, 0.5120667900357928, 0.5117349113736834, 0.508960485458374, 0.5101561035428729, 0.5064608028956822, 0.5056384631565639], "val_accuracy": [0.23466666042804718, 0.36399999260902405, 0.4020000100135803, 0.4313333332538605, 0.4866666793823242, 0.5206666588783264, 0.5416666865348816, 0.5616666674613953, 0.5849999785423279, 0.6066666841506958, 0.6359999775886536, 0.6476666927337646, 0.6696666479110718, 0.6703333258628845, 0.6830000281333923, 0.6819999814033508, 0.6949999928474426, 0.6983333230018616, 0.6996666789054871, 0.6993333101272583, 0.7123333215713501, 0.7123333215713501, 0.722000002861023, 0.7210000157356262, 0.722000002861023, 0.7286666631698608, 0.7300000190734863, 0.7306666374206543, 0.737333357334137, 0.731333315372467, 0.7396666407585144, 0.7390000224113464, 0.7416666746139526, 0.7386666536331177, 0.7440000176429749, 0.7453333139419556, 0.7486666440963745, 0.7476666569709778, 0.7559999823570251, 0.7563333511352539, 0.7516666650772095, 0.7559999823570251, 0.753000020980835, 0.7566666603088379, 0.7596666812896729, 0.7639999985694885, 0.7643333077430725, 0.765999972820282, 0.7636666893959045, 0.7689999938011169, 0.765333354473114, 0.765666663646698, 0.7696666717529297, 0.7670000195503235, 0.7670000195503235, 0.7693333625793457, 0.7683333158493042, 0.7739999890327454, 0.7720000147819519, 0.7680000066757202, 0.7730000019073486, 0.7730000019073486, 0.7749999761581421, 0.7763333320617676, 0.7760000228881836, 0.7749999761581421, 0.7789999842643738, 0.7753333449363708, 0.7766666412353516, 0.7776666879653931, 0.7789999842643738, 0.7776666879653931]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [9, 57]], "fitness": -0.732285737991333, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3027423883331544, 2.2978020196483118, 2.2893084131605383, 2.2750653774038265, 2.2575246733193226, 2.2368265983529647, 2.210767576140561, 2.1765128971012184, 2.13587459732497, 2.078675072474361, 2.0075959263067076, 1.9146592696707214, 1.8003996862412255, 1.6793859485527465, 1.5647524060700406, 1.4662209074369055, 1.4199621142681011, 1.3773560744424018, 1.3590499447982671, 1.3754443267490477, 1.3673103004477485, 1.3241429284988473, 1.224420630117811, 1.178048494044485, 1.0631499399897633, 0.9987870054064867, 0.9384302129488516, 0.9157350095995918, 0.8944190099585436, 0.8983644563224983, 0.9021857345911962, 0.9082390335273466, 0.9014274243665424, 0.8902511025668608, 0.8634914291328553, 0.8389014107613216], "accuracy": [0.09060890227556229, 0.10566636174917221, 0.12376172095537186, 0.17117950320243835, 0.20974771678447723, 0.2534671723842621, 0.2981112003326416, 0.33839651942253113, 0.35781270265579224, 0.3867388665676117, 0.3933430314064026, 0.41104212403297424, 0.43309998512268066, 0.45264825224876404, 0.4679698944091797, 0.49465063214302063, 0.5069343447685242, 0.5217276215553284, 0.5415400862693787, 0.5451063513755798, 0.5461629629135132, 0.5768062472343445, 0.6062607169151306, 0.6145819425582886, 0.6427156329154968, 0.6404702067375183, 0.6515651941299438, 0.6567164063453674, 0.6631884574890137, 0.6666226387023926, 0.672170102596283, 0.6725663542747498, 0.6794346570968628, 0.6795667409896851, 0.6839255094528198, 0.6844538450241089], "val_loss": [1.9687989098685128, 1.9620706694466727, 1.9513177190508162, 1.9369794981820243, 1.9192567552839006, 1.897970131465367, 1.8717218807765417, 1.8375550678798132, 1.7919344220842635, 1.7310169764927454, 1.6505121503557478, 1.5474160739353724, 1.4234460762568883, 1.2881685665675573, 1.1584940637860979, 1.0471532344818115, 0.9569253921508789, 0.8852813925061908, 0.8365227154323033, 0.8208521774836949, 0.7984084231512887, 0.7611141715730939, 0.752842937197004, 0.7432527882712228, 0.7091644321169172, 0.6744498525347028, 0.6670080253056118, 0.6725439855030605, 0.6772139242717198, 0.6858693701880318, 0.6988252741949899, 0.7055495296205793, 0.6973980835505894, 0.6764263766152518, 0.6523780822753906, 0.6339742456163678], "val_accuracy": [0.05533333495259285, 0.09666666388511658, 0.19966666400432587, 0.31200000643730164, 0.3513333201408386, 0.3700000047683716, 0.39133334159851074, 0.4156666696071625, 0.4333333373069763, 0.4566666781902313, 0.4763333201408386, 0.5099999904632568, 0.5423333048820496, 0.5690000057220459, 0.5896666646003723, 0.6256666779518127, 0.6470000147819519, 0.6606666445732117, 0.6679999828338623, 0.6513333320617676, 0.6613333225250244, 0.6826666593551636, 0.6833333373069763, 0.6903333067893982, 0.6976666450500488, 0.7053333520889282, 0.7146666646003723, 0.7073333263397217, 0.7086666822433472, 0.7179999947547913, 0.7279999852180481, 0.7229999899864197, 0.7246666550636292, 0.7233333587646484, 0.7250000238418579, 0.7250000238418579]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7179999947547913, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.273635152119687, 2.0226195412478223, 1.4581461318212179, 1.1502650249761723, 0.9230560893474584, 0.8295330998132635, 0.8186648040006126, 0.7564392408532962, 0.7339240504356659, 0.7132150619619826, 0.7071934816560504, 0.6626049687817994, 0.6361230099914474, 0.6099716457062866, 0.5847056483186357, 0.5847957879639478, 0.5588609958762554, 0.5578732958653694, 0.5298794582141719, 0.5214349386982079, 0.5052352677860973, 0.4998078470681369, 0.4954740396186487, 0.48694237784041294, 0.4789115529310088, 0.46968215277260794, 0.4639812459791058, 0.45211264988245853, 0.44805333772906697, 0.43027725671701555, 0.437982418950932, 0.43124255787553156, 0.41258723697862637, 0.40250508574021726, 0.39525548113319836, 0.3970027348510562, 0.3897413023395813, 0.3829255279312517, 0.375398396772558, 0.3767796464844025, 0.3666954886770015, 0.3515947290407495, 0.36250827125019136, 0.34540795579231837, 0.35072219837469243, 0.346845874889825, 0.339605736053064, 0.3350386125079991], "accuracy": [0.17144367098808289, 0.387399286031723, 0.4982168674468994, 0.6111478209495544, 0.6592260003089905, 0.6905296444892883, 0.6902654767036438, 0.7086250185966492, 0.7201162576675415, 0.7316074371337891, 0.7325320243835449, 0.739400327205658, 0.7605336308479309, 0.7671377658843994, 0.7692511081695557, 0.7810064554214478, 0.7812706232070923, 0.7862898111343384, 0.7951393723487854, 0.7964601516723633, 0.7965922355651855, 0.8080834746360779, 0.8059701323509216, 0.8079513907432556, 0.8175934553146362, 0.8201030492782593, 0.8193105459213257, 0.8255184292793274, 0.8322546482086182, 0.8341038227081299, 0.8297450542449951, 0.8352925777435303, 0.8448025584220886, 0.8467837572097778, 0.8469158411026001, 0.8490291833877563, 0.8561616539955139, 0.8553691506385803, 0.8593316674232483, 0.8514066934585571, 0.860652506351471, 0.8646149635314941, 0.860652506351471, 0.8693699836730957, 0.8648791313171387, 0.8709549307823181, 0.8684453964233398, 0.869502067565918], "val_loss": [1.8699077197483607, 1.3146230152675085, 0.8247944116592407, 0.6654279402324131, 0.6729007959365845, 0.6218433209827968, 0.6054642030170986, 0.5840176514216832, 0.5684403351375035, 0.538126962525504, 0.5067748853138515, 0.4921258006777082, 0.48556085995265413, 0.46744409629276823, 0.4581341062273298, 0.4597287007740566, 0.4415395600455148, 0.4328938978058951, 0.4408980097089495, 0.43157282897404264, 0.41939384596688406, 0.4137056725365775, 0.4168754816055298, 0.4071921025003706, 0.4078336698668344, 0.40090462139674593, 0.3933227317673819, 0.40449867078236174, 0.38974112272262573, 0.3816421627998352, 0.3834846190043858, 0.39834727559770855, 0.3866394417626517, 0.37819442578724455, 0.3907159311430795, 0.3845129098211016, 0.3758497153009687, 0.37795021704265047, 0.3651217222213745, 0.37961640528270174, 0.37875163555145264, 0.3738142337117876, 0.38650254692350117, 0.38437009709221975, 0.37877008744648527, 0.38045099803379606, 0.3711219004222325, 0.38811081647872925], "val_accuracy": [0.4099999964237213, 0.5673333406448364, 0.6309999823570251, 0.715666651725769, 0.7213333249092102, 0.7263333201408386, 0.7260000109672546, 0.7419999837875366, 0.7483333349227905, 0.7609999775886536, 0.7696666717529297, 0.7703333497047424, 0.784333348274231, 0.7876666784286499, 0.796999990940094, 0.8073333501815796, 0.8113333582878113, 0.8080000281333923, 0.8100000023841858, 0.8109999895095825, 0.8223333358764648, 0.8223333358764648, 0.8206666707992554, 0.828000009059906, 0.82833331823349, 0.8240000009536743, 0.8323333263397217, 0.8326666951179504, 0.8333333134651184, 0.8396666646003723, 0.8379999995231628, 0.8423333168029785, 0.840666651725769, 0.8503333330154419, 0.8523333072662354, 0.8513333201408386, 0.8506666421890259, 0.8473333120346069, 0.8560000061988831, 0.856333315372467, 0.8583333492279053, 0.859000027179718, 0.8656666874885559, 0.8573333621025085, 0.8603333234786987, 0.8629999756813049, 0.8606666922569275, 0.8603333234786987]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 4, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 1, 9, 7, 8, 7, 1, 4, 9, 8, 5], [0, 2, 3, 1, 1, 1, 0, 2, 0, 3, 2, 0, 3, 2, 3, 0], [94, 8, 39, 25, 98, 2, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [5, 57]], "fitness": -0.7074285745620728, "mapping_values": [1, 32, 32, 20, 12, 6, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.pow(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, grad), alpha))))))), tf.math.add(alpha, alpha))), tf.math.multiply(tf.math.multiply(tf.math.add(tf.math.sqrt(alpha), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.subtract(tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))), tf.math.add(alpha, grad)))))), tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303125732122332, 2.3006982125342876, 2.2971690722334386, 2.2901634342398673, 2.2816395587641503, 2.2724054541491467, 2.2612370351648536, 2.246567930606504, 2.232934860804644, 2.214672050329956, 2.1954505967583717, 2.1710888827402894, 2.1414799061370737, 2.109057577861503, 2.068283387241961, 2.0158405115638725, 1.9623661010398556, 1.8929819710707196, 1.8172789118813013, 1.7304609526480665, 1.6515123668269334, 1.5805530972752226, 1.508368362383426, 1.4672350459614638, 1.4091198519000194, 1.3901947803028727, 1.382939675874273, 1.3621559704079085, 1.3534489536266505, 1.3737057514351907, 1.3802558812703345, 1.3370543729832238, 1.3014502411804432, 1.2421076817047074, 1.208963295015535, 1.1429166843579068, 1.1017586440772995, 1.041636735803148, 0.9898527604934325, 0.9363845546074578, 0.9212218510271646, 0.9080628833089286, 0.9120719398663044, 0.9088963626272186, 0.9018352041942348], "accuracy": [0.09008057415485382, 0.09932637959718704, 0.10527011007070541, 0.12957337498664856, 0.14278165996074677, 0.1706511676311493, 0.20552106201648712, 0.2432967871427536, 0.26482629776000977, 0.29982829093933105, 0.3210936486721039, 0.33760401606559753, 0.3593977093696594, 0.37247392535209656, 0.3877955377101898, 0.40470215678215027, 0.4049663245677948, 0.4204200208187103, 0.43270373344421387, 0.4485536813735962, 0.4563465714454651, 0.4687623679637909, 0.48408401012420654, 0.48632940649986267, 0.5148593187332153, 0.5169726610183716, 0.5234447121620178, 0.5455026030540466, 0.5455026030540466, 0.5480121374130249, 0.5552766919136047, 0.5626733303070068, 0.5765420794487, 0.5906749367713928, 0.6042794585227966, 0.6263373494148254, 0.6328094005584717, 0.643772304058075, 0.6507726907730103, 0.6608110070228577, 0.6535464525222778, 0.6535464525222778, 0.6469422578811646, 0.6535464525222778, 0.6650376319885254], "val_loss": [1.9701457704816545, 1.967116151537214, 1.9622131756373815, 1.955526351928711, 1.9471402849469865, 1.9371859686715263, 1.925755160195487, 1.9127898897443498, 1.8981483323233468, 1.8813659123011999, 1.861548832484654, 1.8377601078578405, 1.808900969369071, 1.77381317956107, 1.7313156809125627, 1.6800881113324846, 1.618950503213065, 1.5475465910775321, 1.466606821332659, 1.3786723273141044, 1.2876884256090437, 1.1990729400089808, 1.1173338549477714, 1.0451453753880091, 0.982842104775565, 0.9298585483006069, 0.8846944400242397, 0.8486137219837734, 0.8269139868872506, 0.8190003463200161, 0.8081002235412598, 0.7829386336462838, 0.7602167129516602, 0.75477705683027, 0.7565707649503436, 0.7500592810767037, 0.7283232041767665, 0.6983066967555455, 0.6750337907246181, 0.6686692919049945, 0.6741735254015241, 0.6797131299972534, 0.6827086891446795, 0.6857330628803798, 0.6905243056161063], "val_accuracy": [0.047333333641290665, 0.06400000303983688, 0.0963333323597908, 0.1576666682958603, 0.23899999260902405, 0.3100000023841858, 0.3423333466053009, 0.3553333282470703, 0.3700000047683716, 0.3856666684150696, 0.39933332800865173, 0.4169999957084656, 0.42800000309944153, 0.44433334469795227, 0.45766666531562805, 0.46833333373069763, 0.48766666650772095, 0.5086666941642761, 0.5293333530426025, 0.5496666431427002, 0.5676666498184204, 0.5803333520889282, 0.6029999852180481, 0.6293333172798157, 0.6456666588783264, 0.6539999842643738, 0.6620000004768372, 0.6650000214576721, 0.6650000214576721, 0.6536666750907898, 0.6499999761581421, 0.6733333468437195, 0.6823333501815796, 0.6853333115577698, 0.6856666803359985, 0.6903333067893982, 0.6956666707992554, 0.7009999752044678, 0.7039999961853027, 0.7163333296775818, 0.7036666870117188, 0.6886666417121887, 0.687333345413208, 0.6913333535194397, 0.7059999704360962]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [39, 57]], "fitness": -0.4974285662174225, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3425888700917286, 2.164841573503842, 2.5389511139322627, 2.35924665846955, 2.3052010706875223, 2.300751840843107, 2.286306732193102, 2.3048348313136233], "accuracy": [0.20737022161483765, 0.2110685557126999, 0.18861444294452667, 0.17461365461349487, 0.09760929644107819, 0.10896842926740646, 0.14397041499614716, 0.1002509593963623], "val_loss": [1.9657421793256487, 1.48754916872297, 1.577892507825579, 1.9780923298427038, 1.973595074244908, 1.945476804460798, 1.9771523475646973, 1.9743678229195731], "val_accuracy": [0.09933333098888397, 0.4090000092983246, 0.44433334469795227, 0.09799999743700027, 0.09933333098888397, 0.2513333261013031, 0.09966666996479034, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.2491428554058075, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.6635981037506196, 14.668831574461795, NaN, NaN, NaN, NaN], "accuracy": [0.18121780455112457, 0.13974376022815704, 0.09959053993225098, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.684394427708217, 31576.9765625, NaN, NaN, NaN, NaN], "val_accuracy": [0.16433332860469818, 0.039000000804662704, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.243428573012352, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.6637508238720744, 6.78433070713739, NaN, NaN, NaN, NaN], "accuracy": [0.18121780455112457, 0.1472724825143814, 0.10553427785634995, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.81812538419451, 2750.5657087053573, NaN, NaN, NaN, NaN], "val_accuracy": [0.15800000727176666, 0.06133333221077919, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0], [3, 4, 2, 7, 8, 0, 1, 0, 0, 3, 8, 5, 8, 9, 8, 2, 6, 5, 2, 8, 7, 2, 4, 9, 5], [3, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10085714608430862, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3028759419437823, 2.3013675266079945, 2.3021390486890927, 2.302582560686498, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.08849557489156723, 0.09391097724437714, 0.10170386731624603, 0.09998679161071777, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9705683844430106, 1.97279725755964, 1.9736439159938268, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.06933332979679108, 0.09166666865348816, 0.10433333367109299, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [75, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 12, 7, 5, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(beta), tf.math.pow(tf.math.add(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09113723784685135, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9, 5, 5], [0, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [5, 4, 0], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 4, 7, 8, 4], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3030245372758107, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09747721254825592, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [9, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 12, 7, 5, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(beta), tf.math.pow(tf.math.add(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07819310575723648, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [9, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 13, 13, 8, 5, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, alpha)), alpha)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0796460211277008, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0], [0, 4, 9, 8, 8, 3, 7, 0, 3, 3, 5, 7, 8, 9, 2, 4, 8, 9, 7, 8, 5, 1, 4, 9, 5, 5], [2, 2, 3, 1, 1, 2, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 78, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [0, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 32, 32, 23, 9, 4, 7, 7, 4, 3, 1, 1, 0, 0, 0, 0, 4, 2, 2, 2], "tree_depth": 43, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, tf.math.square(grad)), grad), tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(tf.math.sqrt(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha)))), grad)))))))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1671.9267648349994, 28889.210489140307, 133149.5029388456, 364724.0290953969, 779144.0690546163, 1413826.8326509048], "accuracy": [0.09853387624025345, 0.09668471664190292, 0.09760929644107819, 0.09813763201236725, 0.09972262382507324, 0.10091137140989304], "val_loss": [5976.017438616072, 46012.28571428572, 153558.1205357143, 362050.4910714286, 704927.8928571428, 1215628.5714285714], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 12, 7, 5, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07885351777076721, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9, 8, 3, 4, 3, 2, 8], [1, 2, 3, 1, 2, 1, 2, 2, 2, 0, 2, 1, 0, 1, 3, 0], [67, 8, 57, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 12, 7, 5, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(beta), tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07819310575723648, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 12, 7, 5, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07885351777076721, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1], [0, 4, 2, 8, 8, 1, 7, 0, 3, 3, 3, 7, 8, 9, 3, 4, 6, 9, 7, 8, 7, 1, 4, 9, 1, 8, 7, 2, 0, 4, 7, 3, 5], [2, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0, 2, 2, 3], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [8, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 52, 52, 33, 19, 6, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 47, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.negative(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.multiply(tf.math.multiply(tf.math.add(alpha, grad), grad), alpha))), tf.math.add(alpha, tf.math.multiply(tf.math.add(tf.math.sqrt(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), alpha), tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))), tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.sqrt(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))))))))))))), tf.math.add(alpha, grad))), tf.math.add(tf.math.add(tf.math.negative(tf.math.pow(tf.math.add(grad, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))), tf.math.square(tf.math.add(alpha, grad)))), grad), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0796460211277008, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0], [3, 4, 2, 7, 8, 0, 1, 0, 0, 3, 8, 5, 8, 9, 8, 2, 6, 5, 2, 8, 7, 2, 4, 9, 5], [3, 2, 3, 1, 1, 1, 2, 2, 0, 3, 2, 0, 3, 2, 3, 0], [30, 8, 57, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [9, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [5, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0796460211277008, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}]