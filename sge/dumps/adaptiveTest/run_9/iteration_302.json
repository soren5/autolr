[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [4, 3, 3, 2, 3, 2, 0, 5, 2, 1, 6, 8, 9, 7, 4, 2], [3, 0, 3, 2, 1, 0, 1, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 77, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8345714211463928, "mapping_values": [1, 1, 1, 0, 1, 0, 22, 22, 13, 9, 5, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), grad))))), tf.math.add(beta, tf.math.subtract(tf.math.divide_no_nan(beta, alpha), tf.math.add(beta, tf.math.sqrt(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))), alpha)), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2060115674640746, 1.816556895949097, 1.3640541954126182, 1.1025041867839251, 0.9118316777157761, 0.8461125477304107, 0.804263318502955, 0.7455453833553061, 0.7324343554221912, 0.6833636435566798, 0.7134756624202655, 0.6984652848039652, 0.6361711059641986, 0.6371459229558356, 0.5889443213346691, 0.5829201205106475, 0.5835605144280295, 0.5486359578420646, 0.5690005456357348, 0.5264717541067214, 0.5356774045814534, 0.52371338196025, 0.5398041402123718, 0.504435196623212, 0.4848832162915125, 0.47800592588254126, 0.48140474740603284, 0.47544789127292036, 0.4593520949088729, 0.44246164874755917, 0.44106343537352544, 0.45206989071404124, 0.43211662222554637, 0.42842919713769684, 0.4280908459433633], "accuracy": [0.2693171203136444, 0.42504292726516724, 0.5330867767333984, 0.600581169128418, 0.6532822847366333, 0.6826046705245972, 0.6956809163093567, 0.7186633348464966, 0.7250033020973206, 0.7382115721702576, 0.7301545143127441, 0.7326641082763672, 0.7642319202423096, 0.7504953145980835, 0.7761194109916687, 0.7795535326004028, 0.7784969210624695, 0.7964601516723633, 0.7829877138137817, 0.7998943328857422, 0.7985734939575195, 0.804649293422699, 0.7996301651000977, 0.8186501264572144, 0.8211596608161926, 0.8228767514228821, 0.8182538747787476, 0.8248580098152161, 0.8355567455291748, 0.8387266993522644, 0.8338396549224854, 0.8338396549224854, 0.8405758738517761, 0.8370096683502197, 0.8412362933158875], "val_loss": [1.5197509356907435, 1.3406472206115723, 0.8180941683905465, 0.7848865985870361, 0.6932956661496844, 0.6177775348935809, 0.573393532208034, 0.5844434499740601, 0.5834929772785732, 0.5521652528217861, 0.6542797088623047, 0.49864937577928814, 0.5332996504647392, 0.4921668938228062, 0.486052325793675, 0.493315373148237, 0.5120594501495361, 0.47721636295318604, 0.4476907934461321, 0.4358961752482823, 0.4122057131358555, 0.4669602428163801, 0.4135627746582031, 0.41548374720982145, 0.4334084136145456, 0.4238986372947693, 0.39721805708748953, 0.4315329704965864, 0.393348114831107, 0.3791549972125462, 0.44026914664677214, 0.3920166918209621, 0.3828278269086565, 0.3959690162113735, 0.3741521579878671], "val_accuracy": [0.4716666638851166, 0.5096666812896729, 0.6399999856948853, 0.6756666898727417, 0.6983333230018616, 0.7193333506584167, 0.746666669845581, 0.737333357334137, 0.7453333139419556, 0.7516666650772095, 0.7103333473205566, 0.7770000100135803, 0.7403333187103271, 0.7749999761581421, 0.7853333353996277, 0.781000018119812, 0.765999972820282, 0.7736666798591614, 0.8056666851043701, 0.8166666626930237, 0.8190000057220459, 0.7746666669845581, 0.8220000267028809, 0.8253333568572998, 0.7979999780654907, 0.8180000185966492, 0.8286666870117188, 0.8026666641235352, 0.8286666870117188, 0.843666672706604, 0.800000011920929, 0.8276666402816772, 0.8266666531562805, 0.8353333473205566, 0.8356666564941406]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 9, 3, 2, 3, 2, 1, 5, 2, 9, 6, 8, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.829714298248291, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 2, 0, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2060195104462705, 1.7982695475073065, 1.3779482802600278, 1.2049799693211778, 0.919422273528165, 0.851258813374393, 0.7778493350192367, 0.7935314112178181, 0.7178499023549986, 0.6985311191615143, 0.6930424742742127, 0.6350015616215389, 0.6289938990670803, 0.6262259260223463, 0.5890524456010062, 0.5717390128697355, 0.5848726715551564, 0.5569267640961254, 0.5350493402639164, 0.5111637196489187, 0.5236869938322235, 0.5238755486581808, 0.5279309501690147, 0.497292316986538, 0.4939865554879606, 0.46683427602891137, 0.48711850389340267, 0.4726258631411356, 0.4610581733665257, 0.4437877200361823, 0.4310726336382006, 0.45634016906344393, 0.4132099011318795, 0.4334195608381645, 0.42547926192175933, 0.4163998172952672, 0.3999886591602011], "accuracy": [0.2694492042064667, 0.42768457531929016, 0.5344076156616211, 0.5838066339492798, 0.6573768258094788, 0.6812838315963745, 0.7017567157745361, 0.7030775547027588, 0.7246070504188538, 0.7263241410255432, 0.7314753532409668, 0.7519482374191284, 0.7531369924545288, 0.7574957013130188, 0.772288978099823, 0.785101056098938, 0.7730814814567566, 0.7866860628128052, 0.7968564033508301, 0.8094043135643005, 0.8012151718139648, 0.8030643463134766, 0.8029322624206543, 0.8195747137069702, 0.8127063512802124, 0.8277638554573059, 0.8132346868515015, 0.8256505131721497, 0.8315942287445068, 0.8317263126373291, 0.8426892161369324, 0.83119797706604, 0.8515387773513794, 0.8384625315666199, 0.8421608805656433, 0.8408400416374207, 0.8492933511734009], "val_loss": [1.5198418412889754, 1.269881078175136, 0.9449768747602191, 0.8470770972115653, 0.7367935521262032, 0.6603900875364032, 0.657778297151838, 0.5760853971753802, 0.5451766763414655, 0.6018278087888446, 0.5188400745391846, 0.5171216385705131, 0.5174477611269269, 0.4698404584612165, 0.4669002294540405, 0.4948617901120867, 0.484348007610866, 0.44217690399714876, 0.4288961717060634, 0.46206183092934744, 0.42981771911893574, 0.4575522116252354, 0.40854460852486746, 0.4086490443774632, 0.4166890893663679, 0.40758882250104633, 0.39070377179554533, 0.4245924694197519, 0.3979166064943586, 0.38251122406550814, 0.38451347180775236, 0.37282248054231915, 0.39028371231896536, 0.38882854155131746, 0.3817410469055176, 0.3726497633116586, 0.38039531878062655], "val_accuracy": [0.4723333418369293, 0.5223333239555359, 0.612333357334137, 0.625, 0.659333348274231, 0.7066666483879089, 0.715666651725769, 0.737666666507721, 0.750333309173584, 0.7310000061988831, 0.7763333320617676, 0.7603333592414856, 0.7573333382606506, 0.7933333516120911, 0.7960000038146973, 0.7706666588783264, 0.7763333320617676, 0.8046666383743286, 0.8073333501815796, 0.7913333177566528, 0.8103333115577698, 0.7906666398048401, 0.8270000219345093, 0.8296666741371155, 0.815666675567627, 0.8299999833106995, 0.8326666951179504, 0.8059999942779541, 0.8326666951179504, 0.8389999866485596, 0.8309999704360962, 0.843666672706604, 0.8320000171661377, 0.8379999995231628, 0.8346666693687439, 0.8389999866485596, 0.8366666436195374]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [5, 2, 1, 9, 9, 6, 1, 9, 8, 5, 6, 9], [1, 0, 3, 2, 3, 0, 3, 2, 0, 3, 1, 0, 5, 0], [84, 66, 67, 77, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8294285535812378, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 5, 1, 2, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.205983213823485, 1.8190643306673477, 1.3744683862283575, 1.0863760875720294, 0.9911798090903893, 0.8279355514586452, 0.8153112084244252, 0.7711423906305636, 0.7661945062101856, 0.6773233939990108, 0.6951961071735927, 0.6386952603639565, 0.6285481815403636, 0.6304552824647435, 0.5879412094017203, 0.5877681154742485, 0.5846101184798868, 0.5643394075175633, 0.544849846853068, 0.5337628460894045, 0.5288068370938128, 0.5382821319786911, 0.5179087549955806, 0.5015134661110432, 0.49452741978474263, 0.4785331824924558, 0.48213573447103275, 0.47322346990244846], "accuracy": [0.2694492042064667, 0.42464667558670044, 0.5284639000892639, 0.6103553175926208, 0.6316206455230713, 0.6927750706672668, 0.6863030195236206, 0.707040011882782, 0.71100252866745, 0.7341170310974121, 0.7349095344543457, 0.748249888420105, 0.7568352818489075, 0.7609298825263977, 0.7741381525993347, 0.7824593782424927, 0.7810064554214478, 0.7898560166358948, 0.7935543656349182, 0.8001585006713867, 0.8013472557067871, 0.7960638999938965, 0.8098005652427673, 0.8182538747787476, 0.8140271902084351, 0.8203672170639038, 0.8239334225654602, 0.8271034359931946], "val_loss": [1.520000968660627, 1.3447842597961426, 0.8427735567092896, 0.896388053894043, 0.6354761975152152, 0.6966155256543841, 0.6481503588812692, 0.6160217353275844, 0.5437382459640503, 0.5675013065338135, 0.5270137786865234, 0.538277234349932, 0.5206578799656459, 0.48810512678963797, 0.4848003557750157, 0.48912932191576275, 0.5143231323787144, 0.4694622584751674, 0.4375040531158447, 0.43848681449890137, 0.45482453278132845, 0.4320329087121146, 0.41164455243519377, 0.4124706046921866, 0.4079216718673706, 0.4174701912062509, 0.42204017298562185, 0.43003370080675396], "val_accuracy": [0.47200000286102295, 0.5023333430290222, 0.6293333172798157, 0.6266666650772095, 0.7356666922569275, 0.6883333325386047, 0.7179999947547913, 0.722000002861023, 0.762666642665863, 0.7350000143051147, 0.7693333625793457, 0.7493333220481873, 0.7546666860580444, 0.7863333225250244, 0.7796666622161865, 0.7863333225250244, 0.7609999775886536, 0.7749999761581421, 0.8086666464805603, 0.8096666932106018, 0.7926666736602783, 0.8136666417121887, 0.8240000009536743, 0.8233333230018616, 0.8149999976158142, 0.8169999718666077, 0.8143333196640015, 0.8080000281333923]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 9, 3, 1, 9, 8, 1, 9, 8, 5, 9, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 24, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [26, 57]], "fitness": -0.6177142858505249, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 2, 0, 1, 7, 6, 4, 2, 2, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), sigma)))), tf.math.add(sigma, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.282665515478182, 2.134957580912178, 1.659470373692057, 1.3762609597918947, 1.0803307472140073, 0.9072660107449486, 0.8457926483501328, 0.8240298666045209, 0.7983838244042518, 0.7378771981668982, 0.7522600095553279, 0.7120381844057903, 0.6861015448417835, 0.6666408174341192, 0.6319686762802573, 0.6249799279095302, 0.6149172040418217, 0.5946003406621903, 0.5817969162127817, 0.5608767761042278, 0.5587806411234143, 0.548118925278827, 0.5403052079065082, 0.5235099443481142, 0.5220579538662137, 0.5271621420241429, 0.49945994534544136, 0.5013862409611829, 0.49891301315253705, 0.4966972973273966, 0.4823448328829523, 0.4783440663861466, 0.4634541804134539, 0.4595020480828908, 0.4658073302643284, 0.4502228642766502, 0.4400502709609611, 0.4413455829305766, 0.44012800507368494, 0.4368848303337107, 0.4377264611362986, 0.421047268373115, 0.4159049597815941, 0.4067117878671461, 0.4064924097914564, 0.42626347045510465, 0.4187810244404046, 0.41278971133530024, 0.39436130805290165, 0.39721427697862033, 0.3807217402622574, 0.384929930564671, 0.39252316730133596, 0.3794047255770185, 0.38763149012789955, 0.3632722677154438], "accuracy": [0.1442345827817917, 0.3539822995662689, 0.4601770043373108, 0.5451063513755798, 0.6280544400215149, 0.6645092964172363, 0.6802271604537964, 0.6893408894538879, 0.6989829540252686, 0.7100779414176941, 0.7119271159172058, 0.7290979027748108, 0.7387399077415466, 0.737022876739502, 0.7540615797042847, 0.757099449634552, 0.7609298825263977, 0.7684586048126221, 0.7708360552787781, 0.7835160493850708, 0.7803460359573364, 0.7854973077774048, 0.7816668748855591, 0.793950617313385, 0.7911768555641174, 0.7880068421363831, 0.8016114234924316, 0.8062343001365662, 0.8029322624206543, 0.7997622489929199, 0.8112534880638123, 0.8165367841720581, 0.8252542614936829, 0.8210275769233704, 0.8236692547798157, 0.8238013386726379, 0.8244617581367493, 0.828292191028595, 0.8355567455291748, 0.830669641494751, 0.8289526104927063, 0.8342359066009521, 0.8400475382804871, 0.8429533839225769, 0.8366134166717529, 0.837537944316864, 0.8391229510307312, 0.8389908671379089, 0.8521991968154907, 0.848368763923645, 0.8492933511734009, 0.8433496356010437, 0.839519202709198, 0.8422929644584656, 0.8467837572097778, 0.8525954484939575], "val_loss": [1.9019223621913366, 1.6149968760354179, 0.9650098596300397, 0.7568839107240949, 0.674127493585859, 0.6902050631386893, 0.6220739909580776, 0.6099158695765904, 0.580382261957441, 0.5793920244489398, 0.5640327760151455, 0.5400880915778024, 0.52213602406638, 0.4978384290422712, 0.4791034460067749, 0.4920564719608852, 0.46474763325282503, 0.46668226378304617, 0.46543545382363455, 0.46318858010428293, 0.44430218424115864, 0.44354728290012907, 0.440983636038644, 0.43903855766568867, 0.4323803016117641, 0.42320377486092703, 0.42143191610063824, 0.4259545292173113, 0.4169985737119402, 0.4099172864641462, 0.41064660038266865, 0.4096923811095102, 0.41084281887326923, 0.39740772758211407, 0.39642845732825144, 0.3887090172086443, 0.4080228805541992, 0.40261771849223543, 0.3889773998941694, 0.39281349522726877, 0.3830507142203195, 0.40227644784109934, 0.3873619096619742, 0.3940270372799465, 0.38948917388916016, 0.3842574272836958, 0.38955770220075336, 0.3897488372666495, 0.40065315791538786, 0.3838744674410139, 0.3956518513815744, 0.4028856413705008, 0.40347536972590853, 0.41050903286252705, 0.3994339108467102, 0.4049826945577349], "val_accuracy": [0.4143333435058594, 0.4896666705608368, 0.652999997138977, 0.6830000281333923, 0.7123333215713501, 0.7203333377838135, 0.7246666550636292, 0.7223333120346069, 0.7403333187103271, 0.7366666793823242, 0.75, 0.765333354473114, 0.7570000290870667, 0.7820000052452087, 0.7806666493415833, 0.7753333449363708, 0.7876666784286499, 0.7919999957084656, 0.7973333597183228, 0.7996666431427002, 0.8056666851043701, 0.8029999732971191, 0.8080000281333923, 0.8066666722297668, 0.8026666641235352, 0.8116666674613953, 0.8166666626930237, 0.8153333067893982, 0.8140000104904175, 0.8133333325386047, 0.8216666579246521, 0.831333339214325, 0.8349999785423279, 0.8370000123977661, 0.8360000252723694, 0.8373333215713501, 0.8346666693687439, 0.8450000286102295, 0.8420000076293945, 0.8320000171661377, 0.8423333168029785, 0.8403333425521851, 0.8473333120346069, 0.8399999737739563, 0.8496666550636292, 0.8506666421890259, 0.8533333539962769, 0.8526666760444641, 0.847000002861023, 0.8526666760444641, 0.8560000061988831, 0.8496666550636292, 0.8483333587646484, 0.8420000076293945, 0.8443333506584167, 0.8489999771118164]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [5, 4, 3, 3, 9, 4, 1, 9, 8, 5, 9, 9], [3, 0, 3, 2, 1, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 24, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.558571457862854, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 12, 2, 5, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.subtract(tf.math.add(beta, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))))), tf.math.square(tf.math.add(beta, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))))))), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.4296204714081653, 2.128196915284659, 1.501083013089011, 2.072610467101573, 3446.7813536090116, NaN, NaN], "accuracy": [0.2794875204563141, 0.2475234419107437, 0.481838583946228, 0.35001981258392334, 0.10857218503952026, 0.10276053100824356, 0.10011887550354004], "val_loss": [2.043837411063058, 1.2532148701804025, 1.4452441419873918, 11.1371214730399, 3561597.214285714, NaN, NaN], "val_accuracy": [0.2919999957084656, 0.5353333353996277, 0.3799999952316284, 0.10466666519641876, 0.09933333098888397, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 3, 3, 2, 3, 2, 1, 5, 2, 9, 6, 8, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.5077142715454102, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.4299264366695077, 2.1408693562598198, 1.5024454146485837, 1.9267016189634651, 6.486420401114798, 2.419292527796995, 2.524282258971807, 2.4015952505691884], "accuracy": [0.2794875204563141, 0.2591467499732971, 0.4784044325351715, 0.4527803361415863, 0.11345925182104111, 0.14000792801380157, 0.11161009222269058, 0.09893012791872025], "val_loss": [2.0167335101536343, 1.2591636862073625, 0.9874665055956159, 3.550921848842076, 2.0391344342912947, 2.0484462465558733, 2.0514348575047086, 2.1407234328133717], "val_accuracy": [0.2939999997615814, 0.5376666784286499, 0.5619999766349792, 0.109333336353302, 0.13733333349227905, 0.15833333134651184, 0.10499999672174454, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 9, 3, 2, 3, 2, 1, 5, 2, 9, 6, 8, 9], [3, 3, 0, 2, 1, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 24, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [70, 57]], "fitness": -0.19200000166893005, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 2, 0, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3.253413626735457, 2.3023914892156094, 2.3059161449735193, 2.303591675840868, 2.3031345855416623, 2.303107742966599], "accuracy": [0.17263241112232208, 0.18821820616722107, 0.09615638852119446, 0.09311848133802414, 0.0956280529499054, 0.09325055778026581], "val_loss": [1.9669413566589355, 1.9772815023149763, 1.9742070606776647, 1.9736590385437012, 1.9736663954598563, 1.973742961883545], "val_accuracy": [0.11966666579246521, 0.09833333641290665, 0.09933333098888397, 0.10066666454076767, 0.10199999809265137, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 3, 1, 9, 9, 6, 1, 9, 8, 5, 9, 9], [5, 0, 3, 2, 1, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 77, 53, 45], [0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 6, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [92, 57]], "fitness": -0.12857143580913544, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 6, 4, 2, 2, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), sigma)))), tf.math.add(sigma, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(alpha, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [4.259337859241293, 2.4582383112113204, 2.3502823779958035, 2.328319779130147, 2.319106861395906, 2.3301635064374597], "accuracy": [0.18491612374782562, 0.10751552134752274, 0.09668471664190292, 0.09734513610601425, 0.1010434553027153, 0.10196803510189056], "val_loss": [2.0311903953552246, 2.007119587489537, 1.9973742621285575, 1.9975231715611048, 1.9954305376325334, 1.9898432322910853], "val_accuracy": [0.12033333629369736, 0.10000000149011612, 0.1003333330154419, 0.09933333098888397, 0.10199999809265137, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 9, 3, 2, 3, 2, 1, 5, 2, 9, 6, 8, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 5, 5, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 2, 0, 1, 7, 6, 4, 2, 2, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), sigma)))), tf.math.add(sigma, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [1234805568.2003736, 23728115272.157444, 109452001225.89882, 303020871730.3141, 659590742093.9056, 1202914761108.4062], "accuracy": [0.10038304328918457, 0.10157178342342377, 0.10672302544116974, 0.09734513610601425, 0.10368511080741882, 0.09879804402589798], "val_loss": [4770544493.714286, 38153389202.28571, 128755953078.85715, 305185470171.4286, 596055350125.7142, 1029973250633.1428], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 9, 3, 2, 3, 2, 1, 5, 2, 9, 6, 8, 9], [3, 3, 0, 2, 1, 0, 3, 0, 0, 3, 1, 0, 5, 0], [63, 83, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 1, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 2, 2, 2, 0, 1, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, alpha))", "other_info": {"loss": [1237112224.528996, 23772174027.352795, 109654534090.16933, 303579356615.9377, 660796106416.8433, 1205106438959.3047], "accuracy": [0.10038304328918457, 0.10157178342342377, 0.10672302544116974, 0.09734513610601425, 0.10368511080741882, 0.09879804402589798], "val_loss": [4779431789.714286, 38224087332.57143, 128993235529.14285, 305747197952.0, 597142742162.2858, 1031845707776.0], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [5, 9, 3, 2, 3, 2, 1, 5, 2, 9, 6, 8, 9], [3, 0, 3, 2, 1, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 5, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.30237969547892, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09787346422672272, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 9, 3, 2, 3, 2, 1, 5, 2, 9, 6, 8, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 5, 5, 6, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [71, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 2, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 9, 3, 2, 3, 2, 1, 5, 2, 9, 6, 8, 9], [0, 0, 3, 2, 3, 0, 3, 2, 0, 3, 1, 0, 5, 0], [84, 73, 79, 81, 53, 45], [0, 1, 1, 1, 0, 1, 0], [0, 1, 1, 1, 1, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [2, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [21, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 3, 1, 1, 0, 0, 8, 4, 4, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), beta)))", "other_info": {"loss": [2.30237969547892, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09787346422672272, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 9, 3, 2, 3, 2, 1, 5, 2, 9, 6, 8, 9], [3, 3, 0, 2, 1, 0, 3, 0, 0, 3, 1, 0, 5, 0], [29, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [9, 3, 5, 4, 2, 1, 2, 3], [0, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 2, 2, 2, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.30237969547892, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09787346422672272, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 9, 3, 2, 3, 2, 1, 5, 2, 9, 6, 8, 9], [3, 0, 3, 2, 1, 0, 3, 0, 0, 3, 1, 0, 5, 0], [59, 73, 67, 77, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [65, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 2, 2, 2, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 9, 3, 2, 3, 2, 1, 5, 2, 9, 6, 8, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 9, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 2, 0, 1, 1, 0, 0, 0, 0, 2, 2, 0, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [66295842.02437322, 1272862925.0772686, 5869833306.619469, 16248803141.080439, 35366476916.182274, 64495824109.90992], "accuracy": [0.10038304328918457, 0.10157178342342377, 0.10672302544116974, 0.09734513610601425, 0.10368511080741882, 0.09879804402589798], "val_loss": [255995181.7142857, 2046336585.142857, 6904552155.428572, 16364158976.0, 31958791899.42857, 55221762925.71429], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [9, 4, 3, 3, 2, 8, 2, 9, 8, 5, 9, 4], [0, 0, 3, 2, 1, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 74, 77, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [0, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 4, 2, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [36549283.26360846, 701525436.0861181, 3234809153.496236, 8954220637.595034, 19488945911.986263, 35540341001.63677], "accuracy": [0.10038304328918457, 0.10157178342342377, 0.10672302544116974, 0.09734513610601425, 0.10368511080741882, 0.09879804402589798], "val_loss": [141105696.0, 1127751168.0, 3804934070.857143, 9017662902.857143, 17610963821.714287, 30429777920.0], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 2, 3, 2, 3, 2, 1, 5, 2, 9, 6, 8, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [2, 3, 5, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 20, 20, 13, 7, 3, 1, 0, 0, 0, 0, 6, 3, 3, 2], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.subtract(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)), tf.math.divide_no_nan(tf.math.add(beta, beta), grad))), tf.math.add(beta, tf.math.sqrt(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.30237969547892, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09787346422672272, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [5, 9, 3, 2, 3, 2, 1, 5, 2, 9, 6, 8, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 2, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.square(alpha), tf.math.pow(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1], [4, 9, 3, 2, 3, 2, 1, 5, 2, 1, 6, 8, 9, 7, 0, 2, 8, 8, 4, 1, 0, 3, 9, 9, 6, 0, 7, 9], [3, 3, 3, 2, 3, 3, 3, 0, 3, 3, 1, 0, 5, 0], [84, 73, 67, 87, 53, 45, 72], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [5, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.050857141613960266, "mapping_values": [1, 1, 1, 0, 1, 0, 40, 40, 28, 12, 7, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))), grad))), tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.math.negative(grad))))), grad)), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.sqrt(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, grad)), tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.negative(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302886150485064, 2.3018285201887303, 2.302910927248637, 2.302556832578944, 2.3023048154178185, 2.301656689201096, 2.302358093514907, 2.302678213048967, 2.3025818167424332, 2.300932628855556, 2.301645519553615, 2.3016409090780514, 2.300211367716076, 2.301309082942978, 2.300070601337228, 2.300428515459332, 2.301248087087532, 2.301371965237014, 2.3023216686291605, 2.3006636777715816, 2.3012886272524136, 2.2998166770793977, 2.3005360520007256, 2.2997451886650815, 2.3011355855760636, 2.299738732752248, 2.3002670195754242, 2.3008771804912356, 2.301605793085427, 2.301399180224984], "accuracy": [0.09615638852119446, 0.09536388516426086, 0.09087307006120682, 0.09087307006120682, 0.09826971590518951, 0.0940430611371994, 0.09206181764602661, 0.09377889335155487, 0.09325055778026581, 0.08928807079792023, 0.09219389408826828, 0.09430722147226334, 0.10038304328918457, 0.09285431355237961, 0.09774138033390045, 0.09668471664190292, 0.0948355570435524, 0.0948355570435524, 0.09153348207473755, 0.09219389408826828, 0.09430722147226334, 0.09536388516426086, 0.10091137140989304, 0.09985470771789551, 0.09311848133802414, 0.09866596013307571, 0.09972262382507324, 0.0936468094587326, 0.09074098616838455, 0.0940430611371994], "val_loss": [1.9711313247680664, 1.9710211753845215, 1.9708969252450126, 1.9707720620291573, 1.9706733567374093, 1.9705805778503418, 1.9704941340855189, 1.970414502280099, 1.970310960497175, 1.9702365057809013, 1.9701760155814034, 1.9701195444379533, 1.9700639588492257, 1.970000880105155, 1.969949586050851, 1.9699012892586845, 1.9698735645839147, 1.9698083741324288, 1.9697536059788294, 1.9697071484157018, 1.9696756090436662, 1.969656194959368, 1.969644274030413, 1.9696287427629744, 1.9696243831089564, 1.9696119172232491, 1.9695806503295898, 1.9695804459708077, 1.969573974609375, 1.9695678438459123], "val_accuracy": [0.04066666588187218, 0.0416666679084301, 0.04233333468437195, 0.04266666620969772, 0.0430000014603138, 0.043666668236255646, 0.04399999976158142, 0.045666664838790894, 0.04699999839067459, 0.04766666516661644, 0.04833333194255829, 0.05000000074505806, 0.05066666752099991, 0.050999999046325684, 0.05133333429694176, 0.052000001072883606, 0.05366666615009308, 0.05400000140070915, 0.05533333495259285, 0.056333333253860474, 0.0560000017285347, 0.05700000002980232, 0.05766666680574417, 0.058666665107011795, 0.05966666713356972, 0.05900000035762787, 0.05900000035762787, 0.05900000035762787, 0.059333331882953644, 0.05900000035762787]}}]