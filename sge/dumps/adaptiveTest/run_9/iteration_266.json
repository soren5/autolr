[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 5, 5, 1, 8, 6, 5, 8, 9], [4, 3, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.845714271068573, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.square(grad)), grad))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.198674333314413, 2.0227946311160636, 1.7406223297843435, 1.1263490410261088, 0.8740995275960103, 0.8035369947475921, 0.740327200160885, 0.7107202491787337, 0.6480462432159582, 0.6165032588558552, 0.6162423749074581, 0.5680311134525687, 0.5823079565922031, 0.5915988791163698, 0.5522026109767864, 0.5410851322822031, 0.5080663676920694, 0.5150510637342276, 0.4965250321965664, 0.49758125115552554, 0.4893364089512475, 0.4681449120606193, 0.45066955654124513, 0.46916213858758987, 0.4273374733663805, 0.41917508165471984, 0.42037695351057613, 0.4212317780740761, 0.40594725762501904, 0.42380057709281, 0.3987485950397163, 0.39971932094520063, 0.38288542387775537, 0.3996279720286368, 0.38852296443096385, 0.3679008794309535, 0.3480999672283759], "accuracy": [0.2541275918483734, 0.3280940353870392, 0.44630828499794006, 0.6013736724853516, 0.6760005354881287, 0.69673752784729, 0.7218332886695862, 0.7256637215614319, 0.7556465268135071, 0.7640998363494873, 0.7697794437408447, 0.7887993454933167, 0.7829877138137817, 0.7804781198501587, 0.7977809906005859, 0.8017435073852539, 0.8075551390647888, 0.8083476424217224, 0.8144234418869019, 0.8145555257797241, 0.8166688680648804, 0.8281601071357727, 0.830669641494751, 0.8280280232429504, 0.8400475382804871, 0.839519202709198, 0.8461233377456665, 0.8461233377456665, 0.846387505531311, 0.8404437899589539, 0.8543124794960022, 0.8515387773513794, 0.8607845902442932, 0.8485008478164673, 0.8555012345314026, 0.8622375130653381, 0.8717474341392517], "val_loss": [1.9526403972080775, 1.8505138669695174, 0.9328666073935372, 0.7259950297219413, 0.5925038712365287, 0.6467360428401402, 0.6011249678475517, 0.531529460634504, 0.5119705200195312, 0.4832219396318708, 0.46166602202824186, 0.5385140180587769, 0.4449523517063686, 0.4619881936482021, 0.4786621332168579, 0.44992966311318533, 0.5314814022609166, 0.4136838061468942, 0.4072666423661368, 0.39774045773914884, 0.4086089645113264, 0.3832245979990278, 0.3958174841744559, 0.3789337532860892, 0.4115282722881862, 0.3934520057269505, 0.36619549138205393, 0.3694069640977042, 0.3481218303952898, 0.35348124163491385, 0.3772783364568438, 0.34338721207209993, 0.3542419246264866, 0.35723109756197247, 0.3520316055842808, 0.3419427956853594, 0.36744711228779386], "val_accuracy": [0.1693333387374878, 0.2849999964237213, 0.6186666488647461, 0.6853333115577698, 0.737333357334137, 0.6993333101272583, 0.7173333168029785, 0.7630000114440918, 0.7620000243186951, 0.7879999876022339, 0.7886666655540466, 0.746999979019165, 0.7940000295639038, 0.7879999876022339, 0.7976666688919067, 0.7956666946411133, 0.7549999952316284, 0.8196666836738586, 0.8286666870117188, 0.8206666707992554, 0.8226666450500488, 0.8309999704360962, 0.8169999718666077, 0.8343333601951599, 0.828000009059906, 0.8223333358764648, 0.8356666564941406, 0.8323333263397217, 0.8526666760444641, 0.8513333201408386, 0.8379999995231628, 0.8553333282470703, 0.8433333039283752, 0.8433333039283752, 0.8479999899864197, 0.8546666502952576, 0.8376666903495789]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 2, 3, 8, 2, 5, 1, 8, 6, 5, 8, 9], [4, 3, 3, 1, 0, 3, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.8394285440444946, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 8, 6, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), grad))), tf.math.subtract(tf.math.add(beta, alpha), tf.math.sqrt(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1989646439129698, 2.0186277699272126, 1.6493126459881269, 1.138044359102666, 0.8676920261097748, 0.7709096383897305, 0.7390500794642983, 0.6697406518366421, 0.6776230151800353, 0.6338535289423671, 0.60402248139867, 0.5725750561639728, 0.5843930187525767, 0.5589560465868737, 0.5410360158032997, 0.5449386061363689, 0.5021525927349529, 0.5162295676446027, 0.4991778566569322, 0.4901365675489743, 0.4807666406702639, 0.48459651256911335, 0.4405790549369457, 0.45169897739834647, 0.43868274627943016, 0.4196334043199108, 0.448740618800632, 0.42095832702443114, 0.40129537508629726, 0.42111473942965, 0.38960708272124894, 0.4082675040390167, 0.37623454264882156, 0.3803993514177428, 0.35755562979500166, 0.37652289508403397, 0.34144605170104325, 0.371618317012317, 0.3466805009172105, 0.3629792369218188, 0.3376363466609786], "accuracy": [0.2538634240627289, 0.33007529377937317, 0.4391758143901825, 0.5963544845581055, 0.6749438643455505, 0.7107383608818054, 0.7206445932388306, 0.7445515990257263, 0.7491744756698608, 0.7606657147407532, 0.7695152759552002, 0.7860256433486938, 0.7733456492424011, 0.7882710099220276, 0.7957997918128967, 0.7975168228149414, 0.8094043135643005, 0.8088759779930115, 0.8101968169212341, 0.8153480291366577, 0.8210275769233704, 0.8162726163864136, 0.8366134166717529, 0.8297450542449951, 0.8359529972076416, 0.8388587832450867, 0.8334434032440186, 0.8400475382804871, 0.8545766472816467, 0.8403117060661316, 0.8529917001724243, 0.8479725122451782, 0.8627657890319824, 0.8613129258155823, 0.8650112152099609, 0.858671247959137, 0.873860776424408, 0.8626337051391602, 0.8684453964233398, 0.8701624870300293, 0.8713511824607849], "val_loss": [1.952554430280413, 1.8378406252179826, 1.0965796879359655, 0.7407183136258807, 0.6006832463400704, 0.6068798814501081, 0.5738418613161359, 0.5579593011311123, 0.49414786270686556, 0.4693032503128052, 0.47459420136043, 0.436729439667293, 0.4598518099103655, 0.4620536225182669, 0.43798351287841797, 0.42717002970831736, 0.5190187011446271, 0.41296508482524324, 0.40862224783216206, 0.3976926973887852, 0.4079316939626421, 0.38776345763887676, 0.409963139465877, 0.38346272706985474, 0.42611249004091534, 0.3963901400566101, 0.388070855821882, 0.35629449571881977, 0.35615624700273785, 0.35493284463882446, 0.3660668901034764, 0.3434385827609471, 0.3743334242275783, 0.33252863373075214, 0.3536181960787092, 0.3358590006828308, 0.3850515740258353, 0.34838355439049856, 0.3445753199713571, 0.335986111845289, 0.3286503979137966], "val_accuracy": [0.16966666281223297, 0.24766667187213898, 0.5856666564941406, 0.6589999794960022, 0.7300000190734863, 0.7129999995231628, 0.7393333315849304, 0.7583333253860474, 0.7749999761581421, 0.796999990940094, 0.793666660785675, 0.8043333292007446, 0.7889999747276306, 0.7879999876022339, 0.8159999847412109, 0.7996666431427002, 0.7543333172798157, 0.8199999928474426, 0.8233333230018616, 0.8193333148956299, 0.8169999718666077, 0.8270000219345093, 0.8106666803359985, 0.8330000042915344, 0.8193333148956299, 0.8199999928474426, 0.831333339214325, 0.8463333249092102, 0.8460000157356262, 0.8456666469573975, 0.8456666469573975, 0.8539999723434448, 0.8330000042915344, 0.8569999933242798, 0.8500000238418579, 0.8600000143051147, 0.8289999961853027, 0.8453333377838135, 0.847000002861023, 0.8536666631698608, 0.8600000143051147]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 8, 6, 2, 8, 2, 9, 8, 6, 5, 8, 9], [4, 5, 3, 0, 0, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.833142876625061, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 7, 4, 2, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(grad, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))))), grad))), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1987803333140383, 2.021959001645436, 1.7146676533320766, 1.249742370885613, 0.9261330132235027, 0.7866831582692542, 0.7131917726220456, 0.7042642618450649, 0.6531914951558504, 0.6255450055048435, 0.604091175432927, 0.5720530916923041, 0.5900028091553353, 0.5673981786892163, 0.5275551676514001, 0.5502292001330857, 0.5076528548202368, 0.49882573218409254, 0.48021611871264, 0.4946685695944209, 0.47741016613305, 0.4711957015554745, 0.4419203019255519, 0.4659335479925589, 0.41974930663811705, 0.42526352230772885, 0.44663578568668794, 0.4240292733206237, 0.39899684803880453, 0.4091658582422538, 0.3920900925251912, 0.39738015704355883, 0.3726228345434002, 0.3798541884538189, 0.38660477653486286, 0.36891928831615534, 0.3487023337169834, 0.358445110763179, 0.35430914785930934, 0.35191923564514227, 0.333789728702949, 0.3442260075191764, 0.3306090803887031, 0.3423666527337087, 0.32308987026689484, 0.31194017492328197], "accuracy": [0.2542596757411957, 0.3279619514942169, 0.4329679012298584, 0.561352550983429, 0.6672830581665039, 0.7013604640960693, 0.7277770638465881, 0.7268524765968323, 0.7500990629196167, 0.7633073329925537, 0.7716285586357117, 0.7821952104568481, 0.7754589915275574, 0.7917051911354065, 0.805177628993988, 0.7979130744934082, 0.806630551815033, 0.8142913579940796, 0.8204993009567261, 0.8144234418869019, 0.8207634687423706, 0.8244617581367493, 0.8339717388153076, 0.8256505131721497, 0.8448025584220886, 0.8403117060661316, 0.8370096683502197, 0.8408400416374207, 0.8529917001724243, 0.8425571322441101, 0.859199583530426, 0.8539162874221802, 0.8627657890319824, 0.8577466607093811, 0.8556333184242249, 0.8627657890319824, 0.8710870146751404, 0.8681812286376953, 0.8696341514587402, 0.8713511824607849, 0.8725399374961853, 0.8708229064941406, 0.8762382864952087, 0.8722757697105408, 0.8765024542808533, 0.8799365758895874], "val_loss": [1.9526664188929967, 1.858853885105678, 1.0185917445591517, 0.6350914750780378, 0.6118048599788121, 0.5849179540361676, 0.5795505728040423, 0.517310619354248, 0.49412987913404194, 0.4740749256951468, 0.5018597670963832, 0.49243506363459993, 0.42661830357142855, 0.44292281355176655, 0.45437281472342356, 0.430529568876539, 0.4862278529575893, 0.3933757628713335, 0.39979842730930876, 0.3986027496201651, 0.4103757568768093, 0.3933339033808027, 0.399304347378867, 0.36948600837162565, 0.40024116209575106, 0.3829313601766314, 0.3823238951819284, 0.39102504934583393, 0.362329363822937, 0.3533943976674761, 0.38212946483067106, 0.34396183490753174, 0.3479616216250828, 0.3508226530892508, 0.34359382731573923, 0.33742739473070416, 0.35595848730632235, 0.3699437550136021, 0.33055233103888376, 0.343848500932966, 0.3261598263468061, 0.3476083108357021, 0.3729626791817801, 0.3909809248788016, 0.34018743889672415, 0.3557225891521999], "val_accuracy": [0.1653333306312561, 0.19599999487400055, 0.5176666378974915, 0.7200000286102295, 0.7253333330154419, 0.7246666550636292, 0.7443333268165588, 0.7706666588783264, 0.7879999876022339, 0.7993333339691162, 0.7720000147819519, 0.784333348274231, 0.8159999847412109, 0.8090000152587891, 0.8046666383743286, 0.8026666641235352, 0.7576666474342346, 0.8276666402816772, 0.8296666741371155, 0.8173333406448364, 0.8136666417121887, 0.8223333358764648, 0.8173333406448364, 0.8353333473205566, 0.8253333568572998, 0.8356666564941406, 0.8293333053588867, 0.8270000219345093, 0.8429999947547913, 0.8519999980926514, 0.8363333344459534, 0.8553333282470703, 0.8493333458900452, 0.843666672706604, 0.8529999852180481, 0.8610000014305115, 0.843999981880188, 0.8360000252723694, 0.8613333106040955, 0.8519999980926514, 0.8663333058357239, 0.8536666631698608, 0.8339999914169312, 0.8273333311080933, 0.8496666550636292, 0.8519999980926514]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 9, 3, 8, 2, 1, 8, 6, 5, 8, 9], [4, 5, 3, 0, 0, 2, 2, 4, 2, 0], [94, 28, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.8305714130401611, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 8, 5, 3, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, tf.math.add(grad, grad))))))), tf.math.subtract(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1987191844121923, 2.0208421462027153, 1.7672965169787453, 1.2084213451009622, 0.8817442626040515, 0.8163497428364364, 0.7183972229070793, 0.7101161889412053, 0.662849217688702, 0.619324041230095, 0.6195782277845766, 0.5773295656391784, 0.5905916463776099, 0.5613232060446164, 0.5425598015717197, 0.5310838514268044, 0.5207129626493916, 0.51231406584014, 0.4940379726463195, 0.4924034040759284, 0.47517677865260155, 0.46903390763395136, 0.44402859856061744, 0.4606459124284162, 0.43107661300205585, 0.42745176650088745, 0.45497269466914964, 0.42778824779335783, 0.41164079755288796, 0.42977291133819145, 0.39349150113646286, 0.401828784307138, 0.38816894978784755, 0.3862399757420146, 0.3851210372779568, 0.37230641418176635, 0.3570768664762124, 0.36314984597487143, 0.35584332827311843, 0.3551288175072731, 0.348322645827622, 0.338848083302046, 0.34923327015595995, 0.3487862457003749], "accuracy": [0.2538634240627289, 0.3299432098865509, 0.4287412464618683, 0.5667679309844971, 0.6774534583091736, 0.6910579800605774, 0.7288337349891663, 0.7201162576675415, 0.7497028112411499, 0.7667415142059326, 0.7651565074920654, 0.785101056098938, 0.7729493975639343, 0.7915731072425842, 0.7980451583862305, 0.8098005652427673, 0.7967243194580078, 0.8082155585289001, 0.8146876096725464, 0.8153480291366577, 0.8224804997444153, 0.8201030492782593, 0.8352925777435303, 0.8280280232429504, 0.8409721255302429, 0.8367455005645752, 0.8274996876716614, 0.8426892161369324, 0.8449346423149109, 0.8412362933158875, 0.8544445633888245, 0.8467837572097778, 0.8584070801734924, 0.8555012345314026, 0.8541803956031799, 0.8580108284950256, 0.863029956817627, 0.8627657890319824, 0.8673887252807617, 0.8669924736022949, 0.8648791313171387, 0.8778232932090759, 0.8722757697105408, 0.8714832663536072], "val_loss": [1.9526077679225378, 1.8457636151994978, 0.8003710167748588, 0.7973284210477557, 0.7306577478136335, 0.5908027035849435, 0.5968071903501239, 0.5216072116579328, 0.5195545979908535, 0.5630561624254499, 0.4761218684060233, 0.46981023039136616, 0.4305853247642517, 0.46205999170030865, 0.4637592349733625, 0.43014285394123625, 0.5135746342795235, 0.40768013681684223, 0.41358247825077604, 0.38948236192975727, 0.4165300726890564, 0.38756100620542255, 0.4070033005305699, 0.3639022878238133, 0.41362057413373676, 0.4277497870581491, 0.40501236064093454, 0.39134760413851055, 0.3569996442113604, 0.3553152084350586, 0.3644419567925589, 0.34892481565475464, 0.3477195841925485, 0.36744655881609234, 0.3549776417868478, 0.33991620370319914, 0.35760732207979473, 0.3444264701434544, 0.329791145665305, 0.3468454820769174, 0.3596619282449995, 0.3756931253841945, 0.35151445865631104, 0.3607833555766514], "val_accuracy": [0.16899999976158142, 0.28433331847190857, 0.6819999814033508, 0.7103333473205566, 0.67166668176651, 0.7236666679382324, 0.7066666483879089, 0.765666663646698, 0.7506666779518127, 0.7326666712760925, 0.7940000295639038, 0.7953333258628845, 0.809333324432373, 0.7863333225250244, 0.7983333468437195, 0.8059999942779541, 0.7613333463668823, 0.8196666836738586, 0.828000009059906, 0.828000009059906, 0.8199999928474426, 0.8289999961853027, 0.8109999895095825, 0.8370000123977661, 0.8220000267028809, 0.796999990940094, 0.8233333230018616, 0.8296666741371155, 0.8426666855812073, 0.8463333249092102, 0.843999981880188, 0.8483333587646484, 0.8483333587646484, 0.8353333473205566, 0.8473333120346069, 0.8526666760444641, 0.8403333425521851, 0.8493333458900452, 0.8536666631698608, 0.8410000205039978, 0.8420000076293945, 0.840666651725769, 0.8393333554267883, 0.8366666436195374]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 8, 2, 5, 1, 8, 6, 5, 8, 9], [0, 5, 3, 0, 0, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [0, 3, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.8105714321136475, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(beta, grad), grad)), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.1989917786932893, 2.021597754670298, 1.6240400007104578, 1.1033526566979308, 0.8721973410828585, 0.7929143022473746, 0.7370203713211227, 0.6995848680940743, 0.6414274355250736, 0.6485646222056871, 0.6213510578744021, 0.580523533765052, 0.6119678225720075, 0.5620462079215689, 0.5388626328407105, 0.5415715941852504, 0.5139937091575968], "accuracy": [0.2541275918483734, 0.3299432098865509, 0.4395720660686493, 0.6070532202720642, 0.6724342703819275, 0.7069079279899597, 0.7166820764541626, 0.7248712182044983, 0.7553823590278625, 0.7499669790267944, 0.7684586048126221, 0.7810064554214478, 0.763967752456665, 0.7943468689918518, 0.8010830879211426, 0.8006868362426758, 0.8020076751708984], "val_loss": [1.9526504107883997, 1.8199506487165178, 0.9187421798706055, 0.6603231259754726, 0.6157560178211757, 0.5839063269751412, 0.6356290067945208, 0.5128271920340401, 0.5197963203702655, 0.4701862164906093, 0.48589420318603516, 0.4343004993030003, 0.4364322679383414, 0.4683518409729004, 0.48024938787732807, 0.41899743250438143, 0.5170191867010934], "val_accuracy": [0.17100000381469727, 0.38466668128967285, 0.5883333086967468, 0.7006666660308838, 0.7393333315849304, 0.7246666550636292, 0.7023333311080933, 0.7699999809265137, 0.7583333253860474, 0.7856666445732117, 0.777999997138977, 0.8116666674613953, 0.8103333115577698, 0.7863333225250244, 0.7923333048820496, 0.8086666464805603, 0.7576666474342346]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 9, 2, 5, 2, 1, 8, 6, 5, 8, 9], [2, 3, 3, 1, 3, 3, 1, 4, 2, 0], [94, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.8062857389450073, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.198994695896234, 2.021850331206568, 1.7740793709962155, 1.1899830132049733, 0.8733234249951896, 0.7739135085583804, 0.7012566404256996, 0.6995894011646892, 0.6317211220434801, 0.6195180717161413, 0.6310711429576045, 0.5726263656781224, 0.5677459355453065, 0.5644727899035946, 0.560587095373484, 0.5324363363905511, 0.5133219758485837], "accuracy": [0.25399550795555115, 0.3255844712257385, 0.38383305072784424, 0.5757495760917664, 0.6812838315963745, 0.6976621150970459, 0.7338528633117676, 0.7366266250610352, 0.7605336308479309, 0.76106196641922, 0.7609298825263977, 0.7829877138137817, 0.7832518815994263, 0.7874785661697388, 0.7906485199928284, 0.7973847389221191, 0.8062343001365662], "val_loss": [1.952714306967599, 1.844864777156285, 0.9373336178915841, 0.6978372165134975, 0.6389225210462298, 0.592793345451355, 0.5696230956486293, 0.5321951593671527, 0.5049870354788644, 0.49277416297367643, 0.4839733668736049, 0.43835788113730295, 0.4359889200755528, 0.466788717678615, 0.43964242935180664, 0.42284518480300903, 0.47995526450020926], "val_accuracy": [0.1679999977350235, 0.17299999296665192, 0.5903333425521851, 0.6993333101272583, 0.7133333086967468, 0.7236666679382324, 0.7436666488647461, 0.7639999985694885, 0.762333333492279, 0.7870000004768372, 0.7773333191871643, 0.8076666593551636, 0.8033333420753479, 0.7913333177566528, 0.8013333082199097, 0.8076666593551636, 0.7856666445732117]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 8, 3, 2, 5, 2, 1, 8, 6, 5, 8, 9], [4, 5, 3, 0, 0, 2, 2, 4, 2, 0], [83, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.34057143330574036, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 8, 6, 2, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.square(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, grad)))))), tf.math.subtract(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))), beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.5763202730722243, 2.5782079546757974, 5.790385359455613, 40.480441575478004, 2.368402321136166, 2.3904409267489526], "accuracy": [0.24580636620521545, 0.1826707124710083, 0.16417910158634186, 0.0948355570435524, 0.1014397069811821, 0.09760929644107819], "val_loss": [1.8978605270385742, 1.9650210653032576, 2.4808801923479353, 2.0344841139657155, 2.0504653794424876, 2.0252921921866283], "val_accuracy": [0.1993333399295807, 0.10633333027362823, 0.16033333539962769, 0.09833333641290665, 0.09933333098888397, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 5, 5, 1, 8, 6, 5, 8, 9], [3, 3, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.33628571033477783, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 4, 5, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad))), grad), tf.math.add(beta, tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.9587052594306935, 2.147951558281512, 2.307596868858393, 2.2496325936315555, 2.3450455345324617, 2.3056858999539265, 2.30204800658175, 2.388544946881396, 2.2501677388229138], "accuracy": [0.17884030938148499, 0.18280279636383057, 0.10434553027153015, 0.15995244681835175, 0.16180160641670227, 0.09919429570436478, 0.10051512718200684, 0.16721701622009277, 0.14238542318344116], "val_loss": [1.9723240988595145, 1.988950525011335, 1.9619458743504115, 1.7069876194000244, 1.97787720816476, 1.973879609789167, 1.9669453075953893, 2.004702568054199, 1.8069916452680315], "val_accuracy": [0.10000000149011612, 0.0949999988079071, 0.11500000208616257, 0.35199999809265137, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.09966666996479034, 0.3033333420753479]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 9, 2, 5, 2, 1, 8, 6, 5, 8, 9], [2, 3, 3, 2, 3, 3, 1, 4, 2, 0], [94, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.2791428565979004, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(beta, tf.math.square(beta)), tf.math.add(beta, tf.math.add(grad, grad)))), beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.9587117475588496, 2.203424844759456, 2.2822939570175893, 2.352904507323751, 2.3143865065788156, 2.3041626652234015, 2.3032853383555656, 2.303214704324352], "accuracy": [0.17923656105995178, 0.15176330506801605, 0.14212125539779663, 0.2056531459093094, 0.1002509593963623, 0.09536388516426086, 0.1002509593963623, 0.09694888442754745], "val_loss": [1.971799714224679, 1.9757746968950545, 2.1725234985351562, 2.0135314805167064, 1.9753467696053642, 1.9740584918430872, 1.9739020211356026, 1.9737597874232702], "val_accuracy": [0.10000000149011612, 0.09833333641290665, 0.22766666114330292, 0.09833333641290665, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 3, 5, 8, 1, 5, 6, 5, 8, 9], [4, 3, 3, 1, 2, 2, 0, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 10, 10, 5, 5, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.multiply(tf.math.square(grad), alpha)))))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3027522343497124, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10091137140989304, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 5, 5, 1, 8, 6, 5, 8, 9], [4, 3, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [0, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 4, 5, 0, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad))), grad), tf.math.add(beta, tf.math.add(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [96481960.28607187, 1809252086.9718664, 8515312046.915863, 23496136810.30881, 50589005158.285034, 93729843852.73068], "accuracy": [0.09681680053472519, 0.09906221181154251, 0.09602430462837219, 0.10170386731624603, 0.09959053993225098, 0.09826971590518951], "val_loss": [368101211.4285714, 2942741211.428571, 9929427529.142857, 23533703168.0, 45960715117.71429, 79416751835.42857], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 9, 2, 5, 2, 1, 8, 6, 5, 8, 9], [2, 3, 3, 1, 3, 3, 1, 4, 2, 0], [45, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.subtract(beta, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 5, 5, 1, 8, 6, 5, 8, 9], [2, 3, 3, 1, 3, 3, 1, 4, 2, 0], [94, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 9, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08228767663240433, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 5, 2, 1, 8, 6, 5, 8, 9], [2, 3, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [7, 0], [88, 19], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 4, 2, 1, 2, 3, 4, 3, 1, 4, 6, 6, 2, 7, 3, 1, 1, 3, 7, 8, 3, 8, 7, 8, 1, 5, 2, 3, 6, 5], [1, 3, 0, 2, 3, 3, 2, 2, 1, 2, 3, 0, 1, 2, 2, 1, 2, 3, 0, 1, 3, 2, 3, 2, 0, 0], [48, 57, 41, 10, 72]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 58, 32, 26, 5], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.negative(tf.math.negative(tf.math.pow(tf.math.add(alpha, tf.math.subtract(sigma, tf.math.add(tf.math.multiply(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), beta), sigma))), sigma))), tf.math.pow(tf.math.multiply(tf.math.subtract(tf.math.pow(tf.math.divide_no_nan(tf.math.divide_no_nan(beta, tf.math.add(beta, alpha)), tf.math.add(beta, sigma)), tf.math.multiply(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.subtract(tf.math.multiply(alpha, tf.math.add(beta, tf.math.sqrt(tf.math.multiply(beta, tf.math.sqrt(alpha))))), tf.math.add(beta, sigma)), tf.math.sqrt(tf.math.subtract(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32), tf.math.square(alpha)))))), sigma), tf.math.add(beta, sigma)), tf.math.multiply(beta, tf.math.divide_no_nan(tf.constant(3.42191434e-04, shape=shape, dtype=tf.float32), tf.math.square(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 5, 5, 1, 8, 6, 5, 8, 9], [0, 3, 3, 3, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [7, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [7, 9, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 3, 2, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), alpha)", "other_info": {"loss": [2.302445906028299, 2.3022988147707886, 2.3026629857824243, 2.3043354982555724, 2.311710473143618, 2.3431075201877247], "accuracy": [0.10328886657953262, 0.11015717685222626, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736717769077845, 1.97379241670881, 1.9745628493172782, 1.9778193746294295, 1.9913503101893835, 2.0546107973371233], "val_accuracy": [0.09933333098888397, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 1, 2, 1, 8, 6, 5, 8, 9], [4, 3, 3, 1, 0, 2, 2, 4, 2, 0], [52, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 5, 6, 1, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.add(tf.math.add(beta, tf.math.subtract(grad, alpha)), tf.math.add(beta, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.negative(tf.math.pow(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07779685407876968, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 8, 2, 5, 1, 8, 6, 5, 8, 9], [4, 5, 3, 0, 0, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 8, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: tf.math.subtract(grad, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 9, 2, 5, 2, 1, 8, 6, 5, 8, 9], [2, 2, 3, 1, 3, 3, 1, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 1, 0, 2, 3, 3, 2], [59, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, alpha))", "other_info": {"loss": [2.304895137830449, 2.3060238105336577, 2.3079795126020004, 2.3096113939956666, 2.310706484035935, 2.315587324410256, 2.3174576773824254, 2.3254398153348133, 2.3325901581957322, 2.3402371963001656, 2.371288223541203, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08717474341392517, 0.08532558381557465, 0.0796460211277008, 0.07977809756994247, 0.07700435817241669, 0.07740060985088348, 0.07660810649394989, 0.07238145917654037, 0.07515519857406616, 0.07568352669477463, 0.07621186226606369, 0.09325055778026581, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9724482127598353, 1.9737990243094308, 1.9752840995788574, 1.977196148463658, 1.9790503638131278, 1.9815972873142786, 1.9841333797999792, 1.9880245072501046, 1.9941862651279993, 2.005609784807478, 2.048588820866176, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.032999999821186066, 0.029333332553505898, 0.02666666731238365, 0.026333333924412727, 0.03200000151991844, 0.03766666725277901, 0.04800000041723251, 0.06233333423733711, 0.07900000363588333, 0.0963333323597908, 0.09933333098888397, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 9, 2, 5, 2, 1, 8, 6, 5, 8, 9], [2, 3, 3, 1, 3, 3, 1, 4, 2, 0], [54, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.negative(tf.math.pow(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07779685407876968, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 3, 2, 5, 2, 1, 8, 6, 5, 8, 9], [4, 5, 0, 0, 0, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 3, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 3, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.square(tf.math.add(beta, tf.math.add(grad, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))))), tf.math.subtract(tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(beta, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))))), beta), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, sigma))", "other_info": {"loss": [2.3042456750714817, 2.303724578248511, 2.303761602754937, 2.3032033069652416, 2.3019999628919794, 2.3029204532848513], "accuracy": [0.0878351628780365, 0.08730682730674744, 0.08558975160121918, 0.09285431355237961, 0.09153348207473755, 0.08994849026203156], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]