[{"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [4, 4, 3], [8, 0, 19], [0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 1], [1, 8, 0, 9, 7], [4], [88], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 0, 1], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7977142930030823, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 6, 5, 1, 1, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2908359234280447, 2.265139596746614, 2.2354807550755034, 2.1966114626143667, 2.142324932278769, 2.0719004497709466, 1.9753107608758134, 1.8491861311955742, 1.724843858649088, 1.5943999815894123, 1.478788334837427, 1.3749762527411404, 1.2988396464652547, 1.2427925616994808, 1.1787309885623354, 1.13607584718448, 1.1037449966788906, 1.0644375560872859, 1.0337567896245257, 1.0056282862412727, 0.9816225687305862, 0.971591053188847, 0.9420358505719499, 0.9258972023692601, 0.9139790614330537, 0.896092195143049, 0.8833987780959457, 0.8839395349020372, 0.8563699083730703, 0.858058477932861, 0.8450583714488443, 0.8414691166792091, 0.8212623881893765, 0.8218930642429423, 0.8122692552492713, 0.8084710636048852, 0.7859088759758627, 0.7885149673715858, 0.7824202758162769, 0.7761761357661141, 0.765735027851792, 0.7716585620283183, 0.7594287208420584, 0.7590235579582237, 0.7567305926869747, 0.7452044367097419, 0.7442257174285427, 0.7381483441677076, 0.723997188888253, 0.7233994754313982, 0.7299758175486634, 0.7263211745391385, 0.7179635746635545, 0.7128848674400938, 0.7144492386889858, 0.7029120247629513, 0.7068363443625176, 0.6956610437066816, 0.7004262195554911, 0.6906142565930414, 0.693162012078176, 0.6894765004285369, 0.6812728746707933, 0.6883424286750393, 0.6717692269168557, 0.6836579013352602, 0.6841556077872002, 0.6713281067103254, 0.6798285756994783, 0.6709811371535735, 0.6653400038636796, 0.6654769625126521, 0.6613200637941835, 0.6616760918555904, 0.6624908842320582, 0.6542004701987612, 0.6566124303056547, 0.6507430077071487, 0.6460587916483166, 0.6378724207306236, 0.6426823505037701, 0.6491968326753771, 0.6392971033811286, 0.6446942688451703, 0.6328191201936583, 0.628767045576181, 0.6403297487266972, 0.640404590053833, 0.627368939196854, 0.6266746341339774], "accuracy": [0.11530841141939163, 0.186104878783226, 0.252938836812973, 0.3140932619571686, 0.36005812883377075, 0.38449347019195557, 0.41725003719329834, 0.45410117506980896, 0.4678378105163574, 0.49887728691101074, 0.5221238732337952, 0.5477479696273804, 0.557390034198761, 0.5699379444122314, 0.590278685092926, 0.6015057563781738, 0.6156386137008667, 0.6210539937019348, 0.6357152462005615, 0.64231938123703, 0.6491876840591431, 0.655527651309967, 0.6660943031311035, 0.6653017997741699, 0.6700568199157715, 0.6730946898460388, 0.6824725866317749, 0.6851142644882202, 0.6902654767036438, 0.6894729733467102, 0.6992471218109131, 0.6972658634185791, 0.7037379741668701, 0.7055870890617371, 0.7040021419525146, 0.7065116763114929, 0.7098137736320496, 0.7102100253105164, 0.7116629481315613, 0.7121912837028503, 0.7215691208839417, 0.7187954187393188, 0.7186633348464966, 0.7223616242408752, 0.7168141603469849, 0.7202483415603638, 0.7252674698829651, 0.7238145470619202, 0.7317395210266113, 0.7339849472045898, 0.7326641082763672, 0.7304186820983887, 0.7367587089538574, 0.7371549606323242, 0.7310791015625, 0.7360982894897461, 0.7337207794189453, 0.7412495017051697, 0.7403249144554138, 0.7465327978134155, 0.7437590956687927, 0.743891179561615, 0.7460044622421265, 0.7411174178123474, 0.752740740776062, 0.7450799345970154, 0.7458723783493042, 0.7515519857406616, 0.7445515990257263, 0.7494386434555054, 0.750759482383728, 0.7514199018478394, 0.757099449634552, 0.7510236501693726, 0.7555144429206848, 0.7528728246688843, 0.7563069462776184, 0.7563069462776184, 0.7617223858833313, 0.7578919529914856, 0.7598732113838196, 0.7540615797042847, 0.7622507214546204, 0.7560427784919739, 0.76106196641922, 0.7569673657417297, 0.7601373791694641, 0.7565711140632629, 0.7663452625274658, 0.7629110813140869], "val_loss": [1.9466636521475655, 1.9203614507402693, 1.8881098883492606, 1.8451767648969377, 1.7847514152526855, 1.7040751320975167, 1.5990845816476005, 1.4723612580980574, 1.3396108831678117, 1.212547779083252, 1.1031465189797538, 1.0150769778660365, 0.9474390574863979, 0.8953077793121338, 0.8510354076113019, 0.8159826142447335, 0.7861102478844779, 0.7629953282220023, 0.7429434401648385, 0.7237978151866368, 0.7085577419825962, 0.6951207944325039, 0.6816240549087524, 0.6707465648651123, 0.6615164620535714, 0.6528548002243042, 0.6449317761829921, 0.6373479196003505, 0.6286904641560146, 0.6222713334219796, 0.6170787470681327, 0.6122279678072248, 0.6100421462740216, 0.6044926473072597, 0.5967811346054077, 0.5924257380621774, 0.5878804411206927, 0.583280222756522, 0.5794464520045689, 0.5750107935496739, 0.5711318254470825, 0.5670263426644462, 0.5648301669529506, 0.5621606622423444, 0.5586145605359759, 0.5566442864281791, 0.5549944809504918, 0.5520330156598773, 0.5514826604298183, 0.5466528449739728, 0.5430565561567035, 0.5417604276112148, 0.5395928961890084, 0.5359925201960972, 0.536277209009443, 0.5324643509728568, 0.5304795333317348, 0.5291072300502232, 0.5268665892737252, 0.5241850784846714, 0.521859884262085, 0.5213111979620797, 0.5224088600703648, 0.5195177793502808, 0.5148955583572388, 0.5171616247722081, 0.5131169557571411, 0.5118111712591988, 0.5115513801574707, 0.5103308643613543, 0.5068225349698748, 0.5057118790490287, 0.5058020012719291, 0.5036766869681222, 0.501327565738133, 0.498464788709368, 0.4990419830594744, 0.4979583706174578, 0.49778214522770475, 0.49475363322666716, 0.4949383224759783, 0.4914872476032802, 0.49284660816192627, 0.4913050787789481, 0.4897630214691162, 0.48982105936322895, 0.48711911269596647, 0.4871683291026524, 0.4871174267360142, 0.48376851422446115], "val_accuracy": [0.24266666173934937, 0.37966665625572205, 0.4246666729450226, 0.46566668152809143, 0.5016666650772095, 0.5286666750907898, 0.5559999942779541, 0.5603333115577698, 0.5873333215713501, 0.6060000061988831, 0.6393333077430725, 0.6606666445732117, 0.6669999957084656, 0.6710000038146973, 0.6800000071525574, 0.6846666932106018, 0.6933333277702332, 0.6993333101272583, 0.7003333568572998, 0.7073333263397217, 0.7099999785423279, 0.7153333425521851, 0.7143333554267883, 0.7173333168029785, 0.7203333377838135, 0.7279999852180481, 0.7300000190734863, 0.7326666712760925, 0.7366666793823242, 0.734666645526886, 0.7369999885559082, 0.7403333187103271, 0.7366666793823242, 0.734333336353302, 0.7453333139419556, 0.7440000176429749, 0.746999979019165, 0.7523333430290222, 0.7553333044052124, 0.75, 0.7543333172798157, 0.7540000081062317, 0.7566666603088379, 0.7566666603088379, 0.7599999904632568, 0.7576666474342346, 0.7596666812896729, 0.7639999985694885, 0.7606666684150696, 0.7620000243186951, 0.765666663646698, 0.7680000066757202, 0.7636666893959045, 0.7683333158493042, 0.7670000195503235, 0.7720000147819519, 0.7723333239555359, 0.7703333497047424, 0.7726666927337646, 0.7739999890327454, 0.7749999761581421, 0.7733333110809326, 0.7683333158493042, 0.7773333191871643, 0.7746666669845581, 0.7716666460037231, 0.7760000228881836, 0.7776666879653931, 0.778333306312561, 0.7730000019073486, 0.7789999842643738, 0.7816666960716248, 0.7796666622161865, 0.7770000100135803, 0.784333348274231, 0.7836666703224182, 0.7836666703224182, 0.7820000052452087, 0.7820000052452087, 0.7860000133514404, 0.7879999876022339, 0.7853333353996277, 0.7806666493415833, 0.7820000052452087, 0.7893333435058594, 0.7803333401679993, 0.784333348274231, 0.7846666574478149, 0.7850000262260437, 0.7883333563804626]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0], [7, 8, 0, 0, 9], [4], [88], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7731428742408752, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 5, 5, 0, 1, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))))))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.292219513395695, 2.2656815787662903, 2.2350315569319728, 2.193171470833807, 2.1396550623307125, 2.064734452404697, 1.9702640425464528, 1.8466456507836602, 1.7197756498654473, 1.591085588754113, 1.472276873434886, 1.376622812229298, 1.3066539930834384, 1.2459847125489367, 1.18675400782192, 1.1376567780932163, 1.116631118030344, 1.0815855589336203, 1.0376449153250424, 1.0299183511699368, 0.9875259775023308, 0.9717820258487595, 0.9605947265126182, 0.9407486701764294, 0.925636468097723, 0.9129708464025049, 0.9023804775617693, 0.8988878616740628, 0.8832901948399909, 0.8607915815518532, 0.8570160375625828, 0.8576498814876825, 0.8327871282590993, 0.8309116754880151, 0.820163452803199, 0.8200175473088869, 0.8047107312074978, 0.8043926233361032, 0.8046792850848974, 0.7917270911462618, 0.7876192972550161, 0.7899471580895608, 0.7837671831126195, 0.7753157194626565, 0.7644602071339853, 0.7668581632748414, 0.7689162760898185, 0.7596814478582096, 0.7533565274539514, 0.7541395959333265, 0.7497733038618989, 0.7414107425589808, 0.7321501732061505, 0.7384847781173526, 0.7276392712049543, 0.7365262875656458], "accuracy": [0.11451591551303864, 0.18134988844394684, 0.25016510486602783, 0.31105533242225647, 0.3579447865486145, 0.3959846794605255, 0.41289129853248596, 0.44749704003334045, 0.47430986166000366, 0.4896314740180969, 0.5208030939102173, 0.5511821508407593, 0.5564654469490051, 0.5729758143424988, 0.5921278595924377, 0.6032228469848633, 0.611940324306488, 0.6214502453804016, 0.6391493678092957, 0.6428477168083191, 0.6530181169509888, 0.6593580842018127, 0.6630563735961914, 0.6671509742736816, 0.6756042838096619, 0.67666095495224, 0.68101966381073, 0.6853784322738647, 0.6889446377754211, 0.6915863156318665, 0.6944921612739563, 0.6922467350959778, 0.7121912837028503, 0.7047945857048035, 0.7073041796684265, 0.700700044631958, 0.7102100253105164, 0.7137762308120728, 0.7104741930961609, 0.707568347454071, 0.7182670831680298, 0.7111346125602722, 0.7149649858474731, 0.720380425453186, 0.7252674698829651, 0.7238145470619202, 0.7250033020973206, 0.7231541275978088, 0.7252674698829651, 0.7279091477394104, 0.7250033020973206, 0.7358341217041016, 0.7359662055969238, 0.7337207794189453, 0.7338528633117676, 0.7323999404907227], "val_loss": [1.9468186242239816, 1.92074830191476, 1.8887972150530135, 1.845020362309047, 1.7847287995474679, 1.702843529837472, 1.5969098976680212, 1.4709183829171317, 1.3389579909188407, 1.2138138839176722, 1.1057261398860387, 1.0205798489706857, 0.9522371292114258, 0.8990214552198138, 0.8550537484032767, 0.8202576126371112, 0.7913623877934047, 0.768154399735587, 0.7474934203284127, 0.7307887588228498, 0.7139150244849068, 0.7001103673662458, 0.686920200075422, 0.6756900719233921, 0.6654511179242816, 0.6584579263414655, 0.6479787996837071, 0.6403488261359078, 0.6350538390023368, 0.6261454820632935, 0.619540844644819, 0.615104249545506, 0.6101579325539725, 0.6044140372957502, 0.5995228971753802, 0.5941207238606044, 0.5898184095110212, 0.5865372589656285, 0.5818229062216622, 0.5808603252683368, 0.5743129083088466, 0.5720746176583427, 0.5683796405792236, 0.5657824618475777, 0.5627885035106114, 0.560470700263977, 0.5559048652648926, 0.552296621458871, 0.5522276163101196, 0.5493789400373187, 0.546319842338562, 0.5443750279290336, 0.5399790150778634, 0.5381909438541957, 0.5358589717320034, 0.534068090575082], "val_accuracy": [0.23633334040641785, 0.3566666543483734, 0.40433332324028015, 0.4490000009536743, 0.4880000054836273, 0.5096666812896729, 0.5429999828338623, 0.5673333406448364, 0.581333339214325, 0.5983333587646484, 0.6356666684150696, 0.6430000066757202, 0.6663333177566528, 0.6713333129882812, 0.6809999942779541, 0.6869999766349792, 0.6909999847412109, 0.6946666836738586, 0.6963333487510681, 0.6963333487510681, 0.7020000219345093, 0.7080000042915344, 0.7129999995231628, 0.7163333296775818, 0.721666693687439, 0.7183333039283752, 0.7269999980926514, 0.7333333492279053, 0.7303333282470703, 0.7323333621025085, 0.7379999756813049, 0.7400000095367432, 0.7336666584014893, 0.7403333187103271, 0.7419999837875366, 0.7426666617393494, 0.7456666827201843, 0.7443333268165588, 0.746999979019165, 0.7433333396911621, 0.7506666779518127, 0.7473333477973938, 0.7546666860580444, 0.7563333511352539, 0.7549999952316284, 0.7536666393280029, 0.7590000033378601, 0.762333333492279, 0.7596666812896729, 0.7599999904632568, 0.7689999938011169, 0.765333354473114, 0.7676666378974915, 0.765999972820282, 0.7670000195503235, 0.7680000066757202]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [8, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [4, 4, 3], [8, 0, 19], [0, 0, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 1], [1, 8, 3, 9, 4], [0, 6], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7200000286102295, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 6, 6, 4, 2, 2, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))))), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.271434958679266, 2.0115453398632352, 1.4500935289444405, 1.188108711856121, 0.9463136216290733, 0.8599512638306935, 0.8159047208048364, 0.7706730050449248, 0.7578647699590373, 0.7336637025275613, 0.7003441405192405, 0.6692657937242716, 0.6454609591002635, 0.625471899238922, 0.5957017505110657, 0.5860404642172116, 0.5549718822628011, 0.5470316440689723, 0.5391029771749511, 0.5211496385585174, 0.5160222383120813, 0.5157489672927116, 0.49389167004619783, 0.49367577933427476, 0.47707790593350835, 0.4751062699360004, 0.46593564160669076, 0.4546843909820498, 0.45254544310518746, 0.43900346822112607, 0.43705677892852846, 0.4112856850183525, 0.4181321585309063, 0.4166160604705302, 0.4235268666161333, 0.41185773374728557, 0.4130591228338611, 0.3875556775229624, 0.3919269342574272, 0.3892946058748704, 0.38646822430910827, 0.38054042719988507, 0.3834810819505874], "accuracy": [0.17197199165821075, 0.39307886362075806, 0.5041606426239014, 0.5993924140930176, 0.6476026773452759, 0.6796988248825073, 0.6910579800605774, 0.6999075412750244, 0.7099458575248718, 0.7220974564552307, 0.7345132827758789, 0.7416457533836365, 0.7469290494918823, 0.7618544697761536, 0.767930269241333, 0.7840443849563599, 0.7868181467056274, 0.7909126877784729, 0.7955356240272522, 0.800818920135498, 0.8014793395996094, 0.8012151718139648, 0.8057059645652771, 0.8025360107421875, 0.8138951063156128, 0.8142913579940796, 0.8170651197433472, 0.8253863453865051, 0.8317263126373291, 0.8284242749214172, 0.8313300609588623, 0.8380662798881531, 0.8354246616363525, 0.8392550349235535, 0.8412362933158875, 0.8409721255302429, 0.8504821062088013, 0.8558974862098694, 0.846387505531311, 0.8421608805656433, 0.8490291833877563, 0.8529917001724243, 0.848368763923645], "val_loss": [1.8671413830348425, 1.301274231501988, 0.8215384313038417, 0.6858425480978829, 0.6856660161699567, 0.6175232444490705, 0.6156024762562343, 0.5922777312142509, 0.5746978010450091, 0.5576213427952358, 0.5322505916867938, 0.4966679981776646, 0.4990606818880354, 0.47088282448904856, 0.45538772855486187, 0.461228540965489, 0.44491515840802875, 0.4409841980252947, 0.43899298565728323, 0.4295180950845991, 0.4302910140582493, 0.41750658409936087, 0.41647509166172575, 0.4044939194406782, 0.4082659823553903, 0.4106754575456892, 0.4008065973009382, 0.4135171515601022, 0.39747190475463867, 0.4083102345466614, 0.39195737668446134, 0.3869563341140747, 0.3820915733064924, 0.39484043632234844, 0.41825845411845614, 0.37864590542657034, 0.3925402249608721, 0.4056858846119472, 0.390445956162044, 0.37636490379061016, 0.39285600185394287, 0.40006658860615324, 0.3906156250408718], "val_accuracy": [0.41966667771339417, 0.559333324432373, 0.6349999904632568, 0.6903333067893982, 0.7286666631698608, 0.7286666631698608, 0.7139999866485596, 0.7433333396911621, 0.7423333525657654, 0.7559999823570251, 0.7603333592414856, 0.777999997138977, 0.7766666412353516, 0.7850000262260437, 0.796999990940094, 0.7986666560173035, 0.7979999780654907, 0.8026666641235352, 0.8053333163261414, 0.8133333325386047, 0.8166666626930237, 0.8236666917800903, 0.8190000057220459, 0.8253333568572998, 0.8259999752044678, 0.8253333568572998, 0.8330000042915344, 0.8356666564941406, 0.8376666903495789, 0.8349999785423279, 0.8386666774749756, 0.8366666436195374, 0.8506666421890259, 0.8463333249092102, 0.8413333296775818, 0.8519999980926514, 0.8533333539962769, 0.8569999933242798, 0.8506666421890259, 0.8533333539962769, 0.8550000190734863, 0.8493333458900452, 0.8553333282470703]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 1], [1, 8, 0, 0], [4, 2], [], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 0, 1], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7008571624755859, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 5, 3, 2, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.271434958679266, 2.0115450159150217, 1.4500924296241158, 1.1880893884727337, 0.9459360180010082, 0.8595766304522111, 0.8156332438411872, 0.7707291611464993, 0.7568357357212329, 0.7337504307103588, 0.7018374912632676, 0.6692795884245502, 0.6473863602172681, 0.6249114640746938, 0.59715081165023, 0.5844570656163487, 0.555204324332746, 0.5476777210069953, 0.5384991666415994, 0.5196643226166537, 0.5134573861899518, 0.5127958440627908, 0.4918119558537279, 0.4929936867009978, 0.47872476615311843, 0.4738203599436912, 0.46684051640533486, 0.45338756920654916, 0.4544394933835721, 0.44291339118908013, 0.43583022423502854, 0.4161638343228703, 0.4179086317877177, 0.4089116628033657, 0.4182302983854866, 0.40162115433763723, 0.38836944724795147, 0.3731126180296293, 0.37961936381987105, 0.37948866927187597, 0.382532214338218, 0.3721642967039458, 0.3633084783480388, 0.35994123721702176, 0.36384622281678775], "accuracy": [0.17197199165821075, 0.39307886362075806, 0.5041606426239014, 0.5992603302001953, 0.6473385095596313, 0.6800950765609741, 0.6914542317390442, 0.7012283802032471, 0.7102100253105164, 0.7234182953834534, 0.7341170310974121, 0.741909921169281, 0.7458723783493042, 0.7633073329925537, 0.7652885913848877, 0.7862898111343384, 0.7881389260292053, 0.7905164361000061, 0.7955356240272522, 0.800818920135498, 0.8012151718139648, 0.8026680946350098, 0.8076872229576111, 0.802800178527832, 0.8123101592063904, 0.8131026029586792, 0.8178576231002808, 0.8234050869941711, 0.8315942287445068, 0.8264430165290833, 0.8347642421722412, 0.8360850811004639, 0.8334434032440186, 0.8422929644584656, 0.8399154543876648, 0.844010055065155, 0.8552370667457581, 0.8585391640663147, 0.8516708612442017, 0.8496896028518677, 0.850350022315979, 0.8518029451370239, 0.8564258217811584, 0.8617091774940491, 0.8574824929237366], "val_loss": [1.8671413830348425, 1.3012779780796595, 0.821513158934457, 0.6857955796377999, 0.6856602430343628, 0.6177966254098075, 0.6154950686863491, 0.5923055921282087, 0.5745096036366054, 0.558655823980059, 0.5320796966552734, 0.49756005832127165, 0.4990155356270926, 0.4711667810167585, 0.45515503202165875, 0.45983586992536274, 0.44564574105398996, 0.4416933996336801, 0.4371375782149179, 0.42876629318509785, 0.42977276870182585, 0.4191947749682835, 0.4162205627986363, 0.4064091444015503, 0.4064172846930368, 0.41482824087142944, 0.40485907452447073, 0.4161793759890965, 0.3992254137992859, 0.4047561543328421, 0.3984410677637373, 0.38750639983585905, 0.4030652471951076, 0.38869140829358784, 0.3948829344340733, 0.39636347123554777, 0.3898053339549473, 0.37458330392837524, 0.3827617083277021, 0.38200574261801584, 0.4005014385495867, 0.3900005391665867, 0.37535288504191805, 0.3961684788976397, 0.39794258560453144], "val_accuracy": [0.41966667771339417, 0.559333324432373, 0.6353333592414856, 0.6899999976158142, 0.7276666760444641, 0.7279999852180481, 0.7133333086967468, 0.7429999709129333, 0.7426666617393494, 0.7556666731834412, 0.7596666812896729, 0.777999997138977, 0.7766666412353516, 0.7853333353996277, 0.7963333129882812, 0.7976666688919067, 0.8013333082199097, 0.8013333082199097, 0.8026666641235352, 0.8149999976158142, 0.8186666369438171, 0.8209999799728394, 0.8199999928474426, 0.8220000267028809, 0.8273333311080933, 0.8216666579246521, 0.8306666612625122, 0.8336666822433472, 0.8429999947547913, 0.8333333134651184, 0.8373333215713501, 0.8320000171661377, 0.843666672706604, 0.8486666679382324, 0.8533333539962769, 0.8569999933242798, 0.8553333282470703, 0.8569999933242798, 0.8566666841506958, 0.8606666922569275, 0.8579999804496765, 0.8496666550636292, 0.856333315372467, 0.8569999933242798, 0.8536666631698608]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [1, 0, 0, 1, 0, 1], [1, 1, 0], [1, 8, 7, 9], [4], [28], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 0, 0, 1, 3, 3], [17, 57]], "fitness": -0.6465714573860168, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3005533541796654, 2.298702391902957, 2.296288942632548, 2.293384555056583, 2.2899532932505204, 2.2873428370171314, 2.285205847520114, 2.2792578737702054, 2.279094702595056, 2.275301408616543, 2.274080208059252, 2.268494563757106, 2.267076907424312, 2.26352650340459, 2.2591616544961584, 2.256849109000691, 2.254089266223174, 2.2494690841797746, 2.2454137225208375, 2.242560581461219, 2.24050314567187, 2.2375740970933538, 2.2313981198237918, 2.2294148143571304, 2.2225817499411433, 2.2197632099958287, 2.2166096861210356, 2.2130630091905372, 2.206947950465946, 2.203425644663079, 2.197599666402986, 2.191954501600093, 2.187935706158639, 2.1834106408153087, 2.175262134561071, 2.170361019947494, 2.1637772221717033, 2.158280422627383, 2.151271724398614, 2.1430960039436826, 2.138224834023434, 2.1329223162399513, 2.125029571871039, 2.1141681052973684, 2.1051338442627463, 2.1004488575869487, 2.0938307199149384, 2.081318908285046, 2.0720877433260907, 2.062721188514618, 2.053374061432056, 2.041949781617626, 2.0307177000230943, 2.0227841732760523, 2.0096613458906263, 1.9990848074058862, 1.9913488635612502, 1.9716201247855294, 1.9654761220895225, 1.9521477978069863, 1.940746036298271, 1.924250542149174, 1.9078592834786308, 1.9032029278478948, 1.8869766047790995, 1.8756914501098232, 1.8574869830956973, 1.8454576792293111, 1.8318093863177245, 1.8120893631723374, 1.8001799667988472, 1.7864519529149927, 1.7722557501439578, 1.7583434560815057, 1.7456586704655976, 1.7240677332093985, 1.7125715975433278, 1.6999828129585597, 1.6830537644643133, 1.668644960246869, 1.655704367052153, 1.6462576404585894, 1.6254302716573248, 1.6120389496976233, 1.6061833286486944, 1.5799902238078705, 1.57507925996565, 1.56809793142453, 1.5429103320474087, 1.5268889462801412, 1.513173603473039, 1.50049446263979, 1.4901366057633378, 1.48467878014609, 1.4728203861704907, 1.4543101459588073, 1.4440111034440168, 1.4329872687164316, 1.4263650525468075, 1.4158056467877813], "accuracy": [0.08730682730674744, 0.10342095047235489, 0.10817593336105347, 0.11768590658903122, 0.1258750557899475, 0.1298375427722931, 0.13802668452262878, 0.14753665030002594, 0.14951789379119873, 0.1604807823896408, 0.16523577272891998, 0.17778365314006805, 0.18518029153347015, 0.19297318160533905, 0.2056531459093094, 0.21054022014141083, 0.21252146363258362, 0.2285034954547882, 0.228899747133255, 0.2429005354642868, 0.2475234419107437, 0.2518821954727173, 0.2599392533302307, 0.26720380783081055, 0.27816668152809143, 0.27565711736679077, 0.2852991819381714, 0.28503501415252686, 0.2937524616718292, 0.3035266101360321, 0.3039228618144989, 0.3156782388687134, 0.3183199167251587, 0.3171311616897583, 0.33179235458374023, 0.3349623680114746, 0.3299432098865509, 0.34262317419052124, 0.349359393119812, 0.35741645097732544, 0.3520010709762573, 0.35239729285240173, 0.36586976051330566, 0.37247392535209656, 0.3765684962272644, 0.3715493381023407, 0.3793422281742096, 0.38621053099632263, 0.3843613862991333, 0.3965130150318146, 0.39889049530029297, 0.4015321731567383, 0.40245673060417175, 0.4023246467113495, 0.41024965047836304, 0.41447630524635315, 0.40826839208602905, 0.428609162569046, 0.4275524914264679, 0.4159291982650757, 0.42689210176467896, 0.43230748176574707, 0.43164706230163574, 0.42808082699775696, 0.43547746539115906, 0.45066702365875244, 0.44710078835487366, 0.44670453667640686, 0.4493461847305298, 0.46229031682014465, 0.45964866876602173, 0.45766741037368774, 0.4659886360168457, 0.46308282017707825, 0.4691586196422577, 0.474970281124115, 0.4807819426059723, 0.47629112005233765, 0.47232863306999207, 0.48448026180267334, 0.48725399374961853, 0.47946110367774963, 0.49266940355300903, 0.49253731966018677, 0.4967639744281769, 0.5004622936248779, 0.49729230999946594, 0.49570730328559875, 0.5052172541618347, 0.5116893649101257, 0.5119535326957703, 0.5194822549819946, 0.5259543061256409, 0.5173689126968384, 0.5204068422317505, 0.5271430611610413, 0.5337471961975098, 0.5332188606262207, 0.5305771827697754, 0.5367851257324219], "val_loss": [1.968498706817627, 1.9657872063773019, 1.9630996159144811, 1.9604283741542272, 1.9577538626534599, 1.9550920213971819, 1.9523818152291434, 1.9496751512799944, 1.9469310215541296, 1.9442299434116908, 1.941462789263044, 1.9386538096836634, 1.9358013698032923, 1.9329325812203544, 1.9299548012869698, 1.9269270215715681, 1.923868179321289, 1.9206694875444685, 1.9174144608633858, 1.9140464918954032, 1.9106600625174386, 1.9072025844029017, 1.9035655430385046, 1.8998641286577498, 1.8960235459463937, 1.8920700209481376, 1.8880023956298828, 1.8837964875357491, 1.8794478007725306, 1.874927180153983, 1.8702507700238908, 1.8653972489493233, 1.8603448186601912, 1.855173179081508, 1.8497796739850725, 1.8441778591700964, 1.838418892451695, 1.832392965044294, 1.8261443546840124, 1.819662366594587, 1.812979085104806, 1.8061415127345495, 1.798994813646589, 1.7915402821132116, 1.7837907927376884, 1.7758873530796595, 1.767765726361956, 1.7593184198651994, 1.7505928448268346, 1.7415222440447127, 1.7322068895612444, 1.7225443976266044, 1.7125225748334612, 1.7022808279309953, 1.6917012419019426, 1.680891990661621, 1.6698508262634277, 1.6582356521061488, 1.6465391431535994, 1.634521211896624, 1.6222811085837228, 1.609572274344308, 1.5965962409973145, 1.5836011341639928, 1.5703291211809431, 1.5568996497562952, 1.5432216780526298, 1.5293472494397844, 1.5153417927878243, 1.501107999256679, 1.4868343557630266, 1.4724139826638358, 1.4578595502035958, 1.4432955810001917, 1.4286860397883825, 1.4139400209699358, 1.3991504737309046, 1.3845135825020927, 1.3697905199868339, 1.3551591805049352, 1.340597357068743, 1.3261891092572893, 1.3117028304508753, 1.2975366796766008, 1.2835491725376673, 1.2693909236363001, 1.2556558677128382, 1.2422474111829485, 1.2287206309182304, 1.2153629234858923, 1.2022135938916887, 1.18928177016122, 1.1767235483442033, 1.1645308903285436, 1.1526165689740862, 1.1408564363207137, 1.129373550415039, 1.1180486338479179, 1.1072087628500802, 1.0965843881879533], "val_accuracy": [0.0573333315551281, 0.07133333384990692, 0.09033333510160446, 0.10966666787862778, 0.1340000033378601, 0.15666666626930237, 0.18266665935516357, 0.21066667139530182, 0.23466666042804718, 0.25566667318344116, 0.28200000524520874, 0.30133333802223206, 0.3163333237171173, 0.3316666781902313, 0.343666672706604, 0.3556666672229767, 0.3610000014305115, 0.36500000953674316, 0.3713333308696747, 0.3766666650772095, 0.3799999952316284, 0.38733333349227905, 0.3903333246707916, 0.3956666588783264, 0.40066665410995483, 0.406333327293396, 0.41366666555404663, 0.4169999957084656, 0.421999990940094, 0.4269999861717224, 0.42933332920074463, 0.4323333203792572, 0.4363333284854889, 0.4416666626930237, 0.445333331823349, 0.4503333270549774, 0.4543333351612091, 0.4569999873638153, 0.4596666693687439, 0.4646666646003723, 0.46833333373069763, 0.47466665506362915, 0.47999998927116394, 0.48633334040641785, 0.49133333563804626, 0.4959999918937683, 0.4970000088214874, 0.4976666569709778, 0.5049999952316284, 0.5099999904632568, 0.5146666765213013, 0.518666684627533, 0.5246666669845581, 0.528333306312561, 0.5333333611488342, 0.5370000004768372, 0.5403333306312561, 0.5419999957084656, 0.543666660785675, 0.5463333129882812, 0.5479999780654907, 0.5509999990463257, 0.5523333549499512, 0.5553333163261414, 0.5573333501815796, 0.5586666464805603, 0.5600000023841858, 0.562333345413208, 0.5640000104904175, 0.5673333406448364, 0.5690000057220459, 0.5709999799728394, 0.5743333101272583, 0.5759999752044678, 0.57833331823349, 0.5796666741371155, 0.581333339214325, 0.5826666951179504, 0.5843333601951599, 0.5866666436195374, 0.5896666646003723, 0.5913333296775818, 0.5943333506584167, 0.5953333377838135, 0.597000002861023, 0.5993333458900452, 0.6010000109672546, 0.6016666889190674, 0.6056666374206543, 0.6076666712760925, 0.6133333444595337, 0.6176666617393494, 0.6206666827201843, 0.6233333349227905, 0.625333309173584, 0.6299999952316284, 0.6326666474342346, 0.6346666812896729, 0.6359999775886536, 0.6389999985694885]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [1, 2, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 0, 0, 1, 0, 1, 0], [0, 0, 0, 0, 1], [5, 8, 6, 8], [4], [], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 0, 1], [2, 0, 0, 1, 3, 3], [61, 57]], "fitness": -0.10342857241630554, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 6, 4, 4, 0, 0, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.sqrt(sigma)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.7621128388431173, 2.3811386297596537, 2.467981056908197, 2.376988937952074, 2.3392013753992518, 2.3729133577930015, 2.348091473873533], "accuracy": [0.1950865089893341, 0.10817593336105347, 0.11253467202186584, 0.10289261490106583, 0.10077928751707077, 0.10170386731624603, 0.10196803510189056], "val_loss": [2.07660858971732, 1.8699222292218889, 2.0219099862234935, 2.0346482821873257, 2.0256073815482005, 1.9858070782252721, 2.0118542398725237], "val_accuracy": [0.09966666996479034, 0.21266666054725647, 0.09799999743700027, 0.10199999809265137, 0.10000000149011612, 0.10066666454076767, 0.10199999809265137]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [3, 0, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1], [1, 8, 7, 9], [4, 7], [88], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 4, 0], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 4, 4, 0, 1, 12, 7, 5, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(beta), tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.negative(alpha), sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [4, 4, 3], [8, 0, 19], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0], [1, 8, 7, 9], [4], [28], [1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07106062769889832, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [0, 4, 3], [8, 0, 19], [0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0], [7, 8, 0, 0, 9], [4], [88], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [2, 2, 0, 4, 7], [2, 1, 0, 1, 3, 3], [2, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 6, 5, 5, 0, 1, 3, 1, 2, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))))))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07079645991325378, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 0, 0, 1], [1, 1, 0], [1, 8], [5], [89], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [7, 3, 0, 4, 7, 8, 2], [1, 0, 0, 1, 3, 3], [17, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 13, 7, 6, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.negative(alpha), tf.math.pow(tf.math.add(tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(alpha, sigma)))), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [4, 4, 3], [8, 0, 19], [0, 1, 0, 0, 1, 1], [0, 0, 1, 0], [1, 8, 0, 0], [0], [84], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 5, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 3, 2, 1, 1, 3, 2, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(beta))", "other_info": {"loss": [2.309690455435573, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08268392831087112, 0.0952318087220192, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.0229599135262624, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [1, 0, 0, 1], [1, 1, 0], [1, 8, 0, 0], [5], [], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 7, 0, 4, 7], [2, 0, 0, 1, 3, 3], [71, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(beta, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [18052281.60022969, 2.3138420000493234, 2.305455151172346, 2.3035384361943265, 2.303234511614633, 2.3028924927467744, 2.3030202164232394], "accuracy": [0.09826971590518951, 0.09100515395402908, 0.09470347315073013, 0.09813763201236725, 0.09259014576673508, 0.09721305221319199, 0.09668471664190292], "val_loss": [1.9885690552847726, 1.9772517340523856, 1.974489348275321, 1.9738101278032576, 1.97373138155256, 1.973736081804548, 1.9736440522330148], "val_accuracy": [0.09799999743700027, 0.1003333330154419, 0.09833333641290665, 0.09833333641290665, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [4, 4, 3], [8, 0, 19], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0], [1, 8, 7, 9], [4], [], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 7, 3], [2, 3, 0, 1, 3, 3], [51, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 13, 7, 6, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(beta), tf.math.pow(tf.math.add(sigma, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.multiply(alpha, sigma), sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07106062769889832, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [3, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 0, 0, 1], [1, 1, 0], [1, 8, 7, 9], [4], [], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 3, 0, 4, 7, 4, 7], [2, 3, 0, 1, 3, 3, 2], [71, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 14, 7, 7, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(tf.math.negative(beta), tf.math.pow(tf.math.add(sigma, tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.add(alpha, sigma), sigma))), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [4, 4, 3], [8, 0, 19], [0, 0, 0, 1], [1, 0, 1, 0], [1, 8, 7, 9], [4], [], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [4, 3, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07106062769889832, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [8, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [1, 0, 0, 1], [1, 1, 0], [1, 8], [5], [], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 6, 9], [3, 0, 0, 1, 3, 3], [88, 57, 84]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 11, 7, 4, 3], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(sigma), tf.math.pow(tf.math.add(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32), alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1], [0, 1, 1, 0], [1, 8], [5], [28], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 3, 3], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 13, 7, 6, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(beta), tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.multiply(alpha, sigma), sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07106062769889832, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [3, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0], [7, 8, 0, 0, 9], [4], [28], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 4, 0, 4, 7, 8, 9], [2, 0, 0, 1, 3, 3], [28, 57, 41]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 10, 7, 3, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(beta, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [3, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [2, 4, 3], [8, 0, 19], [0, 0, 0, 1, 0, 1], [0, 1, 0, 0], [1, 8, 0, 0], [4], [], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 9, 7, 0, 1], [2, 2, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 2, 1, 0, 6, 4, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.sqrt(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(beta, beta), tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3017720873203764, 2.3028721785139115, 2.3033612465042843, 2.3033462169384205, 2.302786739353396, 2.303001544888403], "accuracy": [0.08519349992275238, 0.09298639744520187, 0.08875974267721176, 0.09140139818191528, 0.09377889335155487, 0.09126931428909302], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [4, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [4, 4, 3], [8, 0, 19], [0, 1, 0, 1], [0, 0, 1, 0], [1, 8, 7, 9], [4], [28], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 2, 3, 8], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0, 0, 14, 8, 6, 2], "tree_depth": 18, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.sqrt(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(tf.math.pow(tf.math.add(tf.math.add(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.sqrt(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), alpha)), sigma)), sigma))", "other_info": {"loss": [2.3017720873203764, 2.3028721785139115, 2.3033612465042843, 2.3033462169384205, 2.302786739353396, 2.303001544888403], "accuracy": [0.08519349992275238, 0.09298639744520187, 0.08875974267721176, 0.09140139818191528, 0.09377889335155487, 0.09126931428909302], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]