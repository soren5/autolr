[{"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7985714077949524, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 2, 1, 1, 4, 2, 2, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2911265126907154, 2.2645481309839104, 2.232645409911174, 2.1960528071971224, 2.143417565357479, 2.0713959383596094, 1.9711522503362717, 1.8577153772143262, 1.7203217077689825, 1.6007688563686588, 1.475562710189517, 1.3844052915166256, 1.2941104332532518, 1.2454722342537128, 1.175008361161015, 1.142100437001435, 1.0892182607314433, 1.0684870402133697, 1.0396685327096087, 0.9995140452914628, 0.9781556662992322, 0.958854093157683, 0.9404195763289794, 0.9338134792754521, 0.9109065822165608, 0.906064312227524, 0.8922004172311027, 0.8783897825235925, 0.8684918312443214, 0.8451189779492102, 0.8453304367357667, 0.8177312448544036, 0.8248717925252853, 0.8168813023254179, 0.8084555407950371, 0.7993269741826479, 0.7873383029781674, 0.798427739320981, 0.7820594214555405, 0.7670862561187975, 0.7796124222413692, 0.7683549106176173, 0.7688957224700271, 0.7570495027293461, 0.749373721707971, 0.7492494123911955, 0.7450414777211446, 0.7352384201460952, 0.7397496815307848, 0.724346585198794, 0.7253555813013303, 0.7177570887434485, 0.7169092789994979, 0.711876192687761, 0.715882563501254, 0.7069167922658218, 0.7052896111128967, 0.6992872577254577, 0.6923391023930494, 0.6931611756370871, 0.6932844107161423, 0.6903784821109371, 0.6812270664110663, 0.6831627244395728, 0.6751222406490494, 0.6682154164810569, 0.6763639413464921, 0.6780519771018536, 0.669713067797433, 0.666847907635577, 0.6694874303326112, 0.6661035801520074, 0.6575910129630256, 0.6664005531815648, 0.6553165441443656, 0.657668834845183, 0.6557077007239537, 0.6565905312867669, 0.646573686155708, 0.6460710936817022, 0.6397033438013686, 0.6426069105557951, 0.6402214545190232, 0.6429003453871924, 0.6345946831222004, 0.6327447556328261, 0.6286872320990159, 0.6315171283391394, 0.6276963702313826, 0.6264387523698107, 0.6327528923242131, 0.6274765971204183], "accuracy": [0.11834631860256195, 0.18280279636383057, 0.25795799493789673, 0.29824328422546387, 0.34500065445899963, 0.3796063959598541, 0.41183462738990784, 0.44406285881996155, 0.46585655212402344, 0.488971084356308, 0.525029718875885, 0.5398229956626892, 0.5634658336639404, 0.5713908076286316, 0.5929203629493713, 0.5952978730201721, 0.6217144131660461, 0.6199973821640015, 0.6375643610954285, 0.6477347612380981, 0.6579051613807678, 0.6609430909156799, 0.6670188903808594, 0.6687359809875488, 0.6713775992393494, 0.6738871932029724, 0.6798309087753296, 0.6836613416671753, 0.6827367544174194, 0.6968696117401123, 0.6950204968452454, 0.7018887996673584, 0.7057191729545593, 0.7033417224884033, 0.7034738063812256, 0.71100252866745, 0.7108704447746277, 0.7116629481315613, 0.7177387475967407, 0.7214370369911194, 0.717870831489563, 0.7181349992752075, 0.7189275026321411, 0.7223616242408752, 0.7275128960609436, 0.7246070504188538, 0.7326641082763672, 0.7271166443824768, 0.7337207794189453, 0.7318716049194336, 0.7329282760620117, 0.7386078238487244, 0.733588695526123, 0.7310791015625, 0.7391361594200134, 0.7360982894897461, 0.7407211661338806, 0.7408532500267029, 0.7390040755271912, 0.7445515990257263, 0.737022876739502, 0.7411174178123474, 0.7470611333847046, 0.7500990629196167, 0.7490423917770386, 0.7494386434555054, 0.7478536367416382, 0.7493065595626831, 0.7499669790267944, 0.7511557340621948, 0.7489103078842163, 0.7523444890975952, 0.7563069462776184, 0.7485140562057495, 0.7514199018478394, 0.7534011602401733, 0.7573636174201965, 0.750231146812439, 0.7552502751350403, 0.7644960880279541, 0.7574957013130188, 0.7605336308479309, 0.754589855670929, 0.7617223858833313, 0.759609043598175, 0.7635715007781982, 0.7647602558135986, 0.7607977986335754, 0.7637035846710205, 0.7629110813140869, 0.7602694630622864, 0.7705719470977783], "val_loss": [1.946725300380162, 1.9203929901123047, 1.8881173815046037, 1.845041275024414, 1.7851218496050154, 1.7040481907980782, 1.5984602996281214, 1.4742046424320765, 1.3400146620614188, 1.2141917092459542, 1.1041443347930908, 1.0168209075927734, 0.9479878970554897, 0.8952148301260812, 0.850776025227138, 0.8157634053911481, 0.7858295610972813, 0.7611115149089268, 0.7405787706375122, 0.7221119914736066, 0.7060131345476423, 0.6925209760665894, 0.6805027553013393, 0.6697371857506889, 0.6609469481876918, 0.6514888831547329, 0.6442098276955741, 0.6372457572392055, 0.6317935841424125, 0.6227695771626064, 0.6166342837469918, 0.6079342876161847, 0.6054470198495048, 0.6007953030722482, 0.5963900600160871, 0.592644453048706, 0.5851467507226127, 0.5840929065431867, 0.5779224293572562, 0.57527642590659, 0.5720552206039429, 0.5710591929299491, 0.5653625215802874, 0.5625600133623395, 0.5586705718721662, 0.556724054472787, 0.5532633577074323, 0.5525248731885638, 0.5508713041033063, 0.5472794089998517, 0.5438394716807774, 0.5418559312820435, 0.541000417300633, 0.5366442373820713, 0.5363854169845581, 0.5324885674885341, 0.5318606751305717, 0.5281016656330654, 0.5290893145969936, 0.52286240032741, 0.521346892629351, 0.5198214054107666, 0.5186872141701835, 0.5171935217721122, 0.5141288212367466, 0.5167049510138375, 0.511630654335022, 0.5114882503237043, 0.5093815837587629, 0.5081646953310285, 0.5064648389816284, 0.5045575244086129, 0.5051220144544329, 0.5021168163844517, 0.5018432821546283, 0.5009124449321202, 0.4989956447056362, 0.49835942472730366, 0.49920100825173513, 0.4988424948283604, 0.49505834920065744, 0.4927011898585728, 0.4904695578983852, 0.4913808788572039, 0.48987451621464323, 0.4896860803876604, 0.48724481037684847, 0.4900862659726824, 0.48569091728755404, 0.48475444316864014, 0.4828235251562936, 0.48427622658865793], "val_accuracy": [0.23766666650772095, 0.3580000102519989, 0.4026666581630707, 0.4463333189487457, 0.48533332347869873, 0.527999997138977, 0.5569999814033508, 0.5676666498184204, 0.5886666774749756, 0.6086666584014893, 0.6366666555404663, 0.6476666927337646, 0.6673333048820496, 0.6729999780654907, 0.6823333501815796, 0.687333345413208, 0.6890000104904175, 0.6946666836738586, 0.6996666789054871, 0.7013333439826965, 0.7080000042915344, 0.7136666774749756, 0.7166666388511658, 0.7233333587646484, 0.7223333120346069, 0.7283333539962769, 0.7239999771118164, 0.7333333492279053, 0.7369999885559082, 0.7363333106040955, 0.7423333525657654, 0.7366666793823242, 0.7429999709129333, 0.7446666955947876, 0.7453333139419556, 0.7456666827201843, 0.7483333349227905, 0.7519999742507935, 0.7516666650772095, 0.7490000128746033, 0.7563333511352539, 0.7546666860580444, 0.7573333382606506, 0.7590000033378601, 0.7590000033378601, 0.7590000033378601, 0.765666663646698, 0.7663333415985107, 0.7696666717529297, 0.7670000195503235, 0.765333354473114, 0.765666663646698, 0.7680000066757202, 0.7726666927337646, 0.7706666588783264, 0.7693333625793457, 0.7673333287239075, 0.7730000019073486, 0.7693333625793457, 0.7763333320617676, 0.7739999890327454, 0.7760000228881836, 0.7766666412353516, 0.7776666879653931, 0.7770000100135803, 0.7710000276565552, 0.7789999842643738, 0.777999997138977, 0.7793333530426025, 0.7753333449363708, 0.7799999713897705, 0.7789999842643738, 0.7749999761581421, 0.781333327293396, 0.7803333401679993, 0.7820000052452087, 0.7803333401679993, 0.7789999842643738, 0.7796666622161865, 0.7846666574478149, 0.7806666493415833, 0.781333327293396, 0.7889999747276306, 0.7870000004768372, 0.7863333225250244, 0.781333327293396, 0.7906666398048401, 0.781000018119812, 0.7846666574478149, 0.7900000214576721, 0.7863333225250244, 0.7870000004768372]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1], [1, 1, 5, 7, 8], [0, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [4, 4, 3], [8, 0, 19], [0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 1, 1], [1, 8, 3, 9, 4], [5], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7968571186065674, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2923987971761712, 2.26488439474029, 2.2317889615639466, 2.19226009051215, 2.138414397955791, 2.0612279019099438, 1.969569137792042, 1.8509088563503386, 1.7151546729884803, 1.5924592489705598, 1.4784237703926228, 1.3818626286347055, 1.3029599826979268, 1.2435499000480037, 1.1974144440128063, 1.144199453812895, 1.101371193794983, 1.0777960660325034, 1.042693312590731, 1.0080827336505955, 0.9951419475733281, 0.9762279673527103, 0.956783656911166, 0.9374497038199209, 0.9293065424277845, 0.9153384468999789, 0.903866391581252, 0.8891623277532552, 0.8750454078749139, 0.85987176735797, 0.8562978605127542, 0.8506527873172641, 0.8420639539816754, 0.8358662959811647, 0.8209009289883226, 0.8183312243820733, 0.8165809321460187, 0.8122516947336768, 0.7915102483700012, 0.806609966405048, 0.7895759624843474, 0.7873636190177364, 0.7815421974150386, 0.770043530374108, 0.765110582550204, 0.7674135519780849, 0.7604122361675812, 0.7526789194462778, 0.7516651117192314, 0.7360091232242617, 0.7426607967241802, 0.7420885391270622, 0.733711934344738, 0.7312638008315817, 0.7297239853500957, 0.7338491629033183, 0.7272805711218804, 0.7211451113672777, 0.7135064901456605, 0.7136368938110225, 0.7045829945142165, 0.7067622164646397, 0.7075495326035626, 0.7058984031215587, 0.7017392339786408, 0.696351377152496, 0.6988263935098684, 0.6866524953726276, 0.6872482857353353, 0.6919090712248389, 0.6831494985302567, 0.6884335101225498, 0.6846704895092338, 0.6785121505066168, 0.6737488449572446, 0.670773574122191, 0.6786054070631055, 0.669534394029676, 0.6715917054137156, 0.6627011534213831, 0.6618436807654616, 0.6709937562228918, 0.6644781486878794, 0.6630151110271091, 0.6598078293051497, 0.650437539374241, 0.6593784884675272, 0.6489695096611111, 0.6518573715481791, 0.6492219836862095, 0.6451645061529198, 0.6435724612019869, 0.6522065388638314], "accuracy": [0.11610091477632523, 0.19297318160533905, 0.2608638107776642, 0.30999869108200073, 0.35107648372650146, 0.3971734344959259, 0.40826839208602905, 0.4473649561405182, 0.47232863306999207, 0.490159809589386, 0.5239730477333069, 0.5403513312339783, 0.565711259841919, 0.5705983638763428, 0.5820895433425903, 0.6036190986633301, 0.6144498586654663, 0.6256769299507141, 0.6390172839164734, 0.6499801874160767, 0.6543388962745667, 0.6585655808448792, 0.6664905548095703, 0.6709813475608826, 0.6752080321311951, 0.6763967871665955, 0.6773213744163513, 0.6844538450241089, 0.6936996579170227, 0.6927750706672668, 0.6902654767036438, 0.6936996579170227, 0.6991150379180908, 0.6959450244903564, 0.7073041796684265, 0.707568347454071, 0.7107383608818054, 0.7080966830253601, 0.7148329019546509, 0.7092854380607605, 0.7148329019546509, 0.7197200059890747, 0.7186633348464966, 0.7257958054542542, 0.726192057132721, 0.7166820764541626, 0.7220974564552307, 0.7259278893470764, 0.7297582626342773, 0.7360982894897461, 0.7323999404907227, 0.7285695672035217, 0.7333245277404785, 0.7329282760620117, 0.739400327205658, 0.7353057861328125, 0.7343811988830566, 0.7374191284179688, 0.7396644949913025, 0.7408532500267029, 0.7421740889549255, 0.741909921169281, 0.748249888420105, 0.7386078238487244, 0.744419515132904, 0.7458723783493042, 0.7494386434555054, 0.750759482383728, 0.7486461400985718, 0.748778223991394, 0.7506273984909058, 0.7474573850631714, 0.7511557340621948, 0.7504953145980835, 0.7541936039924622, 0.7547219395637512, 0.7539294958114624, 0.7598732113838196, 0.7514199018478394, 0.7565711140632629, 0.7568352818489075, 0.7568352818489075, 0.7585523724555969, 0.7543256878852844, 0.7604015469551086, 0.759609043598175, 0.7607977986335754, 0.7623828053474426, 0.7602694630622864, 0.7637035846710205, 0.7664773464202881, 0.7623828053474426, 0.7640998363494873], "val_loss": [1.946671962738037, 1.9201506205967493, 1.887262957436698, 1.8428524562290736, 1.7817726816449846, 1.6992622443607874, 1.593956572668893, 1.4689732960292272, 1.3365508488246374, 1.213043485369001, 1.106041703905378, 1.0210305622645788, 0.9524236406598773, 0.9002436910356794, 0.8572084733418056, 0.8227424791881016, 0.7923237936837333, 0.7679181780133929, 0.7465941054480416, 0.7258647850581578, 0.712871755872454, 0.6988886935370309, 0.6852974721363613, 0.673306771687099, 0.6656096833092826, 0.6562573909759521, 0.6502260310309274, 0.6391809838158744, 0.6333195652280535, 0.6252320493970599, 0.6204005990709577, 0.6133638790675572, 0.6101236173084804, 0.6051891190665108, 0.5974834646497454, 0.5943162441253662, 0.5904391663415092, 0.58592346736363, 0.5829697166170392, 0.5773391042436872, 0.576142566544669, 0.5710912942886353, 0.56812584400177, 0.5644123554229736, 0.5609553371156965, 0.5582301957266671, 0.5567235776356289, 0.5535623856953212, 0.5502307755606515, 0.5466055529458183, 0.5448985610689435, 0.5417650427137103, 0.5402895382472447, 0.5382460355758667, 0.5358561447688511, 0.5341466665267944, 0.53120870249612, 0.5288005215781075, 0.5277114255087716, 0.5254954099655151, 0.522628664970398, 0.5213475908551898, 0.5196990966796875, 0.5206429617745536, 0.5163416521889823, 0.5147216149738857, 0.5127781629562378, 0.5105578558785575, 0.5081657341548375, 0.5073783227375576, 0.5056378671101162, 0.505108220236642, 0.5046817575182233, 0.5027276618140084, 0.5010306664875576, 0.4990931579044887, 0.49757773535592215, 0.4961785759244646, 0.49476773398263113, 0.4942812579018729, 0.4939972332545689, 0.49477360929761616, 0.49062158380235943, 0.4901512350354876, 0.48927654538835796, 0.4873016732079642, 0.4883089406149728, 0.4858438628060477, 0.4853683369500296, 0.4841635227203369, 0.48222034318106516, 0.4805596045085362, 0.4789248875209263], "val_accuracy": [0.23999999463558197, 0.3540000021457672, 0.3893333375453949, 0.4300000071525574, 0.4636666774749756, 0.5073333382606506, 0.5403333306312561, 0.5666666626930237, 0.5793333053588867, 0.6100000143051147, 0.6320000290870667, 0.6516666412353516, 0.6643333435058594, 0.67166668176651, 0.6830000281333923, 0.6859999895095825, 0.687666654586792, 0.6919999718666077, 0.6980000138282776, 0.7026666402816772, 0.7080000042915344, 0.7076666951179504, 0.7163333296775818, 0.7179999947547913, 0.718666672706604, 0.7239999771118164, 0.7196666598320007, 0.7336666584014893, 0.7306666374206543, 0.7390000224113464, 0.7433333396911621, 0.7333333492279053, 0.7409999966621399, 0.7379999756813049, 0.7446666955947876, 0.7456666827201843, 0.7443333268165588, 0.7459999918937683, 0.7526666522026062, 0.7513333559036255, 0.7486666440963745, 0.753000020980835, 0.7546666860580444, 0.7556666731834412, 0.7536666393280029, 0.7543333172798157, 0.7613333463668823, 0.7583333253860474, 0.7646666765213013, 0.7646666765213013, 0.7666666507720947, 0.7670000195503235, 0.765333354473114, 0.765999972820282, 0.7703333497047424, 0.7730000019073486, 0.7693333625793457, 0.7733333110809326, 0.7703333497047424, 0.7753333449363708, 0.7753333449363708, 0.7753333449363708, 0.7773333191871643, 0.7756666541099548, 0.7773333191871643, 0.7786666750907898, 0.7796666622161865, 0.7806666493415833, 0.781333327293396, 0.7806666493415833, 0.781000018119812, 0.7826666831970215, 0.7770000100135803, 0.7793333530426025, 0.7833333611488342, 0.7833333611488342, 0.784333348274231, 0.7823333144187927, 0.7850000262260437, 0.784333348274231, 0.7850000262260437, 0.7816666960716248, 0.7893333435058594, 0.7893333435058594, 0.7879999876022339, 0.7879999876022339, 0.7860000133514404, 0.7933333516120911, 0.7873333096504211, 0.7896666526794434, 0.7896666526794434, 0.7929999828338623, 0.7923333048820496]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [5, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1], [6, 9], [3, 4, 3], [73, 0, 19], [0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1], [2, 3, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 0, 4, 7, 2, 7], [1, 0, 0, 1, 3, 3, 0], [28, 57, 60]], "fitness": -0.6537142992019653, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 6, 3, 3, 0, 0, 14, 7, 7, 3], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.sqrt(sigma)), sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, sigma), sigma)), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.2765638107133026, 2.0715661695557435, 1.5263357131614377, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1562541276216507, 0.3641526997089386, 0.4909523129463196, 0.21661603450775146, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.884533473423549, 1.4281959874289376, 0.8507462058748517, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.38999998569488525, 0.527999997138977, 0.6200000047683716, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1], [1, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1, 1], [2, 7, 4], [4, 4, 3, 4], [8, 0, 19], [0, 0, 0, 0, 1, 1], [1, 0, 0, 1, 1, 1], [1, 8, 3, 9, 4], [5], [88, 19], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 7, 7, 3, 4, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), tf.math.square(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1], [7, 9, 0, 7, 8], [2, 0, 1, 1], [50], [1, 1, 0, 0, 0, 0, 1], [1, 0, 0, 0, 1, 1], [5, 2, 9, 9], [5, 4, 3], [8, 0, 19], [0, 0, 1, 1, 0, 1], [0, 0, 0, 1, 0, 1], [2, 3, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 7, 7, 0], [1, 0, 0, 0, 3, 3], [28, 70]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 6, 3, 3, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, tf.math.sqrt(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3025900323424655, 2.3025891595371113, 2.302589573581158, 2.302589376069425, 2.302590805541696, 2.302590733616186, 2.3025895286749507, 2.3025902352706553, 2.3025902619120657, 2.302590379310621, 2.3025905000472253, 2.302590590143059], "accuracy": [0.0948355570435524, 0.09259014576673508, 0.09549596905708313, 0.09509972482919693, 0.09879804402589798, 0.09496764093637466, 0.09747721254825592, 0.09628847241401672, 0.09655263274908066, 0.09126931428909302, 0.09668471664190292, 0.09826971590518951], "val_loss": [1.973644801548549, 1.973644733428955, 1.9736448696681432, 1.973644597189767, 1.973644460950579, 1.9736437797546387, 1.9736433710370744, 1.9736435072762626, 1.9736438478742326, 1.9736430985586983, 1.9736431666782923, 1.9736428260803223], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09966666996479034, 0.09833333641290665, 0.09966666996479034, 0.1003333330154419, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [4, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 0, 0, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1], [6, 9], [3, 4, 3], [49, 0, 19], [0, 0, 1, 1, 0, 1], [0, 1, 1, 1, 0, 1], [2, 3, 8, 9, 7], [4, 3], [88, 19], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [5, 3, 0, 4, 9, 5, 1], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 2, 1, 1, 3, 2, 1, 1, 0, 8, 6, 2, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(tf.math.negative(tf.math.pow(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.square(alpha))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [0, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 7, 4], [5, 4, 3, 4], [8, 0, 19], [0, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 1, 1], [2, 3, 8, 9, 7], [4, 2], [88, 19], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3025850484777735, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09734513610601425, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1, 1], [2, 7, 6], [5, 4, 3, 4], [8, 0, 19], [0, 0, 0, 0, 1, 1], [0, 0, 1, 1, 0, 1], [2, 3, 8, 9, 7], [4, 2], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 1, 6], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 0, 5, 4, 2, 2, 0, 13, 7, 6, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, beta))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.divide_no_nan(alpha, sigma), sigma)))))", "other_info": {"loss": [2.573819000896383, 4.9932140222614185, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0870426595211029, 0.09998679161071777, 0.09721305221319199, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.8994802066258023, 26.707277025495255, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1], [1, 1, 5, 7, 8], [1, 2, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1], [2, 9], [5, 4, 3, 4], [8, 0, 19], [0, 0, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 1], [2, 3, 8, 9, 7], [4, 2], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 0, 0, 1, 3, 3], [76, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 5, 4, 2, 2, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, beta), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.6708551873746345, 2.527612118310995, 2.4533859189821667, 2.4849451668368605, 2.502675489931531, 2.43369560442612, 2.4966103063204725], "accuracy": [0.18795403838157654, 0.1010434553027153, 0.1014397069811821, 0.1002509593963623, 0.09391097724437714, 0.09721305221319199, 0.1010434553027153], "val_loss": [2.1073149272373746, 2.155360358101981, 2.073464870452881, 2.1222434043884277, 2.1986987931387767, 2.1986865316118513, 2.098847048623221], "val_accuracy": [0.09833333641290665, 0.10366666316986084, 0.09933333098888397, 0.09799999743700027, 0.1003333330154419, 0.09933333098888397, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [0, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [4, 4, 3], [8, 0, 19], [0, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 1], [2, 3, 8, 9, 7], [4, 2], [88, 19], [1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 6, 4, 3, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [182790024.10415855, 3476981532.0987983, 15935103232.439571, 44562999768.57377, 94256316456.03487, 174898848257.96118], "accuracy": [0.09932637959718704, 0.09945846349000931, 0.10711926966905594, 0.10077928751707077, 0.10447761416435242, 0.10091137140989304], "val_loss": [695498148.5714285, 5560831853.714286, 18764266349.714287, 44474239268.57143, 86858895945.14285, 150086507373.7143], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1], [5, 4, 9], [3, 4, 3], [8, 0, 19], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1], [2, 3, 0, 9, 7], [6, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 1, 5, 3, 2, 1, 0, 8, 4, 4, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [2.3026583990510963, 2.3026446000916563, 2.302650811791562, 2.302647306745582, 2.30266907199058, 2.3026676593660094, 2.302649422848245, 2.302659169447625, 2.302661437305556, 2.302662638877251, 2.3026654640949005, 2.302666504715947], "accuracy": [0.0952318087220192, 0.09470347315073013, 0.09708096832036972, 0.09615638852119446, 0.09985470771789551, 0.09826971590518951, 0.09747721254825592, 0.09628847241401672, 0.09166556596755981, 0.0886276587843895, 0.0952318087220192, 0.09681680053472519], "val_loss": [1.973649161202567, 1.9736509323120117, 1.973651613507952, 1.973649569920131, 1.973646640777588, 1.973635128566197, 1.973627703530448, 1.9736341748918806, 1.9736373765128, 1.9736302920750208, 1.9736318588256836, 1.9736289978027344], "val_accuracy": [0.09966666996479034, 0.09966666996479034, 0.09799999743700027, 0.09833333641290665, 0.10000000149011612, 0.1003333330154419, 0.10366666316986084, 0.10366666316986084, 0.09799999743700027, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1], [5, 9, 9], [3, 4, 3], [8, 0, 19], [0, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [2, 3, 0, 9, 7], [0], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [41, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 2, 2, 2, 0, 1, 6, 4, 3, 1, 1, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.subtract(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.square(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), sigma)), tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12970545887947083, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 7, 4], [5, 4, 3, 4], [8, 0, 19], [0, 0, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1], [1, 8, 3, 9, 4], [4, 2], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 3, 5], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 12, 7, 5, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), tf.math.add(sigma, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.square(alpha), sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1], [5, 2, 9], [3, 4, 3], [8, 0, 19], [0, 0, 0, 1, 0, 0], [1, 0, 1, 0, 0, 1], [2, 3, 0, 9, 7], [1], [88, 19], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 4, 7, 9], [1, 0, 0, 1, 3, 3], [52, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 8, 6, 2, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(grad, tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.math.negative(tf.math.pow(tf.math.add(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), alpha), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09668471664190292, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1], [5, 1, 5, 7, 8], [0, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [6, 9], [3, 4, 3], [73, 0, 19], [0, 0, 1, 1, 0, 1], [1, 0, 0, 1, 1, 1], [1, 8, 3, 9, 4], [4, 7], [88, 19], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3025850484777735, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09734513610601425, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 1, 5, 7, 8], [0, 2, 1, 1], [50], [0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1], [7, 9], [2, 4, 3], [8, 0, 19], [0, 0, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1], [2, 3, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 3, 3, 2, 1, 1, 6, 4, 4, 0, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.sqrt(sigma)), tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [7578094329.729307, 1132389212719.4062, 19101353313476.523, 135429182495834.22, 588972973557815.5, 1963556860369941.0], "accuracy": [0.09932637959718704, 0.09945846349000931, 0.10711926966905594, 0.10077928751707077, 0.10447761416435242, 0.1010434553027153], "val_loss": [63321250669.71429, 3413379046253.7144, 36636023099977.14, 199735249094948.56, 748132242704676.6, 2206778739355062.8], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1], [2, 9], [5, 4, 3, 4], [8, 0, 19], [0, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 1], [2, 3, 8, 9, 7], [4, 7], [88, 19], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 0, 4, 7], [1, 1, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07700435817241669, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [0, 1, 1, 0, 1, 1], [5, 9, 9], [3, 4, 3], [8, 0, 19], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1], [2, 3, 0, 9, 7], [6, 6], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 0], [1, 0, 0, 1, 3, 3], [66, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 2, 2, 1, 1, 0, 5, 3, 2, 1, 0, 11, 7, 4, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(alpha), tf.math.pow(tf.math.add(tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.negative(alpha)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1], [1, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1], [2, 9], [4, 4, 3], [8, 0, 19], [1, 0, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1], [1, 8, 3, 9, 4], [5], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 6, 6, 3, 3, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(grad, tf.math.subtract(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3020317531170518, 2.302291630155548, 2.3011154025348266, 2.302975157705107, 2.3024035116716415, 2.3035916377052326], "accuracy": [0.0952318087220192, 0.08809932321310043, 0.09721305221319199, 0.09325055778026581, 0.09047681838274002, 0.0878351628780365], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [5, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [4, 2, 5, 0, 1, 6, 7, 2, 6, 7, 5, 9, 3, 8, 3, 1], [4, 4, 3, 4, 1, 5, 4, 3, 1, 1, 3], [8, 0, 19], [0, 0, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1], [8, 1, 0, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [41, 57]], "fitness": -0.0231428574770689, "mapping_values": [1, 2, 2, 1, 1, 0, 27, 27, 16, 11, 1, 4, 2, 2, 0, 0, 4, 2, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))), tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, alpha), grad), tf.math.square(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.multiply(grad, tf.math.sqrt(tf.math.multiply(alpha, tf.math.subtract(alpha, tf.math.add(beta, grad))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.subtract(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.301840537952599, 2.3015751597462804, 2.3015105152457633, 2.303693942043681, 2.3039489891771248, 2.3044531687360004, 2.3036521283501035, 2.303803207348083, 2.3035210265050146, 2.303283322898231, 2.3027614080642964, 2.302717602468674, 2.3026929909700193, 2.302769624703533, 2.3032435140810024, 2.303847206582042, 2.313791667591579], "accuracy": [0.09496764093637466, 0.08981640636920929, 0.09325055778026581, 0.08770307898521423, 0.08598599582910538, 0.07726852595806122, 0.07977809756994247, 0.07172103971242905, 0.07290978729724884, 0.07013604789972305, 0.08519349992275238, 0.09338264167308807, 0.09906221181154251, 0.1002509593963623, 0.09932637959718704, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9707756042480469, 1.9709068025861467, 1.9726740973336356, 1.9738821302141463, 1.9740258625575475, 1.9745452063424247, 1.9746273585728236, 1.9744521549769811, 1.973982334136963, 1.9738104002816337, 1.9737613541739327, 1.9737515449523926, 1.9737633296421595, 1.97393342426845, 1.9743256568908691, 1.9759419986179896, 2.2942650658743724], "val_accuracy": [0.0430000014603138, 0.047333333641290665, 0.04399999976158142, 0.04533333331346512, 0.05233333259820938, 0.04933333396911621, 0.0430000014603138, 0.04699999839067459, 0.06133333221077919, 0.0860000029206276, 0.09700000286102295, 0.10400000214576721, 0.09966666996479034, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}]