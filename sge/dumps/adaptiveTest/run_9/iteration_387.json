[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [9, 2, 4, 9, 3, 9, 8, 9, 6, 9, 6, 8, 9], [0, 3, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [26, 9, 67, 81, 53, 45], [1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 1, 1], [6, 1, 1, 9, 7], [7, 0, 6], [22, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8197143077850342, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.166602365470849, 2.03557627735798, 1.747679215144519, 1.1709582169199853, 0.913741809966589, 0.7978114760027523, 0.7331876680127004, 0.695678641547018, 0.6821202953903194, 0.6522034227241851, 0.6389047650928117, 0.6013634784850524, 0.5881382413843226, 0.5590954563479461, 0.5450578356037964, 0.5338309655068588, 0.5241909138577852, 0.5262104122787655, 0.48951154873276964, 0.5122405097248721, 0.4941833674584901, 0.49465844185124647, 0.48544664730359344, 0.46498639246082546, 0.4414576098289409, 0.44322100233691575, 0.4676725788753204, 0.43079080753369875, 0.4318380797417912, 0.41453938836655235, 0.4092511829761797, 0.415612685193853, 0.4227078983599814, 0.40684891105674403, 0.38805852155124254], "accuracy": [0.299299955368042, 0.2677321434020996, 0.4291374981403351, 0.5746929049491882, 0.6664905548095703, 0.7037379741668701, 0.7244749665260315, 0.7407211661338806, 0.7413815855979919, 0.7523444890975952, 0.7578919529914856, 0.7746664881706238, 0.7798177003860474, 0.7955356240272522, 0.7932901978492737, 0.7960638999938965, 0.8067626357078552, 0.8059701323509216, 0.821820080280304, 0.8107251524925232, 0.8121780753135681, 0.8166688680648804, 0.8228767514228821, 0.8234050869941711, 0.833179235458374, 0.8322546482086182, 0.828292191028595, 0.8391229510307312, 0.8399154543876648, 0.8471800088882446, 0.8490291833877563, 0.8481045961380005, 0.846387505531311, 0.8492933511734009, 0.8605204224586487], "val_loss": [1.5407356875283378, 1.3241442271641322, 0.9645989622388568, 0.6687445299965995, 0.6204048906053815, 0.5939954519271851, 0.6144762209483555, 0.5458081620080131, 0.5826618841716221, 0.5713609797613961, 0.4837930372783116, 0.4639225346701486, 0.4585484095982143, 0.444481577192034, 0.4384240337780544, 0.46011604581560406, 0.43068948813847135, 0.4080433334623064, 0.4520383732659476, 0.4157348445483616, 0.3974249022347586, 0.41253532682146343, 0.38830888271331787, 0.4026848758969988, 0.41450690371649607, 0.4117042507444109, 0.3756101131439209, 0.37967816420963835, 0.3916929449353899, 0.35063062395368305, 0.37955279861177715, 0.39497454677309307, 0.36306006567818777, 0.3569595643452236, 0.4235872370856149], "val_accuracy": [0.23499999940395355, 0.47600001096725464, 0.5496666431427002, 0.7020000219345093, 0.7250000238418579, 0.7369999885559082, 0.7139999866485596, 0.7519999742507935, 0.7336666584014893, 0.7459999918937683, 0.7770000100135803, 0.8009999990463257, 0.7960000038146973, 0.8063333630561829, 0.7993333339691162, 0.7903333306312561, 0.8100000023841858, 0.8276666402816772, 0.7926666736602783, 0.8183333277702332, 0.828000009059906, 0.8180000185966492, 0.8293333053588867, 0.8243333101272583, 0.8163333535194397, 0.8119999766349792, 0.8293333053588867, 0.8309999704360962, 0.8296666741371155, 0.8486666679382324, 0.8276666402816772, 0.8209999799728394, 0.843666672706604, 0.8450000286102295, 0.8019999861717224]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 2, 4, 9, 3, 9, 8, 9, 6, 9, 6, 8, 9], [0, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [26, 9, 67, 81, 53, 45], [0, 1, 0, 0, 0, 1, 1], [1, 1, 1, 1, 1, 1], [2, 1, 1, 9, 7], [7, 0, 6], [22, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8088571429252625, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), grad), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1665747460750873, 2.0331364181520066, 1.7145206597912281, 1.0443403643702693, 0.9026853850237083, 0.8434021741470656, 0.7312412627573736, 0.6861459521128753, 0.6953680454905259, 0.6443829006758883, 0.6274722567119178, 0.6004314047864179, 0.6142418460760292, 0.5788493286727238, 0.5703391011254726, 0.5569476696478456, 0.53488511293477, 0.5191168869097534, 0.5011265097182771, 0.504638305583162, 0.49461278175681006, 0.506284990496151, 0.48020538845161137, 0.4721855336152929, 0.4483336409431612, 0.4642692858973483, 0.46504463440612037, 0.4260216519431415, 0.4404829509104594, 0.4174868788473232, 0.4229027995572287, 0.4105969342998368, 0.43850940441915215, 0.4103112935374331, 0.3897671127607479, 0.45183017784578294, 0.3972561617474499, 0.38547009774061197, 0.3979415544830907, 0.3831105895282381, 0.3792487104350644], "accuracy": [0.29943203926086426, 0.26799631118774414, 0.42742040753364563, 0.6061286330223083, 0.6626601219177246, 0.6836613416671753, 0.722757875919342, 0.7363624572753906, 0.7327961921691895, 0.7520803213119507, 0.7621186375617981, 0.7680623531341553, 0.7638356685638428, 0.7839123010635376, 0.7840443849563599, 0.7915731072425842, 0.7971205711364746, 0.8029322624206543, 0.8131026029586792, 0.8113855719566345, 0.8115176558494568, 0.8061022162437439, 0.8284242749214172, 0.8212917447090149, 0.8318583965301514, 0.8239334225654602, 0.8234050869941711, 0.8426892161369324, 0.8399154543876648, 0.8448025584220886, 0.8444063067436218, 0.8520671129226685, 0.8370096683502197, 0.8446704745292664, 0.8599920868873596, 0.8308017253875732, 0.8516708612442017, 0.8577466607093811, 0.8512746095657349, 0.8556333184242249, 0.8576145768165588], "val_loss": [1.5404042175837926, 1.3583200659070696, 0.8853587082454136, 0.8968769141605922, 0.6290437664304461, 0.6034853969301496, 0.586338894707816, 0.5421288183757237, 0.5159743172781808, 0.5388886758259365, 0.5034922531672886, 0.46897854123796734, 0.509404046194894, 0.451567462512425, 0.5428570508956909, 0.45910985129220144, 0.43922269344329834, 0.4106194887842451, 0.4278679830687387, 0.4129206027303423, 0.40333352770124165, 0.4033769283975874, 0.3898772767611912, 0.4179831402642386, 0.4030479873929705, 0.41132800919669016, 0.37444402490343365, 0.3814500996044704, 0.393734335899353, 0.3771325520106724, 0.36282854420798166, 0.44141483306884766, 0.37553731884275166, 0.3627516371863229, 0.4924347570964268, 0.35465724979128155, 0.35829934052058626, 0.3910166450909206, 0.3912023901939392, 0.3734799793788365, 0.3547581859997341], "val_accuracy": [0.23533333837985992, 0.4359999895095825, 0.6119999885559082, 0.5926666855812073, 0.7166666388511658, 0.7229999899864197, 0.7296666502952576, 0.7440000176429749, 0.7649999856948853, 0.7433333396911621, 0.7649999856948853, 0.7993333339691162, 0.765999972820282, 0.8019999861717224, 0.7440000176429749, 0.7910000085830688, 0.8059999942779541, 0.8209999799728394, 0.8133333325386047, 0.8190000057220459, 0.8176666498184204, 0.8206666707992554, 0.8323333263397217, 0.8149999976158142, 0.82833331823349, 0.8119999766349792, 0.8306666612625122, 0.8333333134651184, 0.8296666741371155, 0.8373333215713501, 0.8376666903495789, 0.7833333611488342, 0.8353333473205566, 0.8413333296775818, 0.7743333578109741, 0.8476666808128357, 0.843999981880188, 0.8236666917800903, 0.8259999752044678, 0.8326666951179504, 0.8443333506584167]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 2, 4, 9, 3, 9, 8, 9, 6, 9, 6, 8, 9], [0, 3, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [26, 9, 67, 81, 53, 45], [0, 1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 1, 1], [9, 1, 1, 9, 7], [7, 0, 6], [22, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.7714285850524902, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 1, 1, 0, 1, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0825342034714143, 1.5139271723139225, 1.1177782970664523, 0.912350075545013, 0.8755294367338389, 0.7392770708701583, 0.7118529409874762, 0.6742481924775506, 0.6283337931985066, 0.6506076596747175, 0.6088094214375276, 0.6023342014461256, 0.5598147147209763, 0.5470024928550962], "accuracy": [0.2763175368309021, 0.4799894392490387, 0.6009774208068848, 0.6643772125244141, 0.6808875799179077, 0.7296261787414551, 0.7304186820983887, 0.7452120184898376, 0.7676661014556885, 0.750231146812439, 0.7737419009208679, 0.7724210619926453, 0.7938185334205627, 0.7952714562416077], "val_loss": [1.3254175867353166, 0.8063918352127075, 0.7406834874834333, 0.6463293348039899, 0.5780347755977085, 0.6031608411243984, 0.5845072950635638, 0.5352296318326678, 0.49040399278913227, 0.499578629221235, 0.48808731351579937, 0.4794062716620309, 0.4779686757496425, 0.5075523172106061], "val_accuracy": [0.5006666779518127, 0.6539999842643738, 0.6936666369438171, 0.7263333201408386, 0.7316666841506958, 0.7176666855812073, 0.7266666889190674, 0.7580000162124634, 0.7816666960716248, 0.7816666960716248, 0.781000018119812, 0.7763333320617676, 0.7763333320617676, 0.7643333077430725]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [9, 2, 4, 9, 3, 9, 8, 9, 6, 9, 6, 8, 9], [0, 3, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [26, 9, 67, 81, 53, 45], [0, 1, 0, 0, 0, 1, 1], [0, 0, 0, 1, 1, 1], [4, 6, 1, 9, 7], [7, 0, 6], [22, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.3205714225769043, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 7, 4, 3, 1, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), sigma)), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.379486484077896, 2.145464723923612, 2.324695743416688, 2.387214324572272, 2.331391776604754, 2.3475750251893968], "accuracy": [0.29084664583206177, 0.25056135654449463, 0.16299036145210266, 0.12561088800430298, 0.1022322028875351, 0.11042134463787079], "val_loss": [1.8160014152526855, 1.9966325759887695, 1.6164867196764265, 1.9857628686087472, 2.009448937007359, 1.9950809478759766], "val_accuracy": [0.2913333475589752, 0.09799999743700027, 0.28999999165534973, 0.10133333504199982, 0.11633333563804626, 0.12533333897590637]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 2, 4, 9, 3, 9, 8, 9, 6, 9, 6, 8, 9], [0, 3, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [2, 9, 67, 81, 53, 45], [1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 1, 1], [6, 1, 1, 9, 7], [7, 0, 6], [22, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.2168571501970291, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), grad), beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3795104992309377, 2.147603051096551, 2.347531234961396, 2.4138252202624644, 2.3370773922954617, 2.3414665526560254, 2.365642016668676, 2.3279223523009582], "accuracy": [0.2907145619392395, 0.25003302097320557, 0.11953506618738174, 0.11913882195949554, 0.11068551242351532, 0.10236428678035736, 0.10381719470024109, 0.10236428678035736], "val_loss": [1.8161407198224748, 1.9993835857936315, 1.6493584428514754, 1.9931058202471053, 1.9989266395568848, 2.0252557482038225, 1.990659236907959, 2.0115318298339844], "val_accuracy": [0.2913333475589752, 0.09799999743700027, 0.312666654586792, 0.10700000077486038, 0.10599999874830246, 0.10333333164453506, 0.10199999809265137, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [9, 2, 4, 9, 3, 9, 8, 9, 6, 9, 6, 8, 9], [0, 3, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [26, 9, 67, 81, 53, 45], [0, 1, 1, 0, 0, 1, 1], [0, 1, 1, 1, 1, 1], [4, 1, 1, 9, 7], [6, 0, 6], [22, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 2, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.1908571422100067, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 3, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.523930158565986, 2.3194386582128312, 2.3511812041039164, 2.306596712303388, 2.2939553719312604, 2.3047874698769917, 2.297856251923573, 2.281048874640273, 2.3482390767342975, 2.2429234802982734, 2.318248393938384, 2.3045451005908713, 2.303563093701374, 2.303419644412836, 2.303054832054907], "accuracy": [0.18861444294452667, 0.1904636174440384, 0.1410645842552185, 0.10157178342342377, 0.12838461995124817, 0.1026284471154213, 0.13472460210323334, 0.1562541276216507, 0.1872936189174652, 0.16259410977363586, 0.12112006545066833, 0.09734513610601425, 0.09470347315073013, 0.09668471664190292, 0.09681680053472519], "val_loss": [1.9604287147521973, 1.9798806735447474, 1.9801796504429408, 1.9740080833435059, 1.9770411082676478, 1.9733469826834542, 1.8988404273986816, 1.7885197230747767, 1.9751362119402205, 1.9716978754316057, 1.9749066489083427, 1.9742141451154436, 1.9740313121250697, 1.9736344473702567, 1.9736463001796178], "val_accuracy": [0.10700000077486038, 0.15333333611488342, 0.09833333641290665, 0.11733333021402359, 0.1003333330154419, 0.12166666984558105, 0.2906666696071625, 0.296999990940094, 0.10266666859388351, 0.32633334398269653, 0.09833333641290665, 0.09799999743700027, 0.09833333641290665, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [9, 2, 4, 9, 3, 9, 8, 9, 6, 9, 6, 8, 9], [0, 3, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [2, 9, 67, 81, 53, 45], [1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 1, 1], [6, 1, 1, 9, 7], [7, 0, 6], [22, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [50, 57, 40, 62]], "fitness": -0.16857142746448517, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.5218916216767018, 2.2666116898889004, 2.219947339726036, 2.299625485564708, 2.304118663060777, 2.3035859699498675], "accuracy": [0.18940694630146027, 0.19072777032852173, 0.1872936189174652, 0.15400871634483337, 0.09509972482919693, 0.09681680053472519], "val_loss": [1.955428123474121, 1.9737460272652763, 2.042177813393729, 1.9757311684744698, 1.9738482066563197, 1.9737451417105538], "val_accuracy": [0.11233333498239517, 0.10366666316986084, 0.09933333098888397, 0.09799999743700027, 0.09933333098888397, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 9, 3, 9, 8, 9, 6, 9, 6, 8, 9], [0, 3, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [26, 9, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 1], [0, 1, 1, 1, 1, 1], [6, 1, 1, 9, 7], [7, 0, 6], [22, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [4, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [50, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 1, 3, 3, 1, 2, 1, 3, 1, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(sigma, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 2, 4, 9, 3, 9, 8, 9, 6, 9, 6, 8, 9], [0, 3, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [26, 9, 67, 81, 53, 45], [1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 1, 1], [4, 1, 1, 9, 7], [7, 0, 6], [22, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 6, 2, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [0, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.subtract(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), tf.math.pow(beta, tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10857218503952026, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [9, 2, 4, 9, 3, 9, 8, 9, 6, 9, 6, 8, 9], [0, 3, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [26, 9, 67, 81, 53, 45], [1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 1, 1], [9, 1, 1, 9, 7], [7, 0, 6], [22, 44], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [5, 3, 2, 4, 2, 1, 2, 3], [1, 1, 0, 2, 3, 3, 2], [76, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 8, 4, 4, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(alpha, tf.math.add(tf.math.pow(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [9, 2, 4, 9, 3, 9, 8, 9, 6, 9, 6, 8, 9], [0, 3, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [37, 9, 67, 81, 53, 45], [1, 1, 0, 0, 0, 1, 1], [1, 1, 0, 1, 1, 1], [6, 1, 1, 9, 7], [7, 0, 6], [22, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [50, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.907521763151474, 453.5941768331834, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.18821820616722107, 0.1352529376745224, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.0577581269400462, 2263289205321.143, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10300000011920929, 0.09799999743700027, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 2, 4, 9, 3, 9, 8, 9, 6, 9, 6, 8, 9], [0, 2, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [54, 9, 67, 81, 53, 45], [0, 1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 1, 1], [9, 1, 1, 9, 7], [7, 0, 6], [70, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 5, 5, 2, 3, 1, 1, 1, 1, 0, 1, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 2, 4, 9, 3, 9, 8, 9, 6, 9, 6, 8, 9], [0, 3, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [26, 9, 67, 81, 53, 45], [0, 1, 1, 0, 0, 1, 1], [0, 1, 1, 1, 1, 1], [6, 1, 1, 9, 7], [6, 0, 6], [22, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 2, 4, 2, 1, 2, 3], [0, 1, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 1, 3, 1, 1, 0, 0, 3, 2, 1, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad)), tf.math.pow(beta, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3028799934535846, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09932637959718704, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [7, 2, 4, 9, 3, 9, 8, 9, 6, 9, 6, 8, 9], [0, 3, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [87, 9, 67, 81, 53, 45], [0, 0, 1, 0, 0, 1, 1], [0, 1, 1, 1, 1, 1], [4, 1, 1, 9, 7], [7, 0, 6], [20, 44], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 2, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.99487531e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07053229212760925, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [9, 2, 4, 9, 3, 9, 8, 9, 6, 9, 6, 8, 9], [0, 3, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [26, 9, 67, 81, 53, 45], [0, 1, 1, 0, 0, 1, 1], [0, 1, 1, 1, 1, 1], [4, 1, 1, 9, 7], [7, 0, 6], [22, 44], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 2, 4, 2, 1, 2, 3], [1, 3, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 3, 1, 1, 0, 0, 13, 6, 7, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.add(alpha, tf.math.pow(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), beta), tf.math.add(tf.math.subtract(sigma, sigma), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09932637959718704, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [9, 2, 4, 9, 3, 9, 8, 9, 6, 9, 6, 8, 9], [0, 3, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [2, 9, 67, 81, 53, 45], [1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 1, 1], [6, 1, 1, 9, 7], [7, 0, 6], [22, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [4, 3, 2, 4, 2, 1, 2, 3], [1, 1, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 7, 3, 4, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.79983174e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(alpha, alpha), tf.math.add(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3032001434079787, 2.303365238338587, 2.304234427987561, 2.3070067651141763, 2.317161140566599, 2.349316978246749], "accuracy": [0.09998679161071777, 0.1018359512090683, 0.09628847241401672, 0.0948355570435524, 0.09536388516426086, 0.09893012791872025], "val_loss": [1.9740839685712541, 1.9747519493103027, 1.9758551461356026, 1.9793622834341866, 1.9962103026253837, 2.040758337293352], "val_accuracy": [0.10366666316986084, 0.10066666454076767, 0.09833333641290665, 0.09799999743700027, 0.09833333641290665, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [7, 2, 4, 9, 3, 9, 8, 9, 6, 9, 6, 8, 9], [0, 3, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [26, 9, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 1], [0, 1, 1, 1, 1, 1], [6, 1, 1, 9, 7], [7, 0, 6], [22, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.06485714018344879, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 3, 3, 1, 2, 1, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.379502504068107, 2.130161753451552, 2.3750318800374863, 2.420157980626018, 2.079788426728753, 2.2165213408109268, 2.017286693541255, 2.095283575439655, 2.416034777276882, 2.4364935567964414], "accuracy": [0.29084664583206177, 0.2541275918483734, 0.16853784024715424, 0.12561088800430298, 0.24276845157146454, 0.2312772423028946, 0.2965262234210968, 0.2537313401699066, 0.1810857206583023, 0.10011887550354004], "val_loss": [1.8159222602844238, 1.9977951049804688, 2.116638728550502, 1.8457928385053362, 1.4060227870941162, 1.546011311667306, 1.537416934967041, 1.6277436528887068, 2.1645071847098216, 2.024169989994594], "val_accuracy": [0.2916666567325592, 0.12733332812786102, 0.10000000149011612, 0.2683333456516266, 0.531333327293396, 0.33799999952316284, 0.3683333396911621, 0.33000001311302185, 0.09833333641290665, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [9, 2, 4, 9, 3, 9, 8, 9, 6, 9, 6, 8, 9], [0, 3, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [37, 9, 67, 81, 53, 45], [1, 1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 1, 1], [4, 1, 1, 9, 7], [7, 0, 6], [22, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3021202034812327, 2.303002915944815, 2.3038548139013617, 2.302025583993017, 2.3015756697749827, 2.302204588101666], "accuracy": [0.09245806187391281, 0.09272222965955734, 0.0874389111995697, 0.09100515395402908, 0.09338264167308807, 0.09298639744520187], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 2, 4, 9, 3, 9, 8, 9, 6, 9, 6, 8, 9], [0, 3, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [26, 9, 67, 81, 53, 45], [0, 1, 0, 0, 0, 1, 1], [1, 1, 1, 1, 1, 1], [7, 1, 1, 9, 7], [7, 0, 6], [22, 44], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 5, 2, 4, 2, 1, 2, 3], [2, 2, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 1, 0, 1, 0, 7, 4, 3, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32), grad), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(tf.math.add(beta, tf.math.pow(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.3021202034812327, 2.303002915944815, 2.3038548139013617, 2.302025583993017, 2.3015756697749827, 2.302204588101666], "accuracy": [0.09245806187391281, 0.09272222965955734, 0.0874389111995697, 0.09100515395402908, 0.09338264167308807, 0.09298639744520187], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 2, 4, 9, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 0, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [26, 9, 67, 81, 53, 45], [0, 1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 1, 1], [6, 1, 1, 9, 7], [7, 0, 6], [22, 44], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 3, 2, 1, 1, 0, 8, 4, 4, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(grad, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), beta))", "other_info": {"loss": [2.3021202034812327, 2.303002915944815, 2.3038548139013617, 2.302025583993017, 2.3015756697749827, 2.302204588101666], "accuracy": [0.09245806187391281, 0.09272222965955734, 0.0874389111995697, 0.09100515395402908, 0.09338264167308807, 0.09298639744520187], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]