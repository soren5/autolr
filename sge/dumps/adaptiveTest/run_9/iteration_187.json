[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [7, 8, 2, 0, 6, 4, 1, 4, 5, 8, 5, 4, 3, 3, 9, 3, 8, 3, 4, 3, 6, 5, 3, 0, 8, 1], [3, 2, 3, 3, 0, 2, 2], [74, 56, 47], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.8368571400642395, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 10, 7, 1, 2, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), beta))), tf.math.divide_no_nan(tf.math.pow(tf.math.add(beta, grad), tf.math.subtract(grad, tf.math.pow(tf.math.add(beta, tf.math.square(tf.constant(9.92962885e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(beta)))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.034689499323851, 1.9705144512088086, 1.7413387280949009, 1.169109840938491, 0.8874875041771212, 0.8208619332694579, 0.7411375086242339, 0.6829970245033191, 0.6566934518259215, 0.607810997133163, 0.5950823862869757, 0.5874952314756865, 0.5748153124991158, 0.5587025417186927, 0.5286134461433251, 0.5299206997000105, 0.5187512009513219, 0.49554260825956536, 0.46380627528866286, 0.4902631441962056, 0.476977411888342, 0.46358630278831336, 0.4448347705671139, 0.47565168073825737, 0.4343061973752284, 0.4445241581352868, 0.43199990305367114, 0.4040265636295454, 0.40718399548196776, 0.42198271928777026, 0.38741799831595075, 0.4004096455066085, 0.3887396607857496, 0.38695984701312935, 0.38100112463898583, 0.3838819067129574, 0.36284448651432316, 0.3488290407213285, 0.3577897820010114], "accuracy": [0.29665830731391907, 0.3131686747074127, 0.4171179533004761, 0.6013736724853516, 0.6756042838096619, 0.6900013089179993, 0.7172104120254517, 0.7372870445251465, 0.7478536367416382, 0.7730814814567566, 0.7695152759552002, 0.7746664881706238, 0.7753269076347351, 0.7897239327430725, 0.7998943328857422, 0.8030643463134766, 0.802800178527832, 0.8129705190658569, 0.83119797706604, 0.8170651197433472, 0.8247259259223938, 0.8234050869941711, 0.8335754871368408, 0.8197067975997925, 0.8397833704948425, 0.8342359066009521, 0.8409721255302429, 0.8495575189590454, 0.8441421389579773, 0.8444063067436218, 0.8565579056739807, 0.8500858545303345, 0.8545766472816467, 0.8589354157447815, 0.8545766472816467, 0.8540483713150024, 0.8654074668884277, 0.869502067565918, 0.8644828796386719], "val_loss": [1.8911664145333427, 1.7639460563659668, 1.1020122255597795, 0.7421937670026507, 0.9054390021732875, 0.6528033699308123, 0.5485655069351196, 0.6001087597438267, 0.5304922376360212, 0.511403134890965, 0.47148535932813374, 0.47106497628348215, 0.4562626225607736, 0.4337120737348284, 0.4444556747164045, 0.46181016308920725, 0.43343184675489155, 0.4020040375845773, 0.42996848481042044, 0.41201123169490267, 0.38951793738773893, 0.4240761399269104, 0.4102895515305655, 0.3851209708622524, 0.3984016180038452, 0.4106790508542742, 0.3743348547390529, 0.39057041917528423, 0.3651164599827358, 0.3906864183289664, 0.352575991834913, 0.3619729961667742, 0.3814677596092224, 0.34178184611456736, 0.3755723663738796, 0.364182710647583, 0.35092110293252127, 0.34581176723752705, 0.3552806718008859], "val_accuracy": [0.09933333098888397, 0.37466666102409363, 0.5616666674613953, 0.6956666707992554, 0.6226666569709778, 0.7143333554267883, 0.762333333492279, 0.7170000076293945, 0.7606666684150696, 0.762333333492279, 0.7929999828338623, 0.7886666655540466, 0.8023333549499512, 0.8023333549499512, 0.8080000281333923, 0.7760000228881836, 0.8050000071525574, 0.8286666870117188, 0.8053333163261414, 0.824999988079071, 0.8293333053588867, 0.8066666722297668, 0.8186666369438171, 0.8423333168029785, 0.8316666483879089, 0.8230000138282776, 0.8473333120346069, 0.8309999704360962, 0.8493333458900452, 0.8326666951179504, 0.8506666421890259, 0.8523333072662354, 0.8293333053588867, 0.8543333411216736, 0.82833331823349, 0.8433333039283752, 0.8539999723434448, 0.8463333249092102, 0.8399999737739563]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [7, 8, 4, 0, 1, 4, 1, 4, 5, 8, 5, 4, 3, 3, 9, 3, 8, 3, 4, 3, 6, 5, 3, 0, 8, 1], [5, 2, 3, 1, 0, 2, 0], [57, 56, 47], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.8259999752044678, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 1, 2, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.pow(tf.math.negative(tf.math.add(beta, grad)), beta))), tf.math.subtract(tf.math.pow(tf.math.add(beta, grad), alpha), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.034567606620753, 1.9691045691765152, 1.8524796578232576, 1.2189791276863995, 0.9543625100051659, 0.7865412679755881, 0.7262966086788578, 0.6689928302187347, 0.640087795736232, 0.6213914725632794, 0.5870499250013689, 0.5913454049676873, 0.5716659010377747, 0.5596139356523473, 0.5300753940649162, 0.5124785155431864, 0.5171105986525748, 0.49101010518397764, 0.49190284686711455, 0.479255335572027, 0.4811832414933357, 0.45347180557115563, 0.4680561698808835, 0.4533115077280113, 0.4401652364053148, 0.446180857345019, 0.42660180499855677, 0.40531867740176625, 0.418491866669367, 0.4137757421799497, 0.3839340433429151, 0.4014606765626271, 0.3800997436951967, 0.39567346824646754, 0.36980302229753936, 0.3799249556133571, 0.3479909546827801, 0.3890402304017706, 0.35415873579408325], "accuracy": [0.29665830731391907, 0.3152819871902466, 0.38304054737091064, 0.5558050274848938, 0.6572447419166565, 0.7037379741668701, 0.7288337349891663, 0.7461365461349487, 0.7559106945991516, 0.7626469135284424, 0.7774402499198914, 0.7732135653495789, 0.7816668748855591, 0.7880068421363831, 0.7969884872436523, 0.8098005652427673, 0.8031964302062988, 0.8173292875289917, 0.8173292875289917, 0.819442629814148, 0.8197067975997925, 0.8322546482086182, 0.8272355198860168, 0.828820526599884, 0.8327829837799072, 0.8325188159942627, 0.8429533839225769, 0.850350022315979, 0.846387505531311, 0.8450667262077332, 0.8597279191017151, 0.8500858545303345, 0.8581429123878479, 0.8548408150672913, 0.8636903762817383, 0.8610487580299377, 0.8681812286376953, 0.8576145768165588, 0.8716153502464294], "val_loss": [1.8917932510375977, 1.8417857715061732, 1.1361222948346819, 0.9066834109170097, 0.6269247020993914, 0.5636051552636283, 0.5763876949037824, 0.5598513739449638, 0.4972505910055978, 0.5175703934260777, 0.4701190846306937, 0.4685141699654715, 0.46306713989802767, 0.4333180785179138, 0.424672041620527, 0.4701289108821324, 0.43891664913722445, 0.3967457754271371, 0.3928467886788504, 0.41137421131134033, 0.396878753389631, 0.39059959990637644, 0.38640890802655903, 0.3885348013469151, 0.4005005104201181, 0.4148894122668675, 0.3820967503956386, 0.3731755443981716, 0.3745842065129961, 0.3740848898887634, 0.3512727618217468, 0.3738140378679548, 0.37725673403058735, 0.3483666011265346, 0.35886524404798237, 0.35305003608976093, 0.3787341203008379, 0.3581142170088632, 0.34997192450932096], "val_accuracy": [0.09933333098888397, 0.36766666173934937, 0.5473333597183228, 0.6273333430290222, 0.7239999771118164, 0.7513333559036255, 0.7440000176429749, 0.7450000047683716, 0.7820000052452087, 0.7620000243186951, 0.7929999828338623, 0.7960000038146973, 0.793666660785675, 0.8053333163261414, 0.8180000185966492, 0.7786666750907898, 0.8116666674613953, 0.8263333439826965, 0.8306666612625122, 0.8309999704360962, 0.82833331823349, 0.8306666612625122, 0.8333333134651184, 0.8289999961853027, 0.8259999752044678, 0.8256666660308838, 0.8343333601951599, 0.8383333086967468, 0.8403333425521851, 0.8366666436195374, 0.8500000238418579, 0.8416666388511658, 0.8273333311080933, 0.8539999723434448, 0.8450000286102295, 0.8476666808128357, 0.8410000205039978, 0.8473333120346069, 0.8443333506584167]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [7, 8, 2, 0, 1, 4, 1, 4, 5, 8, 5, 4, 3, 3, 9, 3, 8, 3, 4, 3, 6, 5, 3, 0, 8, 1], [5, 2, 3, 3, 0, 2, 2], [57, 56, 47], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.822857141494751, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 10, 7, 1, 2, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), beta))), tf.math.subtract(tf.math.pow(tf.math.add(beta, grad), tf.math.subtract(grad, tf.math.pow(tf.math.add(beta, tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(beta)))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0346496920181916, 1.9729455808496683, 1.7248612318875343, 1.2049102643225502, 1.07662865473468, 0.8058646655259052, 0.7511575436469287, 0.6749144673756856, 0.6487860077281812, 0.6117945508461871, 0.5921315918698082, 0.5843982878630077, 0.5664511019401641, 0.5659527976389149, 0.5401750728438763, 0.5310544824839551, 0.5089848703515213, 0.4929180074015219, 0.4775576573896087, 0.4824694753039578, 0.4756331651076318, 0.4642439671534872, 0.44932051862881184, 0.4365443739444195, 0.4591536878783705, 0.4398486839624334, 0.42446195097127687, 0.3969967956823869, 0.4061972084629254, 0.41986700537780713, 0.39540608594713905, 0.40686740081355305, 0.3828436939699964, 0.3855137700662007, 0.37097057800928457, 0.3840582286401463, 0.34929796185759254, 0.35038631376242674, 0.35745989624078733], "accuracy": [0.29679039120674133, 0.31158366799354553, 0.4271562397480011, 0.5830141305923462, 0.6092986464500427, 0.6919825673103333, 0.715889573097229, 0.7396644949913025, 0.7437590956687927, 0.7642319202423096, 0.7725531458854675, 0.7784969210624695, 0.7836481332778931, 0.7857614755630493, 0.7895918488502502, 0.8013472557067871, 0.8054417967796326, 0.8133667707443237, 0.8222163319587708, 0.8183859586715698, 0.8234050869941711, 0.8281601071357727, 0.8339717388153076, 0.8421608805656433, 0.82683926820755, 0.8343679904937744, 0.8428213000297546, 0.8532558679580688, 0.8451988101005554, 0.8426892161369324, 0.8525954484939575, 0.8516708612442017, 0.8524633646011353, 0.8574824929237366, 0.8628978729248047, 0.8564258217811584, 0.8702945709228516, 0.8714832663536072, 0.8681812286376953], "val_loss": [1.8914085796901159, 1.745650359562465, 1.1049793788364954, 1.1730135849543981, 0.6657570259911674, 0.6669240338461739, 0.580680353300912, 0.5793110813413348, 0.49602859360831125, 0.5100033112934658, 0.45738046509878977, 0.47244816167013987, 0.4695815699441092, 0.43951053278786795, 0.43018704652786255, 0.4565718684877668, 0.44692492485046387, 0.40528041975838797, 0.46272289752960205, 0.4277822119849069, 0.39935610975537983, 0.40577770130974905, 0.4010154604911804, 0.3935015457017081, 0.39987270321164814, 0.39451238938740324, 0.37105622461863924, 0.36379293884549824, 0.3611058933394296, 0.38246441738946096, 0.39429783821105957, 0.3666614719799587, 0.3838075229099819, 0.33797827788761686, 0.3713435871260507, 0.34994720561163767, 0.3524884751864842, 0.35184970072337557, 0.36226679597582134], "val_accuracy": [0.09933333098888397, 0.37466666102409363, 0.5580000281333923, 0.4506666660308838, 0.7076666951179504, 0.7153333425521851, 0.7436666488647461, 0.7323333621025085, 0.7816666960716248, 0.7616666555404663, 0.8066666722297668, 0.7829999923706055, 0.7913333177566528, 0.8076666593551636, 0.8153333067893982, 0.7836666703224182, 0.8026666641235352, 0.8259999752044678, 0.7919999957084656, 0.8130000233650208, 0.8276666402816772, 0.8273333311080933, 0.8226666450500488, 0.8259999752044678, 0.8303333520889282, 0.8399999737739563, 0.843666672706604, 0.843999981880188, 0.8460000157356262, 0.8363333344459534, 0.8299999833106995, 0.8446666598320007, 0.8286666870117188, 0.856333315372467, 0.8356666564941406, 0.8526666760444641, 0.8529999852180481, 0.8476666808128357, 0.8353333473205566]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0], [2, 8, 2, 0, 6, 2, 1, 9, 4, 0, 8, 9], [2, 0, 3, 3, 1, 2, 2], [57, 49, 0, 81, 53, 45], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.8105714321136475, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 12, 5, 3, 2, 1, 1, 0, 0, 8, 4, 4, 2], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.add(tf.math.subtract(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), grad), tf.math.pow(tf.math.negative(grad), tf.math.add(beta, alpha))), tf.math.sqrt(tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [2.049383346603972, 1.9483855673193287, 1.4342271675601879, 0.9990135189910937, 0.851938731304139, 0.7456738262396321, 0.7563568784135318, 0.652672314632838, 0.6449195176319691, 0.6208937448470222, 0.5971996520866477, 0.5572861209600325, 0.5565069392136516, 0.5508253372356388, 0.5171905690495364, 0.5107710223707462, 0.5155892879294367, 0.4912663558769881, 0.49041449596554043, 0.4730348003704188, 0.4640407020216526, 0.4705949718170257, 0.43552412302691496, 0.47319508108244346, 0.4191994397883654, 0.4327011792226128, 0.4279442698790838, 0.4020000844819907, 0.40234510074076224, 0.40532867203236195, 0.3848580140691817, 0.40571962477839335, 0.3775948955398336, 0.38589800557896853, 0.3660505355357053, 0.38644619098098254, 0.3501315343027275, 0.34946225292851757, 0.33553618085996867, 0.34058885061588146, 0.33705649172326024, 0.3388249300584628, 0.32735337978104684, 0.3233978629639718, 0.33097526830626106], "accuracy": [0.29665830731391907, 0.3241315484046936, 0.5139347314834595, 0.6211860775947571, 0.691850483417511, 0.7166820764541626, 0.7246070504188538, 0.7514199018478394, 0.7497028112411499, 0.7619865536689758, 0.7705719470977783, 0.7877426743507385, 0.7872143983840942, 0.7938185334205627, 0.8096684813499451, 0.8067626357078552, 0.8047813773155212, 0.8185180425643921, 0.8178576231002808, 0.8252542614936829, 0.8297450542449951, 0.8257825970649719, 0.8405758738517761, 0.819442629814148, 0.8445383906364441, 0.8400475382804871, 0.8432175517082214, 0.8491612672805786, 0.8455950617790222, 0.8500858545303345, 0.8580108284950256, 0.852331280708313, 0.859199583530426, 0.859199583530426, 0.8673887252807617, 0.8582749962806702, 0.8672566413879395, 0.871879518032074, 0.878351628780365, 0.871879518032074, 0.8730682730674744, 0.8741249442100525, 0.8817857503890991, 0.8811253309249878, 0.8774270415306091], "val_loss": [1.89698702948434, 1.22219147000994, 0.8761925527027675, 0.7718588794980731, 0.6709021329879761, 0.5646008763994489, 0.6074304580688477, 0.5692390033176967, 0.49481374876839773, 0.4815151350838797, 0.4840376547404698, 0.44822864873068674, 0.44794985226222445, 0.43620013339178904, 0.4661376816885812, 0.48654772554125103, 0.44624979155404226, 0.4123869112559727, 0.39886971030916485, 0.4234416569982256, 0.4125492828232901, 0.3959728649684361, 0.42370459011622835, 0.37754315989358084, 0.40007529088429045, 0.3939989379474095, 0.38235171352113995, 0.3633211169924055, 0.36148241588047575, 0.38237009729657856, 0.39064797333308626, 0.3542605553354536, 0.36002289397375925, 0.35784356934683664, 0.3653044445174081, 0.352803145136152, 0.35428781168801443, 0.3469404748507908, 0.3634756462914603, 0.33168706723621916, 0.33433649369648527, 0.3491787314414978, 0.37645161151885986, 0.3803310820034572, 0.37641613824026926], "val_accuracy": [0.09966666996479034, 0.5120000243186951, 0.6443333625793457, 0.6800000071525574, 0.7173333168029785, 0.7509999871253967, 0.7406666874885559, 0.7396666407585144, 0.7833333611488342, 0.7796666622161865, 0.7763333320617676, 0.8116666674613953, 0.8136666417121887, 0.8029999732971191, 0.7873333096504211, 0.765999972820282, 0.7993333339691162, 0.8220000267028809, 0.8336666822433472, 0.8270000219345093, 0.8136666417121887, 0.8343333601951599, 0.8080000281333923, 0.8413333296775818, 0.8363333344459534, 0.840666651725769, 0.8339999914169312, 0.8389999866485596, 0.8433333039283752, 0.8356666564941406, 0.8309999704360962, 0.8513333201408386, 0.8389999866485596, 0.8429999947547913, 0.8386666774749756, 0.8479999899864197, 0.8516666889190674, 0.8566666841506958, 0.8343333601951599, 0.862333357334137, 0.859000027179718, 0.8456666469573975, 0.8263333439826965, 0.8253333568572998, 0.847000002861023]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [7, 8, 5, 2, 6, 2, 1, 9, 2], [5, 2, 3, 3, 0, 2, 2], [57, 56, 47], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.7968571186065674, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.5398738604369115, 2.196889091429221, 2.2629715160623816, 1.773365561547391, 1.2988465464960677, 1.1603235892017583, 0.9127337828902458, 0.8067055050219212, 0.7591898710799176, 0.7254074454905886, 0.7213820864763463, 0.6987794398112052, 0.6504317694541061, 0.6238149715184756, 0.631361165720285, 0.5758838621915969, 0.583208284310661, 0.5517443948418095, 0.563217813714211, 0.5482714258133381, 0.5253178530664586, 0.5076570358683861, 0.5020181281793985, 0.5104215799652118, 0.4818433482397218, 0.470781003188117], "accuracy": [0.2378813922405243, 0.2226918488740921, 0.17831197381019592, 0.3815876245498657, 0.5297846794128418, 0.5861841440200806, 0.6568484902381897, 0.695813000202179, 0.7094175219535828, 0.7232862114906311, 0.7302865982055664, 0.72672039270401, 0.7540615797042847, 0.7637035846710205, 0.7540615797042847, 0.7880068421363831, 0.7779685854911804, 0.785101056098938, 0.7865539789199829, 0.7959318161010742, 0.8021397590637207, 0.8083476424217224, 0.8087438941001892, 0.8086118102073669, 0.8210275769233704, 0.8202351331710815], "val_loss": [1.967027255467006, 1.9854978152683802, 1.6471590314592635, 1.0252282960074288, 0.9734538282666888, 0.7655128070286342, 0.6121284280504499, 0.5964594909123012, 0.639722193990435, 0.5558410542351859, 0.5556072507585798, 0.5877701554979596, 0.5028057609285627, 0.5225342171532767, 0.48245290347508024, 0.47996948446546284, 0.47581355912344797, 0.49087813922337126, 0.44170091833387104, 0.4741995164326259, 0.4342139022690909, 0.4384488548551287, 0.4218429923057556, 0.4146798849105835, 0.41592261620930265, 0.4215995669364929], "val_accuracy": [0.16066665947437286, 0.12800000607967377, 0.40700000524520874, 0.6129999756813049, 0.5483333468437195, 0.6626666784286499, 0.718666672706604, 0.7390000224113464, 0.7036666870117188, 0.75, 0.7483333349227905, 0.7333333492279053, 0.7736666798591614, 0.7423333525657654, 0.7910000085830688, 0.7836666703224182, 0.7856666445732117, 0.781333327293396, 0.8073333501815796, 0.784333348274231, 0.8190000057220459, 0.7923333048820496, 0.8043333292007446, 0.8163333535194397, 0.8036666512489319, 0.8143333196640015]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [7, 8, 5, 8, 6, 2, 1, 9, 2], [5, 3, 3, 3, 0, 2, 2], [57, 49, 0, 81, 53, 45], [1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [53, 57]], "fitness": -0.7954285740852356, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.square(tf.math.sqrt(tf.math.add(beta, grad))))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2555286241261054, 2.109326203548677, 2.1783422075951058, 2.177388082547604, 1.8151877459250327, 1.1710684771125879, 0.9600654762922702, 0.8088703058997575, 0.7145399724676655, 0.6875332043297208, 0.6878591099388138, 0.6216816986320419, 0.6173935847007808, 0.6230444094020268, 0.6036468078006512, 0.5677119358702893, 0.5593694697643835, 0.5575028299860211, 0.5564003646759514, 0.5038327455851286, 0.5314114950179046, 0.5364320875513178, 0.5281895854768814, 0.4917575671467814, 0.5001320349045906, 0.4761622124312812, 0.46132786193890357], "accuracy": [0.2262580841779709, 0.2805441915988922, 0.2448817789554596, 0.1868973672389984, 0.4021925628185272, 0.6160348653793335, 0.6602826714515686, 0.7129837274551392, 0.7387399077415466, 0.7458723783493042, 0.7448157668113708, 0.767930269241333, 0.7623828053474426, 0.7700436115264893, 0.7736098170280457, 0.7817989587783813, 0.7917051911354065, 0.7864218950271606, 0.7886672616004944, 0.8141592741012573, 0.802271842956543, 0.7994980812072754, 0.7997622489929199, 0.8141592741012573, 0.8153480291366577, 0.8193105459213257, 0.824329674243927], "val_loss": [1.9023205893380302, 1.3447508130754744, 1.9168415750776018, 1.7818474769592285, 1.1767652375357491, 0.8489913088934762, 0.6150971140180316, 0.5378723825727191, 0.5952779054641724, 0.5968805381229946, 0.5209367956433978, 0.4975438117980957, 0.5646189280918666, 0.4617215735571725, 0.470768792288644, 0.45822538648332867, 0.4970146417617798, 0.44204416445323397, 0.4390550340924944, 0.4397738831383841, 0.44039411204201834, 0.40775775057928904, 0.4214543529919216, 0.43611558846064974, 0.43153652123042513, 0.4072889855929783, 0.47584729535239084], "val_accuracy": [0.18000000715255737, 0.47999998927116394, 0.10566666722297668, 0.4246666729450226, 0.6163333058357239, 0.6353333592414856, 0.7250000238418579, 0.7570000290870667, 0.7396666407585144, 0.7440000176429749, 0.7620000243186951, 0.7739999890327454, 0.7450000047683716, 0.7856666445732117, 0.7873333096504211, 0.7983333468437195, 0.7883333563804626, 0.8086666464805603, 0.7913333177566528, 0.812333345413208, 0.8066666722297668, 0.8256666660308838, 0.8119999766349792, 0.809333324432373, 0.8166666626930237, 0.8163333535194397, 0.7979999780654907]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1], [9, 8, 2, 0, 6, 2, 1, 9, 9, 1], [2, 0, 3, 3, 1, 2, 2], [15, 1, 0, 81, 53, 45], [0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [30, 57]], "fitness": -0.7917143106460571, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2862430825256763, 2.2459668083087627, 2.189227988927466, 2.1006028103617442, 1.9617136729439062, 1.7724393899682303, 1.580029644813079, 1.4144949603940455, 1.3084830838329269, 1.214938317260344, 1.145777231320225, 1.0852671876449342, 1.0374371260699815, 1.0009491187454513, 0.9794944742840389, 0.9435154178107592, 0.9139560251865153, 0.887236830549249, 0.8792312883146687, 0.8564002070649268, 0.8454255309118776, 0.8322266786955981, 0.8134390650140674, 0.8104064044006402, 0.8036948944741016, 0.7908547109915769, 0.7875250186965513, 0.7641817415631317, 0.7748179995010652, 0.7523768666146091, 0.7585270298375997, 0.7407684995198782, 0.7445614863348958, 0.7347504550896427, 0.7338912092683622, 0.7169088863457325, 0.7178805084622784, 0.706119782377338, 0.7044902876808722, 0.7023319786077697, 0.7049004463566261, 0.6963365909807938, 0.688008683358579, 0.6752054468515668, 0.6778253484883912, 0.6796532651814707, 0.6688318780746757, 0.6843931836821163, 0.6640981430107372, 0.6593766411486681, 0.6547888771827274, 0.6511086897370744, 0.6478853525974968, 0.6518630726604162], "accuracy": [0.13776251673698425, 0.22903183102607727, 0.3123761713504791, 0.37287017703056335, 0.4227975308895111, 0.45766741037368774, 0.49531105160713196, 0.5321621894836426, 0.5548804402351379, 0.5868445634841919, 0.5983357429504395, 0.6211860775947571, 0.6343944072723389, 0.6411306262016296, 0.6519614458084106, 0.6635847091674805, 0.6740192770957947, 0.6811517477035522, 0.6864351034164429, 0.6926429867744446, 0.6913221478462219, 0.698718786239624, 0.7092854380607605, 0.7061154246330261, 0.7029454708099365, 0.7141724824905396, 0.7096816897392273, 0.7239466309547424, 0.7172104120254517, 0.7194558382034302, 0.7214370369911194, 0.7214370369911194, 0.7248712182044983, 0.7313432693481445, 0.7308149337768555, 0.7310791015625, 0.7333245277404785, 0.7395324110984802, 0.7366266250610352, 0.7396644949913025, 0.7412495017051697, 0.737947404384613, 0.7450799345970154, 0.7466648817062378, 0.7483819723129272, 0.748249888420105, 0.7547219395637512, 0.7428345084190369, 0.7453441023826599, 0.7539294958114624, 0.7577598690986633, 0.7572315335273743, 0.7559106945991516, 0.7580240368843079], "val_loss": [1.934708731515067, 1.8898164885384696, 1.8222333363124303, 1.7136191299983434, 1.5527920041765486, 1.3557564531053816, 1.1689118998391288, 1.0283450399126326, 0.9333406175885882, 0.8610926355634417, 0.8100034679685321, 0.7708256925855365, 0.7380206074033465, 0.7123447145734515, 0.6917389801570347, 0.6777702399662563, 0.6608067240033831, 0.6487141507012504, 0.637578913143703, 0.625858085496085, 0.6158770833696637, 0.6076544523239136, 0.6025926045009068, 0.5968954903738839, 0.5898829528263637, 0.5810467345373971, 0.5776650735310146, 0.5703336851937431, 0.5655579907553536, 0.5647111279623849, 0.5581670999526978, 0.5515694618225098, 0.54985169001988, 0.5455377612795148, 0.5411909818649292, 0.537840587752206, 0.5374702555792672, 0.5300903490611485, 0.5284163100378854, 0.5268152611596244, 0.5247538260051182, 0.5219938925334385, 0.5201047999518258, 0.5155837195260184, 0.5219387837818691, 0.5133146558489118, 0.5114729915346418, 0.512175270489284, 0.5084677934646606, 0.5020081315721784, 0.503541214125497, 0.4989169325147356, 0.4986646515982492, 0.49589344433375765], "val_accuracy": [0.3233333230018616, 0.4036666750907898, 0.47099998593330383, 0.5173333287239075, 0.5543333292007446, 0.5899999737739563, 0.6196666955947876, 0.6546666622161865, 0.668666660785675, 0.6766666769981384, 0.6909999847412109, 0.6903333067893982, 0.7020000219345093, 0.7129999995231628, 0.7096666693687439, 0.7163333296775818, 0.7173333168029785, 0.7300000190734863, 0.722000002861023, 0.7360000014305115, 0.737333357334137, 0.7436666488647461, 0.7409999966621399, 0.7443333268165588, 0.7429999709129333, 0.7516666650772095, 0.7519999742507935, 0.7566666603088379, 0.7603333592414856, 0.7490000128746033, 0.7613333463668823, 0.7609999775886536, 0.762666642665863, 0.765666663646698, 0.7666666507720947, 0.7670000195503235, 0.7673333287239075, 0.7706666588783264, 0.7710000276565552, 0.7706666588783264, 0.7706666588783264, 0.7716666460037231, 0.7743333578109741, 0.7749999761581421, 0.765999972820282, 0.7756666541099548, 0.7796666622161865, 0.7703333497047424, 0.784333348274231, 0.7806666493415833, 0.7839999794960022, 0.781333327293396, 0.7796666622161865, 0.7823333144187927]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1], [2, 8, 2, 0, 6, 2, 1, 9, 4], [1, 2, 3, 3, 1, 2, 2], [57, 49, 0, 81, 53, 45], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [6, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [5, 57]], "fitness": -0.7114285826683044, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 3, 2, 1, 1, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.sqrt(beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.30189058809327, 2.3016482027152336, 2.296396843399181, 2.29068195966288, 2.2822163083597085, 2.2711984270111194, 2.2602260786985378, 2.246188905654472, 2.231863508449963, 2.2148290294241106, 2.1941225837958944, 2.170577451458791, 2.141723355439518, 2.1064558296533638, 2.067818904581197, 2.0157313227984157, 1.953698968670041, 1.8862639610809249, 1.8203717324680515, 1.7289659661104209, 1.6549700290582687, 1.5769384162710358, 1.504874484272303, 1.45991198809675, 1.4264008623182876, 1.3798736138760122, 1.3778522814647507, 1.3499135637736797, 1.3754446962332887, 1.366914808443115, 1.3822767323412206, 1.3588371677736266, 1.3154740460151064, 1.2543228449460584, 1.211573577749101, 1.1325297676860349, 1.1031520190791306, 1.016135421568896, 0.9709630031643007, 0.9383713913757441, 0.9268611362109237, 0.9159499800924801, 0.9066702502199908, 0.9005760485627443, 0.9100777081856875], "accuracy": [0.09655263274908066, 0.09245806187391281, 0.10738343745470047, 0.12019548565149307, 0.1460837423801422, 0.1776515692472458, 0.2082948088645935, 0.2413155436515808, 0.2650904655456543, 0.2991678714752197, 0.3241315484046936, 0.34183067083358765, 0.35345396399497986, 0.3765684962272644, 0.3863426148891449, 0.39730551838874817, 0.41064587235450745, 0.4209483563899994, 0.42808082699775696, 0.4485536813735962, 0.45106327533721924, 0.4678378105163574, 0.49187690019607544, 0.4905560612678528, 0.501518964767456, 0.5243692994117737, 0.5255580544471741, 0.5476158857345581, 0.5473517179489136, 0.5464271306991577, 0.5509179830551147, 0.5580504536628723, 0.5728437304496765, 0.5901466012001038, 0.6048077940940857, 0.6272619366645813, 0.6320168972015381, 0.6487914323806763, 0.6522256135940552, 0.6536785364151001, 0.6522256135940552, 0.6535464525222778, 0.6552634835243225, 0.6520935297012329, 0.6557918190956116], "val_loss": [1.9701405933925085, 1.9671207155500139, 1.96221889768328, 1.9555168151855469, 1.9471094948904855, 1.9371381487165178, 1.9256454876491003, 1.9125549452645438, 1.897777897971017, 1.880873339516776, 1.8609508105686732, 1.8370421273367745, 1.808095932006836, 1.7729220390319824, 1.7302941594805037, 1.6788773877280099, 1.617548976625715, 1.5458845751626151, 1.464747497013637, 1.3766318729945592, 1.2856231416974748, 1.1968609264918737, 1.1148837293897356, 1.0422046184539795, 0.9791653837476458, 0.9252105099814278, 0.8794890471867153, 0.8439701795578003, 0.8234109878540039, 0.8166063683373588, 0.8070298433303833, 0.7819746903010777, 0.7579171998160226, 0.7509960957935878, 0.7527471099581037, 0.7465381281716483, 0.7238900320870536, 0.6937910148075649, 0.6712964943477085, 0.6652061768940517, 0.6704129150935582, 0.6774763720376151, 0.6837819133486066, 0.6903089114597866, 0.6965688126427787], "val_accuracy": [0.04800000041723251, 0.06433333456516266, 0.09566666930913925, 0.15733332931995392, 0.24166665971279144, 0.3140000104904175, 0.3476666808128357, 0.3630000054836273, 0.3803333342075348, 0.3943333327770233, 0.4099999964237213, 0.4233333468437195, 0.4346666634082794, 0.4506666660308838, 0.46666666865348816, 0.47600001096725464, 0.49300000071525574, 0.5143333077430725, 0.5360000133514404, 0.5576666593551636, 0.5716666579246521, 0.5849999785423279, 0.6106666922569275, 0.6293333172798157, 0.6439999938011169, 0.6523333191871643, 0.6613333225250244, 0.6693333387374878, 0.6673333048820496, 0.6526666879653931, 0.6463333368301392, 0.6746666431427002, 0.6833333373069763, 0.6833333373069763, 0.6856666803359985, 0.690666675567627, 0.6993333101272583, 0.7073333263397217, 0.7116666436195374, 0.7143333554267883, 0.7023333311080933, 0.6930000185966492, 0.6890000104904175, 0.6886666417121887, 0.7003333568572998]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 8, 2, 0, 6, 9, 1, 9, 4], [2, 2, 3, 3, 1, 2, 2], [57, 56, 47], [1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 8, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.31285715103149414, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.negative(beta), tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.822538797330422, 2.2286019130011967, 2.3373065259336654, 2.3045225654846924, 2.303129126351381, 2.303345718277979, 2.3033861429967493], "accuracy": [0.20261524617671967, 0.14793290197849274, 0.14080041646957397, 0.10130762308835983, 0.09602430462837219, 0.0940430611371994, 0.09589222073554993], "val_loss": [1.98402772630964, 1.9735119683401925, 1.9754338264465332, 1.9739584922790527, 1.9738502502441406, 1.9736851964678084, 1.973646572657994], "val_accuracy": [0.09833333641290665, 0.12399999797344208, 0.1003333330154419, 0.09833333641290665, 0.09833333641290665, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [7, 8, 2, 0, 6, 2, 1, 9, 4], [5, 2, 3, 3, 0, 2, 2], [38, 49, 0], [0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [5, 7], [88, 19], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [2, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3028317491974515, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09866596013307571, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1], [8, 8, 2, 0, 6, 2, 4, 3, 4], [5, 2, 3, 3, 0, 2, 2], [57, 24, 47], [1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 13, 7, 6, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(alpha), tf.math.pow(tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, sigma), sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07040020823478699, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1], [7, 8, 2, 0, 6, 2, 1, 9, 4], [5, 2, 3, 3, 0, 2, 2], [57, 56, 47], [1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 2, 0, 1, 3, 3], [16, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(grad, beta))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1], [4, 8, 8, 0, 6, 2, 1, 9], [2, 0, 3, 3, 1, 2, 2], [38, 49, 0], [1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [31, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 1, 1, 0, 0, 0, 0, 3, 2, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.negative(beta)))))), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07330603897571564, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1], [7, 3, 2, 0, 1, 4, 1, 4, 5, 8, 5, 4, 3, 3, 9, 3, 8, 3, 4, 3, 6, 5, 3, 0, 8, 1], [5, 2, 3, 3, 0, 2, 2, 0], [57, 56, 47], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [2, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 9, 8, 2, 2, 1, 1, 0, 0, 3, 1, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(tf.math.negative(grad), beta), tf.math.subtract(tf.math.pow(grad, tf.math.subtract(grad, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.pow(beta, tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))))))), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303557942808265, 3.1740977104392587, 29.027915831145013, 110.70560704328129, 250.1685618737024, 447.480094453174], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.000212941850935, 8.506902967180524, 58.226449148995535, 157.52760096958704, 306.24639892578125, 504.3646240234375], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1], [2, 8, 2, 2, 6, 2, 0, 5, 4], [5, 0, 3, 3, 0, 2, 2], [57, 56, 47], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 2, 2, 1, 1, 0, 0, 13, 7, 6, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), grad), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32))))))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(alpha), tf.math.pow(tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, sigma), sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07040020823478699, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1], [2, 8, 2, 0, 6, 2, 1, 9, 4], [5, 2, 3, 3, 0, 2, 2], [57, 56, 47], [1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [91, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(alpha, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303267502813071, 2.3029752320554264, 2.3029559797315455, 2.3030691847525975, 2.302898951840202, 2.30304647918548], "accuracy": [0.09219389408826828, 0.10011887550354004, 0.09470347315073013, 0.09549596905708313, 0.09377889335155487, 0.0948355570435524], "val_loss": [1.9736620358058385, 1.973691190992083, 1.973633084978376, 1.9736710957118444, 1.9737379210335868, 1.9736533164978027], "val_accuracy": [0.10366666316986084, 0.09833333641290665, 0.10066666454076767, 0.09799999743700027, 0.09799999743700027, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [2, 8, 2, 0, 6, 4, 1, 9, 9, 3], [5, 0, 3, 3, 0, 2, 2], [57, 56, 47, 67], [1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 10, 5, 4, 1, 0, 0, 0, 0, 13, 7, 6, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.pow(tf.math.subtract(tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), grad)))), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.multiply(grad, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, sigma), sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0684189647436142, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1], [4, 5, 2, 0, 6, 2, 1, 9, 9, 1], [2, 2, 3, 3, 1, 2, 2], [15, 1, 0, 81, 53, 45], [0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [5, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 10, 5, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(beta)), tf.math.add(beta, beta))))), tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.subtract(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), grad)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, alpha)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07330603897571564, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1], [1, 8, 8, 0, 4, 2, 0, 9, 4], [2, 2, 3, 3, 1, 2, 2], [57, 56, 47], [1, 0, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [7, 8, 2, 0, 1, 4, 1, 4, 5, 8, 5, 4, 3, 3, 9, 3, 8, 3, 4, 3, 6, 5, 3, 0, 8, 1], [2, 2, 3, 3, 0, 2, 2], [57, 56, 47], [0, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [3, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.0657142847776413, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 10, 7, 1, 2, 2, 1, 1, 0, 4, 2, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.negative(tf.math.subtract(beta, beta)), tf.math.pow(tf.math.add(beta, grad), tf.math.subtract(grad, tf.math.add(beta, tf.math.pow(tf.math.square(tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(beta)))))))), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3020105534824227, 2.30333380793001, 2.3018528347584737, 2.3020283114940043, 2.301390842660197, 2.3002335851722466, 2.300710669755463, 2.300508900309724, 2.3001829509989555, 2.301347102628896, 2.3011906937427997, 2.301163815866293, 2.3015386484176603, 2.300727419991141, 2.301132568200156, 2.2991991618117007, 2.298885376729576, 2.2985572946258994, 2.3010541525152868, 2.300013035264202, 2.300804349519888, 2.3006665546030276, 2.2994281469382125, 2.300398765160124, 2.3009028143146493, 2.2998982684140854], "accuracy": [0.09576013684272766, 0.0882314071059227, 0.09576013684272766, 0.09232597798109055, 0.09853387624025345, 0.1002509593963623, 0.09536388516426086, 0.10051512718200684, 0.09325055778026581, 0.0952318087220192, 0.09589222073554993, 0.09430722147226334, 0.0936468094587326, 0.0952318087220192, 0.09060890227556229, 0.09945846349000931, 0.10091137140989304, 0.09932637959718704, 0.09074098616838455, 0.10157178342342377, 0.1002509593963623, 0.09417514503002167, 0.10460969805717468, 0.1006472036242485, 0.09879804402589798, 0.09787346422672272], "val_loss": [1.9708941323416573, 1.970597403390067, 1.970353671482631, 1.9701619829450334, 1.9701008115495955, 1.9700040136064803, 1.9700343268258231, 1.9700277192252023, 1.9700008119855608, 1.9700093269348145, 1.9700259481157576, 1.970017773764474, 1.9700210435049874, 1.9700193405151367, 1.9700010163443429, 1.9699794905526298, 1.9699440002441406, 1.9699950218200684, 1.9699370520455497, 1.969914095742362, 1.969886098589216, 1.969881807054792, 1.9699007443019323, 1.9699562617710658, 1.969996111733573, 1.9700816018240792], "val_accuracy": [0.041333332657814026, 0.043666668236255646, 0.04600000008940697, 0.04833333194255829, 0.049666665494441986, 0.05066666752099991, 0.05366666615009308, 0.05400000140070915, 0.055666666477918625, 0.05700000002980232, 0.05700000002980232, 0.05700000002980232, 0.05766666680574417, 0.05966666713356972, 0.061000000685453415, 0.06333333253860474, 0.06499999761581421, 0.06733333319425583, 0.0716666653752327, 0.07400000095367432, 0.07433333247900009, 0.07400000095367432, 0.07333333045244217, 0.0729999989271164, 0.07266666740179062, 0.07366666942834854]}}]