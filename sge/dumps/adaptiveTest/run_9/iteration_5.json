[{"genotype": [[0], [1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 1], [2, 3, 5, 0], [2, 1, 1], [50], [1], [1], [], [0], [1], [1], [], [], [], [], [0, 0, 1, 0, 0, 1, 1], [6, 3, 0, 5], [1, 0, 0], [81, 57]], "fitness": -0.2639999985694885, "mapping_values": [1, 7, 7, 4, 3, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, alpha), tf.math.square(tf.math.add(alpha, tf.math.negative(alpha))))), lambda shape,  alpha, beta, grad: tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.math.negative(tf.math.square(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.5445370097532565, 2.3098108945442717, 2.208656535156808, 2.311319322665417, 2.3035495840500153, 2.3030106397494507], "accuracy": [0.1970677524805069, 0.14119666814804077, 0.1938977688550949, 0.10038304328918457, 0.10130762308835983, 0.09747721254825592], "val_loss": [1.8555492673601424, 1.9705559866768974, 1.9928980554853166, 1.9746984073093958, 1.9738572665623255, 1.973808969770159], "val_accuracy": [0.3136666715145111, 0.1003333330154419, 0.10066666454076767, 0.09933333098888397, 0.09933333098888397, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 1, 1, 0, 1], [5], [2], [50], [1], [1], [], [0], [52], [0], [1], [], [1], [], [0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1], [3, 5, 7, 9, 8, 4, 5], [1, 1, 0, 3, 0], [48, 75, 38]], "fitness": -0.13257142901420593, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, alpha)", "other_info": {"loss": [2.30024600435226, 2.301009888441776, 2.3021392865093424, 2.303172420406732, 2.3052737370867535, 2.3361813228490282], "accuracy": [0.09655263274908066, 0.0882314071059227, 0.07806102186441422, 0.08070268481969833, 0.09602430462837219, 0.09840179979801178], "val_loss": [1.9693873950413294, 1.9728612899780273, 1.973748002733503, 1.9744796752929688, 1.9805385044642858, 2.0929315430777415], "val_accuracy": [0.12200000137090683, 0.06733333319425583, 0.0729999989271164, 0.09533333033323288, 0.09966666996479034, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1], [2, 3, 5, 7, 2, 2, 2, 0, 9, 3], [2, 1, 1, 0, 2, 1, 1], [50, 15], [1], [1], [], [0], [1], [0, 1, 0, 1], [0, 0], [6, 0], [], [], [0, 0, 1, 1, 0, 1, 1], [6, 3, 0, 5], [1, 0, 0], [81, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 17, 17, 10, 7, 2, 1, 1, 0, 1, 1, 4, 2, 2, 0, 0, 6, 3, 3, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(tf.math.add(tf.math.add(alpha, alpha), alpha), tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))), tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.negative(tf.math.add(alpha, tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(alpha, grad), alpha))), alpha)), lambda shape,  alpha, beta, grad: tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1, 0], [0, 1, 1, 1, 0, 1, 1, 1], [2, 1, 5, 7], [2, 1, 0, 2], [50], [1], [1], [], [0], [15], [1], [], [], [], [], [0, 1, 0, 0, 0, 0, 1], [6, 3, 0, 5, 9], [1, 0, 0], [81, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 7, 5, 2, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), alpha)), lambda shape,  alpha, beta, grad: tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.math.multiply(tf.math.negative(tf.math.square(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [4.583660568959763e+26, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11795007437467575, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 1], [1, 1, 0, 1, 0], [1, 2, 8, 9], [2], [50], [1], [1], [], [0], [8], [1], [], [], [], [], [0, 1], [0], [0], [71]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.87174790e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1215251491.7291098, 22914038643.742702, 105734868758.82393, 294780228835.36017, 624663687104.7017, 1163904269944.3074], "accuracy": [0.10130762308835983, 0.10249637067317963, 0.09826971590518951, 0.10196803510189056, 0.10421344637870789, 0.10315678268671036], "val_loss": [4615260452.571428, 36911065380.57143, 124562421467.42857, 295244080274.2857, 576634093568.0, 996404288365.7142], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0], [1, 1, 0, 1, 0], [2, 3, 5, 0, 7, 7, 0, 8, 0, 3, 6, 5, 1, 0, 8, 9], [1, 1, 1, 0, 2, 3, 0], [50], [0, 0, 0, 1], [1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1], [3], [5, 0], [8, 3], [1], [], [], [], [], [1, 0, 0, 1, 1, 0, 1, 1], [6, 3, 2, 5], [0, 2, 3, 1], [81, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3029159247174538, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09972262382507324, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 1, 1, 0, 1], [0, 1, 0, 1, 0, 0, 1], [2, 3, 5, 0], [2, 1, 1], [50], [1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [1, 3, 1, 1, 5, 1], [0, 1, 0, 1, 4, 0], [1, 38, 47], [1], [], [], [], [], [0, 0, 1, 0, 0, 1, 0], [6, 3, 9, 5], [1, 0, 0], [81, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 4, 3, 0, 12, 12, 6, 6, 3, 1, 0, 0, 0, 0, 6, 4, 2, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.multiply(alpha, tf.math.square(tf.math.add(alpha, tf.math.negative(alpha))))), lambda shape,  alpha, beta, grad: tf.math.subtract(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(beta, tf.math.subtract(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(beta, tf.math.square(alpha)), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0866464152932167, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 1], [0, 0, 1, 1, 1], [1, 2, 8, 9], [2, 2, 1], [50], [1, 0, 1, 1, 1, 0, 1, 0, 1, 0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1], [3, 4, 9, 0, 1, 8, 0], [0, 2, 1], [1, 59], [1], [0], [], [], [], [1, 0, 1], [8, 5], [2, 0], [67]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 0, 10, 10, 7, 3, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad))), alpha)), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.subtract(tf.math.sqrt(tf.math.add(beta, tf.math.negative(beta))), tf.math.add(beta, alpha)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09694888442754745, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0], [0, 1, 0, 1, 0, 1], [1, 1, 8, 9], [2, 1, 3], [50], [1], [1], [], [3], [1], [1], [], [], [], [], [0, 1], [0], [1], []], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, grad), tf.math.subtract(tf.math.add(alpha, alpha), tf.math.sqrt(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 1], [2, 3, 5, 0], [3, 1, 2], [50], [1], [1], [], [0], [31], [1], [], [], [], [], [0, 0, 0, 0, 0, 1, 1], [5, 1, 9, 0, 9], [1, 0, 0], [81, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 5, 5, 0, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, alpha), grad)), lambda shape,  alpha, beta, grad: tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.subtract(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3029159247174538, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09972262382507324, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1], [0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1], [2, 1, 5, 0, 1, 3, 6, 8, 7, 1, 4, 3, 3, 4, 6, 5], [2, 1, 1, 0, 2, 1, 3, 0, 1, 2, 0, 0, 2], [50, 89, 70, 46], [1], [1], [], [0], [8], [1], [], [], [], [], [0, 1], [8], [1], [81, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 29, 29, 16, 13, 4, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), grad)), tf.math.add(alpha, alpha)), tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, alpha), tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))))))))))))), tf.math.square(grad))), lambda shape,  alpha, beta, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 1], [3, 7], [3, 2, 3], [50], [1], [1], [], [0], [31], [1], [], [], [], [], [0, 0, 1, 0, 0, 1, 1], [5, 9], [3, 2], [57]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 2, 0, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.add(alpha, grad), tf.math.add(tf.math.add(alpha, grad), grad)), lambda shape,  alpha, beta, grad: tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3029159247174538, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09972262382507324, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 1], [1], [1, 2, 8, 9], [2], [50], [1], [0], [9], [0], [1], [1], [], [], [], [], [0, 1, 0, 0], [2, 5, 9], [1, 0], [67]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 4, 3, 1, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.square(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3025282464085977, 2.302339440622759, 2.3027866615390638, 2.3047960046071103, 2.3146704885512768, 2.362965518740804], "accuracy": [0.10210011899471283, 0.1010434553027153, 0.10632677376270294, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736852645874023, 1.9738143512180872, 1.97460903440203, 1.978334903717041, 1.9971941539219447, 2.0991787229265486], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 1, 0, 1], [1, 1, 0, 1, 0], [], [3], [50], [1], [1], [], [0], [31], [1], [], [], [], [], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1], [5, 1, 7, 5, 7, 2, 6, 8, 6, 5, 1, 4, 8, 5, 3], [1, 3, 0, 0, 2, 1, 1, 1, 0, 1], [7, 38, 1]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 25, 15, 10, 3], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.subtract(tf.math.add(tf.math.square(alpha), tf.math.add(tf.math.add(tf.math.divide_no_nan(sigma, tf.math.sqrt(tf.math.divide_no_nan(tf.math.square(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.pow(beta, alpha), tf.math.sqrt(alpha))), alpha)), tf.math.square(tf.math.multiply(tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), alpha))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 1, 0], [1, 0, 0, 1, 0, 0, 1], [2, 3, 5, 7], [2, 1, 1], [50], [1], [1], [], [0], [72], [1], [], [], [], [], [0, 1, 1, 0, 0, 0, 1], [0, 3, 0, 5], [1, 0, 0], [81, 57]], "fitness": -0.09628571569919586, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.571716634494407, 2.328663667935296, 2.1643764435764727, 2.2980708834076635, 2.3498718558742135, 2.3566663825453675, 2.3614777321072933, 2.365327450483073], "accuracy": [0.20895522832870483, 0.10527011007070541, 0.2533350884914398, 0.19601109623908997, 0.1254788041114807, 0.09879804402589798, 0.09787346422672272, 0.09813763201236725], "val_loss": [2.0284649985177174, 1.952702249799456, 1.625411033630371, 1.9501652717590332, 2.0102936880929128, 2.0244885853358676, 2.0353311129978726, 2.0176502636500766], "val_accuracy": [0.10066666454076767, 0.1783333271741867, 0.3370000123977661, 0.1863333284854889, 0.10199999809265137, 0.10000000149011612, 0.10199999809265137, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1], [1, 0, 0, 1, 0, 0, 1], [2, 3, 5, 0], [2], [50], [1], [1], [], [0], [1], [1], [], [], [], [], [0, 1, 1, 0, 0, 0, 1], [0, 3, 0, 5], [1, 0, 0], [81, 57]], "fitness": -0.09399999678134918, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.5717034532629883, 2.3289129350793485, 2.16423821150115, 2.299078378506057, 2.2695860502474563, 2.303668195545366, 2.32852888236413, 2.342722940438648], "accuracy": [0.20895522832870483, 0.10460969805717468, 0.2533350884914398, 0.1838594675064087, 0.13881917297840118, 0.12151630967855453, 0.09906221181154251, 0.09866596013307571], "val_loss": [2.0284620012555803, 1.9546339171273368, 1.66341005052839, 1.9370153290884835, 1.9619426046098982, 1.9920463562011719, 1.9813931328909737, 1.998065676007952], "val_accuracy": [0.10066666454076767, 0.17133332788944244, 0.3453333377838135, 0.15000000596046448, 0.14666666090488434, 0.09966666996479034, 0.10199999809265137, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 1, 0], [0, 1, 0, 1, 1, 0, 1], [2, 3, 5, 0], [2, 1, 1], [50], [1], [1], [], [1], [1], [1], [], [], [], [], [0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0], [0, 3, 0, 5, 6, 1, 6, 5, 9], [1, 0, 0, 0], [57, 62, 46, 59]], "fitness": -0.06457142531871796, "mapping_values": [1, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 13, 9, 4, 4], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, alpha), alpha))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(tf.math.square(tf.math.divide_no_nan(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.divide_no_nan(tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.3017014640276034, 2.302919909718203, 2.306830764997747, 2.312556210132307, 2.3282782474387322, 2.3641987901243473, 2.445399968631358, 2.5908306893608306, 2.7761345925253647, 2.999899099531616, 3.220187614244666], "accuracy": [0.08809932321310043, 0.08096684515476227, 0.07119271159172058, 0.07026813179254532, 0.08281600475311279, 0.08545766770839691, 0.08968432247638702, 0.09206181764602661, 0.08360850811004639, 0.09126931428909302, 0.09985470771789551], "val_loss": [1.97075469153268, 1.9750572613307409, 1.9785242761884416, 1.987354006086077, 2.007004805973598, 2.0558642659868513, 2.159009184156145, 2.300342696053641, 2.487063476017543, 2.672415460859026, 2.8647659165518626], "val_accuracy": [0.032999999821186066, 0.04066666588187218, 0.04466666653752327, 0.05533333495259285, 0.06599999964237213, 0.10066666454076767, 0.09966666996479034, 0.08633333444595337, 0.09099999815225601, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 0, 1, 0, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 0, 0, 0, 1, 1], [2, 3, 5, 0, 3, 0], [2, 1, 1, 0], [50], [1, 1, 1, 1, 0], [0, 0, 0, 1, 1], [0, 6, 8], [0, 4], [37], [1], [], [], [], [], [1, 0, 1, 1, 0, 1, 1], [6, 3, 0, 5], [3, 0, 2], []], "fitness": -0.03685714304447174, "mapping_values": [1, 10, 10, 6, 4, 1, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.multiply(tf.math.add(alpha, alpha), tf.math.square(tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.negative(alpha), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.sqrt(tf.constant(7.41067363e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3025207774608583, 2.302536937334219, 2.3027715218175815, 2.3034912620663346, 2.303095276550043, 2.3032848092432996], "accuracy": [0.08955223858356476, 0.09166556596755981, 0.08968432247638702, 0.09060890227556229, 0.08968432247638702, 0.09311848133802414], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1], [2, 3, 5, 0], [2, 1, 1], [50], [1], [1], [], [0], [34], [1], [], [], [], [], [0, 0, 1, 0, 0, 1, 1, 1], [6, 3, 0, 4], [2, 3, 0, 0], [57, 1]], "fitness": -0.03685714304447174, "mapping_values": [1, 7, 7, 4, 3, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 8, 4, 4, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, grad))), alpha)), tf.math.add(alpha, tf.math.negative(alpha)))), lambda shape,  alpha, beta, grad: tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(beta, tf.math.negative(tf.math.pow(sigma, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3025207774608583, 2.302536937334219, 2.3027715218175815, 2.3034912620663346, 2.303095276550043, 2.3032848092432996], "accuracy": [0.08955223858356476, 0.09166556596755981, 0.08968432247638702, 0.09060890227556229, 0.08968432247638702, 0.09311848133802414], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0], [5, 3, 8, 1], [2, 1], [50], [1], [1], [], [5], [], [1], [], [3, 2], [5, 3], [], [0, 1], [5], [1], []], "fitness": -0.036571428179740906, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.3025205389478063, 2.302563318376764, 2.303151889767519, 2.3056799479290446, 2.308060517447767, 2.3118718132099154, 2.3129163290673023], "accuracy": [0.08955223858356476, 0.09206181764602661, 0.0874389111995697, 0.08532558381557465, 0.07396645098924637, 0.07251353561878204, 0.06921146810054779], "val_loss": [1.9712354796273368, 1.9713365691048759, 1.9723037311008997, 1.9747765404837472, 1.9787065642220634, 1.9807730402265276, 1.9822827066693987], "val_accuracy": [0.03966666758060455, 0.0403333343565464, 0.03500000014901161, 0.026333333924412727, 0.018333332613110542, 0.010999999940395355, 0.009999999776482582]}}]