[{"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7845714092254639, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.292677225831666, 2.2657471594950938, 2.235519414249743, 2.19450801077961, 2.1443386355001914, 2.0718903415285914, 1.9766042150164387, 1.8568834064973896, 1.728769851744907, 1.5908972146158062, 1.482634046830049, 1.3816047422228677, 1.3131308063713156, 1.2473913371807013, 1.183753455335501, 1.1383353978446635, 1.1042620176180022, 1.060971646056341, 1.0335689393394831, 1.0109910557156998, 0.9885454468676096, 0.9648015095400001, 0.9438820203077114, 0.9237498797367057, 0.9135800851035379, 0.8975803674078259, 0.8856934474806004, 0.8718150104388049, 0.8620141371681139, 0.8472317101193017, 0.8472298160205192, 0.8252647260334104, 0.8241069415824571, 0.8182412296348575, 0.80419540889448, 0.7962736808597105, 0.8082183482010509, 0.7917279331927538, 0.782961009161552, 0.769537353898241, 0.7777673085336404, 0.7649536046763263, 0.7692073045736133, 0.7531344513646867, 0.7467457152565535, 0.7592033701030538, 0.7461129390111673, 0.7293367336423343, 0.7376732991875722, 0.7231291799245494, 0.7341384031454239, 0.7248502350313285, 0.7238273685319533, 0.71147388598513, 0.7205978273526631, 0.7065254591317808, 0.7136065478983682, 0.7073787833878771, 0.6911590164127509, 0.6960573412518318, 0.6924118823410577, 0.6849554021596878, 0.6860022390633527, 0.6827936310967151], "accuracy": [0.11887465417385101, 0.18293488025665283, 0.24884428083896637, 0.3143574297428131, 0.35702019929885864, 0.389380544424057, 0.4216087758541107, 0.4461762011051178, 0.46849822998046875, 0.4991414546966553, 0.5168405771255493, 0.5391625761985779, 0.5552766919136047, 0.5774666666984558, 0.5906749367713928, 0.6022982597351074, 0.6141856908798218, 0.6275261044502258, 0.6326773166656494, 0.6400739550590515, 0.6450931429862976, 0.6565843224525452, 0.6583014130592346, 0.6728305220603943, 0.6748117804527283, 0.6783780455589294, 0.6793025732040405, 0.6837934255599976, 0.6900013089179993, 0.7042662501335144, 0.6902654767036438, 0.7034738063812256, 0.7058512568473816, 0.7021529674530029, 0.7065116763114929, 0.7123233675956726, 0.7067758440971375, 0.709021270275116, 0.7125874757766724, 0.7173424959182739, 0.7153612375259399, 0.7194558382034302, 0.7205125093460083, 0.7231541275978088, 0.7235503792762756, 0.7193237543106079, 0.7253995537757874, 0.7288337349891663, 0.7214370369911194, 0.7346453666687012, 0.7309470176696777, 0.7341170310974121, 0.7337207794189453, 0.7403249144554138, 0.7320036888122559, 0.737947404384613, 0.7341170310974121, 0.7338528633117676, 0.7471932172775269, 0.7497028112411499, 0.7378153204917908, 0.7461365461349487, 0.7390040755271912, 0.7481178045272827], "val_loss": [1.9466749600001745, 1.9203740528651647, 1.8881370680672782, 1.8450234276907784, 1.7859057017735072, 1.705291816166469, 1.600256817681449, 1.4754344054630824, 1.34296601159232, 1.2149371079036169, 1.1064229352133614, 1.0208190168653215, 0.951416049684797, 0.897287266595023, 0.8529952253614154, 0.8171573877334595, 0.7875281912939889, 0.7645884241376605, 0.743931668145316, 0.724887558392116, 0.7096650430134365, 0.694462503705706, 0.6817874738148281, 0.671300973211016, 0.6621558836528233, 0.6508492231369019, 0.6428602593285697, 0.6352242571966988, 0.6284120764051165, 0.6213744367871966, 0.6165369578770229, 0.6119144133159092, 0.605476873261588, 0.6006344045911517, 0.5961123534611293, 0.5915977954864502, 0.5877176523208618, 0.5842507396425519, 0.5798291308539254, 0.5765293495995658, 0.5718427385602679, 0.568786757332938, 0.5674211978912354, 0.5641768148967198, 0.5588735512324742, 0.5593045779636928, 0.5551556008202689, 0.5506284407206944, 0.5492106676101685, 0.5469105073383876, 0.5454014369419643, 0.5409501791000366, 0.5387558766773769, 0.535707780293056, 0.5339737279074532, 0.533229044505528, 0.5309414182390485, 0.5312419789178031, 0.5263985225132534, 0.5249382768358503, 0.5260121481759208, 0.5245556490761893, 0.5202438150133405, 0.5168114389692035], "val_accuracy": [0.23066666722297668, 0.35600000619888306, 0.4033333361148834, 0.4566666781902313, 0.4869999885559082, 0.5260000228881836, 0.5446666479110718, 0.5633333325386047, 0.5863333344459534, 0.606333315372467, 0.6299999952316284, 0.6526666879653931, 0.6696666479110718, 0.6726666688919067, 0.6800000071525574, 0.6859999895095825, 0.6916666626930237, 0.6949999928474426, 0.699999988079071, 0.7053333520889282, 0.7096666693687439, 0.7123333215713501, 0.715666651725769, 0.7229999899864197, 0.7176666855812073, 0.7266666889190674, 0.7293333411216736, 0.734333336353302, 0.7360000014305115, 0.7353333234786987, 0.7386666536331177, 0.7409999966621399, 0.7423333525657654, 0.7456666827201843, 0.746666669845581, 0.7490000128746033, 0.7516666650772095, 0.749666690826416, 0.7506666779518127, 0.7540000081062317, 0.753333330154419, 0.7553333044052124, 0.7549999952316284, 0.7549999952316284, 0.7583333253860474, 0.7590000033378601, 0.7593333125114441, 0.762666642665863, 0.7639999985694885, 0.765666663646698, 0.7649999856948853, 0.7643333077430725, 0.7699999809265137, 0.7689999938011169, 0.7706666588783264, 0.7726666927337646, 0.7726666927337646, 0.7733333110809326, 0.7746666669845581, 0.7730000019073486, 0.7683333158493042, 0.7680000066757202, 0.7716666460037231, 0.7746666669845581]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 3, 1, 1], [50], [1, 0, 1, 0, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1, 1, 0], [2, 9], [0, 4, 3, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1], [6, 4, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57, 68]], "fitness": -0.49228572845458984, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 2, 1, 2, 3, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.297318635473729, 2.2839209513184953, 2.2706440634432092, 2.254432676144248, 2.240628726919172, 2.223193277882516, 2.203723142112739, 2.179789841088479, 2.154403066024206, 2.120352945905934, 2.088841104708989, 2.050099896087213, 2.033542260580752, 2.028086832532982, 2.064023212497859], "accuracy": [0.10645885765552521, 0.13697001338005066, 0.17091533541679382, 0.21555937826633453, 0.24303261935710907, 0.272090882062912, 0.30405494570732117, 0.32320696115493774, 0.3413023352622986, 0.3579447865486145, 0.36349228024482727, 0.3572843670845032, 0.33179235458374023, 0.29626205563545227, 0.2359001487493515], "val_loss": [1.958897590637207, 1.9464786393301827, 1.9336188861301966, 1.9198673112051827, 1.9046359062194824, 1.8871308735438757, 1.8666043281555176, 1.84346342086792, 1.8164698737008231, 1.7854157856532507, 1.753749166216169, 1.724653925214495, 1.711216994694301, 1.7233176231384277, 1.7664306504385812], "val_accuracy": [0.12300000339746475, 0.22499999403953552, 0.3016666769981384, 0.36766666173934937, 0.38866665959358215, 0.41066667437553406, 0.42100000381469727, 0.4363333284854889, 0.4716666638851166, 0.48366665840148926, 0.47600001096725464, 0.4503333270549774, 0.40433332324028015, 0.30566665530204773, 0.24066667258739471]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [3, 1, 1, 1], [50], [0, 1, 1, 0, 1, 0, 1, 1], [0, 0, 1, 0, 1, 1, 1, 0], [2, 1, 1, 5, 9], [0, 4, 3, 3], [24, 0, 19], [1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [6, 4, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57, 68]], "fitness": -0.25342857837677, "mapping_values": [1, 3, 3, 1, 2, 0, 7, 7, 3, 4, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.subtract(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, grad)))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.979149705367617, 2.7926959440362076, 2.30491611989356, 2.303205923491843, 2.3029471505288166, 2.306109265093286], "accuracy": [0.17051908373832703, 0.16100911796092987, 0.10130762308835983, 0.09774138033390045, 0.09642054885625839, 0.09800554811954498], "val_loss": [1.9490423883710588, 1.9762531689235143, 1.9743009294782365, 1.9736553600856237, 1.973663261958531, 1.9737587656293596], "val_accuracy": [0.3063333332538605, 0.10366666316986084, 0.09833333641290665, 0.10366666316986084, 0.09799999743700027, 0.09833333641290665]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [2, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 2, 4, 2, 4, 3, 1], [3, 4, 3], [8, 0, 19], [0, 0, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57, 68]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12349755316972733, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 0, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [0, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 1, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 2, 1, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha))), tf.math.add(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), alpha)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2848.890550354925, 52199.540365787216, 240512.71069294016, 657085.3102380795, 1413513.2049432043, 2564366.3458591998], "accuracy": [0.09813763201236725, 0.10157178342342377, 0.09576013684272766, 0.09879804402589798, 0.10130762308835983, 0.09959053993225098], "val_loss": [10688.111328125, 82992.62276785714, 277608.3214285714, 655220.25, 1276514.2857142857, 2202174.9285714286], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [3, 1, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 1, 1, 5, 9], [3, 4, 3], [8, 0, 19], [1, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [6, 4, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57, 68]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(grad, tf.math.add(alpha, alpha)), tf.math.square(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07224937528371811, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [2, 0, 1, 1], [50], [0, 1, 1, 0, 0, 0, 0, 0], [1, 0, 1, 0, 1, 1, 1, 0], [2, 7, 1, 5, 9], [0, 4, 3, 3], [39, 0, 19], [1, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [6, 4, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 6, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57, 68]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.3031605895736105, 2.304067591854988, 2.3050873672579573, 2.3046614809153403, 2.304943397674641, 2.3054027706010705, 2.306320816439849, 2.3062489487160907, 2.3064138933400185], "accuracy": [0.09589222073554993, 0.09893012791872025, 0.09813763201236725, 0.1006472036242485, 0.1006472036242485, 0.09800554811954498, 0.09655263274908066, 0.10011887550354004, 0.09734513610601425], "val_loss": [1.9737020220075334, 1.974194049835205, 1.9751641409737724, 1.976048128945487, 1.9765716280255998, 1.9742385319301061, 1.974403245108468, 1.9763286454336983, 1.9775196484157018], "val_accuracy": [0.09833333641290665, 0.09933333098888397, 0.10000000149011612, 0.10199999809265137, 0.10000000149011612, 0.10199999809265137, 0.09933333098888397, 0.10000000149011612, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 1, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [0, 0, 1, 0, 1, 1], [7, 9], [2, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [0, 0, 0, 1, 3, 3], [28, 57, 68]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, alpha)), tf.math.square(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1615.112747107987, 29015.795975700865, 133169.34576426496, 363268.9522767798, 780837.1804005415, 1415874.802469951], "accuracy": [0.09826971590518951, 0.10157178342342377, 0.09589222073554993, 0.09879804402589798, 0.10130762308835983, 0.09959053993225098], "val_loss": [5976.017438616072, 46012.28571428572, 153558.1205357143, 362050.4910714286, 704927.8928571428, 1215628.5714285714], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 3, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1], [0, 0, 0, 0, 1, 1], [9, 9, 7], [3, 4, 3], [8, 0, 19], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 2], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 0, 4, 7], [3, 0, 0, 1, 3, 3], [28, 57, 68]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 1, 0, 1, 3, 2, 1, 1, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(alpha, tf.math.add(alpha, grad)), tf.math.square(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.241047038022227e+29, 643.0792823320902, 163360.8992258701, 41943132.02773742, 10675066199.91441, 2758555172755.798], "accuracy": [0.09813763201236725, 0.09853387624025345, 0.10210011899471283, 0.09813763201236725, 0.10077928751707077, 0.10170386731624603], "val_loss": [14.076596941266741, 3665.0807756696427, 938609.1428571428, 240284534.85714287, 61512840923.42857, 15747287276397.715], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [3, 0, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 1, 1, 5, 9], [0, 4, 3, 3], [25, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [6, 4, 8, 9, 7], [4, 7], [88, 19], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 2, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 1, 3, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 3, 1, 1], [50], [1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 0, 1, 1], [2, 2, 4, 2, 4, 3, 1], [3, 2, 3, 5, 4, 4, 4], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1], [3, 5, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [7, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57, 68]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 3, 1, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302066985972884, 2.302434823610968, 2.3025809317815416, 2.303506889615344, 2.304587596411624, 2.3069440122482687, 2.31157075022001], "accuracy": [0.10949676483869553, 0.10566636174917221, 0.10447761416435242, 0.09708096832036972, 0.10302469879388809, 0.09906221181154251, 0.10170386731624603], "val_loss": [1.9736909866333008, 1.9738379887172155, 1.9740443229675293, 1.9744463648114885, 1.9761489459446497, 1.9789162363324846, 1.9851953642708915], "val_accuracy": [0.09799999743700027, 0.10199999809265137, 0.10066666454076767, 0.10199999809265137, 0.10066666454076767, 0.10199999809265137, 0.10066666454076767]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 1, 6, 7, 8], [0, 3, 1, 1], [50], [0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1], [2, 1, 1, 6, 9], [3, 2, 3, 5, 4, 4, 4], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 1, 0, 1], [3, 5, 8, 9, 7], [4, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 5, 6], [1, 0, 0, 1, 3, 3], [28, 57, 68]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 3, 4, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 12, 7, 5, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.divide_no_nan(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(alpha), tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.divide_no_nan(alpha, sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10527011007070541, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 3, 1, 1], [50], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], [2, 2, 4, 2, 4, 2, 1], [3, 2, 3, 5, 4, 4, 4], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 1, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 4, 7], [1, 0, 0, 1, 3, 3], [99, 57, 68]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 13, 13, 6, 7, 0, 3, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, beta))), tf.math.pow(grad, tf.math.add(beta, tf.math.add(grad, grad)))), tf.math.add(beta, grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(alpha, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.30265474013995, 2.3035190522694364, 2.3047765032521736, 2.3053980112359227, 2.3094316463838274, 2.3179098633317867], "accuracy": [0.09642054885625839, 0.10130762308835983, 0.1002509593963623, 0.09826971590518951, 0.09879804402589798, 0.09998679161071777], "val_loss": [1.973837103162493, 1.974430969783238, 1.9757825987679618, 1.9776833398001534, 1.9827489171709334, 1.99418728692191], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 0, 1, 0, 1], [7, 1, 8, 7, 8], [1, 3, 1, 1], [50], [0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1], [2, 5, 4, 2, 4, 3, 1], [0, 4, 3, 4, 0, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 5, 3], [1, 0, 0, 0, 3, 3], [28, 57, 60]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 0, 12, 12, 6, 6, 2, 3, 1, 1, 0, 0, 9, 5, 4, 3], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.square(tf.math.pow(tf.math.add(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.math.pow(grad, tf.math.add(beta, tf.math.multiply(grad, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(alpha), tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08928807079792023, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 3, 0, 1], [50], [1, 1, 1, 0, 0, 0, 1], [0, 1, 1, 0, 1, 1], [7, 9], [1, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3022048907619443, 3697.2827279490566, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10645885765552521, 0.09998679161071777, 0.10210011899471283, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.979372297014509, 10401346121.142857, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1], [6, 1, 5, 7, 8], [1, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [2, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 8, 4, 4, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.divide_no_nan(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [1228709341.1423085, 23906160803.926563, 111747324323.55461, 307125996819.78076, 662825746347.6022, 1204961426982.0737], "accuracy": [0.09787346422672272, 0.10130762308835983, 0.09576013684272766, 0.09879804402589798, 0.10130762308835983, 0.09959053993225098], "val_loss": [4797446582.857142, 38368167058.28571, 129480182052.57143, 306902485284.5714, 599399783277.7142, 1035744238445.7142], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 3, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1], [2, 4, 4, 2, 4, 1, 1], [3, 2, 1, 5, 5, 4, 2], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 1, 0, 1], [1, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 2, 0], [1, 0, 0, 1, 3, 3], [28, 57, 68]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 11, 11, 5, 6, 0, 1, 0, 0, 0, 0, 12, 7, 5, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.pow(tf.math.pow(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, beta))), tf.math.pow(alpha, grad)), grad), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(alpha), tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.negative(alpha), sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07370228320360184, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 3, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1], [8, 9], [3, 4, 3], [78, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [4, 3, 0, 4, 7], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 6, 6, 3, 3, 0, 2, 2, 2, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3036011580415705, 2.303178106773295, 2.303213344352782, 2.301283223045469, 2.302875694770697, 2.3023947253596937], "accuracy": [0.09166556596755981, 0.08757099509239197, 0.08915598690509796, 0.09602430462837219, 0.09008057415485382, 0.09047681838274002], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 2, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1], [1, 0, 0, 0, 1, 1], [8, 9], [0, 4, 3, 3], [8, 0, 19], [0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [3, 5, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [4, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 4, 2, 2, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.square(sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3036011580415705, 2.303178106773295, 2.303213344352782, 2.301283223045469, 2.302875694770697, 2.3023947253596937], "accuracy": [0.09166556596755981, 0.08757099509239197, 0.08915598690509796, 0.09602430462837219, 0.09008057415485382, 0.09047681838274002], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 3, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 0, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 2], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 4, 7, 5, 4], [1, 0, 0, 1, 3, 3], [39, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 13, 7, 6, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.square(alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(alpha), tf.math.pow(tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.pow(alpha, sigma)))), sigma)", "other_info": {"loss": [2.3036011580415705, 2.303178106773295, 2.303213344352782, 2.301283223045469, 2.302875694770697, 2.3023947253596937], "accuracy": [0.09166556596755981, 0.08757099509239197, 0.08915598690509796, 0.09602430462837219, 0.09008057415485382, 0.09047681838274002], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]