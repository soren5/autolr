[{"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 0, 0, 1], [0, 1, 0], [1, 8], [7], [], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7934285998344421, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 2, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.sqrt(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.291247457576828, 2.264908026238128, 2.233169113404054, 2.195084583238131, 2.1406313820663714, 2.0707288512369866, 1.9736183703362966, 1.8509922328957036, 1.7233105567720006, 1.5923588739929733, 1.4744739671503595, 1.3837617698079165, 1.3073796668718394, 1.2338825846077381, 1.1880121536856991, 1.143969982732572, 1.101010015013668, 1.0604473021933905, 1.032884964837752, 1.0021181973987772, 0.9810732563709335, 0.9725702558258473, 0.948551026152393, 0.9319515285585157, 0.9232135638506059, 0.9001662436729535, 0.8893563679464112, 0.8700937797144309, 0.8618971697327766, 0.8504749221210356, 0.8458326776439267, 0.8223378020680072, 0.8238075989474553, 0.811451348591128, 0.8104562580294188, 0.7905254543118898, 0.7831622612411793, 0.7854636100934812, 0.7806972351450222, 0.7719936878878632, 0.7684147992012539, 0.7681290047075203, 0.7638643075052804, 0.7466206369052364, 0.7493869405003146, 0.7546012066122626, 0.7346315182211093, 0.7473458348405737, 0.7279071623245171, 0.735116773797316, 0.7295294874269634, 0.7231117001519526, 0.720022870982249, 0.7188818696514805, 0.705029441640834, 0.7054350898801501, 0.7018498090028038, 0.7115590476703177, 0.7014019674455579, 0.6893043757398225, 0.6945594540597771, 0.6900936498885708, 0.6905373783946714, 0.6906293892290425, 0.6768437567608719, 0.6783559737172755, 0.6736234958618073, 0.6782070926671424, 0.6753540893886477, 0.6616162818971799, 0.6655922335105219, 0.6619079378790875, 0.6714841438212085, 0.6659775090460072, 0.6621406665567583, 0.6543640743204474, 0.6512220095350537, 0.649403788244814, 0.6479327458636857], "accuracy": [0.12336547672748566, 0.18821820616722107, 0.2620525658130646, 0.3039228618144989, 0.35107648372650146, 0.383700966835022, 0.4235900044441223, 0.44749704003334045, 0.47946110367774963, 0.4904239773750305, 0.5173689126968384, 0.5394267439842224, 0.5581825375556946, 0.5791836977005005, 0.587372899055481, 0.5988640785217285, 0.6127327680587769, 0.6268656849861145, 0.6346585750579834, 0.6458855867385864, 0.6520935297012329, 0.6547351479530334, 0.656980574131012, 0.6671509742736816, 0.6695284843444824, 0.6778497099876404, 0.6794346570968628, 0.6884163022041321, 0.6913221478462219, 0.6966054439544678, 0.6973979473114014, 0.7045304179191589, 0.7024171352386475, 0.7086250185966492, 0.7096816897392273, 0.7135120630264282, 0.7113987803459167, 0.7143045663833618, 0.7123233675956726, 0.7100779414176941, 0.7224937081336975, 0.7177387475967407, 0.7181349992752075, 0.7215691208839417, 0.7256637215614319, 0.7223616242408752, 0.7300224304199219, 0.7248712182044983, 0.7306828498840332, 0.72672039270401, 0.7314753532409668, 0.7293620109558105, 0.7351737022399902, 0.733060359954834, 0.7388719916343689, 0.737947404384613, 0.7457403540611267, 0.7351737022399902, 0.7364945411682129, 0.7446836829185486, 0.7429665923118591, 0.7390040755271912, 0.7457403540611267, 0.7420420050621033, 0.7449478507041931, 0.7470611333847046, 0.7450799345970154, 0.7512878179550171, 0.7499669790267944, 0.7479857206344604, 0.750759482383728, 0.752740740776062, 0.7469290494918823, 0.7511557340621948, 0.7548540234565735, 0.7553823590278625, 0.7567031979560852, 0.7589486241340637, 0.7555144429206848], "val_loss": [1.9466427394321986, 1.9203174454825265, 1.8876653398786272, 1.8438993181501115, 1.783111504146031, 1.7018133912767683, 1.5968857833317347, 1.4706697804587228, 1.338608912059239, 1.2126172270093645, 1.103506326675415, 1.0163015978676933, 0.9493822029658726, 0.8942226341792515, 0.851446305002485, 0.816778336252485, 0.7873659985406058, 0.7639824833188739, 0.7418527943747384, 0.7223811660494123, 0.7053518465587071, 0.6924305473055158, 0.6803133487701416, 0.6714099645614624, 0.6619645868028913, 0.6514352900641305, 0.6439331259046283, 0.6351474693843296, 0.6294611181531634, 0.6208168268203735, 0.6148138727460589, 0.6093147141592843, 0.603609561920166, 0.601190481867109, 0.5949761356626239, 0.5913284335817609, 0.5874042510986328, 0.5805857351848057, 0.5771692139761788, 0.5755952256066459, 0.5715116432734898, 0.5701195342200143, 0.5668157509395054, 0.5631839207240513, 0.5603412049157279, 0.5568600211824689, 0.5538886274610247, 0.5508230584008353, 0.5476957900183541, 0.544526491846357, 0.542920640536717, 0.5431644746235439, 0.5388637610844204, 0.5362907477787563, 0.5334331308092389, 0.5327927385057721, 0.529606546674456, 0.5290760483060565, 0.5266994748796735, 0.5260383231299264, 0.5223784787314278, 0.522057124546596, 0.5201907328196934, 0.5176431110927037, 0.5152378593172345, 0.5133810213633946, 0.511685984475272, 0.5126375470842633, 0.5097416298730033, 0.5088781799588885, 0.5075804506029401, 0.5050173827580043, 0.5073696374893188, 0.5038666384560722, 0.5031287329537528, 0.5006287779126849, 0.5006359985896519, 0.4973294053758894, 0.4966575929096767], "val_accuracy": [0.2370000034570694, 0.35866665840148926, 0.4076666533946991, 0.4519999921321869, 0.4950000047683716, 0.5270000100135803, 0.5493333339691162, 0.5703333616256714, 0.5863333344459534, 0.6133333444595337, 0.6389999985694885, 0.6603333353996277, 0.6646666526794434, 0.6726666688919067, 0.6806666851043701, 0.6869999766349792, 0.6880000233650208, 0.6976666450500488, 0.6959999799728394, 0.7106666564941406, 0.7113333344459534, 0.7173333168029785, 0.721666693687439, 0.7229999899864197, 0.7269999980926514, 0.7283333539962769, 0.7223333120346069, 0.731333315372467, 0.734666645526886, 0.737333357334137, 0.7366666793823242, 0.7403333187103271, 0.7423333525657654, 0.7423333525657654, 0.7453333139419556, 0.7396666407585144, 0.7440000176429749, 0.750333309173584, 0.7546666860580444, 0.753333330154419, 0.7506666779518127, 0.7586666941642761, 0.7546666860580444, 0.7536666393280029, 0.7599999904632568, 0.7633333206176758, 0.7643333077430725, 0.7649999856948853, 0.762666642665863, 0.7633333206176758, 0.7646666765213013, 0.7646666765213013, 0.7663333415985107, 0.7689999938011169, 0.7670000195503235, 0.7696666717529297, 0.7720000147819519, 0.7693333625793457, 0.7696666717529297, 0.7743333578109741, 0.7726666927337646, 0.7739999890327454, 0.7726666927337646, 0.7766666412353516, 0.7730000019073486, 0.7746666669845581, 0.7776666879653931, 0.7746666669845581, 0.7789999842643738, 0.7760000228881836, 0.7793333530426025, 0.7820000052452087, 0.7789999842643738, 0.784333348274231, 0.778333306312561, 0.778333306312561, 0.778333306312561, 0.7839999794960022, 0.7836666703224182]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [0, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [1, 0, 0, 1], [0, 1, 0], [1], [7], [], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.24171428382396698, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.8746822009768707, 2.372076645944223, 2.303324888127591, 2.4812889811448167, 2.457317140549244, 2.305398420650788], "accuracy": [0.201294407248497, 0.1080438494682312, 0.09734513610601425, 0.1640470176935196, 0.1002509593963623, 0.09998679161071777], "val_loss": [2.2381135395595004, 1.9747870990208216, 1.9725206920078822, 2.656947340284075, 1.977238723209926, 1.9744958196367537], "val_accuracy": [0.23133333027362823, 0.09833333641290665, 0.09833333641290665, 0.09933333098888397, 0.09966666996479034, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [1, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [1, 0, 0, 1], [0, 1, 0], [1, 6], [7], [], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.24057142436504364, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.874602908707723, 2.3720648159928497, 2.3034183781585673, 2.294753825770015, 2.3079508999162077, 2.300904060320186], "accuracy": [0.201294407248497, 0.1088363528251648, 0.09853387624025345, 0.14093250036239624, 0.10038304328918457, 0.11847840249538422], "val_loss": [2.237051146371024, 1.974806240626744, 1.9729163306100028, 1.9891084262302943, 1.9736691883632116, 1.9588008608136858], "val_accuracy": [0.23199999332427979, 0.09833333641290665, 0.09833333641290665, 0.09966666996479034, 0.09966666996479034, 0.18700000643730164]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [3, 2, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [8, 9], [1, 4, 3], [8, 0, 19], [0, 0, 0, 1, 1], [1, 1, 0], [1, 2], [7], [], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 6, 3], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.11114285886287689, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 13, 7, 6, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(beta), tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(alpha, sigma), sigma))))", "other_info": {"loss": [3.4666158991120732, 2.3292625610145987, 2.3301703639868747, 2.330546201637408, 2.317877730358357, 2.3161129069728243, 2.3137894879715115, 2.31275039011414, 2.3129957733121547, 2.3104740244727235, 2.3384031026654033, 2.350642004946456, NaN, NaN, NaN, NaN], "accuracy": [0.1698586642742157, 0.10249637067317963, 0.09985470771789551, 0.09826971590518951, 0.10117553919553757, 0.09642054885625839, 0.09734513610601425, 0.10249637067317963, 0.09919429570436478, 0.09972262382507324, 0.10328886657953262, 0.10434553027153015, 0.09998679161071777, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.0125835282461986, 1.9968548502240862, 1.9821787561689104, 1.9775146075657435, 1.9893364906311035, 1.989927019391741, 1.9822049140930176, 1.9783327238900321, 1.9819058690752303, 1.9836111068725586, 2.058236871446882, 44.34751565115793, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09966666996479034, 0.09933333098888397, 0.09799999743700027, 0.09966666996479034, 0.1003333330154419, 0.09966666996479034, 0.10366666316986084, 0.1003333330154419, 0.09966666996479034, 0.11500000208616257, 0.10233332961797714, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [3, 2, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1], [1, 1, 0], [3], [7], [], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 5, 9], [3, 0, 0, 1, 3, 3], [28, 57, 77]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 10, 7, 3, 3], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08374059200286865, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [1, 2, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 6, 0], [3, 4, 3], [8, 0, 19], [0, 1, 0, 1, 1], [1, 1, 0], [1, 8], [7], [], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 3, 0, 1, 3, 3], [28, 2, 22]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, sigma))", "other_info": {"loss": [2.3038523855966395, 2.324979716508679, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08875974267721176, 0.07660810649394989, 0.09285431355237961, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9773825917925154, 2.0232464926583424, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.02266666665673256, 0.09933333098888397, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 0, 0, 1], [0, 1, 0], [1, 8], [7], [], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [0, 0, 0, 1, 3, 3], [53, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 2, 1, 0, 4, 2, 2, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.sqrt(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [203345541.4060439, 3937331289.8079515, 18336826845.848633, 50806593468.644035, 109768517182.14873, 201418658733.90146], "accuracy": [0.1010434553027153, 0.09945846349000931, 0.1026284471154213, 0.1006472036242485, 0.09932637959718704, 0.09972262382507324], "val_loss": [794565577.1428572, 6353057353.142858, 21437722624.0, 50810887021.71429, 99234557366.85715, 171471344201.14285], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 0, 1], [1, 3, 6], [7, 1], [], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 6, 3], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 5, 3, 2, 0, 13, 7, 6, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, alpha))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.multiply(alpha, sigma), sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08796724677085876, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 1, 1], [2, 6, 0], [3, 4, 3], [8, 0, 19], [1, 0, 0, 1], [0, 1], [1, 4, 2, 1, 5, 5], [7], [], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 7, 9], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0870426595211029, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1], [8, 9], [3, 4, 3], [8, 0, 19], [0, 0, 0, 1], [0, 1, 0], [1, 8], [7], [], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 2, 4], [2, 2, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 2, 0, 1, 4, 3, 2, 1, 0, 13, 7, 6, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.sqrt(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(beta), tf.math.pow(tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.pow(alpha, sigma), sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10289261490106583, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [8, 9], [1, 4, 3], [8, 0, 19], [1, 0, 0, 1], [0, 1], [1, 8], [2, 2], [], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.347167225026373, 30.40116876756605, 7.412895584168756e+28, 2.3889129497529082, 2.6292827117082513, 3.280477157909447, 4.698894366706603], "accuracy": [0.05005943775177002, 0.037643641233444214, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.1453631264822826, 47586.806919642855, 2.008157253265381, 2.133558886391776, 2.4961754935128346, 3.403294358934675, 5.074628421238491], "val_accuracy": [0.0033333334140479565, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 0, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [2, 4, 3], [8, 0, 19], [0, 1, 0, 0, 1], [0, 1], [1, 2], [1, 2, 7], [72], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 6, 0, 4, 7], [0, 0, 0, 1, 3, 3], [28, 57, 67]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 8, 4, 4, 3], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.divide_no_nan(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10540219396352768, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [3, 2, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [8, 9], [1, 4, 3], [8, 0, 19], [1, 0, 0, 1], [0, 1], [1, 2], [2, 2], [], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 9, 0, 4, 7], [2, 2, 0, 1, 3, 3], [64, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 2, 0, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(9.49275639e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [1050028761.8147085, 20339507888.707966, 94735611612.66518, 262501839496.6731, 567157953683.2904, 1040719848238.7637], "accuracy": [0.1010434553027153, 0.09945846349000931, 0.1026284471154213, 0.1006472036242485, 0.09932637959718704, 0.09972262382507324], "val_loss": [4103946971.428571, 32821262043.42857, 110759446820.57143, 262527853714.2857, 512736605915.4286, 885995077632.0], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 1, 0, 0, 1], [1, 1], [1, 2], [7], [], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [7, 6, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3055950514849197, 363.5347269663107, 1193904993.3791234, 3698614432507021.5, 1.243634914522928e+22, 4.239778386875808e+28], "accuracy": [0.10447761416435242, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.0265329905918668, 20226.796875, 67240476672.0, 2.084368539103864e+17, 6.998205945198987e+23, 2.385820545175659e+30], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [3, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 0, 0, 1], [1, 1, 1], [1, 8], [7, 2], [82], [1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0870426595211029, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [0, 2, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [8, 9], [2, 4, 3], [8, 0, 19], [0, 0, 0, 1, 1], [0, 1, 0], [1, 2], [7], [], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [3, 1, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 4, 2, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.add(sigma, sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08228767663240433, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1], [2, 6, 0], [3, 4, 3], [8, 0, 19], [0, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0], [1, 4, 2, 1, 5, 5], [7], [], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 2, 22]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 6, 6, 3, 3, 0, 7, 4, 3, 1, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad)))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.add(sigma, sigma)), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [37.87333197512442, 77.7252009727731, 676.2951139466575, 787.4631595326894, 780.5332401219202, 785.1191528833239], "accuracy": [0.10051512718200684, 0.10157178342342377, 0.09576013684272766, 0.09893012791872025, 0.10038304328918457, 0.10170386731624603], "val_loss": [2.4037087304251537, 98.93319266183036, 1205.6412527901787, 1213.5067313058037, 1220.2339913504463, 1225.835972377232], "val_accuracy": [0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [1, 0, 0, 1], [0, 1, 0], [1, 8], [7], [], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 9, 0, 4, 7], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 2, 0, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2846.093607164755, 51918.621744361706, 238379.61437145027, 656542.1082172104, 1413909.5270274733, 2589212.191883503], "accuracy": [0.1006472036242485, 0.09919429570436478, 0.1026284471154213, 0.10038304328918457, 0.09932637959718704, 0.09972262382507324], "val_loss": [10688.111328125, 82992.62276785714, 277608.3214285714, 655220.25, 1276514.2857142857, 2202174.9285714286], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1], [2, 9], [2, 4, 3], [8, 0, 19], [1, 0, 0, 1], [0, 1, 0], [1, 8], [7], [], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 3, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, sigma))", "other_info": {"loss": [2.302134487056115, 2.3024956309611158, 2.3017365751391186, 2.3028011478216985, 2.30266422747369, 2.3038820306528294], "accuracy": [0.09325055778026581, 0.08809932321310043, 0.09060890227556229, 0.09338264167308807, 0.08942015469074249, 0.08955223858356476], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [5, 4, 3], [8, 0, 19], [0, 1, 1, 1], [0, 0, 0], [1, 8], [7], [], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [3, 0, 0, 1, 3, 3], [53, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302134487056115, 2.3024956309611158, 2.3017365751391186, 2.3028011478216985, 2.30266422747369, 2.3038820306528294], "accuracy": [0.09325055778026581, 0.08809932321310043, 0.09060890227556229, 0.09338264167308807, 0.08942015469074249, 0.08955223858356476], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]