[{"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7914285659790039, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 2, 1, 1, 4, 2, 2, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2919868906459726, 2.265326173880853, 2.236472986283288, 2.193987454090766, 2.1431236751421867, 2.0676347672459063, 1.972441386364045, 1.8594675655803345, 1.72474931667604, 1.6055586787420193, 1.4794156816200636, 1.3798435833853753, 1.3100252335711777, 1.237973172981757, 1.1891965058186522, 1.1460843027984273, 1.1044615494371988, 1.0605966332188341, 1.0245465140584564, 1.0057574444994273, 0.9798206134306017, 0.9559528290036647, 0.9315278383451383, 0.9296028092001659, 0.9061246415202361, 0.8952279419175323, 0.8860865163686584, 0.8685988134648805, 0.8621242795055412, 0.8559801810925521, 0.8462612849373969, 0.8365416215663068, 0.8227395493325115, 0.8223922983876718, 0.8120199253829621, 0.7935305241076639, 0.7912022848611715, 0.7936760613537578, 0.7878915926390131, 0.7745659403545258, 0.7739232739972685, 0.7580765708247669, 0.7639119738380529, 0.7598062324061008, 0.7495152440840747, 0.751419419405278, 0.739162861741907, 0.7402719687854987, 0.7383540349235908, 0.726106380380266, 0.723566259627392, 0.713278599836256, 0.7275399780465532, 0.7143448835996321, 0.7089977516332527, 0.7106943946189538, 0.7011845233717205, 0.7008050484601234, 0.6948701138934754, 0.6983935496338197, 0.6871071353312639, 0.6908480162397588, 0.6874292573641005, 0.6819389402244416, 0.6868618411268965, 0.6791191141855101, 0.6824405017372734, 0.6662894813864223, 0.6738326623219036, 0.6662206302906591, 0.6726409850528668, 0.6624167326293082, 0.6642104514192171, 0.6580620829093222], "accuracy": [0.11491216719150543, 0.189274862408638, 0.2479196935892105, 0.3179236650466919, 0.3572843670845032, 0.38766345381736755, 0.41751420497894287, 0.4419495463371277, 0.46453574299812317, 0.49425438046455383, 0.5151234865188599, 0.542728841304779, 0.5624092221260071, 0.5703341960906982, 0.5949016213417053, 0.5999207496643066, 0.6126006841659546, 0.6222427487373352, 0.6419231295585632, 0.6449610590934753, 0.6571126580238342, 0.6597543358802795, 0.6686038970947266, 0.6647734642028809, 0.6715096831321716, 0.6831330060958862, 0.683529257774353, 0.6853784322738647, 0.6925109028816223, 0.6909258961677551, 0.687887966632843, 0.7017567157745361, 0.7040021419525146, 0.7010962963104248, 0.7036058902740479, 0.7144366502761841, 0.7141724824905396, 0.7084929347038269, 0.7124554514884949, 0.7164179086685181, 0.717870831489563, 0.7234182953834534, 0.7202483415603638, 0.7197200059890747, 0.724739134311676, 0.7264562249183655, 0.7293620109558105, 0.7260599732398987, 0.7318716049194336, 0.7317395210266113, 0.7301545143127441, 0.7346453666687012, 0.7298903465270996, 0.7347774505615234, 0.7400607466697693, 0.7358341217041016, 0.7420420050621033, 0.744419515132904, 0.7407211661338806, 0.7384757399559021, 0.748249888420105, 0.7423061728477478, 0.7464007139205933, 0.7403249144554138, 0.7441553473472595, 0.7486461400985718, 0.7448157668113708, 0.7506273984909058, 0.7466648817062378, 0.7481178045272827, 0.7490423917770386, 0.7532690763473511, 0.757099449634552, 0.7512878179550171], "val_loss": [1.9468345642089844, 1.9206691469464983, 1.888465063912528, 1.8443866457257951, 1.7843061174665178, 1.7026119572775704, 1.5972111565726144, 1.4738553592136927, 1.3411352634429932, 1.2156920092446464, 1.1069533143724715, 1.0185528482709612, 0.9509568895612445, 0.8973398549216134, 0.8532010998044696, 0.8185278858457293, 0.7884548221315656, 0.7630050693239484, 0.7401039600372314, 0.7234633139201573, 0.7060344730104718, 0.6939610072544643, 0.6801702976226807, 0.6705155372619629, 0.659963880266462, 0.6519741160529, 0.6428227084023612, 0.6355827876499721, 0.6293579169682094, 0.6248456750597272, 0.6174275875091553, 0.6127594198499408, 0.6057343482971191, 0.6013332264763969, 0.5960946934563773, 0.5920537539890834, 0.5870032480784825, 0.5837260995592389, 0.5816555193492344, 0.5752202102116176, 0.5727909462792533, 0.5680216380528041, 0.5649236270359584, 0.5622926780155727, 0.5590373618262154, 0.5559556484222412, 0.553551435470581, 0.5526382752827236, 0.5495478085109166, 0.5449857371194022, 0.5451500245503017, 0.5410904373441424, 0.539262226649693, 0.5379022189549038, 0.5362733772822789, 0.5314982448305402, 0.5317776373454502, 0.5282976116452899, 0.5281951427459717, 0.524331910269601, 0.5236836501530239, 0.5212458542415074, 0.5199106591088432, 0.5197374309812274, 0.5160837854657855, 0.5159954854420253, 0.5125500304358346, 0.5111876726150513, 0.5095827920096261, 0.5099229982921055, 0.507125837462289, 0.5062131370816912, 0.5055385657719204, 0.5048047644751412], "val_accuracy": [0.23766666650772095, 0.3616666793823242, 0.414000004529953, 0.4490000009536743, 0.49433332681655884, 0.5363333225250244, 0.5516666769981384, 0.5770000219345093, 0.5876666903495789, 0.6169999837875366, 0.640999972820282, 0.6583333611488342, 0.6636666655540466, 0.6706666946411133, 0.6803333163261414, 0.6903333067893982, 0.6899999976158142, 0.6956666707992554, 0.7003333568572998, 0.7086666822433472, 0.7146666646003723, 0.718666672706604, 0.7203333377838135, 0.7233333587646484, 0.7213333249092102, 0.7253333330154419, 0.7269999980926514, 0.7319999933242798, 0.7269999980926514, 0.7400000095367432, 0.7390000224113464, 0.7426666617393494, 0.7393333315849304, 0.7440000176429749, 0.746666669845581, 0.746999979019165, 0.7440000176429749, 0.7490000128746033, 0.750333309173584, 0.7546666860580444, 0.7573333382606506, 0.7566666603088379, 0.7596666812896729, 0.7549999952316284, 0.7590000033378601, 0.762333333492279, 0.7616666555404663, 0.7599999904632568, 0.7646666765213013, 0.7643333077430725, 0.7613333463668823, 0.7639999985694885, 0.7696666717529297, 0.768666684627533, 0.7646666765213013, 0.7706666588783264, 0.765333354473114, 0.7736666798591614, 0.7716666460037231, 0.7743333578109741, 0.7710000276565552, 0.7736666798591614, 0.7749999761581421, 0.7739999890327454, 0.7723333239555359, 0.7776666879653931, 0.7739999890327454, 0.781000018119812, 0.7820000052452087, 0.7786666750907898, 0.7766666412353516, 0.7816666960716248, 0.777999997138977, 0.778333306312561]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 0, 1, 0, 1, 1, 0, 0], [4, 1, 5, 7, 8], [1, 2, 0, 1], [43], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [6, 9], [3, 4, 3], [8, 0, 19], [0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 1, 1], [1, 8, 3, 9, 4], [7, 7], [88, 19], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 0, 4, 7, 2, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7768571376800537, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0, 0, 6, 3, 3, 2], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.sqrt(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(tf.math.negative(beta), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.293910626989739, 2.272212370747919, 2.250358438857117, 2.219385208691179, 2.1865357952095246, 2.139222760100359, 2.080657858339047, 2.009983771670181, 1.9168872066760312, 1.8217851550052226, 1.705736405514707, 1.5978418918979198, 1.5066207256834852, 1.4172652661288656, 1.3504859379427134, 1.2929146861230156, 1.2393326516700003, 1.186813164695757, 1.1428592521217538, 1.1166549449929977, 1.0829507793181639, 1.053170670843899, 1.0219077340222273, 1.0135506826731286, 0.9851716175653742, 0.9720361267004062, 0.9590866365972496, 0.9370822154330918, 0.9275338249892418, 0.9214235940361855, 0.9076926438500774, 0.8964925387972901, 0.8801984819029427, 0.8782537536315, 0.865849821456687, 0.8455504367553389, 0.8432833460485458, 0.8441768591241152, 0.8377820228730463, 0.821918359246504, 0.8204388183105765, 0.8040446556633206, 0.8090253227091799, 0.8036116040173366, 0.7921616189657122, 0.7945048112706139, 0.7804430047865195, 0.7836201231493186, 0.778397178471978, 0.7658936660507997, 0.7651784360023017, 0.7537075580071779, 0.7666633994886982, 0.7516154599715659, 0.7472011152747883, 0.7493631845735492, 0.7385666704826571, 0.7375990942075283, 0.7321989225075308, 0.7350593092198763, 0.7240876356891873, 0.7278699202465737, 0.7236433089401397, 0.7184015062302174, 0.7225530074335849], "accuracy": [0.10989301651716232, 0.17078325152397156, 0.2172764539718628, 0.28278958797454834, 0.32505613565444946, 0.3555673062801361, 0.383700966835022, 0.41011756658554077, 0.4266279339790344, 0.4542332589626312, 0.47325319051742554, 0.4979526996612549, 0.5156518220901489, 0.5330867767333984, 0.5477479696273804, 0.5666358470916748, 0.5773345828056335, 0.5876370072364807, 0.604939877986908, 0.6089023947715759, 0.6222427487373352, 0.6317527294158936, 0.6384889483451843, 0.6394135355949402, 0.6498481035232544, 0.6580372452735901, 0.6579051613807678, 0.6641130447387695, 0.6741513609886169, 0.6716417670249939, 0.6667547225952148, 0.6823405027389526, 0.6868313550949097, 0.6848500967025757, 0.6865671873092651, 0.6964733600616455, 0.698718786239624, 0.6968696117401123, 0.698190450668335, 0.7000396251678467, 0.7025492191314697, 0.7104741930961609, 0.7047945857048035, 0.7077004313468933, 0.7103421092033386, 0.7111346125602722, 0.7152291536331177, 0.7156254053115845, 0.7195879220962524, 0.7191916704177856, 0.7191916704177856, 0.722229540348053, 0.717870831489563, 0.722757875919342, 0.7268524765968323, 0.724210798740387, 0.7302865982055664, 0.7301545143127441, 0.7294940948486328, 0.7251353859901428, 0.7354378700256348, 0.733588695526123, 0.7339849472045898, 0.7281733155250549, 0.7343811988830566], "val_loss": [1.9511827741350447, 1.9304827281406947, 1.9067557879856654, 1.876875877380371, 1.838738305228097, 1.7887481961931502, 1.7247251101902552, 1.6455298491886683, 1.5502766881670271, 1.4461455685751778, 1.3367679119110107, 1.2306891509464808, 1.1383185046059745, 1.0601485116141183, 0.9953817640032087, 0.9429278033120292, 0.8993399483816964, 0.8621934822627476, 0.8296597003936768, 0.8042227029800415, 0.7802697931017194, 0.7613696541104998, 0.7423615625926426, 0.7281609773635864, 0.7142159938812256, 0.7022722959518433, 0.6910293442862374, 0.6812347343989781, 0.6728165830884661, 0.6662378651755196, 0.6577445949826922, 0.6516766718455723, 0.643915023122515, 0.6378230197089059, 0.631615264075143, 0.6257558209555489, 0.6202231134687152, 0.6159121990203857, 0.6126597438539777, 0.605884347643171, 0.6031151669366019, 0.5980099439620972, 0.5942076614924839, 0.5911155428205218, 0.5869964531489781, 0.5835039956229073, 0.5807655368532453, 0.5790368829454694, 0.5753759316035679, 0.5710626329694476, 0.5697529656546456, 0.5664478540420532, 0.5646576881408691, 0.5621733154569354, 0.5600363867623466, 0.5556555816105434, 0.5549929482596261, 0.5517069612230573, 0.5510074751717704, 0.5473767178399223, 0.5458563055310931, 0.5435210636683873, 0.541639872959682, 0.5410069567816598, 0.5380749361855643], "val_accuracy": [0.19833333790302277, 0.34200000762939453, 0.3843333423137665, 0.4246666729450226, 0.4516666531562805, 0.4946666657924652, 0.518666684627533, 0.5479999780654907, 0.5606666803359985, 0.5773333311080933, 0.5896666646003723, 0.6116666793823242, 0.6349999904632568, 0.6470000147819519, 0.6573333144187927, 0.6679999828338623, 0.6693333387374878, 0.6790000200271606, 0.6869999766349792, 0.6903333067893982, 0.6936666369438171, 0.6996666789054871, 0.70333331823349, 0.7056666612625122, 0.7073333263397217, 0.7103333473205566, 0.7176666855812073, 0.7179999947547913, 0.7126666903495789, 0.7226666808128357, 0.7263333201408386, 0.7286666631698608, 0.731333315372467, 0.7286666631698608, 0.7350000143051147, 0.734666645526886, 0.7350000143051147, 0.737333357334137, 0.7400000095367432, 0.7413333058357239, 0.7426666617393494, 0.7459999918937683, 0.746666669845581, 0.7453333139419556, 0.7459999918937683, 0.7509999871253967, 0.7523333430290222, 0.7476666569709778, 0.753333330154419, 0.7540000081062317, 0.753333330154419, 0.753000020980835, 0.7580000162124634, 0.7566666603088379, 0.7536666393280029, 0.7596666812896729, 0.7566666603088379, 0.7609999775886536, 0.7630000114440918, 0.7680000066757202, 0.765666663646698, 0.7670000195503235, 0.7676666378974915, 0.765999972820282, 0.7680000066757202]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 1, 1], [2, 9], [5, 4, 3], [8, 0, 19], [1, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 1], [28, 57]], "fitness": -0.19599999487400055, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.546880904284482, 3.2039472333129373, 3.6531483022339386, 4.630435254516823, 23.86625148031013, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1678774207830429, 0.136045441031456, 0.13432836532592773, 0.12217672914266586, 0.1274600476026535, 0.10949676483869553, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.3751211166381836, 2.7270165852137973, 3.1742772374834334, 5.490589686802456, 195.90931919642858, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.19366666674613953, 0.20266667008399963, 0.20366667211055756, 0.13733333349227905, 0.24133333563804626, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1], [1, 1, 5, 7, 8], [1, 2, 1, 1], [61], [0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1], [2, 9], [4, 4, 3], [8, 0, 19], [1, 0, 0, 0, 1, 1, 0], [1, 0, 0, 1, 1, 1], [2, 0, 8, 9, 7], [4, 2], [88, 19], [0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 0, 0, 2, 2, 0], [28, 57, 68]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, grad)), tf.math.square(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.2830423912304805, 2.30659967655393, 2.303089309913324, 2.3029626873836637, 2.303011183851446, 2.302943204419488], "accuracy": [0.21780477464199066, 0.09642054885625839, 0.0952318087220192, 0.0956280529499054, 0.09008057415485382, 0.0956280529499054], "val_loss": [1.973407472882952, 1.973837443760463, 1.973679746900286, 1.973708152770996, 1.973656109401158, 1.9737227303641183], "val_accuracy": [0.10366666316986084, 0.09833333641290665, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.09799999743700027]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [9, 1, 5, 7, 8], [1, 2, 1, 1], [50], [0, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1], [0, 9], [3, 4, 3], [8, 0, 19], [0, 0, 0, 1, 0, 1], [1, 0, 1, 0, 0, 1], [2, 8, 8, 9, 7], [5, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [18, 57, 81]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 1, 0, 1, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302713311438106, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09787346422672272, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1], [4, 1, 5, 7, 8], [1, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [2, 9], [4, 4, 3], [8, 0, 19], [0, 0, 0, 1, 0, 1, 0], [0, 1, 0, 1, 0, 1], [2, 3, 8, 9, 7], [2, 0], [90, 19], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 6, 2, 9], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 5, 4, 2, 2, 1, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), tf.math.add(sigma, tf.math.multiply(sigma, tf.math.add(sigma, tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [6.153106486120694e+31, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10976093262434006, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1], [7, 0, 5, 7, 4], [0, 3, 1, 2], [42], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [6, 9], [3, 4, 3], [8, 0, 19], [1, 0, 0, 1, 0, 1, 0], [1, 0, 0, 1, 1, 1], [8, 0, 8, 9, 7], [7], [88, 19], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 4, 4, 2, 2, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07317395508289337, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [0, 1, 1, 1], [50], [0, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [42, 0, 19], [0, 0, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 0, 0, 1, 3, 3], [18, 57, 81]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 3, 3, 2, 1, 1, 5, 5, 4, 1, 1, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.80176593e-01, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3019877401530042, 2.3025853948790904, 2.302585336274286, 2.3025852823301536, 2.3025852014611914, 2.302586141342437, 2.302584243220676], "accuracy": [0.09760929644107819, 0.10315678268671036, 0.09694888442754745, 0.1006472036242485, 0.09945846349000931, 0.09470347315073013, 0.09972262382507324], "val_loss": [1.9736441203526087, 1.973644188472203, 1.9736441203526087, 1.973644188472203, 1.9736442565917969, 1.9736440522330148, 1.973644188472203], "val_accuracy": [0.1003333330154419, 0.10066666454076767, 0.1003333330154419, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.09966666996479034]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [3, 1, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 1, 1], [5, 2, 9], [4, 4, 3, 4], [8, 0, 19], [0, 1, 0, 0, 1, 1, 0], [1, 0, 1, 0, 0, 1], [7, 3, 8, 9, 7], [0, 3], [88, 19], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [5, 3, 0, 4, 7, 6, 2, 9], [2, 0, 0, 1, 3, 3], [18, 57, 81]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07317395508289337, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [4, 1, 5, 7, 8], [0, 1, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 1, 1], [5, 2, 9], [4, 4, 3, 4], [8, 0, 19], [0, 1, 0, 0, 1, 1, 0], [0, 1, 0, 1, 0, 1], [2, 3, 8, 9, 7], [4, 3], [88, 19], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 6, 2, 9], [2, 0, 0, 1, 3, 1], [28, 8]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.pow(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [3.126369415824093, 5.935404442597645e+22, NaN, NaN, NaN, NaN], "accuracy": [0.22440892457962036, 0.09800554811954498, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [28.67939213344029, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [0, 2, 1, 1], [50], [0, 1, 0, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1], [0, 9], [3, 4, 3], [8, 0, 19], [0, 0, 0, 1, 0, 1, 0], [0, 0, 1, 0, 0, 1], [8, 1, 8, 9, 7], [7], [88, 19], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 2, 2, 2, 0, 1, 4, 3, 2, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, grad), sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0952318087220192, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [0, 0, 1, 1], [43, 66], [0, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [1, 0, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1], [2, 0, 8, 9, 7], [6, 7], [88, 19], [1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 0, 4, 7, 2, 7], [0, 0, 0, 1, 3, 3], [18, 57, 81]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 2, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(alpha, tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)), alpha)), tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302717279307736, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09787346422672272, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [4, 1, 5, 7, 8], [1, 1, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 1, 1], [5, 2, 9], [4, 4, 3, 4], [8, 0, 19], [0, 0, 0, 0, 1, 1, 0], [0, 0, 0, 1, 0, 1], [1, 3, 8, 9, 7], [4, 3], [88, 19], [1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 6, 2, 9], [2, 0, 0, 1, 3, 1], [28, 8]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 6, 4, 3, 1, 0, 1, 0, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07317395508289337, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [1, 2, 1, 1], [50], [0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1], [2, 9], [3, 4, 3], [8, 0, 19], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 7, 8, 9, 7], [4, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 2, 6], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 2, 1, 1, 3, 2, 1, 1, 0, 13, 7, 6, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(alpha), tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.divide_no_nan(alpha, sigma), sigma))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08479725569486618, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [0, 2, 1, 1], [4], [0, 1, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [6, 9], [1, 4, 3], [8, 0, 19], [0, 1, 0, 1, 1, 0], [0, 0, 0, 1, 1, 1], [1, 8, 3, 9, 4], [4, 7], [88, 19], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 5, 4, 7, 2, 7], [1, 0, 0, 1, 3, 3], [39, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 1, 1, 1, 0, 1, 0, 4, 2, 2, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.sqrt(sigma)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07449477910995483, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1], [7, 1, 5, 3, 8], [0, 2, 3, 1], [50], [0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1], [2, 8, 4], [1, 4, 3], [8, 0, 19], [0, 0, 0, 1, 0, 1, 0], [1, 0, 0, 1, 1, 1], [1, 8, 3, 9, 4], [7], [88, 19], [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 9, 9, 5, 4, 1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.square(tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.math.add(alpha, grad), grad)), tf.math.add(alpha, tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.sqrt(alpha), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09787346422672272, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1], [0, 0, 1, 1, 0, 1, 0, 0, 1], [1, 1, 5, 4, 8], [1, 2, 1, 1], [43], [0, 1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1], [2, 9], [4, 4, 3], [8, 0, 19], [0, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1], [1, 8, 3, 9, 4], [7, 7], [88, 19], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 0, 4, 7, 2, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.subtract(tf.math.add(alpha, alpha), grad), tf.math.square(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07409853488206863, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1], [4, 1, 5, 7, 8], [0, 2, 1, 1], [50], [0, 0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 1, 1], [3, 9], [4, 4, 3, 4], [8, 0, 19], [0, 0, 0, 0, 1, 1, 0], [0, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 3], [88, 19], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 6, 2, 9], [1, 0, 0, 1, 3, 3], [28, 8]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 2, 1, 1, 5, 4, 3, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), tf.math.add(sigma, tf.math.sqrt(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.302717279307736, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09787346422672272, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [8, 1, 5, 7, 8], [1, 1, 1, 1], [50], [1, 1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 1, 1], [5, 2, 9], [4, 4, 3, 4], [8, 0, 19], [1, 0, 0, 1, 1, 1, 0], [1, 0, 1, 0, 0, 1], [2, 3, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 0, 4, 7, 6, 2, 9], [1, 0, 0, 1, 3, 3], [28, 8]], "fitness": -0.03685714304447174, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(alpha), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302810894830462, 2.3027035534074827, 2.3039832648946277, 2.3018520081189675, 2.303444457296619, 2.3031429078333003], "accuracy": [0.08809932321310043, 0.09113723784685135, 0.08981640636920929, 0.09311848133802414, 0.09325055778026581, 0.08625016361474991], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1], [7, 1, 5, 7, 8, 2, 3, 8, 8, 5, 3, 1], [0, 3, 1, 1, 2, 3, 1, 1], [89], [0, 0, 1, 0, 0, 0, 1], [1, 0, 1, 0, 1, 1], [6, 9], [0, 4, 3], [8, 0, 19], [0, 0, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1], [6, 8, 3, 9, 4], [4, 7], [88, 19], [0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 0, 4, 7, 2, 7], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03257142752408981, "mapping_values": [1, 20, 20, 12, 8, 1, 1, 1, 0, 1, 1, 6, 5, 4, 1, 1, 5, 2, 3, 2], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.math.multiply(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.square(tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), grad)), tf.math.add(alpha, alpha))))))))))))), alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, grad))), tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3029936647623, 2.3034567907895425, 2.3051456926426694, 2.3033685333079132, 2.306211281005402, 2.306278135136937], "accuracy": [0.0870426595211029, 0.09060890227556229, 0.08942015469074249, 0.09179764986038208, 0.08981640636920929, 0.08598599582910538], "val_loss": [1.971444743020194, 1.971691608428955, 1.971970558166504, 1.9722536631992884, 1.9725540024893624, 1.9728570665631975], "val_accuracy": [0.03533333167433739, 0.029333332553505898, 0.025333333760499954, 0.023000000044703484, 0.02199999988079071, 0.02266666665673256]}}]