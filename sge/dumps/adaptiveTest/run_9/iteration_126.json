[{"genotype": [[0], [0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 4, 0, 8, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 2, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [30, 8, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [43, 57]], "fitness": -0.7951428294181824, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.pow(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [1.9795590546845665, 1.3684948739783795, 1.0194623687358313, 0.8974638063405971, 0.8024809890104527, 0.7751515745848965, 0.742590157866966, 0.6946239467026802, 0.6869856159543128, 0.6524845340610606, 0.6708484571591943, 0.6405707207873608, 0.6062180547745094, 0.6081496151588565], "accuracy": [0.33760401606559753, 0.5198785066604614, 0.6259410977363586, 0.6676793098449707, 0.7067758440971375, 0.7143045663833618, 0.7135120630264282, 0.7351737022399902, 0.739400327205658, 0.7565711140632629, 0.7460044622421265, 0.7539294958114624, 0.7691190242767334, 0.7664773464202881], "val_loss": [1.4899749415261405, 0.8502658946173531, 0.7942366940634591, 0.6582866566521781, 0.7131118263517108, 0.5767902306147984, 0.557685136795044, 0.5449974196297782, 0.5185512134007045, 0.6293512071881976, 0.5259838785443988, 0.5107243742261615, 0.4994595391409738, 0.4929076262882778], "val_accuracy": [0.4169999957084656, 0.6316666603088379, 0.625333309173584, 0.7066666483879089, 0.6976666450500488, 0.7456666827201843, 0.75, 0.7480000257492065, 0.7789999842643738, 0.7160000205039978, 0.7739999890327454, 0.750333309173584, 0.7753333449363708, 0.7689999938011169]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], [1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [7, 4, 8, 8, 8, 1, 7, 0, 3, 3, 3, 2, 0, 3, 3, 1, 5, 1, 7, 8, 3, 1, 1, 9, 0, 4], [0, 2, 2, 2, 0, 1, 2, 2, 2, 2, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [4, 4, 3], [82, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7928571701049805, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2913344680766987, 2.2639983365123517, 2.2340493214805885, 2.193698415824246, 2.1447616060254693, 2.0699900965790756, 1.975476578997898, 1.8552060191657456, 1.7269009801737147, 1.5917360216257137, 1.471957458229176, 1.382823623465887, 1.2983594824215676, 1.2412443592752747, 1.1918031837584053, 1.1442734726730859, 1.0926871426495044, 1.0682726607047461, 1.031534808045129, 1.0069171627593503, 0.9828545975253693, 0.9648465660380146, 0.9383953677554566, 0.9299927466675558, 0.9156357597728463, 0.8981612972012758, 0.881286203325889, 0.8756715685951869, 0.8553219219287624, 0.8585085922370198, 0.842324330137233, 0.8338130110007047, 0.8238198701904875, 0.8153965579850909, 0.8033919248598568, 0.8035105317338992, 0.7914099266673628, 0.7925139324870706, 0.7776528218749523, 0.7735479366289642, 0.7804188102920687, 0.7675600103682625, 0.7729665914609716, 0.7618881873072981, 0.74513386081884, 0.7471851130218995, 0.7456528972389046, 0.7421364239760835, 0.742339265360698, 0.7326212296900323, 0.7236229284580248, 0.7215742643924044, 0.7176987237508948, 0.7093459769498875, 0.7108879216579225, 0.7085877842418805, 0.7143240816022238, 0.6974582342329342, 0.6949160044786243, 0.6906511333829235, 0.6930223273925494, 0.6949456603519826, 0.6805467239350155, 0.6814338806960025, 0.6785662365769036, 0.6778558004470848, 0.6788189490678178, 0.6683036702073812, 0.6713852751933667, 0.6691430605492336, 0.6686940482500097, 0.6671219832467964, 0.6614250670633831], "accuracy": [0.12151630967855453, 0.18795403838157654, 0.26099589467048645, 0.31765949726104736, 0.34843480587005615, 0.38687095046043396, 0.4065513014793396, 0.4511953592300415, 0.4714040458202362, 0.4986131191253662, 0.5264826416969299, 0.5396909117698669, 0.5645225048065186, 0.5732399821281433, 0.5820895433425903, 0.6036190986633301, 0.6151102781295776, 0.6186765432357788, 0.6382247805595398, 0.6468101739883423, 0.6448289752006531, 0.6604147553443909, 0.6662263870239258, 0.6729626059532166, 0.6737551093101501, 0.6775855422019958, 0.6826046705245972, 0.6868313550949097, 0.6869634389877319, 0.6856426000595093, 0.693831741809845, 0.6960771083831787, 0.7009642124176025, 0.7038700580596924, 0.7047945857048035, 0.7094175219535828, 0.7113987803459167, 0.7120591998100281, 0.7148329019546509, 0.7174745798110962, 0.7129837274551392, 0.7156254053115845, 0.713908314704895, 0.7189275026321411, 0.7263241410255432, 0.7234182953834534, 0.7298903465270996, 0.7281733155250549, 0.7248712182044983, 0.7323999404907227, 0.7314753532409668, 0.7347774505615234, 0.737022876739502, 0.7408532500267029, 0.7360982894897461, 0.7360982894897461, 0.7374191284179688, 0.7440232634544373, 0.7432307600975037, 0.7471932172775269, 0.7417778372764587, 0.7531369924545288, 0.7498348951339722, 0.7479857206344604, 0.7504953145980835, 0.748778223991394, 0.7499669790267944, 0.7535332441329956, 0.7490423917770386, 0.754589855670929, 0.7516840696334839, 0.752212405204773, 0.7500990629196167], "val_loss": [1.9464810235159737, 1.919961656842913, 1.8873740604945592, 1.8437653950282507, 1.7846008709498815, 1.7034423010689872, 1.5991101946149553, 1.4740489891597204, 1.3404630252293177, 1.2143262454441615, 1.1034424986158098, 1.017571176801409, 0.9491002900259835, 0.895456075668335, 0.8513052804129464, 0.8165605068206787, 0.7861537763050624, 0.7619814361844744, 0.7401737655912127, 0.7238106387002128, 0.7080581188201904, 0.692425080708095, 0.6806204319000244, 0.6694538082395282, 0.661170414515904, 0.6520362581525531, 0.6454473904200962, 0.6372743504387992, 0.6282021488462176, 0.6232175316129412, 0.6174807889120919, 0.6105477299009051, 0.6057321003505162, 0.6002624545778547, 0.5962509938648769, 0.59232154914311, 0.5883677516664777, 0.5841244799750192, 0.5792332887649536, 0.575343097959246, 0.5736606631960187, 0.5687006201062884, 0.5674156291144234, 0.5649736268179757, 0.5631000484739032, 0.5574687038149152, 0.5544133016041347, 0.5508016858782087, 0.5496981825147357, 0.5488686561584473, 0.5441189323152814, 0.5411339146750314, 0.5398999793188912, 0.5375810861587524, 0.5347992352076939, 0.5327953270503453, 0.5301277126584735, 0.5286106722695487, 0.5263487952096122, 0.524541940007891, 0.5234541552407401, 0.5231501715523856, 0.5199085984911237, 0.5191543442862374, 0.5176996333258492, 0.5165306670325143, 0.5129533154623849, 0.5110435145241874, 0.5104799951825824, 0.5089381422315326, 0.508239575794765, 0.5059530564716884, 0.506497689655849], "val_accuracy": [0.24066667258739471, 0.36800000071525574, 0.41733333468437195, 0.45766666531562805, 0.4893333315849304, 0.5316666960716248, 0.5573333501815796, 0.5753333568572998, 0.581333339214325, 0.6166666746139526, 0.6359999775886536, 0.652999997138977, 0.6606666445732117, 0.6726666688919067, 0.6840000152587891, 0.6863333582878113, 0.6959999799728394, 0.6990000009536743, 0.7023333311080933, 0.7026666402816772, 0.7136666774749756, 0.7153333425521851, 0.7163333296775818, 0.7223333120346069, 0.7239999771118164, 0.7279999852180481, 0.7239999771118164, 0.7306666374206543, 0.7269999980926514, 0.7353333234786987, 0.7316666841506958, 0.7406666874885559, 0.7433333396911621, 0.7416666746139526, 0.7409999966621399, 0.7523333430290222, 0.7473333477973938, 0.7443333268165588, 0.7509999871253967, 0.7480000257492065, 0.7549999952316284, 0.7546666860580444, 0.7553333044052124, 0.7536666393280029, 0.7573333382606506, 0.7573333382606506, 0.7609999775886536, 0.7639999985694885, 0.7646666765213013, 0.7606666684150696, 0.765999972820282, 0.7703333497047424, 0.7676666378974915, 0.7699999809265137, 0.768666684627533, 0.7643333077430725, 0.7706666588783264, 0.768666684627533, 0.7716666460037231, 0.7706666588783264, 0.7726666927337646, 0.7710000276565552, 0.7776666879653931, 0.7756666541099548, 0.7799999713897705, 0.777999997138977, 0.7770000100135803, 0.781000018119812, 0.7776666879653931, 0.7789999842643738, 0.7776666879653931, 0.7760000228881836, 0.778333306312561]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [7, 4, 8, 8, 8, 1, 7, 0, 3, 3, 3, 2, 0, 3, 3, 1, 5, 1, 7, 8, 3, 1, 1, 9, 0, 4], [0, 2, 2, 2, 0, 1, 2, 2, 2, 2, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [82, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7928571701049805, "mapping_values": [1, 6, 6, 3, 3, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)), grad)), lambda shape,  alpha, beta, grad: tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2913344680766987, 2.2639984624764673, 2.234049861299804, 2.1936988880952053, 2.1447596625251353, 2.0699809955772768, 1.9754626827469246, 1.8551863354147702, 1.7268890033009472, 1.591749004731325, 1.4719611365860321, 1.382824447003527, 1.2983664890810043, 1.2412532980510382, 1.1917613825195297, 1.1442249423681925, 1.092592023745063, 1.0682071263622284, 1.0315019154293568, 1.0068974455019204, 0.9828714804642426, 0.9648253149864082, 0.9384048885956511, 0.9299404296215578, 0.9156211578079171, 0.8981639987064186, 0.8813215585164957, 0.8756071969801802, 0.8553104966449826, 0.8584856193346858, 0.842289848066891, 0.8338129231407343, 0.8237875405634556, 0.8154080073673806, 0.8033341236275736, 0.8034713447385256, 0.7914237054725444, 0.7925149521350924, 0.7776153865208195, 0.7735463467335201, 0.7803925339808129, 0.7674534139757884, 0.772946701656322, 0.76185328225733, 0.7450299642939751, 0.7471458085098791, 0.7456954315023305, 0.7421250146582551, 0.7423330700282549, 0.7325408588216573, 0.7235024734463564, 0.7215527558937647, 0.7177017398986519, 0.7093281723866924, 0.7109544985345673, 0.7085476107979022, 0.7143162247716097, 0.6972673903162201, 0.6949645265958502, 0.6903849746320919, 0.6932152004888139, 0.6947991177154302, 0.6806843978082342, 0.6813761791013345, 0.678578632815702, 0.6778998127419479, 0.6788597018601258, 0.6682371857175423, 0.6713873589153792, 0.6690557216766598, 0.6685658705358917, 0.6671122972046647, 0.6612668807842571], "accuracy": [0.12151630967855453, 0.18795403838157654, 0.26099589467048645, 0.3179236650466919, 0.34843480587005615, 0.3867388665676117, 0.40668338537216187, 0.45106327533721924, 0.4714040458202362, 0.4983489513397217, 0.5264826416969299, 0.5396909117698669, 0.5641262531280518, 0.5732399821281433, 0.5820895433425903, 0.6036190986633301, 0.6147140264511108, 0.6188086271286011, 0.6382247805595398, 0.6469422578811646, 0.6446968913078308, 0.6606789231300354, 0.665830135345459, 0.6725663542747498, 0.6734909415245056, 0.6778497099876404, 0.6828688383102417, 0.6870955228805542, 0.6866992712020874, 0.6856426000595093, 0.6942279934883118, 0.6966054439544678, 0.7010962963104248, 0.7037379741668701, 0.7046625018119812, 0.7104741930961609, 0.7116629481315613, 0.7123233675956726, 0.7145687341690063, 0.7173424959182739, 0.7125874757766724, 0.7156254053115845, 0.7145687341690063, 0.7191916704177856, 0.7263241410255432, 0.7231541275978088, 0.7294940948486328, 0.7281733155250549, 0.7246070504188538, 0.7323999404907227, 0.7316074371337891, 0.735041618347168, 0.7367587089538574, 0.7412495017051697, 0.7357020378112793, 0.7363624572753906, 0.7368907928466797, 0.7445515990257263, 0.7433628439903259, 0.7469290494918823, 0.7413815855979919, 0.7536653280258179, 0.748778223991394, 0.7473253011703491, 0.7500990629196167, 0.7486461400985718, 0.7497028112411499, 0.7531369924545288, 0.7491744756698608, 0.7552502751350403, 0.7508915662765503, 0.7520803213119507, 0.750231146812439], "val_loss": [1.9464810235159737, 1.9199623380388533, 1.8873744010925293, 1.8437632833208357, 1.784595557621547, 1.7034300395420618, 1.5990941524505615, 1.4740383965628487, 1.340465988431658, 1.2143449783325195, 1.1034635135105677, 1.0175963810511999, 0.9490968840462821, 0.8954416683741978, 0.851276125226702, 0.81643203326634, 0.786113943372454, 0.7619829177856445, 0.7401690483093262, 0.7238168546131679, 0.7080301557268415, 0.6924669401986259, 0.68063337462289, 0.6694433178220477, 0.6611968108585903, 0.6521308251789638, 0.6454514265060425, 0.6372796807970319, 0.6282344545636859, 0.6233810356685093, 0.6175271102360317, 0.6105384145464215, 0.6057769571031842, 0.600258639880589, 0.5962661334446498, 0.5924375908715385, 0.5883926323481968, 0.5840380021503994, 0.5791360310145787, 0.5752683367047992, 0.5735687187739781, 0.5685872520719256, 0.567411984716143, 0.5650767939431327, 0.5630567755017962, 0.5573679549353463, 0.5544168949127197, 0.5508224793842861, 0.5496777806963239, 0.5488713298525129, 0.5441581862313407, 0.5411451373781476, 0.5398473909923008, 0.5377421379089355, 0.5348655326025826, 0.5328073842184884, 0.5298837763922555, 0.5285086631774902, 0.5263114997318813, 0.5244941541126796, 0.523394090788705, 0.5230922188077655, 0.5197498798370361, 0.5191709484372821, 0.5176614012037005, 0.5164367130824498, 0.5131033829280308, 0.5109577008656093, 0.5105574471609933, 0.5091179779597691, 0.5082464558737618, 0.5060633420944214, 0.5066182102475848], "val_accuracy": [0.24066667258739471, 0.367333322763443, 0.41733333468437195, 0.45766666531562805, 0.48899999260902405, 0.5316666960716248, 0.5573333501815796, 0.5753333568572998, 0.581333339214325, 0.6166666746139526, 0.6359999775886536, 0.653333306312561, 0.6610000133514404, 0.6726666688919067, 0.6836666464805603, 0.6859999895095825, 0.6959999799728394, 0.6990000009536743, 0.7023333311080933, 0.7026666402816772, 0.7146666646003723, 0.7153333425521851, 0.7160000205039978, 0.7223333120346069, 0.7246666550636292, 0.7283333539962769, 0.7246666550636292, 0.7306666374206543, 0.7266666889190674, 0.7350000143051147, 0.7319999933242798, 0.7413333058357239, 0.7436666488647461, 0.7413333058357239, 0.7406666874885559, 0.7523333430290222, 0.746999979019165, 0.7433333396911621, 0.7513333559036255, 0.7473333477973938, 0.7549999952316284, 0.7546666860580444, 0.7570000290870667, 0.7526666522026062, 0.7576666474342346, 0.7580000162124634, 0.762666642665863, 0.7639999985694885, 0.7646666765213013, 0.7596666812896729, 0.765999972820282, 0.7696666717529297, 0.7673333287239075, 0.7696666717529297, 0.7676666378974915, 0.7643333077430725, 0.7706666588783264, 0.7683333158493042, 0.7710000276565552, 0.7696666717529297, 0.7726666927337646, 0.7710000276565552, 0.777999997138977, 0.7756666541099548, 0.7789999842643738, 0.777999997138977, 0.7770000100135803, 0.7799999713897705, 0.7773333191871643, 0.7793333530426025, 0.7773333191871643, 0.7766666412353516, 0.7786666750907898]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0], [0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [7, 4, 8, 8, 0, 1, 7, 0, 2, 1, 3, 2, 5, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 0, 4], [2, 2, 2, 2, 1, 1, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [82, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.7822856903076172, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2913344680766987, 2.2639983365123517, 2.2340493214805885, 2.193698447315275, 2.1447615610247888, 2.0699894397391967, 1.9754753487536212, 1.8552044759636244, 1.7269052738967652, 1.5917505680089772, 1.4719692510998623, 1.3828218950965165, 1.2983554307385647, 1.241220821164083, 1.1917729192421878, 1.1441844602885138, 1.092589338819947, 1.068197061845167, 1.031500954889996, 1.0068921419166854, 0.982788087653761, 0.9648023910447512, 0.9383937571152972, 0.9299601178914958, 0.9156265546617066, 0.8981169321753991, 0.8813333461596714, 0.875633424496087, 0.8552874060921649, 0.8584723883002048, 0.8422973974348453, 0.8338041594472182, 0.8238696809363576, 0.8152878466708675, 0.803405414380575, 0.80337437498823, 0.7914052016825456, 0.7924710972560096, 0.7775912437897474, 0.7734976518880012, 0.7804088731404734, 0.7674737807593058, 0.7729895179219108, 0.7618451951643133, 0.7450646582202133, 0.747197058805149, 0.7457028525049786, 0.7420616222095527, 0.7423366170281575, 0.7325124386169056, 0.7235560698468908, 0.7215912170209243, 0.7177321716715962, 0.7092674099506246, 0.7109570302007189, 0.7085519820518655, 0.7142049133218653, 0.6974158523782149, 0.6948430806953421], "accuracy": [0.12151630967855453, 0.18795403838157654, 0.26099589467048645, 0.31765949726104736, 0.34843480587005615, 0.38687095046043396, 0.4065513014793396, 0.4511953592300415, 0.47127196192741394, 0.4983489513397217, 0.5263505578041077, 0.5396909117698669, 0.564258337020874, 0.5735041499137878, 0.5820895433425903, 0.6036190986633301, 0.6144498586654663, 0.6186765432357788, 0.6383568644523621, 0.6472064256668091, 0.6448289752006531, 0.6606789231300354, 0.6659622192382812, 0.6730946898460388, 0.6738871932029724, 0.6774534583091736, 0.6826046705245972, 0.6870955228805542, 0.6870955228805542, 0.685510516166687, 0.694360077381134, 0.6963412761688232, 0.7013604640960693, 0.7040021419525146, 0.7046625018119812, 0.7099458575248718, 0.7119271159172058, 0.7123233675956726, 0.7148329019546509, 0.7174745798110962, 0.7125874757766724, 0.7153612375259399, 0.7144366502761841, 0.7191916704177856, 0.72672039270401, 0.7235503792762756, 0.7294940948486328, 0.7284374833106995, 0.7252674698829651, 0.7320036888122559, 0.7314753532409668, 0.735041618347168, 0.737022876739502, 0.7405890822410583, 0.7357020378112793, 0.7368907928466797, 0.7378153204917908, 0.7433628439903259, 0.7428345084190369], "val_loss": [1.9464810235159737, 1.919961656842913, 1.887373992374965, 1.8437657356262207, 1.7846010753086634, 1.703441517693656, 1.5991102967943465, 1.4740554264613561, 1.3404793058122908, 1.2143515859331404, 1.1034595285143172, 1.0175725051334925, 0.9490908214024135, 0.8954322338104248, 0.8512473106384277, 0.8164146287100655, 0.7860903739929199, 0.7619855914797101, 0.7401542493275234, 0.723756228174482, 0.707993711744036, 0.6924328633717128, 0.6806079660143171, 0.6694417510713849, 0.6611833572387695, 0.652056132044111, 0.6454747234072004, 0.6372929470879691, 0.628227881022862, 0.6233464820044381, 0.6174989768436977, 0.610553434916905, 0.6057771103722709, 0.6002459015165057, 0.5962513344628471, 0.5924190282821655, 0.588374137878418, 0.5841595275061471, 0.5791857753481183, 0.575306875365121, 0.5736491680145264, 0.5686847141810826, 0.5673452956335885, 0.5649398565292358, 0.5630462850843158, 0.5574207646506173, 0.5543055193764823, 0.5508016688483102, 0.5497819866452899, 0.5489342212677002, 0.5440585442951748, 0.5410728965486798, 0.5398507799421038, 0.5376737458365304, 0.5349583966391427, 0.5328419719423566, 0.530112658228193, 0.5285429443631854, 0.5263321399688721], "val_accuracy": [0.24066667258739471, 0.36800000071525574, 0.41733333468437195, 0.45766666531562805, 0.4893333315849304, 0.5316666960716248, 0.5573333501815796, 0.5753333568572998, 0.581333339214325, 0.6169999837875366, 0.6363333463668823, 0.653333306312561, 0.6606666445732117, 0.6726666688919067, 0.6840000152587891, 0.6859999895095825, 0.6959999799728394, 0.6990000009536743, 0.7020000219345093, 0.7023333311080933, 0.7146666646003723, 0.715666651725769, 0.7163333296775818, 0.7223333120346069, 0.7239999771118164, 0.7279999852180481, 0.7239999771118164, 0.7310000061988831, 0.7269999980926514, 0.7356666922569275, 0.7319999933242798, 0.7406666874885559, 0.7433333396911621, 0.7413333058357239, 0.7409999966621399, 0.7523333430290222, 0.7463333606719971, 0.7436666488647461, 0.7506666779518127, 0.7476666569709778, 0.7559999823570251, 0.7546666860580444, 0.7566666603088379, 0.753000020980835, 0.7580000162124634, 0.7580000162124634, 0.7616666555404663, 0.7643333077430725, 0.7643333077430725, 0.7603333592414856, 0.7663333415985107, 0.7699999809265137, 0.7673333287239075, 0.7713333368301392, 0.7683333158493042, 0.7639999985694885, 0.7703333497047424, 0.7680000066757202, 0.7713333368301392]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [3, 8, 0, 7, 9, 1, 7, 0, 3, 3, 2, 2, 0, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 0, 4, 5, 9, 2], [1, 2, 1, 0, 1, 1, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 1, 0, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [2, 4, 3], [82, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [6, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [19, 57]], "fitness": -0.6919999718666077, "mapping_values": [1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 8, 4, 4, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.add(alpha, alpha)))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(sigma, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [2.3004980149632512, 2.295763944449001, 2.29196172578696, 2.287537215707356, 2.284767056216874, 2.2799663851053613, 2.2749075674818586, 2.2693613832967787, 2.2678784873145146, 2.2602612870228587, 2.2562788239465084, 2.2521547325188696, 2.246299704477504, 2.2404415894650573, 2.2389128322157923, 2.2307674904320582, 2.2235595337892047, 2.2186363855955733, 2.2106958930487046, 2.203543924841316, 2.1985131504198407, 2.1886507332710745, 2.1807871532792884, 2.172923161794229, 2.1631379437374165, 2.155905808503082, 2.1444242386030026, 2.134804300958958, 2.1248090607284507, 2.1122163534951706, 2.0987790530588586, 2.085386892304114, 2.072043991454163, 2.05680173987395, 2.042439605613127, 2.027397552517191, 2.00817430351609, 1.9969762779891358, 1.9752621927187033, 1.9593704287181708, 1.943086344410699, 1.9172701232736578, 1.904479968014048, 1.885835169470463, 1.8584216113859526, 1.8358703259983398, 1.8160761641851426, 1.7949009905118416, 1.7769704722237074, 1.749873723950384, 1.7298480591297212, 1.7089248031373856, 1.6871898680661632, 1.6585628468803584, 1.6529832740013295, 1.6199051651421192, 1.6032976979797449, 1.5782420743395074, 1.553687507765184, 1.5329764009923383, 1.5244752984745407, 1.5073900286705109, 1.4773859933319817, 1.4694426742448405, 1.4487424716815942, 1.4348415404955757, 1.422673169049636, 1.407140090685668, 1.3906322660195498, 1.373121661910638, 1.3605144811170984, 1.3467707437783059, 1.3415607469681152, 1.3199501011145192, 1.3144422330719023, 1.3004951034916736, 1.282873258630377, 1.2709862486624273, 1.2572811277330576, 1.2555785183389472, 1.2481260770788407, 1.235165282609582, 1.2266073663236916, 1.2184591923470447, 1.205087437621512, 1.1897186555914072, 1.181254896316483, 1.1741415668928927, 1.1559172424862587, 1.1695207344180385, 1.1611673086547045, 1.1408824913253905, 1.1352594770602327, 1.1344884365556924, 1.1216246070737113, 1.1112537356163643, 1.1074289234165409, 1.107039216581573, 1.107154754725713, 1.091378261085357], "accuracy": [0.09655263274908066, 0.10394927859306335, 0.1254788041114807, 0.1286487877368927, 0.1410645842552185, 0.15176330506801605, 0.16193369030952454, 0.17210407555103302, 0.1822744756937027, 0.2024831622838974, 0.20776647329330444, 0.2222955971956253, 0.22414475679397583, 0.24686303734779358, 0.24435345828533173, 0.25782591104507446, 0.2759212851524353, 0.28080835938453674, 0.28886541724205017, 0.29943203926086426, 0.3065645098686218, 0.31884822249412537, 0.32664114236831665, 0.33284902572631836, 0.337339848279953, 0.3427552580833435, 0.3559635579586029, 0.3533218801021576, 0.3593977093696594, 0.360190212726593, 0.37405890226364136, 0.3883238732814789, 0.3909655213356018, 0.3965130150318146, 0.3983621597290039, 0.4087967276573181, 0.4073438048362732, 0.4072117209434509, 0.4209483563899994, 0.41923126578330994, 0.4227975308895111, 0.43811914324760437, 0.4283449947834015, 0.43468499183654785, 0.44366663694381714, 0.4451195299625397, 0.4492141008377075, 0.46044114232063293, 0.4581957459449768, 0.47087571024894714, 0.46664905548095703, 0.4737815260887146, 0.47668737173080444, 0.48646149039268494, 0.48064985871315, 0.499009370803833, 0.49227315187454224, 0.5050851702690125, 0.5091797709465027, 0.5119535326957703, 0.5027077198028564, 0.5107647776603699, 0.5231805443763733, 0.5227842926979065, 0.5267468094825745, 0.5326905250549316, 0.5303130149841309, 0.5432571768760681, 0.5395588278770447, 0.5472196340560913, 0.5509179830551147, 0.5525029897689819, 0.5482763051986694, 0.5525029897689819, 0.5591071248054504, 0.561352550983429, 0.5688812732696533, 0.575089156627655, 0.5678246021270752, 0.5671641826629639, 0.568220853805542, 0.5739004015922546, 0.5836745500564575, 0.5816932916641235, 0.5896182656288147, 0.5888257622718811, 0.591731607913971, 0.5975432395935059, 0.6033549308776855, 0.5958262085914612, 0.59225994348526, 0.601109504699707, 0.607449471950531, 0.6048077940940857, 0.6103553175926208, 0.6188086271286011, 0.6176198720932007, 0.609959065914154, 0.6152423620223999, 0.6173557043075562], "val_loss": [1.9671073641095842, 1.9630517959594727, 1.9590484755379813, 1.954993724822998, 1.9510154724121094, 1.946920735495431, 1.9428513390677316, 1.9386653218950545, 1.9344006265912737, 1.929990223475865, 1.9254659243992396, 1.9208060673304967, 1.9159480503627233, 1.9108992304120744, 1.905754566192627, 1.9003249577113561, 1.8945680345807756, 1.888617719922747, 1.8823543276105608, 1.8757038797651018, 1.8687889235360282, 1.86146879196167, 1.8536958694458008, 1.845487185886928, 1.8368102482386999, 1.827704906463623, 1.8179529735020228, 1.8078368731907435, 1.7971250670296806, 1.7859225273132324, 1.774012497493199, 1.761439664023263, 1.7482588631766183, 1.7343744550432478, 1.719949177333287, 1.704810619354248, 1.6889705657958984, 1.672652074268886, 1.655461038861956, 1.637843472617013, 1.619701589856829, 1.6006593363625663, 1.5812711375100272, 1.5614257540021623, 1.5409845624651228, 1.5199640478406633, 1.4988014357430595, 1.477287428719657, 1.4556635107312883, 1.4338407175881522, 1.41205290385655, 1.390200240271432, 1.3682784352983748, 1.346240724836077, 1.3249576091766357, 1.3034380163465227, 1.2822698184422083, 1.2612471239907401, 1.2405758244650704, 1.2203713485172816, 1.20078444480896, 1.182114567075457, 1.163522379738944, 1.1458828108651298, 1.1288069316319056, 1.1122188568115234, 1.096280608858381, 1.0810925619942802, 1.0662352357591902, 1.0517753192356654, 1.038243021283831, 1.0250510147639684, 1.0124756608690535, 1.0002706050872803, 0.9886795452662877, 0.9774408340454102, 0.9662545067923409, 0.9555489335741315, 0.9454475470951625, 0.9359166622161865, 0.9267706189836774, 0.917851175580706, 0.9090424605778286, 0.9006491729191372, 0.8924422264099121, 0.8845201560429165, 0.8768487998417446, 0.8695399420601981, 0.8620161669594901, 0.8554444483348301, 0.8490566526140485, 0.8425964968545097, 0.836408189364842, 0.8304526294980731, 0.8247843299593244, 0.8190878799983433, 0.813554184777396, 0.8083295140947614, 0.8031110763549805, 0.7983733926500592], "val_accuracy": [0.06433333456516266, 0.09133332967758179, 0.12266666442155838, 0.156333327293396, 0.19499999284744263, 0.23499999940395355, 0.2720000147819519, 0.29733332991600037, 0.32100000977516174, 0.33899998664855957, 0.35600000619888306, 0.36399999260902405, 0.3733333349227905, 0.38066667318344116, 0.3883333206176758, 0.3946666717529297, 0.40433332324028015, 0.4126666784286499, 0.42100000381469727, 0.42800000309944153, 0.4333333373069763, 0.4363333284854889, 0.4426666796207428, 0.4476666748523712, 0.45266667008399963, 0.45766666531562805, 0.46133333444595337, 0.4703333377838135, 0.47733333706855774, 0.4846666753292084, 0.492333322763443, 0.4959999918937683, 0.5009999871253967, 0.5086666941642761, 0.5173333287239075, 0.5210000276565552, 0.5293333530426025, 0.5370000004768372, 0.5400000214576721, 0.5429999828338623, 0.5453333258628845, 0.5503333210945129, 0.5516666769981384, 0.5566666722297668, 0.5619999766349792, 0.5630000233650208, 0.5663333535194397, 0.5669999718666077, 0.5726666450500488, 0.57833331823349, 0.5809999704360962, 0.5833333134651184, 0.5853333473205566, 0.5876666903495789, 0.5910000205039978, 0.5953333377838135, 0.597000002861023, 0.5979999899864197, 0.6000000238418579, 0.6036666631698608, 0.6083333492279053, 0.6159999966621399, 0.6203333139419556, 0.6276666522026062, 0.6316666603088379, 0.6353333592414856, 0.6380000114440918, 0.640666663646698, 0.6449999809265137, 0.6470000147819519, 0.6513333320617676, 0.653333306312561, 0.6549999713897705, 0.6570000052452087, 0.6606666445732117, 0.6643333435058594, 0.6650000214576721, 0.6669999957084656, 0.6683333516120911, 0.6676666736602783, 0.6690000295639038, 0.6700000166893005, 0.6710000038146973, 0.6703333258628845, 0.671999990940094, 0.675000011920929, 0.6756666898727417, 0.6783333420753479, 0.6800000071525574, 0.6826666593551636, 0.6826666593551636, 0.6846666932106018, 0.6859999895095825, 0.6863333582878113, 0.6869999766349792, 0.6869999766349792, 0.687333345413208, 0.6890000104904175, 0.6903333067893982, 0.6913333535194397]}}, {"genotype": [[0], [1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [1, 4, 8, 0, 7, 1, 7, 0, 3, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 0, 4], [2, 1, 1, 0, 1, 1, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [82, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 7, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 14, 14, 8, 6, 1, 7, 7, 4, 3, 2, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.pow(tf.math.sqrt(grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.add(alpha, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.math.negative(alpha))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2907.318495855355, 51624.70369151202, 241407.183826443, 662763.2008568881, 1392997.8592656187, 2601476.9674085327], "accuracy": [0.09655263274908066, 0.10302469879388809, 0.1018359512090683, 0.10038304328918457, 0.10170386731624603, 0.0952318087220192], "val_loss": [10688.111328125, 82992.62276785714, 277608.3214285714, 655220.25, 1276514.2857142857, 2202174.9285714286], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [3, 4, 0, 8, 6, 7, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 3, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [30, 8, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [0, 0, 0, 1, 3, 3], [43, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 4, 2, 2, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.negative(grad)), grad), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [6614533.360537123, 124293821.34988773, 589232080.7121912, 1626858681.8713512, 3429821260.1812177, 6417855470.552371], "accuracy": [0.09628847241401672, 0.10302469879388809, 0.10170386731624603, 0.1002509593963623, 0.10170386731624603, 0.0952318087220192], "val_loss": [25246238.285714287, 201619021.7142857, 680072576.0, 1611562496.0, 3147040036.571429, 5437468964.571428], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [2, 4, 0, 8, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 2, 2, 1, 1, 2, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1], [9, 9, 7, 1, 7, 5, 5, 9], [3, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [0, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 2, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.pow(tf.math.negative(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2907.318495855355, 51624.70369151202, 241407.183826443, 662763.2008568881, 1392997.8592656187, 2601476.9674085327], "accuracy": [0.09655263274908066, 0.10302469879388809, 0.1018359512090683, 0.10038304328918457, 0.10170386731624603, 0.0952318087220192], "val_loss": [10688.111328125, 82992.62276785714, 277608.3214285714, 655220.25, 1276514.2857142857, 2202174.9285714286], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1], [1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [7, 4, 8, 8, 8, 1, 7, 0, 3, 3, 3, 2, 0, 3, 3, 1, 5, 1, 7, 8, 3, 1, 1, 9, 0, 4], [0, 2, 2, 2, 0, 1, 2, 2, 2, 2, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 0, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [31, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [7, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 12, 7, 5, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(sigma), tf.math.pow(tf.math.add(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [3, 8, 8, 7, 9, 1, 7, 0, 3, 3, 2, 2, 0, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 0, 4, 5, 9, 2], [0, 2, 2, 2, 0, 1, 2, 2, 2, 2, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [82, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [31, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 8, 4, 2, 11, 11, 8, 3, 3, 1, 1, 0, 1, 0, 12, 7, 5, 2], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad)))))))), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), grad)), tf.math.square(grad))), tf.math.square(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(2.32625358e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [3, 8, 8, 7, 9, 1, 7, 0, 3, 3, 2, 2, 0, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 0, 4, 5, 9, 2], [2, 2, 1, 0, 1, 1, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 5, 3, 5], [82, 54, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 11, 11, 7, 4, 2, 1, 1, 0, 1, 0, 12, 7, 5, 2], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, grad))), tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.square(tf.math.square(tf.math.add(beta, grad)))))), tf.math.add(beta, grad))), grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 8, 0, 8, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 2, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [30, 8, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [8, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [43, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 3, 2, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 12, 7, 5, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.negative(tf.math.pow(tf.math.add(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [7, 4, 0, 8, 8, 1, 7, 0, 2, 1, 3, 2, 5, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 0, 4, 0, 7, 4, 5, 4, 2, 8], [2, 2, 2, 2, 1, 1, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0, 0, 3, 0], [30, 8, 79, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [82, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 52, 52, 33, 19, 8, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 12, 7, 5, 2], "tree_depth": 56, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.negative(tf.math.sqrt(tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, grad), grad), tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(alpha, tf.math.square(alpha))), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))), tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.sqrt(tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.subtract(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))))))))), tf.math.add(alpha, tf.math.negative(tf.math.pow(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)))))))))), tf.math.add(tf.math.add(alpha, tf.math.pow(grad, tf.math.square(grad))), tf.math.add(alpha, grad)))), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))))))))))), tf.math.add(alpha, tf.math.pow(tf.math.add(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.sqrt(grad)), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(sigma), tf.math.pow(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.pow(alpha, sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0], [1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [7, 4, 8, 8, 8, 1, 7, 0, 3, 3, 3, 2, 0, 3, 3, 1, 5, 1, 7, 8, 3, 1, 1, 9, 0, 4], [0, 2, 2, 2, 0, 1, 2, 2, 2, 2, 2, 0, 3, 2, 3, 0], [39, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [82, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 2, 0, 1, 3, 3], [78, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07938185334205627, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [1, 4, 8, 0, 7, 1, 7, 0, 3, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 0, 4], [2, 2, 1, 0, 1, 1, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [82, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 5, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03971428424119949, "mapping_values": [1, 14, 14, 8, 6, 1, 7, 7, 4, 3, 2, 1, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.sqrt(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.add(alpha, tf.math.negative(alpha))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(sigma))", "other_info": {"loss": [2.3029017550771136, 2.3043432129278094, 2.3065273380392908, 2.308942809096732, 2.313510249587192, 2.318106053921336, 2.3197166356963566, 2.3270763687060225, 2.338993329098668, 2.3518016903927266, 2.4204739951155267, 5086588299901.916, 3.997522310983267, 8.930871352575018, 14.680571698052866], "accuracy": [0.09060890227556229, 0.08770307898521423, 0.09060890227556229, 0.08057060092687607, 0.07819310575723648, 0.07687227427959442, 0.07489103078842163, 0.0746268630027771, 0.07436270266771317, 0.07832518965005875, 0.0820235088467598, 0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9724324771336146, 1.9736354010445731, 1.9752226557050432, 1.9772629737854004, 1.9796020644051688, 1.9826395171029227, 1.9857114383152552, 1.990631103515625, 1.9986564772469657, 2.01679870060512, 2.680492401123047, 2.523026670728411, 5.6254972730364114, 10.548152378627233, 15.495979309082031], "val_accuracy": [0.03200000151991844, 0.0273333340883255, 0.02500000037252903, 0.026000000536441803, 0.03033333271741867, 0.03799999877810478, 0.054999999701976776, 0.07666666805744171, 0.09300000220537186, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [7, 4, 8, 8, 8, 1, 7, 0, 2, 1, 3, 2, 5, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 0, 4], [2, 2, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [30, 8, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 0, 1, 1], [1, 0, 0, 0, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [1, 4, 3], [39, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [0, 7], [88, 19], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 10, 10, 6, 4, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.pow(tf.math.sqrt(tf.math.sqrt(grad)), tf.math.add(alpha, grad)), tf.math.sqrt(tf.math.subtract(tf.math.add(alpha, grad), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3023377551599156, 2.302041976774027, 2.3025249226564712, 2.3025316264351927, 2.3038209214296796, 2.303812585754354], "accuracy": [0.09166556596755981, 0.08849557489156723, 0.09681680053472519, 0.09113723784685135, 0.08955223858356476, 0.09192973375320435], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], [1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [7, 4, 8, 8, 8, 1, 7, 0, 3, 3, 3, 2, 0, 3, 3, 1, 5, 1, 7, 8, 3, 1, 1, 9, 0, 4], [2, 2, 2, 2, 0, 1, 2, 2, 2, 2, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [1, 1, 1, 0, 0, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1], [2, 9, 7, 1, 7, 5, 5, 9], [1, 4, 3], [39, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, grad))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3023377551599156, 2.302041976774027, 2.3025249226564712, 2.3025316264351927, 2.3038209214296796, 2.303812585754354], "accuracy": [0.09166556596755981, 0.08849557489156723, 0.09681680053472519, 0.09113723784685135, 0.08955223858356476, 0.09192973375320435], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [3, 4, 0, 8, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 2, 1, 0, 1, 1, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1, 1], [0, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [8, 0, 19], [1, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 7, 7, 5, 2, 1, 2, 2, 2, 0, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.multiply(tf.math.pow(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))), tf.math.sqrt(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3023377551599156, 2.302041976774027, 2.3025249226564712, 2.3025316264351927, 2.3038209214296796, 2.303812585754354], "accuracy": [0.09166556596755981, 0.08849557489156723, 0.09681680053472519, 0.09113723784685135, 0.08955223858356476, 0.09192973375320435], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0], [3, 0, 0, 8, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 0, 3, 2, 3, 0, 3, 2, 3], [30, 8, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 0, 1], [2, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3, 2], [82, 0, 19], [0, 1, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 4, 0, 4, 7, 8, 4], [1, 0, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 5, 5, 3, 2, 0, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.math.negative(alpha)), grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.add(grad, tf.math.add(beta, tf.math.square(beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3023377551599156, 2.302041976774027, 2.3025249226564712, 2.3025316264351927, 2.3038209214296796, 2.303812585754354], "accuracy": [0.09166556596755981, 0.08849557489156723, 0.09681680053472519, 0.09113723784685135, 0.08955223858356476, 0.09192973375320435], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1], [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1], [5, 0, 1, 8, 8, 0, 2, 1, 1, 3, 3, 2, 0, 9, 3, 4, 5, 1, 7, 8, 7, 1, 1, 9, 9, 4], [2, 2, 2, 2, 1, 1, 2, 2, 0, 0, 2, 0, 3, 2, 3, 0], [30, 8, 39, 25, 98, 52, 94, 1], [0, 1, 1, 0, 0, 1, 1, 1], [1, 0, 0, 0, 1, 1, 1], [4, 9, 7, 1, 7, 5, 5, 9], [0, 4, 3], [82, 0, 19], [0, 1, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 2, 0, 1, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 3, 1, 1, 0, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, beta))", "other_info": {"loss": [2.3023377551599156, 2.302041976774027, 2.3025249226564712, 2.3025316264351927, 2.3038209214296796, 2.303812585754354], "accuracy": [0.09166556596755981, 0.08849557489156723, 0.09681680053472519, 0.09113723784685135, 0.08955223858356476, 0.09192973375320435], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]