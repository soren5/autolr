[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0], [2, 8, 2, 0, 6, 2, 1, 9, 2, 0, 8, 9], [1, 0, 3, 3, 0, 1, 2], [57, 62, 0, 81, 53, 45], [1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.8342857360839844, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 12, 5, 4, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, alpha))), tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))), tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.subtract(grad, tf.constant(9.25893264e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.math.negative(tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.add(beta, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.403547267651813, 2.2224426541456284, 1.9011781959170915, 1.4797809912843192, 1.1982170199957412, 1.0196190822976314, 0.9781306563760815, 0.893167524423739, 0.8779845850153717, 0.812943182616989, 0.785101493902966, 0.7457372601935105, 0.7343490648153137, 0.7214221744615451, 0.7228974789329854, 0.6959228622379587, 0.6736869939550385, 0.6509428845420568, 0.6469308178753287, 0.6304745134691977, 0.5852470439989742, 0.6258214187423676, 0.5880229506730686, 0.5593190079100018, 0.5677740538298194, 0.5552297608018819, 0.5445033538736734, 0.5392706943162916, 0.5213892660860876, 0.5206246218582453, 0.5073137121264488, 0.49582059263568967, 0.5083429826060148, 0.4963756650115489, 0.4784911788922291, 0.46405724181459407, 0.49629262659716933, 0.45626765891088866, 0.46641318633682016, 0.4257298920998846, 0.4558576810723676, 0.4354276009412757, 0.42983013032497025, 0.4137375874486912, 0.42707848230042494, 0.4243154008792234, 0.4160538840492278, 0.40694289401285777, 0.40354790569548404, 0.40069242409270406, 0.375766724355941, 0.3807257370170333, 0.4028853400744593, 0.38254684872316125, 0.3704676546905302, 0.37576528507421486, 0.3726208834930922, 0.3694676174943977, 0.365776893237106], "accuracy": [0.23378682136535645, 0.19204860925674438, 0.40166425704956055, 0.49808478355407715, 0.5737683176994324, 0.6280544400215149, 0.6441685557365417, 0.6656980514526367, 0.6664905548095703, 0.6901333928108215, 0.6984546184539795, 0.715889573097229, 0.7205125093460083, 0.7308149337768555, 0.7293620109558105, 0.7337207794189453, 0.7425703406333923, 0.7541936039924622, 0.7530049085617065, 0.7578919529914856, 0.7832518815994263, 0.7584202885627747, 0.7721568942070007, 0.7915731072425842, 0.7886672616004944, 0.7887993454933167, 0.7950072884559631, 0.8005547523498535, 0.800290584564209, 0.8039889335632324, 0.811649739742279, 0.8183859586715698, 0.8092722296714783, 0.8182538747787476, 0.8220842480659485, 0.8230088353157043, 0.8146876096725464, 0.829216718673706, 0.8265751004219055, 0.843481719493866, 0.82683926820755, 0.839519202709198, 0.8384625315666199, 0.8481045961380005, 0.8388587832450867, 0.8436138033866882, 0.8417646288871765, 0.8488970994949341, 0.8490291833877563, 0.8541803956031799, 0.8555012345314026, 0.8625016212463379, 0.8532558679580688, 0.8573504090309143, 0.8618412613868713, 0.8603883385658264, 0.8646149635314941, 0.8640866279602051, 0.8625016212463379], "val_loss": [1.9717375891549247, 1.4040358066558838, 1.0514236858912878, 0.8753667558942523, 0.7739652906145368, 0.6765506437846592, 0.6636742012841361, 0.6943997485297067, 0.637013145855495, 0.6615337303706578, 0.6248702832630703, 0.5616664886474609, 0.668986405645098, 0.5880342211042132, 0.5775163514273507, 0.5358802080154419, 0.5209070273808071, 0.5146250554493496, 0.5188700641904559, 0.5084900174822126, 0.5288613864353725, 0.47875278336661203, 0.46210527420043945, 0.4564085177012852, 0.46779446942465647, 0.468820469720023, 0.4238570247377668, 0.42935287952423096, 0.4428489293370928, 0.409321197441646, 0.43484839371272493, 0.44587903363364084, 0.42265877553394865, 0.4182923436164856, 0.40765321254730225, 0.4139486977032253, 0.3984764388629368, 0.3896635855947222, 0.3857202189309256, 0.40082019567489624, 0.3875027128628322, 0.37777696337018696, 0.37496126549584524, 0.38402882644108366, 0.3697624717439924, 0.3905860611370632, 0.3862223880631583, 0.3608944075448172, 0.3619848574910845, 0.361920816557748, 0.352382378918784, 0.4106186968939645, 0.3657641666276114, 0.3656393459865025, 0.35417044162750244, 0.3747674822807312, 0.4035391552107675, 0.35626234327043804, 0.34947653327669415], "val_accuracy": [0.1223333328962326, 0.5206666588783264, 0.5649999976158142, 0.6303333044052124, 0.6743333339691162, 0.690666675567627, 0.722000002861023, 0.6746666431427002, 0.7146666646003723, 0.7056666612625122, 0.737333357334137, 0.7513333559036255, 0.6976666450500488, 0.7383333444595337, 0.7283333539962769, 0.7716666460037231, 0.7796666622161865, 0.781333327293396, 0.7663333415985107, 0.7673333287239075, 0.7559999823570251, 0.7803333401679993, 0.7933333516120911, 0.7979999780654907, 0.7770000100135803, 0.8016666769981384, 0.8149999976158142, 0.8136666417121887, 0.8029999732971191, 0.8220000267028809, 0.812666654586792, 0.7956666946411133, 0.8046666383743286, 0.8180000185966492, 0.8230000138282776, 0.8246666789054871, 0.8230000138282776, 0.8263333439826965, 0.8320000171661377, 0.8220000267028809, 0.8353333473205566, 0.8366666436195374, 0.8396666646003723, 0.8333333134651184, 0.8420000076293945, 0.824999988079071, 0.8326666951179504, 0.843999981880188, 0.8486666679382324, 0.8486666679382324, 0.846666693687439, 0.8240000009536743, 0.8413333296775818, 0.8526666760444641, 0.8446666598320007, 0.8349999785423279, 0.8230000138282776, 0.843999981880188, 0.8493333458900452]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [2, 8, 2, 0, 6, 2, 1, 9, 2, 0, 8, 9], [3, 2, 3, 3, 0, 2, 2], [57, 49, 0, 81, 53, 45], [0, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.8174285888671875, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 9, 6, 2, 2, 2, 1, 1, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, grad)), tf.math.add(beta, beta))))), tf.math.divide_no_nan(tf.math.add(grad, tf.math.subtract(grad, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.4035613699643337, 2.2195034531428437, 1.942579375297764, 1.4549831593309048, 1.2058777476440348, 1.0621353890272007, 0.9551887366403568, 0.8270751033492486, 0.8230853826614529, 0.8363142804053355, 0.7518566359366409, 0.7981286488189012, 0.7328638765065898, 0.7520511086118409, 0.7081760235151453, 0.6877806566930198, 0.6594958262531088, 0.6490920827436315, 0.6445994988219644, 0.6212167670745355, 0.5886342368499399, 0.6055984195701167, 0.5883662741119048, 0.5810214279035236, 0.5582915772032571, 0.5629298108491002, 0.5369116940502761, 0.5333162926845011, 0.5181480611099654, 0.531274338601335, 0.49227597598213296, 0.5091393976801375, 0.48561774057057777, 0.4777118151906837, 0.48650097680869686, 0.4605534115897005, 0.4675166331553393, 0.45912135250422587, 0.46557957537422057, 0.4385012387520822, 0.4511233771505483, 0.43548622024356887, 0.4253157145902072, 0.40175127359177254, 0.41016584389544497, 0.43613584614968365, 0.40548687809179046, 0.39615010132312206, 0.42491595375618174, 0.3993871063643506, 0.3785815716789635, 0.3917831674842094, 0.3976163029780934, 0.3733481908195668, 0.38778026415970757], "accuracy": [0.2339189052581787, 0.19561484456062317, 0.39426758885383606, 0.5091797709465027, 0.5692775249481201, 0.607449471950531, 0.6415268778800964, 0.6893408894538879, 0.6880200505256653, 0.6826046705245972, 0.7145687341690063, 0.7043983340263367, 0.7236824631690979, 0.7153612375259399, 0.7333245277404785, 0.735041618347168, 0.7474573850631714, 0.7528728246688843, 0.7532690763473511, 0.7658169269561768, 0.7792893648147583, 0.7683265209197998, 0.772288978099823, 0.783119797706604, 0.787082314491272, 0.7860256433486938, 0.7998943328857422, 0.8016114234924316, 0.8037247657775879, 0.7991018295288086, 0.8236692547798157, 0.8156121969223022, 0.8169330358505249, 0.8204993009567261, 0.8181217908859253, 0.8274996876716614, 0.8305375576019287, 0.8335754871368408, 0.8247259259223938, 0.8372738361358643, 0.8325188159942627, 0.8350284099578857, 0.8391229510307312, 0.8519350290298462, 0.8411042094230652, 0.8401796221733093, 0.8477083444595337, 0.852859616279602, 0.8418967127799988, 0.8504821062088013, 0.856689989566803, 0.8568220734596252, 0.8510104417800903, 0.8623695969581604, 0.8549728989601135], "val_loss": [1.9716764177594865, 1.403557402747018, 1.5152882848467146, 1.0142079762050085, 0.7800235237394061, 0.8253555979047503, 0.6835888794490269, 0.6494666508265904, 0.6988362755094256, 0.6001230137688773, 0.6068492787224906, 0.6432718549455915, 0.6969269684382847, 0.5691503116062709, 0.5865766320909772, 0.5369165965488979, 0.5154131140027728, 0.520393967628479, 0.5072498662131173, 0.5005397115434919, 0.4775992121015276, 0.4770228692463466, 0.46796962193080355, 0.4688659736088344, 0.4523454223360334, 0.45838723863874165, 0.43213112013680594, 0.43907661948885235, 0.45035602365221294, 0.4183126517704555, 0.4594147205352783, 0.4319327729088919, 0.4158779297556196, 0.4156839166368757, 0.4038166914667402, 0.4231697065489633, 0.4055065853255136, 0.42823392152786255, 0.3966693878173828, 0.42415196555001394, 0.38366711139678955, 0.3776127185140337, 0.3730446525982448, 0.3774961829185486, 0.3802844541413443, 0.37248373883111136, 0.37724240337099346, 0.3626291751861572, 0.3610229917934963, 0.3611058677945818, 0.3629939556121826, 0.39664519684655325, 0.3584250211715698, 0.3767010825020926, 0.35415554898125784], "val_accuracy": [0.12466666847467422, 0.5243333578109741, 0.4193333387374878, 0.597000002861023, 0.6700000166893005, 0.6190000176429749, 0.7200000286102295, 0.7003333568572998, 0.6903333067893982, 0.7433333396911621, 0.7253333330154419, 0.7103333473205566, 0.687333345413208, 0.7490000128746033, 0.7236666679382324, 0.7743333578109741, 0.7820000052452087, 0.7736666798591614, 0.7746666669845581, 0.7803333401679993, 0.7853333353996277, 0.7863333225250244, 0.7879999876022339, 0.8006666898727417, 0.7906666398048401, 0.7973333597183228, 0.8146666884422302, 0.8086666464805603, 0.8016666769981384, 0.8273333311080933, 0.8006666898727417, 0.8059999942779541, 0.8116666674613953, 0.8203333616256714, 0.8276666402816772, 0.8180000185966492, 0.8216666579246521, 0.8056666851043701, 0.8306666612625122, 0.8066666722297668, 0.8360000252723694, 0.8353333473205566, 0.8386666774749756, 0.8389999866485596, 0.8336666822433472, 0.8346666693687439, 0.8370000123977661, 0.8456666469573975, 0.843666672706604, 0.8473333120346069, 0.8463333249092102, 0.8379999995231628, 0.8423333168029785, 0.8460000157356262, 0.8453333377838135]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [8, 8, 2, 0, 0, 2, 1, 9, 2, 0, 8, 9], [3, 3, 3, 1, 0, 2, 2], [20, 56, 47], [0, 0, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.8171428442001343, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, grad)), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.4035327499411316, 2.21868295594607, 1.966889503436428, 1.5218931229012815, 1.1103628123551312, 0.9835526160418538, 0.958584278715663, 0.9240613256888288, 0.8313794568734099, 0.8153288269858586, 0.7647246658416267, 0.7742834369094853, 0.7336386443365361, 0.7183201658081747, 0.7384534173984223, 0.6809101136306085, 0.6463712810478064, 0.6627511758027123, 0.624548910032914, 0.6213767083565699, 0.6117320746683316, 0.5785146741945163, 0.5917783621563305, 0.5785907998045343, 0.5772936442320011, 0.5685932917239691, 0.5331683082981132, 0.5348439913628329, 0.5279007259613141, 0.5477402088444042, 0.515151150698801, 0.5003301098818761, 0.5119883384781428, 0.4888797615339979, 0.4813324850445741, 0.47984959878516537], "accuracy": [0.2339189052581787, 0.1946902722120285, 0.3851538896560669, 0.48368775844573975, 0.6009774208068848, 0.6445648074150085, 0.6544709801673889, 0.6487914323806763, 0.683529257774353, 0.6806234121322632, 0.7055870890617371, 0.7037379741668701, 0.7195879220962524, 0.722757875919342, 0.7215691208839417, 0.7424382567405701, 0.7454761862754822, 0.7478536367416382, 0.759080708026886, 0.761590301990509, 0.765949010848999, 0.7781006693840027, 0.7757231593132019, 0.7796856164932251, 0.780610203742981, 0.789988100528717, 0.7993659973144531, 0.7992339134216309, 0.8016114234924316, 0.7931581139564514, 0.8086118102073669, 0.8169330358505249, 0.8068947196006775, 0.819442629814148, 0.8214238286018372, 0.8189142942428589], "val_loss": [1.9716416086469377, 1.4076728480202811, 1.3085134710584367, 0.8986971378326416, 0.8094719478062221, 0.7683963435036796, 0.7080173662730626, 0.6888720648629325, 0.6193854127611432, 0.6124075821467808, 0.6456082037517002, 0.5752951928547451, 0.6393177849905831, 0.6590678180967059, 0.5361551897866386, 0.5238437311989921, 0.5224531378064837, 0.506290146282741, 0.5140387330736432, 0.4983467715127127, 0.4964841604232788, 0.46023573194231304, 0.49956767899649485, 0.4969145229884556, 0.4905718224389212, 0.4498947858810425, 0.428366346018655, 0.43992327792303904, 0.4314947554043361, 0.4495713029588972, 0.4134875791413443, 0.459600635937282, 0.4254388724054609, 0.4388390268598284, 0.40334060362407137, 0.41590072427477154], "val_accuracy": [0.12566666305065155, 0.5170000195503235, 0.4946666657924652, 0.6433333158493042, 0.6349999904632568, 0.67166668176651, 0.6953333616256714, 0.6769999861717224, 0.7226666808128357, 0.734000027179718, 0.7183333039283752, 0.7396666407585144, 0.703000009059906, 0.6926666498184204, 0.7596666812896729, 0.7773333191871643, 0.7620000243186951, 0.7756666541099548, 0.7789999842643738, 0.7723333239555359, 0.7933333516120911, 0.7896666526794434, 0.7953333258628845, 0.7816666960716248, 0.768666684627533, 0.8063333630561829, 0.8190000057220459, 0.8086666464805603, 0.8136666417121887, 0.8013333082199097, 0.8240000009536743, 0.7866666913032532, 0.8063333630561829, 0.8106666803359985, 0.8236666917800903, 0.8220000267028809]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [7, 9, 7, 0, 6, 4, 1, 2, 5, 8, 5, 4, 3, 3, 9, 3, 8, 3, 4, 3, 6, 5, 3, 0, 8, 1], [2, 0, 3, 3, 3, 2, 2, 1, 3, 0, 4, 0, 2], [83, 73, 47], [0, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.8108571171760559, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 2, 2, 1, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, beta), tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.4035768194945577, 2.218760310997344, 1.9582731819675583, 1.5129663209086317, 1.1771507388596616, 1.0690544150398706, 1.0156483976769488, 0.8507424676423028, 0.8220919515588705, 0.794668289034547, 0.7785342784448149, 0.7431542041232132, 0.7203663559621902, 0.6796814976445814, 0.6840478559652607, 0.6837674757792194, 0.6404822197304961, 0.6261179019840811, 0.6370767971165916, 0.5919248402992558, 0.5836641446096456, 0.5585684912977218, 0.5750875004987045, 0.5667430317129488, 0.5441752610630474, 0.5317641819598825, 0.5268358462884394, 0.5047882362607763, 0.501278970377273, 0.5038933659021834, 0.4929670164645261, 0.4982200761229339], "accuracy": [0.2339189052581787, 0.19495442509651184, 0.39189010858535767, 0.4939902126789093, 0.5806366205215454, 0.6147140264511108, 0.635451078414917, 0.6775855422019958, 0.6905296444892883, 0.6977941989898682, 0.7080966830253601, 0.7160216569900513, 0.7250033020973206, 0.7353057861328125, 0.7429665923118591, 0.7408532500267029, 0.7541936039924622, 0.7586844563484192, 0.7618544697761536, 0.778761088848114, 0.7791573405265808, 0.7898560166358948, 0.7817989587783813, 0.7858935594558716, 0.7972526550292969, 0.8025360107421875, 0.7998943328857422, 0.813498854637146, 0.8105930685997009, 0.8150838613510132, 0.8182538747787476, 0.8191784620285034], "val_loss": [1.971681731087821, 1.4082799979618617, 1.3223052706037248, 1.0117565563746862, 0.8026504857199532, 0.9059909071241107, 0.6427372353417533, 0.6941952194486346, 0.6247628075735909, 0.6120632375989642, 0.6371872595378331, 0.5675127846854073, 0.6125119413648333, 0.5379256861550468, 0.5481504883084979, 0.5111861739839826, 0.49888949734824045, 0.5029641900743756, 0.5083410569599697, 0.48817823614392963, 0.45809291090284077, 0.4618494851248605, 0.4679487262453352, 0.4610868181501116, 0.46621453762054443, 0.4418685095650809, 0.41172002043042866, 0.41523230927331106, 0.42588309730802265, 0.42975140469414846, 0.44170860733304707, 0.42361689465386526], "val_accuracy": [0.125, 0.5173333287239075, 0.47966668009757996, 0.6140000224113464, 0.6480000019073486, 0.5953333377838135, 0.7110000252723694, 0.7123333215713501, 0.7239999771118164, 0.750333309173584, 0.7133333086967468, 0.7490000128746033, 0.7360000014305115, 0.7706666588783264, 0.7586666941642761, 0.7839999794960022, 0.7846666574478149, 0.7836666703224182, 0.7633333206176758, 0.7823333144187927, 0.7976666688919067, 0.7923333048820496, 0.7879999876022339, 0.7923333048820496, 0.7726666927337646, 0.8090000152587891, 0.8213333487510681, 0.8136666417121887, 0.8153333067893982, 0.812333345413208, 0.8109999895095825, 0.8153333067893982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [2, 5, 0, 0, 6, 4, 1, 4, 5, 8, 5, 4, 3, 3, 9, 3, 8, 3, 4, 3, 6, 5, 3, 0, 8, 1], [3, 2, 3, 1, 0, 2, 2], [83, 56, 47], [0, 0, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.2980000078678131, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 11, 6, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.square(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.pow(tf.math.subtract(tf.math.add(beta, beta), tf.math.pow(grad, tf.math.square(tf.math.add(beta, tf.math.sqrt(alpha))))), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), beta)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.8683719447953053, 2.3118254263576437, 2.305365905911616, 2.304152896359864, 2.303216281898931, 2.3030825362875005, 2.3028632295822913, 2.3031815062613457, 2.3029017364974065, 2.3008571645413975, 2.426185946722135, 2.305245769053812, 2.303217765661735, 2.303076993771957, 2.3029257615071406], "accuracy": [0.15612204372882843, 0.09972262382507324, 0.09549596905708313, 0.0936468094587326, 0.09694888442754745, 0.09840179979801178, 0.09721305221319199, 0.09509972482919693, 0.0952318087220192, 0.11530841141939163, 0.18584071099758148, 0.09919429570436478, 0.09998679161071777, 0.10091137140989304, 0.09800554811954498], "val_loss": [1.9853482246398926, 1.9763305527823312, 1.974128178187779, 1.9738212312970842, 1.9736601284572057, 1.973646981375558, 1.9735746383666992, 1.9733715057373047, 1.9729212352207728, 1.963963168007987, 1.9777963502066476, 1.9740945271083288, 1.9737891469682967, 1.9736787932259696, 1.973703384399414], "val_accuracy": [0.09833333641290665, 0.09866666793823242, 0.09966666996479034, 0.09700000286102295, 0.09833333641290665, 0.1003333330154419, 0.0989999994635582, 0.09933333098888397, 0.10333333164453506, 0.19099999964237213, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.10066666454076767, 0.10066666454076767]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [7, 5, 0, 0, 6, 4, 1, 4, 5, 8, 5, 4, 3, 3, 9, 3, 8, 3, 4, 3, 6, 5, 3, 0, 8, 1], [0, 2, 3, 1, 0, 2, 2], [83, 56, 47], [0, 0, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.17599999904632568, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.negative(tf.math.add(beta, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.negative(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.868355819436112, 2.311832866994948, 2.3053626629024873, 2.3041523560682826, 2.303222543858518, 2.303092545994426, 2.302896642823497, 2.303216950736892, 2.3029677607143686], "accuracy": [0.15612204372882843, 0.09919429570436478, 0.09576013684272766, 0.0940430611371994, 0.09708096832036972, 0.09853387624025345, 0.09708096832036972, 0.09536388516426086, 0.0952318087220192], "val_loss": [1.985351290021624, 1.9763400895254952, 1.9741313798086983, 1.973825454711914, 1.9736557006835938, 1.9736359460013253, 1.9736189161028181, 1.9734376498631068, 1.9732836995806013], "val_accuracy": [0.09833333641290665, 0.09733333438634872, 0.09966666996479034, 0.1276666671037674, 0.09833333641290665, 0.1003333330154419, 0.0963333323597908, 0.09933333098888397, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1], [2, 8, 2, 0, 6, 2, 1, 9, 2, 0, 8, 9], [3, 2, 3, 3, 0, 3, 2, 3, 5, 3, 5, 0, 3, 1, 1, 3, 3, 3, 3], [57, 50, 91, 97], [0, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [6, 7], [88, 19], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 2, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 13, 7, 6, 1], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.negative(tf.math.pow(tf.math.add(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(alpha, sigma), sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1], [2, 8, 2, 0, 0, 2, 1, 9, 2, 0, 8, 9], [3, 2, 3, 3, 0, 2, 2], [3, 49, 0, 81, 53, 45], [0, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [5, 3, 0, 4, 2, 1, 2, 3], [0, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 10, 5, 2, 2, 2, 1, 1, 0, 2, 1, 1, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.negative(grad), tf.math.add(beta, beta))))), tf.math.negative(tf.math.add(grad, tf.math.subtract(tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32), tf.math.add(tf.math.negative(grad), tf.math.add(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302523137115138, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.1002509593963623, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [7, 3, 3, 1, 6, 4, 1, 4, 5, 8, 5, 4, 3, 3, 9, 3, 8, 3, 4, 3, 6, 5, 3, 0, 8, 1, 1, 0, 0, 5], [3, 3, 3, 1, 0, 2, 2, 0, 0, 4, 4, 4, 3, 2, 1, 2, 1, 2, 0], [83, 56, 47, 44, 28], [0, 0, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [2, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 49, 49, 30, 19, 5, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 40, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.divide_no_nan(tf.math.pow(tf.math.subtract(tf.math.add(beta, grad), tf.math.pow(grad, tf.math.square(tf.math.add(beta, tf.math.sqrt(alpha))))), tf.math.square(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32))), beta), beta)), tf.math.pow(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.multiply(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), grad)))))), tf.math.sqrt(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.math.multiply(tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)))), tf.math.negative(tf.math.sqrt(tf.math.subtract(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, beta), tf.math.add(beta, tf.math.negative(alpha)))), tf.math.negative(tf.math.add(beta, beta)))))), alpha), tf.math.square(tf.math.add(beta, beta)))), tf.math.add(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302255721061363, 2.302267175072834, 2.302268894703444, 2.302488172499889, 2.3040577836591556, 2.3105036204658904], "accuracy": [0.10500594228506088, 0.10540219396352768, 0.10315678268671036, 0.10077928751707077, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9736979348318917, 1.9736963680812292, 1.9739364896501814, 1.974644456590925, 1.977508885519845, 1.9911586897713798], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1], [7, 8, 0, 0, 6, 4, 1, 4, 5, 8, 5, 4, 3, 3, 9, 3, 8, 3, 4, 3, 6, 5, 3, 0, 8, 1, 2, 2, 9, 5, 5, 0, 6, 5], [3, 2, 1, 0, 3, 2, 2, 1, 1, 5, 2, 5, 3, 0, 2, 0, 5], [83, 56, 47, 16, 59], [0, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [7, 0, 8, 9, 7], [7, 7], [88, 19], [0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [0, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 51, 51, 34, 17, 5, 3, 3, 1, 2, 0, 2, 1, 1, 1], "tree_depth": 46, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.negative(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.pow(tf.math.subtract(tf.math.add(beta, beta), tf.math.pow(alpha, tf.math.square(tf.math.add(beta, tf.math.sqrt(tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))))), tf.math.square(grad))))))))), tf.math.pow(tf.math.multiply(tf.math.multiply(tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.sqrt(tf.math.multiply(beta, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.negative(tf.math.sqrt(beta))), alpha))), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, grad)))), tf.math.add(tf.math.add(beta, tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))))))), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.math.negative(tf.math.add(beta, beta))), tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [97218559.8860277, 1820547994.2559767, 8464389317.469291, 23594236545.09893, 50463954917.21992, 93304316041.41699], "accuracy": [0.09774138033390045, 0.10408136248588562, 0.09959053993225098, 0.09681680053472519, 0.10210011899471283, 0.09959053993225098], "val_loss": [368101211.4285714, 2942741211.428571, 9929427529.142857, 23533703168.0, 45960715117.71429, 79416751835.42857], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [9, 2, 4, 0, 1, 5, 0, 4, 5, 8, 8, 4, 3, 3, 2, 3, 2, 3, 4, 3, 6, 5, 3, 2, 8, 1, 7, 9, 4, 9], [3, 2, 3, 1, 0, 2, 2], [57, 50, 91, 97], [0, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 1, 0, 1, 2, 2, 1, 1, 0, 8, 4, 4, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1002509593963623, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1], [7, 9, 2, 0, 6, 4, 1, 2, 5, 8, 5, 4, 3, 3, 9, 3, 8, 3, 4, 3, 6, 5, 3, 0, 8, 1], [3, 2, 3, 1, 0, 2, 2, 1, 3, 2, 4, 0, 5], [83, 56, 47, 16], [0, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 35, 35, 22, 13, 4, 2, 2, 1, 1, 0, 3, 2, 1, 0], "tree_depth": 46, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(grad, tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.math.pow(tf.math.subtract(tf.math.add(tf.math.square(beta), tf.math.sqrt(tf.math.square(tf.math.pow(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(beta, tf.math.multiply(alpha, tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))), tf.math.multiply(tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.multiply(beta, beta)))))))), alpha), grad), tf.math.pow(tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))), tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.negative(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07819310575723648, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1], [2, 8, 5, 0, 6, 9, 1, 9, 2, 0, 8, 9], [3, 0, 3, 3, 3, 2, 2, 1, 3, 0, 4, 0, 2], [57, 49, 0, 81, 53, 45], [0, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 1, 2, 2, 1, 1, 0, 8, 4, 4, 2], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.negative(grad)))))), tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [2.3024612029844884, 2.3025093060978303, 2.302492241613176, 2.302475727213813, 2.3025271745484504, 2.3025273013313323], "accuracy": [0.10474177449941635, 0.1080438494682312, 0.10791176557540894, 0.10460969805717468, 0.10091137140989304, 0.10236428678035736], "val_loss": [1.9736486162458147, 1.973639692578997, 1.9736512729099818, 1.973653929574149, 1.9736507279532296, 1.9736523628234863], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1], [7, 6, 4, 0, 1, 5, 0, 4, 5, 8, 8, 4, 3, 3, 2, 3, 2, 3, 4, 3, 6, 5, 3, 2, 8, 1, 7, 9, 4, 9], [1, 2, 3, 3, 0, 2, 2], [57, 50, 91, 97], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 9, 6, 1, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.negative(alpha), tf.math.add(beta, beta))), tf.math.subtract(tf.math.square(grad), tf.math.negative(grad)))), tf.math.pow(tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07819310575723648, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [0, 7, 2, 0, 6, 4, 1, 2, 5, 8, 5, 4, 3, 3, 9, 3, 8, 3, 4, 3, 6, 5, 3, 0, 8, 1], [3, 2, 3, 1, 0, 2, 2], [83, 56, 47], [0, 0, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 5, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.07257142663002014, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, beta)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(alpha))", "other_info": {"loss": [2.3049670453588678, 2.303854124468268, 2.3064958992541, 2.30906152060759, 2.311648334510228, 2.3149844773488666, 2.3194804004847556, 2.322471077825415, 2.330938913787219, 2.3413543283600835, 2.371980818334178, 724585830222310.4, 3.011781400771992, 6.433378766414717, 12.097297508986461, 17.846555301463205], "accuracy": [0.08611807972192764, 0.08625016361474991, 0.0812310129404068, 0.08189142495393753, 0.08109892904758453, 0.08334434032440186, 0.07898560166358948, 0.0804385170340538, 0.07740060985088348, 0.07885351777076721, 0.07924976944923401, 0.09232597798109055, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9724454879760742, 1.9736738204956055, 1.975130353655134, 1.9770241464887346, 1.9794415746416365, 1.9815477643694197, 1.98440796988351, 1.988123553139823, 1.9939425332205636, 2.005105495452881, 2.0450879505702426, 2.2634883608136858, 3.6788919993809293, 8.332868576049805, 13.264387130737305, 18.213660648890905], "val_accuracy": [0.032999999821186066, 0.02666666731238365, 0.02500000037252903, 0.02433333359658718, 0.02666666731238365, 0.03466666489839554, 0.04766666516661644, 0.05766666680574417, 0.07666666805744171, 0.0949999988079071, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [2, 8, 2, 0, 6, 2, 1, 9, 2, 2, 0, 9, 4, 2, 3, 6, 3, 1, 2, 8, 0, 9], [2, 0, 3, 3, 3, 2, 2, 1, 3, 0, 4, 0, 2], [57, 13, 0, 81, 53, 45], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 5, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [85, 57]], "fitness": -0.07257142663002014, "mapping_values": [1, 1, 1, 0, 1, 0, 18, 18, 12, 6, 3, 2, 1, 1, 0, 0, 3, 2, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), beta), tf.math.add(tf.math.add(tf.math.negative(tf.constant(6.27124987e-04, shape=shape, dtype=tf.float32)), tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), grad))), tf.math.add(beta, grad)))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(alpha))", "other_info": {"loss": [2.3049670768498967, 2.3038539805227756, 2.3064956518920687, 2.3090602746650353, 2.3116461348933566, 2.3149871222173943, 2.319483112996013, 2.3224735205215374, 2.330940636661405, 2.3413568351719407, 2.371961644171031, 392603749063190.0, 3.0020922950985978, 6.39384430583127, 12.05431943260337, 17.803564997239594], "accuracy": [0.08611807972192764, 0.08625016361474991, 0.0812310129404068, 0.08189142495393753, 0.08109892904758453, 0.08321225643157959, 0.07911768555641174, 0.0804385170340538, 0.07740060985088348, 0.07885351777076721, 0.07938185334205627, 0.09219389408826828, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1.9724454879760742, 1.9736741610935755, 1.9751299449375697, 1.9770214898245675, 1.9794417108808244, 1.9815491267613001, 1.9844111033848353, 1.9881234169006348, 1.9939449174063546, 2.005105359213693, 2.04498713357108, 2.2609641211373463, 3.6525068283081055, 8.296027047293526, 13.227511269705635, 18.176783425467356], "val_accuracy": [0.032999999821186066, 0.02666666731238365, 0.02500000037252903, 0.02433333359658718, 0.02666666731238365, 0.03466666489839554, 0.04800000041723251, 0.05766666680574417, 0.07666666805744171, 0.0949999988079071, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1], [3, 8, 2, 0, 6, 2, 1, 0, 4, 0, 8, 9, 0, 8, 6, 3, 3, 9, 8, 0, 5, 3], [2, 0, 3, 3, 3, 2, 2, 1, 2, 0, 4, 0, 2], [57, 49, 57, 81, 53, 45], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [5, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [85, 57]], "fitness": -0.06400000303983688, "mapping_values": [1, 1, 1, 0, 1, 0, 29, 29, 21, 8, 3, 2, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 38, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.sqrt(tf.math.add(tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.negative(tf.math.pow(tf.math.negative(tf.math.sqrt(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))))))))), grad)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta)), tf.math.sqrt(tf.math.add(beta, tf.math.negative(tf.math.square(tf.math.add(beta, alpha)))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.303881922764565, 2.3005177709861377, 2.300836688318682, 2.300494811034489, 2.300251183965187, 2.3007690462186243, 2.3004813621608164, 2.298787754004925, 2.2999586113660313, 2.299737238943805, 2.2996284728037004, 2.299748693962989, 2.3009104728383822, 2.3002169323698123], "accuracy": [0.0882314071059227, 0.0944393053650856, 0.09417514503002167, 0.09259014576673508, 0.1018359512090683, 0.09826971590518951, 0.09826971590518951, 0.10051512718200684, 0.10434553027153015, 0.09826971590518951, 0.1010434553027153, 0.09972262382507324, 0.09760929644107819, 0.09285431355237961], "val_loss": [1.970358099256243, 1.9700078964233398, 1.9697656631469727, 1.969595159803118, 1.9696217264447893, 1.9696531295776367, 1.9696128027779716, 1.9695967265537806, 1.969618661063058, 1.9697363036019462, 1.9698750632149833, 1.970149040222168, 1.9704321452549525, 1.9706132071358817], "val_accuracy": [0.04633333161473274, 0.05166666582226753, 0.0533333346247673, 0.056333333253860474, 0.05766666680574417, 0.06466666609048843, 0.06666667014360428, 0.06966666877269745, 0.07000000029802322, 0.06800000369548798, 0.06566666811704636, 0.06433333456516266, 0.06266666948795319, 0.06433333456516266]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1], [7, 8, 4, 0, 1, 5, 0, 4, 5, 8, 8, 4, 3, 3, 2, 3, 2, 3, 4, 3, 6, 5, 3, 2, 8, 1, 7, 9, 4, 9], [2, 0, 3, 3, 3, 2, 2, 1, 3, 0, 4, 0, 2], [57, 50, 91, 97], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [2, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.304377566554118, 2.301753332554751, 2.3025986812275634, 2.302826028159266, 2.3025444178706573, 2.3029934105352248], "accuracy": [0.08730682730674744, 0.08915598690509796, 0.08955223858356476, 0.08994849026203156, 0.09536388516426086, 0.09391097724437714], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1], [6, 8, 2, 0, 6, 2, 1, 9, 4, 0, 8, 9, 2, 8, 6, 3, 3, 9, 8, 0, 5, 3], [3, 2, 3, 1, 0, 2, 2], [83, 56, 47], [0, 0, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 1, 0, 1, 3, 3], [48, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 10, 6, 2, 2, 2, 1, 1, 0, 4, 2, 2, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.add(beta, grad))), beta)), tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.subtract(alpha, tf.math.add(beta, tf.constant(9.98850958e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)), tf.math.negative(beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, alpha))", "other_info": {"loss": [2.304377566554118, 2.301753332554751, 2.3025986812275634, 2.302826028159266, 2.3025444178706573, 2.3029934105352248], "accuracy": [0.08730682730674744, 0.08915598690509796, 0.08955223858356476, 0.08994849026203156, 0.09536388516426086, 0.09391097724437714], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0], [1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1], [7, 8, 4, 0, 1, 5, 0, 4, 5, 8, 8, 4, 3, 3, 2, 3, 2, 3, 4, 3, 6, 5, 3, 2, 8, 1, 7, 9, 4, 9], [3, 2, 3, 3, 0, 2, 2], [57, 49, 0, 81, 53, 45], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.304377566554118, 2.301753332554751, 2.3025986812275634, 2.302826028159266, 2.3025444178706573, 2.3029934105352248], "accuracy": [0.08730682730674744, 0.08915598690509796, 0.08955223858356476, 0.08994849026203156, 0.09536388516426086, 0.09391097724437714], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]