[{"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 0, 0], [0, 1, 1], [2], [3, 4], [8], [0], [1], [], [5], [], [0, 0, 1, 0, 1, 1, 0, 1, 1], [6, 3, 0, 5, 7], [1, 0, 0, 3], [28, 57]], "fitness": -0.7922857403755188, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 6, 3, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.2898137356863044, 2.2551301688628977, 2.2142421400006955, 2.1558584954366706, 2.0700238446958816, 1.9517827670587728, 1.8047052148373812, 1.6413028312160858, 1.4927296933874619, 1.3784157166060929, 1.278552551263863, 1.2013524316163693, 1.1558742380539, 1.098717062543522, 1.0654507193976641, 1.02463232392349, 0.9943379027858276, 0.9571378143897161, 0.9404259682914065, 0.9346477861464881, 0.9067591998901791, 0.8790630788504565, 0.864388279328493, 0.8659593294545754, 0.8511828286001286, 0.8401163959657479, 0.8382567618942185, 0.8138769646960636, 0.8098805667922292, 0.8021957207318106, 0.7921175025221442, 0.7838476268276169, 0.7825704064146874, 0.7695794175046231, 0.7679509230262143, 0.7612014612139428, 0.7518950863174869, 0.7433734737949727, 0.7443320429273144, 0.7315971076669568, 0.7333458505522668, 0.7155738452941734, 0.7202008710781723, 0.7200075255771119, 0.7114583565779113, 0.7055105504468763, 0.7037450379352874, 0.6970409257710177, 0.7014737535366969, 0.69397158416318, 0.6996357769085007, 0.6869390452416692, 0.6811994768609271, 0.6810029719043103, 0.674198218553042, 0.6757095061147124, 0.678594738469384, 0.6740158677274336, 0.6611755298758857, 0.6630427304622346, 0.6545212845981176, 0.6624951373001903, 0.6662517982136383], "accuracy": [0.1262712925672531, 0.2110685557126999, 0.2875445783138275, 0.34301942586898804, 0.381719708442688, 0.41791045665740967, 0.4567428231239319, 0.4908202290534973, 0.5227842926979065, 0.5448421835899353, 0.5634658336639404, 0.5848633050918579, 0.5964865684509277, 0.6148461103439331, 0.6255448460578918, 0.6370360851287842, 0.6561880707740784, 0.6583014130592346, 0.6686038970947266, 0.6626601219177246, 0.6712455153465271, 0.6885483860969543, 0.6890767216682434, 0.6861709356307983, 0.689869225025177, 0.6939638257026672, 0.6975300312042236, 0.7040021419525146, 0.7083608508110046, 0.7055870890617371, 0.7083608508110046, 0.7128516435623169, 0.7185312509536743, 0.7226257920265198, 0.7172104120254517, 0.724210798740387, 0.7250033020973206, 0.7251353859901428, 0.72672039270401, 0.7273808121681213, 0.7271166443824768, 0.7353057861328125, 0.7317395210266113, 0.735569953918457, 0.7347774505615234, 0.7397965788841248, 0.7318716049194336, 0.741909921169281, 0.7388719916343689, 0.744419515132904, 0.7374191284179688, 0.7442874312400818, 0.7445515990257263, 0.7436270117759705, 0.7504953145980835, 0.7448157668113708, 0.7486461400985718, 0.743891179561615, 0.7515519857406616, 0.7506273984909058, 0.7541936039924622, 0.7491744756698608, 0.7520803213119507], "val_loss": [1.941331045968192, 1.9069713865007674, 1.8608533314296178, 1.793715272630964, 1.6944796017238073, 1.5608378137860979, 1.402749470302037, 1.2434756755828857, 1.1071577072143555, 1.0042594160352434, 0.9249151434217181, 0.8657028675079346, 0.820413487298148, 0.7832693542752948, 0.7557246514729091, 0.7327228103365216, 0.7134348154067993, 0.6956830535616193, 0.6823136295591082, 0.667789237839835, 0.6560635907309396, 0.646122898374285, 0.6344932828630719, 0.6311565296990531, 0.6202987943376813, 0.6127371106828962, 0.6075129338673183, 0.5978339569909232, 0.5950894015175956, 0.5893558944974627, 0.5840609414236886, 0.5797944920403617, 0.5750926051821027, 0.572617769241333, 0.5685044867651803, 0.5628502368927002, 0.5593587671007428, 0.5562465701784406, 0.5533685513905117, 0.5506896291460309, 0.5462408065795898, 0.5452148573739188, 0.5409197977610997, 0.5386543444224766, 0.5352111373628888, 0.5341111591884068, 0.5294452565056937, 0.5259926319122314, 0.5258017267499652, 0.5236388274601528, 0.5220393793923515, 0.5194126537867955, 0.5167602981839862, 0.5126914807728359, 0.5101909296853202, 0.5119700602122715, 0.5093141113008771, 0.5066363981791905, 0.5067133222307477, 0.5051817723682949, 0.5025375229971749, 0.5002657856260028, 0.4998827150889805], "val_accuracy": [0.27533334493637085, 0.3889999985694885, 0.445333331823349, 0.47999998927116394, 0.5193333625793457, 0.5573333501815796, 0.5773333311080933, 0.6146666407585144, 0.6323333382606506, 0.6623333096504211, 0.6713333129882812, 0.6779999732971191, 0.6890000104904175, 0.690666675567627, 0.6970000267028809, 0.6996666789054871, 0.7020000219345093, 0.7149999737739563, 0.7099999785423279, 0.7263333201408386, 0.7226666808128357, 0.7236666679382324, 0.7316666841506958, 0.7260000109672546, 0.7403333187103271, 0.737333357334137, 0.7456666827201843, 0.7436666488647461, 0.7453333139419556, 0.7436666488647461, 0.7486666440963745, 0.753333330154419, 0.7513333559036255, 0.7570000290870667, 0.7519999742507935, 0.7576666474342346, 0.7609999775886536, 0.7599999904632568, 0.7630000114440918, 0.7596666812896729, 0.7636666893959045, 0.765666663646698, 0.7680000066757202, 0.7666666507720947, 0.765999972820282, 0.7706666588783264, 0.7710000276565552, 0.7720000147819519, 0.7726666927337646, 0.7730000019073486, 0.7743333578109741, 0.7720000147819519, 0.778333306312561, 0.7766666412353516, 0.7796666622161865, 0.7773333191871643, 0.7789999842643738, 0.781000018119812, 0.7786666750907898, 0.7799999713897705, 0.7793333530426025, 0.7803333401679993, 0.7789999842643738]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 3, 5, 0, 4, 5], [3, 1, 1, 2, 0, 3, 3, 1, 2, 2, 1, 2, 0, 3, 3, 2, 3, 2], [50], [0, 1, 0, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1, 1], [9, 8, 7], [3, 4, 0, 2], [80, 65, 34], [1], [], [1], [5], [], [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7], [0, 1, 0, 0], [79, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, alpha)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.math.square(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), alpha), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [3.0596835178989443, 4.74833694573139, 231.25709133881304, 8.57448321954031e+28, 3.423368124488858, 3.8302937916886806], "accuracy": [0.1740853190422058, 0.12296922504901886, 0.13393211364746094, 0.09113723784685135, 0.10038304328918457, 0.10038304328918457], "val_loss": [2.603158746446882, 4.422098432268415, 79999.37276785714, 2.9112255232674733, 3.2032443455287387, 3.5528945922851562], "val_accuracy": [0.10733333230018616, 0.10133333504199982, 0.08166666328907013, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 0, 0], [0, 1, 1], [8, 4, 3, 6, 3], [3, 4], [8], [1], [1], [], [5], [], [0, 0, 1, 0, 1, 1, 0, 1, 1], [6, 2, 8, 5, 7], [0, 0, 1, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 6, 3, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.sqrt(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), alpha)", "other_info": {"loss": [3.8326966056554106e+25, 4.572760608019498e+25, 4.62703472247173e+25, 4.521465243392763e+25, 4.436283593529603e+25, 4.598578519170178e+25], "accuracy": [0.10447761416435242, 0.09681680053472519, 0.09602430462837219, 0.09615638852119446, 0.09747721254825592, 0.09377889335155487], "val_loss": [3.801750228643787e+25, 3.801750228643787e+25, 3.801750228643787e+25, 3.801750228643787e+25, 3.801750228643787e+25, 3.801750228643787e+25], "val_accuracy": [0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 3, 5, 0, 4, 5], [2, 1, 1, 2, 0, 3, 3, 1, 2, 2, 1, 2, 0, 3, 3, 2, 3, 2], [50], [0, 0, 0, 1, 0, 1, 1], [0, 0, 0, 1, 1, 1, 1], [8, 4, 6], [0, 0, 4, 5], [8, 34], [0], [1], [], [2], [], [0, 1, 1, 1, 1, 1, 0, 1, 1], [3, 1, 0, 5, 7, 9, 5, 9], [1, 0, 0, 0], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 2, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.33861315733784, 3.89228574818057, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.05177651718258858, 0.015057455748319626, 0.09840179979801178, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.108433723449707, 39.215208871024, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.004333333112299442, 0.09933333098888397, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 1, 1, 2, 0, 3, 3, 1, 2, 2, 1, 2, 0, 3, 3, 2, 3, 2], [50], [1, 1, 0, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1], [2, 7, 7], [3, 4, 5, 3], [8], [0], [1], [], [5], [], [0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7, 9, 5, 9], [1, 0, 0, 0], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 0, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)), tf.math.add(beta, grad)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [1, 3, 5, 0, 7, 3], [0, 1, 1, 2, 0, 3, 3, 1, 2, 2, 1, 2, 0, 3, 3, 2, 3, 2], [50], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0, 1], [2, 7, 7], [1, 4, 0, 5, 1, 2], [88, 65, 28], [1], [], [], [], [], [0, 0, 1, 1, 1, 1, 0, 1, 1], [6, 2, 5, 5, 7], [2, 0, 2, 3], [21, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), beta)", "other_info": {"loss": [2.302508903170117, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10130762308835983, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 1, 1, 2, 0, 3, 3, 1, 2, 2, 1, 2, 0, 3, 3, 2, 3, 2], [50], [1, 0, 0], [0, 1, 1], [9, 7, 7, 8], [3, 4, 0, 2], [8], [0, 1, 1], [0], [4], [5], [], [0, 0, 1, 1, 1, 1, 0, 1, 1], [6, 3, 5, 5, 7], [1, 1, 1, 0], [14, 71]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 3, 1, 1, 0, 0, 5, 2, 3, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, alpha), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07779685407876968, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [1, 3, 5, 0, 7, 3], [2, 2, 1, 1], [50], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1], [6], [4, 4], [8], [0], [1], [], [5], [], [0, 0, 1, 0, 1, 1, 0, 1, 1], [6, 2, 0, 5, 7], [2, 0, 2, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), beta)", "other_info": {"loss": [2.302508903170117, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10130762308835983, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 1, 1, 1], [2, 7, 7], [0, 0, 0, 1], [12, 65, 34], [0], [1], [], [2], [], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7], [1, 0, 0, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 2, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3173139457768137, 2.357423667689797, 2.4273403829603053, 2.5911554704803943, 9.079186382956273, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06815480440855026, 0.031303659081459045, 0.013472461141645908, 0.012547880411148071, 0.0536256767809391, 0.10038304328918457, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.0047147614615306, 2.0515518188476562, 2.13767181124006, 2.4317194393702914, 264.727286202567, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.004333333112299442, 0.0033333334140479565, 0.004000000189989805, 0.008666666224598885, 0.09933333098888397, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 0, 0], [0, 1, 1], [2], [3, 4], [8], [0, 0], [0, 1], [5], [6], [], [0, 0, 0, 1, 1, 1, 0, 1, 1], [6, 0, 0, 5, 7], [1, 0, 3, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 2, 2, 1, 1, 0, 5, 3, 2, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.negative(alpha)), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09734513610601425, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [0, 2, 1, 1], [50], [0, 0, 0], [0, 1, 1], [2], [3, 4], [8], [1], [0], [], [5], [], [0, 0, 1, 0, 1, 1, 0, 1, 1], [6, 3, 0, 5, 7], [1, 0, 0, 3], [53, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 6, 3, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.math.negative(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.302508903170117, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10130762308835983, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 1], [2, 9], [3, 4, 0, 5, 1, 2], [8], [1], [1], [], [3], [], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [6, 2, 0, 5, 7, 4], [2, 1, 2, 3, 2], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 11, 6, 5, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(tf.math.negative(tf.math.square(beta)), tf.math.add(tf.math.pow(alpha, beta), sigma)), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10130762308835983, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [1, 3, 5, 0, 7, 3], [2, 2, 1, 1], [50], [1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 4, 3, 6, 3], [3, 4, 0, 5, 1, 2], [8], [0], [1], [], [0], [38], [0, 0, 1, 0, 1, 1, 0, 1, 1], [6, 2, 0, 5, 7], [1, 0, 0, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 1, 6, 3, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0956280529499054, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [1, 3, 5, 0, 7, 3], [2, 1, 1, 2, 0, 3, 3, 1, 2, 2, 1, 2, 0, 3, 3, 2, 3, 2], [50], [1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1], [2, 2, 7, 4, 5, 7, 1], [0, 0, 0, 1, 0, 2, 1], [8, 30, 48, 3], [1], [1], [], [], [], [1, 0, 1, 0, 1, 1, 0, 1, 1], [6, 3, 0, 5, 7, 9, 5, 9], [2, 3, 2, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 7, 7, 4, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.math.add(beta, tf.constant(8.32200197e-05, shape=shape, dtype=tf.float32)), tf.math.add(beta, beta))))))), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10077928751707077, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 1, 1, 2, 0, 3, 3, 1, 2, 2, 1, 2, 0, 3, 3, 2, 3, 2], [50], [1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [4, 4, 3, 6, 3], [3, 4, 4, 1, 3, 4], [8], [1], [0], [1], [], [], [1, 0, 1, 0, 1, 1, 0, 1, 1], [0, 6, 2, 5, 7], [0, 1, 0, 0], [14, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 5, 6, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(grad, tf.math.divide_no_nan(grad, tf.math.multiply(alpha, tf.math.add(beta, grad))))), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302516398034973, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.10157178342342377, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 1, 1, 2, 0, 3, 3, 1, 2, 2, 1, 2, 0, 3, 3, 2, 3, 2], [50], [1, 1, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 1], [9, 7, 7, 8], [3, 4, 0, 2], [12, 65, 34], [0], [1], [1], [2], [], [0, 0, 1, 0, 1, 1, 0, 1, 1], [6, 5, 0, 5, 7, 9, 5, 9], [1, 0, 1, 0], [14, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, alpha)), lambda shape,  alpha, beta, grad: tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.square(alpha), tf.math.negative(tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1006472036242485, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 0, 0], [0, 1, 1], [2], [3, 4], [8], [0], [1], [], [5], [], [0, 0, 1, 0, 1, 1, 0, 1, 1], [6, 8, 0, 5, 7], [1, 0, 0, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.sqrt(alpha), tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10130762308835983, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [5, 3, 5, 0, 4, 5], [2, 1, 1, 2, 0, 3, 3, 1, 2, 2, 1, 2, 0, 3, 3, 2, 3, 2], [50], [1, 0, 1, 0, 1, 0, 0], [1, 0, 0, 1, 1, 1, 1], [2, 7, 3], [1, 0, 3, 1], [88, 65, 34], [0], [1], [], [4], [], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [5, 3, 0, 5, 7, 9, 5, 9], [1, 1, 0, 0], [70, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(alpha, alpha))", "other_info": {"loss": [2.3030243230108507, 2.3015112782419003, 2.302224812144223, 2.301906223546528, 2.301895145411977, 2.3018207018165353], "accuracy": [0.09259014576673508, 0.09866596013307571, 0.09113723784685135, 0.08955223858356476, 0.09377889335155487, 0.09430722147226334], "val_loss": [1.9712316649300712, 1.9712315968104772, 1.971231528690883, 1.971231324332101, 1.9712310518537248, 1.9712307793753487], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [1, 3, 1, 2, 0, 3, 3, 1, 2, 2, 1, 2, 0, 3, 3, 2, 3, 2], [50], [1, 0, 0, 0, 1, 0, 1, 1], [0, 1, 1, 1, 1, 1, 1], [2, 7, 7, 8], [3, 0, 0, 1], [12, 6, 34], [0, 0, 1], [0, 1, 1], [2], [5, 6], [], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 5, 0, 5, 7, 9, 5, 9], [1, 0, 0, 0], [14, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 3, 2, 1, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.square(alpha), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.303024520900476, 2.3015116785873495, 2.3022258468764476, 2.301907006256049, 2.301896054085613, 2.3018226768078978], "accuracy": [0.09259014576673508, 0.09866596013307571, 0.09113723784685135, 0.08955223858356476, 0.09377889335155487, 0.0944393053650856], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 3, 5, 0, 4, 5], [2, 1, 1, 2, 0, 3, 3, 1, 2, 2, 1, 2, 0, 3, 3, 2, 3, 2], [50], [1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0], [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1], [2, 7, 7, 8, 6, 8], [5, 1, 0, 1, 1], [12, 65, 50], [0, 1, 1], [0], [1], [2], [], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7], [1, 0, 0, 0], [14, 57]], "fitness": -0.02914285659790039, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 1, 3, 1, 1, 0, 0, 5, 2, 3, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, alpha))), tf.math.divide_no_nan(tf.math.sqrt(tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), alpha))), tf.math.add(beta, alpha)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3038377294513954, 2.304283142404754, 2.3070087724153345, 2.3087276577902287, 2.310757374766638, 2.312739763434978], "accuracy": [0.09021265059709549, 0.09206181764602661, 0.08109892904758453, 0.07489103078842163, 0.07515519857406616, 0.0730418711900711], "val_loss": [1.9730657849993025, 1.9748990195138114, 1.9767514637538366, 1.9786170550755091, 1.9805131639753069, 1.982426302773612], "val_accuracy": [0.028999999165534973, 0.024000000208616257, 0.01899999938905239, 0.01366666704416275, 0.01133333332836628, 0.010333333164453506]}}]