[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [5, 3, 3, 2, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.819428563117981, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.subtract(grad, grad)), tf.math.multiply(tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(beta)), grad)), tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.317687776189171, 1.8349615042125544, 1.5174293025231806, 1.0732059157078906, 0.9288018784502856, 0.8595239070459774, 0.7769328573392194, 0.7847640767640378, 0.7195835123681248, 0.7188327380017739, 0.668967562777696, 0.6252215611007251, 0.6457406733533915, 0.6009706604938938, 0.6118023868454855, 0.5996915067679783, 0.5604496802856673, 0.5554103305027737, 0.5501185605129498, 0.5312973185458503, 0.5228264337092374, 0.5037789774089048, 0.5044191572542094, 0.5050348611067567, 0.47195468555824427, 0.4799390096926434, 0.46619643970660685, 0.4642190277977957, 0.47320011758439023, 0.4587005161377795, 0.4406006289566072], "accuracy": [0.2662792205810547, 0.41011756658554077, 0.4955752193927765, 0.611940324306488, 0.6580372452735901, 0.6787742972373962, 0.7058512568473816, 0.7009642124176025, 0.7268524765968323, 0.7317395210266113, 0.7450799345970154, 0.7627789974212646, 0.7524765729904175, 0.7718927264213562, 0.772288978099823, 0.7709681391716003, 0.7886672616004944, 0.7868181467056274, 0.789988100528717, 0.800818920135498, 0.8061022162437439, 0.8153480291366577, 0.8141592741012573, 0.8088759779930115, 0.8241975903511047, 0.8224804997444153, 0.8284242749214172, 0.828292191028595, 0.8220842480659485, 0.8290846943855286, 0.8370096683502197], "val_loss": [1.6663058485303606, 1.6548113822937012, 0.8548480272293091, 0.727138706615993, 0.6906104939324516, 0.6302986655916486, 0.6798498630523682, 0.5935707603182111, 0.5696800776890346, 0.5738787140165057, 0.5289361817496163, 0.6028335435049874, 0.49113396235874723, 0.4909967694963728, 0.47082206181117464, 0.4610264471599034, 0.48760311944144114, 0.43256958041872295, 0.4595682280404227, 0.436956524848938, 0.4212746279580252, 0.42179187706538607, 0.42831418343952726, 0.4136491673333304, 0.42784460953303743, 0.3966673527445112, 0.39403499024254934, 0.39752012491226196, 0.42788430622645784, 0.3918416585241045, 0.43488105705806185], "val_accuracy": [0.43433332443237305, 0.4933333396911621, 0.562333345413208, 0.684333324432373, 0.6986666917800903, 0.7120000123977661, 0.7036666870117188, 0.7386666536331177, 0.7473333477973938, 0.7476666569709778, 0.7586666941642761, 0.7253333330154419, 0.7950000166893005, 0.7883333563804626, 0.7886666655540466, 0.8076666593551636, 0.7743333578109741, 0.8100000023841858, 0.7960000038146973, 0.8106666803359985, 0.8213333487510681, 0.8203333616256714, 0.8053333163261414, 0.8216666579246521, 0.8083333373069763, 0.8363333344459534, 0.8243333101272583, 0.8320000171661377, 0.8006666898727417, 0.8316666483879089, 0.8100000023841858]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [5, 3, 3, 2, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8019999861717224, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3173237903762756, 1.837294916167566, 1.5409042827362838, 1.0962204444110826, 0.9808041975482769, 0.8265805031015353, 0.7830754791299949, 0.7443079634617191, 0.7093153383281205, 0.7204217450918854, 0.6453992147345538, 0.6337129687195393, 0.6380225257110822, 0.626257587764021, 0.5825747973993548, 0.6240124574285126, 0.566051338500256, 0.5473993529481124, 0.5296959657718509, 0.5333436835538032, 0.5180325492608344, 0.5008314322478987, 0.49571192571988054, 0.5030262656081795, 0.48631106370381233, 0.4842432706253073, 0.46537341388650244, 0.4591631502436609, 0.4703328429888961, 0.45366140908773595, 0.4399097982241477, 0.42803004420649154, 0.4304091315172793, 0.41295437472465885, 0.4016079932447312, 0.41439012420837196, 0.4249201252468038, 0.3924797115119976, 0.40839157469315757, 0.3898298433546251, 0.3780684765453399, 0.36729052966344217, 0.3741397438441695, 0.3692728917651629, 0.35969626938567706, 0.3586835646082964, 0.3690521131417125, 0.3374774152883654, 0.3521466736292181, 0.34497335899964204, 0.34907751943630205, 0.34161209095313233, 0.31695412043268023, 0.33218829764618835, 0.3268196984265443, 0.32294948561048903, 0.30287962884651654], "accuracy": [0.26601505279541016, 0.41011756658554077, 0.48606523871421814, 0.6046757102012634, 0.6275261044502258, 0.6956809163093567, 0.7013604640960693, 0.7194558382034302, 0.7272487282752991, 0.7224937081336975, 0.7535332441329956, 0.7604015469551086, 0.7560427784919739, 0.7606657147407532, 0.7825914621353149, 0.7569673657417297, 0.7869502305984497, 0.793950617313385, 0.8004226684570312, 0.7992339134216309, 0.8054417967796326, 0.81548011302948, 0.8169330358505249, 0.8083476424217224, 0.8239334225654602, 0.8210275769233704, 0.832650899887085, 0.828292191028595, 0.826310932636261, 0.83119797706604, 0.8381983637809753, 0.8370096683502197, 0.8376700282096863, 0.8507462739944458, 0.8553691506385803, 0.8473120927810669, 0.8400475382804871, 0.8556333184242249, 0.8500858545303345, 0.8506141901016235, 0.8599920868873596, 0.86553955078125, 0.8607845902442932, 0.8619733452796936, 0.8667283058166504, 0.867520809173584, 0.8610487580299377, 0.871879518032074, 0.8664641380310059, 0.8702945709228516, 0.8688416481018066, 0.8713511824607849, 0.8841632604598999, 0.8820499181747437, 0.8798044919967651, 0.8802007436752319, 0.8885219693183899], "val_loss": [1.6666428361620222, 1.6781178542545863, 0.9349974564143589, 0.7469853503363473, 0.6656594957624163, 0.636147039277213, 0.633513365473066, 0.5802593231201172, 0.6722262246268136, 0.5557363714490619, 0.5229621274130685, 0.5451253652572632, 0.4891833748136248, 0.4890502520969936, 0.5756259645734515, 0.45359783513205393, 0.4756438732147217, 0.4505558865410941, 0.4494720527103969, 0.44418667043958393, 0.4176513297217233, 0.4243255683353969, 0.425493095602308, 0.40242459944316317, 0.4452986036028181, 0.3963177629879543, 0.3942664010184152, 0.39151422466550556, 0.4147422569138663, 0.393469614642007, 0.4073736923081534, 0.3963793856757028, 0.374475964478084, 0.4056188038417271, 0.36675924914223806, 0.39427722351891653, 0.37700324399130686, 0.3790123036929539, 0.3757137656211853, 0.36265394517353605, 0.36520293780735563, 0.34989356994628906, 0.3488896829741342, 0.3533573491232736, 0.3629113180296762, 0.3608661804880415, 0.3483028156416757, 0.37637057474681307, 0.3452535356794085, 0.40123570816857473, 0.3464547906603132, 0.33608455317361013, 0.3498508334159851, 0.3633496676172529, 0.35478382451193674, 0.3347404684339251, 0.3526689495359148], "val_accuracy": [0.4336666762828827, 0.49033331871032715, 0.5609999895095825, 0.6909999847412109, 0.718999981880188, 0.7136666774749756, 0.7146666646003723, 0.737666666507721, 0.7053333520889282, 0.7543333172798157, 0.746666669845581, 0.7486666440963745, 0.7990000247955322, 0.777999997138977, 0.7366666793823242, 0.8050000071525574, 0.7866666913032532, 0.7846666574478149, 0.800000011920929, 0.8029999732971191, 0.8186666369438171, 0.8183333277702332, 0.8113333582878113, 0.8243333101272583, 0.8103333115577698, 0.8303333520889282, 0.824999988079071, 0.8323333263397217, 0.8100000023841858, 0.8320000171661377, 0.8226666450500488, 0.8223333358764648, 0.8379999995231628, 0.8220000267028809, 0.8370000123977661, 0.828000009059906, 0.8339999914169312, 0.840666651725769, 0.8349999785423279, 0.8360000252723694, 0.8326666951179504, 0.8516666889190674, 0.8496666550636292, 0.8510000109672546, 0.8443333506584167, 0.847000002861023, 0.8556666374206543, 0.8349999785423279, 0.8533333539962769, 0.8273333311080933, 0.856333315372467, 0.8586666584014893, 0.8546666502952576, 0.8526666760444641, 0.847000002861023, 0.8560000061988831, 0.8473333120346069]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [1, 3, 3, 2, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.7922857403755188, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.square(tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [1.987974969072585, 1.4443024404926574, 1.0387280832948056, 0.8808921993747127, 0.8289132124208393, 0.7669208781310769, 0.7461094330834391, 0.70761509769707, 0.6867226056686686, 0.6946620394950215, 0.6467441708152604, 0.6316027359687861, 0.6154062139627373, 0.6065441605956909, 0.6139891729331555, 0.5863192620420374, 0.5821644842522319], "accuracy": [0.34367984533309937, 0.5145951509475708, 0.6201294660568237, 0.6725663542747498, 0.6905296444892883, 0.7150970697402954, 0.713908314704895, 0.7325320243835449, 0.7429665923118591, 0.7358341217041016, 0.7483819723129272, 0.7604015469551086, 0.7650244235992432, 0.7714964747428894, 0.7600052952766418, 0.7798177003860474, 0.7812706232070923], "val_loss": [1.4705913748059953, 0.8072572095053536, 0.6542865037918091, 0.6536142826080322, 0.5973506825310844, 0.5889730623790196, 0.6105524812425885, 0.5557638577052525, 0.6162709508623395, 0.5658231803349086, 0.5185391902923584, 0.5011629887989589, 0.5293099369321551, 0.5118040016719273, 0.487271853855678, 0.48103366579328266, 0.4720224142074585], "val_accuracy": [0.4126666784286499, 0.6679999828338623, 0.7226666808128357, 0.731333315372467, 0.7390000224113464, 0.7379999756813049, 0.7276666760444641, 0.7559999823570251, 0.7096666693687439, 0.7369999885559082, 0.7763333320617676, 0.7910000085830688, 0.7583333253860474, 0.7693333625793457, 0.7816666960716248, 0.7846666574478149, 0.7903333306312561]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 8, 4, 1, 9, 2, 8, 8, 6, 9, 6, 8, 9], [5, 3, 3, 2, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [11, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [1, 57]], "fitness": -0.6697142720222473, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 5, 2, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.sqrt(tf.math.pow(tf.math.subtract(grad, grad), tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3015517020159395, 2.301619446682278, 2.2991964276975976, 2.296656468887339, 2.2936756847367987, 2.2886962965573647, 2.281881809392074, 2.277992218902098, 2.2703186875210934, 2.2622543467412206, 2.254390283236178, 2.2437225313643894, 2.2340177215872945, 2.220545049262258, 2.208633642784908, 2.1980471967186483, 2.1812670603089437, 2.161085809210839, 2.144075918411771, 2.123189486343753, 2.09992173813621, 2.070057292041872, 2.0414144406780323, 2.0075103170159094, 1.963406099540651, 1.9200901314409544, 1.8721933053421889, 1.8198390286029558, 1.767100384080761, 1.7149987792326333, 1.6551382477099885, 1.6101103913845434, 1.5549296279073848, 1.519568430938111, 1.4695729514186124, 1.4470086433096743, 1.419145000719391, 1.4003570397075582, 1.3973195393481321, 1.3771114567598064, 1.3642310247035814, 1.352561147536395, 1.3734217178174424, 1.3656249797544175, 1.3902975242245923, 1.3745455917287355, 1.4030000441550832], "accuracy": [0.09100515395402908, 0.09153348207473755, 0.10051512718200684, 0.10315678268671036, 0.11834631860256195, 0.1278562992811203, 0.1442345827817917, 0.15295206010341644, 0.17778365314006805, 0.20036983489990234, 0.22837141156196594, 0.24474970996379852, 0.2666754722595215, 0.2883370816707611, 0.30260202288627625, 0.3117157518863678, 0.3365473449230194, 0.34843480587005615, 0.36005812883377075, 0.36402061581611633, 0.37947431206703186, 0.38409721851348877, 0.3921542763710022, 0.38885220885276794, 0.4021925628185272, 0.41909918189048767, 0.4216087758541107, 0.43230748176574707, 0.4373266398906708, 0.4383833110332489, 0.4558182656764984, 0.46546030044555664, 0.47510236501693726, 0.4725928008556366, 0.4880464971065521, 0.49570730328559875, 0.5042926669120789, 0.509840190410614, 0.5218597054481506, 0.5251618027687073, 0.5299167633056641, 0.5381059050559998, 0.535860538482666, 0.5451063513755798, 0.5378417372703552, 0.5581825375556946, 0.5462950468063354], "val_loss": [1.9707379341125488, 1.9693728855678014, 1.9671389716012138, 1.9640680721827917, 1.9601760591779436, 1.9554850033351354, 1.950033392224993, 1.9438493592398507, 1.9369847433907645, 1.9294579369681222, 1.921255656651088, 1.9123402323041643, 1.902660301753453, 1.892120633806501, 1.8805139405386788, 1.8675482613699776, 1.852963924407959, 1.836426053728376, 1.8176398277282715, 1.796215329851423, 1.7717894145420618, 1.7439494814191545, 1.7123254707881383, 1.6765249797276087, 1.63629184450422, 1.5914469446454729, 1.542109727859497, 1.488612243107387, 1.4316679068974085, 1.3722148622785295, 1.311645235334124, 1.2514630045209612, 1.1932430607931954, 1.1383796760014124, 1.0875607558659144, 1.04106262751988, 0.9987726552145821, 0.9605142048427037, 0.9259890147617885, 0.8947729383196149, 0.867026516369411, 0.8444664308003017, 0.8293496370315552, 0.8219363178525653, 0.8191026278904506, 0.8136546271187919, 0.8000695535114833], "val_accuracy": [0.04399999976158142, 0.05233333259820938, 0.06366666406393051, 0.08566666394472122, 0.11566666513681412, 0.15700000524520874, 0.21400000154972076, 0.2680000066757202, 0.31166666746139526, 0.34066668152809143, 0.3540000021457672, 0.3616666793823242, 0.3720000088214874, 0.38466668128967285, 0.39133334159851074, 0.40400001406669617, 0.4113333225250244, 0.42233332991600037, 0.43299999833106995, 0.43966665863990784, 0.44966667890548706, 0.4636666774749756, 0.4716666638851166, 0.4776666760444641, 0.4856666624546051, 0.49933332204818726, 0.5146666765213013, 0.5286666750907898, 0.5460000038146973, 0.5596666932106018, 0.5690000057220459, 0.5793333053588867, 0.5903333425521851, 0.6046666502952576, 0.6203333139419556, 0.6309999823570251, 0.640999972820282, 0.6473333239555359, 0.6549999713897705, 0.6570000052452087, 0.6610000133514404, 0.6656666398048401, 0.6639999747276306, 0.6623333096504211, 0.6453333497047424, 0.6383333206176758, 0.6536666750907898]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [2, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [30, 57]], "fitness": -0.4194285571575165, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.square(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.301370558091883, 2.3015908661803173, 2.3002589358283294, 2.299742251937699, 2.2996938705696266, 2.2984959044082998, 2.2964245474743192, 2.297961225315659, 2.296421827720125, 2.2955263361025793, 2.295699775242582, 2.293942756404683, 2.2937664681138488, 2.290525864332958, 2.2905644579428754, 2.292679307798054, 2.2909855286773673, 2.287857182132034, 2.2891712893804836, 2.2887904574417277, 2.288185732979674, 2.2863518374864658, 2.285949352914631, 2.2856337478084963, 2.2843074497214837, 2.2827411377828324, 2.2821090969946782, 2.28188183068001, 2.2807575279868684, 2.2803527145904714, 2.279357729901601, 2.2783448268488304, 2.2773367816651455, 2.2782077455186824, 2.2759029780868936, 2.275397457199137, 2.276064895541204, 2.2748326667941337, 2.273243430079313, 2.271138641765294, 2.2718778476266657, 2.270271628807722, 2.269817031212392, 2.2690544037723805, 2.2709521208110504, 2.267076583885482, 2.26898811298386, 2.267713136078423, 2.2664963284566686, 2.2652570034896757, 2.2646549970183187, 2.264632712486256, 2.2619789244082815, 2.2607983422080964, 2.2620294684227575, 2.261075730557455, 2.2588460268739383, 2.2580642941101683, 2.2567617773238173, 2.2564768640986523, 2.255695074115683, 2.2553246801933358, 2.25281090737019, 2.2542018854166175, 2.2536399265589604, 2.2528903880501625, 2.2524751118854085, 2.2482220645688384, 2.248838464802188, 2.2495444058080816, 2.247043344433187, 2.2478731097074123, 2.2452403885923626, 2.2446932563093975, 2.2444153244248817, 2.2412624594368844, 2.2426614536191685, 2.241087431857898, 2.2399167492090197, 2.2392942927154835, 2.2376242136171136, 2.23479130390597, 2.2360980320190946, 2.2358636781445362, 2.2337042607997843, 2.2331109779732277, 2.2321600524457437, 2.2314775357897005, 2.230469876969448, 2.2306479760259292, 2.2275506875707394, 2.2279730945010745, 2.227084561708093, 2.225754544625051, 2.2241742306413146, 2.2252073168612867, 2.2215008369416074, 2.2210417184312, 2.2200213475643666, 2.217823566179297], "accuracy": [0.09113723784685135, 0.09192973375320435, 0.09826971590518951, 0.09747721254825592, 0.10368511080741882, 0.10381719470024109, 0.10738343745470047, 0.09800554811954498, 0.10632677376270294, 0.11187426000833511, 0.11028926074504852, 0.11068551242351532, 0.11174217611551285, 0.11649715900421143, 0.1154404953122139, 0.11913882195949554, 0.1212521493434906, 0.1212521493434906, 0.12138422578573227, 0.1212521493434906, 0.13630960881710052, 0.13617752492427826, 0.13247919082641602, 0.13538502156734467, 0.13393211364746094, 0.1344604343175888, 0.14449875056743622, 0.14753665030002594, 0.14872540533542633, 0.14489498734474182, 0.1530841439962387, 0.15149913728237152, 0.14912164211273193, 0.1468762308359146, 0.15915995836257935, 0.15678246319293976, 0.16576409339904785, 0.16497160494327545, 0.16431118547916412, 0.1682736724615097, 0.16721701622009277, 0.17117950320243835, 0.17659489810466766, 0.1795007288455963, 0.16576409339904785, 0.18636904656887054, 0.1784440577030182, 0.17884030938148499, 0.18253862857818604, 0.18901069462299347, 0.18874652683734894, 0.19138818979263306, 0.19601109623908997, 0.20063400268554688, 0.19799233973026276, 0.19680359959602356, 0.19865275919437408, 0.2052568942308426, 0.21265354752540588, 0.2067098170518875, 0.2090873122215271, 0.21278563141822815, 0.2141064554452896, 0.21661603450775146, 0.21978603303432465, 0.21740853786468506, 0.218465194106102, 0.22533351182937622, 0.22876766324043274, 0.22995641827583313, 0.22678641974925995, 0.22916391491889954, 0.2401268035173416, 0.23286223411560059, 0.23497556149959564, 0.24078720808029175, 0.24435345828533173, 0.2456742823123932, 0.24382512271404266, 0.24924051761627197, 0.25082552433013916, 0.2502971887588501, 0.252938836812973, 0.25241050124168396, 0.25241050124168396, 0.2587504982948303, 0.2588825821876526, 0.2646942138671875, 0.26482629776000977, 0.2608638107776642, 0.26997753977775574, 0.266939640045166, 0.2723550498485565, 0.2705058753490448, 0.27380794286727905, 0.2631092369556427, 0.27605336904525757, 0.2709021270275116, 0.2747325301170349, 0.2813366651535034], "val_loss": [1.9705125944955009, 1.969799314226423, 1.9690871238708496, 1.9683822223118372, 1.9676790237426758, 1.9669787543160575, 1.9662697655814034, 1.9655700411115373, 1.9648757662091936, 1.9641740662711007, 1.9634735243661063, 1.9627674647739954, 1.962066582271031, 1.9613686970302038, 1.9606710842677526, 1.95997497013637, 1.9592749050685339, 1.9585745675223214, 1.9578753880092077, 1.9571774346487862, 1.956479753766741, 1.9557853426252092, 1.9550889560154505, 1.9543939999171667, 1.9536926405770438, 1.9529983656747, 1.9522952352251326, 1.9515914916992188, 1.9508919034685408, 1.950192587716239, 1.9494882311139787, 1.9487830570765905, 1.9480777468000139, 1.9473731858389718, 1.946662085396903, 1.9459529604230608, 1.945237704685756, 1.9445220402308874, 1.9438088280814034, 1.9430935723440987, 1.9423682349068778, 1.9416451454162598, 1.9409208978925432, 1.9401990345546178, 1.93947206224714, 1.9387341908046178, 1.9379948207310267, 1.9372551100594657, 1.9365156718662806, 1.9357782772609167, 1.9350361824035645, 1.934288433619908, 1.9335313524518694, 1.932772500174386, 1.9320086070469447, 1.9312470299857003, 1.9304778916495187, 1.929704257420131, 1.9289235387529646, 1.9281417982918876, 1.9273573330470495, 1.9265669413975306, 1.925762380872454, 1.9249606132507324, 1.9241573469979423, 1.923358576638358, 1.9225537436349052, 1.9217309270586287, 1.9209134919302804, 1.92008604322161, 1.9192502839224679, 1.918417113167899, 1.9175727026803153, 1.9167188916887556, 1.9158712795802526, 1.9150043215070451, 1.9141411100115096, 1.9132772173200334, 1.9123976571219308, 1.911512987954276, 1.910618509565081, 1.9097099985395158, 1.9087992395673479, 1.9078826223100935, 1.9069673674447196, 1.906043529510498, 1.9051174436296736, 1.9041884967258997, 1.903243132999965, 1.9023021289280482, 1.901341370173863, 1.9003750256129675, 1.8994133813040597, 1.8984278270176478, 1.897439752306257, 1.8964580127171107, 1.8954481397356306, 1.8944341795785087, 1.8934148379734583, 1.8923802375793457], "val_accuracy": [0.04500000178813934, 0.050333332270383835, 0.05400000140070915, 0.057999998331069946, 0.061666667461395264, 0.06400000303983688, 0.0663333311676979, 0.07233333587646484, 0.07800000160932541, 0.08399999886751175, 0.08866667002439499, 0.09266666322946548, 0.09600000083446503, 0.10266666859388351, 0.10999999940395355, 0.11699999868869781, 0.12133333086967468, 0.12600000202655792, 0.13300000131130219, 0.13833333551883698, 0.1459999978542328, 0.15000000596046448, 0.15600000321865082, 0.1626666635274887, 0.17000000178813934, 0.17666666209697723, 0.18333333730697632, 0.19033333659172058, 0.19766665995121002, 0.20466665923595428, 0.21133333444595337, 0.21833333373069763, 0.2266666740179062, 0.2316666692495346, 0.23499999940395355, 0.23933333158493042, 0.24766667187213898, 0.2513333261013031, 0.2553333342075348, 0.2653333246707916, 0.27266666293144226, 0.2796666622161865, 0.28333333134651184, 0.289000004529953, 0.29366666078567505, 0.29600000381469727, 0.2993333339691162, 0.3023333251476288, 0.3076666593551636, 0.3140000104904175, 0.3179999887943268, 0.3216666579246521, 0.32633334398269653, 0.32866665720939636, 0.3330000042915344, 0.3370000123977661, 0.33933332562446594, 0.3413333296775818, 0.34299999475479126, 0.3473333418369293, 0.34966665506362915, 0.3526666760444641, 0.3540000021457672, 0.3556666672229767, 0.35733333230018616, 0.36000001430511475, 0.36033332347869873, 0.3619999885559082, 0.3646666705608368, 0.3643333315849304, 0.3656666576862335, 0.36766666173934937, 0.36899998784065247, 0.3700000047683716, 0.3713333308696747, 0.37166666984558105, 0.37400001287460327, 0.375, 0.3766666650772095, 0.37933334708213806, 0.3799999952316284, 0.3803333342075348, 0.382999986410141, 0.3840000033378601, 0.38499999046325684, 0.3863333463668823, 0.3876666724681854, 0.3903333246707916, 0.39100000262260437, 0.3919999897480011, 0.39266666769981384, 0.3946666717529297, 0.3956666588783264, 0.3970000147819519, 0.39800000190734863, 0.398333340883255, 0.4000000059604645, 0.4020000100135803, 0.40433332324028015, 0.40700000524520874]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [5, 3, 3, 2, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 2, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.31771427392959595, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.6521779431202126, 2.3040334826935362, 2.30284325088634, 2.302832344440878, 2.2933325007323653, 2.1707420330541387, 2.2996978932021555, 2.2242958032066134, 2.3211802714819827, 2.242132264137142], "accuracy": [0.1582353711128235, 0.1002509593963623, 0.10606260597705841, 0.10408136248588562, 0.1302337795495987, 0.21133272349834442, 0.1422533392906189, 0.22031435370445251, 0.11478008329868317, 0.15691454708576202], "val_loss": [1.975264072418213, 1.973947525024414, 1.9732719830104284, 1.9721638134547643, 1.8791402408054896, 1.6209592138017928, 1.8569652693612235, 1.5719586440495081, 1.9727074078151159, 1.9408462388174874], "val_accuracy": [0.09799999743700027, 0.09933333098888397, 0.09933333098888397, 0.09799999743700027, 0.3396666646003723, 0.3050000071525574, 0.312666654586792, 0.2783333361148834, 0.09799999743700027, 0.09966666996479034]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 3, 2, 3, 2, 8, 2, 6, 9, 6, 8, 9], [5, 3, 4, 2, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.sqrt(tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.multiply(tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(beta)), grad), tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07845727354288101, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [2, 3, 3, 2, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.sqrt(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3022753342094515, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09919429570436478, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [2, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [4, 0], [88, 44], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [9, 1, 7, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07845727354288101, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 2, 4, 9, 3, 2, 8, 8, 6, 9, 6, 8, 9], [2, 2, 3, 2, 2, 0, 3, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 5, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 1, 1, 1, 0, 1, 0, 8, 5, 3, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, beta)), grad)), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.square(tf.math.square(tf.math.add(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [1.4355150877601174e+17, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.13498876988887787, 0.10038304328918457, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [5, 3, 3, 2, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 2, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [5, 3, 3, 2, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 3, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09893012791872025, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [2, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 7, 4, 2, 1, 2, 3], [1, 3, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 1, 1, 0, 0, 0, 0, 8, 4, 4, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.subtract(tf.math.multiply(tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, beta))), grad), tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.add(alpha, tf.math.pow(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [2, 3, 3, 2, 2, 0, 3, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [5, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [9, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3022753342094515, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09919429570436478, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [5, 3, 3, 2, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 6, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(tf.math.square(alpha), tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 3, 2, 3, 2, 8, 2, 6, 9, 6, 8, 9], [2, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [2, 0, 1], [88, 44], [0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [30, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09919429570436478, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [9, 2, 4, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [1, 3, 3, 2, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [5, 9, 5, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 2, 2, 0, 1], "tree_depth": 6, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3022753342094515, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09919429570436478, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [5, 3, 3, 2, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 1, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.subtract(tf.math.add(beta, grad), grad), tf.math.multiply(tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, beta))), grad)), tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07845727354288101, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [5, 3, 3, 2, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 7, 4, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.square(alpha), tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3019170560510545, 2.3034790931140363, 2.30374246288552, 2.304666889719975, 2.3064089623487636, 2.3067571514428424], "accuracy": [0.09060890227556229, 0.08796724677085876, 0.09074098616838455, 0.0878351628780365, 0.08994849026203156, 0.08572183549404144], "val_loss": [1.9716764177594865, 1.9721531186785017, 1.9728095872061593, 1.9733918734959193, 1.974039009639195, 1.9747297423226493], "val_accuracy": [0.036666665226221085, 0.03500000014901161, 0.03099999949336052, 0.029666665941476822, 0.026333333924412727, 0.02566666714847088]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 2, 4, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [5, 3, 3, 2, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.034857142716646194, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 6, 7, 2, 1, 1, 0, 1, 0, 7, 4, 3, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(tf.math.pow(tf.math.add(beta, grad), grad), tf.math.subtract(tf.math.multiply(tf.math.add(beta, beta), tf.math.add(tf.math.add(beta, grad), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.square(alpha), tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3019171190331122, 2.303479124605065, 2.303741716233227, 2.3046646360644982, 2.306405278087339, 2.306752203257486], "accuracy": [0.09060890227556229, 0.08796724677085876, 0.09087307006120682, 0.08770307898521423, 0.08994849026203156, 0.08572183549404144], "val_loss": [1.9716764177594865, 1.9721530505589075, 1.9728079523359026, 1.9733894893101283, 1.9740348543439592, 1.9747261319841658], "val_accuracy": [0.036666665226221085, 0.03500000014901161, 0.03099999949336052, 0.029666665941476822, 0.026333333924412727, 0.02566666714847088]}}]