[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 8, 3, 2, 3, 2, 1, 5, 2, 9, 6, 8, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8328571319580078, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1558148463199704, 2.0796197956547746, 1.4689329345984277, 1.1360475551324702, 0.90204151890549, 0.7938782112741074, 0.7254687558941758, 0.6957749350353428, 0.6651814592717551, 0.6596287298967747, 0.6238979045678092, 0.6088920244057701, 0.5699063697353787, 0.5671082071939306, 0.5466503563959837, 0.5446379383037654, 0.523577003383901, 0.5233115001267068, 0.5058696137569237, 0.5220344762177972, 0.4784068205038224, 0.4631484213199409, 0.4843272352656353, 0.47225665929232136, 0.44956377397013725, 0.4513943932036273, 0.4350797217582841, 0.4301987622652103, 0.425108152905066], "accuracy": [0.27658170461654663, 0.3473781645298004, 0.481838583946228, 0.5844670534133911, 0.6593580842018127, 0.6971337795257568, 0.7214370369911194, 0.7321357727050781, 0.7457403540611267, 0.7493065595626831, 0.7578919529914856, 0.7658169269561768, 0.780610203742981, 0.7889314293861389, 0.7924976944923401, 0.7905164361000061, 0.8009510040283203, 0.8090080618858337, 0.8068947196006775, 0.8033285140991211, 0.8212917447090149, 0.830669641494751, 0.8232730031013489, 0.8227446675300598, 0.8317263126373291, 0.8384625315666199, 0.8376700282096863, 0.8387266993522644, 0.8429533839225769], "val_loss": [1.4761994906834193, 1.1824076175689697, 1.0964323111942835, 0.7108180693217686, 0.6743234055382865, 0.5615191970552716, 0.6302539791379657, 0.5697466816220965, 0.6021250316074916, 0.49049781050000874, 0.49921650545937674, 0.4670447792325701, 0.49612527234213694, 0.46560546330043245, 0.4582822152546474, 0.43678597041538786, 0.4209071397781372, 0.4469435725893293, 0.4297469939504351, 0.4330213580812727, 0.39197797434670584, 0.4048869950430734, 0.4045130865914481, 0.37508695466177805, 0.43430224486759733, 0.376787074974605, 0.3886243445532663, 0.3828589490481785, 0.4437600885118757], "val_accuracy": [0.5416666865348816, 0.5540000200271606, 0.5590000152587891, 0.6706666946411133, 0.6983333230018616, 0.7459999918937683, 0.6949999928474426, 0.7316666841506958, 0.7206666469573975, 0.7749999761581421, 0.7646666765213013, 0.7720000147819519, 0.7770000100135803, 0.7856666445732117, 0.7943333387374878, 0.8109999895095825, 0.8159999847412109, 0.7960000038146973, 0.8166666626930237, 0.8003333210945129, 0.8259999752044678, 0.8246666789054871, 0.8190000057220459, 0.840666651725769, 0.812666654586792, 0.8306666612625122, 0.8209999799728394, 0.8379999995231628, 0.7923333048820496]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [4, 3, 3, 2, 3, 2, 0, 5, 2, 1, 6, 8, 9, 7, 4, 2], [3, 0, 3, 2, 1, 0, 1, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 77, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8291428685188293, "mapping_values": [1, 1, 1, 0, 1, 0, 22, 22, 13, 9, 5, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.negative(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), grad))))), tf.math.add(beta, tf.math.subtract(tf.math.divide_no_nan(beta, alpha), tf.math.add(beta, tf.math.sqrt(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))), alpha)), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1560317510784484, 2.080342405287345, 1.4481163225500198, 1.1748889475261783, 0.913505850364472, 0.77391891766218, 0.7213670612877354, 0.6900725021275389, 0.6506595072367125, 0.6471886109005207, 0.6069926916490126, 0.6120236278084118, 0.5629329617705878, 0.5545605604855801, 0.5467462052112998, 0.5388165853121466, 0.5184064176513723, 0.5252966869815844, 0.5099719898489095, 0.5095347753920182, 0.4814755562990569, 0.46062073755919297, 0.4633554266885035, 0.4736954093869053, 0.4566921443435982, 0.44271471109593064, 0.4277921260592015, 0.43005527564012114, 0.42435301879865933, 0.42140436323248653, 0.3994093399636104, 0.40339104108302787, 0.38320399734401084, 0.38673848355403745, 0.3762338136275683, 0.3884731509493106, 0.38716697903860986, 0.36167361344313026], "accuracy": [0.27644962072372437, 0.3467177450656891, 0.4854048490524292, 0.5761458277702332, 0.6568484902381897, 0.7010962963104248, 0.7257958054542542, 0.7386078238487244, 0.7541936039924622, 0.7469290494918823, 0.7648923397064209, 0.7629110813140869, 0.7808743715286255, 0.7935543656349182, 0.7913089394569397, 0.7967243194580078, 0.8082155585289001, 0.8024039268493652, 0.8037247657775879, 0.8125742673873901, 0.8228767514228821, 0.8313300609588623, 0.8241975903511047, 0.8260467648506165, 0.829216718673706, 0.8422929644584656, 0.8393871188163757, 0.8401796221733093, 0.8436138033866882, 0.8459912538528442, 0.8486329317092896, 0.8498216867446899, 0.8573504090309143, 0.8552370667457581, 0.8615770936012268, 0.8580108284950256, 0.8506141901016235, 0.8684453964233398], "val_loss": [1.4762655666896276, 1.1843276705060686, 1.2397001811436243, 0.8581871134894234, 0.6173725468771798, 0.562331063406808, 0.539990884917123, 0.5552124466214862, 0.49721527099609375, 0.5084233965192523, 0.502718346459525, 0.46116016592298237, 0.4555516242980957, 0.4257103034428188, 0.5051627670015607, 0.4544595309666225, 0.46567131791796, 0.4332506997244699, 0.4127123866762434, 0.44743697983878, 0.40417894295283724, 0.4142463888440813, 0.4512432813644409, 0.3730026057788304, 0.4105476311274937, 0.37953679050718037, 0.3792480656078884, 0.3753048692430769, 0.4601120097296579, 0.358907903943743, 0.36557501554489136, 0.375967127936227, 0.34631597995758057, 0.36681543929236277, 0.35669671637671335, 0.3737652131489345, 0.3938978910446167, 0.35751281465802875], "val_accuracy": [0.5429999828338623, 0.5479999780654907, 0.47833332419395447, 0.6223333477973938, 0.7246666550636292, 0.7436666488647461, 0.7566666603088379, 0.7453333139419556, 0.7766666412353516, 0.7699999809265137, 0.765333354473114, 0.7943333387374878, 0.8006666898727417, 0.8140000104904175, 0.7703333497047424, 0.7933333516120911, 0.7699999809265137, 0.8053333163261414, 0.8206666707992554, 0.7853333353996277, 0.8180000185966492, 0.8119999766349792, 0.7983333468437195, 0.8446666598320007, 0.8209999799728394, 0.8339999914169312, 0.8246666789054871, 0.8450000286102295, 0.7839999794960022, 0.8483333587646484, 0.843666672706604, 0.8293333053588867, 0.8510000109672546, 0.8446666598320007, 0.8463333249092102, 0.8463333249092102, 0.8326666951179504, 0.8433333039283752]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 3, 3, 2, 3, 2, 1, 5, 2, 9, 6, 8, 9], [1, 0, 3, 2, 3, 0, 3, 2, 0, 3, 1, 0, 5, 0], [84, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8257142901420593, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1558545234417164, 2.079207787739209, 1.5268573382779072, 1.0708293549026622, 0.8851699870276083, 0.7984833384958382, 0.7458287094168738, 0.6921152241824247, 0.665291299090614, 0.6438620419880781, 0.6135429478261638, 0.6233230913792304, 0.5776350864991221, 0.5783203798845035, 0.5517081069262934, 0.5409187564343163, 0.5330542852503513, 0.523466450131848, 0.5050059375927007, 0.5187950187339727, 0.48249418044118614, 0.4894342243813127, 0.47869019523477513, 0.47325500103508117, 0.45050487928796107, 0.45977277278490764, 0.42520181061789786, 0.4385859208840106, 0.42082469276921497], "accuracy": [0.27644962072372437, 0.3465856611728668, 0.4710077941417694, 0.5960903167724609, 0.6716417670249939, 0.6940959095954895, 0.7137762308120728, 0.7358341217041016, 0.7460044622421265, 0.750759482383728, 0.7648923397064209, 0.7574957013130188, 0.7778365015983582, 0.783119797706604, 0.7897239327430725, 0.7936864495277405, 0.8035926818847656, 0.8005547523498535, 0.804649293422699, 0.8078193068504333, 0.8214238286018372, 0.8157442808151245, 0.8228767514228821, 0.8228767514228821, 0.830669641494751, 0.8334434032440186, 0.8416325449943542, 0.8337075710296631, 0.8442742228507996], "val_loss": [1.4762426785060339, 1.1885511193956648, 0.8341470786503383, 0.6898236615317208, 0.6555102552686419, 0.5914886508669172, 0.6433852229799543, 0.5583337375095913, 0.5690348829541888, 0.5242717266082764, 0.5125281640461513, 0.47250274249485563, 0.5065833330154419, 0.4960658720561436, 0.48136770725250244, 0.45153447559901644, 0.4633645841053554, 0.41474213770457674, 0.42022781712668283, 0.4493678978511265, 0.40365848370960783, 0.408713025706155, 0.4151886446135385, 0.3742512975420271, 0.45057952404022217, 0.3714426841054644, 0.38695952722004484, 0.3933646082878113, 0.4404539040156773], "val_accuracy": [0.5426666736602783, 0.5460000038146973, 0.6606666445732117, 0.7036666870117188, 0.7003333568572998, 0.7300000190734863, 0.7056666612625122, 0.7366666793823242, 0.7310000061988831, 0.7583333253860474, 0.7506666779518127, 0.7696666717529297, 0.7646666765213013, 0.762333333492279, 0.7786666750907898, 0.7933333516120911, 0.7853333353996277, 0.8186666369438171, 0.8209999799728394, 0.7883333563804626, 0.8209999799728394, 0.8243333101272583, 0.8166666626930237, 0.8403333425521851, 0.8133333325386047, 0.8366666436195374, 0.8163333535194397, 0.8320000171661377, 0.7896666526794434]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 3, 3, 2, 3, 2, 1, 5, 2, 9, 6, 8, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [26, 57]], "fitness": -0.7820000052452087, "mapping_values": [1, 1, 1, 0, 1, 0, 20, 20, 13, 7, 3, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.multiply(tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.subtract(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)), tf.math.divide_no_nan(tf.math.add(beta, beta), grad))), tf.math.add(beta, tf.math.sqrt(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2945955230764286, 2.27726784701581, 2.2593354629629467, 2.238520979046774, 2.2171759479128688, 2.18633056033352, 2.1469101447313372, 2.1010392352086424, 2.048508022345131, 1.981574966560785, 1.901599117053451, 1.820566809267148, 1.7357484036117985, 1.644555311287399, 1.5587843329663038, 1.481682476177349, 1.4155067210467642, 1.3547731764391193, 1.3104066030303043, 1.2569973082228139, 1.2082923624604023, 1.1844001764697547, 1.1493885955003116, 1.1236811757103453, 1.090103037825602, 1.0799576403237825, 1.0529288156173326, 1.0303848826449074, 1.013061953526226, 1.0013739400614743, 0.9740232264109102, 0.9682352797797076, 0.9612159555330883, 0.938524494861111, 0.9309641279013496, 0.9260113013104015, 0.9161090871929067, 0.901788558879344, 0.896433997100701, 0.8824262759625998, 0.8803345563153171, 0.8670683433949404, 0.8475527884449705, 0.8571882753119634, 0.8451430538248282, 0.8362786604775225, 0.8387360214053395, 0.8230158111296783, 0.8265009695717436, 0.8207834685058201, 0.81880587752721, 0.7993778559620259, 0.7983927535988699, 0.8001266218856687, 0.7974551571689309, 0.7793196110661791, 0.7894503462741309, 0.7857423477153327, 0.7808734719244056, 0.7764905446619011, 0.7684973725364381, 0.766400277307556, 0.7610872678863153, 0.7599095113603997, 0.757165503744373, 0.757048305889178, 0.747706880839966, 0.7504882354384258, 0.7377567881401645, 0.7461753493176633, 0.739818697308883, 0.7286319246287075, 0.7347070895496566, 0.7348121415590959, 0.7196747917524969, 0.7173556942257033, 0.7135672926383169, 0.7201065423781169, 0.7200463557082742, 0.7142204427684476, 0.7127656269193152, 0.7113090644989976, 0.7065321291678649], "accuracy": [0.10976093262434006, 0.1542728841304779, 0.20063400268554688, 0.251750111579895, 0.2818650007247925, 0.32003697752952576, 0.34883105754852295, 0.37841764092445374, 0.39664509892463684, 0.4155329465866089, 0.4319112300872803, 0.4550257623195648, 0.4625544846057892, 0.48527276515960693, 0.500990629196167, 0.5196143388748169, 0.5390304923057556, 0.5433892607688904, 0.5563333630561829, 0.5676925182342529, 0.5875049233436584, 0.5879011750221252, 0.5980715751647949, 0.6115440726280212, 0.6131290197372437, 0.6159027814865112, 0.6347906589508057, 0.6341302394866943, 0.6399418711662292, 0.651168942451477, 0.6573768258094788, 0.6539427042007446, 0.6536785364151001, 0.6639809608459473, 0.6674151420593262, 0.6674151420593262, 0.6682076454162598, 0.678642213344574, 0.6819442510604858, 0.6915863156318665, 0.6848500967025757, 0.6877558827400208, 0.6954167485237122, 0.6906617283821106, 0.6963412761688232, 0.7000396251678467, 0.6999075412750244, 0.7008321285247803, 0.6993792057037354, 0.7034738063812256, 0.6999075412750244, 0.7080966830253601, 0.7135120630264282, 0.7055870890617371, 0.7150970697402954, 0.7125874757766724, 0.7079645991325378, 0.7083608508110046, 0.7135120630264282, 0.7174745798110962, 0.7193237543106079, 0.7173424959182739, 0.719852089881897, 0.7206445932388306, 0.7271166443824768, 0.7194558382034302, 0.7263241410255432, 0.7213049530982971, 0.7288337349891663, 0.7214370369911194, 0.7289658188819885, 0.7339849472045898, 0.7341170310974121, 0.7293620109558105, 0.7333245277404785, 0.7392682433128357, 0.7395324110984802, 0.7358341217041016, 0.7358341217041016, 0.7382115721702576, 0.7401928305625916, 0.7334566116333008, 0.7403249144554138], "val_loss": [1.9547497204371862, 1.9379908697945731, 1.919912542615618, 1.8987973076956612, 1.8739004816327776, 1.8429625374930245, 1.8039217676435197, 1.7554748398917062, 1.6970950194767542, 1.6277827535356795, 1.5480613708496094, 1.4614537102835519, 1.3730836595807756, 1.28505311693464, 1.2023780686514718, 1.1279045513698034, 1.0644865717206682, 1.009728022984096, 0.9629636492047992, 0.9227318082536969, 0.8875698021480015, 0.8592662811279297, 0.8338845797947475, 0.8110579933438983, 0.7907816001347133, 0.7737911599023002, 0.7576973949159894, 0.7433541672570365, 0.7309397799628121, 0.7195220334189278, 0.7082896913800921, 0.6993563345500401, 0.6916581051690238, 0.68288597038814, 0.6746679714747837, 0.6683578831808907, 0.6627149411610195, 0.65675950050354, 0.6513325486864362, 0.6451384340013776, 0.6392219066619873, 0.6340507098606655, 0.6293007986886161, 0.6243091651371547, 0.6196478605270386, 0.6160832984106881, 0.6121900422232491, 0.6082094056265694, 0.604621410369873, 0.6020134517124721, 0.5994630030223301, 0.5954256738935199, 0.592269846371242, 0.5891643421990531, 0.5854600497654506, 0.5838465690612793, 0.5817948579788208, 0.5788179125104632, 0.5764410666057042, 0.5745687655040196, 0.5727908270699638, 0.5693334000451225, 0.5681143147604806, 0.5643154893602643, 0.5630270072392055, 0.5608983210154942, 0.5599718945366996, 0.5579266718455723, 0.5555137055260795, 0.5534043141773769, 0.5511835983821324, 0.549633230481829, 0.5479104518890381, 0.5462338243212018, 0.5440492119107928, 0.5424016203199115, 0.5405083724430629, 0.539317148072379, 0.5391750165394374, 0.5365001133510044, 0.5355584791728428, 0.5344190086637225, 0.5331946441105434], "val_accuracy": [0.16066665947437286, 0.30399999022483826, 0.3659999966621399, 0.39899998903274536, 0.4256666600704193, 0.4483333230018616, 0.47200000286102295, 0.4946666657924652, 0.5239999890327454, 0.5373333096504211, 0.5596666932106018, 0.5726666450500488, 0.5856666564941406, 0.5956666469573975, 0.6019999980926514, 0.625, 0.6420000195503235, 0.653333306312561, 0.6660000085830688, 0.6706666946411133, 0.6733333468437195, 0.6796666383743286, 0.6850000023841858, 0.6869999766349792, 0.6930000185966492, 0.6933333277702332, 0.6976666450500488, 0.7003333568572998, 0.7036666870117188, 0.7093333601951599, 0.7129999995231628, 0.7113333344459534, 0.7170000076293945, 0.722000002861023, 0.7213333249092102, 0.7223333120346069, 0.7213333249092102, 0.7266666889190674, 0.7276666760444641, 0.7289999723434448, 0.7293333411216736, 0.7329999804496765, 0.734666645526886, 0.7353333234786987, 0.734000027179718, 0.7390000224113464, 0.7386666536331177, 0.7390000224113464, 0.7390000224113464, 0.7366666793823242, 0.7446666955947876, 0.7443333268165588, 0.7453333139419556, 0.7476666569709778, 0.749666690826416, 0.7480000257492065, 0.746666669845581, 0.7476666569709778, 0.753333330154419, 0.750333309173584, 0.75, 0.7553333044052124, 0.7566666603088379, 0.7576666474342346, 0.7540000081062317, 0.7576666474342346, 0.7586666941642761, 0.7599999904632568, 0.7583333253860474, 0.7630000114440918, 0.7643333077430725, 0.7620000243186951, 0.7593333125114441, 0.7639999985694885, 0.7663333415985107, 0.765333354473114, 0.7646666765213013, 0.7693333625793457, 0.7670000195503235, 0.768666684627533, 0.7683333158493042, 0.7673333287239075, 0.768666684627533]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 9, 3, 1, 9, 8, 1, 9, 8, 5, 9, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 24, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0], [0, 0, 1, 0, 0, 0, 1], [2, 1, 1, 3, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [26, 57]], "fitness": -0.6642857193946838, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 2, 0, 1, 11, 7, 5, 2, 1, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, tf.math.add(sigma, sigma)))))), tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.281369319035786, 2.134372583705956, 1.6624111696052324, 1.3741448605144029, 1.0635177976010324, 0.9195219965312365, 0.847128009948874, 0.8074626897572054, 0.7870147657621145, 0.736390943343629, 0.7413918635691193, 0.6976726338643251, 0.6906275511449276, 0.6598484111247896, 0.6331392297056987, 0.617800135811511, 0.6140532986268454, 0.5856176513202784, 0.5696642448117688, 0.5527574506103244, 0.5519515494975306, 0.5416190069207678, 0.5219561882054313, 0.5048224851951592, 0.5079720132677799, 0.5013218022545394, 0.49506753737412235, 0.4827651566659864, 0.4775301608324775, 0.47008754362787286, 0.4585755529294728, 0.462631751667192, 0.4567754692161214, 0.43798245616151893, 0.4351012338075372, 0.4270301799039799, 0.42282933510447285, 0.4079875251234735, 0.4062264529296105, 0.40518091695183667, 0.3931096996243572, 0.3879828914604356, 0.3841513962226694, 0.3821230368205758, 0.38826773773567347, 0.3764513615352004, 0.365409931124414, 0.37328543182078167, 0.35548074614527736], "accuracy": [0.1492537260055542, 0.3533218801021576, 0.4558182656764984, 0.5391625761985779, 0.6406022906303406, 0.6567164063453674, 0.6870955228805542, 0.6951525807380676, 0.7042662501335144, 0.7149649858474731, 0.7119271159172058, 0.7314753532409668, 0.737947404384613, 0.7420420050621033, 0.7614582180976868, 0.76106196641922, 0.7670056819915771, 0.7681944370269775, 0.7716285586357117, 0.7849689722061157, 0.7833839654922485, 0.7891955971717834, 0.7952714562416077, 0.8014793395996094, 0.8037247657775879, 0.7987055778503418, 0.8058380484580994, 0.8156121969223022, 0.8153480291366577, 0.8132346868515015, 0.822348415851593, 0.8190463781356812, 0.8240655064582825, 0.8305375576019287, 0.8304054737091064, 0.8286884427070618, 0.8378021121025085, 0.842028796672821, 0.842028796672821, 0.8425571322441101, 0.8432175517082214, 0.8498216867446899, 0.8490291833877563, 0.8514066934585571, 0.8502179384231567, 0.8531237840652466, 0.8594637513160706, 0.8555012345314026, 0.8663320541381836], "val_loss": [1.901867457798549, 1.613609450204032, 0.9596665246146066, 0.7518319572721209, 0.6796043259756905, 0.6781409127371651, 0.6152094091687884, 0.605093138558524, 0.5788979360035488, 0.5817515168871198, 0.5593419415610177, 0.5325866086142403, 0.5106522015162877, 0.5002138274056571, 0.4834400585719517, 0.4795311859675816, 0.46781579085758757, 0.45464370931897846, 0.4542476109095982, 0.43836539132254465, 0.4313303657940456, 0.4302007726260594, 0.4343370965548924, 0.43248232773372103, 0.4293421336582729, 0.4199496677943638, 0.4162960307938712, 0.40472923857825144, 0.3971474937030247, 0.40019077914101736, 0.40766613824026926, 0.3999917336872646, 0.39943274429866243, 0.4066539151327951, 0.38965232031685965, 0.383935809135437, 0.3893809063094003, 0.39680720227105276, 0.39418322699410574, 0.38343063422611784, 0.3807827149118696, 0.3863353133201599, 0.39059016534260343, 0.391116201877594, 0.3850925990513393, 0.37611906017575947, 0.38764827592032297, 0.3887139473642622, 0.3874812977654593], "val_accuracy": [0.39666667580604553, 0.5070000290870667, 0.640333354473114, 0.6830000281333923, 0.699999988079071, 0.721666693687439, 0.7250000238418579, 0.7203333377838135, 0.737666666507721, 0.7516666650772095, 0.753333330154419, 0.7636666893959045, 0.7643333077430725, 0.7796666622161865, 0.7770000100135803, 0.7836666703224182, 0.7883333563804626, 0.7956666946411133, 0.7923333048820496, 0.8090000152587891, 0.815666675567627, 0.8109999895095825, 0.809333324432373, 0.8149999976158142, 0.8106666803359985, 0.8220000267028809, 0.8193333148956299, 0.8216666579246521, 0.8236666917800903, 0.8213333487510681, 0.8286666870117188, 0.8316666483879089, 0.8373333215713501, 0.8383333086967468, 0.8433333039283752, 0.8420000076293945, 0.8360000252723694, 0.8446666598320007, 0.846666693687439, 0.8473333120346069, 0.8473333120346069, 0.8513333201408386, 0.8536666631698608, 0.856333315372467, 0.8529999852180481, 0.8513333201408386, 0.8463333249092102, 0.8460000157356262, 0.8506666421890259]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [4, 3, 3, 2, 5, 2, 0, 5, 2, 1, 6, 8, 9, 7, 4, 2], [3, 0, 3, 2, 1, 0, 1, 0, 0, 3, 1, 0, 5, 0], [22, 67, 67, 77, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.5265714526176453, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 9, 7, 2, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(tf.math.add(beta, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), grad))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, beta))))), alpha), tf.math.add(beta, tf.math.square(tf.math.add(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), alpha)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.square(tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.026235322690265, 1.6328009850061518, 0.9207901917412737, 0.7864524171399938, 0.7847705282287638, 0.7607503880079569, 0.7642963150347134, 0.7478467823649442, 0.7873968347235913, 0.7973179338614796, 0.8513700868302112, 0.9092595573933432, 1.0537210197780016, 1.1440491453688992, 1.7404257141697954e+16], "accuracy": [0.369700163602829, 0.4850085973739624, 0.6666226387023926, 0.7127195596694946, 0.7063795924186707, 0.7214370369911194, 0.7273808121681213, 0.7210407853126526, 0.7230220437049866, 0.7113987803459167, 0.7112666964530945, 0.674679696559906, 0.6413947939872742, 0.64667809009552, 0.23405098915100098], "val_loss": [1.505347388131278, 0.7965611560004098, 0.5972930192947388, 0.527882558958871, 0.5385154826300484, 0.5108650922775269, 0.5393977505820138, 0.5269483157566616, 0.5880931445530483, 0.577285715511867, 0.5645045042037964, 0.6795329366411481, 0.7219144105911255, 1.1707092012677873, NaN], "val_accuracy": [0.5389999747276306, 0.6629999876022339, 0.7379999756813049, 0.7696666717529297, 0.7566666603088379, 0.7726666927337646, 0.7633333206176758, 0.7726666927337646, 0.7716666460037231, 0.7786666750907898, 0.765333354473114, 0.7059999704360962, 0.7303333282470703, 0.7046666741371155, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [5, 9, 1, 9, 9, 6, 1, 9, 8, 5, 6, 9], [1, 0, 3, 2, 3, 0, 3, 2, 0, 3, 1, 0, 5, 0], [84, 73, 67, 77, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.3717142939567566, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 2, 0, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.1102256381894304, 2.273540350487361, 2.313623364040046, 2.2590551924916493, 2.306667324133427, 2.294072204939268, 2.237421521421248, 2.213740274087707, 2.1585666695606, 2.2818617197847195, 2.097089338012895, 2.4131789464110383, 2.3068290151042583, 2.3037045337048188, 2.302230335765149, 2.4938047347902037], "accuracy": [0.1950865089893341, 0.16602826118469238, 0.13089419901371002, 0.15136705338954926, 0.09642054885625839, 0.12772421538829803, 0.16602826118469238, 0.270109623670578, 0.228899747133255, 0.1162329912185669, 0.27565711736679077, 0.2001056671142578, 0.09959053993225098, 0.10091137140989304, 0.10342095047235489, 0.14515915513038635], "val_loss": [1.90590729032244, 1.9647009713309151, 1.973484924861363, 1.9800902094159807, 1.9733129910060339, 1.9579289300101144, 1.821460178920201, 1.8553835323878698, 1.975141933986119, 1.5278432709830148, 1.594092573438372, 1.9792044503348214, 1.9739631925310408, 1.9737723214285714, 1.9590050833565849, 1.9761016028267997], "val_accuracy": [0.16066665947437286, 0.1756666600704193, 0.10000000149011612, 0.09799999743700027, 0.10366666316986084, 0.15933333337306976, 0.22566667199134827, 0.24533332884311676, 0.10100000351667404, 0.25699999928474426, 0.32233333587646484, 0.09799999743700027, 0.1003333330154419, 0.11299999803304672, 0.10066666454076767, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [5, 9, 3, 1, 9, 8, 1, 9, 8, 5, 9, 9], [3, 0, 3, 2, 1, 0, 1, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 77, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [22, 57]], "fitness": -0.21199999749660492, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.square(tf.math.pow(tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.3018571132556116, 2.3021872450473713, 2.3018689857513643, 2.3022619210466058, 2.3036419858770003, 2.3024762046178098, 2.300609075130331, 2.3003104822967253, 2.3019736484844513, 2.301382100057797, 2.2999382977000065, 2.300046167447976, 2.300236549863663, 2.2993635056497808, 2.2987786723701094, 2.300121435698989, 2.299577954170994, 2.2980048201733165, 2.2991894195265914, 2.2993485540242133, 2.297114335314441, 2.2964262783787177, 2.297838171191928, 2.2979750456260164, 2.2970350636089356, 2.297760372888678, 2.2968160892915352, 2.2967111269842917, 2.2961685999493793, 2.296283011391745, 2.2957666467571647, 2.295691304754162, 2.296595819496192, 2.2948277189337647, 2.295408929516973, 2.2954307994696412, 2.2944227167486497, 2.2936761210135117, 2.2929993229708447, 2.294679107100437, 2.294486173250105, 2.293408438419669, 2.2917161626492066, 2.2951370381786207, 2.2921993633255653, 2.29073160848188, 2.2932596005752277, 2.29153161098645, 2.2928098684698126, 2.291022844412827, 2.2918903593059072, 2.288919300970668, 2.2910134492848195, 2.2910436362071422, 2.2901167855081996, 2.290268902324525, 2.2909051585017948, 2.2902286108442977, 2.2889453647410973, 2.2895857591229722, 2.290179912015164, 2.2883256601855866, 2.2866354234907305, 2.2893860566538904, 2.2872514689461494, 2.2889534015350685, 2.2871407600929867, 2.2875901170142843, 2.2861971641339487, 2.286509822907937, 2.2862925838721884, 2.286050926440774, 2.288222673405053, 2.285936173572674, 2.28519517395081, 2.285057985299236, 2.285104514270521, 2.2852183079218835, 2.2855435942835136, 2.284130692655195, 2.284457133509432, 2.2832838388686607, 2.284491189545518, 2.2833812324645857, 2.2828211010313306, 2.283180741775053, 2.2847849514663587, 2.284454998606625, 2.283178497472412, 2.282159690701998, 2.282922364528295, 2.280846820673088, 2.282153250030822, 2.2829135761379393, 2.2812077185071895, 2.2818961853931263, 2.280005575218347, 2.280704556706874, 2.279813295216246, 2.279319423206447], "accuracy": [0.09285431355237961, 0.09060890227556229, 0.09298639744520187, 0.09457138925790787, 0.0866464152932167, 0.09760929644107819, 0.09945846349000931, 0.09681680053472519, 0.09272222965955734, 0.09351472556591034, 0.09906221181154251, 0.09351472556591034, 0.09708096832036972, 0.10091137140989304, 0.09919429570436478, 0.09879804402589798, 0.09681680053472519, 0.1014397069811821, 0.09932637959718704, 0.09906221181154251, 0.10210011899471283, 0.1022322028875351, 0.10394927859306335, 0.10368511080741882, 0.10130762308835983, 0.09826971590518951, 0.10513802617788315, 0.10896842926740646, 0.1002509593963623, 0.10711926966905594, 0.1088363528251648, 0.11174217611551285, 0.10276053100824356, 0.1142517477273941, 0.10711926966905594, 0.10645885765552521, 0.11147800832986832, 0.11134592443704605, 0.11676132678985596, 0.11174217611551285, 0.11491216719150543, 0.11398758739233017, 0.11887465417385101, 0.10711926966905594, 0.1138555034995079, 0.11993131786584854, 0.11517632752656937, 0.11993131786584854, 0.1142517477273941, 0.1228371411561966, 0.1150442510843277, 0.12508255243301392, 0.11676132678985596, 0.12349755316972733, 0.12019548565149307, 0.120459645986557, 0.11768590658903122, 0.11834631860256195, 0.12455421686172485, 0.12455421686172485, 0.11795007437467575, 0.12613920867443085, 0.12812046706676483, 0.1154404953122139, 0.12970545887947083, 0.12534672021865845, 0.13234710693359375, 0.12772421538829803, 0.1302337795495987, 0.1336679458618164, 0.136045441031456, 0.1364416927099228, 0.11795007437467575, 0.12481838464736938, 0.12996962666511536, 0.13657376170158386, 0.1372341811656952, 0.137630432844162, 0.1364416927099228, 0.1368379294872284, 0.13710209727287292, 0.13815876841545105, 0.13776251673698425, 0.14040417969226837, 0.1372341811656952, 0.1410645842552185, 0.13538502156734467, 0.14172500371932983, 0.1450270712375641, 0.14515915513038635, 0.14198917150497437, 0.14581957459449768, 0.1430458277463913, 0.14780081808567047, 0.1538766324520111, 0.14555540680885315, 0.1526878923177719, 0.15202747285366058, 0.14529123902320862, 0.1516312211751938], "val_loss": [1.9710168157305037, 1.970801557813372, 1.9705892971583776, 1.9703741754804338, 1.97016327721732, 1.9699474743434362, 1.9697317395891463, 1.9695178440638952, 1.969304084777832, 1.9690886906215124, 1.9688728196280343, 1.9686617170061385, 1.968447208404541, 1.9682345390319824, 1.9680217334202357, 1.967808791569301, 1.9675945554460799, 1.9673818860735213, 1.9671707834516252, 1.966958863394601, 1.9667462621416365, 1.9665325709751673, 1.966320514678955, 1.9661075047084264, 1.9658942222595215, 1.9656843457903181, 1.9654723576136999, 1.965259211403983, 1.9650468145098006, 1.9648370061601912, 1.964627742767334, 1.9644157545907157, 1.9642041751316615, 1.9639928000313895, 1.96378265108381, 1.963571344103132, 1.9633608545575822, 1.963150978088379, 1.9629406929016113, 1.9627295221601213, 1.9625221661158971, 1.9623093605041504, 1.9621012551443917, 1.961892741067069, 1.9616810934884208, 1.961470672062465, 1.96126161302839, 1.961050237928118, 1.9608401571001326, 1.9606311661856515, 1.9604219027927943, 1.960212230682373, 1.960000651223319, 1.9597904341561454, 1.9595811026436942, 1.9593679564339774, 1.9591576712472099, 1.9589489528111048, 1.958739961896624, 1.9585297448294503, 1.9583193915230888, 1.9581092425755091, 1.9578963688441686, 1.957685879298619, 1.9574785913739885, 1.9572695323399134, 1.957059110913958, 1.9568503924778529, 1.956642014639718, 1.9564324106488908, 1.9562233516148158, 1.9560112953186035, 1.9558023044041224, 1.9555910655430384, 1.9553807803562708, 1.955169950212751, 1.9549597331455775, 1.9547489030020577, 1.9545378684997559, 1.9543258803231376, 1.9541140965053014, 1.9539036069597517, 1.953693117414202, 1.9534806524004256, 1.9532690729413713, 1.9530564035688127, 1.9528472764151437, 1.9526372637067522, 1.9524270466395788, 1.9522130148751395, 1.9520040239606584, 1.9517912864685059, 1.9515770503452845, 1.951364585331508, 1.9511545045035226, 1.9509443555559431, 1.9507318224225725, 1.9505195617675781, 1.9503053256443568, 1.950094563620431], "val_accuracy": [0.04066666588187218, 0.043666668236255646, 0.04466666653752327, 0.045666664838790894, 0.04766666516661644, 0.049666665494441986, 0.050999999046325684, 0.05133333429694176, 0.052666667848825455, 0.05400000140070915, 0.05433333292603493, 0.05700000002980232, 0.057999998331069946, 0.058666665107011795, 0.06133333221077919, 0.061666667461395264, 0.06133333221077919, 0.06233333423733711, 0.06366666406393051, 0.06433333456516266, 0.06466666609048843, 0.06499999761581421, 0.06666667014360428, 0.06833333522081375, 0.0716666653752327, 0.0729999989271164, 0.0729999989271164, 0.07500000298023224, 0.07666666805744171, 0.07833333313465118, 0.0806666687130928, 0.08299999684095383, 0.08433333039283752, 0.0860000029206276, 0.08699999749660492, 0.08866667002439499, 0.08966666460037231, 0.09099999815225601, 0.09166666865348816, 0.09300000220537186, 0.09399999678134918, 0.09433333575725555, 0.09533333033323288, 0.09666666388511658, 0.09799999743700027, 0.10066666454076767, 0.10166666656732559, 0.10533333569765091, 0.1066666692495346, 0.10966666787862778, 0.1106666699051857, 0.11266666650772095, 0.11599999666213989, 0.11766666918992996, 0.12033333629369736, 0.12066666781902313, 0.1223333328962326, 0.1236666664481163, 0.12566666305065155, 0.12800000607967377, 0.12966667115688324, 0.1316666603088379, 0.13300000131130219, 0.13500000536441803, 0.1366666704416275, 0.13833333551883698, 0.14100000262260437, 0.14266666769981384, 0.14533333480358124, 0.14733333885669708, 0.1483333259820938, 0.1509999930858612, 0.1509999930858612, 0.15333333611488342, 0.15433333814144135, 0.15600000321865082, 0.15733332931995392, 0.15933333337306976, 0.1613333374261856, 0.16300000250339508, 0.16599999368190765, 0.16766667366027832, 0.17000000178813934, 0.17366667091846466, 0.1756666600704193, 0.17800000309944153, 0.17933332920074463, 0.1809999942779541, 0.18299999833106995, 0.1850000023841858, 0.18666666746139526, 0.18966667354106903, 0.1913333386182785, 0.19433332979679108, 0.19633333384990692, 0.19766665995121002, 0.20033332705497742, 0.2029999941587448, 0.20399999618530273, 0.20600000023841858]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [5, 9, 6, 9, 9, 6, 1, 9, 8, 5, 6, 9], [1, 0, 3, 2, 3, 0, 3, 2, 0, 3, 1, 0, 5, 0], [30, 66, 67, 77, 53, 45], [0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.1437142789363861, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 2, 0, 1, 7, 6, 4, 2, 2, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), sigma)))), tf.math.add(sigma, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.109937469579162, 2.2747441406625373, 2.3245559688163016, 2.3035008229001357, 2.303383493939915, 2.3030001726668226], "accuracy": [0.1954827606678009, 0.16880200803279877, 0.13749834895133972, 0.0944393053650856, 0.09589222073554993, 0.09800554811954498], "val_loss": [1.9035765784127372, 1.9613996233258928, 1.9747851235525948, 1.9738712991986955, 1.9736992291041784, 1.9737490926470076], "val_accuracy": [0.16066665947437286, 0.09933333098888397, 0.09799999743700027, 0.09799999743700027, 0.10066666454076767, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [5, 3, 3, 2, 3, 2, 1, 5, 2, 9, 6, 8, 9], [5, 0, 3, 2, 1, 0, 1, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 77, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [55, 57]], "fitness": -0.13742856681346893, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.109908671190773, 2.274486911169306, 2.2592898396421592, 2.2412604052140934, 2.3075478721871083, 2.3038470781931175, 2.303111567898449], "accuracy": [0.19561484456062317, 0.17263241112232208, 0.15242372453212738, 0.16272619366645813, 0.10302469879388809, 0.09285431355237961, 0.09879804402589798], "val_loss": [1.905158519744873, 1.962909153529576, 1.9756255831037248, 1.9817680631365096, 1.9741133962358748, 1.973731313432966, 1.973367759159633], "val_accuracy": [0.15800000727176666, 0.2383333295583725, 0.09799999743700027, 0.09833333641290665, 0.10000000149011612, 0.10000000149011612, 0.10066666454076767]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [5, 4, 3, 3, 9, 4, 1, 9, 8, 5, 9, 9], [3, 0, 3, 2, 1, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 24, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10028571635484695, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 9, 4, 3, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), tf.math.sqrt(tf.math.add(beta, beta)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.336317878216013, 2.681678773893609, 2.167178306046132, 1.8121200912522444, 1.6654542771785203, 1.569837586424055, 1.8138461065267166, 2.3055164006880293, 2.2018233372818417, 2.195681746609695], "accuracy": [0.27182671427726746, 0.12059172987937927, 0.26918503642082214, 0.40509840846061707, 0.43587371706962585, 0.4527803361415863, 0.40364548563957214, 0.2316734939813614, 0.17659489810466766, 0.1640470176935196], "val_loss": [3.8689280918666293, 1.955310685294015, 1.421654496874128, 1.1807400158473425, 1.055833441870553, 1.2391666684831892, 1.9378643717084612, 1.8214997564043318, 1.7969085829598563, 1.8603993824550085], "val_accuracy": [0.1886666715145111, 0.18466666340827942, 0.4426666796207428, 0.5113333463668823, 0.5440000295639038, 0.5233333110809326, 0.29866665601730347, 0.19433332979679108, 0.20900000631809235, 0.18033333122730255]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 3, 3, 2, 3, 2, 0, 5, 2, 1, 6, 8, 9, 7, 4, 2], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 24, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 22, 22, 13, 9, 4, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.negative(tf.math.square(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), grad)))))), tf.math.add(beta, tf.math.sqrt(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), grad), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07713644206523895, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [4, 3, 3, 2, 3, 2, 0, 5, 2, 1, 6, 8, 9, 7, 4, 2], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 20, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 5, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 26, 26, 15, 11, 4, 1, 0, 0, 0, 0, 3, 2, 1, 0], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.negative(tf.math.square(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.divide_no_nan(beta, grad)))))), tf.math.add(beta, tf.math.sqrt(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.add(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32), grad))), tf.math.add(beta, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), tf.constant(2.57431039e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, alpha))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(alpha))", "other_info": {"loss": [2.302323963663849, 2.304469036341123, 2.3061124891133247, 2.3093575293503545, 2.3143064777974867, 2.3179283682790808, 2.3196672820742608, 2.3247871145423, 2.3372858486092403, 2.3535502964337707, 2.4152816860131963, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09245806187391281, 0.08492933213710785, 0.08889182657003403, 0.08347642421722412, 0.07000396400690079, 0.07938185334205627, 0.08281600475311279, 0.07766477018594742, 0.07594769448041916, 0.07145687192678452, 0.08492933213710785, 0.10289261490106583, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9720377922058105, 1.9734791346958704, 1.9750142097473145, 1.9770889963422502, 1.9793966838291712, 1.9823522567749023, 1.9855856895446777, 1.9896279062543596, 1.9977803911481584, 2.0169923646109447, 2.519423348563058, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.036666665226221085, 0.030666666105389595, 0.026333333924412727, 0.02800000086426735, 0.03700000047683716, 0.047333333641290665, 0.05999999865889549, 0.07766667008399963, 0.09399999678134918, 0.09933333098888397, 0.09933333098888397, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 3, 3, 2, 3, 2, 1, 5, 2, 9, 6, 8, 9], [3, 0, 3, 2, 1, 0, 1, 0, 0, 3, 1, 0, 5, 0], [84, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 9, 5, 4, 2, 1, 2, 3], [1, 2, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07713644206523895, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 9, 3, 2, 3, 2, 1, 5, 2, 6, 6, 8, 5], [3, 3, 2, 2, 3, 3, 3, 0, 0, 3, 1, 0, 5, 0], [84, 39, 79, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [0, 0, 0, 2, 3, 3, 2], [88, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 7, 6, 4, 2, 2, 4, 2, 2, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.square(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), sigma)))), tf.math.add(sigma, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [697345239.0126697, 13288864601.774137, 60625638945.475105, 169056842129.97174, 362489604596.16534, 672272727282.779], "accuracy": [0.09945846349000931, 0.09628847241401672, 0.10130762308835983, 0.10051512718200684, 0.10434553027153015, 0.09840179979801178], "val_loss": [2640481353.142857, 21116155026.285713, 71258385846.85715, 168898368073.14285, 329867460608.0, 569999116580.5714], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1], [4, 3, 1, 1, 3, 2, 0, 5, 2, 9, 6, 8, 9, 7, 4, 2], [3, 0, 3, 2, 1, 3, 1, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 77, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 22, 22, 14, 8, 4, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.math.subtract(tf.math.subtract(tf.math.add(beta, tf.math.multiply(tf.math.add(grad, tf.math.negative(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))), tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, alpha)), tf.math.divide_no_nan(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09985470771789551, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [5, 3, 1, 9, 9, 6, 1, 9, 8, 5, 9, 9], [3, 0, 3, 2, 1, 0, 1, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 77, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 6, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(alpha, tf.math.square(tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.8794451548803953e+33, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.11398758739233017, 0.10091137140989304, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.08799999952316284, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 9, 3, 1, 9, 8, 1, 9, 8, 5, 9, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [86, 24, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 1], [1, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 2, 0, 1, 1, 1, 0, 1, 0, 7, 4, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.square(tf.math.add(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.math.square(tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.3023653985518413, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09985470771789551, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [9, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1], [4, 3, 3, 2, 3, 2, 3, 5, 2, 1, 6, 8, 9, 7, 4, 2], [3, 0, 3, 2, 1, 0, 1, 0, 0, 3, 1, 0, 5, 0], [78, 73, 67, 24, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 3, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 23, 23, 13, 10, 5, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.multiply(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))))), tf.math.subtract(tf.math.divide_no_nan(tf.math.add(beta, beta), alpha), tf.math.add(beta, tf.math.sqrt(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), alpha), tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))), grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, sigma))", "other_info": {"loss": [2.301953113027111, 2.3025187433923255, 2.302425519649489, 2.3030608230971734, 2.3046610503699942, 2.303742542683787], "accuracy": [0.09259014576673508, 0.08981640636920929, 0.09219389408826828, 0.09311848133802414, 0.08466517180204391, 0.09430722147226334], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1], [3, 9, 3, 2, 3, 2, 1, 5, 2, 9, 6, 8, 9], [1, 0, 3, 2, 3, 0, 3, 2, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.03514285758137703, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.square(alpha), tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3021059878324994, 2.3032665280082742, 2.3037667612373838, 2.3053385722654496, 2.30798354077695, 2.3083700498553976], "accuracy": [0.09272222965955734, 0.0878351628780365, 0.08942015469074249, 0.0878351628780365, 0.07792893797159195, 0.08717474341392517], "val_loss": [1.9715747833251953, 1.972071307046073, 1.9726392201014928, 1.973310879298619, 1.9740051542009627, 1.9748541287013464], "val_accuracy": [0.03799999877810478, 0.03633333370089531, 0.03266666829586029, 0.03166666626930237, 0.026333333924412727, 0.026333333924412727]}}]