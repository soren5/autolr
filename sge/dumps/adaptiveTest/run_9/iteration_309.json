[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 3, 2, 3, 2, 8, 2, 6, 9, 6, 8, 9], [5, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8274285793304443, "mapping_values": [1, 1, 1, 0, 1, 0, 20, 20, 12, 8, 3, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.sqrt(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(tf.math.add(beta, grad), tf.math.divide_no_nan(tf.math.add(beta, beta), tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)), tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.sqrt(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.161618104054707, 1.888755651418449, 1.5216728977917082, 1.166265249976613, 0.9690992124816603, 0.87706851943483, 0.7847294700758222, 0.7725119588948544, 0.720704484066203, 0.7254307543313452, 0.7115184966646496, 0.6837225149588232, 0.6511601463773106, 0.6052761496868998, 0.5995297385732716, 0.6203414470040015, 0.5658310771287629, 0.5781390913851335, 0.5417813362304986, 0.5607146054226819, 0.522377746149439, 0.5186404868549029, 0.5191512282624331, 0.5061060560928943, 0.4894388816604178, 0.5025624633229026, 0.47093843245833794, 0.4683791839325385, 0.4466870564629357, 0.4506076268665763, 0.4577369450294677], "accuracy": [0.3090741038322449, 0.4189670979976654, 0.46929070353507996, 0.5827499628067017, 0.6386210322380066, 0.6738871932029724, 0.7004358768463135, 0.7080966830253601, 0.7276449799537659, 0.7248712182044983, 0.7285695672035217, 0.7367587089538574, 0.7564390301704407, 0.7683265209197998, 0.7721568942070007, 0.759609043598175, 0.7895918488502502, 0.7825914621353149, 0.8025360107421875, 0.7839123010635376, 0.8037247657775879, 0.8039889335632324, 0.8090080618858337, 0.8109893202781677, 0.8187822103500366, 0.8175934553146362, 0.8240655064582825, 0.822348415851593, 0.8374059200286865, 0.833179235458374, 0.8313300609588623], "val_loss": [1.5299549443381173, 1.4246372154780798, 1.0095263889857702, 0.9094799246106829, 0.711043119430542, 0.6057909897395543, 0.5944160733904157, 0.5595886877604893, 0.5802270684923444, 0.6297815697533744, 0.5185008559908185, 0.5597235645566668, 0.4964441401617868, 0.5113171168736049, 0.4729612554822649, 0.45546891008104595, 0.4663356712886265, 0.44106604371752056, 0.45218844073159353, 0.4343021256583078, 0.421227046421596, 0.4375646710395813, 0.42263182571956087, 0.4092275159699576, 0.39892066376549856, 0.39096830572400776, 0.3960469790867397, 0.4004810282162258, 0.38270374706813265, 0.39783518654959543, 0.3792374474661691], "val_accuracy": [0.4950000047683716, 0.43566668033599854, 0.609333336353302, 0.596666693687439, 0.6826666593551636, 0.7363333106040955, 0.7440000176429749, 0.7476666569709778, 0.734333336353302, 0.7336666584014893, 0.7766666412353516, 0.7379999756813049, 0.7743333578109741, 0.7606666684150696, 0.781000018119812, 0.7986666560173035, 0.7983333468437195, 0.8029999732971191, 0.7963333129882812, 0.8116666674613953, 0.8166666626930237, 0.8050000071525574, 0.8119999766349792, 0.8183333277702332, 0.8339999914169312, 0.8370000123977661, 0.8256666660308838, 0.824999988079071, 0.8363333344459534, 0.824999988079071, 0.8366666436195374]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 3, 2, 3, 2, 8, 5, 6, 9, 6, 8, 9], [3, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [18, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8242856860160828, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 7, 4, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.square(tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [1.9989496758270415, 1.313981485813994, 1.0435979696485926, 0.8958474171632442, 0.8265154028707223, 0.7924602296153678, 0.7218127220833637, 0.7023219041395433, 0.6897672648836735, 0.6674021248646762, 0.6691418859496046, 0.6451694811292691, 0.6206904982673399, 0.5897516700979301, 0.6028603358417376, 0.5825864132668411, 0.5584517049358002, 0.5783207779625986, 0.5606790921628562, 0.5537918741361986, 0.5365701786688589, 0.5351865371503944, 0.5343553989539136, 0.519106264875518, 0.4979206266939805, 0.49700877656160075, 0.49419295809067726, 0.4798103412341417, 0.48073170753029815, 0.47114699231068286, 0.4654854761532285, 0.462134106319657, 0.4623289838238415, 0.46378284654187774, 0.44733787223001936, 0.45066941195018634, 0.4331914618967578, 0.44231713108650494, 0.4232037472151778, 0.41146164618431535], "accuracy": [0.3409060835838318, 0.5412759184837341, 0.6145819425582886, 0.6724342703819275, 0.6845859289169312, 0.7051908373832703, 0.7246070504188538, 0.7304186820983887, 0.735569953918457, 0.7457403540611267, 0.7437590956687927, 0.7516840696334839, 0.7631752490997314, 0.7773081660270691, 0.7712323069572449, 0.7799497842788696, 0.789988100528717, 0.7808743715286255, 0.7952714562416077, 0.7898560166358948, 0.7952714562416077, 0.7960638999938965, 0.8026680946350098, 0.8049134612083435, 0.8166688680648804, 0.8152159452438354, 0.8129705190658569, 0.8249900937080383, 0.8241975903511047, 0.8252542614936829, 0.8277638554573059, 0.8294808864593506, 0.8319904804229736, 0.8239334225654602, 0.8308017253875732, 0.8310658931732178, 0.8360850811004639, 0.833179235458374, 0.8449346423149109, 0.8498216867446899], "val_loss": [1.3800905432019914, 0.8124604054859706, 0.7423264299120221, 0.639858433178493, 0.6453103678567069, 0.5848230975014823, 0.5915612833840507, 0.5433486529758998, 0.5556561946868896, 0.5159951618739537, 0.5077944312776838, 0.5667980909347534, 0.4883436986378261, 0.5132428918566022, 0.5232571363449097, 0.47426789147513254, 0.48313139166150776, 0.4500552075249808, 0.46886459418705534, 0.4448333978652954, 0.4469006061553955, 0.45179169518607004, 0.42450155530657085, 0.4319118857383728, 0.42152718135288786, 0.4084772382463728, 0.40928068331309725, 0.4241423947470529, 0.4108014021600996, 0.41522530147007536, 0.4258498890059335, 0.40564182826450895, 0.4123897893088205, 0.3886752724647522, 0.3779057690075466, 0.3797725439071655, 0.3881197486604963, 0.39110872575214933, 0.37868999583380564, 0.3704419902392796], "val_accuracy": [0.45266667008399963, 0.6056666374206543, 0.6570000052452087, 0.7266666889190674, 0.7080000042915344, 0.7326666712760925, 0.7236666679382324, 0.7523333430290222, 0.7506666779518127, 0.7753333449363708, 0.7770000100135803, 0.7153333425521851, 0.7873333096504211, 0.7770000100135803, 0.7419999837875366, 0.7883333563804626, 0.7929999828338623, 0.8119999766349792, 0.796999990940094, 0.8069999814033508, 0.7960000038146973, 0.7990000247955322, 0.8146666884422302, 0.8063333630561829, 0.8180000185966492, 0.8203333616256714, 0.8209999799728394, 0.8116666674613953, 0.8223333358764648, 0.8140000104904175, 0.8043333292007446, 0.8169999718666077, 0.8186666369438171, 0.8336666822433472, 0.8389999866485596, 0.8316666483879089, 0.8346666693687439, 0.8316666483879089, 0.8306666612625122, 0.8330000042915344]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 1, 6, 2, 3, 4, 1, 5, 9, 9, 6, 8, 9], [1, 3, 3, 1, 2, 0, 3, 3, 0, 3, 1, 0, 5, 0], [48, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0], [4, 6, 1, 9, 7], [1, 0, 7], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8057143092155457, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 9, 7, 2, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(alpha, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), tf.math.square(tf.math.add(beta, beta)))))))), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.161918568463137, 1.8861101543300298, 1.4739416840841364, 1.1945588984871742, 0.990662471571965, 0.8907948458876513, 0.7963192403639281, 0.7655857875126385, 0.746844801660605, 0.7271923624513456, 0.6760951947888773, 0.6673402015748136, 0.6631908639232166, 0.6107305358067449, 0.6323935135701045, 0.6168899942524539, 0.5785340708024183, 0.568976470956776, 0.5465942335371266, 0.5696620520993058, 0.5316937847293962, 0.5206504574289348, 0.5108946590824465, 0.5008970505179446, 0.48975012631401205, 0.48296273772616694, 0.48575944157560597, 0.4443056213424316, 0.44717740979507664, 0.45370179738319466, 0.4500748403650847, 0.458853533125163, 0.4395937410918493, 0.4344752039757891, 0.4130638100766802, 0.4296899179874741, 0.40021344113186164, 0.411773199461801, 0.3989123940121433, 0.39650641665750286, 0.3872379959416884, 0.3959166963913532, 0.37858875140915804, 0.37934509615667616], "accuracy": [0.3086778521537781, 0.4177783727645874, 0.4757627844810486, 0.5810328722000122, 0.6296393871307373, 0.665830135345459, 0.6970016956329346, 0.7112666964530945, 0.7154933214187622, 0.7294940948486328, 0.744419515132904, 0.7465327978134155, 0.7456082701683044, 0.76542067527771, 0.7553823590278625, 0.7643640041351318, 0.783119797706604, 0.7886672616004944, 0.7984414100646973, 0.7837802171707153, 0.8004226684570312, 0.8067626357078552, 0.8104609847068787, 0.8128384351730347, 0.819442629814148, 0.819442629814148, 0.8169330358505249, 0.837537944316864, 0.8391229510307312, 0.8350284099578857, 0.8322546482086182, 0.8335754871368408, 0.844010055065155, 0.8383304476737976, 0.8516708612442017, 0.843481719493866, 0.8498216867446899, 0.8492933511734009, 0.8541803956031799, 0.859199583530426, 0.8569541573524475, 0.854708731174469, 0.8617091774940491, 0.8615770936012268], "val_loss": [1.531628199986049, 1.3523563316890173, 0.8694423948015485, 0.8984267030443464, 0.6905412163053241, 0.6328852346965245, 0.6118105479649135, 0.5760517801557269, 0.5472004243305751, 0.5859571525028774, 0.5210298640387399, 0.5946839536939349, 0.5073419468743461, 0.5250649792807442, 0.48347720078059603, 0.4573017018181937, 0.4725386755807059, 0.43282229559762136, 0.45726152828761507, 0.43331401688711985, 0.41844635350363596, 0.44004190819604055, 0.4273451140948704, 0.40436979702540804, 0.3921114887510027, 0.4350039448056902, 0.3964381814002991, 0.41086751222610474, 0.3962803568158831, 0.4189261623791286, 0.3648465360913958, 0.38388230970927645, 0.4128463694027492, 0.36709862095969065, 0.3607437184878758, 0.35878242765154156, 0.3780712740761893, 0.38029520000730244, 0.3560848150934492, 0.3812897205352783, 0.35911681822368074, 0.3475746767861502, 0.3606799670628139, 0.3543208582060678], "val_accuracy": [0.492333322763443, 0.4566666781902313, 0.6586666703224182, 0.6190000176429749, 0.6926666498184204, 0.7123333215713501, 0.7406666874885559, 0.7390000224113464, 0.7599999904632568, 0.7446666955947876, 0.7716666460037231, 0.7273333072662354, 0.765333354473114, 0.7773333191871643, 0.7886666655540466, 0.7926666736602783, 0.7940000295639038, 0.8153333067893982, 0.7950000166893005, 0.8103333115577698, 0.8183333277702332, 0.8036666512489319, 0.8096666932106018, 0.8233333230018616, 0.8296666741371155, 0.8016666769981384, 0.8299999833106995, 0.8266666531562805, 0.8306666612625122, 0.8149999976158142, 0.843999981880188, 0.8306666612625122, 0.8183333277702332, 0.8413333296775818, 0.8446666598320007, 0.843666672706604, 0.8399999737739563, 0.8343333601951599, 0.8560000061988831, 0.8353333473205566, 0.8386666774749756, 0.846666693687439, 0.8493333458900452, 0.847000002861023]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 3, 2, 3, 2, 5, 5, 6, 9, 6, 8, 9], [2, 2, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [18, 53, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.803428590297699, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 10, 6, 2, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, beta))), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), tf.math.divide_no_nan(tf.math.add(beta, beta), tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1619107989020367, 1.8844755067171564, 1.4311917192349266, 1.1437255496818786, 1.1097662204512673, 0.8854140686856569, 0.8245515941927981, 0.8159173501166118, 0.7587550701545198, 0.7349216034698638, 0.706412276437868, 0.6776717261725791, 0.6717121838862004, 0.6205190388659728, 0.6197703676830902, 0.6262208943936363, 0.5812085983129996, 0.5942662878515792, 0.5563216728305048, 0.5793951564949297, 0.5376511392867671, 0.5249270151131, 0.519150962541132, 0.526333267229612, 0.49089021088188634, 0.5137243793625101, 0.48030680271581244, 0.45263345712967334, 0.47472777479690975, 0.45638258266899295, 0.4546886377755945, 0.4683101685598873, 0.43996978602814335, 0.45146260596442733, 0.4184903059621702, 0.4336080625387561, 0.40811520414172286, 0.41002918171482694, 0.40908722471425624, 0.40316000996469237, 0.39389167255839463, 0.4163162932262413, 0.39152953547099956, 0.38410109313030943], "accuracy": [0.3086778521537781, 0.41883501410484314, 0.4897635579109192, 0.5982036590576172, 0.5937128663063049, 0.6671509742736816, 0.6863030195236206, 0.6917183995246887, 0.709549605846405, 0.7234182953834534, 0.7366266250610352, 0.7437590956687927, 0.7404569983482361, 0.7656848430633545, 0.7640998363494873, 0.757099449634552, 0.7872143983840942, 0.7781006693840027, 0.7903843522071838, 0.7783648371696472, 0.798309326171875, 0.805177628993988, 0.8050455451011658, 0.8039889335632324, 0.821820080280304, 0.8104609847068787, 0.821820080280304, 0.8345000743865967, 0.8267071843147278, 0.8339717388153076, 0.8334434032440186, 0.8293488025665283, 0.8432175517082214, 0.8335754871368408, 0.8488970994949341, 0.8408400416374207, 0.8477083444595337, 0.8510104417800903, 0.8506141901016235, 0.8531237840652466, 0.8533879518508911, 0.8453308939933777, 0.8558974862098694, 0.860652506351471], "val_loss": [1.5315631457737513, 1.3255480016980852, 0.7993036508560181, 1.0421188218253, 0.6943214961460659, 0.6666504314967564, 0.6599997452327183, 0.5766559158052716, 0.5899850811277118, 0.5818240301949638, 0.5127584934234619, 0.5602962289537702, 0.5273846217564174, 0.5539958817618233, 0.47729080063956125, 0.46411480222429546, 0.48934451171330046, 0.4581895385469709, 0.4565540722438267, 0.44425695283072336, 0.42296295506613596, 0.43588221073150635, 0.44548443385532926, 0.4192890354565212, 0.44957174573625835, 0.40949379546301706, 0.4024787289755685, 0.4115843517439706, 0.38971290418079924, 0.3947614942278181, 0.36906176805496216, 0.3814070224761963, 0.4360150694847107, 0.3672147137778146, 0.36406679664339336, 0.36895802191325594, 0.38285512583596365, 0.3718480552945818, 0.3552095719746181, 0.3690720796585083, 0.37229466438293457, 0.35321130071367535, 0.3554095966475351, 0.346736090523856], "val_accuracy": [0.492333322763443, 0.4659999907016754, 0.6600000262260437, 0.5523333549499512, 0.6883333325386047, 0.6980000138282776, 0.7013333439826965, 0.7516666650772095, 0.7296666502952576, 0.753000020980835, 0.7730000019073486, 0.7366666793823242, 0.7473333477973938, 0.7413333058357239, 0.7886666655540466, 0.7879999876022339, 0.7863333225250244, 0.7950000166893005, 0.8019999861717224, 0.8106666803359985, 0.8136666417121887, 0.8080000281333923, 0.796999990940094, 0.8109999895095825, 0.7946666479110718, 0.8169999718666077, 0.8266666531562805, 0.8259999752044678, 0.8336666822433472, 0.8270000219345093, 0.8423333168029785, 0.8293333053588867, 0.812666654586792, 0.843999981880188, 0.8489999771118164, 0.8433333039283752, 0.8396666646003723, 0.8423333168029785, 0.8510000109672546, 0.8376666903495789, 0.8366666436195374, 0.8453333377838135, 0.8460000157356262, 0.8500000238418579]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 3, 2, 3, 2, 8, 5, 6, 9, 6, 8, 9], [2, 2, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [18, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8008571267127991, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.sqrt(tf.math.multiply(beta, tf.math.add(grad, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1616514248067613, 1.889497957634589, 1.5230566281621105, 1.1285152263991538, 1.0108419886795506, 0.8660577474064312, 0.8051531575438117, 0.7821729314357156, 0.7505841769357761, 0.7302067056544279, 0.6804716815297882, 0.6464840028390215, 0.6655779295294528, 0.6156898709084175, 0.6051370211564602, 0.6303778715247664, 0.5592276434368697, 0.5781282244451672, 0.5436304026213084, 0.5655654578822369, 0.5264493403551586, 0.5277332371692962, 0.5159085011398787, 0.5045791991500806, 0.5091769175050187, 0.48308376811435905, 0.4753419006418763, 0.45629897329077007, 0.45260237927497293, 0.4564000574699435, 0.47359793910638864, 0.4494622202715334, 0.4522918308958984, 0.43772690466775743, 0.4205734186861509, 0.42074444517640863, 0.4179267182192389, 0.4129573839876898, 0.4211950149904263, 0.4039881745381142, 0.4034456581511061, 0.40447455887875744, 0.3828825882720028, 0.3737438960224016, 0.3680290672891191, 0.36260476376575457, 0.37630489535886597, 0.3736409674845257, 0.3632225125000666, 0.35601234418321454, 0.350954688913267, 0.3360480348219284, 0.352242772723422, 0.32481178908205743, 0.3254914235886078, 0.3534755197262263, 0.3342655716854363, 0.3095909975279182, 0.31436955758750934], "accuracy": [0.3089420199394226, 0.41791045665740967, 0.46612071990966797, 0.5951657891273499, 0.6235635876655579, 0.6822084188461304, 0.6880200505256653, 0.7054550051689148, 0.7120591998100281, 0.7217012047767639, 0.7404569983482361, 0.7578919529914856, 0.7461365461349487, 0.763439416885376, 0.7672698497772217, 0.7561748623847961, 0.7942147850990295, 0.7857614755630493, 0.8013472557067871, 0.7857614755630493, 0.8054417967796326, 0.8018755912780762, 0.8127063512802124, 0.8138951063156128, 0.8119139075279236, 0.8259146809577942, 0.82683926820755, 0.8296129703521729, 0.8400475382804871, 0.8335754871368408, 0.8247259259223938, 0.8364813327789307, 0.8356888294219971, 0.834632158279419, 0.8491612672805786, 0.8445383906364441, 0.8441421389579773, 0.8529917001724243, 0.8457271456718445, 0.8541803956031799, 0.850350022315979, 0.8537842035293579, 0.8610487580299377, 0.8631620407104492, 0.8647470474243164, 0.8664641380310059, 0.8556333184242249, 0.8628978729248047, 0.8644828796386719, 0.8692378997802734, 0.8681812286376953, 0.8770307898521423, 0.868049144744873, 0.8799365758895874, 0.8787478804588318, 0.8712190985679626, 0.8778232932090759, 0.8825782537460327, 0.8800686597824097], "val_loss": [1.5301554203033447, 1.4139253071376257, 0.8832099778311593, 0.8098509311676025, 0.747563089643206, 0.6314441987446376, 0.611201252256121, 0.6316261802400861, 0.572157621383667, 0.5690216166632516, 0.5020998205457415, 0.5489052704402378, 0.5438437121255058, 0.5070204053606305, 0.474749105317252, 0.46051718507494244, 0.4811319623674665, 0.436496445110866, 0.4544203451701573, 0.4324993406023298, 0.4216787133898054, 0.4594959190913609, 0.4302929554666792, 0.4197988084384373, 0.3999964509691511, 0.4063652328082493, 0.3929928881781442, 0.39968481234141756, 0.3755224772862026, 0.41597619227000643, 0.3762133887835911, 0.3908753820828029, 0.4111472112791879, 0.3724104421479361, 0.3645878519330706, 0.4038327762058803, 0.380211557660784, 0.3962514400482178, 0.3563364062990461, 0.3673448732921055, 0.3647134474345616, 0.35636461632592337, 0.3434165120124817, 0.3448511702673776, 0.3422134348324367, 0.3602709344455174, 0.3538281576974051, 0.34241849184036255, 0.3813743165561131, 0.3394823244639805, 0.3289912683623178, 0.3346931678908212, 0.3302112817764282, 0.3341371417045593, 0.37444110427583965, 0.3478044186319624, 0.3390289374760219, 0.32767993211746216, 0.35996635471071514], "val_accuracy": [0.49566665291786194, 0.4449999928474426, 0.6383333206176758, 0.6443333625793457, 0.6886666417121887, 0.7066666483879089, 0.7326666712760925, 0.7083333134651184, 0.7353333234786987, 0.7536666393280029, 0.778333306312561, 0.7563333511352539, 0.7390000224113464, 0.7726666927337646, 0.7879999876022339, 0.7956666946411133, 0.800000011920929, 0.812666654586792, 0.8019999861717224, 0.8163333535194397, 0.812333345413208, 0.800000011920929, 0.8113333582878113, 0.8136666417121887, 0.8293333053588867, 0.815666675567627, 0.8363333344459534, 0.8286666870117188, 0.8370000123977661, 0.8199999928474426, 0.8386666774749756, 0.8273333311080933, 0.8206666707992554, 0.8429999947547913, 0.8416666388511658, 0.828000009059906, 0.8396666646003723, 0.8326666951179504, 0.8486666679382324, 0.8363333344459534, 0.8413333296775818, 0.8453333377838135, 0.8496666550636292, 0.8560000061988831, 0.8560000061988831, 0.8403333425521851, 0.8516666889190674, 0.8566666841506958, 0.8296666741371155, 0.8536666631698608, 0.8579999804496765, 0.8553333282470703, 0.8560000061988831, 0.859333336353302, 0.8446666598320007, 0.8546666502952576, 0.8543333411216736, 0.859333336353302, 0.8393333554267883]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 2, 2, 3, 2, 8, 2, 6, 9, 4, 8, 9], [2, 3, 3, 3, 3, 0, 3, 2, 0, 3, 1, 0, 5, 0], [84, 73, 26, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [6, 3, 8, 9, 7], [1, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.7994285821914673, "mapping_values": [1, 1, 1, 0, 1, 0, 17, 17, 10, 7, 2, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.sqrt(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.multiply(tf.math.add(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(tf.math.add(beta, grad), grad)), tf.math.add(beta, grad)), tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))), tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1288395919631014, 1.793471770185159, 1.3009933344266984, 0.9701482523717365, 0.9152934109183697, 0.778472690534409, 0.7739703735466316, 0.7377828284655233, 0.6699412282447553, 0.667223385186196, 0.6650534815177973, 0.6096714968458379, 0.6246436575242887, 0.5607281545559177, 0.6002121108823117, 0.5404583687134202, 0.535080896900346, 0.5537550280697515, 0.5236013240786497, 0.49647278480085133, 0.5217268781151203, 0.48340455191230824, 0.49076642559551215, 0.49732955934396433], "accuracy": [0.30062079429626465, 0.38488972187042236, 0.5299167633056641, 0.625148594379425, 0.6408664584159851, 0.7066437602043152, 0.7029454708099365, 0.7234182953834534, 0.7453441023826599, 0.746268630027771, 0.7479857206344604, 0.7737419009208679, 0.7644960880279541, 0.7967243194580078, 0.7708360552787781, 0.7943468689918518, 0.7975168228149414, 0.7902522683143616, 0.8039889335632324, 0.8140271902084351, 0.8010830879211426, 0.8189142942428589, 0.817989706993103, 0.8153480291366577], "val_loss": [1.7894204003470284, 1.3548728738512312, 0.8698582308632987, 0.7851448059082031, 0.6048330238887242, 0.6399698768343244, 0.6032148259026664, 0.5310100487300328, 0.5063974346433368, 0.5131218773978097, 0.4751331976481846, 0.4685823236192976, 0.47615013803754536, 0.4847548007965088, 0.4915156534739903, 0.4226548331124442, 0.4736836978367397, 0.43452188798359465, 0.40337941476276945, 0.42493535791124615, 0.40025809832981657, 0.4274199434689113, 0.4034354601587568, 0.40852224826812744], "val_accuracy": [0.4713333249092102, 0.4636666774749756, 0.6053333282470703, 0.6193333268165588, 0.7283333539962769, 0.7083333134651184, 0.7243333458900452, 0.7556666731834412, 0.7563333511352539, 0.762333333492279, 0.7900000214576721, 0.7850000262260437, 0.781333327293396, 0.7706666588783264, 0.7583333253860474, 0.812666654586792, 0.7929999828338623, 0.7983333468437195, 0.8226666450500488, 0.8103333115577698, 0.8173333406448364, 0.7983333468437195, 0.8213333487510681, 0.8159999847412109]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 3, 7, 3, 2, 8, 5, 6, 9, 6, 8, 9], [2, 0, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.7811428308486938, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1288268701857924, 1.7988461345304287, 1.3141215595319176, 0.9799058386883038, 0.9550332755082634, 0.785694185548439, 0.7602840544147388, 0.7128497819386579, 0.6824484929715984, 0.6761856217032268, 0.6619161457008359, 0.6147954949865315, 0.5998241473513352, 0.5723793726902061, 0.5687396791491133, 0.5757660697385415], "accuracy": [0.30062079429626465, 0.38343679904937744, 0.520142674446106, 0.6277902722358704, 0.6316206455230713, 0.7080966830253601, 0.7058512568473816, 0.7401928305625916, 0.739400327205658, 0.7490423917770386, 0.7510236501693726, 0.7726852297782898, 0.7749306559562683, 0.7869502305984497, 0.7928939461708069, 0.7812706232070923], "val_loss": [1.788278307233538, 1.369710922241211, 0.9165558133806501, 0.8814560685838971, 0.6108044385910034, 0.6640360866274152, 0.5721234083175659, 0.5657028981617519, 0.5819749661854335, 0.5337399414607457, 0.4806676592145647, 0.467747552054269, 0.486685003553118, 0.4672600541796003, 0.5370482717241559, 0.4432889563696725], "val_accuracy": [0.4740000069141388, 0.4606666564941406, 0.6190000176429749, 0.612666666507721, 0.7269999980926514, 0.6933333277702332, 0.737333357334137, 0.7269999980926514, 0.7310000061988831, 0.7523333430290222, 0.7906666398048401, 0.7846666574478149, 0.7753333449363708, 0.781333327293396, 0.7480000257492065, 0.7900000214576721]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 8, 3, 2, 3, 2, 1, 5, 4, 1, 2, 8, 9, 7], [2, 3, 3, 3, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [6, 3, 8, 9, 7], [1, 0], [88, 19], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.3651428520679474, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 5, 4, 1, 1, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.238578040035189, 2.9947642604231817, 2.2859076307969652, 2.3412627452053743, 2.304157698174919, 2.30382943877675], "accuracy": [0.21093647181987762, 0.15215955674648285, 0.11570466309785843, 0.11174217611551285, 0.09840179979801178, 0.09826971590518951], "val_loss": [1.617295435496739, 1.9766058921813965, 1.967334815434047, 1.9755405017307825, 1.9739785194396973, 1.9737224578857422], "val_accuracy": [0.36399999260902405, 0.109333336353302, 0.17466667294502258, 0.09799999743700027, 0.09799999743700027, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 5, 2, 3, 2, 8, 5, 6, 9, 6, 8, 9], [2, 0, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 9, 9, 7], [1, 2, 4], [62, 44], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.36399999260902405, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(beta, tf.math.sqrt(tf.math.square(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2385913734942413, 2.888648105760402, 2.2997621170770004, 2.894573699151048, 2.3070198704522156, 2.304190875642792], "accuracy": [0.21054022014141083, 0.15136705338954926, 0.11993131786584854, 0.1492537260055542, 0.09893012791872025, 0.09787346422672272], "val_loss": [1.6168858323778426, 1.9770855903625488, 1.8847606522696358, 1.9780926704406738, 1.9749411174229212, 1.9737039293561662], "val_accuracy": [0.3656666576862335, 0.09966666996479034, 0.2133333384990692, 0.09966666996479034, 0.09799999743700027, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 3, 2, 3, 2, 4, 5, 6, 9, 6, 8, 9, 6], [2, 3, 3, 3, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [46, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [6, 3, 8, 9, 7], [1, 0], [88, 19], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [18, 57]], "fitness": -0.3594285845756531, "mapping_values": [1, 1, 1, 0, 1, 0, 22, 22, 14, 8, 4, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, beta), tf.math.sqrt(tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))), tf.math.divide_no_nan(tf.math.add(beta, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))), grad), tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32), grad))), tf.math.add(beta, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.2386301361165106, 2.944617680397331, 2.302049115223419, 2.446582087656731, 2.3056187267867787, 2.3045586320655125], "accuracy": [0.21080438792705536, 0.1508387327194214, 0.10513802617788315, 0.14080041646957397, 0.09391097724437714, 0.09787346422672272], "val_loss": [1.62168322290693, 1.9767520768301827, 1.9313364710126604, 1.9767278943743025, 1.9742655754089355, 1.9737661225455148], "val_accuracy": [0.3623333275318146, 0.09966666996479034, 0.1589999943971634, 0.09799999743700027, 0.09966666996479034, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 8, 3, 2, 3, 2, 1, 5, 4, 1, 2, 8, 9, 7], [2, 3, 3, 3, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [18, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [6, 3, 8, 9, 7], [6, 0], [88, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 1, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.302911515973421, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09681680053472519, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 1, 3, 2, 3, 4, 1, 5, 9, 9, 6, 8, 9], [1, 3, 3, 1, 3, 0, 3, 3, 0, 3, 1, 0, 5, 0], [49, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [0, 0, 0, 2, 3, 3, 2], [47, 57, 34]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 9, 6, 2, 1, 0, 0, 0, 0, 7, 4, 3, 3], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.multiply(alpha, grad)), tf.math.pow(tf.math.add(beta, grad), tf.math.subtract(alpha, tf.math.square(tf.math.add(beta, grad))))), tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [63514928.45965607, 1205294739.8990886, 5611789184.321226, 15505839055.173689, 33561944554.15665, 61066565787.54088], "accuracy": [0.09655263274908066, 0.1014397069811821, 0.10117553919553757, 0.10170386731624603, 0.09760929644107819, 0.09747721254825592], "val_loss": [243549577.14285713, 1946823168.0, 6568771876.571428, 15568321974.857143, 30404482194.285713, 52535954870.85714], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 8, 3, 2, 3, 2, 1, 5, 4, 1, 2, 8, 9, 7], [2, 3, 3, 3, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [6, 3, 7, 9, 7], [6, 0, 3], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 7, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [501346.7700608631, 2.3136716394408063, 2.305713845439292, 2.3034541564075277, 2.3031045456824444, 2.3030084763157714, 2.303028641847997], "accuracy": [0.0948355570435524, 0.09153348207473755, 0.09285431355237961, 0.09906221181154251, 0.0948355570435524, 0.09351472556591034, 0.09060890227556229], "val_loss": [1.9887807028634208, 1.9777474403381348, 1.9744158472333635, 1.9738378524780273, 1.973628112248012, 1.9736786569867815, 1.9736297471182687], "val_accuracy": [0.09833333641290665, 0.10366666316986084, 0.09966666996479034, 0.10366666316986084, 0.10366666316986084, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 8, 3, 2, 3, 2, 1, 5, 4, 1, 2, 8, 9, 7], [5, 3, 3, 3, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 1, 1], [6, 3, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 3, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 21, 21, 13, 8, 3, 1, 0, 0, 0, 0, 7, 4, 3, 1], "tree_depth": 34, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.sqrt(tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, grad), grad))))), tf.math.add(beta, tf.math.sqrt(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), grad), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.square(tf.math.pow(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 8, 3, 2, 3, 2, 1, 5, 4, 1, 2, 8, 9, 7], [3, 2, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [18, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [0, 1, 0, 1, 0, 1], [4, 6, 1, 9, 7], [1, 0, 3], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 2, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 2, 2, 1, 1, 0, 7, 6, 3, 3, 1, 4, 2, 2, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, sigma))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, beta))", "other_info": {"loss": [2.3034165410664196, 2.30380308390325, 2.3045174677799314, 2.3071773226046055, 2.3097485135559235, 2.3127334371392188, 2.316676691900769, 2.3196428116869066, 2.326796221207193, 2.332620928930238, 2.3548561414124833, 2.4421287489573498, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08809932321310043, 0.0878351628780365, 0.08955223858356476, 0.08545766770839691, 0.0878351628780365, 0.07832518965005875, 0.08017434924840927, 0.07991018146276474, 0.08017434924840927, 0.080042265355587, 0.07726852595806122, 0.08532558381557465, 0.09919429570436478, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.971984931400844, 1.9730151040213448, 1.9742725917271204, 1.9758102553231376, 1.9778970990862166, 1.980203492300851, 1.9829060009547643, 1.9860071454729353, 1.9906187738691057, 1.9979094777788435, 2.017551762717111, 3.719928468976702, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03400000184774399, 0.030666666105389595, 0.0273333340883255, 0.02666666731238365, 0.032999999821186066, 0.03866666555404663, 0.05066666752099991, 0.06599999964237213, 0.07533333450555801, 0.08900000154972076, 0.09933333098888397, 0.09933333098888397, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 3, 6, 3, 2, 8, 5, 6, 9, 6, 8, 9], [2, 2, 4, 3, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [18, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 1, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 13, 13, 7, 6, 1, 1, 1, 0, 1, 0, 7, 4, 3, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(beta, tf.math.sqrt(tf.math.multiply(tf.math.divide_no_nan(tf.math.multiply(beta, grad), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32))))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.square(alpha), tf.math.pow(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09681680053472519, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 8, 3, 2, 3, 2, 1, 5, 4, 1, 2, 8, 9, 7], [2, 3, 3, 3, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [6, 3, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 3, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 8, 4, 4, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.multiply(tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), beta)))", "other_info": {"loss": [2.30303148095319, 2.3023113816437264, 2.3015233537603157, 2.302206228721285, 2.3024257518013536, 2.302149562724845], "accuracy": [0.08981640636920929, 0.09008057415485382, 0.09602430462837219, 0.08889182657003403, 0.09087307006120682, 0.09126931428909302], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 3, 2, 3, 2, 8, 5, 6, 9, 6, 8, 9], [1, 2, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [18, 69, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [1, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 2, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, beta))", "other_info": {"loss": [2.30303148095319, 2.3023113816437264, 2.3015233537603157, 2.302206228721285, 2.3024257518013536, 2.302149562724845], "accuracy": [0.08981640636920929, 0.09008057415485382, 0.09602430462837219, 0.08889182657003403, 0.09087307006120682, 0.09126931428909302], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 8, 3, 2, 3, 2, 1, 5, 4, 1, 2, 8, 9, 7], [1, 3, 3, 1, 3, 0, 3, 3, 0, 3, 1, 0, 5, 0], [73, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0], [6, 3, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 2, 2, 1, 1, 0, 21, 21, 12, 9, 2, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.sqrt(tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))))), tf.math.pow(tf.math.add(beta, alpha), tf.math.subtract(tf.math.add(beta, grad), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.sqrt(grad))))), tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.30303148095319, 2.3023113816437264, 2.3015233537603157, 2.302206228721285, 2.3024257518013536, 2.302149562724845], "accuracy": [0.08981640636920929, 0.09008057415485382, 0.09602430462837219, 0.08889182657003403, 0.09087307006120682, 0.09126931428909302], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 8, 3, 2, 3, 2, 1, 5, 4, 1, 2, 8, 9, 7], [2, 2, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [84, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [6, 3, 8, 9, 7], [6, 0], [88, 44], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 13, 7, 6, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.square(tf.math.pow(tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(beta, sigma), sigma)))", "other_info": {"loss": [2.30303148095319, 2.3023113816437264, 2.3015233537603157, 2.302206228721285, 2.3024257518013536, 2.302149562724845], "accuracy": [0.08981640636920929, 0.09008057415485382, 0.09602430462837219, 0.08889182657003403, 0.09087307006120682, 0.09126931428909302], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]