[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 4, 3, 2, 8, 8, 6, 9, 6, 8, 9], [3, 3, 3, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8159999847412109, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(grad, tf.math.pow(tf.math.add(beta, grad), tf.math.pow(tf.math.multiply(tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, grad))), grad), tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1100563335066003, 1.7040021417950595, 1.3896155356258655, 1.0485330743481691, 0.8967124416670386, 0.7990896397845588, 0.7335701468141718, 0.687598200789721, 0.6900528775875705, 0.6388340312586548, 0.6359072174882341, 0.6070715227399157, 0.6024590889618082, 0.5860999366075387, 0.5474097366031324, 0.541506302091408, 0.549603008701187, 0.5060298454177347, 0.5253611619225929, 0.48362983783490276, 0.4948633885449737, 0.4708047357131115, 0.45620717465476024, 0.4662999592208749, 0.4654456254135679, 0.438907022213876, 0.44371150588913677, 0.4232300494671687, 0.4301613201247608, 0.4357640513134922, 0.42458911714631303, 0.4023130601383928, 0.39731879483722915, 0.37595636307949154, 0.3885002457163416, 0.3913409613174234, 0.36094811757904205, 0.364581286552922, 0.3492573773336606, 0.35986135049566004, 0.35538789626787115, 0.3557754405076084, 0.35064594493471574, 0.32198010922942605, 0.31934751494449476, 0.3294122135831286, 0.32215506926015575, 0.31890623349996056, 0.33973088194082884, 0.3092506658706557, 0.3263013218498154, 0.3157278819130459, 0.28757575949059344, 0.2965077136792936, 0.2928835816347777, 0.30506733638137135, 0.28824548908055275, 0.2841472405334584, 0.2774635524427603, 0.2791186665240028, 0.26274992693070454, 0.27297484147676215, 0.25988560589454773], "accuracy": [0.2810725271701813, 0.4637432396411896, 0.497820645570755, 0.6206578016281128, 0.6639809608459473, 0.693831741809845, 0.7153612375259399, 0.7349095344543457, 0.7401928305625916, 0.7536653280258179, 0.7601373791694641, 0.7671377658843994, 0.7718927264213562, 0.7800818681716919, 0.7951393723487854, 0.7957997918128967, 0.7926297783851624, 0.809140145778656, 0.8054417967796326, 0.8271034359931946, 0.8178576231002808, 0.8241975903511047, 0.8317263126373291, 0.8284242749214172, 0.8256505131721497, 0.8399154543876648, 0.8321225643157959, 0.8436138033866882, 0.8391229510307312, 0.8383304476737976, 0.8432175517082214, 0.8473120927810669, 0.8499537706375122, 0.8617091774940491, 0.8590674996376038, 0.8525954484939575, 0.8704266548156738, 0.863558292388916, 0.8708229064941406, 0.8665962219238281, 0.8704266548156738, 0.8689737319946289, 0.8697662353515625, 0.8836349248886108, 0.8823140859603882, 0.8761062026023865, 0.878879964351654, 0.8772949576377869, 0.8746532797813416, 0.8869370222091675, 0.8778232932090759, 0.884691596031189, 0.8938053250312805, 0.8916919827461243, 0.8922203183174133, 0.8831065893173218, 0.8907673954963684, 0.8947299122810364, 0.895918607711792, 0.8986923694610596, 0.900409460067749, 0.8977677822113037, 0.9072777628898621], "val_loss": [1.4887941564832414, 1.0104452541896276, 1.1547226224626814, 0.6815621171678815, 0.6373100791658673, 0.5795833042689732, 0.5715145894459316, 0.5528683662414551, 0.53882782799857, 0.5475760187421527, 0.47907369477408274, 0.5045678956168038, 0.5872183356966291, 0.49577018192836214, 0.42872380358832224, 0.45351105076926096, 0.4434868437903268, 0.46028499943869455, 0.42781240599496023, 0.42498853376933504, 0.42494518416268484, 0.41345430271966116, 0.40104364497320993, 0.4079056807926723, 0.3820269448416574, 0.4003256559371948, 0.3967598080635071, 0.3804389068058559, 0.374131372996739, 0.3842452849660601, 0.3677652733666556, 0.3670545816421509, 0.34568123306546894, 0.34858044556209017, 0.3829846552440098, 0.35958424636295866, 0.3445677842412676, 0.3692352516310556, 0.35915503331593107, 0.3445504307746887, 0.3829737475940159, 0.3418270264353071, 0.3599693945475987, 0.3440411686897278, 0.34071119342531475, 0.35004148312977384, 0.32085940667561125, 0.3382095013345991, 0.3611626284463065, 0.3588148355484009, 0.31823480129241943, 0.3593787636075701, 0.3240835666656494, 0.3464517763682774, 0.3192394716399057, 0.3256631408418928, 0.348208555153438, 0.32105422019958496, 0.329998825277601, 0.3215558784348624, 0.34283911330359323, 0.3318255714007786, 0.34480468715940205], "val_accuracy": [0.5019999742507935, 0.5379999876022339, 0.5450000166893005, 0.7143333554267883, 0.7046666741371155, 0.7453333139419556, 0.7383333444595337, 0.7680000066757202, 0.7509999871253967, 0.7523333430290222, 0.7900000214576721, 0.7756666541099548, 0.7386666536331177, 0.7639999985694885, 0.8159999847412109, 0.8003333210945129, 0.8029999732971191, 0.7950000166893005, 0.8253333568572998, 0.812666654586792, 0.8023333549499512, 0.8259999752044678, 0.8196666836738586, 0.8213333487510681, 0.8336666822433472, 0.8326666951179504, 0.8256666660308838, 0.8383333086967468, 0.8366666436195374, 0.8236666917800903, 0.8413333296775818, 0.8413333296775818, 0.8503333330154419, 0.8489999771118164, 0.82833331823349, 0.8493333458900452, 0.8519999980926514, 0.8426666855812073, 0.8496666550636292, 0.8476666808128357, 0.8389999866485596, 0.8533333539962769, 0.8476666808128357, 0.8553333282470703, 0.8606666922569275, 0.8529999852180481, 0.8610000014305115, 0.8483333587646484, 0.8479999899864197, 0.8496666550636292, 0.8643333315849304, 0.8446666598320007, 0.8669999837875366, 0.8496666550636292, 0.8650000095367432, 0.859666645526886, 0.8503333330154419, 0.8690000176429749, 0.8606666922569275, 0.859000027179718, 0.8496666550636292, 0.8629999756813049, 0.8560000061988831]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [5, 3, 3, 2, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [51, 57]], "fitness": -0.8140000104904175, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 1, 1, 1, 0, 1, 0, 7, 4, 3, 2], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.subtract(grad, grad)), tf.math.multiply(tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(beta)), grad)), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.square(tf.math.pow(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.0626920498971533, 1.9718776799589808, 1.6418809252581372, 1.0805626729098072, 0.8839629526702625, 0.8557322008608828, 0.7199171143374218, 0.6878605979135433, 0.6511616622216004, 0.6196832863047863, 0.6452981449467804, 0.5772894538939983, 0.5838179139019618, 0.5786933132276685, 0.5261068527236543, 0.5430091007581523, 0.5405711698935189, 0.5003951562630298, 0.5071991765110201, 0.49279301656771013, 0.4949458160176489, 0.46355905436868006, 0.4493310766693403, 0.44743595419621596, 0.47836438262656283, 0.46014238175399835, 0.42344436871377217, 0.4255243147589417, 0.4253211302480772, 0.40879320202407865, 0.4199695392937283, 0.3818111516512648, 0.37841862301942364, 0.38874968965496637, 0.39509150265797083, 0.3884039636907513, 0.35826278687027296, 0.35328188506666663, 0.3545365466724817, 0.3481218136375638, 0.35134384600934476, 0.3490548583108987, 0.3527281950879264, 0.3267873560299002], "accuracy": [0.28199708461761475, 0.3761722445487976, 0.45687490701675415, 0.6012415885925293, 0.6745476126670837, 0.6763967871665955, 0.7257958054542542, 0.7298903465270996, 0.7543256878852844, 0.7650244235992432, 0.752740740776062, 0.7792893648147583, 0.7774402499198914, 0.7804781198501587, 0.8061022162437439, 0.7905164361000061, 0.7923656105995178, 0.8119139075279236, 0.811649739742279, 0.8149517774581909, 0.8125742673873901, 0.8274996876716614, 0.8345000743865967, 0.8388587832450867, 0.8248580098152161, 0.8239334225654602, 0.8454629778862, 0.8438779711723328, 0.8442742228507996, 0.8477083444595337, 0.8473120927810669, 0.8576145768165588, 0.860652506351471, 0.8535200357437134, 0.8521991968154907, 0.8564258217811584, 0.8687095642089844, 0.870030403137207, 0.8642187118530273, 0.8725399374961853, 0.8702945709228516, 0.8689737319946289, 0.8652753829956055, 0.8782195448875427], "val_loss": [1.175736461366926, 1.3268932274409704, 1.1346312250409807, 0.8302209377288818, 0.6033151149749756, 0.5702520608901978, 0.5556281805038452, 0.5437641484396798, 0.4791837419782366, 0.5225622824260167, 0.49628075531550814, 0.45519999095371794, 0.5609326192310878, 0.42932887588228497, 0.42220981631960186, 0.45150792598724365, 0.43981817790440153, 0.44016899381365093, 0.42245026997157503, 0.3941733581679208, 0.3922754100390843, 0.4184060437338693, 0.36936881712504793, 0.4356822371482849, 0.39811417034694124, 0.3969874807766506, 0.3806124585015433, 0.36716246604919434, 0.3546889509473528, 0.36469333512442453, 0.3496532269886562, 0.3666077937398638, 0.3570049915994917, 0.34935613189424786, 0.39333176612854004, 0.3534323147365025, 0.3382148231778826, 0.3464905789920262, 0.34127788884299143, 0.33720942054476055, 0.3842309372765677, 0.3513397148677281, 0.3449952261788504, 0.34027001687458586], "val_accuracy": [0.6116666793823242, 0.44866666197776794, 0.4749999940395355, 0.6236666440963745, 0.7273333072662354, 0.746999979019165, 0.7443333268165588, 0.762333333492279, 0.784333348274231, 0.7556666731834412, 0.7746666669845581, 0.8069999814033508, 0.7509999871253967, 0.8169999718666077, 0.8203333616256714, 0.8023333549499512, 0.8076666593551636, 0.8100000023841858, 0.8236666917800903, 0.8240000009536743, 0.824999988079071, 0.8190000057220459, 0.8386666774749756, 0.7983333468437195, 0.8243333101272583, 0.8303333520889282, 0.8316666483879089, 0.8473333120346069, 0.8473333120346069, 0.8336666822433472, 0.8523333072662354, 0.846666693687439, 0.8403333425521851, 0.8556666374206543, 0.8240000009536743, 0.8513333201408386, 0.8560000061988831, 0.8510000109672546, 0.8576666712760925, 0.8523333072662354, 0.8423333168029785, 0.8486666679382324, 0.8523333072662354, 0.8569999933242798]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [3, 3, 3, 2, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8119999766349792, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.subtract(tf.math.add(beta, grad), grad), tf.math.multiply(tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, beta))), grad)), tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1100925063696425, 1.7043088207375876, 1.4330671052450297, 1.0776527918025944, 0.911662158571167, 0.8003868178889232, 0.7105025702054396, 0.6961740515865371, 0.6668568990800863, 0.6284364857347398, 0.6318399714299354, 0.606028637251818, 0.5585441742795506, 0.5686583822083086, 0.5475934531316781, 0.5327196251195042, 0.5485866423989048, 0.5108356937016195, 0.5177094337332754, 0.4886878531221008, 0.48494738896194467, 0.4717902456764626, 0.4591424288199861, 0.449682311768608, 0.4646987243138599, 0.4353823398775381, 0.4232857416114157, 0.4427080683586321, 0.4315376834838838, 0.40289723182697623, 0.41906411848394487, 0.3921453428030675, 0.4133214375259791, 0.38146793857273914, 0.3799570756951469, 0.3930651371930301], "accuracy": [0.280940443277359, 0.46387532353401184, 0.5095760226249695, 0.5975432395935059, 0.6565843224525452, 0.6973979473114014, 0.7257958054542542, 0.7316074371337891, 0.7411174178123474, 0.7585523724555969, 0.7622507214546204, 0.7689869403839111, 0.789459764957428, 0.7861577272415161, 0.7924976944923401, 0.800290584564209, 0.793950617313385, 0.8084797263145447, 0.8059701323509216, 0.8198388814926147, 0.8186501264572144, 0.8285563588142395, 0.8278959393501282, 0.8339717388153076, 0.8261788487434387, 0.8422929644584656, 0.844010055065155, 0.8356888294219971, 0.8368775844573975, 0.8516708612442017, 0.8482366800308228, 0.8544445633888245, 0.8451988101005554, 0.8593316674232483, 0.8609166741371155, 0.8518029451370239], "val_loss": [1.4896188804081507, 0.9989752088274274, 1.264983858380999, 0.7857861007962909, 0.6312804903302874, 0.5774481466838292, 0.5710898126874652, 0.5336479459490094, 0.5053467069353376, 0.5360282489231655, 0.4670368432998657, 0.46188262530735563, 0.46668602739061626, 0.469806398664202, 0.43408502851213726, 0.4529761927468436, 0.4671699319566999, 0.4690371922084263, 0.42172086238861084, 0.4034637893949236, 0.4265651021684919, 0.4149509498051235, 0.394814201763698, 0.38563771758760723, 0.3886839236531939, 0.3854994944163731, 0.45748112882886616, 0.3910831894193377, 0.357379070350102, 0.37646104608263287, 0.3505480800356184, 0.3863800423485892, 0.35330268314906527, 0.35281541517802645, 0.39627933502197266, 0.3577526978084019], "val_accuracy": [0.5006666779518127, 0.5479999780654907, 0.42399999499320984, 0.6579999923706055, 0.7179999947547913, 0.7456666827201843, 0.7463333606719971, 0.7649999856948853, 0.7749999761581421, 0.7549999952316284, 0.7979999780654907, 0.7986666560173035, 0.7946666479110718, 0.7826666831970215, 0.8159999847412109, 0.7950000166893005, 0.7889999747276306, 0.7976666688919067, 0.8276666402816772, 0.8213333487510681, 0.8043333292007446, 0.8226666450500488, 0.824999988079071, 0.8330000042915344, 0.8320000171661377, 0.8383333086967468, 0.7973333597183228, 0.8320000171661377, 0.8479999899864197, 0.8309999704360962, 0.8513333201408386, 0.8296666741371155, 0.8426666855812073, 0.8489999771118164, 0.8259999752044678, 0.8500000238418579]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 1, 2, 2, 8, 8, 6, 9, 6, 8, 9], [5, 3, 3, 1, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8102856874465942, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.pow(grad, grad)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.110726617252066, 1.7049589683004673, 1.2871082781044845, 1.0547486946425655, 0.9008834512872057, 0.8212184001740968, 0.7433275645986257, 0.6973029902708482, 0.6947259616543194, 0.6379951006307137, 0.6339715005793765, 0.6367677904753054, 0.5968585186992827, 0.610278955272412, 0.5600742020737367, 0.5627430079399304], "accuracy": [0.28080835938453674, 0.46466779708862305, 0.5226522088050842, 0.6210539937019348, 0.6623960137367249, 0.6890767216682434, 0.7112666964530945, 0.7284374833106995, 0.7372870445251465, 0.7553823590278625, 0.7633073329925537, 0.761590301990509, 0.7766477465629578, 0.7695152759552002, 0.7910447716712952, 0.7825914621353149], "val_loss": [1.4890774658748083, 0.9595138004847935, 0.9551291806357247, 0.7425369535173688, 0.6983849491391864, 0.6004792111260551, 0.5567257915224347, 0.5684994459152222, 0.5323213509150914, 0.5389789853777204, 0.4736016307558332, 0.4826123373849051, 0.6307062251227242, 0.4891831534249442, 0.4693476642881121, 0.4700045245034354], "val_accuracy": [0.5043333172798157, 0.5686666369438171, 0.6613333225250244, 0.7086666822433472, 0.6830000281333923, 0.7253333330154419, 0.7476666569709778, 0.7603333592414856, 0.7633333206176758, 0.7666666507720947, 0.7963333129882812, 0.7963333129882812, 0.7336666584014893, 0.7763333320617676, 0.781000018119812, 0.7963333129882812]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [3, 3, 1, 2, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [85, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8071428537368774, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 1, 1, 1, 0, 1, 0, 7, 4, 3, 2], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.subtract(tf.math.add(beta, grad), grad), tf.math.multiply(tf.math.add(tf.math.add(beta, alpha), tf.math.sqrt(tf.math.add(beta, beta))), grad)), tf.math.add(beta, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.square(tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.0005069582170387, 1.3804874118324504, 0.9982990616773334, 0.9119744997738752, 0.8088637446809234, 0.7848016677232167, 0.7151488847720577, 0.701599117299081, 0.6824317743529135, 0.6828165746257919, 0.6819309960928229, 0.6422275904777138, 0.6256084258545974, 0.6108655636147768, 0.5859077013935537, 0.596688210633547, 0.5926665840934942, 0.5591854484184244, 0.569656199326274, 0.5394595922055166, 0.541533825813488, 0.5194768568843096, 0.527586330165795, 0.5134571620407452, 0.5136570887968068, 0.4940682976410578, 0.4928130831669319, 0.4870311495390519, 0.48685293336743457, 0.4749188976139204, 0.49205830998314276, 0.4545293674335472, 0.44722840657181917, 0.44621161489659267, 0.4613167329148499, 0.45602208017326695, 0.4384186303910011, 0.4275299216840938, 0.42456011512905867, 0.4291389253531244, 0.4167039440906657, 0.416839906430405, 0.42264306935746326, 0.39325118874987086, 0.3939794318755667, 0.3866391711585542, 0.40018206412813306, 0.3908507811229589, 0.38811394715542175, 0.37760709897874445, 0.3913528873085613, 0.37649863674939504, 0.3561153452095024, 0.3623671005265336, 0.35628002861928254, 0.3706953713505291, 0.3752726682377781, 0.352417305609837, 0.3430027648119674, 0.35658086444077913, 0.3484277303043122, 0.3447958942472722, 0.3336158706377904], "accuracy": [0.33139610290527344, 0.5056135058403015, 0.6346585750579834, 0.6684718132019043, 0.6894729733467102, 0.700700044631958, 0.7257958054542542, 0.7289658188819885, 0.7342491149902344, 0.7364945411682129, 0.7432307600975037, 0.7588165402412415, 0.763967752456665, 0.7655527591705322, 0.7839123010635376, 0.7729493975639343, 0.7754589915275574, 0.7891955971717834, 0.7820631265640259, 0.7985734939575195, 0.7948752045631409, 0.8086118102073669, 0.8108572363853455, 0.8138951063156128, 0.8074230551719666, 0.8224804997444153, 0.8129705190658569, 0.8193105459213257, 0.8202351331710815, 0.8232730031013489, 0.817461371421814, 0.8329150676727295, 0.8341038227081299, 0.837537944316864, 0.8272355198860168, 0.8259146809577942, 0.8422929644584656, 0.8401796221733093, 0.843481719493866, 0.8433496356010437, 0.8467837572097778, 0.8491612672805786, 0.8393871188163757, 0.8589354157447815, 0.8519350290298462, 0.8601241707801819, 0.8487650156021118, 0.8525954484939575, 0.8625016212463379, 0.8590674996376038, 0.8599920868873596, 0.860652506351471, 0.8706908226013184, 0.8661999702453613, 0.8687095642089844, 0.8615770936012268, 0.859199583530426, 0.8696341514587402, 0.8745211958885193, 0.8730682730674744, 0.8710870146751404, 0.869502067565918, 0.8765024542808533], "val_loss": [1.3538737297058105, 0.7649649892534528, 0.7603576183319092, 0.6255827631269183, 0.589685354913984, 0.5729073626654488, 0.5521433353424072, 0.5592152391161237, 0.5525369133268084, 0.5891495261873517, 0.5286776678902763, 0.5154174736567906, 0.5585142033440726, 0.48731495652879986, 0.49233239037649973, 0.487402149609157, 0.48296475410461426, 0.4858042172023228, 0.4568487065179007, 0.4364635944366455, 0.4356870140348162, 0.4774730035236904, 0.4272297280175345, 0.43542116028921946, 0.4170871802738735, 0.4235943044934954, 0.42968627384730745, 0.4185008576938084, 0.40586256980895996, 0.4062437585421971, 0.3859340122767857, 0.3901174579347883, 0.38749957936150686, 0.3972254480634417, 0.41409030130931307, 0.39193964856011526, 0.37959284441811697, 0.38653619800295147, 0.3919583814484732, 0.3702835185187204, 0.38987031153270174, 0.37310210296085905, 0.38282387597220285, 0.3621187720979963, 0.3691368613924299, 0.3665913854326521, 0.35228065082005094, 0.354344231741769, 0.38301076207842144, 0.378522481237139, 0.34613485847200665, 0.36081409454345703, 0.3520296471459525, 0.33799366440091816, 0.34750600372041973, 0.3710599882262094, 0.3718352062361581, 0.3339081236294338, 0.3448351195880345, 0.361783504486084, 0.35813640696661814, 0.34299904108047485, 0.3684277619634356], "val_accuracy": [0.45366665720939636, 0.6800000071525574, 0.6626666784286499, 0.7450000047683716, 0.7229999899864197, 0.7563333511352539, 0.7563333511352539, 0.7393333315849304, 0.753333330154419, 0.7333333492279053, 0.7649999856948853, 0.7720000147819519, 0.7463333606719971, 0.7829999923706055, 0.7839999794960022, 0.7846666574478149, 0.7823333144187927, 0.7879999876022339, 0.8046666383743286, 0.8083333373069763, 0.8180000185966492, 0.7829999923706055, 0.8133333325386047, 0.8193333148956299, 0.812333345413208, 0.8230000138282776, 0.8086666464805603, 0.8176666498184204, 0.8163333535194397, 0.8190000057220459, 0.8309999704360962, 0.8299999833106995, 0.828000009059906, 0.8259999752044678, 0.8140000104904175, 0.8316666483879089, 0.8379999995231628, 0.8299999833106995, 0.8236666917800903, 0.8370000123977661, 0.8253333568572998, 0.8383333086967468, 0.8323333263397217, 0.8443333506584167, 0.8413333296775818, 0.8373333215713501, 0.8460000157356262, 0.8416666388511658, 0.8316666483879089, 0.8286666870117188, 0.8473333120346069, 0.8379999995231628, 0.8473333120346069, 0.847000002861023, 0.8506666421890259, 0.8323333263397217, 0.8330000042915344, 0.856333315372467, 0.8539999723434448, 0.8410000205039978, 0.8446666598320007, 0.8496666550636292, 0.8410000205039978]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [2, 3, 3, 2, 3, 3, 3, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [30, 57]], "fitness": -0.7988571524620056, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 9, 7, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.subtract(beta, tf.math.multiply(tf.math.add(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.sqrt(grad)), beta))), tf.math.add(beta, grad)), tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2876750610728447, 2.2440098748152297, 2.1886863117094575, 2.0961850393308135, 1.959582419317349, 1.7853742836488788, 1.5822697111864636, 1.4265486339394757, 1.3019937623241526, 1.214808318687704, 1.126347254752609, 1.0822407336613569, 1.031521604242515, 1.0004703701605273, 0.9601956387678425, 0.9364486541006118, 0.9157017838795896, 0.9011723469387287, 0.8779445711049453, 0.8593359645394569, 0.8377399703987428, 0.833662055605013, 0.8131911689342997, 0.809121111262476, 0.8002158465985026, 0.7911864998806359, 0.7800585866257845, 0.768506164674226, 0.7679474827100446, 0.7698726519349859, 0.7461405995027217, 0.742874154537865, 0.7348956926119972, 0.7281685512866705, 0.7348566127963401, 0.7193360963139819, 0.710943797284649, 0.7142888818355898, 0.7011680971314925, 0.6950447571559463, 0.697457455648738, 0.6861358322739491, 0.688941898473171, 0.6872993259618247, 0.6859715878766651, 0.6789461143925961, 0.6654825199943066, 0.6636702453518556, 0.6629474509299281, 0.6623088813980635, 0.6664263661180773, 0.6568338394779114, 0.650237024279161, 0.652320247205997, 0.6486202469591326, 0.6399133967575443, 0.641309466100309, 0.6398057200731996, 0.6290008926026306, 0.6315248423894289, 0.6276743768732451, 0.6254125789660095, 0.6336841441148685, 0.622669360830075, 0.6212518383341538, 0.6178228189019069, 0.6078016018319549, 0.6219829450650631, 0.6139470332995571, 0.6099543813401996, 0.6077758222759329, 0.6034727172765907, 0.6064094190489835], "accuracy": [0.1298375427722931, 0.23656055331230164, 0.31105533242225647, 0.3801347315311432, 0.4193633496761322, 0.4695548713207245, 0.5017831325531006, 0.5254259705543518, 0.5583146214485168, 0.5783912539482117, 0.6100911498069763, 0.6244881749153137, 0.6369040012359619, 0.6448289752006531, 0.659490168094635, 0.6670188903808594, 0.6732267737388611, 0.674679696559906, 0.6837934255599976, 0.6894729733467102, 0.6948884129524231, 0.6973979473114014, 0.7025492191314697, 0.7054550051689148, 0.7108704447746277, 0.7083608508110046, 0.7147008180618286, 0.722229540348053, 0.713908314704895, 0.7185312509536743, 0.7238145470619202, 0.7269845604896545, 0.7306828498840332, 0.7310791015625, 0.7320036888122559, 0.7339849472045898, 0.7378153204917908, 0.7320036888122559, 0.7388719916343689, 0.7396644949913025, 0.7423061728477478, 0.7429665923118591, 0.7409853339195251, 0.7421740889549255, 0.7433628439903259, 0.7453441023826599, 0.7495707273483276, 0.7565711140632629, 0.7564390301704407, 0.7537974119186401, 0.7512878179550171, 0.7532690763473511, 0.7568352818489075, 0.7511557340621948, 0.7559106945991516, 0.7611940503120422, 0.7578919529914856, 0.7644960880279541, 0.7637035846710205, 0.7588165402412415, 0.7664773464202881, 0.7646281719207764, 0.7621186375617981, 0.7650244235992432, 0.7677981853485107, 0.765949010848999, 0.7691190242767334, 0.7683265209197998, 0.7692511081695557, 0.7677981853485107, 0.7713643908500671, 0.7745344042778015, 0.7709681391716003], "val_loss": [1.934436457497733, 1.8904908725193568, 1.8224461419241769, 1.7129956313541956, 1.5524170058114188, 1.3598950590406145, 1.1725612708500452, 1.0328261852264404, 0.930530343736921, 0.8611270870481219, 0.8050363915307182, 0.7686139856066022, 0.7348076105117798, 0.7123332364218575, 0.68983565058027, 0.6759662117276873, 0.6632153987884521, 0.64903153691973, 0.635973402432033, 0.6247366326195853, 0.6169621433530535, 0.6098348413194928, 0.6017096212932042, 0.5951317208153861, 0.5880224364144462, 0.5837274278913226, 0.5765640735626221, 0.5685350724628994, 0.5676347698484149, 0.5621444838387626, 0.5575963939939227, 0.5539225680487496, 0.547234194619315, 0.5461479255131313, 0.5436619179589408, 0.5406955139977592, 0.5363813638687134, 0.5317739077976772, 0.529447044645037, 0.5262660128729684, 0.5272470542362758, 0.5234872102737427, 0.5181922571999686, 0.5169436761311123, 0.5145212922777448, 0.5124045269829887, 0.5093763555799212, 0.5084339039666312, 0.5035839762006488, 0.5054953438895089, 0.506001387323652, 0.5008331707545689, 0.4963562658854893, 0.49562362262180876, 0.49365246295928955, 0.49462785039629253, 0.4948868751525879, 0.49173871108463835, 0.48753113406045095, 0.4875267233167376, 0.4850932700293405, 0.483081545148577, 0.483974780355181, 0.4823847498212542, 0.4802477870668684, 0.4771086147853306, 0.4758639335632324, 0.4772759675979614, 0.4740239041192191, 0.4721583127975464, 0.4717761959348406, 0.4749732528414045, 0.4708784988948277], "val_accuracy": [0.3269999921321869, 0.4129999876022339, 0.45233333110809326, 0.5053333044052124, 0.5546666383743286, 0.5713333487510681, 0.6016666889190674, 0.6489999890327454, 0.6700000166893005, 0.6779999732971191, 0.6903333067893982, 0.6930000185966492, 0.7016666531562805, 0.7076666951179504, 0.7170000076293945, 0.7183333039283752, 0.7146666646003723, 0.721666693687439, 0.7333333492279053, 0.7296666502952576, 0.737666666507721, 0.7426666617393494, 0.746999979019165, 0.7509999871253967, 0.7506666779518127, 0.7553333044052124, 0.7463333606719971, 0.7509999871253967, 0.7590000033378601, 0.7553333044052124, 0.7599999904632568, 0.7630000114440918, 0.7673333287239075, 0.7670000195503235, 0.7673333287239075, 0.7706666588783264, 0.7693333625793457, 0.7720000147819519, 0.7710000276565552, 0.7739999890327454, 0.7676666378974915, 0.7770000100135803, 0.7753333449363708, 0.7770000100135803, 0.7763333320617676, 0.7789999842643738, 0.7806666493415833, 0.7786666750907898, 0.7826666831970215, 0.7789999842643738, 0.7736666798591614, 0.7793333530426025, 0.7836666703224182, 0.7793333530426025, 0.7826666831970215, 0.7846666574478149, 0.778333306312561, 0.7833333611488342, 0.7876666784286499, 0.7896666526794434, 0.7833333611488342, 0.7893333435058594, 0.7896666526794434, 0.7946666479110718, 0.7946666479110718, 0.7873333096504211, 0.7929999828338623, 0.7950000166893005, 0.793666660785675, 0.7903333306312561, 0.7933333516120911, 0.7876666784286499, 0.7943333387374878]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 1, 3, 2, 9, 8, 6, 9, 6, 8, 9], [1, 3, 3, 2, 0, 0, 0, 0, 0, 3, 1, 0, 5, 0], [30, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [70, 57]], "fitness": -0.3937142789363861, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.pow(tf.math.subtract(tf.math.add(beta, alpha), grad), grad), tf.math.multiply(tf.math.add(beta, beta), tf.math.add(tf.math.add(beta, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.7149077643965214, 2.240668375698992, 2.2962649751884148, 2.6183927362432193, 3.900571843778232, 2.30843567249876, 2.3039945371713717, 2.303765475868061], "accuracy": [0.2075023055076599, 0.15995244681835175, 0.12772421538829803, 0.190859854221344, 0.18478403985500336, 0.09760929644107819, 0.09985470771789551, 0.09681680053472519], "val_loss": [1.5878852094922746, 1.9731059074401855, 1.8818421363830566, 1.6644492830548967, 1.9834115164620536, 1.975078923361642, 1.9741541998726981, 1.9736366953168596], "val_accuracy": [0.3656666576862335, 0.09833333641290665, 0.41233333945274353, 0.22366666793823242, 0.1003333330154419, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [3, 3, 3, 2, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.2542857229709625, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 1, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.subtract(tf.math.add(beta, grad), grad), tf.math.multiply(tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, beta))), grad)), tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.7640985540977763, 2.2924241569961428, 2.305457554693629, 2.3034387560977816, 2.2992773539417564, 2.2890192392936486], "accuracy": [0.18636904656887054, 0.18134988844394684, 0.09589222073554993, 0.0936468094587326, 0.11359133571386337, 0.14317791163921356], "val_loss": [1.959214210510254, 1.9758999007088798, 1.9740246364048548, 1.9729222570146834, 1.9538448197501046, 1.9750749043055944], "val_accuracy": [0.296999990940094, 0.10366666316986084, 0.09966666996479034, 0.10066666454076767, 0.28466665744781494, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [3, 3, 3, 2, 0, 0, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [85, 57]], "fitness": -0.24628572165966034, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 9, 7, 3, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.subtract(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.sqrt(tf.math.add(beta, grad))))), beta), tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.765513038969059, 2.223381489590096, 2.3010914648497156, 2.232709091384539, 2.3039216260238646, 2.2959206433989636, 2.245074386499687, 2.304279717660898, 2.302094140309132, 2.292701524466949, 2.30322441537036], "accuracy": [0.18650111556053162, 0.1678774207830429, 0.10870426893234253, 0.17580240964889526, 0.09866596013307571, 0.12521463632583618, 0.13974376022815704, 0.09932637959718704, 0.10976093262434006, 0.1352529376745224, 0.1018359512090683], "val_loss": [1.9590847832815987, 1.9749452727181571, 1.9452125004359655, 1.9753626414707728, 1.9734923498971122, 1.774305752345494, 1.97518219266619, 1.9731856754847936, 1.9679179191589355, 1.9744766780308314, 1.9728539330618722], "val_accuracy": [0.2083333283662796, 0.10066666454076767, 0.195333331823349, 0.09833333641290665, 0.10000000149011612, 0.2266666740179062, 0.09833333641290665, 0.10366666316986084, 0.10333333164453506, 0.09966666996479034, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 1, 2, 2, 8, 8, 6, 9, 6, 8, 9], [3, 0, 3, 2, 3, 3, 0, 0, 0, 3, 1, 0, 5, 0], [33, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [4, 3, 5, 4, 2, 1, 2, 3], [1, 3, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 13, 13, 7, 6, 1, 1, 1, 0, 1, 0, 3, 1, 2, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.subtract(tf.math.add(beta, grad), tf.constant(3.44451957e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, beta))), grad)), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(alpha, sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09496764093637466, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [5, 3, 3, 2, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 12, 12, 6, 6, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.subtract(grad, grad)), tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), beta)), grad)), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09496764093637466, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 1, 3, 2, 1, 8, 6, 9, 6, 8, 9], [3, 3, 3, 2, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [0, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 15, 15, 8, 7, 2, 1, 1, 0, 1, 1, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.subtract(tf.math.add(beta, grad), grad), tf.math.multiply(tf.math.add(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(beta, beta), grad)), tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))), tf.math.sqrt(tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09496764093637466, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 6, 4, 4, 9, 2, 8, 8, 6, 9, 6, 8, 9], [5, 3, 3, 2, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [4, 8, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [1, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 8, 4, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(beta, tf.math.pow(tf.math.pow(tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), grad), tf.math.add(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.sqrt(tf.math.add(beta, grad))))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.sqrt(alpha), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09496764093637466, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 2, 4, 1, 3, 0, 8, 8, 6, 9, 6, 8, 9], [2, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.subtract(tf.math.add(beta, beta), grad), tf.math.multiply(tf.math.negative(tf.math.add(beta, grad)), tf.math.sqrt(tf.math.add(beta, beta)))), grad)), tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07938185334205627, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 6, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [2, 3, 3, 2, 3, 0, 3, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 9, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 1, 1, 0, 0, 0, 0, 2, 2, 0, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.subtract(tf.math.add(beta, beta), tf.math.multiply(grad, grad)), tf.math.add(beta, beta)), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [67564500.54321752, 1268091824.1669528, 5902934811.422533, 16225182683.887465, 34790815570.605736, 64596132927.43363], "accuracy": [0.09298639744520187, 0.10196803510189056, 0.09853387624025345, 0.10500594228506088, 0.10170386731624603, 0.09866596013307571], "val_loss": [255995181.7142857, 2046336585.142857, 6904552155.428572, 16364158976.0, 31958791899.42857, 55221762925.71429], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 5, 1, 3, 5, 8, 8, 6, 9, 6, 8, 9], [5, 3, 3, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 11, 11, 7, 4, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.square(grad), tf.math.subtract(grad, tf.math.multiply(tf.math.square(tf.math.add(beta, grad)), tf.math.sqrt(tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09496764093637466, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 2, 4, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [3, 3, 3, 2, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 6, 7, 2, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), tf.math.add(tf.math.pow(tf.math.add(beta, grad), grad), tf.math.subtract(tf.math.multiply(tf.math.add(beta, beta), tf.math.add(tf.math.add(beta, grad), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.080042265355587, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [5, 4, 3, 2, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 8, 4, 4, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(alpha, tf.math.square(tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09496764093637466, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 1, 3, 2, 0, 8, 6, 9, 6, 8, 9], [5, 1, 3, 2, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 9, 7, 2, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.subtract(tf.math.add(beta, grad), tf.math.multiply(tf.math.add(tf.math.negative(tf.math.add(beta, alpha)), tf.math.sqrt(tf.math.add(beta, grad))), beta)), tf.math.add(beta, grad)), tf.math.divide_no_nan(tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3041028654287206, 2.301812654882453, 2.3023297992978886, 2.3007897585295827, 2.301585157423633, 2.304535451991573], "accuracy": [0.08770307898521423, 0.09351472556591034, 0.0870426595211029, 0.09338264167308807, 0.09338264167308807, 0.0878351628780365], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [5, 3, 3, 2, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [3, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 2, 2, 1, 1, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(grad, tf.math.pow(tf.math.add(beta, grad), grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, sigma), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3041028654287206, 2.301812654882453, 2.3023297992978886, 2.3007897585295827, 2.301585157423633, 2.304535451991573], "accuracy": [0.08770307898521423, 0.09351472556591034, 0.0870426595211029, 0.09338264167308807, 0.09338264167308807, 0.0878351628780365], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]