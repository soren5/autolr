[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1], [3, 3, 3, 8, 7, 2, 1, 4, 6, 3, 4, 9, 1, 1, 8, 8], [1, 3, 3, 0, 1, 2, 3, 4, 0, 0, 4, 3, 5], [59, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1], [2, 0, 0, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 56]], "fitness": -0.8217142820358276, "mapping_values": [1, 1, 1, 0, 1, 0, 26, 26, 14, 12, 4, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.sqrt(grad))), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(grad, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha))), tf.math.add(beta, beta))), tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))), grad)), tf.math.subtract(tf.math.add(beta, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.subtract(grad, tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1580036109732346, 2.041088531313634, 1.788821256659869, 1.2726077623434071, 1.0206633568313914, 0.9110537868181571, 0.8722269114265825, 0.7990571198021306, 0.717300046475934, 0.7267009995601212, 0.6551523755144969, 0.7103891249629469, 0.6519887628509321, 0.6190243323071916, 0.6304358386832803, 0.5825973944090235, 0.6196799216851772, 0.5736235190675464, 0.5545257567068242, 0.5426235369341075, 0.5317050644970683, 0.5316996391990071, 0.5224693017888614], "accuracy": [0.2642979919910431, 0.35107648372650146, 0.39690926671028137, 0.5444459319114685, 0.6305639743804932, 0.6643772125244141, 0.6778497099876404, 0.6959450244903564, 0.7290979027748108, 0.7235503792762756, 0.7526086568832397, 0.7516840696334839, 0.7537974119186401, 0.7664773464202881, 0.76106196641922, 0.7791573405265808, 0.7637035846710205, 0.7849689722061157, 0.7923656105995178, 0.8010830879211426, 0.7998943328857422, 0.8047813773155212, 0.8064984679222107], "val_loss": [1.7348391669137138, 1.4633198125021798, 1.0320252690996443, 1.013620104108538, 0.728769336427961, 0.6805052416665214, 0.6282983848026821, 0.5801477602549961, 0.7260879959378924, 0.5093833889280047, 0.5305436849594116, 0.5300515379224505, 0.5678980350494385, 0.536301715033395, 0.48095801898411344, 0.46578928402491976, 0.4879014492034912, 0.4363572767802647, 0.43611166306904386, 0.4412968839917864, 0.516628520829337, 0.42473332371030537, 0.43581557273864746], "val_accuracy": [0.3790000081062317, 0.4790000021457672, 0.5799999833106995, 0.625, 0.6940000057220459, 0.7096666693687439, 0.7080000042915344, 0.737333357334137, 0.6573333144187927, 0.7860000133514404, 0.7646666765213013, 0.737333357334137, 0.7473333477973938, 0.7583333253860474, 0.7879999876022339, 0.793666660785675, 0.7739999890327454, 0.8163333535194397, 0.8100000023841858, 0.8149999976158142, 0.7583333253860474, 0.8159999847412109, 0.7956666946411133]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 6, 2, 8, 4, 5, 8, 2, 9, 5, 4, 9], [1, 2, 0, 3, 0, 2, 3, 4, 2, 0, 1, 0, 5], [59, 58, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8091428279876709, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, alpha), tf.math.divide_no_nan(beta, tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.08595035726746, 1.7899515022140027, 1.299366758373892, 1.0813620859338087, 0.8306677873974478, 0.7747239291770284, 0.7099151780041312, 0.7248079749996541, 0.6587195647328112, 0.6451477575862664, 0.629324776558529, 0.601154564197242, 0.5592404572545828, 0.5881381318112878, 0.5543738837176625, 0.527633384828633, 0.49926259361474173, 0.5128665541448393, 0.4960963920500804, 0.4959130585075543, 0.4643971441467881, 0.4918469708428139, 0.4637045683704583, 0.4530324492401309], "accuracy": [0.28305375576019287, 0.40245673060417175, 0.54220050573349, 0.5993924140930176, 0.6872276067733765, 0.7046625018119812, 0.7246070504188538, 0.7191916704177856, 0.7493065595626831, 0.754589855670929, 0.7593448758125305, 0.7716285586357117, 0.7911768555641174, 0.778761088848114, 0.7926297783851624, 0.8043851256370544, 0.8157442808151245, 0.8095363974571228, 0.8162726163864136, 0.8150838613510132, 0.828292191028595, 0.8150838613510132, 0.8253863453865051, 0.8368775844573975], "val_loss": [1.588918992451259, 1.3096022605895996, 0.912489754813058, 0.6773069415773664, 0.609609706061227, 0.5487496852874756, 0.5896860020501273, 0.5238973753792899, 0.5496566125324794, 0.49344357422419954, 0.5068594217300415, 0.46629256861550467, 0.5723408801215035, 0.43752401215689524, 0.43610038076128277, 0.41917355571474346, 0.45575882707323345, 0.4012167453765869, 0.3911632810320173, 0.397729115826743, 0.39732872588293894, 0.39254834822246004, 0.4178046924727304, 0.41647815704345703], "val_accuracy": [0.47699999809265137, 0.4716666638851166, 0.562666654586792, 0.7023333311080933, 0.7243333458900452, 0.7443333268165588, 0.721666693687439, 0.7580000162124634, 0.7453333139419556, 0.7846666574478149, 0.7829999923706055, 0.7893333435058594, 0.734000027179718, 0.8073333501815796, 0.8130000233650208, 0.8213333487510681, 0.800000011920929, 0.82833331823349, 0.8326666951179504, 0.831333339214325, 0.8173333406448364, 0.8253333568572998, 0.8103333115577698, 0.8143333196640015]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 6, 3, 2, 7, 8, 1, 9, 6, 5, 8, 9], [1, 3, 0, 0, 1, 2, 1, 4, 2, 0], [59, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.806857168674469, "mapping_values": [1, 1, 1, 0, 1, 0, 18, 18, 11, 7, 3, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.math.add(grad, tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(beta, alpha))))), beta)), tf.math.add(beta, tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.086063436434616, 1.7955756643743972, 1.504865130728199, 1.0201075243959337, 0.8689143193270379, 0.7849524686396665, 0.7260869505572014, 0.7135297245494977, 0.6414719928666632, 0.6355098158754866, 0.6142279299699619, 0.6130855459547188, 0.5695818062818061, 0.5738138299828522, 0.549517203284261, 0.5272596798568527, 0.5103717629093268, 0.506050407437758, 0.48220552444032877, 0.5053953781867654, 0.4749130696322011, 0.4696140778362318, 0.4541243909096847, 0.4467537450579415], "accuracy": [0.28318583965301514, 0.3983621597290039, 0.4966318905353546, 0.6164311170578003, 0.6738871932029724, 0.7012283802032471, 0.7170783281326294, 0.7276449799537659, 0.7530049085617065, 0.7625148296356201, 0.7666094303131104, 0.7635715007781982, 0.7889314293861389, 0.7833839654922485, 0.7943468689918518, 0.804649293422699, 0.8152159452438354, 0.8136309385299683, 0.824329674243927, 0.8059701323509216, 0.822348415851593, 0.828820526599884, 0.8325188159942627, 0.8354246616363525], "val_loss": [1.5945002351488387, 1.5642334052494593, 0.7523518119539533, 0.7127578939710345, 0.5964889185769218, 0.5572361605507987, 0.5928616523742676, 0.5275183575493949, 0.5374706132071358, 0.48764399119785856, 0.49238494464329313, 0.47916737624577116, 0.5597045932497297, 0.44520858355930876, 0.4438378981181553, 0.4172693405832563, 0.4641896145684378, 0.39311632939747404, 0.38830816745758057, 0.4020486729485648, 0.43020910024642944, 0.3965442180633545, 0.39107372079576763, 0.3917458823748997], "val_accuracy": [0.4803333282470703, 0.39666667580604553, 0.6433333158493042, 0.675000011920929, 0.7253333330154419, 0.7456666827201843, 0.7306666374206543, 0.7566666603088379, 0.750333309173584, 0.7829999923706055, 0.7799999713897705, 0.7736666798591614, 0.7390000224113464, 0.8080000281333923, 0.8149999976158142, 0.8216666579246521, 0.7983333468437195, 0.8316666483879089, 0.8389999866485596, 0.8266666531562805, 0.8013333082199097, 0.8256666660308838, 0.8259999752044678, 0.8286666870117188]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 3, 5, 2, 7, 2, 1, 9, 6, 2, 4, 9, 2, 4, 8, 8], [0, 3, 0, 3, 3, 2, 3, 4, 2, 0, 1, 0, 5], [59, 47, 39, 81, 53, 45], [0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1], [2, 0, 0, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.4408571422100067, "mapping_values": [1, 1, 1, 0, 1, 0, 25, 25, 15, 10, 5, 4, 3, 2, 1, 0, 6, 3, 3, 2], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.subtract(tf.math.add(beta, grad), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))), grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.pow(tf.math.add(beta, beta), grad))))))), tf.math.add(beta, grad))), tf.math.add(beta, beta)))), tf.math.sqrt(tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.7048368721653238, 2.305495989935163, 2.29643675109824, 2.1751667573357207, 2.2674796169050744, 2.214087351139085, 2.304083004509217, 2.3027613798483344, 2.302958422049776], "accuracy": [0.22097477316856384, 0.10051512718200684, 0.12653546035289764, 0.23233389854431152, 0.17897239327430725, 0.24501386284828186, 0.09549596905708313, 0.1010434553027153, 0.09919429570436478], "val_loss": [1.977320875440325, 1.9736345154898507, 1.9028259686061315, 1.5639165810176305, 1.8846071788242884, 1.97499908719744, 1.9739571980067663, 1.9737772260393416, 1.97374050957816], "val_accuracy": [0.09833333641290665, 0.1276666671037674, 0.25733333826065063, 0.3863333463668823, 0.2316666692495346, 0.09799999743700027, 0.1003333330154419, 0.1003333330154419, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [6, 6, 3, 5, 4, 5, 8, 1, 9, 1, 4, 9, 9, 4, 5], [0, 3, 0, 3, 0, 2, 3, 4, 2, 0, 1, 0, 5], [59, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 0, 0, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [8, 57]], "fitness": -0.3779999911785126, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 15, 6, 6, 1, 0, 0, 0, 0, 6, 3, 3, 2], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.square(tf.math.sqrt(tf.math.subtract(tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.math.add(beta, tf.math.pow(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))))))))), grad)))), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.math.add(beta, tf.math.square(tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3032579261707733, 2.302059113215682, 2.301217312259193, 2.3011996388954965, 2.3009354957673276, 2.2996106928113806, 2.3003516979126837, 2.299476528337776, 2.298056729827748, 2.296399762334132, 2.297126050386541, 2.296336765916608, 2.296167602345078, 2.2951354405127655, 2.294434810248443, 2.293156984759013, 2.293946973210895, 2.292910160594502, 2.2932718713380216, 2.2906384184974264, 2.288619067548934, 2.290131395771015, 2.2903687888132724, 2.2893476359297207, 2.2874914518106158, 2.289386519383068, 2.2867427679998307, 2.2882136741192776, 2.286978729963775, 2.2839245631820444, 2.2856478121743273, 2.28376819690331, 2.2850456232439496, 2.28400959954081, 2.2826114866349676, 2.281404884310919, 2.2807146227197594, 2.281017865707625, 2.279480778293965, 2.2803338136749813, 2.277848474259201, 2.279763669448679, 2.27827017516067, 2.2782386158908032, 2.2768776919060474, 2.277103514042135, 2.275613075234178, 2.275146348963576, 2.273594999514897, 2.2734258296766523, 2.2729754428727484, 2.2727322822170737, 2.270490318603677, 2.2712633811629224, 2.2716797464763987, 2.271233023968607, 2.2700344355445514, 2.269756764374263, 2.268452003127816, 2.26712055279358, 2.2690274692435133, 2.2663422911284608, 2.266495745179833, 2.2664317798463345, 2.2644438988906423, 2.264497918601459, 2.2629934414707518, 2.2641966317103384, 2.264844054134058, 2.262736922257675, 2.2601984181440016, 2.2603117630796947, 2.26064379466224, 2.259525839584284, 2.2602196735177515, 2.2596083802790172, 2.2592644756023894, 2.256265712688155, 2.2563048972902107, 2.2575656555552666, 2.253420789873816, 2.2549869315404742, 2.2542345398499934, 2.254278225433305, 2.251558756485056, 2.251977738136188, 2.2516869946934404, 2.24998370392794, 2.2500089607092653, 2.2497331167744323, 2.248408924240588, 2.248346146402295, 2.247026715343497, 2.2484270679857814, 2.2441538320855536, 2.2442563093097503, 2.243209773775231, 2.244043170248497, 2.2452150819292473, 2.2407452578022498], "accuracy": [0.09060890227556229, 0.09470347315073013, 0.09655263274908066, 0.09602430462837219, 0.0886276587843895, 0.1014397069811821, 0.09932637959718704, 0.10117553919553757, 0.1018359512090683, 0.1072513535618782, 0.10328886657953262, 0.1026284471154213, 0.10698718577623367, 0.10910051316022873, 0.11293092370033264, 0.10619468986988068, 0.11108175665140152, 0.11530841141939163, 0.10817593336105347, 0.12178047746419907, 0.12759213149547577, 0.12191256135702133, 0.11781799048185349, 0.12310130894184113, 0.12772421538829803, 0.12521463632583618, 0.13115836679935455, 0.12613920867443085, 0.13168670237064362, 0.1352529376745224, 0.12996962666511536, 0.1372341811656952, 0.13815876841545105, 0.14093250036239624, 0.13974376022815704, 0.14212125539779663, 0.15017831325531006, 0.14515915513038635, 0.14780081808567047, 0.14449875056743622, 0.15215955674648285, 0.14912164211273193, 0.15215955674648285, 0.14872540533542633, 0.15017831325531006, 0.15532954037189484, 0.15876370668411255, 0.15889579057693481, 0.16721701622009277, 0.17012283205986023, 0.16338661313056946, 0.17197199165821075, 0.17236824333667755, 0.17250032722949982, 0.17051908373832703, 0.17580240964889526, 0.18161405622959137, 0.17831197381019592, 0.1798969805240631, 0.1806894689798355, 0.17884030938148499, 0.18636904656887054, 0.18438778817653656, 0.1884823739528656, 0.18584071099758148, 0.19561484456062317, 0.19323734939098358, 0.19270901381969452, 0.186104878783226, 0.18412363529205322, 0.19759608805179596, 0.20261524617671967, 0.19997358322143555, 0.20433232188224792, 0.2024831622838974, 0.20578522980213165, 0.19799233973026276, 0.2075023055076599, 0.21054022014141083, 0.20816272497177124, 0.21555937826633453, 0.21199312806129456, 0.21978603303432465, 0.21872936189174652, 0.21899352967739105, 0.21899352967739105, 0.22295601665973663, 0.22757892310619354, 0.22942808270454407, 0.22982433438301086, 0.23233389854431152, 0.22454100847244263, 0.23325848579406738, 0.22639016807079315, 0.2382776439189911, 0.2382776439189911, 0.230484738945961, 0.23378682136535645, 0.23022057116031647, 0.2421080470085144], "val_loss": [1.9706921577453613, 1.9701481546674455, 1.969602448599679, 1.9690569468906947, 1.9685144424438477, 1.9679643086024694, 1.967428207397461, 1.9668921743120467, 1.966362544468471, 1.9658307347978865, 1.9652996744428362, 1.9647653443472726, 1.9642366681780135, 1.963702951158796, 1.9631685529436385, 1.9626305443899972, 1.9621003695896693, 1.9615652220589774, 1.9610303470066615, 1.9604968343462263, 1.9599651609148299, 1.9594354629516602, 1.9589018821716309, 1.9583706174577986, 1.957836423601423, 1.9573048182896204, 1.9567715099879675, 1.956238065447126, 1.9557039397103446, 1.9551679747445243, 1.9546336446489607, 1.9540961810520716, 1.9535600798470634, 1.9530224118913924, 1.952488831111363, 1.9519547734941756, 1.951416015625, 1.950876304081508, 1.950341020311628, 1.94980103628976, 1.949260643550328, 1.9487226349966866, 1.9481902122497559, 1.947648593357631, 1.9471052033560616, 1.946565900530134, 1.946025780269078, 1.9454835483006068, 1.9449339594159807, 1.9443887983049666, 1.9438402993338448, 1.9432907104492188, 1.9427407128470284, 1.942185606275286, 1.941638605935233, 1.9410832268851144, 1.9405218533107214, 1.939967087336949, 1.9394098009381975, 1.9388486317225866, 1.9382959774562292, 1.93772976739066, 1.9371644428798132, 1.9366007532392229, 1.9360284805297852, 1.9354587282453264, 1.9348811422075545, 1.934309414454869, 1.9337336676461356, 1.9331513813563757, 1.932560852595738, 1.9319820404052734, 1.931391988481794, 1.9308075904846191, 1.9302172660827637, 1.929631165095738, 1.9290427480425154, 1.9284392084394182, 1.9278388704572404, 1.9272400992257255, 1.9266300201416016, 1.926020554133824, 1.9254097938537598, 1.9247997828892298, 1.9241833686828613, 1.9235685893467493, 1.9229492459978377, 1.9223212514604842, 1.9216838564191545, 1.9210529327392578, 1.92041962487357, 1.9197826385498047, 1.919140338897705, 1.9185007640293665, 1.9178486551557268, 1.9172004290989466, 1.9165496144975935, 1.9158969606672014, 1.915245873587472, 1.914576530456543], "val_accuracy": [0.044333335012197495, 0.047333333641290665, 0.050999999046325684, 0.05366666615009308, 0.0573333315551281, 0.06133333221077919, 0.06233333423733711, 0.06466666609048843, 0.06599999964237213, 0.0716666653752327, 0.07333333045244217, 0.07900000363588333, 0.08366666734218597, 0.08733333647251129, 0.09099999815225601, 0.09366666525602341, 0.09600000083446503, 0.10000000149011612, 0.10499999672174454, 0.1106666699051857, 0.11766666918992996, 0.12066666781902313, 0.12433333694934845, 0.12933333218097687, 0.13333334028720856, 0.13866665959358215, 0.14300000667572021, 0.14800000190734863, 0.15133333206176758, 0.15566666424274445, 0.16066665947437286, 0.16466666758060455, 0.17233332991600037, 0.1770000010728836, 0.18199999630451202, 0.18733333051204681, 0.1940000057220459, 0.19900000095367432, 0.20366667211055756, 0.20933333039283752, 0.2133333384990692, 0.22100000083446503, 0.22733333706855774, 0.22966666519641876, 0.23366667330265045, 0.23600000143051147, 0.23933333158493042, 0.24433332681655884, 0.24899999797344208, 0.2523333430290222, 0.2566666603088379, 0.26466667652130127, 0.27033331990242004, 0.27399998903274536, 0.2786666750907898, 0.28333333134651184, 0.28600001335144043, 0.2913333475589752, 0.2933333218097687, 0.296999990940094, 0.2996666729450226, 0.3019999861717224, 0.3050000071525574, 0.3089999854564667, 0.31166666746139526, 0.3153333365917206, 0.3186666667461395, 0.3233333230018616, 0.3256666660308838, 0.3266666531562805, 0.3293333351612091, 0.3319999873638153, 0.33533334732055664, 0.3373333215713501, 0.3400000035762787, 0.34066668152809143, 0.3426666557788849, 0.3449999988079071, 0.3476666808128357, 0.35066667199134827, 0.35233333706855774, 0.3529999852180481, 0.35366666316986084, 0.3553333282470703, 0.35633334517478943, 0.35766667127609253, 0.3583333194255829, 0.36000001430511475, 0.3606666624546051, 0.3616666793823242, 0.3616666793823242, 0.3623333275318146, 0.3636666536331177, 0.36533331871032715, 0.36800000071525574, 0.3683333396911621, 0.36899998784065247, 0.3696666657924652, 0.3696666657924652, 0.37166666984558105]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 6, 3, 5, 4, 5, 8, 8, 9, 5, 4, 9], [2, 2, 5, 3, 0, 2, 2, 4, 2, 0], [59, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 6, 0, 4, 2, 1, 2, 3], [0, 2, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, beta), tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.3025915356297078, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 6, 3, 5, 4, 5, 8, 8, 9, 5, 4, 9], [3, 2, 5, 3, 0, 2, 2, 4, 2, 0], [59, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [0, 0, 0, 2, 3, 3, 2], [48, 57, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 7, 4, 3, 3], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(grad, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, beta), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3025915356297078, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09879804402589798, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 6, 6, 5, 4, 0, 8, 8, 9, 5, 4, 9], [1, 3, 1, 0, 1, 2, 1, 4, 2, 0], [59, 81, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 1, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 9, 4, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, alpha), tf.math.divide_no_nan(grad, tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, alpha)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07647603005170822, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1], [1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1], [3, 3, 5, 2, 7, 2, 1, 9, 6, 0, 4, 9, 2, 1, 8, 8], [1, 3, 3, 0, 0, 2, 2, 4, 0, 0, 4, 3, 5], [59, 39, 76, 81, 53, 45], [1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1], [2, 0, 0, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 4, 2, 1, 2, 3], [1, 0, 1, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.negative(alpha))", "other_info": {"loss": [95773950.1238454, 1849044248.0073967, 8567699665.777308, 23238916187.701492, 50703334945.745605, 92108117652.1696], "accuracy": [0.09734513610601425, 0.09681680053472519, 0.09985470771789551, 0.10355303436517715, 0.1022322028875351, 0.10170386731624603], "val_loss": [367906834.28571427, 2941969773.714286, 9927685558.857143, 23530579090.285713, 45956012909.71429, 79409793316.57143], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 5, 3, 2, 5, 5, 1, 6, 6, 5, 8, 9], [1, 3, 0, 0, 1, 2, 1, 4, 2, 0], [84, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 18, 18, 11, 7, 2, 1, 0, 0, 0, 0, 13, 7, 6, 2], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.math.square(grad), tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32)), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, alpha))), beta)))))))))), tf.math.add(beta, tf.math.sqrt(alpha)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(tf.math.pow(tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(beta, sigma), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 3, 3, 2, 7, 2, 1, 9, 6, 3, 4, 9, 1, 1, 8, 8], [0, 3, 0, 3, 0, 2, 3, 4, 2, 0, 1, 0, 5], [59, 50, 79, 52, 26, 45], [0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1], [2, 0, 0, 9, 7], [1, 0], [88, 19], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 4, 2, 1, 2, 3], [1, 1, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 3, 3, 1, 2, 1, 4, 3, 2, 1, 0, 3, 1, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 6, 3, 5, 4, 5, 8, 8, 9, 5, 4, 9], [1, 3, 3, 0, 0, 2, 2, 4, 2, 0], [59, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 7, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, alpha), tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [887234.0768011078, 2.3142766139416286, 2.305598735840817, 2.3035815062224985, 2.3030442199875822, 2.303050312777363, 2.3029886124676024, 2.30298908744679, 2.3030115121139305, 2.302964879537161], "accuracy": [0.09879804402589798, 0.09549596905708313, 0.09589222073554993, 0.09060890227556229, 0.09642054885625839, 0.09945846349000931, 0.09311848133802414, 0.09747721254825592, 0.09853387624025345, 0.09760929644107819], "val_loss": [1.9898402350289481, 1.9775309562683105, 1.9745542662484306, 1.9738307680402483, 1.9736719131469727, 1.9736661911010742, 1.9737450054713659, 1.9736072676522392, 1.973691804068429, 1.9736823354448592], "val_accuracy": [0.09833333641290665, 0.09799999743700027, 0.09833333641290665, 0.09833333641290665, 0.10366666316986084, 0.09933333098888397, 0.09799999743700027, 0.10366666316986084, 0.09933333098888397, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 6, 3, 8, 4, 5, 8, 2, 9, 5, 4, 9], [0, 2, 0, 3, 0, 2, 3, 4, 2, 0, 1, 0, 5], [59, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 2, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 2, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08691058307886124, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1], [3, 3, 3, 2, 7, 2, 1, 4, 6, 3, 4, 9, 1, 1, 8, 8], [1, 3, 0, 0, 1, 2, 1, 4, 2, 1, 0], [59, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 21, 21, 10, 11, 3, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.math.add(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), alpha)), tf.math.add(beta, beta))), alpha))), tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, beta))))))), alpha)), tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [887234.0768011078, 2.314276645432657, 2.3055987853132236, 2.303581537713527, 2.3030442199875822, 2.303050312777363, 2.3029886124676024, 2.30298908744679, 2.303011606587017, 2.3029648660275095], "accuracy": [0.09879804402589798, 0.09549596905708313, 0.09589222073554993, 0.09060890227556229, 0.09642054885625839, 0.09945846349000931, 0.09311848133802414, 0.09747721254825592, 0.09853387624025345, 0.09760929644107819], "val_loss": [1.9898402350289481, 1.9775309562683105, 1.9745542662484306, 1.9738307680402483, 1.9736719131469727, 1.9736661911010742, 1.9737450054713659, 1.9736073357718331, 1.973691667829241, 1.9736824035644531], "val_accuracy": [0.09833333641290665, 0.09799999743700027, 0.09833333641290665, 0.09833333641290665, 0.10366666316986084, 0.09933333098888397, 0.09799999743700027, 0.10366666316986084, 0.09933333098888397, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1], [4, 6, 3, 5, 4, 5, 8, 8, 9, 5, 4, 9], [1, 3, 3, 3, 0, 2, 2, 4, 2, 0], [59, 9, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 0, 0, 9, 7], [1, 0], [88, 19], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 1, 0, 2, 3, 3, 2], [29, 57, 26]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(alpha), tf.math.pow(alpha, tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 7, 3, 5, 4, 5, 8, 8, 9, 5, 4, 9], [3, 2, 5, 3, 0, 2, 2, 4, 2, 0], [59, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [78, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(alpha), tf.math.pow(tf.constant(9.96851186e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 6, 3, 2, 7, 8, 1, 9, 6, 5, 8, 9], [1, 3, 0, 0, 1, 2, 1, 4, 2, 0], [59, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 9, 7, 3, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, alpha), grad)), tf.math.add(tf.math.add(beta, tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.subtract(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, alpha)))))), tf.math.add(beta, beta)))))), alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3034981242449306, 2.3028904009236952, 2.302651486959219, 2.3032244225188236, 2.3035407513517825, 2.302858790543888], "accuracy": [0.09047681838274002, 0.09179764986038208, 0.09377889335155487, 0.09113723784685135, 0.08228767663240433, 0.0944393053650856], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 6, 3, 2, 7, 8, 1, 3, 6, 0, 8, 9], [1, 3, 0, 0, 1, 2, 1, 4, 2, 0], [59, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 0, 0, 1], [2, 0, 0, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 4, 2, 1, 2, 3], [1, 0, 3, 2, 3, 3, 2], [47, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 3, 4, 2, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, grad))), tf.math.add(beta, tf.math.multiply(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.negative(sigma))", "other_info": {"loss": [2.3034981242449306, 2.3028904009236952, 2.302651486959219, 2.3032244225188236, 2.3035407513517825, 2.302858790543888], "accuracy": [0.09047681838274002, 0.09179764986038208, 0.09377889335155487, 0.09113723784685135, 0.08228767663240433, 0.0944393053650856], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1], [3, 3, 5, 2, 7, 2, 1, 9, 6, 2, 6, 9, 2, 1, 8, 8], [3, 2, 5, 3, 2, 2, 2, 4, 2, 0], [59, 47, 79, 92, 53, 45], [0, 1, 0, 0, 0, 1], [1, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 0, 4, 2, 1, 2, 3], [1, 0, 1, 2, 3, 3, 2], [48, 57]], "fitness": -0.03514285758137703, "mapping_values": [1, 1, 1, 0, 1, 0, 26, 26, 16, 10, 3, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.multiply(tf.math.square(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(grad, tf.math.add(beta, beta)))), tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), grad))), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))), beta)), tf.math.add(beta, beta)))), grad))), tf.math.sqrt(beta)), tf.math.add(beta, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.negative(alpha))", "other_info": {"loss": [2.3036984912062115, 2.303630806719229, 2.3042260649150403, 2.305399608838796, 2.3067553731129546, 2.306829188871755], "accuracy": [0.08942015469074249, 0.09021265059709549, 0.08955223858356476, 0.08677849918603897, 0.07687227427959442, 0.08651433140039444], "val_loss": [1.9716307095118932, 1.9720690590994698, 1.9726905822753906, 1.973254816872733, 1.9739430291312081, 1.9745734078543526], "val_accuracy": [0.03700000047683716, 0.03533333167433739, 0.03200000151991844, 0.03033333271741867, 0.027000000700354576, 0.024666666984558105]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 6, 3, 5, 4, 5, 8, 8, 9, 5, 4, 9], [2, 1, 5, 3, 0, 2, 2, 4, 2, 0], [59, 47, 79, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 0, 0, 1], [2, 3, 1, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 5, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.03371428698301315, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(alpha))", "other_info": {"loss": [2.3039944888011514, 2.3048175620743, 2.3069536191849362, 2.3093428326446652, 2.3129804010924064, 2.315666099754165], "accuracy": [0.08875974267721176, 0.08770307898521423, 0.08479725569486618, 0.08268392831087112, 0.07290978729724884, 0.07911768555641174], "val_loss": [1.9721899713788713, 1.9734811782836914, 1.9752414567129952, 1.9770246233258928, 1.9794440269470215, 1.9819112505231584], "val_accuracy": [0.03533333167433739, 0.029666665941476822, 0.024666666984558105, 0.02500000037252903, 0.028333334252238274, 0.03433333337306976]}}]