[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 6, 3, 6, 9, 1, 7, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [1, 0, 2, 0, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1, 1, 3, 2, 3], [47, 46, 39, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 1, 1], [4, 6, 1, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.836571455001831, "mapping_values": [1, 12, 12, 8, 4, 4, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.090533494949341, 1.6157073974609375, 1.2106741666793823, 0.9770593047142029, 0.8257854580879211, 0.7983962893486023, 0.7240594029426575, 0.6758572459220886, 0.6614122986793518, 0.641255795955658, 0.6371176242828369, 0.5950505137443542, 0.586555540561676, 0.5915439128875732, 0.5546203851699829, 0.5466386675834656, 0.5286089181900024, 0.5263264775276184, 0.5117335915565491, 0.49779433012008667, 0.48122933506965637, 0.4799829423427582, 0.45750632882118225, 0.4752553701400757, 0.45501452684402466, 0.4568633735179901, 0.4541945159435272, 0.4208533763885498, 0.4276348054409027, 0.419741153717041, 0.42710378766059875, 0.4021313488483429, 0.41344642639160156, 0.38768255710601807, 0.37693625688552856, 0.37871333956718445, 0.3837706744670868, 0.38698089122772217], "accuracy": [0.2969224750995636, 0.45779949426651, 0.5820895433425903, 0.6337339878082275, 0.6843217611312866, 0.6993792057037354, 0.7293620109558105, 0.7442874312400818, 0.746268630027771, 0.7581561207771301, 0.7539294958114624, 0.778232753276825, 0.7751948237419128, 0.7753269076347351, 0.7893276810646057, 0.7947431206703186, 0.8001585006713867, 0.802800178527832, 0.8072909712791443, 0.8140271902084351, 0.8195747137069702, 0.8228767514228821, 0.8249900937080383, 0.8178576231002808, 0.8256505131721497, 0.8323867321014404, 0.8313300609588623, 0.8470479249954224, 0.8412362933158875, 0.8428213000297546, 0.8450667262077332, 0.8533879518508911, 0.8444063067436218, 0.8541803956031799, 0.8574824929237366, 0.8605204224586487, 0.8561616539955139, 0.8549728989601135], "val_loss": [1.7525092363357544, 1.1563349962234497, 0.8308790922164917, 0.750648021697998, 0.7065343260765076, 0.6577633619308472, 0.6537619233131409, 0.6527172923088074, 0.5941728353500366, 0.5714911818504333, 0.5392706990242004, 0.5114907026290894, 0.5060425400733948, 0.4890839159488678, 0.5785050988197327, 0.48702579736709595, 0.4687780737876892, 0.5115491151809692, 0.49275025725364685, 0.4515756070613861, 0.42701661586761475, 0.41424402594566345, 0.47990038990974426, 0.46570858359336853, 0.4289533793926239, 0.397129625082016, 0.41767096519470215, 0.4106004536151886, 0.4235002100467682, 0.4109620749950409, 0.40085795521736145, 0.4117221236228943, 0.36784422397613525, 0.3730701208114624, 0.3782581090927124, 0.41833871603012085, 0.39582398533821106, 0.38310104608535767], "val_accuracy": [0.4169999957084656, 0.6019999980926514, 0.684333324432373, 0.6913333535194397, 0.734333336353302, 0.7426666617393494, 0.7243333458900452, 0.7333333492279053, 0.7706666588783264, 0.768666684627533, 0.7856666445732117, 0.79666668176651, 0.8073333501815796, 0.8166666626930237, 0.768666684627533, 0.8050000071525574, 0.8259999752044678, 0.7979999780654907, 0.7956666946411133, 0.8166666626930237, 0.8446666598320007, 0.843666672706604, 0.809333324432373, 0.8146666884422302, 0.8396666646003723, 0.8539999723434448, 0.8453333377838135, 0.847000002861023, 0.8366666436195374, 0.846666693687439, 0.8616666793823242, 0.8386666774749756, 0.862333357334137, 0.8600000143051147, 0.8556666374206543, 0.8356666564941406, 0.8523333072662354, 0.8513333201408386]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [5, 6, 3, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1], [7, 6, 1, 9, 7], [0, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8320000171661377, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.090315103530884, 1.6200127601623535, 1.3371018171310425, 1.0197335481643677, 0.8576139807701111, 0.7797917723655701, 0.7405776977539062, 0.6928308606147766, 0.6409977078437805, 0.6500610709190369, 0.6354180574417114, 0.6212484836578369, 0.5819832682609558, 0.5992541909217834, 0.5416818261146545, 0.5532302260398865, 0.5313617587089539, 0.5308464765548706, 0.5272199511528015, 0.4915097951889038, 0.47679367661476135, 0.4710457921028137, 0.4670051336288452, 0.47767359018325806, 0.44590118527412415, 0.44504314661026, 0.4795556962490082, 0.43291130661964417, 0.4335891008377075, 0.4217461347579956], "accuracy": [0.29665830731391907, 0.4593845009803772, 0.5444459319114685, 0.6232994198799133, 0.6740192770957947, 0.7091533541679382, 0.7205125093460083, 0.7382115721702576, 0.7581561207771301, 0.7564390301704407, 0.7582882046699524, 0.7663452625274658, 0.7819310426712036, 0.7666094303131104, 0.7959318161010742, 0.7905164361000061, 0.8029322624206543, 0.7996301651000977, 0.8009510040283203, 0.8215559124946594, 0.8230088353157043, 0.8230088353157043, 0.8212917447090149, 0.8207634687423706, 0.8313300609588623, 0.8370096683502197, 0.8226125836372375, 0.837537944316864, 0.8376700282096863, 0.8411042094230652], "val_loss": [1.7468262910842896, 1.1973575353622437, 0.8120834827423096, 0.8000245094299316, 0.7777208685874939, 0.6510257720947266, 0.6174173355102539, 0.6112797856330872, 0.6363616585731506, 0.5747649073600769, 0.5422629117965698, 0.5074334144592285, 0.4903505742549896, 0.49004948139190674, 0.49371790885925293, 0.48232799768447876, 0.48326578736305237, 0.5115912556648254, 0.4555923640727997, 0.43177035450935364, 0.43449777364730835, 0.4240339696407318, 0.46356716752052307, 0.41545799374580383, 0.40737825632095337, 0.5291815400123596, 0.4354577362537384, 0.4034978151321411, 0.39379212260246277, 0.4075952172279358], "val_accuracy": [0.4193333387374878, 0.5826666951179504, 0.7036666870117188, 0.6803333163261414, 0.7166666388511658, 0.737666666507721, 0.753333330154419, 0.7566666603088379, 0.7549999952316284, 0.7649999856948853, 0.7860000133514404, 0.8073333501815796, 0.8033333420753479, 0.8140000104904175, 0.8016666769981384, 0.8063333630561829, 0.812333345413208, 0.8069999814033508, 0.8199999928474426, 0.8333333134651184, 0.8333333134651184, 0.8339999914169312, 0.8166666626930237, 0.8446666598320007, 0.8579999804496765, 0.7766666412353516, 0.8286666870117188, 0.8450000286102295, 0.8526666760444641, 0.8429999947547913]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0], [5, 6, 3, 0, 9, 2, 7, 0, 3, 3, 2, 2, 1, 2, 3, 4, 5, 1, 2, 5, 7, 4, 1, 2, 6, 4, 5, 9, 6, 0, 9, 9, 0, 6, 2, 7, 0], [2, 2, 2, 2, 0, 2, 2, 1, 0, 2, 0, 0, 0, 0, 2, 0, 2, 1, 0, 2, 0, 0], [47, 70, 80, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 1, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1], [4, 6, 1, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8148571252822876, "mapping_values": [1, 7, 7, 5, 2, 1, 1, 1, 0, 1, 0, 7, 3, 3, 0, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.negative(grad), tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, tf.math.subtract(sigma, sigma)))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0905442237854004, 1.612837314605713, 1.305891513824463, 1.040244698524475, 0.8596569895744324, 0.7850387692451477, 0.7189517617225647, 0.6840810775756836, 0.6456355452537537, 0.6457495093345642, 0.6210874319076538, 0.6015413403511047, 0.5614252686500549, 0.5796960592269897, 0.5570016503334045, 0.5479894876480103, 0.518983006477356, 0.5178154706954956, 0.49850526452064514, 0.4842650592327118, 0.48552826046943665, 0.4787537157535553, 0.4499524235725403, 0.47187820076942444, 0.45290762186050415, 0.4475996196269989, 0.45808038115501404], "accuracy": [0.29679039120674133, 0.4575353264808655, 0.5572579503059387, 0.6189407110214233, 0.6763967871665955, 0.6996433734893799, 0.7277770638465881, 0.7354378700256348, 0.7537974119186401, 0.7559106945991516, 0.7640998363494873, 0.774798572063446, 0.793950617313385, 0.7794214487075806, 0.7923656105995178, 0.7923656105995178, 0.8064984679222107, 0.8075551390647888, 0.8150838613510132, 0.8244617581367493, 0.8171972036361694, 0.8228767514228821, 0.8322546482086182, 0.8210275769233704, 0.8300092220306396, 0.8347642421722412, 0.8269713521003723], "val_loss": [1.7525612115859985, 1.238158106803894, 0.9240970015525818, 0.7557539939880371, 0.7415249943733215, 0.630525529384613, 0.621612548828125, 0.5901780128479004, 0.6118595600128174, 0.6332079172134399, 0.5256754755973816, 0.5038865804672241, 0.49315616488456726, 0.48205041885375977, 0.4965762495994568, 0.459984689950943, 0.5011868476867676, 0.48416605591773987, 0.4628623127937317, 0.5126734375953674, 0.46073371171951294, 0.4193589389324188, 0.434037446975708, 0.45390623807907104, 0.43480464816093445, 0.47124943137168884, 0.4405880868434906], "val_accuracy": [0.41733333468437195, 0.5680000185966492, 0.6613333225250244, 0.6943333148956299, 0.7059999704360962, 0.7493333220481873, 0.734333336353302, 0.7603333592414856, 0.749666690826416, 0.7473333477973938, 0.7913333177566528, 0.8053333163261414, 0.8076666593551636, 0.8190000057220459, 0.8076666593551636, 0.8193333148956299, 0.8009999990463257, 0.8146666884422302, 0.8233333230018616, 0.7926666736602783, 0.8190000057220459, 0.8433333039283752, 0.8356666564941406, 0.8209999799728394, 0.8303333520889282, 0.812666654586792, 0.82833331823349]}}, {"genotype": [[0], [0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 3, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 1, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [7, 6, 1, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8145714402198792, "mapping_values": [1, 7, 7, 5, 2, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0902419090270996, 1.620293378829956, 1.2902964353561401, 1.00990629196167, 0.9161865711212158, 0.7861307263374329, 0.7082843780517578, 0.6774662137031555, 0.6524671912193298, 0.6160176992416382, 0.6347264051437378, 0.6105387210845947, 0.5770422220230103, 0.5869556069374084, 0.5456257462501526, 0.5273087024688721, 0.5342796444892883, 0.5139137506484985, 0.515587329864502, 0.484187513589859, 0.4737909436225891, 0.4873689115047455, 0.4567745625972748, 0.4574068486690521], "accuracy": [0.29665830731391907, 0.4593845009803772, 0.5498613119125366, 0.6267336010932922, 0.654999315738678, 0.6988508701324463, 0.7343811988830566, 0.7386078238487244, 0.7449478507041931, 0.7656848430633545, 0.752740740776062, 0.7656848430633545, 0.7857614755630493, 0.7738739848136902, 0.7952714562416077, 0.8029322624206543, 0.7985734939575195, 0.8092722296714783, 0.8061022162437439, 0.8255184292793274, 0.8238013386726379, 0.8161405324935913, 0.8265751004219055, 0.8253863453865051], "val_loss": [1.7449501752853394, 1.158049464225769, 0.8090873956680298, 0.8214337825775146, 0.7221567630767822, 0.6274993419647217, 0.6619955897331238, 0.6363638639450073, 0.6007433533668518, 0.5318546295166016, 0.5380538105964661, 0.5119883418083191, 0.5330326557159424, 0.4990155100822449, 0.4655369520187378, 0.4802818298339844, 0.46891602873802185, 0.48037898540496826, 0.4375132620334625, 0.49782657623291016, 0.4545366168022156, 0.43158113956451416, 0.4429059326648712, 0.43336430191993713], "val_accuracy": [0.42133334279060364, 0.6000000238418579, 0.6946666836738586, 0.6856666803359985, 0.7379999756813049, 0.7490000128746033, 0.7223333120346069, 0.746666669845581, 0.7513333559036255, 0.7879999876022339, 0.7820000052452087, 0.8096666932106018, 0.7839999794960022, 0.8140000104904175, 0.8286666870117188, 0.8106666803359985, 0.8230000138282776, 0.8169999718666077, 0.8426666855812073, 0.7940000295639038, 0.8220000267028809, 0.8323333263397217, 0.8199999928474426, 0.8330000042915344]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1], [5, 6, 3, 1, 9, 9, 6, 0, 3, 3, 2, 2, 3, 2, 5, 4, 2, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 0, 6, 0, 7, 0], [0, 0, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [47, 70, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [7, 6, 1, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8059999942779541, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0905470848083496, 1.6088858842849731, 1.2465046644210815, 1.0740283727645874, 0.8474003672599792, 0.7902702689170837, 0.7412238121032715, 0.6709757447242737, 0.6532174348831177, 0.6228903532028198, 0.6332098841667175, 0.5805851817131042, 0.5657141208648682, 0.5907663702964783, 0.5623488426208496, 0.5470913052558899, 0.5269776582717896, 0.5360525250434875, 0.512808620929718, 0.4700964689254761, 0.47543010115623474, 0.4888206720352173, 0.44996556639671326, 0.4596911072731018], "accuracy": [0.29679039120674133, 0.4593845009803772, 0.5717870593070984, 0.6095628142356873, 0.683000922203064, 0.6984546184539795, 0.7170783281326294, 0.7436270117759705, 0.7489103078842163, 0.7589486241340637, 0.7557786107063293, 0.780610203742981, 0.7885351777076721, 0.7717606425285339, 0.7866860628128052, 0.793422281742096, 0.7980451583862305, 0.7980451583862305, 0.8080834746360779, 0.830669641494751, 0.8234050869941711, 0.8156121969223022, 0.8297450542449951, 0.8308017253875732], "val_loss": [1.75299870967865, 1.2185598611831665, 0.8450477123260498, 0.7481909990310669, 0.729475736618042, 0.6786090135574341, 0.6104761958122253, 0.6278579235076904, 0.6142622828483582, 0.5507397651672363, 0.5274125933647156, 0.49660784006118774, 0.48835545778274536, 0.4978404939174652, 0.46955177187919617, 0.4724700450897217, 0.5754222869873047, 0.47811800241470337, 0.4350035786628723, 0.4292433261871338, 0.4710758924484253, 0.4233255088329315, 0.4493221342563629, 0.467945396900177], "val_accuracy": [0.4169999957084656, 0.5853333473205566, 0.6933333277702332, 0.703000009059906, 0.7039999961853027, 0.7170000076293945, 0.750333309173584, 0.7453333139419556, 0.7456666827201843, 0.7776666879653931, 0.796999990940094, 0.8176666498184204, 0.8080000281333923, 0.8046666383743286, 0.8320000171661377, 0.812333345413208, 0.7753333449363708, 0.8220000267028809, 0.843999981880188, 0.8363333344459534, 0.8153333067893982, 0.8399999737739563, 0.8246666789054871, 0.8173333406448364]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1], [0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1], [5, 6, 3, 1, 9, 1, 7, 5, 3, 3, 2, 1, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 2, 2, 9, 2, 0, 9, 9, 0, 6, 2, 7, 0], [0, 0, 2, 1, 0, 1, 2, 2, 0, 2, 2, 0, 0, 1, 2, 0, 2, 1, 0, 3, 2, 1], [47, 79, 39, 25, 98, 52, 94, 1, 97, 93, 36, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 1, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8031428456306458, "mapping_values": [1, 8, 8, 5, 3, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.multiply(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0902271270751953, 1.622436761856079, 1.3310980796813965, 0.9953541159629822, 0.8792971968650818, 0.7931487560272217, 0.7379623651504517, 0.6790578961372375, 0.6656010746955872, 0.6224642992019653, 0.629692018032074, 0.622107207775116, 0.5602385401725769, 0.6083945631980896, 0.5469465851783752, 0.5393373966217041, 0.5213587880134583, 0.5249848961830139, 0.5103761553764343], "accuracy": [0.29665830731391907, 0.45779949426651, 0.549068808555603, 0.6337339878082275, 0.6719059348106384, 0.6915863156318665, 0.7148329019546509, 0.7396644949913025, 0.7432307600975037, 0.7683265209197998, 0.7565711140632629, 0.7643640041351318, 0.7895918488502502, 0.7725531458854675, 0.7930260300636292, 0.7969884872436523, 0.8064984679222107, 0.8047813773155212, 0.8075551390647888], "val_loss": [1.745545744895935, 1.1997449398040771, 0.8271764516830444, 0.909451425075531, 0.6874972581863403, 0.6440815329551697, 0.6070180535316467, 0.5952993631362915, 0.615496039390564, 0.5749295949935913, 0.5516085624694824, 0.4946267008781433, 0.5276893973350525, 0.484702467918396, 0.5478572845458984, 0.4831772744655609, 0.4692746102809906, 0.49657243490219116, 0.462607741355896], "val_accuracy": [0.4206666648387909, 0.5730000138282776, 0.6919999718666077, 0.640333354473114, 0.7360000014305115, 0.737666666507721, 0.7546666860580444, 0.7546666860580444, 0.7446666955947876, 0.7720000147819519, 0.7829999923706055, 0.8073333501815796, 0.7983333468437195, 0.8203333616256714, 0.7770000100135803, 0.8046666383743286, 0.8186666369438171, 0.8140000104904175, 0.8149999976158142]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 3, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [47, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 1], [7, 6, 1, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8019999861717224, "mapping_values": [1, 7, 7, 5, 2, 2, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.negative(alpha), tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, grad))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0905604362487793, 1.6158126592636108, 1.2228718996047974, 1.027590036392212, 0.8584798574447632, 0.7380592226982117, 0.742098867893219, 0.6905039548873901, 0.6655264496803284, 0.6309105753898621, 0.6363121867179871, 0.6037042737007141, 0.5622380375862122, 0.5961368680000305, 0.55237877368927, 0.5469958782196045, 0.5254094004631042, 0.5267714262008667, 0.517377495765686, 0.48863905668258667, 0.4879907965660095, 0.47822773456573486, 0.45845118165016174, 0.4763893485069275, 0.45227622985839844, 0.44940996170043945, 0.46054890751838684], "accuracy": [0.29679039120674133, 0.45925241708755493, 0.574560821056366, 0.6281865239143372, 0.6686038970947266, 0.7190595865249634, 0.7160216569900513, 0.7331924438476562, 0.7413815855979919, 0.7629110813140869, 0.7499669790267944, 0.772288978099823, 0.7923656105995178, 0.770439863204956, 0.7891955971717834, 0.7911768555641174, 0.804649293422699, 0.8057059645652771, 0.806630551815033, 0.8214238286018372, 0.8156121969223022, 0.8226125836372375, 0.8272355198860168, 0.8177255392074585, 0.8284242749214172, 0.833179235458374, 0.826310932636261], "val_loss": [1.752731442451477, 1.123095989227295, 0.799717128276825, 0.7239072918891907, 0.6515775322914124, 0.6623682379722595, 0.6503593921661377, 0.6185476183891296, 0.6187520623207092, 0.5363683104515076, 0.5361854434013367, 0.4979090988636017, 0.5376181602478027, 0.4823513627052307, 0.5433715581893921, 0.48410293459892273, 0.5046917200088501, 0.4909524619579315, 0.439168781042099, 0.5039600133895874, 0.4430283308029175, 0.41579151153564453, 0.45748454332351685, 0.4614226818084717, 0.44385114312171936, 0.4375649690628052, 0.42678287625312805], "val_accuracy": [0.4169999957084656, 0.6106666922569275, 0.7229999899864197, 0.7193333506584167, 0.7486666440963745, 0.7229999899864197, 0.7296666502952576, 0.7473333477973938, 0.7413333058357239, 0.7886666655540466, 0.7903333306312561, 0.8083333373069763, 0.7826666831970215, 0.8196666836738586, 0.7749999761581421, 0.8036666512489319, 0.8016666769981384, 0.8096666932106018, 0.8379999995231628, 0.7916666865348816, 0.824999988079071, 0.8429999947547913, 0.8183333277702332, 0.8209999799728394, 0.8203333616256714, 0.831333339214325, 0.8389999866485596]}}, {"genotype": [[0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [5, 6, 3, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 2, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 1], [7, 6, 1, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8011428713798523, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.090240478515625, 1.6209220886230469, 1.2735811471939087, 1.0301787853240967, 0.8671858906745911, 0.7729175686836243, 0.7403485774993896, 0.6785832047462463, 0.6694248914718628, 0.619356095790863, 0.617120087146759, 0.6213845014572144, 0.5722934603691101, 0.6028969287872314, 0.5499601364135742, 0.5456951260566711, 0.5222483277320862, 0.5234900712966919, 0.5228787064552307], "accuracy": [0.29665830731391907, 0.4583278298377991, 0.5568616986274719, 0.6170915365219116, 0.670320987701416, 0.7028133869171143, 0.7161537408828735, 0.7420420050621033, 0.7403249144554138, 0.7685906887054443, 0.7602694630622864, 0.7652885913848877, 0.791441023349762, 0.7770439982414246, 0.7926297783851624, 0.791969358921051, 0.8030643463134766, 0.8041210174560547, 0.8034605979919434], "val_loss": [1.746098279953003, 1.1710090637207031, 0.8767853379249573, 0.696678638458252, 0.7224713563919067, 0.6507121324539185, 0.6161264181137085, 0.637542724609375, 0.5861510038375854, 0.528418779373169, 0.5400628447532654, 0.4954279363155365, 0.4910825192928314, 0.48991426825523376, 0.5482000708580017, 0.4832082986831665, 0.4883313477039337, 0.5072728991508484, 0.46743232011795044], "val_accuracy": [0.4206666648387909, 0.5910000205039978, 0.6766666769981384, 0.7239999771118164, 0.706333339214325, 0.734000027179718, 0.7416666746139526, 0.7403333187103271, 0.762666642665863, 0.7910000085830688, 0.7923333048820496, 0.8080000281333923, 0.8066666722297668, 0.8153333067893982, 0.7749999761581421, 0.8069999814033508, 0.8103333115577698, 0.8109999895095825, 0.8106666803359985]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1], [5, 6, 3, 1, 9, 1, 7, 0, 3, 3, 2, 0, 3, 2, 8, 4, 5, 8, 7, 5, 7, 9, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 0, 6, 2, 7, 0], [0, 0, 2, 2, 0, 1, 2, 1, 2, 2, 2, 0, 0, 0, 2, 0, 2, 1, 2], [93, 70, 39, 25, 56, 52, 94, 1, 47, 93, 55, 76, 16], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [7, 6, 1, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.35199999809265137, "mapping_values": [1, 46, 46, 30, 16, 10, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 50, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.subtract(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.subtract(tf.math.add(grad, grad), tf.math.add(alpha, tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(tf.math.sqrt(tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.sqrt(grad))), tf.math.add(tf.math.square(tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(7.88036666e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)), tf.math.add(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.negative(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))))))))))), grad)), tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))))))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3178811073303223, 2.6908886432647705, 2.3855645656585693, 2.3497097492218018, 2.153033971786499, 2.333456516265869, 2.344991445541382], "accuracy": [0.2759212851524353, 0.2506934404373169, 0.2024831622838974, 0.15493330359458923, 0.26865673065185547, 0.14159291982650757, 0.16061286628246307], "val_loss": [2.273932695388794, 1.9884417057037354, 2.3877882957458496, 1.6448378562927246, 2.3925364017486572, 2.3292925357818604, 2.2544994354248047], "val_accuracy": [0.1770000010728836, 0.3930000066757202, 0.09733333438634872, 0.39233332872390747, 0.10199999809265137, 0.2160000056028366, 0.19766665995121002]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [5, 6, 3, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [55, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 1], [7, 6, 1, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.2525714337825775, "mapping_values": [1, 7, 7, 5, 2, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.negative(alpha), tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.317889451980591, 2.4588985443115234, 1.9490559101104736, 1.6515036821365356, 1.4988549947738647, 2.2686593532562256, 2.054351806640625, 1.942286491394043, 1.9958161115646362], "accuracy": [0.27605336904525757, 0.25676923990249634, 0.36164310574531555, 0.4772156774997711, 0.5140668153762817, 0.2534671723842621, 0.3019416332244873, 0.3237352967262268, 0.30947035551071167], "val_loss": [2.2738916873931885, 2.1316916942596436, 1.4341890811920166, 1.1005096435546875, 1.3858612775802612, 1.79310941696167, 1.7853338718414307, 1.580059289932251, 1.5715745687484741], "val_accuracy": [0.17866666615009308, 0.3553333282470703, 0.5163333415985107, 0.6316666603088379, 0.5646666884422302, 0.359333336353302, 0.37533333897590637, 0.4893333315849304, 0.3946666717529297]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1], [5, 6, 4, 1, 7, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 1, 9, 2, 8, 2, 1, 5, 4, 6, 2], [2, 2, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1, 0, 3, 1, 0, 0, 2, 1, 3, 1, 1, 0], [47, 70, 39, 25, 98, 52, 94, 1, 97, 93, 45, 0], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 1], [7, 6, 1, 9, 7], [4, 0, 6], [24, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [69, 57, 40, 62]], "fitness": -0.22942857444286346, "mapping_values": [1, 68, 68, 39, 29, 12, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 2, 1, 1, 0], "tree_depth": 77, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.pow(tf.math.subtract(grad, tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, grad)), tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, tf.math.square(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)), tf.math.add(tf.math.subtract(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))), grad)))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, alpha))), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))), grad))), tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, tf.math.square(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(2.87185901e-01, shape=shape, dtype=tf.float32)), grad))))))), tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, alpha)))))))))), tf.math.add(alpha, alpha))), tf.math.add(alpha, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, grad))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [4.4343791007995605, 2.3052549362182617, 2.30304217338562, 2.285031795501709, 2.328465223312378, 2.30336332321167, 2.302577495574951, 2.240366220474243, 2.3057138919830322], "accuracy": [0.15374454855918884, 0.10077928751707077, 0.10157178342342377, 0.13115836679935455, 0.11174217611551285, 0.09932637959718704, 0.1014397069811821, 0.1842557191848755, 0.09602430462837219], "val_loss": [2.3066158294677734, 2.302889108657837, 2.3013060092926025, 2.189429998397827, 2.302567481994629, 2.3023414611816406, 2.3009064197540283, 2.3066442012786865, 2.3030543327331543], "val_accuracy": [0.09933333098888397, 0.10066666454076767, 0.09733333438634872, 0.23366667330265045, 0.10233332961797714, 0.09933333098888397, 0.15733332931995392, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1], [5, 6, 3, 1, 9, 1, 7, 0, 3, 3, 2, 2, 0, 3, 3, 4, 5, 1, 7, 2, 7, 2, 1, 2, 6, 4, 3, 9, 2, 0, 9, 9, 0, 6, 3, 7, 0], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 0, 3, 3], [6, 70, 39, 63, 98, 52, 94, 1, 97, 93, 16, 41, 27, 94], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 1, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 1, 9, 7], [4, 0, 6], [24, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.1485714316368103, "mapping_values": [1, 52, 52, 30, 22, 13, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 62, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), grad)), tf.math.multiply(grad, tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, tf.math.negative(alpha)), tf.math.multiply(grad, tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.math.square(tf.math.add(alpha, alpha)), tf.math.subtract(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.multiply(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), grad)), alpha))))))), tf.constant(1.52235823e-01, shape=shape, dtype=tf.float32)))))), tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)))))))), tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, grad)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [4.434496879577637, 2.3052916526794434, 2.3030595779418945, 2.2912485599517822, 2.446821928024292, 2.3043551445007324, 2.303196907043457, 2.3030383586883545, 2.303054094314575], "accuracy": [0.15361246466636658, 0.10091137140989304, 0.10091137140989304, 0.1278562992811203, 0.13142253458499908, 0.09655263274908066, 0.09734513610601425, 0.09747721254825592, 0.09602430462837219], "val_loss": [2.306636333465576, 2.3028903007507324, 2.301314353942871, 2.0566623210906982, 2.3041257858276367, 2.302762269973755, 2.302574634552002, 2.3025612831115723, 2.3026018142700195], "val_accuracy": [0.09933333098888397, 0.10066666454076767, 0.09733333438634872, 0.21133333444595337, 0.10233332961797714, 0.09933333098888397, 0.10199999809265137, 0.09933333098888397, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1], [5, 6, 6, 1, 9, 1, 4, 0, 3, 3, 9, 4, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 2, 2, 0, 9, 9, 0, 6, 2, 7, 0], [1, 2, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 2, 2, 0, 1, 1, 0, 2, 0, 0], [47, 70, 39, 25, 98, 52, 94, 83, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [7, 6, 1, 9, 7], [4, 0, 6], [24, 44], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 8, 4, 4, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.subtract(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(beta, tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), beta))", "other_info": {"loss": [2.491393566131592, 5.580363239177113e+19, 2.303724765777588, 2.303276777267456, 2.303020715713501, 2.302879571914673], "accuracy": [0.1950865089893341, 0.09760929644107819, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1239.5057373046875, 2.3038384914398193, 2.3031680583953857, 2.302889347076416, 2.302719831466675, 2.3026578426361084], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [5, 6, 3, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [93, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 1], [7, 6, 1, 9, 7], [4, 0, 6], [24, 44], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 14, 7, 7, 2], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, grad))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(tf.math.pow(tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(beta, sigma), sigma)), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.18663319945335388, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [5, 6, 3, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 2, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1, 0, 2, 0, 0], [47, 70, 39, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 1], [4, 6, 1, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 8, 4, 4, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.add(tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), beta)))", "other_info": {"loss": [2.5003108978271484, 2.2647615604409133e+20, 2.3037352561950684, 2.3032782077789307, 2.30302095413208, 2.3028812408447266], "accuracy": [0.19495442509651184, 0.09734513610601425, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1540.87646484375, 2.303858995437622, 2.3031742572784424, 2.3028903007507324, 2.302724599838257, 2.3026602268218994], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1], [1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 5, 3, 1, 9, 1, 7, 2, 3, 3, 6, 2, 3, 2, 6, 8, 5, 1, 7, 5, 2, 1, 1, 2, 6, 4, 5, 5, 2, 0, 9, 9, 0, 6, 2, 7, 0], [1, 2, 2, 2, 0, 1, 2, 1, 2, 2, 2, 0, 0, 0, 2, 0, 2, 1, 0, 2, 0, 0], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 0, 1, 1, 1, 1], [4, 6, 1, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 8, 4, 4, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.math.add(tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), beta)))", "other_info": {"loss": [2.504218578338623, 3.842094377447436e+20, 2.303753614425659, 2.3032851219177246, 2.3030238151550293, 2.3028831481933594], "accuracy": [0.19495442509651184, 0.09747721254825592, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [1670.6336669921875, 2.3038876056671143, 2.303185224533081, 2.3028948307037354, 2.3027291297912598, 2.3026623725891113], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1], [2, 6, 3, 1, 9, 1, 7, 0, 3, 3, 6, 2, 3, 2, 3, 1, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 8, 0, 9, 0, 0, 6, 2, 7, 0], [3, 0, 2, 2, 0, 1, 2, 1, 0, 1, 2, 0, 0, 0, 2, 1, 2, 1, 3, 3, 3, 2], [21, 70, 49, 25, 98, 14, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1], [4, 6, 1, 9, 7], [4, 0, 6], [24, 44], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 2, 4, 2, 1, 2, 3], [2, 1, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 52, 52, 32, 20, 9, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 8, 4, 4, 1], "tree_depth": 53, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.subtract(grad, tf.math.add(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, grad)), tf.math.negative(tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.add(grad, tf.math.multiply(tf.math.add(tf.math.multiply(tf.math.add(alpha, tf.math.subtract(alpha, tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))), tf.math.square(tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, alpha), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))), tf.math.sqrt(grad)), alpha)), grad))))), alpha), tf.math.negative(tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))))), grad))), tf.math.negative(tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.add(beta, tf.math.pow(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09906221181154251, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [5, 6, 3, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [47, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 1], [7, 6, 1, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [8, 3, 2, 4, 2, 1, 2, 3], [2, 2, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.09828571230173111, "mapping_values": [1, 7, 7, 5, 2, 3, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 4, 2, 2, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.negative(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.divide_no_nan(sigma, tf.math.add(sigma, grad))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(beta, beta))", "other_info": {"loss": [2.302950859069824, 2.3030343055725098, 2.3034534454345703, 2.304137706756592, 2.3050687313079834, 2.3076000213623047], "accuracy": [0.09760929644107819, 0.09906221181154251, 0.09774138033390045, 0.09853387624025345, 0.09298639744520187, 0.09906221181154251], "val_loss": [2.3028359413146973, 2.3034353256225586, 2.303867816925049, 2.3047077655792236, 2.3063037395477295, 2.3103461265563965], "val_accuracy": [0.10233332961797714, 0.0989999994635582, 0.09933333098888397, 0.10233332961797714, 0.09700000286102295, 0.09700000286102295]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1], [4, 6, 3, 0, 5, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 9, 6, 9, 9, 3], [1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1, 1, 1, 0], [47, 70, 39, 25, 98, 52, 94, 1, 97, 93, 58, 28], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 1], [7, 6, 1, 9, 7], [0, 0, 6], [24, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.07000000029802322, "mapping_values": [1, 55, 55, 34, 21, 12, 3, 3, 1, 2, 0, 3, 2, 1, 1, 1, 2, 1, 1, 0], "tree_depth": 68, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.pow(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.negative(alpha)), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(grad, grad)), tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(alpha, tf.math.multiply(alpha, tf.math.add(tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.square(tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(tf.math.square(tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad))), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.pow(tf.math.add(alpha, tf.math.square(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)), tf.math.add(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.divide_no_nan(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))))), grad)))), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32))), tf.constant(8.47764177e-01, shape=shape, dtype=tf.float32)))), grad))), tf.math.add(alpha, alpha))), alpha))))), tf.math.multiply(tf.math.add(alpha, alpha), tf.math.add(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.3026435375213623, 2.301046371459961, 2.3021764755249023, 2.3006515502929688, 2.3022689819335938, 2.300636053085327, 2.300236940383911, 2.300724983215332, 2.299987316131592, 2.3008432388305664, 2.3005001544952393, 2.3004565238952637, 2.3001766204833984, 2.300642490386963, 2.3002240657806396], "accuracy": [0.09826971590518951, 0.08889182657003403, 0.08928807079792023, 0.09760929644107819, 0.09232597798109055, 0.09774138033390045, 0.09655263274908066, 0.09126931428909302, 0.09879804402589798, 0.09866596013307571, 0.09655263274908066, 0.10157178342342377, 0.1010434553027153, 0.09285431355237961, 0.09602430462837219], "val_loss": [2.299186944961548, 2.2987451553344727, 2.2984869480133057, 2.2985329627990723, 2.2985706329345703, 2.2985126972198486, 2.2982754707336426, 2.2981483936309814, 2.298116683959961, 2.298137664794922, 2.298247814178467, 2.2985615730285645, 2.298889398574829, 2.2991445064544678, 2.2993316650390625], "val_accuracy": [0.04866666719317436, 0.05299999937415123, 0.0560000017285347, 0.057999998331069946, 0.06499999761581421, 0.070333331823349, 0.07233333587646484, 0.07666666805744171, 0.07833333313465118, 0.08533333241939545, 0.08533333241939545, 0.0820000022649765, 0.07966666668653488, 0.07666666805744171, 0.07533333450555801]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [5, 6, 3, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 1, 0, 1, 1, 1], [0, 0, 1, 1, 1, 1], [7, 6, 1, 9, 7], [2, 0, 6], [24, 44], [1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [21, 57, 40, 62]], "fitness": -0.04085714370012283, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3029897212982178, 2.3020541667938232, 2.3037099838256836, 2.302218198776245, 2.3042123317718506, 2.3022348880767822], "accuracy": [0.09734513610601425, 0.08506141602993011, 0.09008057415485382, 0.0936468094587326, 0.0870426595211029, 0.09681680053472519], "val_loss": [2.299954414367676, 2.299954414367676, 2.299954414367676, 2.299954414367676, 2.299954414367676, 2.299954414367676], "val_accuracy": [0.04466666653752327, 0.04466666653752327, 0.04466666653752327, 0.04466666653752327, 0.04466666653752327, 0.04466666653752327]}}]