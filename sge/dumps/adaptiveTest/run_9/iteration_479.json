[{"genotype": [[0], [1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 6, 8, 2, 0, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 0, 0, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [85, 40, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.824571430683136, "mapping_values": [1, 7, 7, 4, 3, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32))), tf.math.add(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0956430435180664, 1.6135921478271484, 1.2492682933807373, 0.9768669009208679, 0.8620034456253052, 0.7393715381622314, 0.712193489074707, 0.7307093143463135, 0.6551360487937927, 0.6389870643615723, 0.640537679195404, 0.5913431644439697, 0.5918472409248352, 0.5810499787330627, 0.5669274926185608, 0.541523814201355, 0.5379178524017334, 0.5405067801475525, 0.4887561500072479, 0.498442143201828, 0.5010102987289429, 0.4792131185531616, 0.4633915424346924, 0.4570651650428772, 0.44429001212120056, 0.47112059593200684, 0.4422328770160675, 0.4264513850212097, 0.4297078847885132], "accuracy": [0.3129045069217682, 0.468630313873291, 0.5523709058761597, 0.6279223561286926, 0.6793025732040405, 0.7148329019546509, 0.7256637215614319, 0.7231541275978088, 0.746268630027771, 0.7607977986335754, 0.7582882046699524, 0.7721568942070007, 0.7766477465629578, 0.7841764688491821, 0.7829877138137817, 0.7965922355651855, 0.8009510040283203, 0.800290584564209, 0.8164047002792358, 0.81112140417099, 0.8144234418869019, 0.8289526104927063, 0.8253863453865051, 0.8345000743865967, 0.8378021121025085, 0.82683926820755, 0.8348963260650635, 0.8426892161369324, 0.8405758738517761], "val_loss": [2.018169641494751, 1.472598671913147, 1.16624915599823, 0.7320432662963867, 0.6511390209197998, 0.7000249624252319, 0.7052550315856934, 0.6367579698562622, 0.5933492183685303, 0.5759986042976379, 0.5403091907501221, 0.5142743587493896, 0.5997713804244995, 0.49144548177719116, 0.5114578604698181, 0.4753640592098236, 0.4743993282318115, 0.43698495626449585, 0.432996541261673, 0.4336191415786743, 0.43945276737213135, 0.41276636719703674, 0.4199470281600952, 0.40514349937438965, 0.4654676020145416, 0.44911128282546997, 0.39616551995277405, 0.4120006561279297, 0.4143705368041992], "val_accuracy": [0.48766666650772095, 0.4246666729450226, 0.5533333420753479, 0.7126666903495789, 0.737333357334137, 0.7139999866485596, 0.6903333067893982, 0.7513333559036255, 0.7583333253860474, 0.7710000276565552, 0.778333306312561, 0.7876666784286499, 0.7590000033378601, 0.8069999814033508, 0.8026666641235352, 0.8080000281333923, 0.8240000009536743, 0.8286666870117188, 0.8379999995231628, 0.8366666436195374, 0.8316666483879089, 0.8413333296775818, 0.8389999866485596, 0.8573333621025085, 0.8146666884422302, 0.828000009059906, 0.8556666374206543, 0.8519999980926514, 0.8346666693687439]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 6, 9, 9, 8, 1, 4, 9, 3, 3, 0, 2, 1, 3, 3, 4, 5, 1, 7, 3, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 0, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [38, 70, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [0, 1, 1, 1, 1, 1], [4, 2, 9, 9, 7], [0, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8205714225769043, "mapping_values": [1, 5, 5, 4, 1, 3, 1, 1, 0, 1, 0, 3, 3, 1, 2, 2, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0957095623016357, 1.6528745889663696, 1.2056958675384521, 0.9552394151687622, 0.8419656157493591, 0.75892174243927, 0.7138151526451111, 0.7055649161338806, 0.6577425003051758, 0.6387261748313904, 0.6474217176437378, 0.5952421426773071, 0.57258141040802, 0.5825093984603882, 0.5611695647239685, 0.5376118421554565, 0.532476544380188, 0.5275298357009888, 0.49879294633865356, 0.4916751980781555, 0.5040578842163086, 0.46768292784690857, 0.4621843099594116, 0.4566669464111328, 0.4386969804763794, 0.46693095564842224, 0.4404454827308655, 0.4259965121746063, 0.42493417859077454, 0.4314725399017334, 0.41258499026298523, 0.3923273980617523], "accuracy": [0.31303659081459045, 0.4542332589626312, 0.5692775249481201, 0.6332056522369385, 0.6866992712020874, 0.7094175219535828, 0.7250033020973206, 0.7368907928466797, 0.7485140562057495, 0.7597411274909973, 0.7531369924545288, 0.7712323069572449, 0.7829877138137817, 0.7812706232070923, 0.7887993454933167, 0.7998943328857422, 0.800818920135498, 0.8058380484580994, 0.8124422430992126, 0.8208954930305481, 0.809140145778656, 0.8318583965301514, 0.8294808864593506, 0.8298771381378174, 0.8413683772087097, 0.8298771381378174, 0.8391229510307312, 0.8426892161369324, 0.8450667262077332, 0.8384625315666199, 0.8490291833877563, 0.8568220734596252], "val_loss": [2.0187995433807373, 1.4027985334396362, 1.0043100118637085, 0.8665412068367004, 0.672429084777832, 0.689710259437561, 0.6779382824897766, 0.6456005573272705, 0.5891685485839844, 0.5851079225540161, 0.5529671311378479, 0.49778467416763306, 0.548486053943634, 0.4715838134288788, 0.49775826930999756, 0.47239208221435547, 0.4706648886203766, 0.4321744441986084, 0.45685285329818726, 0.4507426619529724, 0.452930748462677, 0.40546125173568726, 0.40259164571762085, 0.42420312762260437, 0.44317612051963806, 0.4314322769641876, 0.39043766260147095, 0.39534807205200195, 0.41680392622947693, 0.3886817991733551, 0.3882184326648712, 0.4045683741569519], "val_accuracy": [0.4873333275318146, 0.5803333520889282, 0.5989999771118164, 0.6793333292007446, 0.7243333458900452, 0.7196666598320007, 0.7253333330154419, 0.7400000095367432, 0.7666666507720947, 0.781333327293396, 0.7903333306312561, 0.8040000200271606, 0.7816666960716248, 0.8176666498184204, 0.8149999976158142, 0.8109999895095825, 0.8233333230018616, 0.8306666612625122, 0.8169999718666077, 0.8253333568572998, 0.8349999785423279, 0.8539999723434448, 0.8579999804496765, 0.8353333473205566, 0.8266666531562805, 0.8333333134651184, 0.8640000224113464, 0.8553333282470703, 0.8366666436195374, 0.8529999852180481, 0.8583333492279053, 0.8483333587646484]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 6, 4, 2, 0, 1, 4, 4, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 2, 2, 0, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [51, 70, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.819428563117981, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0957107543945312, 1.6491280794143677, 1.2015886306762695, 1.0026684999465942, 0.8681780099868774, 0.7820227742195129, 0.7054392695426941, 0.7370585799217224, 0.6430779099464417, 0.6452540755271912, 0.6605398058891296, 0.5993543267250061, 0.5843100547790527, 0.584979772567749, 0.5643532276153564, 0.5435911417007446, 0.5408804416656494, 0.5400527119636536, 0.507141649723053, 0.5022586584091187, 0.4981483221054077, 0.47142428159713745, 0.4968161880970001, 0.46390220522880554, 0.436113566160202, 0.46870630979537964, 0.4481610953807831, 0.43122103810310364, 0.4231644570827484, 0.4384356439113617, 0.4171423316001892, 0.40472719073295593], "accuracy": [0.3131686747074127, 0.4551578462123871, 0.5659754276275635, 0.6267336010932922, 0.6796988248825073, 0.6993792057037354, 0.7300224304199219, 0.7181349992752075, 0.757099449634552, 0.7581561207771301, 0.7486461400985718, 0.7737419009208679, 0.7798177003860474, 0.7758552432060242, 0.7887993454933167, 0.8000264167785645, 0.7991018295288086, 0.7993659973144531, 0.8103289008140564, 0.8161405324935913, 0.813498854637146, 0.828820526599884, 0.8198388814926147, 0.8259146809577942, 0.8450667262077332, 0.8280280232429504, 0.8355567455291748, 0.8408400416374207, 0.8436138033866882, 0.8383304476737976, 0.8485008478164673, 0.8469158411026001], "val_loss": [2.0189812183380127, 1.4052338600158691, 1.0888774394989014, 0.751492977142334, 0.6668537855148315, 0.6708804368972778, 0.6455134153366089, 0.6132026314735413, 0.5884685516357422, 0.5763680934906006, 0.5567774772644043, 0.5055188536643982, 0.5534639358520508, 0.4795183539390564, 0.5037950277328491, 0.48128584027290344, 0.46539488434791565, 0.4364592730998993, 0.4514862895011902, 0.45010635256767273, 0.4552966356277466, 0.4045453667640686, 0.41732653975486755, 0.40756240487098694, 0.400768518447876, 0.4330902397632599, 0.39698031544685364, 0.4052802622318268, 0.4220670461654663, 0.3913382291793823, 0.388234943151474, 0.42984718084335327], "val_accuracy": [0.48766666650772095, 0.5556666851043701, 0.5486666560173035, 0.7103333473205566, 0.7409999966621399, 0.7326666712760925, 0.7223333120346069, 0.7636666893959045, 0.7570000290870667, 0.778333306312561, 0.7846666574478149, 0.800000011920929, 0.7766666412353516, 0.809333324432373, 0.8043333292007446, 0.8069999814033508, 0.8323333263397217, 0.8316666483879089, 0.8230000138282776, 0.8240000009536743, 0.8223333358764648, 0.8489999771118164, 0.8443333506584167, 0.8489999771118164, 0.8536666631698608, 0.8323333263397217, 0.8553333282470703, 0.8503333330154419, 0.831333339214325, 0.8539999723434448, 0.8529999852180481, 0.8379999995231628]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [9, 0, 3, 9, 8, 1, 4, 9, 3, 3, 0, 2, 1, 3, 3, 4, 5, 1, 7, 3, 7, 9, 1, 6, 8, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 0, 2, 2, 0, 2, 2, 1, 0, 2, 0, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [76, 70, 16, 56, 98, 52, 75, 21, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 2, 9, 9, 7], [0, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8168571591377258, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0956273078918457, 1.6312766075134277, 1.2477703094482422, 0.987145721912384, 0.8353500962257385, 0.7714441418647766, 0.7156971096992493, 0.7322481870651245, 0.656494677066803, 0.6415042877197266, 0.6537031531333923, 0.6036063432693481, 0.5821102261543274, 0.5843977332115173, 0.5679953694343567, 0.547774076461792, 0.5364739298820496, 0.5488857626914978, 0.5000433325767517, 0.4987229108810425, 0.49902793765068054, 0.49075475335121155, 0.4691911041736603, 0.45944279432296753, 0.4383338689804077, 0.47737041115760803, 0.4561176002025604, 0.4279176890850067, 0.4373883903026581, 0.43374285101890564, 0.41173914074897766, 0.4001084566116333, 0.436867892742157, 0.4059843420982361, 0.4012327492237091, 0.4081238806247711, 0.383084237575531, 0.3727634847164154, 0.36322855949401855, 0.3746756315231323, 0.37668004631996155, 0.3502200245857239, 0.34287893772125244, 0.3550892174243927, 0.33823680877685547, 0.33926817774772644, 0.3310028910636902], "accuracy": [0.313300758600235, 0.46229031682014465, 0.5474838018417358, 0.6349227428436279, 0.687491774559021, 0.7034738063812256, 0.7268524765968323, 0.7214370369911194, 0.7477215528488159, 0.7598732113838196, 0.7510236501693726, 0.7716285586357117, 0.7766477465629578, 0.7765156626701355, 0.7839123010635376, 0.7968564033508301, 0.8055738806724548, 0.7967243194580078, 0.8099326491355896, 0.8146876096725464, 0.8146876096725464, 0.8255184292793274, 0.82683926820755, 0.8342359066009521, 0.8400475382804871, 0.8281601071357727, 0.8309338092803955, 0.8433496356010437, 0.8397833704948425, 0.8393871188163757, 0.8499537706375122, 0.854708731174469, 0.8383304476737976, 0.8540483713150024, 0.8516708612442017, 0.848368763923645, 0.858671247959137, 0.8632941246032715, 0.8656716346740723, 0.8605204224586487, 0.8576145768165588, 0.8677849769592285, 0.8722757697105408, 0.8668603897094727, 0.8745211958885193, 0.8751816153526306, 0.8772949576377869], "val_loss": [2.017047166824341, 1.3921512365341187, 0.8497454524040222, 0.7997877597808838, 0.7357341051101685, 0.734257161617279, 0.690733790397644, 0.6158438920974731, 0.5860987901687622, 0.5877001285552979, 0.5613864660263062, 0.5078626275062561, 0.5732071399688721, 0.484981894493103, 0.5092041492462158, 0.46309536695480347, 0.4779275357723236, 0.44161298871040344, 0.44045189023017883, 0.43078669905662537, 0.46248579025268555, 0.41547298431396484, 0.41175493597984314, 0.4136439263820648, 0.420297235250473, 0.47227808833122253, 0.39679092168807983, 0.41672688722610474, 0.4454980194568634, 0.3915131390094757, 0.3863767981529236, 0.42968180775642395, 0.4294815957546234, 0.3987090587615967, 0.4555797576904297, 0.397189199924469, 0.3620971143245697, 0.3628585934638977, 0.35651254653930664, 0.37442275881767273, 0.3646513819694519, 0.35446876287460327, 0.4139951169490814, 0.3815125823020935, 0.3644973039627075, 0.37356287240982056, 0.3613341748714447], "val_accuracy": [0.4873333275318146, 0.44966667890548706, 0.6679999828338623, 0.6819999814033508, 0.6963333487510681, 0.7003333568572998, 0.7289999723434448, 0.7540000081062317, 0.7580000162124634, 0.7820000052452087, 0.7896666526794434, 0.796999990940094, 0.7689999938011169, 0.8109999895095825, 0.8046666383743286, 0.8230000138282776, 0.8206666707992554, 0.824999988079071, 0.8303333520889282, 0.8370000123977661, 0.8256666660308838, 0.8420000076293945, 0.8460000157356262, 0.8456666469573975, 0.8500000238418579, 0.8163333535194397, 0.8523333072662354, 0.8479999899864197, 0.8213333487510681, 0.8546666502952576, 0.859000027179718, 0.8349999785423279, 0.8433333039283752, 0.8500000238418579, 0.8173333406448364, 0.8600000143051147, 0.8690000176429749, 0.8646666407585144, 0.8733333349227905, 0.8579999804496765, 0.8600000143051147, 0.8756666779518127, 0.8486666679382324, 0.8553333282470703, 0.8743333220481873, 0.8636666536331177, 0.8679999709129333]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 6, 8, 3, 6, 1, 4, 9, 3, 3, 2, 4, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 0, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [47, 40, 97, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8165714144706726, "mapping_values": [1, 32, 32, 18, 14, 9, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)), tf.math.add(alpha, grad)))), tf.math.pow(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.pow(grad, tf.math.multiply(tf.math.pow(alpha, tf.math.add(alpha, tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), tf.math.pow(tf.math.square(tf.math.subtract(grad, tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.095493793487549, 1.6050646305084229, 1.194548487663269, 0.9942077994346619, 0.8946917057037354, 0.769006609916687, 0.7031804919242859, 0.7144940495491028, 0.6555436849594116, 0.6351616382598877, 0.6498301029205322, 0.60584557056427, 0.5773937702178955, 0.5819808840751648, 0.5606123805046082, 0.5433223247528076, 0.5356218814849854, 0.5419107675552368, 0.4973038136959076, 0.499992311000824, 0.4905737042427063, 0.47789669036865234, 0.4710242450237274, 0.4563331604003906, 0.4433307945728302, 0.4680899381637573, 0.4517769515514374, 0.4276617467403412, 0.43215641379356384, 0.4277651607990265, 0.4115482568740845, 0.40174221992492676], "accuracy": [0.3123761713504791, 0.4768194556236267, 0.5704662799835205, 0.6258090138435364, 0.6773213744163513, 0.7063795924186707, 0.7300224304199219, 0.7248712182044983, 0.7486461400985718, 0.7581561207771301, 0.7534011602401733, 0.7684586048126221, 0.78113853931427, 0.7828556299209595, 0.7890635132789612, 0.8013472557067871, 0.8006868362426758, 0.7968564033508301, 0.8120459914207458, 0.8164047002792358, 0.8183859586715698, 0.8249900937080383, 0.8251221776008606, 0.8338396549224854, 0.8405758738517761, 0.8271034359931946, 0.8329150676727295, 0.8408400416374207, 0.8409721255302429, 0.8409721255302429, 0.8507462739944458, 0.8495575189590454], "val_loss": [2.0142953395843506, 1.3049285411834717, 1.221010446548462, 0.9029416441917419, 0.7282813191413879, 0.6975534558296204, 0.6856722235679626, 0.639476478099823, 0.5773546695709229, 0.5690517425537109, 0.5553730130195618, 0.5021650195121765, 0.5469192266464233, 0.4741402864456177, 0.5186241269111633, 0.4752708375453949, 0.46379393339157104, 0.4375399649143219, 0.4578472375869751, 0.44469353556632996, 0.45531579852104187, 0.41249382495880127, 0.41077932715415955, 0.4297119081020355, 0.4255566895008087, 0.44737908244132996, 0.3881083130836487, 0.3898038864135742, 0.41334056854248047, 0.3903762996196747, 0.39462020993232727, 0.4111402928829193], "val_accuracy": [0.49033331871032715, 0.44433334469795227, 0.5303333401679993, 0.6193333268165588, 0.7080000042915344, 0.7193333506584167, 0.7296666502952576, 0.7440000176429749, 0.7703333497047424, 0.7833333611488342, 0.7906666398048401, 0.7983333468437195, 0.7826666831970215, 0.8163333535194397, 0.7903333306312561, 0.809333324432373, 0.8230000138282776, 0.8299999833106995, 0.8130000233650208, 0.8263333439826965, 0.8223333358764648, 0.8479999899864197, 0.8566666841506958, 0.846666693687439, 0.8463333249092102, 0.8330000042915344, 0.8610000014305115, 0.859000027179718, 0.8393333554267883, 0.8610000014305115, 0.8473333120346069, 0.8453333377838135]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 6, 8, 2, 0, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 0, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [47, 40, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8134285807609558, "mapping_values": [1, 12, 12, 8, 4, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.pow(tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32), grad))))), grad))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0954930782318115, 1.615767002105713, 1.2510769367218018, 0.9702003598213196, 0.8126428127288818, 0.7530274391174316, 0.7204171419143677, 0.7294409871101379, 0.6490090489387512, 0.6426618099212646, 0.6571329832077026, 0.5785406231880188, 0.5963938236236572, 0.5883047580718994, 0.5706235766410828, 0.5523584485054016, 0.5430271625518799, 0.552983283996582, 0.4936857521533966, 0.4985881745815277, 0.5083943009376526, 0.4759168028831482, 0.4960671365261078, 0.45234185457229614, 0.44759586453437805, 0.47311970591545105, 0.4481898248195648, 0.42544931173324585, 0.4320564866065979, 0.4370700716972351], "accuracy": [0.31224408745765686, 0.4733852744102478, 0.563730001449585, 0.6383568644523621, 0.6896050572395325, 0.7128516435623169, 0.7240787148475647, 0.7239466309547424, 0.7530049085617065, 0.7602694630622864, 0.7498348951339722, 0.7800818681716919, 0.7714964747428894, 0.7786290049552917, 0.783119797706604, 0.7954035401344299, 0.7985734939575195, 0.7903843522071838, 0.8132346868515015, 0.8144234418869019, 0.8117818236351013, 0.8297450542449951, 0.8136309385299683, 0.833179235458374, 0.837537944316864, 0.8277638554573059, 0.8364813327789307, 0.8441421389579773, 0.8422929644584656, 0.8384625315666199], "val_loss": [2.0145792961120605, 1.664842128753662, 0.8667478561401367, 0.7440279722213745, 0.7457602620124817, 0.7251769304275513, 0.6829283833503723, 0.6159115433692932, 0.5689093470573425, 0.5752931833267212, 0.538790762424469, 0.5570515990257263, 0.6017699837684631, 0.4982774555683136, 0.5401740670204163, 0.48204439878463745, 0.4803068935871124, 0.4504900574684143, 0.4582701027393341, 0.4357999563217163, 0.4453634023666382, 0.412039190530777, 0.4100838899612427, 0.4107376039028168, 0.400042325258255, 0.425182044506073, 0.3951117694377899, 0.42194250226020813, 0.40595585107803345, 0.4058564305305481], "val_accuracy": [0.4896666705608368, 0.3686666786670685, 0.67166668176651, 0.7233333587646484, 0.7026666402816772, 0.6996666789054871, 0.7429999709129333, 0.7563333511352539, 0.7806666493415833, 0.7823333144187927, 0.7913333177566528, 0.7799999713897705, 0.7613333463668823, 0.8006666898727417, 0.7820000052452087, 0.8050000071525574, 0.8090000152587891, 0.8223333358764648, 0.812666654586792, 0.8253333568572998, 0.8293333053588867, 0.8383333086967468, 0.847000002861023, 0.8426666855812073, 0.8573333621025085, 0.8363333344459534, 0.8519999980926514, 0.8346666693687439, 0.8416666388511658, 0.8486666679382324]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 6, 8, 2, 9, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 0, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [47, 40, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.7968571186065674, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 8, 4, 4, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.add(alpha, tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), beta))", "other_info": {"loss": [2.2314505577087402, 1.824191689491272, 1.280829906463623, 1.080169677734375, 0.9750983119010925, 0.8916135430335999, 0.8472347855567932, 0.8177120685577393, 0.7764143347740173, 0.7602689266204834, 0.7446979284286499, 0.716297447681427, 0.692404568195343, 0.7025437355041504, 0.6793316006660461, 0.6767979860305786, 0.6607035994529724, 0.6617563366889954, 0.6481002569198608, 0.6333575248718262, 0.6332417726516724, 0.6168719530105591, 0.6117752194404602, 0.6097630858421326, 0.5999920964241028, 0.5963747501373291, 0.6046192646026611, 0.5924273729324341], "accuracy": [0.23642848432064056, 0.452119916677475, 0.5575221180915833, 0.6156386137008667, 0.6539427042007446, 0.6782459616661072, 0.6936996579170227, 0.7009642124176025, 0.7128516435623169, 0.7186633348464966, 0.7251353859901428, 0.7338528633117676, 0.744419515132904, 0.733060359954834, 0.7429665923118591, 0.7442874312400818, 0.7504953145980835, 0.7586844563484192, 0.7594769597053528, 0.7588165402412415, 0.7598732113838196, 0.7633073329925537, 0.7737419009208679, 0.7749306559562683, 0.7784969210624695, 0.7777044177055359, 0.7718927264213562, 0.7759873270988464], "val_loss": [2.0514867305755615, 1.3009921312332153, 1.012536644935608, 0.9080278873443604, 0.7852479815483093, 0.728891134262085, 0.7326041460037231, 0.6724880933761597, 0.6419052481651306, 0.6372484564781189, 0.6227188110351562, 0.6134716272354126, 0.6048840880393982, 0.5842803716659546, 0.612026035785675, 0.5708649754524231, 0.5629788637161255, 0.6211414337158203, 0.5542004704475403, 0.5352602005004883, 0.5508525371551514, 0.5365322828292847, 0.5259114503860474, 0.5304450392723083, 0.5153380632400513, 0.5314955711364746, 0.5100772380828857, 0.507962167263031], "val_accuracy": [0.48100000619888306, 0.6113333106040955, 0.6600000262260437, 0.6600000262260437, 0.7273333072662354, 0.7183333039283752, 0.7133333086967468, 0.7450000047683716, 0.7553333044052124, 0.7543333172798157, 0.7566666603088379, 0.7526666522026062, 0.7536666393280029, 0.7766666412353516, 0.7590000033378601, 0.7856666445732117, 0.7816666960716248, 0.7403333187103271, 0.7820000052452087, 0.7940000295639038, 0.7839999794960022, 0.7883333563804626, 0.8080000281333923, 0.796999990940094, 0.800000011920929, 0.7933333516120911, 0.8076666593551636, 0.8019999861717224]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [2, 6, 8, 2, 9, 5, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 8, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 2, 2, 2, 0, 0, 2, 1, 0, 0, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [47, 40, 16, 25, 98, 52, 94, 1, 97, 93, 38, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.7751428484916687, "mapping_values": [1, 11, 11, 7, 4, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(tf.math.add(tf.math.add(alpha, grad), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.15608286857605, 1.5871078968048096, 1.3686697483062744, 1.1185356378555298, 1.0685433149337769, 0.9134930372238159, 0.8168317079544067, 0.7638343572616577, 0.7618483901023865, 0.6825578808784485, 0.6862072944641113, 0.6605185270309448, 0.6323239803314209, 0.6220588088035583, 0.6055243611335754], "accuracy": [0.2899220585823059, 0.4777440130710602, 0.5163122415542603, 0.6044115424156189, 0.6196011304855347, 0.6659622192382812, 0.689869225025177, 0.7091533541679382, 0.7040021419525146, 0.7376832365989685, 0.7380794882774353, 0.7392682433128357, 0.7600052952766418, 0.7614582180976868, 0.7660810947418213], "val_loss": [1.5162492990493774, 1.2480459213256836, 0.882088840007782, 0.7532647848129272, 0.9118086695671082, 0.7494540810585022, 0.6453757286071777, 0.7177575826644897, 0.6268319487571716, 0.5763071179389954, 0.6456587910652161, 0.6392822861671448, 0.5672250390052795, 0.5462111234664917, 0.556954026222229], "val_accuracy": [0.6069999933242798, 0.515999972820282, 0.6449999809265137, 0.7153333425521851, 0.6779999732971191, 0.6840000152587891, 0.7289999723434448, 0.7106666564941406, 0.7486666440963745, 0.7853333353996277, 0.7183333039283752, 0.7480000257492065, 0.7543333172798157, 0.7833333611488342, 0.7763333320617676]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [9, 6, 8, 2, 0, 1, 9, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [57, 54, 67, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [28, 57, 40, 62]], "fitness": -0.7605714201927185, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2907512187957764, 2.265104293823242, 2.233870029449463, 2.1954562664031982, 2.1383438110351562, 2.0670053958892822, 1.967275619506836, 1.847775936126709, 1.7187401056289673, 1.5959956645965576, 1.4754817485809326, 1.3658535480499268, 1.2903194427490234, 1.2316864728927612, 1.1786673069000244, 1.1249902248382568, 1.097211241722107, 1.072149395942688, 1.0260757207870483, 1.0011614561080933, 0.9751566648483276, 0.9548212885856628, 0.9392635822296143, 0.914829671382904, 0.9072742462158203, 0.8814426064491272, 0.8768442869186401, 0.8680002093315125, 0.8532730937004089, 0.8485484719276428, 0.8426705598831177, 0.8336405158042908, 0.8212097883224487, 0.8073444962501526, 0.8034287691116333, 0.803986668586731, 0.7962542772293091, 0.7905309200286865, 0.7870153188705444, 0.7731838822364807, 0.7702978253364563, 0.7530547976493835, 0.7629768252372742, 0.7555534839630127, 0.7484667897224426, 0.7491916418075562, 0.7447099089622498, 0.7454116940498352, 0.7399541139602661, 0.7280420064926147], "accuracy": [0.11676132678985596, 0.19284109771251678, 0.24937260150909424, 0.3004887104034424, 0.3623035252094269, 0.39043718576431274, 0.43111875653266907, 0.4539690911769867, 0.47232863306999207, 0.4950468838214874, 0.5254259705543518, 0.547087550163269, 0.563730001449585, 0.5872408151626587, 0.5892220139503479, 0.6067890524864197, 0.6145819425582886, 0.6205257177352905, 0.6402060389518738, 0.6479989290237427, 0.6534143686294556, 0.6626601219177246, 0.6682076454162598, 0.6753401160240173, 0.6790384650230408, 0.6870955228805542, 0.6896050572395325, 0.6889446377754211, 0.6980583667755127, 0.6971337795257568, 0.6966054439544678, 0.700700044631958, 0.7037379741668701, 0.7096816897392273, 0.7087571024894714, 0.7074362635612488, 0.7180029153823853, 0.7170783281326294, 0.717870831489563, 0.718399167060852, 0.7239466309547424, 0.7246070504188538, 0.722229540348053, 0.7230220437049866, 0.7296261787414551, 0.7217012047767639, 0.7294940948486328, 0.7334566116333008, 0.7277770638465881, 0.7298903465270996], "val_loss": [2.2709479331970215, 2.240251302719116, 2.202230453491211, 2.1513583660125732, 2.079854965209961, 1.9835869073867798, 1.8572250604629517, 1.709188461303711, 1.5524154901504517, 1.4046752452850342, 1.2767553329467773, 1.1717982292175293, 1.0898454189300537, 1.0274102687835693, 0.9773207306861877, 0.9346157312393188, 0.9000909924507141, 0.8693183064460754, 0.8429703712463379, 0.8226557374000549, 0.8062060475349426, 0.7884341478347778, 0.7744871377944946, 0.7638616561889648, 0.7513664364814758, 0.7431883215904236, 0.7305228114128113, 0.7248824834823608, 0.7164538502693176, 0.7071861028671265, 0.6987651586532593, 0.6909072399139404, 0.6861066818237305, 0.6801605820655823, 0.67293381690979, 0.6693407297134399, 0.6637079119682312, 0.6603100299835205, 0.6565825939178467, 0.650545597076416, 0.649034857749939, 0.64266037940979, 0.6371491551399231, 0.6329485774040222, 0.6286756992340088, 0.6265825629234314, 0.6220945119857788, 0.6193291544914246, 0.6189929842948914, 0.6141437292098999], "val_accuracy": [0.25433334708213806, 0.3606666624546051, 0.4126666784286499, 0.45633333921432495, 0.4896666705608368, 0.5230000019073486, 0.5423333048820496, 0.562666654586792, 0.5846666693687439, 0.6086666584014893, 0.6296666860580444, 0.6650000214576721, 0.6779999732971191, 0.6773333549499512, 0.6869999766349792, 0.6936666369438171, 0.703000009059906, 0.7073333263397217, 0.7086666822433472, 0.7113333344459534, 0.7083333134651184, 0.7200000286102295, 0.7226666808128357, 0.7253333330154419, 0.731333315372467, 0.7210000157356262, 0.7363333106040955, 0.7323333621025085, 0.7419999837875366, 0.7440000176429749, 0.7480000257492065, 0.7490000128746033, 0.749666690826416, 0.750333309173584, 0.753333330154419, 0.7556666731834412, 0.7570000290870667, 0.7593333125114441, 0.7586666941642761, 0.7590000033378601, 0.7559999823570251, 0.7616666555404663, 0.7613333463668823, 0.7663333415985107, 0.7689999938011169, 0.7643333077430725, 0.7670000195503235, 0.768666684627533, 0.765666663646698, 0.7676666378974915]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 6, 8, 2, 0, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 0, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [47, 40, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [17, 57, 40, 62]], "fitness": -0.6208571195602417, "mapping_values": [1, 12, 12, 8, 4, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(grad, tf.math.add(alpha, tf.math.negative(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, grad), grad)), tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(1.40591988e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.300459861755371, 2.298705816268921, 2.2952017784118652, 2.292867660522461, 2.288015604019165, 2.2866101264953613, 2.2839789390563965, 2.2794606685638428, 2.2780284881591797, 2.2769806385040283, 2.273836851119995, 2.2684836387634277, 2.2675256729125977, 2.262709617614746, 2.2604782581329346, 2.2550342082977295, 2.254563808441162, 2.2507331371307373, 2.246152877807617, 2.2439651489257812, 2.237429141998291, 2.2342071533203125, 2.2309322357177734, 2.2280654907226562, 2.224090814590454, 2.2184081077575684, 2.212894916534424, 2.2090981006622314, 2.207260847091675, 2.201571226119995, 2.1971399784088135, 2.1908113956451416, 2.1862499713897705, 2.1799914836883545, 2.172358751296997, 2.1686859130859375, 2.1635842323303223, 2.156751871109009, 2.150899648666382, 2.1439554691314697, 2.137479782104492, 2.128082513809204, 2.122154712677002, 2.114121198654175, 2.1060500144958496, 2.1024606227874756, 2.0895683765411377, 2.082381248474121, 2.0706069469451904, 2.061631679534912, 2.0517444610595703, 2.0397982597351074, 2.0303702354431152, 2.0230796337127686, 2.008932590484619, 1.9987212419509888, 1.9851349592208862, 1.9771652221679688, 1.9648879766464233, 1.9495962858200073, 1.9347556829452515, 1.9206047058105469, 1.9081223011016846, 1.8993589878082275, 1.8832836151123047, 1.8686362504959106, 1.8542778491973877, 1.8375508785247803, 1.825719952583313, 1.814344048500061, 1.7943593263626099, 1.7792422771453857, 1.7720861434936523, 1.7511396408081055, 1.743215560913086, 1.7221794128417969, 1.7097609043121338, 1.701859712600708, 1.683243751525879, 1.6622897386550903, 1.6435213088989258, 1.637160301208496, 1.6201186180114746, 1.6060093641281128, 1.594215989112854, 1.5790023803710938, 1.5600249767303467, 1.5506134033203125, 1.5416371822357178, 1.5176100730895996, 1.5118762254714966, 1.4964094161987305, 1.4818792343139648, 1.4783010482788086, 1.4634835720062256, 1.4491289854049683, 1.4407460689544678, 1.4358189105987549, 1.4184999465942383, 1.406365990638733], "accuracy": [0.09351472556591034, 0.10672302544116974, 0.10540219396352768, 0.11028926074504852, 0.1266675442457199, 0.1348566859960556, 0.13934750854969025, 0.146479994058609, 0.15453705191612244, 0.15731078386306763, 0.16853784024715424, 0.17751948535442352, 0.17500990629196167, 0.19944524765014648, 0.1978602558374405, 0.21133272349834442, 0.21172896027565002, 0.22599393129348755, 0.23774930834770203, 0.23616431653499603, 0.24712719023227692, 0.25782591104507446, 0.26403382420539856, 0.2689208686351776, 0.2748646140098572, 0.28424251079559326, 0.2989037036895752, 0.2930920720100403, 0.2957337200641632, 0.3028661906719208, 0.30603620409965515, 0.3167349100112915, 0.3127724230289459, 0.325320303440094, 0.3357548415660858, 0.34328359365463257, 0.33800026774406433, 0.3501518964767456, 0.34645357728004456, 0.3494914770126343, 0.352529376745224, 0.36283186078071594, 0.36943599581718445, 0.3683793544769287, 0.3711530864238739, 0.37643641233444214, 0.37366265058517456, 0.3847576379776001, 0.3921542763710022, 0.38647469878196716, 0.39889049530029297, 0.401400089263916, 0.4002113342285156, 0.4084004759788513, 0.4143442213535309, 0.4138158857822418, 0.42768457531929016, 0.4169858694076538, 0.41883501410484314, 0.42689210176467896, 0.4315149784088135, 0.4349491596221924, 0.43851539492607117, 0.43349623680114746, 0.44947826862335205, 0.45106327533721924, 0.45330867171287537, 0.4570069909095764, 0.4593845009803772, 0.4527803361415863, 0.46889445185661316, 0.4644036591053009, 0.46387532353401184, 0.47153612971305847, 0.4694227874279022, 0.478140264749527, 0.4780081808567047, 0.47325319051742554, 0.48408401012420654, 0.4893673360347748, 0.48791441321372986, 0.48870691657066345, 0.49531105160713196, 0.5003302097320557, 0.5004622936248779, 0.4983489513397217, 0.5130101442337036, 0.5124818682670593, 0.5057455897331238, 0.5147272348403931, 0.5238409638404846, 0.520142674446106, 0.5301809310913086, 0.5222559571266174, 0.5276713967323303, 0.5354642868041992, 0.527010977268219, 0.5274072289466858, 0.533350944519043, 0.5387663245201111], "val_loss": [2.296722412109375, 2.2935283184051514, 2.290381908416748, 2.2872395515441895, 2.2840685844421387, 2.2809183597564697, 2.2777464389801025, 2.2745656967163086, 2.271376371383667, 2.2682008743286133, 2.2649543285369873, 2.261625051498413, 2.258244514465332, 2.2548470497131348, 2.2514150142669678, 2.2478420734405518, 2.244211435317993, 2.2405357360839844, 2.2367403507232666, 2.2328269481658936, 2.2288103103637695, 2.2246663570404053, 2.2204551696777344, 2.216045618057251, 2.2115373611450195, 2.2069010734558105, 2.202000617980957, 2.1970341205596924, 2.191899061203003, 2.1866376399993896, 2.181138753890991, 2.1754398345947266, 2.1695220470428467, 2.1633551120758057, 2.156982660293579, 2.1503822803497314, 2.1435437202453613, 2.1364660263061523, 2.1291754245758057, 2.121535062789917, 2.1136865615844727, 2.105475664138794, 2.097111701965332, 2.0883688926696777, 2.0793251991271973, 2.070129156112671, 2.0604913234710693, 2.0506210327148438, 2.0402064323425293, 2.029557943344116, 2.01849365234375, 2.007120370864868, 1.9954415559768677, 1.983465313911438, 1.9710856676101685, 1.958323359489441, 1.9452483654022217, 1.9319016933441162, 1.918128252029419, 1.9039160013198853, 1.8893423080444336, 1.8744133710861206, 1.8592524528503418, 1.8439576625823975, 1.8282443284988403, 1.8123005628585815, 1.796038269996643, 1.7794479131698608, 1.762802243232727, 1.746063470840454, 1.728968858718872, 1.7119163274765015, 1.694988489151001, 1.6775957345962524, 1.6604422330856323, 1.6431275606155396, 1.6257141828536987, 1.608560562133789, 1.5912890434265137, 1.5737812519073486, 1.5563061237335205, 1.5392519235610962, 1.5221327543258667, 1.505162000656128, 1.4884229898452759, 1.4718520641326904, 1.4554206132888794, 1.4392023086547852, 1.4234997034072876, 1.4077403545379639, 1.392200231552124, 1.3771663904190063, 1.362342119216919, 1.3479058742523193, 1.333632469177246, 1.3198143243789673, 1.3064879179000854, 1.2936012744903564, 1.280638337135315, 1.268090844154358], "val_accuracy": [0.059333331882953644, 0.07866666465997696, 0.09600000083446503, 0.12033333629369736, 0.1496666669845581, 0.179666668176651, 0.20499999821186066, 0.2329999953508377, 0.257666677236557, 0.2796666622161865, 0.30033332109451294, 0.3160000145435333, 0.3306666612625122, 0.3409999907016754, 0.34933334589004517, 0.3610000014305115, 0.3636666536331177, 0.36766666173934937, 0.3733333349227905, 0.3763333261013031, 0.3816666603088379, 0.3866666555404663, 0.39133334159851074, 0.3973333239555359, 0.4023333191871643, 0.4099999964237213, 0.4163333475589752, 0.4230000078678131, 0.4309999942779541, 0.4350000023841858, 0.43799999356269836, 0.44066667556762695, 0.4463333189487457, 0.4519999921321869, 0.45500001311302185, 0.46033334732055664, 0.4620000123977661, 0.46566668152809143, 0.4673333466053009, 0.47200000286102295, 0.47733333706855774, 0.48133334517478943, 0.48766666650772095, 0.49000000953674316, 0.49433332681655884, 0.4970000088214874, 0.503000020980835, 0.5073333382606506, 0.5113333463668823, 0.5136666893959045, 0.5170000195503235, 0.5193333625793457, 0.5213333368301392, 0.5223333239555359, 0.5253333449363708, 0.5260000228881836, 0.5296666622161865, 0.531333327293396, 0.534333348274231, 0.5376666784286499, 0.5410000085830688, 0.5433333516120911, 0.546999990940094, 0.5509999990463257, 0.5513333082199097, 0.5533333420753479, 0.5556666851043701, 0.5573333501815796, 0.559333324432373, 0.5609999895095825, 0.5630000233650208, 0.5649999976158142, 0.5683333277702332, 0.5706666707992554, 0.5746666789054871, 0.5770000219345093, 0.5786666870117188, 0.581333339214325, 0.5830000042915344, 0.5836666822433472, 0.5863333344459534, 0.5896666646003723, 0.5916666388511658, 0.593666672706604, 0.5973333120346069, 0.5996666550636292, 0.6000000238418579, 0.6013333201408386, 0.6046666502952576, 0.609000027179718, 0.6106666922569275, 0.6140000224113464, 0.6150000095367432, 0.6173333525657654, 0.621666669845581, 0.6263333559036255, 0.6293333172798157, 0.6340000033378601, 0.6333333253860474, 0.6396666765213013]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 6, 8, 5, 9, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 0, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [38, 70, 52, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.28999999165534973, "mapping_values": [1, 6, 6, 5, 1, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.square(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.625788927078247, 2.241952896118164, 2.6635494232177734, 2.3164217472076416, 2.3042619228363037, 2.303183078765869, 2.303027868270874, 2.302847385406494], "accuracy": [0.18399155139923096, 0.1748778223991394, 0.1916523575782776, 0.1748778223991394, 0.09721305221319199, 0.08809932321310043, 0.1006472036242485, 0.09787346422672272], "val_loss": [2.30808162689209, 2.230438470840454, 1.9690158367156982, 2.3053040504455566, 2.3032619953155518, 2.302785873413086, 2.3028564453125, 2.3027327060699463], "val_accuracy": [0.09866666793823242, 0.25866666436195374, 0.28433331847190857, 0.09866666793823242, 0.09866666793823242, 0.09933333098888397, 0.09933333098888397, 0.10199999809265137]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 3, 8, 0, 0, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 0, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [47, 12, 64, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [5, 8, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [80, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 7, 4, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 2, 1, 0], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.sqrt(tf.math.negative(tf.math.negative(tf.math.add(alpha, tf.math.subtract(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(alpha, tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), grad))))))), grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.sqrt(beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 6, 8, 2, 9, 0, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 0, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [76, 70, 16, 56, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [0, 1, 0, 1, 1, 1], [2, 6, 9, 9, 7], [0, 0, 6], [30, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 3, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 6, 2, 3, 1, 1, 0, 1, 0, 5, 4, 2, 2, 2, 4, 2, 2, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.negative(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32)), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.1014397069811821, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [2, 6, 1, 2, 9, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 0, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [38, 70, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [2, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 11, 11, 6, 5, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.add(grad, tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [3.3063888549804688, 3.6635468006134033, 3.6665351390838623, 3.64579176902771, 3.665240526199341, 3.6254401206970215], "accuracy": [0.09932637959718704, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [4.839681625366211, 4.839695453643799, 4.839676856994629, 4.8396992683410645, 4.839744567871094, 4.839743614196777], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 6, 8, 2, 6, 1, 1, 2, 3, 0, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 1, 0, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 1, 0, 0, 2, 1, 0, 2, 2, 3], [97, 21, 16, 25, 98, 52, 94, 49, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [1, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [88, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 49, 49, 28, 21, 11, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 49, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.math.divide_no_nan(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.add(alpha, tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.negative(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.add(grad, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)), tf.math.pow(tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.square(grad)), tf.math.add(alpha, alpha)), tf.math.subtract(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))))), tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))))))), tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, alpha), tf.math.add(tf.math.add(alpha, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)))), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.pow(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))))), grad))))))), grad))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [0, 6, 8, 2, 9, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 0, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [38, 70, 53, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [2, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [2, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 7, 7, 5, 2, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 3, 4, 2], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))))), tf.constant(6.69753570e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.3029890060424805, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 6, 8, 8, 9, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 0, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [38, 70, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 5, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.sqrt(grad))), tf.math.add(alpha, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09972262382507324, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 3, 9, 2, 0, 1, 0, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 0, 2, 2, 0, 2, 2, 1, 0, 2, 0, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [76, 70, 16, 56, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [2, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 7, 3, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 3, 4, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))))))), grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.302441358566284, 2.3029112815856934, 2.3085577487945557, 2.3531112670898438, 2.9002737998962402, 9.127096176147461], "accuracy": [0.10368511080741882, 0.10289261490106583, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3029520511627197, 2.305022716522217, 2.3217074871063232, 2.4535367488861084, 5.136667251586914, 14.89844036102295], "val_accuracy": [0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 6, 0, 4, 2, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 0, 2, 2, 0, 2, 2, 1, 0, 2, 0, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [47, 40, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [1, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [0, 1, 0, 0, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [28, 57, 40, 62]], "fitness": -0.041428569704294205, "mapping_values": [1, 11, 11, 6, 5, 2, 1, 1, 0, 1, 0, 5, 4, 3, 1, 1, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.negative(grad)), tf.math.pow(tf.math.add(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), grad))), tf.math.add(alpha, tf.constant(1.27951705e-01, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3016674518585205, 2.302847146987915, 2.302220344543457, 2.302730083465576, 2.3008522987365723, 2.3022286891937256, 2.3025901317596436, 2.3008532524108887, 2.3023312091827393, 2.3036949634552, 2.3038790225982666, 2.3018507957458496, 2.303983449935913, 2.3019518852233887, 2.3021745681762695, 2.300870418548584, 2.303400993347168, 2.30277419090271], "accuracy": [0.09100515395402908, 0.09628847241401672, 0.08836349099874496, 0.0878351628780365, 0.0940430611371994, 0.09259014576673508, 0.09008057415485382, 0.09034473448991776, 0.09021265059709549, 0.09325055778026581, 0.08532558381557465, 0.08955223858356476, 0.08400475233793259, 0.09179764986038208, 0.08889182657003403, 0.09549596905708313, 0.0878351628780365, 0.08849557489156723], "val_loss": [2.299933910369873, 2.2999117374420166, 2.2998905181884766, 2.299866199493408, 2.2998464107513428, 2.2998242378234863, 2.2998008728027344, 2.2997796535491943, 2.299757242202759, 2.2997360229492188, 2.2997114658355713, 2.2996904850006104, 2.2996671199798584, 2.299647808074951, 2.2996318340301514, 2.2996134757995605, 2.299591302871704, 2.2995660305023193], "val_accuracy": [0.04466666653752327, 0.04466666653752327, 0.04466666653752327, 0.04500000178813934, 0.04500000178813934, 0.04533333331346512, 0.04533333331346512, 0.04533333331346512, 0.045666664838790894, 0.045666664838790894, 0.04633333161473274, 0.04633333161473274, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459, 0.04699999839067459]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [2, 6, 8, 2, 9, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 2, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [35, 70, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.04085714370012283, "mapping_values": [1, 8, 8, 5, 3, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad)))), grad)), tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3016750812530518, 2.302875518798828, 2.3022701740264893, 2.3028054237365723, 2.3009421825408936, 2.3023440837860107], "accuracy": [0.09100515395402908, 0.09602430462837219, 0.08849557489156723, 0.0882314071059227, 0.09391097724437714, 0.09245806187391281], "val_loss": [2.299954414367676, 2.299954414367676, 2.299954414367676, 2.299954414367676, 2.299954414367676, 2.299954414367676], "val_accuracy": [0.04466666653752327, 0.04466666653752327, 0.04466666653752327, 0.04466666653752327, 0.04466666653752327, 0.04466666653752327]}}]