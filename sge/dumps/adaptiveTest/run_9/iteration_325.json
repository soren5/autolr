[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 2, 4, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [3, 3, 3, 1, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [67, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8237142562866211, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(grad, tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2538703997310567, 1.767260865260739, 1.3760666735278397, 1.189137705281552, 0.9910836333548939, 0.8393923325183417, 0.8156729753479399, 0.8307527335895256, 0.7336687024526781, 0.6753494639390999, 0.6645718152969269, 0.6364450889209384, 0.612251121535545, 0.6039941471486815, 0.575305896703798, 0.572052742511904, 0.5460311017409921, 0.5387888080597302, 0.550136153826451, 0.5280570397445035, 0.518488938026519, 0.505507476817757, 0.4852930717165318, 0.49402297286309615, 0.4709935028240303, 0.4638845888363167, 0.45033853757241304, 0.452818360452749, 0.4568461377890575, 0.44196402925022243, 0.4211345661459598], "accuracy": [0.3008849620819092, 0.47391360998153687, 0.5458987951278687, 0.600581169128418, 0.6386210322380066, 0.6907938122749329, 0.7016246318817139, 0.6983225345611572, 0.7189275026321411, 0.7461365461349487, 0.7479857206344604, 0.7560427784919739, 0.7707040309906006, 0.7670056819915771, 0.7843085527420044, 0.7781006693840027, 0.7948752045631409, 0.7991018295288086, 0.7905164361000061, 0.8075551390647888, 0.8049134612083435, 0.8178576231002808, 0.8185180425643921, 0.8119139075279236, 0.829216718673706, 0.8298771381378174, 0.8374059200286865, 0.8387266993522644, 0.8302733898162842, 0.8367455005645752, 0.8457271456718445], "val_loss": [1.386533260345459, 1.276487112045288, 0.8246822357177734, 0.8897975172315326, 0.7060050964355469, 0.6683892522539411, 0.5926978077207293, 0.5864711659295219, 0.5515999794006348, 0.5669587169374738, 0.5506589923586164, 0.5046439681734357, 0.5097840002604893, 0.4826831817626953, 0.4875873327255249, 0.4768245390483311, 0.45925090994153706, 0.44606549399239676, 0.43754574230739046, 0.4796802656991141, 0.4541174513953073, 0.4352437342916216, 0.4061601332255772, 0.42656982796532766, 0.3975444095475333, 0.39011090993881226, 0.393369768347059, 0.37734260729381014, 0.4215997798102243, 0.3979728136743818, 0.4221058487892151], "val_accuracy": [0.5713333487510681, 0.5960000157356262, 0.6413333415985107, 0.6359999775886536, 0.6926666498184204, 0.7016666531562805, 0.7409999966621399, 0.7419999837875366, 0.7799999713897705, 0.7283333539962769, 0.7613333463668823, 0.7749999761581421, 0.7639999985694885, 0.7879999876022339, 0.7749999761581421, 0.7963333129882812, 0.8069999814033508, 0.8023333549499512, 0.8186666369438171, 0.7799999713897705, 0.8116666674613953, 0.8076666593551636, 0.8246666789054871, 0.8116666674613953, 0.8299999833106995, 0.8363333344459534, 0.8323333263397217, 0.8343333601951599, 0.82833331823349, 0.8263333439826965, 0.8109999895095825]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 2, 4, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [3, 3, 3, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [67, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8202857375144958, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.253900890620535, 1.8303495924218676, 1.4883391283223217, 1.1233912076869457, 1.0009913217547453, 0.8613556173845699, 0.8033905954660756, 0.7859466324203979, 0.7300718466698013, 0.688152876000725, 0.6539124225848985, 0.6461116252259146, 0.6378688222192707, 0.6043973278690716, 0.5705317481633868, 0.5846039266350751, 0.5729352320819845, 0.5470638679806205, 0.5584671896336306, 0.528289950432448, 0.527844024781522, 0.5195254861969973, 0.5006692460255301, 0.4876015819122038, 0.4868932791854318, 0.4769210592788114, 0.4559203287424932, 0.47775801519093625, 0.4533822663180533, 0.46467187002019766, 0.43569878926996414, 0.4480161637622824, 0.4305395843362008, 0.4256467977968016, 0.4354132005386128, 0.40672365939848615, 0.40329454209605825, 0.38485096382616124, 0.40352979579133724, 0.37311526753914714, 0.3929123871117976], "accuracy": [0.3008849620819092, 0.4451195299625397, 0.5112931132316589, 0.6059965491294861, 0.6432439684867859, 0.6864351034164429, 0.6988508701324463, 0.7092854380607605, 0.719852089881897, 0.7397965788841248, 0.7508915662765503, 0.7531369924545288, 0.7573636174201965, 0.7640998363494873, 0.7924976944923401, 0.7777044177055359, 0.7799497842788696, 0.7965922355651855, 0.7873464822769165, 0.8037247657775879, 0.8020076751708984, 0.8103289008140564, 0.81112140417099, 0.8201030492782593, 0.8219521641731262, 0.8190463781356812, 0.8347642421722412, 0.8244617581367493, 0.8278959393501282, 0.8245938420295715, 0.8383304476737976, 0.828292191028595, 0.8391229510307312, 0.8429533839225769, 0.8362171649932861, 0.8514066934585571, 0.8461233377456665, 0.8595958352088928, 0.8507462739944458, 0.8625016212463379, 0.8532558679580688], "val_loss": [1.3847972324916296, 1.372124433517456, 0.8904993193490165, 1.0201832907540458, 0.7275323356900897, 0.6324456078665597, 0.6049799237932477, 0.6184284687042236, 0.5600616250719342, 0.5317121914454869, 0.5461777108056205, 0.513878311429705, 0.4845514978681292, 0.49382879052843365, 0.47277084418705534, 0.4725642033985683, 0.466779283114842, 0.4677871806280954, 0.4527909926005772, 0.48442072527749197, 0.4661198002951486, 0.4303123099463327, 0.41849967411586214, 0.4230621371950422, 0.41546852248055594, 0.39434899602617535, 0.3922127570424761, 0.38761024815695627, 0.42232108967644827, 0.39926596198763165, 0.42725581782204763, 0.3827433671270098, 0.3830954432487488, 0.3766025815691267, 0.3816433719226292, 0.3629635487283979, 0.37551561423710417, 0.36913091795785086, 0.39971368653433664, 0.38714027404785156, 0.36619056122643606], "val_accuracy": [0.5730000138282776, 0.46700000762939453, 0.6656666398048401, 0.6076666712760925, 0.6713333129882812, 0.6953333616256714, 0.7233333587646484, 0.715666651725769, 0.7386666536331177, 0.7513333559036255, 0.7576666474342346, 0.7710000276565552, 0.7923333048820496, 0.7846666574478149, 0.7933333516120911, 0.7993333339691162, 0.7963333129882812, 0.7893333435058594, 0.8106666803359985, 0.7766666412353516, 0.7913333177566528, 0.8133333325386047, 0.8149999976158142, 0.8133333325386047, 0.8119999766349792, 0.8339999914169312, 0.8370000123977661, 0.8333333134651184, 0.8143333196640015, 0.8199999928474426, 0.8040000200271606, 0.8376666903495789, 0.831333339214325, 0.8363333344459534, 0.8289999961853027, 0.846666693687439, 0.8416666388511658, 0.8389999866485596, 0.8263333439826965, 0.8333333134651184, 0.8416666388511658]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 2, 4, 5, 3, 2, 8, 8, 6, 9, 6, 8, 9], [3, 3, 3, 3, 3, 3, 0, 0, 0, 3, 1, 0, 5, 0], [67, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8185714483261108, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2538659505053062, 1.8243146514407615, 1.3374423155018116, 1.0864701642021448, 0.9557267736765088, 0.8378926372452498, 0.8029701805480042, 0.7945711444539322, 0.7181999293127552, 0.6566482533584764, 0.6702357317557062, 0.6318878548854787, 0.6116807637449584, 0.5878354276742886, 0.5986547779255948, 0.56409116606781, 0.5340337507823328, 0.5554123353948682, 0.5365808379884724, 0.529805002349038, 0.5224512465846316, 0.506098893324555, 0.49130818520192504, 0.4917749909519472, 0.48983178024105567, 0.47491869878743725, 0.44560684333183287, 0.4521127377345562, 0.4704558015924639, 0.47308383602759685, 0.42988277372824535, 0.4407712011809016, 0.42433998783455706, 0.4224123345539633, 0.42283246299027294, 0.3879379989755719, 0.3970327983875915, 0.3854434694659362], "accuracy": [0.3007528781890869, 0.4605732262134552, 0.5548804402351379, 0.6255448460578918, 0.6553955674171448, 0.6931713223457336, 0.703209638595581, 0.7127195596694946, 0.720380425453186, 0.7535332441329956, 0.7421740889549255, 0.7605336308479309, 0.7692511081695557, 0.774798572063446, 0.7765156626701355, 0.7841764688491821, 0.8017435073852539, 0.7872143983840942, 0.7979130744934082, 0.8038568496704102, 0.8074230551719666, 0.8082155585289001, 0.8175934553146362, 0.8171972036361694, 0.8208954930305481, 0.822348415851593, 0.8417646288871765, 0.8341038227081299, 0.8276317715644836, 0.8193105459213257, 0.8407079577445984, 0.8348963260650635, 0.839519202709198, 0.8457271456718445, 0.8457271456718445, 0.86118084192276, 0.8475762605667114, 0.8609166741371155], "val_loss": [1.3866349628993444, 1.0223486082894462, 1.049414805003575, 0.7338229077202933, 0.7741391999380929, 0.7701751164027623, 0.6192494290215629, 0.6098463194710868, 0.5369339840752738, 0.5626496757779803, 0.5426904814583915, 0.5126042876924787, 0.5015335083007812, 0.5245148965290615, 0.4794450487409319, 0.5025611604963031, 0.4793034110750471, 0.44660866260528564, 0.4436237471444266, 0.4130948952266148, 0.459229622568403, 0.44043803215026855, 0.42704743998391287, 0.43648976939065115, 0.4124031066894531, 0.4063373293195452, 0.40758332184382845, 0.38622318846838816, 0.42440073830740793, 0.3922917587416513, 0.452737671988351, 0.37672089678900583, 0.3705727883747646, 0.3627177051135472, 0.3751303809029715, 0.35916876792907715, 0.38862723112106323, 0.3958754028592791], "val_accuracy": [0.5713333487510681, 0.6306666731834412, 0.5806666612625122, 0.6796666383743286, 0.6380000114440918, 0.6480000019073486, 0.7326666712760925, 0.7203333377838135, 0.7756666541099548, 0.7323333621025085, 0.7563333511352539, 0.7683333158493042, 0.7676666378974915, 0.7796666622161865, 0.7886666655540466, 0.7730000019073486, 0.7823333144187927, 0.8073333501815796, 0.8063333630561829, 0.8169999718666077, 0.8003333210945129, 0.8026666641235352, 0.8220000267028809, 0.8063333630561829, 0.8263333439826965, 0.8333333134651184, 0.8209999799728394, 0.8363333344459534, 0.815666675567627, 0.8263333439826965, 0.7866666913032532, 0.8426666855812073, 0.8493333458900452, 0.8473333120346069, 0.8333333134651184, 0.847000002861023, 0.8330000042915344, 0.8303333520889282]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 2, 4, 2, 3, 2, 8, 2, 6, 9, 6, 8, 9], [3, 3, 2, 3, 3, 0, 2, 0, 0, 3, 1, 0, 5, 0], [67, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8137142658233643, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 5, 6, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(grad, tf.math.add(tf.math.pow(grad, beta), tf.math.add(tf.math.multiply(tf.math.add(beta, grad), grad), tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.253873936803412, 1.8964480834945066, 1.6935841401397056, 1.3912406173191365, 1.028306397874011, 0.8353677663773499, 0.7776025535723065, 0.7463467895252484, 0.6816578298559153, 0.638879695344579, 0.6327160973637694, 0.6226311554730514, 0.6052762726829856, 0.5679761583479782, 0.5863180963307513, 0.5528246267533746, 0.5344190020933443, 0.5604810149142803, 0.5506458796246838, 0.5202895175621824, 0.5303047927867278, 0.4953894871589042, 0.49375355566465906, 0.4930866011271403, 0.471239496263074, 0.47100049334431465, 0.4543410874849077, 0.45229415869306594, 0.447980354467104, 0.45053191177360985, 0.43512303930987867, 0.4227279780240437, 0.4350070078469633, 0.406235057227348, 0.431153745746348, 0.39660160879039524, 0.4015277452700961, 0.38587318124819614, 0.38906664113248296, 0.37311850704489885, 0.37297952319605476, 0.36321750988640317, 0.3810963966803638, 0.3490840249947427, 0.3556910043599788, 0.3523315170484842], "accuracy": [0.30101704597473145, 0.4275524914264679, 0.4501386880874634, 0.499009370803833, 0.6342623233795166, 0.6954167485237122, 0.7106062769889832, 0.7252674698829651, 0.7363624572753906, 0.7559106945991516, 0.7658169269561768, 0.7648923397064209, 0.7708360552787781, 0.7804781198501587, 0.7769119143486023, 0.7897239327430725, 0.7971205711364746, 0.7885351777076721, 0.7943468689918518, 0.8055738806724548, 0.8049134612083435, 0.8157442808151245, 0.8204993009567261, 0.819970965385437, 0.8286884427070618, 0.8255184292793274, 0.8348963260650635, 0.837141752243042, 0.8252542614936829, 0.8298771381378174, 0.8416325449943542, 0.8442742228507996, 0.8374059200286865, 0.8507462739944458, 0.839519202709198, 0.8537842035293579, 0.8466516733169556, 0.8593316674232483, 0.8561616539955139, 0.8639545440673828, 0.8576145768165588, 0.8652753829956055, 0.8602562546730042, 0.8734645247459412, 0.8639545440673828, 0.8688416481018066], "val_loss": [1.3855105468205042, 1.4269725595201765, 1.2607856818607874, 0.8741031033652169, 0.8393984351839338, 0.6814259120396206, 0.60579856804439, 0.5852818829672677, 0.5475438833236694, 0.5162575755800519, 0.5035056216376168, 0.4934976611818586, 0.5036720037460327, 0.48793928963797434, 0.46174754415239605, 0.5042740106582642, 0.44440252440316336, 0.4387123073850359, 0.42775003399167744, 0.48113386971609934, 0.45787419591631207, 0.4520179714475359, 0.41899679388318745, 0.4162746582712446, 0.40307640177862986, 0.3998837045260838, 0.38653372866766794, 0.3890918322971889, 0.40578811509268625, 0.40009045600891113, 0.3997290219579424, 0.37676362480436054, 0.3702313814844404, 0.36720930678503855, 0.3812161684036255, 0.3631157534463065, 0.37929575783865793, 0.3685731291770935, 0.3745101775441851, 0.37162711790629793, 0.3476755619049072, 0.35431085314069477, 0.37369513511657715, 0.345613317830222, 0.35127268518720356, 0.36795257670538767], "val_accuracy": [0.5730000138282776, 0.5289999842643738, 0.47833332419395447, 0.6463333368301392, 0.6383333206176758, 0.6956666707992554, 0.7316666841506958, 0.746999979019165, 0.7406666874885559, 0.765333354473114, 0.7753333449363708, 0.7746666669845581, 0.7649999856948853, 0.7823333144187927, 0.7889999747276306, 0.762666642665863, 0.8046666383743286, 0.8029999732971191, 0.8153333067893982, 0.7829999923706055, 0.8103333115577698, 0.8029999732971191, 0.8209999799728394, 0.815666675567627, 0.8276666402816772, 0.8273333311080933, 0.8330000042915344, 0.8273333311080933, 0.8273333311080933, 0.8209999799728394, 0.8199999928474426, 0.8379999995231628, 0.8343333601951599, 0.8396666646003723, 0.8256666660308838, 0.8443333506584167, 0.8393333554267883, 0.8373333215713501, 0.8389999866485596, 0.8286666870117188, 0.8489999771118164, 0.8486666679382324, 0.840666651725769, 0.8479999899864197, 0.8426666855812073, 0.831333339214325]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 2, 4, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [3, 3, 3, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [67, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.797428548336029, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 2, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(grad, tf.math.add(tf.math.pow(grad, grad), tf.math.subtract(tf.math.multiply(tf.math.add(beta, grad), grad), tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32))), tf.math.sqrt(tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.100674233747086, 1.5419617282747513, 1.1033612369168404, 0.867417937705325, 0.7972076776997288, 0.75239651211973, 0.6819951304150548, 0.6604635507171464, 0.6834494972021163, 0.6037963493357497, 0.6110697451709772, 0.5632758524439606, 0.5775413033693316, 0.543871709919719, 0.5564859580795258, 0.527307861315938, 0.5133901054179585, 0.5002319897131252, 0.48921739943291076, 0.4659566583099335, 0.4729762564379667], "accuracy": [0.30458328127861023, 0.4725928008556366, 0.6000528335571289, 0.6761326193809509, 0.7042662501335144, 0.7129837274551392, 0.7408532500267029, 0.7465327978134155, 0.739400327205658, 0.7643640041351318, 0.7691190242767334, 0.7824593782424927, 0.7783648371696472, 0.7936864495277405, 0.789459764957428, 0.8068947196006775, 0.8059701323509216, 0.8109893202781677, 0.8170651197433472, 0.8240655064582825, 0.824329674243927], "val_loss": [1.5724093232836043, 1.024393013545445, 0.7395600080490112, 0.617748464856829, 0.6295428616659982, 0.5420195375170026, 0.5743176766804287, 0.5403476102011544, 0.48287216254643034, 0.46988684790475027, 0.4666882412774222, 0.4587703602654593, 0.4465382269450596, 0.4478015388761248, 0.458808285849435, 0.412293587412153, 0.42655532700674875, 0.45544958114624023, 0.44096039874213083, 0.39851648466927664, 0.42263587032045635], "val_accuracy": [0.4449999928474426, 0.550000011920929, 0.6636666655540466, 0.7183333039283752, 0.7059999704360962, 0.7536666393280029, 0.7129999995231628, 0.7350000143051147, 0.7820000052452087, 0.7803333401679993, 0.7943333387374878, 0.7996666431427002, 0.796999990940094, 0.7870000004768372, 0.7993333339691162, 0.8186666369438171, 0.815666675567627, 0.7946666479110718, 0.8080000281333923, 0.8183333277702332, 0.8166666626930237]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 2, 4, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [3, 3, 3, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [67, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [8, 57]], "fitness": -0.3565714359283447, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3024205147487895, 2.3009368260113665, 2.301648340992341, 2.3024712117466835, 2.3006490608011774, 2.3001747087260216, 2.2991106729969735, 2.300348530450533, 2.29870278072269, 2.297966518800146, 2.2979510621844406, 2.2987486782043742, 2.296078774781354, 2.2960560808974075, 2.296618857766029, 2.296201270285725, 2.2962054885720153, 2.295556099785475, 2.295460614829315, 2.2953632013625502, 2.2935494067819757, 2.2943272165823227, 2.292759353867958, 2.2921105550973326, 2.2907540291811515, 2.289607784735796, 2.2905274742488233, 2.2895498972653305, 2.289441557891648, 2.2882236177580246, 2.289345527258941, 2.2881809156080513, 2.288593448463322, 2.2867496489785712, 2.286234106354316, 2.286728364097727, 2.2850073293341526, 2.285590943564608, 2.284534856738069, 2.2843744156461714, 2.2837861184163133, 2.2826965019892174, 2.2834317761326606, 2.2809394486371506, 2.2804383687087495, 2.2821243302760075, 2.280395064166886, 2.2803028143470976, 2.2799319042867876, 2.2787421370667396, 2.2787346807469024, 2.2773796398216755, 2.277336722462011, 2.2780832907369724, 2.277115524374121, 2.2770122605670067, 2.2761402381740274, 2.276364779695937, 2.2733615441108816, 2.2733654518956286, 2.273915110955763, 2.274464314970531, 2.275667169169349, 2.2719420548427562, 2.273437380900929, 2.2718518389025544, 2.27114487491059, 2.271597822974339, 2.26913767348443, 2.2679725036235645, 2.269774268883063, 2.2681327702866536, 2.267975815377609, 2.268295108744528, 2.267796274945248, 2.2688397178088104, 2.2672103863382196, 2.2653835173437953, 2.265017050069321, 2.265273589153237, 2.2640282806703333, 2.2633543301094727, 2.264380411370524, 2.2633353811386727, 2.260747626032166, 2.2608130999433995, 2.260690310659221, 2.260920135651471, 2.2609914127924755, 2.260685240446128, 2.2598005379699617, 2.256390140702491, 2.257873717678253, 2.259321598974532, 2.257835011172997, 2.2575303018368658, 2.255689529584714, 2.2557000144912647, 2.2550463567178767, 2.2527059324665344], "accuracy": [0.08545766770839691, 0.09694888442754745, 0.09060890227556229, 0.09047681838274002, 0.09377889335155487, 0.09430722147226334, 0.1010434553027153, 0.09774138033390045, 0.10091137140989304, 0.10434553027153015, 0.1002509593963623, 0.09787346422672272, 0.108440101146698, 0.10936468094587326, 0.10685510188341141, 0.10394927859306335, 0.10487385839223862, 0.10830801725387573, 0.10936468094587326, 0.11227050423622131, 0.11213842034339905, 0.11108175665140152, 0.11676132678985596, 0.11808215826749802, 0.11702549457550049, 0.12481838464736938, 0.12191256135702133, 0.12534672021865845, 0.1216483935713768, 0.12957337498664856, 0.12138422578573227, 0.13181878626346588, 0.1228371411561966, 0.13142253458499908, 0.1320829540491104, 0.13195087015628815, 0.13551710546016693, 0.13010171055793762, 0.13736626505851746, 0.13274335861206055, 0.13221503794193268, 0.137630432844162, 0.1398758441209793, 0.14529123902320862, 0.14832915365695953, 0.1410645842552185, 0.1438383311033249, 0.1500462293624878, 0.14872540533542633, 0.1492537260055542, 0.148064985871315, 0.15757495164871216, 0.1550653874874115, 0.14832915365695953, 0.160084530711174, 0.15519747138023376, 0.15731078386306763, 0.15942411124706268, 0.16497160494327545, 0.16431118547916412, 0.16061286628246307, 0.16431118547916412, 0.16563200950622559, 0.1694624274969101, 0.16140536963939667, 0.17210407555103302, 0.17276449501514435, 0.17817988991737366, 0.1784440577030182, 0.18518029153347015, 0.18240654468536377, 0.18002906441688538, 0.18319904804229736, 0.1728965789079666, 0.1842557191848755, 0.17870822548866272, 0.18438778817653656, 0.18438778817653656, 0.18901069462299347, 0.1868973672389984, 0.19072777032852173, 0.19218069314956665, 0.1942940205335617, 0.1954827606678009, 0.19838859140872955, 0.20459648966789246, 0.19614318013191223, 0.20221899449825287, 0.20274733006954193, 0.1938977688550949, 0.19680359959602356, 0.21133272349834442, 0.20538897812366486, 0.20116232335567474, 0.20472857356071472, 0.20472857356071472, 0.2056531459093094, 0.21159687638282776, 0.21661603450775146, 0.22005018591880798], "val_loss": [1.9707869802202498, 1.9703435897827148, 1.969902447291783, 1.9694622584751673, 1.9690205029078893, 1.9685805865696497, 1.9681356975010462, 1.9676940100533622, 1.9672491209847587, 1.9668049812316895, 1.9663671084812708, 1.9659299169267928, 1.9654912948608398, 1.9650541714259557, 1.9646165030343192, 1.9641776084899902, 1.9637396676199776, 1.9633057458060128, 1.96287202835083, 1.9624381746564592, 1.9620018686567033, 1.9615686280386788, 1.9611312321254186, 1.9606988770621163, 1.9602629116603307, 1.959822722843715, 1.9593912533351354, 1.9589530399867467, 1.9585181644984655, 1.9580832890101842, 1.9576456206185477, 1.9572081565856934, 1.9567714418683733, 1.9563331604003906, 1.9558888844081335, 1.955451284136091, 1.9550093242100306, 1.9545716558183943, 1.954134396144322, 1.95369291305542, 1.9532598767961775, 1.9528162138802665, 1.9523797716413225, 1.951939242226737, 1.9514984403337752, 1.9510587283543177, 1.9506186076572962, 1.9501759665352958, 1.9497325079781669, 1.9492864608764648, 1.9488466126578194, 1.9484047208513533, 1.9479639870779855, 1.9475246156964983, 1.9470774786812919, 1.9466332026890345, 1.946187904902867, 1.9457440376281738, 1.9452897480555944, 1.9448392731802804, 1.944387776511056, 1.943939549582345, 1.943493230002267, 1.9430333546229772, 1.9425858088902064, 1.9421308381216866, 1.9416786602565221, 1.941229956490653, 1.940774645124163, 1.9403083665030343, 1.9398534638541085, 1.939394133431571, 1.9389404569353377, 1.938483374459403, 1.9380241121564592, 1.9375639642987932, 1.9371043613978796, 1.9366391726902552, 1.936173439025879, 1.9357070241655623, 1.9352380207606725, 1.9347711290631975, 1.9343010357448034, 1.9338345527648926, 1.9333620071411133, 1.9328876222882951, 1.9324133736746651, 1.9319398062569755, 1.9314606530325753, 1.9309793199811662, 1.9305012566702706, 1.930018629346575, 1.9295338221958704, 1.9290516035897392, 1.9285629817417689, 1.9280764034816198, 1.9275856699262346, 1.9270927565438407, 1.926596028464181, 1.926093373979841], "val_accuracy": [0.043666668236255646, 0.04600000008940697, 0.049666665494441986, 0.05166666582226753, 0.05400000140070915, 0.0573333315551281, 0.05966666713356972, 0.061666667461395264, 0.06266666948795319, 0.06466666609048843, 0.06566666811704636, 0.07066666334867477, 0.0729999989271164, 0.07599999755620956, 0.08033332973718643, 0.08399999886751175, 0.08699999749660492, 0.09000000357627869, 0.09166666865348816, 0.09433333575725555, 0.09566666930913925, 0.09966666996479034, 0.10300000011920929, 0.10833333432674408, 0.11166666448116302, 0.11766666918992996, 0.12133333086967468, 0.12399999797344208, 0.12800000607967377, 0.13066667318344116, 0.13433332741260529, 0.1393333375453949, 0.14300000667572021, 0.14800000190734863, 0.1509999930858612, 0.15399999916553497, 0.1576666682958603, 0.1616666615009308, 0.16466666758060455, 0.16866666078567505, 0.1756666600704193, 0.18000000715255737, 0.18299999833106995, 0.18833333253860474, 0.19200000166893005, 0.19699999690055847, 0.20100000500679016, 0.2043333351612091, 0.20999999344348907, 0.21299999952316284, 0.21966665983200073, 0.22366666793823242, 0.2280000001192093, 0.22966666519641876, 0.23399999737739563, 0.23600000143051147, 0.23800000548362732, 0.24033333361148834, 0.2446666657924652, 0.24899999797344208, 0.25200000405311584, 0.2549999952316284, 0.26100000739097595, 0.265666663646698, 0.27033331990242004, 0.27300000190734863, 0.2773333191871643, 0.2809999883174896, 0.2853333353996277, 0.2863333225250244, 0.2916666567325592, 0.2933333218097687, 0.29633334279060364, 0.2980000078678131, 0.2996666729450226, 0.3016666769981384, 0.30399999022483826, 0.3063333332538605, 0.3086666762828827, 0.3109999895095825, 0.3163333237171173, 0.31933334469795227, 0.3216666579246521, 0.3243333399295807, 0.3256666660308838, 0.3269999921321869, 0.3283333480358124, 0.3306666612625122, 0.3343333303928375, 0.33633333444595337, 0.3383333384990692, 0.3396666646003723, 0.34066668152809143, 0.34200000762939453, 0.34333333373069763, 0.34566667675971985, 0.34966665506362915, 0.35100001096725464, 0.351666659116745, 0.35366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [9, 2, 6, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [2, 3, 3, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [98, 31, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.2619999945163727, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.38028156444019, 3.4311270222231194, 2.3019382726593483, 2.3012865069299533, 2.316291146762713, 2.306466440624801], "accuracy": [0.21278563141822815, 0.12019548565149307, 0.11768590658903122, 0.10606260597705841, 0.18650111556053162, 0.10421344637870789], "val_loss": [4.596225466047015, 1.9505531447274345, 1.974069050380162, 1.9612678119114466, 1.9805927957807268, 1.974698202950614], "val_accuracy": [0.2613333463668823, 0.25699999928474426, 0.10533333569765091, 0.10400000214576721, 0.09799999743700027, 0.16300000250339508]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [9, 2, 6, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [2, 3, 3, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [36, 31, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 4, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.pow(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 0, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [3, 3, 3, 3, 3, 3, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07515519857406616, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [9, 2, 6, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [2, 3, 3, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [67, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 6, 3, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.05758816376328468, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [9, 2, 6, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [2, 3, 3, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0, 6], [88, 44], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [2, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 8, 4, 4, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.multiply(tf.math.square(tf.math.pow(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), beta))", "other_info": {"loss": [1250753068.3108041, 24002476378.51803, 111762176686.81442, 311279886397.67535, 663275104037.7018, 1233629928549.034], "accuracy": [0.09866596013307571, 0.10210011899471283, 0.09615638852119446, 0.09906221181154251, 0.10117553919553757, 0.09853387624025345], "val_loss": [4798440301.714286, 38447307629.71429, 129987809865.14285, 308672968411.4286, 603979251712.0, 1045587034112.0], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 0, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [3, 3, 3, 3, 3, 3, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [9, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.303445257420679, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09708096832036972, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 0, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [2, 3, 3, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [6.488019963265599, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.18359529972076416, 0.10632677376270294, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [20744.515066964286, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09733333438634872, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 2, 4, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [4, 3, 3, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 5, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07515519857406616, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 6, 4, 1, 1, 0, 8, 8, 6, 9, 6, 8, 9], [3, 3, 4, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 9, 4, 2, 1, 2, 3], [2, 0, 1, 2, 3, 3, 2], [19, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 10, 5, 1, 1, 1, 0, 1, 0, 4, 3, 1, 1], "tree_depth": 31, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.subtract(tf.math.subtract(tf.math.negative(tf.math.add(beta, tf.math.sqrt(tf.math.sqrt(tf.math.divide_no_nan(grad, tf.math.add(beta, grad)))))), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 0, 1, 3, 2, 8, 8, 6, 5, 1, 8, 9, 6, 5], [3, 3, 3, 3, 0, 3, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [2, 3, 5, 4, 2, 1, 2, 3], [1, 2, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 22, 22, 15, 7, 3, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 37, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.negative(tf.math.subtract(tf.math.multiply(tf.math.add(tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(tf.math.subtract(grad, tf.math.add(beta, grad))), tf.math.sqrt(tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))))))), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, tf.math.square(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))), grad)), tf.math.add(beta, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, tf.math.multiply(beta, tf.math.square(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [9, 2, 6, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [3, 3, 3, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [36, 31, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07515519857406616, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 0, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [3, 3, 3, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 1, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [47, 57, 87]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 8, 5, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.negative(tf.math.subtract(grad, grad)), tf.math.multiply(tf.math.add(tf.math.add(beta, grad), grad), tf.math.sqrt(tf.math.sqrt(tf.math.add(beta, grad))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302619086878883, 2.301614194041655, 2.302794055884556, 2.3040989321992225, 2.302765488356899, 2.302768668163533], "accuracy": [0.08479725569486618, 0.09576013684272766, 0.08849557489156723, 0.0866464152932167, 0.09008057415485382, 0.08968432247638702], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 0, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [2, 3, 3, 3, 3, 3, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0, 2], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 6, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 7, 6, 3, 3, 1, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.sqrt(beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302619086878883, 2.301614194041655, 2.302794055884556, 2.3040989321992225, 2.302765488356899, 2.302768668163533], "accuracy": [0.08479725569486618, 0.09576013684272766, 0.08849557489156723, 0.0866464152932167, 0.09008057415485382, 0.08968432247638702], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 0, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [3, 3, 3, 3, 3, 3, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302619086878883, 2.301614194041655, 2.302794055884556, 2.3040989321992225, 2.302765488356899, 2.302768668163533], "accuracy": [0.08479725569486618, 0.09576013684272766, 0.08849557489156723, 0.0866464152932167, 0.09008057415485382, 0.08968432247638702], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]