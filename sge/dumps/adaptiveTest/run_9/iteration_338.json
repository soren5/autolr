[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 4, 4, 0, 2, 8, 9, 6, 9, 6, 8, 9], [1, 3, 1, 4, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [76, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8399999737739563, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 4, 5, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(alpha, tf.math.add(beta, tf.math.pow(grad, alpha))), tf.math.pow(grad, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1830201684649215, 1.8393173085196206, 1.4158720451339109, 1.0834431004577765, 0.9414841227874056, 0.8549232159024925, 0.7853585489516434, 0.7280652423765304, 0.6773604312907939, 0.7269937620580534, 0.6426560760741031, 0.661864708215018, 0.6180397156223, 0.5888574771153031, 0.5824067483740617, 0.5731581304413752, 0.5460788661604465, 0.545252698980318, 0.5356081167484208, 0.5139389130512108, 0.5302426278347101, 0.5046611100675376, 0.4865361786379932, 0.4931457158738533, 0.4773971540438831, 0.48366554298137615, 0.44649452823280045, 0.46493379035016186, 0.432150748293744, 0.4412648379960159, 0.4229357001914041, 0.4290137819807055, 0.4448349782780035, 0.40577258087971174, 0.3949157760293177, 0.40280180855386877, 0.3828801731541487, 0.3930328329320219, 0.3843846255329071, 0.378273419775054, 0.3653030817526962, 0.3626346902297142, 0.37223174009167553, 0.35575392439601256, 0.36426427763183244], "accuracy": [0.27658170461654663, 0.4155329465866089, 0.5205389261245728, 0.6100911498069763, 0.6565843224525452, 0.6885483860969543, 0.7045304179191589, 0.7246070504188538, 0.7448157668113708, 0.7275128960609436, 0.7584202885627747, 0.7581561207771301, 0.7642319202423096, 0.7800818681716919, 0.7774402499198914, 0.7849689722061157, 0.7936864495277405, 0.7915731072425842, 0.8031964302062988, 0.8138951063156128, 0.8030643463134766, 0.8128384351730347, 0.8201030492782593, 0.8214238286018372, 0.8230088353157043, 0.8265751004219055, 0.8341038227081299, 0.8301413059234619, 0.8393871188163757, 0.8363492488861084, 0.8455950617790222, 0.839519202709198, 0.8339717388153076, 0.8490291833877563, 0.8549728989601135, 0.8510104417800903, 0.8576145768165588, 0.8532558679580688, 0.8544445633888245, 0.8541803956031799, 0.8656716346740723, 0.8646149635314941, 0.8585391640663147, 0.8698983192443848, 0.8643507957458496], "val_loss": [1.6820805072784424, 0.9616445132664272, 0.8750252723693848, 0.7373165913990566, 0.688254884311131, 0.6300136361803327, 0.6620405231203351, 0.6049228055136544, 0.5693639176232475, 0.5219706126621791, 0.49782771723611013, 0.507140942982265, 0.5132422276905605, 0.5497096266065326, 0.4628324168069022, 0.4808821678161621, 0.5046448877879551, 0.4658560241971697, 0.4370343344552176, 0.48441292558397564, 0.48790230069841656, 0.4385744844164167, 0.41298999956675936, 0.43155176298958914, 0.40076994044440134, 0.4151670677321298, 0.40124575580869404, 0.38725325039454866, 0.4521261623927525, 0.3801361152103969, 0.3847983649798802, 0.3806653107915606, 0.37064337730407715, 0.3945017457008362, 0.4055091994149344, 0.3496671233858381, 0.3633477943284171, 0.3443023221833365, 0.34410347257341656, 0.35197177103587557, 0.347521219934736, 0.3490157553127834, 0.3423316052981785, 0.37472857747759136, 0.3527059725352696], "val_accuracy": [0.39766666293144226, 0.5873333215713501, 0.6439999938011169, 0.7080000042915344, 0.703000009059906, 0.7243333458900452, 0.6896666884422302, 0.7296666502952576, 0.7323333621025085, 0.7753333449363708, 0.7793333530426025, 0.7670000195503235, 0.7543333172798157, 0.7609999775886536, 0.7929999828338623, 0.7886666655540466, 0.7633333206176758, 0.7963333129882812, 0.8116666674613953, 0.765999972820282, 0.7746666669845581, 0.8033333420753479, 0.8196666836738586, 0.8069999814033508, 0.8266666531562805, 0.8153333067893982, 0.8236666917800903, 0.8320000171661377, 0.8023333549499512, 0.8399999737739563, 0.8336666822433472, 0.8353333473205566, 0.8416666388511658, 0.8273333311080933, 0.8216666579246521, 0.8489999771118164, 0.8393333554267883, 0.8529999852180481, 0.8506666421890259, 0.8550000190734863, 0.8503333330154419, 0.8510000109672546, 0.8506666421890259, 0.8296666741371155, 0.8463333249092102]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 2, 4, 4, 0, 2, 8, 9, 6, 9, 6, 8, 9], [5, 3, 1, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [76, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0, 6], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.836571455001831, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.pow(grad, tf.math.pow(tf.math.add(beta, tf.math.negative(alpha)), tf.math.add(beta, grad)))))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1829998201902563, 1.839735086111266, 1.4243975244792162, 1.1210028086560766, 1.068317307079347, 0.8335804009418667, 0.7993916985129227, 0.7521407971324198, 0.6911685204918453, 0.7502724268432968, 0.675183311579108, 0.6511084250707228, 0.6273639538599562, 0.605421899308492, 0.5815867144969225, 0.5673191811524803, 0.5499929624022022, 0.5755677943641578, 0.5554034303932331, 0.5118548833005984, 0.5251196022708229, 0.510530036505203, 0.4886715856320854, 0.47285370552906697, 0.4717661530358082, 0.5010817961103298, 0.442449099714289, 0.46562335295857316], "accuracy": [0.27684587240219116, 0.41526877880096436, 0.5202747583389282, 0.5968828201293945, 0.6089023947715759, 0.691850483417511, 0.7020208835601807, 0.7120591998100281, 0.7445515990257263, 0.7112666964530945, 0.7396644949913025, 0.7520803213119507, 0.7607977986335754, 0.7648923397064209, 0.7790252566337585, 0.7913089394569397, 0.7946110367774963, 0.785101056098938, 0.7891955971717834, 0.8121780753135681, 0.8012151718139648, 0.8127063512802124, 0.8204993009567261, 0.8271034359931946, 0.8253863453865051, 0.8157442808151245, 0.8350284099578857, 0.8302733898162842], "val_loss": [1.6817162036895752, 0.9731435775756836, 0.8870553629738944, 0.9097844873155866, 0.6707330771854946, 0.6447864770889282, 0.6449539831706456, 0.5787218809127808, 0.5627609661647252, 0.5378328561782837, 0.5528111457824707, 0.5196710484368461, 0.5221019983291626, 0.4697591577257429, 0.45553907326289583, 0.4747304746082851, 0.48067535672869, 0.47526299953460693, 0.4314739193235125, 0.4738825559616089, 0.4794297388621739, 0.4148711477007185, 0.39798152446746826, 0.43133297988346647, 0.41076373202460154, 0.40047941889081684, 0.44513111455099924, 0.39687624147960116], "val_accuracy": [0.39800000190734863, 0.581333339214325, 0.6413333415985107, 0.5933333039283752, 0.7253333330154419, 0.7049999833106995, 0.7116666436195374, 0.7513333559036255, 0.737333357334137, 0.7646666765213013, 0.7476666569709778, 0.7673333287239075, 0.7516666650772095, 0.793666660785675, 0.7990000247955322, 0.7886666655540466, 0.7916666865348816, 0.7946666479110718, 0.8209999799728394, 0.7826666831970215, 0.7829999923706055, 0.8199999928474426, 0.8309999704360962, 0.8050000071525574, 0.8236666917800903, 0.8246666789054871, 0.8080000281333923, 0.8273333311080933]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 0, 4, 4, 3, 2, 8, 9, 6, 9, 6, 8, 9], [5, 3, 1, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [76, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0, 6], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8122857213020325, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1829973859652205, 1.8388036013814704, 1.3697793017666904, 1.0246224240651456, 1.0005363570055108, 0.9445293460303545, 0.8164538749850516, 0.7407637111278746, 0.7145648891065162, 0.6924591542801852, 0.714505164095156, 0.6541477356761942, 0.6485944213789719, 0.6030557323377587, 0.5683698359969868, 0.5586494947578834, 0.5741993685077919, 0.5494298965797731, 0.5280217788931464], "accuracy": [0.27684587240219116, 0.4142121374607086, 0.5247655510902405, 0.6269977688789368, 0.6376964449882507, 0.6593580842018127, 0.6980583667755127, 0.722229540348053, 0.7304186820983887, 0.7367587089538574, 0.7288337349891663, 0.7592127919197083, 0.7569673657417297, 0.7650244235992432, 0.7852331399917603, 0.7976489067077637, 0.7827235460281372, 0.7924976944923401, 0.8063663840293884], "val_loss": [1.6817210061209542, 0.9602000713348389, 0.8024212803159442, 0.9828476565224784, 0.7237122740064349, 0.6037153857094901, 0.5872091395514352, 0.6300272260393415, 0.6232174805232457, 0.5809676987784249, 0.5123412438801357, 0.5642128671918597, 0.5020076547350202, 0.4699411221912929, 0.47523084708622526, 0.49029650006975445, 0.48143087114606586, 0.4677990674972534, 0.4514079434531076], "val_accuracy": [0.39800000190734863, 0.590666651725769, 0.671999990940094, 0.6056666374206543, 0.7013333439826965, 0.7519999742507935, 0.7459999918937683, 0.7176666855812073, 0.7319999933242798, 0.7336666584014893, 0.778333306312561, 0.7523333430290222, 0.7646666765213013, 0.7993333339691162, 0.7933333516120911, 0.7680000066757202, 0.7829999923706055, 0.7950000166893005, 0.7940000295639038]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 2, 4, 4, 3, 2, 8, 9, 6, 9, 6, 8, 9], [0, 3, 1, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [77, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0, 6], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [6, 57]], "fitness": -0.2734285593032837, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 9, 7, 4, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32)), tf.math.pow(grad, tf.math.pow(tf.math.add(beta, tf.math.multiply(alpha, tf.math.add(beta, tf.math.add(grad, tf.math.sqrt(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(beta, grad))))), tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.71677118e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(1.52547986e-04, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3017309962199457, 2.30230636550073, 2.3027085367368274, 2.3017579540521744, 2.3015231502967786, 2.30023417389703, 2.3022146626801114, 2.299162043210081, 2.298801741721592, 2.3000547271504805, 2.29888812495166, 2.2995165334700784, 2.298936209611259, 2.299710595140116, 2.2994134490358644, 2.296338015291685, 2.297087165862499, 2.297795714608997, 2.2965534175187052, 2.2957287355263505, 2.2945492397036773, 2.2967949192899644, 2.2949468825613235, 2.2948873406466777, 2.2946458354428962, 2.2950770397385303, 2.2945617319743676, 2.2943142867122956, 2.293060422589231, 2.293396935156229, 2.2942139488941233, 2.292456790236056, 2.292424955104777, 2.293123888002647, 2.291532001443716, 2.291465856836551, 2.290599837231992, 2.2901195749520404, 2.290181882944184, 2.2900251746728766, 2.2902363708321256, 2.28967388371246, 2.2906621566553786, 2.2909443637934563, 2.2897609285690437, 2.288989390742431, 2.2874270745114784, 2.2873588707059396, 2.2865860436680987, 2.288857891291612, 2.287215199185211, 2.284893996837416, 2.2857408821779615, 2.2867412143899246, 2.2843677661579833, 2.285379003461294, 2.284320672835971, 2.2840378032526116, 2.282639846636745, 2.2852348613701223, 2.2834863213027834, 2.2848037069877694, 2.2836398210476387, 2.282433735995229, 2.28194259280904, 2.283249008090284, 2.282935007042684, 2.281170416312872, 2.2813744548132013, 2.2819265206067034, 2.280360064533613, 2.2790111658390817, 2.280101300734476, 2.277647220290112, 2.2791229732567846, 2.278052003266175, 2.2788543624648674, 2.279527403533325, 2.2786468740593504, 2.2773778273240213, 2.2771096616892876, 2.278022168665483, 2.2775774997506617, 2.27782956843111, 2.2760119197579924, 2.277435463653532, 2.2758032795995877, 2.27600148193053, 2.2759203099933645, 2.2731193181719243, 2.274271138229894, 2.274526187221309, 2.274276291201411, 2.2728932194816216, 2.273593503974448, 2.2718326641410775, 2.2729501918857724, 2.272528200227634, 2.273954226246064, 2.271107792303216], "accuracy": [0.09126931428909302, 0.0952318087220192, 0.09285431355237961, 0.09351472556591034, 0.09245806187391281, 0.09813763201236725, 0.09338264167308807, 0.09800554811954498, 0.09972262382507324, 0.09087307006120682, 0.10011887550354004, 0.09655263274908066, 0.09589222073554993, 0.09813763201236725, 0.1022322028875351, 0.11134592443704605, 0.10606260597705841, 0.09919429570436478, 0.10077928751707077, 0.10672302544116974, 0.11438383162021637, 0.11174217611551285, 0.1080438494682312, 0.10791176557540894, 0.10989301651716232, 0.11028926074504852, 0.11028926074504852, 0.1142517477273941, 0.11781799048185349, 0.11174217611551285, 0.11174217611551285, 0.11108175665140152, 0.11134592443704605, 0.11081759631633759, 0.11689341068267822, 0.12019548565149307, 0.12349755316972733, 0.12019548565149307, 0.12468630075454712, 0.12270505726337433, 0.11491216719150543, 0.11821424216032028, 0.12600713968276978, 0.11927089840173721, 0.11900673806667328, 0.12891295552253723, 0.12679962813854218, 0.1282525360584259, 0.12759213149547577, 0.12891295552253723, 0.12970545887947083, 0.13512085378170013, 0.1364416927099228, 0.13089419901371002, 0.13697001338005066, 0.1306300312280655, 0.13657376170158386, 0.13578127324581146, 0.14198917150497437, 0.13789460062980652, 0.14053626358509064, 0.13591335713863373, 0.14251750707626343, 0.14780081808567047, 0.149649977684021, 0.14674416184425354, 0.14251750707626343, 0.1476687341928482, 0.14634791016578674, 0.14198917150497437, 0.14317791163921356, 0.15189538896083832, 0.1484612375497818, 0.1578391194343567, 0.1558578759431839, 0.1516312211751938, 0.1558578759431839, 0.1566503793001175, 0.15955619513988495, 0.1550653874874115, 0.15717871487140656, 0.15242372453212738, 0.15281997621059418, 0.1554616242647171, 0.1612732857465744, 0.15731078386306763, 0.15915995836257935, 0.16074495017528534, 0.1624620258808136, 0.16893409192562103, 0.16695284843444824, 0.16312244534492493, 0.16483952105045319, 0.16523577272891998, 0.16034869849681854, 0.16695284843444824, 0.16682076454162598, 0.1640470176935196, 0.16391493380069733, 0.17223615944385529], "val_loss": [1.9709339823041643, 1.970635005405971, 1.9703367097037179, 1.9700425011771066, 1.969743319920131, 1.9694432531084334, 1.9691510881696428, 1.968853201184954, 1.968560014452253, 1.9682657378060477, 1.9679740497044154, 1.967679159981864, 1.9673840659005302, 1.9670894486563546, 1.9667942864554269, 1.9665015765598841, 1.9662083217075892, 1.9659176553998674, 1.9656218120029993, 1.9653301239013672, 1.965036460331508, 1.9647464071001326, 1.9644558089120048, 1.9641593524387904, 1.963865007672991, 1.96357148034232, 1.9632808821541923, 1.9629872185843331, 1.9626970291137695, 1.9624066352844238, 1.9621178082057409, 1.9618277549743652, 1.9615376336233956, 1.961252212524414, 1.9609594345092773, 1.9606660434177943, 1.9603707449776786, 1.9600795337132044, 1.9597887992858887, 1.9594998359680176, 1.9592102595738001, 1.9589214324951172, 1.9586296762738908, 1.9583380562918526, 1.9580473899841309, 1.9577574729919434, 1.9574634007045202, 1.9571708951677596, 1.9568790708269392, 1.9565870421273368, 1.9562996455601283, 1.9560084342956543, 1.9557179042271204, 1.9554259436471122, 1.9551328250340052, 1.9548405238560267, 1.9545491082327706, 1.954258714403425, 1.9539646421160017, 1.9536704335893904, 1.953376088823591, 1.953085150037493, 1.9527935981750488, 1.952500888279506, 1.9522057260785783, 1.9519156047276087, 1.9516257558550154, 1.951331683567592, 1.9510374069213867, 1.9507421084812708, 1.9504482405526298, 1.9501502854483468, 1.9498557363237654, 1.9495598929268974, 1.9492640495300293, 1.9489666393824987, 1.9486703191484724, 1.948375906263079, 1.948082447052002, 1.9477874892098563, 1.947493280683245, 1.947197641645159, 1.9469008445739746, 1.9466027532305037, 1.94630765914917, 1.9460111345563615, 1.9457159723554338, 1.945420265197754, 1.9451257841927665, 1.9448254449026925, 1.9445263317653112, 1.9442261968340193, 1.9439295360020228, 1.943631649017334, 1.9433319228036063, 1.9430297442844935, 1.942727838243757, 1.9424247741699219, 1.9421229362487793, 1.9418204171316964], "val_accuracy": [0.0416666679084301, 0.044333335012197495, 0.04600000008940697, 0.04800000041723251, 0.050999999046325684, 0.05233333259820938, 0.0533333346247673, 0.054999999701976776, 0.0573333315551281, 0.05833333358168602, 0.06133333221077919, 0.061666667461395264, 0.06266666948795319, 0.06366666406393051, 0.06466666609048843, 0.06499999761581421, 0.06666667014360428, 0.07000000029802322, 0.07233333587646484, 0.07333333045244217, 0.07599999755620956, 0.07833333313465118, 0.08133333176374435, 0.0846666693687439, 0.08633333444595337, 0.08833333104848862, 0.09000000357627869, 0.09166666865348816, 0.09300000220537186, 0.09433333575725555, 0.09600000083446503, 0.0976666659116745, 0.10000000149011612, 0.10233332961797714, 0.10566666722297668, 0.10899999737739563, 0.11100000143051147, 0.11533333361148834, 0.11766666918992996, 0.12066666781902313, 0.12200000137090683, 0.12399999797344208, 0.12700000405311584, 0.12933333218097687, 0.1326666623353958, 0.13500000536441803, 0.13699999451637268, 0.13899999856948853, 0.14166666567325592, 0.14633333683013916, 0.14766666293144226, 0.1496666669845581, 0.15166667103767395, 0.1536666601896286, 0.15733332931995392, 0.15933333337306976, 0.1616666615009308, 0.16433332860469818, 0.16766667366027832, 0.17033334076404572, 0.17499999701976776, 0.1770000010728836, 0.18033333122730255, 0.18299999833106995, 0.18433333933353424, 0.18766666948795319, 0.19099999964237213, 0.195333331823349, 0.19733333587646484, 0.20000000298023224, 0.20366667211055756, 0.20600000023841858, 0.20933333039283752, 0.21199999749660492, 0.2160000056028366, 0.21899999678134918, 0.2213333398103714, 0.22466666996479034, 0.22766666114330292, 0.22966666519641876, 0.23133333027362823, 0.23399999737739563, 0.23399999737739563, 0.23533333837985992, 0.23733332753181458, 0.23933333158493042, 0.24300000071525574, 0.24566666781902313, 0.24799999594688416, 0.25033333897590637, 0.2526666522026062, 0.2553333342075348, 0.25866666436195374, 0.2616666555404663, 0.26499998569488525, 0.26766666769981384, 0.27166667580604553, 0.2736666798591614, 0.27566665410995483, 0.2776666581630707]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 9, 4, 4, 3, 2, 8, 9, 6, 9, 6, 8, 9], [4, 4, 1, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [16, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 6, 0], [88, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 5, 2, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [86, 57]], "fitness": -0.1397142857313156, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 2, 0, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.376233192278079, 3.0718818772124137, 2.3068703527479535, 2.3038161871313907, 2.3031136891026587, 2.3029072505450596], "accuracy": [0.17157575488090515, 0.18359529972076416, 0.09998679161071777, 0.09549596905708313, 0.09457138925790787, 0.0944393053650856], "val_loss": [1.969332013811384, 1.979764461517334, 1.9747180938720703, 1.9738432339259557, 1.9736442565917969, 1.9735473224094935], "val_accuracy": [0.09866666793823242, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665, 0.09833333641290665]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [6, 1, 4, 4, 0, 2, 8, 9, 6, 9, 6, 8, 9], [1, 3, 0, 4, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [76, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.11485714465379715, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 4, 5, 1, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.math.subtract(tf.math.pow(tf.math.add(beta, alpha), grad), tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.pow(grad, tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [4.381539377506777, 2.328683507409409, 2.3441235675567396, 2.323544830552276, 2.272855372775925, 2.292635038622996, 2.3004379411021465], "accuracy": [0.17223615944385529, 0.13247919082641602, 0.1896711140871048, 0.13895125687122345, 0.13815876841545105, 0.12257297337055206, 0.10328886657953262], "val_loss": [2.022296905517578, 1.7658889634268624, 1.821695327758789, 1.8782315935407365, 1.9623294557843889, 1.9684339250837053, 1.9607423373631068], "val_accuracy": [0.10199999809265137, 0.23933333158493042, 0.2160000056028366, 0.1536666601896286, 0.1303333342075348, 0.10000000149011612, 0.11733333021402359]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 9, 1, 5, 3, 2, 8, 9, 6, 9, 6, 8, 9], [1, 3, 1, 4, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [65, 73, 67, 81, 53, 45], [0, 0, 1, 1, 0, 1, 0], [0, 0, 1, 1, 0, 1], [4, 3, 8, 9, 7], [6, 0, 7], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [0, 1, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 5, 3, 2, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.multiply(sigma, sigma)), tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 4, 4, 0, 2, 8, 9, 6, 9, 6, 8, 9], [1, 3, 1, 4, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [76, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0, 2], [88, 44], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 1, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [15, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 7, 6, 3, 3, 1, 7, 4, 3, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.subtract(tf.math.square(alpha), tf.math.pow(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.302412693510911, 2.302584112123523, 2.3025869067318925, 2.302586149152212, 2.302585937752936, 2.3025836758153186], "accuracy": [0.10051512718200684, 0.09721305221319199, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09879804402589798], "val_loss": [1.9736430985586983, 1.9736442565917969, 1.9736462320600237, 1.9736458914620536, 1.97364718573434, 1.9736451421465193], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09833333641290665]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 8, 4, 4, 3, 2, 8, 9, 6, 9, 6, 8, 9], [4, 4, 1, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [76, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0, 6], [88, 44], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.sqrt(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.pow(grad, alpha)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07264561951160431, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 9, 6, 5, 3, 2, 8, 9, 6, 9, 6, 8, 9], [1, 4, 1, 4, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [76, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0, 6], [88, 44], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 8, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 4, 2, 1, 1, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.square(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 9, 8, 5, 3, 2, 8, 9, 6, 9, 6, 8, 9], [2, 3, 1, 4, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [76, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [4, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 4, 4, 3, 1, 1, 1, 1, 0, 1, 0, 6, 3, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 0, 8, 5, 3, 2, 8, 9, 6, 9, 6, 8, 9], [4, 4, 1, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [76, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0, 6], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [2, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 0, 1, 1, 0, 1, 0, 6, 3, 3, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.sqrt(grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.square(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3023057640850615, 2.30244245700486, 2.3024357645944, 2.302427619754709, 2.302446808781622, 2.302473791019398], "accuracy": [0.10500594228506088, 0.10302469879388809, 0.1088363528251648, 0.10460969805717468, 0.10487385839223862, 0.10170386731624603], "val_loss": [1.9736425536019462, 1.973660945892334, 1.9736578123910087, 1.9736708913530623, 1.9736956187656947, 1.9737075396946497], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09799999743700027, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 4, 4, 0, 2, 8, 9, 6, 9, 6, 8, 9], [0, 2, 1, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [30, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0, 7], [88, 44], [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [7, 3, 7, 4, 2, 1, 2, 3, 0, 4, 8, 9, 2, 6, 7], [1, 3, 0, 2, 3, 3, 2, 3, 1, 2, 1, 3], [75, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 8, 5, 2, 7, 6, 3, 3, 1, 27, 15, 12, 2], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.pow(tf.math.pow(tf.math.negative(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.add(beta, alpha))), grad)), tf.math.sqrt(tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(tf.math.add(tf.math.pow(tf.math.add(alpha, tf.math.subtract(sigma, tf.math.add(tf.math.multiply(tf.constant(9.94242714e-01, shape=shape, dtype=tf.float32), beta), sigma))), sigma), tf.math.negative(tf.math.pow(tf.math.sqrt(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(tf.math.divide_no_nan(beta, tf.math.add(sigma, alpha)), beta)))), alpha), sigma)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 9, 4, 5, 3, 2, 8, 9, 6, 9, 6, 8, 9], [0, 2, 1, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [63, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [9, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 2, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(9.38616893e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302411564400073, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09655263274908066, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 8, 4, 0, 2, 8, 9, 6, 9, 6, 8, 9], [3, 3, 1, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [76, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0, 6], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [8, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09655263274908066, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 4, 5, 0, 2, 8, 9, 6, 9, 6, 8, 9], [1, 1, 1, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [76, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [5, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.06628571450710297, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.square(alpha)", "other_info": {"loss": [2.301491068811181, 2.3015206555774768, 2.3015366593498077, 2.3003944329077997, 2.300274563156902, 2.2994122141151694, 2.3016882116894415, 2.299112767213371, 2.299124273436968, 2.2997499170115656, 2.2991156118294946, 2.300109215668243, 2.3000981531847327, 2.3004641432756476, 2.3010846510728307], "accuracy": [0.09153348207473755, 0.09549596905708313, 0.09681680053472519, 0.09734513610601425, 0.09417514503002167, 0.10315678268671036, 0.09245806187391281, 0.09787346422672272, 0.09642054885625839, 0.09972262382507324, 0.10540219396352768, 0.09417514503002167, 0.1010434553027153, 0.09774138033390045, 0.0936468094587326], "val_loss": [1.9705358913966589, 1.9699881417410714, 1.9696970667157854, 1.9695023127964564, 1.9694951602390833, 1.9695415496826172, 1.9695046288626534, 1.969520092010498, 1.9695568765912737, 1.9695613724844796, 1.969628197806222, 1.9697610991341727, 1.9700486319405692, 1.9703162738255091, 1.9705578259059362], "val_accuracy": [0.0430000014603138, 0.049666665494441986, 0.0560000017285347, 0.061000000685453415, 0.06266666948795319, 0.06733333319425583, 0.07133333384990692, 0.07366666942834854, 0.07466666400432587, 0.07566666603088379, 0.07566666603088379, 0.07366666942834854, 0.07266666740179062, 0.07133333384990692, 0.0663333311676979]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 9, 4, 4, 0, 2, 8, 9, 6, 9, 6, 8, 9], [1, 3, 1, 4, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [76, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 5, 3, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.pow(alpha, grad)), tf.math.negative(tf.math.add(beta, alpha)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3018634632011334, 2.3027629004241517, 2.3034892311154134, 2.3028555416144463, 2.302954233144615, 2.3019836069554733], "accuracy": [0.09087307006120682, 0.0936468094587326, 0.09153348207473755, 0.09140139818191528, 0.08875974267721176, 0.0940430611371994], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 9, 4, 5, 3, 2, 8, 9, 6, 9, 6, 8, 9], [0, 2, 1, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [11, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 3, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 2, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(4.18766684e-04, shape=shape, dtype=tf.float32)), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, sigma))", "other_info": {"loss": [2.3018634632011334, 2.3027629004241517, 2.3034892311154134, 2.3028555416144463, 2.302954233144615, 2.3019836069554733], "accuracy": [0.09087307006120682, 0.0936468094587326, 0.09153348207473755, 0.09140139818191528, 0.08875974267721176, 0.0940430611371994], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 9, 4, 4, 3, 2, 8, 9, 6, 9, 6, 8, 9], [4, 4, 1, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [76, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0, 3], [25, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [0, 1, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: alpha, lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), alpha))", "other_info": {"loss": [2.3018634632011334, 2.3027629004241517, 2.3034892311154134, 2.3028555416144463, 2.302954233144615, 2.3019836069554733], "accuracy": [0.09087307006120682, 0.0936468094587326, 0.09153348207473755, 0.09140139818191528, 0.08875974267721176, 0.0940430611371994], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 3, 1, 5, 3, 2, 8, 9, 6, 9, 6, 8, 9], [1, 3, 1, 4, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [30, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0, 6], [88, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [3, 1, 0, 2, 3, 3, 2], [75, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.subtract(alpha, grad), alpha)), tf.math.add(beta, tf.math.square(grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(sigma)", "other_info": {"loss": [2.3018634632011334, 2.3027629004241517, 2.3034892311154134, 2.3028555416144463, 2.302954233144615, 2.3019836069554733], "accuracy": [0.09087307006120682, 0.0936468094587326, 0.09153348207473755, 0.09140139818191528, 0.08875974267721176, 0.0940430611371994], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]