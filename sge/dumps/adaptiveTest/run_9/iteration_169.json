[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1], [0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1], [6, 2, 2, 4, 6, 5, 1, 9], [0, 2, 3, 3, 0, 2, 2], [8, 7, 47], [1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [1, 0, 0, 1, 2, 3], [48, 57]], "fitness": -0.8417142629623413, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0771107140974268, 1.705049520533366, 1.2356723627598845, 0.9758011178254861, 0.8120017485406972, 0.7944037977888001, 0.7061249688631823, 0.7203562698659014, 0.6480380072727211, 0.6082358461849096, 0.6140164315047092, 0.5792323418690811, 0.5923001217237475, 0.5494436640560572, 0.5393242986171379, 0.5158326372714831, 0.5401442077858668, 0.5400829883598617, 0.5005380459520495, 0.47583424629725485, 0.477639687618701, 0.48963938340723806, 0.4551469588308066, 0.4434346130235619, 0.43647385905164027, 0.4804930457577902, 0.4402278892635874, 0.42136342795753934], "accuracy": [0.31686699390411377, 0.4364020526409149, 0.561880886554718, 0.6312243938446045, 0.6903975605964661, 0.6946242451667786, 0.7317395210266113, 0.7243428826332092, 0.752740740776062, 0.7663452625274658, 0.763967752456665, 0.7796856164932251, 0.7761194109916687, 0.7936864495277405, 0.7917051911354065, 0.8041210174560547, 0.7992339134216309, 0.7972526550292969, 0.8055738806724548, 0.8226125836372375, 0.8248580098152161, 0.8149517774581909, 0.83119797706604, 0.8370096683502197, 0.837537944316864, 0.8202351331710815, 0.8343679904937744, 0.8432175517082214], "val_loss": [1.7519946098327637, 1.193901709147862, 0.8298392806734357, 0.6589256865637643, 0.5896320683615548, 0.5667221546173096, 0.6115240199225289, 0.5226946728570121, 0.5115230253764561, 0.505328757422311, 0.5017342397144863, 0.4779810053961618, 0.47805636269705637, 0.49717858859470915, 0.4634968212672642, 0.4858157975333078, 0.43441103185926166, 0.40428985016686575, 0.43860773529325214, 0.3917326586587088, 0.4202472652707781, 0.39899960586002897, 0.3744736058371408, 0.3920762368610927, 0.48284028257642475, 0.3802606633731297, 0.3835749626159668, 0.36467908109937397], "val_accuracy": [0.38733333349227905, 0.46700000762939453, 0.6476666927337646, 0.7046666741371155, 0.7329999804496765, 0.7456666827201843, 0.721666693687439, 0.765666663646698, 0.7636666893959045, 0.7670000195503235, 0.7733333110809326, 0.7833333611488342, 0.7913333177566528, 0.7710000276565552, 0.79666668176651, 0.7973333597183228, 0.8036666512489319, 0.8259999752044678, 0.8096666932106018, 0.8253333568572998, 0.8116666674613953, 0.828000009059906, 0.846666693687439, 0.8320000171661377, 0.7833333611488342, 0.8299999833106995, 0.8213333487510681, 0.8379999995231628]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [6, 2, 2, 2, 6, 2, 1, 9], [0, 2, 3, 0, 3, 2, 2, 1], [54, 7, 47], [1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.834857165813446, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 3, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, grad), tf.math.subtract(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), grad)), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), beta)))), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0767231970541293, 1.6938181799857246, 1.2736139469426369, 0.9445442722584073, 0.8641537394128094, 0.7748221670867996, 0.7182784888801353, 0.7063425747143074, 0.6690932020708366, 0.607421446438589, 0.6082715946984659, 0.591631869196876, 0.5955088691011695, 0.5647941374933053, 0.544080509812431, 0.5386529409213073, 0.5612571444871671, 0.48741239682479603, 0.5474975796470773, 0.47533982633174515, 0.48252562848080294, 0.4750776446104963, 0.45327064844485304, 0.4575642069348759, 0.449528842322059, 0.42066425711739225, 0.418271624991576, 0.446927341538933, 0.4229115543978294, 0.41519241568560705, 0.3976573945351438, 0.394568071279071, 0.3902375651522241, 0.37210719848526247, 0.38003806550001124], "accuracy": [0.31686699390411377, 0.4356095492839813, 0.5596354603767395, 0.6293752193450928, 0.6693964004516602, 0.7017567157745361, 0.72672039270401, 0.7252674698829651, 0.741909921169281, 0.7668735980987549, 0.761590301990509, 0.7788931727409363, 0.7781006693840027, 0.7881389260292053, 0.7977809906005859, 0.7960638999938965, 0.7921014428138733, 0.8207634687423706, 0.7950072884559631, 0.8219521641731262, 0.8178576231002808, 0.8252542614936829, 0.8313300609588623, 0.8337075710296631, 0.8322546482086182, 0.8453308939933777, 0.8441421389579773, 0.8341038227081299, 0.844010055065155, 0.8459912538528442, 0.8490291833877563, 0.8569541573524475, 0.8558974862098694, 0.863558292388916, 0.8551049828529358], "val_loss": [1.7504733630589075, 1.2254436356680733, 0.7742219993046352, 0.726321986743382, 0.601309997694833, 0.5815658569335938, 0.5314882142203194, 0.5430775199617658, 0.5183191469737461, 0.4856572321483067, 0.5131716898509434, 0.4731086322239467, 0.5003838198525565, 0.4740962641579764, 0.43405178615025114, 0.4909019810812814, 0.40278773648398264, 0.45067732674734934, 0.41988355772835867, 0.40191493715558735, 0.38959607907703947, 0.4035859874316624, 0.38028541633061, 0.40341250385556904, 0.3655701279640198, 0.39305386372974943, 0.4187585881778172, 0.36286955220358713, 0.37204545736312866, 0.35848298243113924, 0.36507803201675415, 0.37517393486840384, 0.3851697530065264, 0.39337492840630667, 0.34763977357319426], "val_accuracy": [0.3893333375453949, 0.4596666693687439, 0.6456666588783264, 0.6489999890327454, 0.7163333296775818, 0.7300000190734863, 0.762666642665863, 0.7523333430290222, 0.7559999823570251, 0.7736666798591614, 0.768666684627533, 0.7873333096504211, 0.7856666445732117, 0.7879999876022339, 0.8109999895095825, 0.7900000214576721, 0.8223333358764648, 0.7986666560173035, 0.8116666674613953, 0.8153333067893982, 0.8309999704360962, 0.8293333053588867, 0.8383333086967468, 0.8163333535194397, 0.8423333168029785, 0.8263333439826965, 0.8130000233650208, 0.8423333168029785, 0.8386666774749756, 0.843666672706604, 0.8389999866485596, 0.8339999914169312, 0.8256666660308838, 0.8303333520889282, 0.843666672706604]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [2, 1, 2, 2, 6, 9, 1, 9], [0, 2, 3, 0, 0, 2, 2], [43, 99, 47, 61], [0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [3, 0, 0, 1, 2, 3], [48, 57]], "fitness": -0.8311428427696228, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 4, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.subtract(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))))))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0767852716820037, 1.6993530229129623, 1.2284757580188412, 1.0245321257365394, 0.8242933952010083, 0.7393600647286684, 0.7462571445252713, 0.6982391489227576, 0.6469341038539661, 0.5990142808330845, 0.6079735057134481, 0.5848039624130784, 0.6042354329938288, 0.5508440272320909, 0.5432383641236493, 0.5306853535326166, 0.5336342981273882, 0.5257492054171645, 0.5000069118635672, 0.4740259977552822, 0.48328270141899843, 0.488054431601916, 0.45210760294910846, 0.44496877259031, 0.4335649292057437, 0.46174752255629836, 0.4120028016353406, 0.42784385165250566, 0.4257294203603367, 0.4123603714935815, 0.3969822353840252, 0.3976124756214342, 0.39947703007174173], "accuracy": [0.31686699390411377, 0.436930388212204, 0.5699379444122314, 0.6131290197372437, 0.6793025732040405, 0.7108704447746277, 0.7140403985977173, 0.7329282760620117, 0.752740740776062, 0.7700436115264893, 0.7633073329925537, 0.7765156626701355, 0.7696473598480225, 0.7915731072425842, 0.7915731072425842, 0.8004226684570312, 0.8012151718139648, 0.8004226684570312, 0.8099326491355896, 0.8244617581367493, 0.8203672170639038, 0.81548011302948, 0.8309338092803955, 0.834632158279419, 0.837537944316864, 0.8227446675300598, 0.847840428352356, 0.8399154543876648, 0.8397833704948425, 0.848368763923645, 0.8481045961380005, 0.8555012345314026, 0.8496896028518677], "val_loss": [1.751809937613351, 1.1934459890638078, 0.8578707490648542, 0.665433372770037, 0.5978693791798183, 0.633327739579337, 0.6262590374265399, 0.5243237018585205, 0.4999945844922747, 0.4889217955725534, 0.5178922755377633, 0.4692039489746094, 0.44647841794150217, 0.5022133759089878, 0.45943585463932585, 0.46815565654209684, 0.4492049387523106, 0.39971289464405607, 0.45715303080422537, 0.39972526686532156, 0.41919227157320293, 0.39563422543661936, 0.3750104478427342, 0.39539643696376253, 0.45897161960601807, 0.36421261514936176, 0.3982744812965393, 0.35389937673296246, 0.3985378657068525, 0.3557916964803423, 0.3657036338533674, 0.3747859597206116, 0.38103816338947843], "val_accuracy": [0.38866665959358215, 0.4633333384990692, 0.6399999856948853, 0.6793333292007446, 0.7243333458900452, 0.7020000219345093, 0.7096666693687439, 0.7670000195503235, 0.7703333497047424, 0.7689999938011169, 0.7630000114440918, 0.7870000004768372, 0.8009999990463257, 0.7806666493415833, 0.7943333387374878, 0.7943333387374878, 0.7906666398048401, 0.8289999961853027, 0.7983333468437195, 0.8193333148956299, 0.8169999718666077, 0.8266666531562805, 0.8429999947547913, 0.8360000252723694, 0.7960000038146973, 0.843999981880188, 0.8146666884422302, 0.8476666808128357, 0.8143333196640015, 0.8423333168029785, 0.8366666436195374, 0.8346666693687439, 0.8259999752044678]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1], [2, 1, 2, 2, 6, 9, 1, 9], [0, 2, 3, 1, 0, 2, 2], [60, 99, 47, 61], [0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [3, 0, 0, 1, 2, 3], [48, 57]], "fitness": -0.8274285793304443, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 3, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(8.92947854e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(grad, tf.math.add(beta, alpha)), tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)))))), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.076939190871617, 1.7010538692818247, 1.2037957212188382, 0.9554702675164636, 0.8577566163304648, 0.78861699104624, 0.7465433448045292, 0.7011283192148361, 0.6428456120896632, 0.6135527933388654, 0.5955534127047978, 0.592170807427545, 0.6175979712635786, 0.5495592412018363, 0.535417834832416, 0.5301382293192277, 0.5421048689984438, 0.5264780080912057, 0.5026946980144527, 0.47362537329947363, 0.4845230806308447, 0.4890377754666597, 0.45143572318712955, 0.4456673166802562, 0.4458329626448229, 0.4240413319441022, 0.4287922073663926, 0.42855987591262285, 0.42711163716167583, 0.40963633872372773], "accuracy": [0.3167349100112915, 0.4361378848552704, 0.570730447769165, 0.643772304058075, 0.6729626059532166, 0.7021529674530029, 0.7176066637039185, 0.7317395210266113, 0.7574957013130188, 0.7660810947418213, 0.7718927264213562, 0.7758552432060242, 0.7671377658843994, 0.7909126877784729, 0.7964601516723633, 0.7997622489929199, 0.8000264167785645, 0.8034605979919434, 0.8072909712791443, 0.8247259259223938, 0.8214238286018372, 0.8157442808151245, 0.8280280232429504, 0.8354246616363525, 0.8333113193511963, 0.837141752243042, 0.8404437899589539, 0.8384625315666199, 0.8397833704948425, 0.8470479249954224], "val_loss": [1.751401492527553, 1.1644531999315535, 0.8900351183755058, 0.8272606475012643, 0.6194478784288678, 0.6370799371174404, 0.5779136419296265, 0.508035489491054, 0.5150260925292969, 0.4771064690181187, 0.5267156873430524, 0.4924098082951137, 0.469107917376927, 0.48051089899880545, 0.4329553927694048, 0.451555677822658, 0.40603435039520264, 0.40612030029296875, 0.40804689271109446, 0.4101344176701137, 0.4110880579267229, 0.37773103373391287, 0.3800964781216213, 0.40074133021490915, 0.3648249251501901, 0.3789420468466623, 0.41077821595328196, 0.36067966903959003, 0.37178284781319754, 0.3596759353365217], "val_accuracy": [0.3866666555404663, 0.48133334517478943, 0.5950000286102295, 0.6166666746139526, 0.7080000042915344, 0.7103333473205566, 0.7360000014305115, 0.7726666927337646, 0.7596666812896729, 0.7883333563804626, 0.7586666941642761, 0.7753333449363708, 0.7953333258628845, 0.781333327293396, 0.815666675567627, 0.7956666946411133, 0.8190000057220459, 0.82833331823349, 0.8230000138282776, 0.8159999847412109, 0.8213333487510681, 0.8349999785423279, 0.8363333344459534, 0.8116666674613953, 0.8456666469573975, 0.8336666822433472, 0.8080000281333923, 0.8429999947547913, 0.8356666564941406, 0.8410000205039978]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [6, 2, 2, 2, 6, 5, 3, 9], [0, 2, 3, 0, 0, 2, 1], [35, 7, 47], [1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.8225714564323425, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 7, 7, 3, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.multiply(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))), beta)))), alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.076992010994673, 1.6957810727943126, 1.2999576868524074, 0.9112686978166192, 0.8496737049445028, 0.7715557773178437, 0.7394573487751771, 0.7161446373145562, 0.635465280191852, 0.6029843124085571, 0.6207314428951226, 0.5819130866613528, 0.5821072836089773, 0.5626779401842409, 0.5453969358201229, 0.530103876944688, 0.5364267797974579, 0.5318321731773586, 0.4961026929994978, 0.48570754785169906, 0.49517171225606366, 0.49127299169019667, 0.45502481397904143, 0.43829334295106176, 0.43066554602268525, 0.4733772938986181, 0.4413751949566136, 0.4172702845195344, 0.4238645253109343, 0.4142263449847564, 0.3963852053139865, 0.3971822204535994, 0.3928574535116433], "accuracy": [0.31686699390411377, 0.4364020526409149, 0.5458987951278687, 0.659490168094635, 0.6782459616661072, 0.7018887996673584, 0.7174745798110962, 0.7269845604896545, 0.7602694630622864, 0.7711002230644226, 0.7622507214546204, 0.7783648371696472, 0.7778365015983582, 0.7836481332778931, 0.7952714562416077, 0.7973847389221191, 0.8029322624206543, 0.800818920135498, 0.8070268034934998, 0.8189142942428589, 0.8153480291366577, 0.811649739742279, 0.8284242749214172, 0.8363492488861084, 0.8380662798881531, 0.8204993009567261, 0.8355567455291748, 0.8485008478164673, 0.8417646288871765, 0.8470479249954224, 0.8516708612442017, 0.8562937378883362, 0.8529917001724243], "val_loss": [1.7519862311226981, 1.2329638004302979, 0.8344533613749913, 0.815659897668021, 0.629824025290353, 0.56558244568961, 0.5693939583642142, 0.5130711964198521, 0.5005310092653547, 0.5214531932558332, 0.4966531310762678, 0.4676532234464373, 0.505903993334089, 0.44177120072501047, 0.44301094327654156, 0.4615681341716221, 0.408686705998012, 0.4113969121660505, 0.4305869085448129, 0.4027917299951826, 0.4301289234842573, 0.39382143531526836, 0.3782256841659546, 0.39190265110560824, 0.48413547447749544, 0.3723704218864441, 0.38845397744859966, 0.3606571640287127, 0.36802971363067627, 0.35714642490659443, 0.361603455884116, 0.37557227270943777, 0.38806624923433575], "val_accuracy": [0.3869999945163727, 0.46266666054725647, 0.6499999761581421, 0.6483333110809326, 0.7073333263397217, 0.7416666746139526, 0.7326666712760925, 0.7706666588783264, 0.7713333368301392, 0.7446666955947876, 0.7749999761581421, 0.7863333225250244, 0.7616666555404663, 0.8050000071525574, 0.809333324432373, 0.7996666431427002, 0.8209999799728394, 0.8163333535194397, 0.8193333148956299, 0.8276666402816772, 0.8096666932106018, 0.8306666612625122, 0.8339999914169312, 0.8379999995231628, 0.7793333530426025, 0.840666651725769, 0.8163333535194397, 0.8429999947547913, 0.8426666855812073, 0.8413333296775818, 0.8403333425521851, 0.831333339214325, 0.824999988079071]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [2, 1, 2, 2, 6, 9, 1, 9], [0, 2, 3, 0, 0, 2, 2], [43, 99, 47, 61], [0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [3, 0, 0, 1, 2, 3], [48, 57]], "fitness": -0.7591428756713867, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 4, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.math.add(beta, tf.math.subtract(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32)))))))), beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0770993514099394, 1.6799884279878652, 1.3106661139540998, 0.9415062190346069, 0.8311965162287047, 0.7735847222916816, 0.7193960812680394, 0.6708539604132973, 0.6644693130452352, 0.6098755346140007], "accuracy": [0.31686699390411377, 0.4415532946586609, 0.5493329763412476, 0.6464139223098755, 0.6775855422019958, 0.7066437602043152, 0.7300224304199219, 0.7392682433128357, 0.7491744756698608, 0.7660810947418213], "val_loss": [1.7524062565394811, 1.2593761852809362, 0.740362286567688, 0.713931509426662, 0.5795189993722099, 0.591800400188991, 0.5651942832129342, 0.6016036953244891, 0.5439833743231637, 0.6435310159410749], "val_accuracy": [0.38600000739097595, 0.46000000834465027, 0.6990000009536743, 0.675000011920929, 0.7463333606719971, 0.7233333587646484, 0.7459999918937683, 0.7239999771118164, 0.7403333187103271, 0.7326666712760925]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [6, 2, 2, 2, 6, 5, 1, 9], [0, 2, 3, 0, 0, 2, 2], [22, 7, 47], [1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [3, 3, 0, 4, 7, 8, 4], [1, 0, 0, 1, 3, 3], [89, 57]], "fitness": -0.37228572368621826, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 13, 7, 6, 2], "tree_depth": 15, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(3.85103236e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.multiply(tf.math.multiply(alpha, tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.sqrt(tf.math.pow(alpha, sigma)), sigma))))", "other_info": {"loss": [3.3888650237451126, 4.791774530137425, 2.5184581162608013, 2.4020244596562192, 2.403484497686277, 2.490805458225799], "accuracy": [0.19653943181037903, 0.16431118547916412, 0.09774138033390045, 0.10276053100824356, 0.1006472036242485, 0.09734513610601425], "val_loss": [1.7949810028076172, 2.1395627430507114, 2.0301594734191895, 2.1443065915788924, 2.1105218614850725, 2.055678503853934], "val_accuracy": [0.2536666691303253, 0.10000000149011612, 0.09799999743700027, 0.09933333098888397, 0.09799999743700027, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1], [0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [6, 2, 2, 2, 6, 5, 1, 9], [5, 4, 3, 0, 3, 0, 2, 5, 2], [35, 7, 47], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [2, 7], [88, 19], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 6, 8, 4, 4], [1, 0, 0, 3, 2, 3], [48, 57]], "fitness": -0.2785714268684387, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [3.396287255488083, 2.4438016547534476, 2.309048971810503, 2.218531302583216, 2.3623024163984936, 2.3049299814571653, 2.3033141710061944, 2.303254566455892, 2.3032906982231416], "accuracy": [0.1834632158279419, 0.16114120185375214, 0.09470347315073013, 0.16536785662174225, 0.16021661460399628, 0.1026284471154213, 0.09853387624025345, 0.10157178342342377, 0.09694888442754745], "val_loss": [1.9746945926121302, 1.9870540755135673, 1.9631381034851074, 1.9629277501787459, 1.9772883823939733, 1.974496296473912, 1.9739999089922224, 1.9738232067653112, 1.973708152770996], "val_accuracy": [0.09833333641290665, 0.09966666996479034, 0.10766666382551193, 0.17800000309944153, 0.09933333098888397, 0.10000000149011612, 0.09933333098888397, 0.09933333098888397, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 1], [2, 2, 2, 2, 6, 5, 1, 9], [0, 2, 3, 0, 1, 3, 0], [25, 46, 47], [1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [4, 3, 0, 4, 7, 8, 4], [1, 0, 0, 1, 3, 3], [35, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 14, 14, 8, 6, 3, 1, 0, 0, 0, 0, 8, 4, 4, 2], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.subtract(tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32), alpha))), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.pow(tf.math.multiply(alpha, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), alpha)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1], [1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [6, 2, 2, 2, 6, 5, 1, 9], [5, 4, 3, 0, 3, 0, 2, 5, 2], [35, 7, 47], [0, 0, 1, 1, 0, 1], [0, 1, 1, 0, 0, 1], [4, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 6, 8, 4, 4], [3, 0, 0, 1, 2, 3], [55, 83]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 2, 1, 1, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, grad), sigma)), lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09721305221319199, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [2, 1, 0, 2, 6, 9, 1, 9], [0, 2, 3, 0, 0, 2, 2], [43, 99, 47, 61], [0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [2, 0, 0, 1, 2, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [11961716.713046184, 227313679.41038173, 1044785994.541276, 2954343264.1986527, 6267158755.427816, 11426702501.549597], "accuracy": [0.09774138033390045, 0.10117553919553757, 0.10157178342342377, 0.09826971590518951, 0.1010434553027153, 0.10236428678035736], "val_loss": [45789128.0, 365793197.71428573, 1233967981.7142856, 2924277906.285714, 5710690304.0, 9867160429.714285], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [6, 9, 2, 2, 6, 5, 4, 9], [0, 2, 3, 0, 0, 2, 2], [18, 7, 47, 35], [0, 0, 1, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [7, 9, 0, 4, 2, 1, 2, 3], [2, 2, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 8, 4, 4, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.constant(1.72012560e-03, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(tf.math.pow(tf.math.add(beta, beta), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), grad)))), tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1], [1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [6, 2, 2, 2, 6, 5, 1, 9], [0, 2, 3, 0, 0, 2, 2], [43, 99, 47, 61], [1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [1, 2, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, beta))", "other_info": {"loss": [490027563.3813694, 73633554398.45728, 1245401696620.9124, 8975825230092.072, 38978678196759.875, 127336819382877.66], "accuracy": [0.09774138033390045, 0.10117553919553757, 0.10157178342342377, 0.09840179979801178, 0.10091137140989304, 0.10249637067317963], "val_loss": [4155532580.571429, 223942527268.57144, 2403496998619.4287, 13103079995099.428, 49079597924352.0, 144768353510546.28], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [6, 2, 2, 2, 5, 5, 1, 9], [0, 2, 3, 0, 0, 2, 2], [35, 7, 47], [0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 0, 1], [4, 0, 8, 9, 7], [4, 7], [88, 19], [0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 4, 6, 8, 4, 4], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 3, 2, 1, 1, 0, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.divide_no_nan(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09391097724437714, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [5, 2, 2, 2, 6, 2, 2, 9], [0, 2, 3, 0, 3, 2, 2, 1], [54, 55, 47], [1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [1, 0, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.constant(7.12814099e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08374059200286865, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [6, 2, 2, 2, 6, 5, 1, 9], [1, 4, 3, 0, 3, 0, 2, 5, 2], [35, 7, 47], [1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [4, 7], [88, 19], [1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [1, 1, 0, 1, 3, 3], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08374059200286865, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [6, 2, 2, 2, 6, 5, 1, 9], [0, 2, 3, 1, 0, 3, 2], [43, 86, 47, 61], [1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [1, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [3, 0, 0, 1, 2, 3], [48, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 7, 7, 2, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 23, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, grad)), tf.math.add(beta, tf.math.subtract(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))))), grad)))), beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3034670085262046, 2.301545542559651, 2.303388452548802, 2.3030254965870216, 2.304246089808331, 2.302723510091205], "accuracy": [0.09021265059709549, 0.09179764986038208, 0.08968432247638702, 0.0878351628780365, 0.09087307006120682, 0.09021265059709549], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1], [0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1], [6, 2, 2, 2, 6, 5, 1, 9], [2, 2, 3, 3, 0, 2, 2], [35, 7, 47], [1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [1, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 7, 8, 4], [2, 2, 0, 1, 3, 3], [48, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 1, 14, 14, 7, 7, 1, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.divide_no_nan(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, tf.math.subtract(beta, grad))), grad)), tf.math.add(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))), beta)), beta))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, beta))", "other_info": {"loss": [2.3034670085262046, 2.301545542559651, 2.303388452548802, 2.3030254965870216, 2.304246089808331, 2.302723510091205], "accuracy": [0.09021265059709549, 0.09179764986038208, 0.08968432247638702, 0.0878351628780365, 0.09087307006120682, 0.09021265059709549], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [2, 2, 2, 2, 6, 6, 1, 9], [0, 2, 1, 0, 0, 2, 2, 4], [43, 99, 47, 61], [1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [7, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [3, 0, 0, 1, 2, 3], [68, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 7, 8, 3, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.subtract(tf.constant(9.99954602e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))), beta)), beta)))), grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(9.76737464e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3034670085262046, 2.301545542559651, 2.303388452548802, 2.3030254965870216, 2.304246089808331, 2.302723510091205], "accuracy": [0.09021265059709549, 0.09179764986038208, 0.08968432247638702, 0.0878351628780365, 0.09087307006120682, 0.09021265059709549], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0], [0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1], [2, 1, 2, 2, 6, 9, 1, 9], [3, 2, 2, 3, 0, 2, 2], [35, 92, 47, 39], [1, 1, 0, 1, 0, 1], [1, 1, 1, 0, 0, 1], [5, 0, 8, 9, 7], [2, 7], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 1, 0, 1, 3, 3], [48, 57]], "fitness": -0.03314285725355148, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 2, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, tf.math.add(tf.math.divide_no_nan(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, beta)), tf.math.add(beta, tf.math.subtract(grad, tf.constant(9.99813307e-01, shape=shape, dtype=tf.float32))))))), beta)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, alpha))", "other_info": {"loss": [2.3040617572286615, 2.3036499584922545, 2.3073853924289875, 2.308938139071633, 2.3133861447967763, 2.3149417238685164], "accuracy": [0.08968432247638702, 0.08453308790922165, 0.0820235088467598, 0.07872143387794495, 0.07740060985088348, 0.0796460211277008], "val_loss": [1.9724107469831194, 1.9736789294651575, 1.975024836403983, 1.9767905644008092, 1.9791455268859863, 1.9815067563738142], "val_accuracy": [0.03233333304524422, 0.027666667476296425, 0.023666666820645332, 0.023000000044703484, 0.020999999716877937, 0.027000000700354576]}}]