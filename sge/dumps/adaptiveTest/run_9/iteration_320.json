[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [5, 3, 3, 2, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [51, 57]], "fitness": -0.8285714387893677, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2542281665696193, 2.0252220337149365, 2.323020129895969, 2.2792796006276386, 1.9772223486577232, 1.5813893741699117, 1.2612008139945734, 1.157243781369423, 0.8705846823721419, 0.7783170183888043, 0.707995628211571, 0.673861024299743, 0.6797388100180061, 0.6341177753060013, 0.6035613925024629, 0.6408858635500831, 0.5927205492539759, 0.565597465615845, 0.5622031164994377, 0.5504900899781779, 0.5464599357777425, 0.5268309111954781, 0.5312389603553589, 0.5203314234457468, 0.500041664457592, 0.5003084356695701, 0.4728869284345584, 0.47428425467481955, 0.46614520639681056, 0.4565170041605655, 0.4476504104839041, 0.46058572223551475], "accuracy": [0.26495838165283203, 0.27777042984962463, 0.1508387327194214, 0.17870822548866272, 0.29877161979675293, 0.43851539492607117, 0.5408796668052673, 0.5860520601272583, 0.6761326193809509, 0.700171709060669, 0.7313432693481445, 0.7428345084190369, 0.7382115721702576, 0.7588165402412415, 0.7761194109916687, 0.7681944370269775, 0.7738739848136902, 0.7887993454933167, 0.7799497842788696, 0.7943468689918518, 0.793950617313385, 0.7989697456359863, 0.796328067779541, 0.8013472557067871, 0.8092722296714783, 0.8078193068504333, 0.8249900937080383, 0.8226125836372375, 0.816008448600769, 0.8315942287445068, 0.8281601071357727, 0.8231409192085266], "val_loss": [1.6794393743787492, 2.2062197412763322, 1.6718505450657435, 1.9560420172555106, 1.268380846296038, 1.353717838014875, 1.1307563441140311, 0.6650219474520002, 0.6293193612779889, 0.5717990909303937, 0.5544603041240147, 0.552392670086452, 0.5075585842132568, 0.4927752699170794, 0.6333082403455462, 0.4833838428769793, 0.4640333993094308, 0.46424172605787006, 0.48505265372140066, 0.4211903725351606, 0.42671777520860943, 0.44524872303009033, 0.44398159640175955, 0.39989175115312847, 0.4186628120286124, 0.4196428486279079, 0.3738990085465567, 0.41519713401794434, 0.4013741612434387, 0.38769670895167757, 0.42023719208581106, 0.3861307757241385], "val_accuracy": [0.3316666781902313, 0.09966666996479034, 0.29366666078567505, 0.15299999713897705, 0.4976666569709778, 0.39366665482521057, 0.5506666898727417, 0.715666651725769, 0.718666672706604, 0.7409999966621399, 0.7486666440963745, 0.7523333430290222, 0.7870000004768372, 0.7889999747276306, 0.7266666889190674, 0.781333327293396, 0.7883333563804626, 0.777999997138977, 0.7986666560173035, 0.8213333487510681, 0.7956666946411133, 0.7993333339691162, 0.8113333582878113, 0.8243333101272583, 0.8213333487510681, 0.8036666512489319, 0.8413333296775818, 0.8053333163261414, 0.8293333053588867, 0.8303333520889282, 0.8130000233650208, 0.8263333439826965]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [3, 3, 3, 2, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8217142820358276, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 1, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, grad)), tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, beta)))), grad)), tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.087230110810874, 2.022154364745221, 1.7219657901885597, 1.1835733417821614, 0.892264872478409, 0.8215481031840078, 0.7355161876868043, 0.7135709162480197, 0.672422451507524, 0.6265332980588002, 0.6292883628757165, 0.5998300864727679, 0.5890278375348741, 0.5722427090334461, 0.5595707792364107, 0.548442038145394, 0.5459325210198813, 0.5322936709058472, 0.5045377084166854, 0.49698961644738876, 0.5263664170877257, 0.49121217781746973, 0.48320453469433], "accuracy": [0.3199048936367035, 0.34843480587005615, 0.39545634388923645, 0.5892220139503479, 0.6684718132019043, 0.6884163022041321, 0.719852089881897, 0.720380425453186, 0.737022876739502, 0.7640998363494873, 0.7605336308479309, 0.7721568942070007, 0.7729493975639343, 0.7876105904579163, 0.7891955971717834, 0.7922335267066956, 0.7923656105995178, 0.7980451583862305, 0.8100647330284119, 0.8152159452438354, 0.8009510040283203, 0.8173292875289917, 0.819970965385437], "val_loss": [1.4272214003971644, 1.0942861012050085, 1.231332472392491, 0.7909808329173497, 0.6951158727918353, 0.5842194557189941, 0.5548499822616577, 0.5175151654652187, 0.5395639453615461, 0.5359954152788434, 0.4858614206314087, 0.469490647315979, 0.5188820362091064, 0.4383643014090402, 0.4761255128043039, 0.4418060779571533, 0.4286626236779349, 0.4296983139855521, 0.4563635587692261, 0.4210839016096933, 0.43548050097056795, 0.428731484072549, 0.44408343519483295], "val_accuracy": [0.4386666715145111, 0.5316666960716248, 0.5696666836738586, 0.6759999990463257, 0.6943333148956299, 0.7476666569709778, 0.7483333349227905, 0.7583333253860474, 0.7456666827201843, 0.7756666541099548, 0.7833333611488342, 0.7870000004768372, 0.7766666412353516, 0.8096666932106018, 0.7866666913032532, 0.8023333549499512, 0.8076666593551636, 0.8146666884422302, 0.8013333082199097, 0.8140000104904175, 0.7990000247955322, 0.8096666932106018, 0.8116666674613953]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 4, 3, 2, 8, 8, 6, 9, 6, 8, 9], [3, 3, 3, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8168571591377258, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 1, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(grad, tf.math.pow(tf.math.add(beta, grad), tf.math.pow(tf.math.multiply(tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, grad))), grad), tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.087077021394124, 2.018173801286456, 1.7220520848186183, 1.2989761658694845, 0.9264146566091827, 0.81370945047504, 0.7626151394425225, 0.7257389448904925, 0.6777890627300105, 0.6414795308506106, 0.6370307234032374, 0.597807822919021, 0.6009424175993798, 0.5598255436906348, 0.5889340123921148, 0.5503296566173275, 0.5349464682996737, 0.5218382054914525, 0.5236327883243372, 0.5005745579734722, 0.5069599309696293, 0.49883686403446603, 0.4744341957090459, 0.46861000277772163, 0.4603042683274188], "accuracy": [0.32003697752952576, 0.3486989736557007, 0.39889049530029297, 0.5571258664131165, 0.653150200843811, 0.6931713223457336, 0.7033417224884033, 0.7181349992752075, 0.7349095344543457, 0.7552502751350403, 0.763439416885376, 0.7744023203849792, 0.7640998363494873, 0.7901201844215393, 0.7754589915275574, 0.7927618622779846, 0.7961959838867188, 0.8030643463134766, 0.8024039268493652, 0.8136309385299683, 0.8076872229576111, 0.8141592741012573, 0.8220842480659485, 0.8248580098152161, 0.8280280232429504], "val_loss": [1.4295933587210519, 1.113835164478847, 1.1998226983206612, 0.8932715824672154, 0.764952370098659, 0.5905727999550956, 0.5545825617653983, 0.5184898717062814, 0.5422413349151611, 0.5692871468407767, 0.4798231635774885, 0.48863080569675993, 0.48136866092681885, 0.44338646956852507, 0.43635858808244976, 0.4335364188466753, 0.4565118891852243, 0.43497177532741, 0.44216826983860563, 0.39781304768153597, 0.4589435713631766, 0.427254387310573, 0.4067832486970084, 0.41275019305092947, 0.38390899556023733], "val_accuracy": [0.43933331966400146, 0.5049999952316284, 0.5659999847412109, 0.6266666650772095, 0.6636666655540466, 0.7260000109672546, 0.7580000162124634, 0.7609999775886536, 0.7493333220481873, 0.7306666374206543, 0.7816666960716248, 0.7796666622161865, 0.7983333468437195, 0.8036666512489319, 0.8143333196640015, 0.8106666803359985, 0.7923333048820496, 0.8050000071525574, 0.8116666674613953, 0.8299999833106995, 0.7799999713897705, 0.8073333501815796, 0.8246666789054871, 0.8190000057220459, 0.8293333053588867]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 1, 3, 0, 8, 8, 6, 9, 6, 8, 9], [3, 3, 3, 2, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [51, 2]], "fitness": -0.8128571510314941, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 1, 0, 0, 0, 0, 5, 3, 2, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.pow(grad, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.square(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.092841808585884, 1.6276287936641556, 1.161219324292193, 0.9882516070143453, 0.8500178715398897, 0.7992922404989858, 0.7429361729385074, 0.694377530559557, 0.6924568351627325, 0.6446114948491505, 0.642677600617422, 0.6046621530693064, 0.6172871002825323, 0.6040401010229257, 0.5797944822252828, 0.5682702208664344, 0.5509917163861473, 0.5104204508701194, 0.5353331052159526, 0.5197040972582432, 0.5166342858318104, 0.4972369457988565, 0.49577488194304276, 0.5020793841901063, 0.448351914510121, 0.46695314357781753, 0.4809101427102117, 0.47177097947291097, 0.45030980168584317, 0.4172737797481855, 0.42544877053629754, 0.42288225522729084], "accuracy": [0.3035266101360321, 0.4839519262313843, 0.5793157815933228, 0.6296393871307373, 0.6808875799179077, 0.6954167485237122, 0.7189275026321411, 0.7298903465270996, 0.7294940948486328, 0.754589855670929, 0.7512878179550171, 0.763967752456665, 0.7623828053474426, 0.772288978099823, 0.7759873270988464, 0.7820631265640259, 0.785629391670227, 0.8103289008140564, 0.7952714562416077, 0.8024039268493652, 0.8061022162437439, 0.8150838613510132, 0.8123101592063904, 0.8121780753135681, 0.8412362933158875, 0.8249900937080383, 0.8193105459213257, 0.8267071843147278, 0.8269713521003723, 0.8449346423149109, 0.8376700282096863, 0.843481719493866], "val_loss": [1.7587221690586634, 1.093722139086042, 0.7804275580814907, 0.6957995550973075, 0.6563229390553066, 0.580918686730521, 0.5781493697847638, 0.5331812075206211, 0.5294433661869594, 0.5522101776940482, 0.540183390889849, 0.4839824438095093, 0.5139800991330828, 0.4907967022487095, 0.48943887438092915, 0.4468449865068708, 0.4525092158998762, 0.4318541203226362, 0.42794150965554373, 0.4132553679602487, 0.42191727672304424, 0.42690180029187885, 0.47496066774640766, 0.3971639360700335, 0.41740335736955914, 0.4377199411392212, 0.3703632184437343, 0.41340597186769756, 0.388458251953125, 0.37181514501571655, 0.37818758828299387, 0.4123868771961757], "val_accuracy": [0.4493333399295807, 0.5289999842643738, 0.6506666541099548, 0.6556666493415833, 0.703000009059906, 0.7490000128746033, 0.7263333201408386, 0.7663333415985107, 0.7593333125114441, 0.7400000095367432, 0.7516666650772095, 0.7883333563804626, 0.7713333368301392, 0.7693333625793457, 0.7716666460037231, 0.8076666593551636, 0.7976666688919067, 0.8103333115577698, 0.8113333582878113, 0.8236666917800903, 0.8143333196640015, 0.812333345413208, 0.8009999990463257, 0.82833331823349, 0.8103333115577698, 0.7956666946411133, 0.840666651725769, 0.8113333582878113, 0.8256666660308838, 0.8376666903495789, 0.8309999704360962, 0.8106666803359985]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 1, 8, 2, 8, 8, 6, 9, 6, 8, 9], [3, 3, 3, 3, 0, 0, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.8019999861717224, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 5, 4, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), grad)), tf.math.sqrt(grad)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.08721776261164, 2.0212951016511114, 1.6351469738639939, 1.187961565709747, 0.8553966970853739, 0.7708863450661784, 0.7261738642221586, 0.7013550534728276, 0.6545819659132952, 0.626980825193869, 0.6131606715907353, 0.5766400237361186, 0.5889803375219703, 0.5429120027803238, 0.5686250528513307, 0.5442642933814407, 0.5214055589539358, 0.5099058567241608, 0.507861062284033, 0.5035339002721991, 0.5022806948706018, 0.4830939540017818, 0.4659231001863768, 0.4652872723933807, 0.4576624031111612], "accuracy": [0.3199048936367035, 0.3481706380844116, 0.4271562397480011, 0.5791836977005005, 0.6762647032737732, 0.7014925479888916, 0.720380425453186, 0.7310791015625, 0.7465327978134155, 0.7594769597053528, 0.7745344042778015, 0.7860256433486938, 0.7784969210624695, 0.7991018295288086, 0.7844406366348267, 0.7930260300636292, 0.8035926818847656, 0.8061022162437439, 0.8090080618858337, 0.8120459914207458, 0.809140145778656, 0.8227446675300598, 0.8241975903511047, 0.8261788487434387, 0.8309338092803955], "val_loss": [1.4268818242209298, 1.101700714656285, 1.0063280718667167, 0.6749951839447021, 0.6503602947507586, 0.582627705165318, 0.5742207595280239, 0.5317550557000297, 0.5158599274499076, 0.528245108468192, 0.47402622018541607, 0.4619225944791521, 0.4737260511943272, 0.4435369627816336, 0.437146646635873, 0.4227076939174107, 0.4406801973070417, 0.42259189912251066, 0.45836353302001953, 0.3961798633847918, 0.4291966642652239, 0.4199222837175642, 0.43263427700315205, 0.3861087475504194, 0.4147090060370309], "val_accuracy": [0.4386666715145111, 0.5256666541099548, 0.6423333287239075, 0.6803333163261414, 0.687666654586792, 0.7393333315849304, 0.7383333444595337, 0.746999979019165, 0.768666684627533, 0.7573333382606506, 0.7850000262260437, 0.8016666769981384, 0.7996666431427002, 0.8026666641235352, 0.8116666674613953, 0.8159999847412109, 0.8013333082199097, 0.8149999976158142, 0.8063333630561829, 0.8303333520889282, 0.8036666512489319, 0.8193333148956299, 0.8180000185966492, 0.8299999833106995, 0.8223333358764648]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 4, 5, 2, 0, 8, 6, 9, 6, 8, 9], [3, 3, 3, 3, 3, 3, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.7962856888771057, "mapping_values": [1, 1, 1, 0, 1, 0, 4, 4, 2, 2, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(grad, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0953116612805354, 1.699737650418184, 1.3144457630115398, 0.9986145667994515, 0.786296393672599, 0.741864563231266, 0.6953894177747204, 0.6587056244416338, 0.6283040234142243, 0.5770608451088989, 0.5890341826229047, 0.5849413409713017, 0.5374581311215436, 0.5225788110818184], "accuracy": [0.27803459763526917, 0.41328755021095276, 0.5478800535202026, 0.6132611036300659, 0.6997754573822021, 0.7165499925613403, 0.7331924438476562, 0.7491744756698608, 0.76106196641922, 0.7849689722061157, 0.778761088848114, 0.7761194109916687, 0.7997622489929199, 0.7954035401344299], "val_loss": [1.6066082886287145, 1.0000887938908167, 0.840283989906311, 0.6408064195087978, 0.6058731760297503, 0.6478257349559239, 0.5926781041281564, 0.5025060858045306, 0.46206443650381906, 0.49122038909367155, 0.5391885723386493, 0.45337741715567453, 0.45204814842769075, 0.45718484265463694], "val_accuracy": [0.5453333258628845, 0.6473333239555359, 0.6026666760444641, 0.7053333520889282, 0.734000027179718, 0.7120000123977661, 0.718666672706604, 0.777999997138977, 0.7963333129882812, 0.7756666541099548, 0.737666666507721, 0.7900000214576721, 0.793666660785675, 0.7756666541099548]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 1, 3, 2, 9, 8, 6, 9, 6, 8, 9], [1, 3, 3, 2, 0, 2, 0, 0, 0, 3, 1, 0, 5, 0], [30, 38, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [70, 57]], "fitness": -0.7117142677307129, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 8, 5, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.pow(tf.math.subtract(tf.math.add(beta, alpha), tf.math.add(beta, grad)), tf.math.multiply(tf.math.add(tf.math.add(beta, grad), tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.sqrt(beta)))), tf.math.add(beta, tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.6561637428285203, 2.32159980457252, 2.3014571062719598, 2.3283514388563957, 2.266520743608758, 2.3052792839795497, 2.278048387056864, 2.2847667857404272, 2.24103099886358, 2.020811825396284, 1.8425782134173616, 2.1672592358645226, 1.8565661940261624, 1.3618470201434365, 1.1505441939149, 1.0774192836511058, 1.0333769069670875, 0.9966409727251997, 0.89283623147902, 0.883832146691262, 0.8492185187975901, 0.8165591190582757, 0.8189384087894602, 0.7552876266521816, 0.7633593395763715, 0.7262517622338782, 0.6835313056202109, 0.6977144762541025, 0.6651773389068183, 0.6505022058712414, 0.6702507006698486, 0.6830632879418814, 0.6516578672836328, 0.6423083826566904, 0.6092152086073901], "accuracy": [0.18451987206935883, 0.10434553027153015, 0.1088363528251648, 0.21991810202598572, 0.1566503793001175, 0.10394927859306335, 0.14634791016578674, 0.12534672021865845, 0.26099589467048645, 0.29058247804641724, 0.35239729285240173, 0.2525425851345062, 0.3625676929950714, 0.5208030939102173, 0.5869766473770142, 0.6038832664489746, 0.6126006841659546, 0.6161669492721558, 0.656980574131012, 0.6654338836669922, 0.6730946898460388, 0.6808875799179077, 0.684982180595398, 0.7040021419525146, 0.696209192276001, 0.7165499925613403, 0.72672039270401, 0.7244749665260315, 0.7313432693481445, 0.7338528633117676, 0.7292299270629883, 0.7230220437049866, 0.7263241410255432, 0.7423061728477478, 0.7504953145980835], "val_loss": [2.0413143975394115, 1.9740541321890694, 1.9630414417811803, 1.9746593066624232, 1.9793716839381628, 1.9653314181736536, 1.9738717760358537, 1.4596497331346785, 1.7163231032235282, 1.5229332106454032, 1.9456962176731654, 1.4643347263336182, 1.0218992233276367, 0.8815509932381767, 0.8323721545083183, 0.8066772222518921, 0.9387481212615967, 0.7595700877053397, 0.6731762545449393, 0.7317159857068744, 0.6279219388961792, 0.745719279561724, 0.6036103963851929, 0.6057054315294538, 0.5950183868408203, 0.5733170849936349, 0.5662994725363595, 0.5599000453948975, 0.5699882507324219, 0.5466596058436802, 0.6204567636762347, 0.5314315557479858, 0.5387298720223563, 0.534591555595398, 0.5503555025373187], "val_accuracy": [0.09966666996479034, 0.09933333098888397, 0.2356666624546051, 0.10066666454076767, 0.09966666996479034, 0.12066666781902313, 0.1003333330154419, 0.4176666736602783, 0.38066667318344116, 0.47699999809265137, 0.39399999380111694, 0.45366665720939636, 0.6029999852180481, 0.6286666393280029, 0.6263333559036255, 0.6299999952316284, 0.5640000104904175, 0.6576666831970215, 0.7009999752044678, 0.6740000247955322, 0.7073333263397217, 0.6693333387374878, 0.722000002861023, 0.718999981880188, 0.7223333120346069, 0.7353333234786987, 0.734000027179718, 0.7453333139419556, 0.731333315372467, 0.7493333220481873, 0.7123333215713501, 0.7473333477973938, 0.7403333187103271, 0.7446666955947876, 0.7456666827201843]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 2, 9, 4, 3, 2, 4, 8, 6, 9, 6, 8, 9], [3, 3, 3, 2, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.3091428577899933, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(grad, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.6613907412515263, 2.679409241049659, 2.30457573367809, 2.30331474357608, 2.3029327979570904, 2.3025016222553103], "accuracy": [0.190859854221344, 0.1372341811656952, 0.09589222073554993, 0.09919429570436478, 0.09655263274908066, 0.10289261490106583], "val_loss": [1.7439795221601213, 1.9759246962411063, 1.9740148953029089, 1.973644733428955, 1.9733905792236328, 1.9719718524387904], "val_accuracy": [0.3160000145435333, 0.10366666316986084, 0.10366666316986084, 0.10199999809265137, 0.09833333641290665, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 1, 2, 2, 8, 8, 6, 9, 6, 8, 9], [5, 3, 3, 2, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [1, 0], [88, 44], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 0, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [93, 55]], "fitness": -0.28600001335144043, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 1, 1, 1, 0, 1, 0, 6, 4, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(grad, tf.math.pow(tf.math.add(beta, grad), tf.math.subtract(tf.math.add(grad, tf.math.add(beta, beta)), tf.math.add(tf.math.add(beta, grad), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.square(tf.math.negative(tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.6591400785248402, 2.4371580018847294, 2.302638596169559, 2.2919907461556113, 2.366013138852556, 2.3081797228639216], "accuracy": [0.19376568496227264, 0.14872540533542633, 0.1018359512090683, 0.12389380484819412, 0.19033153355121613, 0.09311848133802414], "val_loss": [1.701592104775565, 1.9741740226745605, 1.9715828214372908, 1.9188346862792969, 1.9837686674935477, 1.975172655923026], "val_accuracy": [0.27399998903274536, 0.09833333641290665, 0.10199999809265137, 0.24799999594688416, 0.10366666316986084, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 2, 5, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [3, 3, 3, 2, 3, 2, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.28114286065101624, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, grad), grad))), tf.math.multiply(tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, beta))), grad))), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.6613048108939434, 2.572409687387378, 2.3040203048946393, 2.303873586900293, 2.3009598565344103, 2.2674670017248983], "accuracy": [0.1912561058998108, 0.14542332291603088, 0.09747721254825592, 0.09893012791872025, 0.10408136248588562, 0.16629242897033691], "val_loss": [1.7354684557233537, 1.9752187728881836, 1.9738219124930245, 1.9730681691850935, 1.9673286165509904, 1.979905469076974], "val_accuracy": [0.28200000524520874, 0.09833333641290665, 0.10366666316986084, 0.15600000321865082, 0.18199999630451202, 0.1003333330154419]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 1, 2, 2, 8, 8, 6, 9, 6, 8, 9], [5, 3, 3, 1, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [0, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 4, 2, 2, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(grad, tf.math.pow(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [36366633.29655546, 708805674.8413684, 3241289163.454233, 9015704264.782988, 19547225237.99551, 36105288103.3417], "accuracy": [0.10130762308835983, 0.1010434553027153, 0.09694888442754745, 0.09866596013307571, 0.10527011007070541, 0.09998679161071777], "val_loss": [141105696.0, 1127751168.0, 3804934070.857143, 9017662902.857143, 17610963821.714287, 30429777920.0], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 1, 3, 2, 9, 8, 6, 9, 6, 8, 9], [0, 3, 3, 2, 0, 0, 0, 0, 0, 3, 1, 0, 5, 0], [5, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 8, 5, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [70, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 8, 8, 4, 4, 1, 1, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.add(tf.math.pow(tf.math.subtract(tf.math.add(beta, tf.constant(1.24647146e-04, shape=shape, dtype=tf.float32)), grad), grad), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 2, 4, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [3, 3, 3, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 6, 7, 2, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.subtract(grad, grad)), tf.math.multiply(grad, tf.math.add(beta, grad))), tf.math.add(grad, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32)))), tf.constant(9.91401013e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [451360.99137445405, 2.3120022023815316, 2.3049028356234946, 2.3035196696195652, 2.3030822171259233, 2.302912873677637, 2.3029357727886177, 2.302980823224609, 2.3029860283767607, 2.30305869074514], "accuracy": [0.09642054885625839, 0.09708096832036972, 0.09576013684272766, 0.09813763201236725, 0.09311848133802414, 0.09866596013307571, 0.09681680053472519, 0.09602430462837219, 0.09377889335155487, 0.0936468094587326], "val_loss": [1.9883827481951033, 1.9774398122514998, 1.9747729301452637, 1.9741242272513253, 1.9738034520830428, 1.9736777714320592, 1.9736310413905553, 1.973640033176967, 1.9736592429024833, 1.9737189837864466], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.1003333330154419, 0.10066666454076767, 0.1003333330154419, 0.09799999743700027, 0.09799999743700027, 0.09833333641290665, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 4, 3, 2, 8, 8, 6, 9, 6, 8, 9], [3, 3, 3, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [4, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 1, 0, 2, 3, 3, 2], [47, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 13, 13, 7, 6, 1, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(grad, tf.math.pow(tf.math.add(beta, grad), tf.math.pow(tf.math.multiply(tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))), grad), tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, alpha))", "other_info": {"loss": [1230916122.6861343, 24018903561.53533, 109873950948.84798, 305663781846.74786, 662771570555.7227, 1224261174139.5874], "accuracy": [0.10130762308835983, 0.10091137140989304, 0.09694888442754745, 0.09866596013307571, 0.10527011007070541, 0.09998679161071777], "val_loss": [4779431789.714286, 38224087332.57143, 128993235529.14285, 305747197952.0, 597142742162.2858, 1031845707776.0], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 3, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [2, 3, 3, 2, 3, 3, 3, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [1, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 6, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [51, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 9, 7, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(tf.math.multiply(tf.math.add(beta, beta), grad), tf.math.subtract(tf.math.multiply(tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(beta)), tf.math.sqrt(tf.math.add(beta, grad))), tf.math.divide_no_nan(grad, tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07119271159172058, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 1, 6, 2, 8, 8, 6, 9, 6, 8, 9], [3, 3, 3, 2, 1, 0, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [4, 0], [88, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 5, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [51, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 3, 2, 1, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, grad)), grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.square(alpha))", "other_info": {"loss": [2.302774180227251, 2.305933654237464, 2.3065184407529578, 2.309555476037125, 2.312576060565298, 2.3173539828725103, 2.32057826973428, 2.3251041408700557, 2.333993959515055, 2.348776267204995, 2.3944040687565065, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09140139818191528, 0.08532558381557465, 0.07951393723487854, 0.08083476126194, 0.08440100401639938, 0.07568352669477463, 0.07621186226606369, 0.07489103078842163, 0.07687227427959442, 0.07726852595806122, 0.08281600475311279, 0.1006472036242485, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9724040031433105, 1.9738479341779436, 1.9754338264465332, 1.9774112020220076, 1.9796428680419922, 1.9825502804347448, 1.9858582360403878, 1.989898954119001, 1.9968016488211495, 2.012770175933838, 2.111648832048689, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03500000014901161, 0.028333334252238274, 0.027000000700354576, 0.02566666714847088, 0.03733333200216293, 0.046666666865348816, 0.05833333358168602, 0.07133333384990692, 0.08699999749660492, 0.09933333098888397, 0.09933333098888397, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [5, 3, 3, 2, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [90, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 1, 1, 1, 0, 1, 0, 13, 7, 6, 2], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.subtract(grad, grad), tf.math.multiply(tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(beta)), grad)), tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.square(tf.math.pow(tf.math.add(tf.constant(9.99720385e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(beta, sigma), sigma)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.12812046706676483, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 1, 3, 2, 8, 8, 6, 9, 6, 8, 9], [5, 3, 3, 2, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [46, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 8, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [51, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 7, 6, 1, 1, 1, 0, 1, 0, 7, 4, 3, 2], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.subtract(grad, grad)), tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(beta))), tf.math.add(beta, grad))), tf.constant(3.30246430e-01, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.math.sqrt(tf.math.pow(tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 6, 0, 2, 8, 8, 6, 9, 6, 8, 9], [1, 3, 3, 2, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [0, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0, 1], [88, 44], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 3, 0, 2, 3, 3, 2], [51, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 7, 5, 0, 7, 6, 3, 3, 1, 13, 7, 6, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(alpha, grad)), tf.math.negative(tf.math.add(tf.math.add(beta, grad), tf.math.sqrt(beta)))), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, grad), tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.square(tf.math.pow(tf.math.add(alpha, sigma), tf.constant(5.75183132e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(beta, sigma), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [8, 2, 4, 4, 0, 2, 8, 8, 6, 9, 6, 8, 9], [3, 0, 3, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [14, 73, 67, 81, 53, 45], [0, 0, 0, 0, 0, 1, 0], [1, 0, 1, 1, 0, 1], [4, 6, 1, 9, 7], [6, 0], [88, 44], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 5, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [30, 57]], "fitness": -0.036571428179740906, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 8, 5, 1, 1, 1, 0, 1, 0, 7, 4, 3, 2], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, tf.math.negative(tf.math.add(tf.math.sqrt(tf.math.add(beta, tf.constant(7.67413430e-04, shape=shape, dtype=tf.float32))), tf.math.sqrt(grad)))))), grad), tf.math.add(beta, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.square(alpha), tf.math.pow(tf.constant(1.90885420e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [2.3022621912081416, 2.3036488741931507, 2.3023050864296124, 2.3027984320038835, 2.3032917813885687, 2.303532156631254], "accuracy": [0.09126931428909302, 0.09179764986038208, 0.08638224750757217, 0.09074098616838455, 0.09232597798109055, 0.0870426595211029], "val_loss": [1.9712649072919572, 1.9712975365774972, 1.971335002354213, 1.9713774408612932, 1.9714199474879675, 1.9714737619672502], "val_accuracy": [0.03933333232998848, 0.039000000804662704, 0.039000000804662704, 0.038333334028720856, 0.03700000047683716, 0.03733333200216293]}}]