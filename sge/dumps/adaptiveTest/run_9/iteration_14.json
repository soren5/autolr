[{"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 1, 0], [0, 1, 1], [2], [3, 4], [8], [1], [], [], [], [], [0, 0, 1, 0, 1, 1, 0, 1, 1], [6, 3, 0, 5, 7], [1, 0, 0, 3], [28, 57]], "fitness": -0.7768571376800537, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 6, 3, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.2901430766753483, 2.2552578673465393, 2.215350505588014, 2.1578047737831514, 2.0725934764318903, 1.9535058996602135, 1.8026958985839459, 1.6383991410719358, 1.5046589803135137, 1.3793024174872013, 1.279733663835955, 1.2061992409112448, 1.1483360939903848, 1.1029637119694786, 1.060990628108467, 1.0319944949213697, 0.9902847003722629, 0.9629146105750929, 0.9481848316295918, 0.9231242830286315, 0.8992072778559946, 0.8964662608957372, 0.8667011255554126, 0.8542503209838999, 0.8558790264207107, 0.8343928916390388, 0.8328238084898523, 0.8147418831302001, 0.8146319251176373, 0.8038835244691446, 0.7921827499813896, 0.7931605287515224, 0.7689980838780925, 0.771105260747283, 0.7708660742358256, 0.7602919825016783, 0.7508523158818629, 0.745382055976781, 0.7420477644957256, 0.7384611736466903, 0.7283675691958952, 0.7234224852490907, 0.7229950483433244, 0.7188283230618809, 0.7157937138308277], "accuracy": [0.12072381377220154, 0.20842689275741577, 0.284110426902771, 0.3346982002258301, 0.38462555408477783, 0.42491084337234497, 0.4551578462123871, 0.4913485646247864, 0.5164443254470825, 0.5419363379478455, 0.5626733303070068, 0.5812970399856567, 0.5996565818786621, 0.609959065914154, 0.6310923099517822, 0.6380926966667175, 0.6452252268791199, 0.6598864197731018, 0.6618676781654358, 0.672170102596283, 0.6773213744163513, 0.6745476126670837, 0.6859067678451538, 0.6926429867744446, 0.6919825673103333, 0.7037379741668701, 0.6944921612739563, 0.7043983340263367, 0.7083608508110046, 0.7043983340263367, 0.7119271159172058, 0.7096816897392273, 0.7143045663833618, 0.7135120630264282, 0.7194558382034302, 0.7168141603469849, 0.7238145470619202, 0.7244749665260315, 0.726192057132721, 0.7260599732398987, 0.7265883088111877, 0.7306828498840332, 0.7347774505615234, 0.7339849472045898, 0.733588695526123], "val_loss": [1.9414862905229842, 1.9074779919215612, 1.8617382049560547, 1.7946263722011022, 1.6956110681806291, 1.5622790200369698, 1.4024744033813477, 1.2433292184557234, 1.1093146119798933, 1.00461288860866, 0.9270099231175014, 0.866286175591605, 0.8208834273474557, 0.7856132813862392, 0.7566524233136859, 0.7326849017824445, 0.7129438093730381, 0.6956087691443307, 0.6798885720116752, 0.6666186196463448, 0.6543001106807164, 0.6452956029347011, 0.6344588484082904, 0.6272200856889997, 0.6234667301177979, 0.6119307109287807, 0.6061364752905709, 0.5992025477545602, 0.5978441068104335, 0.5895104237965175, 0.5839792319706508, 0.5797466209956578, 0.574527485030038, 0.5739490304674421, 0.5655234370912824, 0.563098669052124, 0.5602038417543683, 0.5557131256375994, 0.5523970297404698, 0.5515741961342948, 0.546607392174857, 0.5427463395254952, 0.5429773500987461, 0.5392987898417881, 0.5364373411451068], "val_accuracy": [0.28033334016799927, 0.38100001215934753, 0.4283333420753479, 0.4723333418369293, 0.5299999713897705, 0.5559999942779541, 0.5833333134651184, 0.6000000238418579, 0.6313333511352539, 0.6556666493415833, 0.6646666526794434, 0.6759999990463257, 0.6830000281333923, 0.6943333148956299, 0.6923333406448364, 0.7026666402816772, 0.7099999785423279, 0.7116666436195374, 0.7166666388511658, 0.7260000109672546, 0.7250000238418579, 0.7289999723434448, 0.7256666421890259, 0.7353333234786987, 0.7379999756813049, 0.7386666536331177, 0.7400000095367432, 0.7426666617393494, 0.7379999756813049, 0.7443333268165588, 0.7506666779518127, 0.7516666650772095, 0.7513333559036255, 0.7553333044052124, 0.7586666941642761, 0.7576666474342346, 0.7556666731834412, 0.7609999775886536, 0.7596666812896729, 0.7670000195503235, 0.7639999985694885, 0.7639999985694885, 0.7636666893959045, 0.7649999856948853, 0.7666666507720947]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [1, 3, 5, 0, 7, 3], [2, 2, 1, 1], [50], [1, 1, 0], [0, 1, 1], [2], [3, 0], [4, 35], [1], [], [], [], [], [0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1], [6, 3, 0, 5, 7, 1, 4, 4, 1, 7, 4, 7, 4, 8, 5, 4, 0, 6, 4], [1, 0, 1, 3, 2, 2, 3, 3, 1, 3, 0, 1, 1, 0, 0], [28, 57, 43, 25]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 34, 19, 15, 4], "tree_depth": 21, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.add(beta, tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(alpha), tf.math.square(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.subtract(tf.math.pow(sigma, tf.math.pow(beta, beta)), tf.math.subtract(tf.math.add(tf.math.pow(tf.math.add(tf.math.pow(tf.math.sqrt(sigma), tf.math.square(sigma)), alpha), sigma), tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.negative(tf.math.divide_no_nan(alpha, alpha)))), tf.math.pow(tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [1, 3, 5, 0, 7, 3], [2, 1, 1, 2, 0], [50], [0, 1, 0, 1, 0, 0], [0, 1, 1], [3], [0, 0, 0], [35, 26], [1], [], [], [], [], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7], [1, 2, 0, 3], [28, 57, 57, 4]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 2, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 9, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(alpha), beta), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3353619995275903, 2.4973854344707704, 22933955149.42698, 4.8445913023617515e+30, 2.3052045406524955, 2.305356618482927, 2.305523167291353, 2.305701439737439], "accuracy": [0.050851933658123016, 0.01373662706464529, 0.06538105756044388, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.05368743624006, 2.4210853576660156, 3.1411583816819037e+31, 1.9759368896484375, 1.9760703359331404, 1.9762132508414132, 1.976365566253662, 1.9765255791800362], "val_accuracy": [0.003666666569188237, 0.007000000216066837, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 1, 0], [0, 1, 1], [4], [0, 0, 0], [35, 26], [1], [], [], [], [], [0, 0, 0, 0, 1, 1, 0, 1, 1], [6, 3, 0, 5, 7], [1, 0, 0, 3], [28, 57, 57, 4]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 2, 1, 0, 0, 0, 0, 9, 5, 4, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.pow(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.math.square(alpha)), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3033317815137972, 2.30307372815227, 2.3111829349881607, 2.3332389572497765, 2.578682282030496, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09047681838274002, 0.08691058307886124, 0.0816272646188736, 0.07924976944923401, 0.0866464152932167, 0.09919429570436478, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9715447425842285, 1.974242891584124, 1.9826885632106237, 2.011010238102504, 5.520316941397531, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03733333200216293, 0.026000000536441803, 0.02866666577756405, 0.09466666728258133, 0.09933333098888397, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 3, 5, 0, 4, 5], [2, 2, 1, 1], [50], [1, 0, 1, 1, 0], [0, 1, 1, 0, 0], [2, 1], [0, 0, 0], [8, 21, 98], [0], [1], [], [5], [], [0, 0, 1, 0, 1, 1, 0, 1, 1], [6, 3, 0, 5, 7, 2, 5, 9], [3, 0, 0, 3], [28, 1, 9, 89]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 2, 1, 1, 0, 1, 0, 6, 3, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.constant(3.14881358e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(sigma, tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09642054885625839, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [1, 3, 5, 0, 7, 3], [2, 2, 1, 1], [50], [0, 1, 1], [0, 1, 1], [3], [0, 4, 0], [35, 40], [1], [], [], [], [], [0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [9, 3, 0, 5, 7], [1, 0, 2, 3], [27, 75, 57, 4]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(1.05038445e-02, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302498731567812, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09853387624025345, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [1, 3, 5, 0, 7, 3], [2, 1, 1, 2, 0], [50], [0, 0, 0, 1, 0, 0], [0, 0, 1, 0, 1], [4, 4, 9], [0, 0, 0], [8, 35, 26], [0], [1], [], [7], [], [1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7], [1, 0, 0, 3], [28, 58, 57, 4]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 3, 2, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32))), tf.math.add(beta, tf.constant(8.59898661e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06960771232843399, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [1, 3, 5, 0, 7, 3], [2, 1, 1, 2, 0, 3, 3, 1, 2, 2, 1, 2, 0, 3, 3, 2, 3, 2], [50], [0, 1, 1, 0], [0, 1, 1], [2], [3, 4], [8], [1], [], [], [], [], [1, 0, 1, 0, 1, 0, 0, 1, 1], [9, 3, 0, 5, 7], [1, 0, 0, 0], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.06960771232843399, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [1, 3, 5, 0, 7, 3], [3, 1, 1, 2, 0], [50], [1, 1, 0, 1, 0, 0], [0, 0, 1, 1, 1, 1], [8, 5, 7], [0, 0, 0], [8, 35], [1], [], [7], [], [], [0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 8, 3, 2, 7, 9], [2, 1, 0, 2, 2, 3, 3, 3], [28, 57, 57, 4]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.sqrt(tf.math.square(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.sqrt(beta), tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 1, 1, 2, 0], [50], [1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0], [0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 1], [3, 2, 4, 3, 4, 6, 1, 8, 3], [0, 0, 0, 3, 1, 1, 3, 0, 1], [8, 81, 52, 15], [1], [0, 0, 1, 0], [2, 0, 5, 4], [], [98], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 3, 2, 5, 7], [1, 2, 0, 1, 0], [59, 57, 57, 4]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 18, 18, 9, 9, 4, 1, 0, 0, 0, 0, 10, 5, 5, 2], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32), tf.math.pow(tf.math.add(beta, tf.math.multiply(tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad))), tf.math.pow(alpha, tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.subtract(tf.math.sqrt(tf.math.add(beta, alpha)), grad)), tf.math.add(beta, tf.math.multiply(tf.constant(9.39055039e-04, shape=shape, dtype=tf.float32), alpha)))))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.math.add(tf.math.square(beta), tf.math.add(tf.constant(8.72048295e-01, shape=shape, dtype=tf.float32), alpha))), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 3, 5, 0, 4, 5], [2, 2, 1, 1], [50], [1, 0, 1, 0, 0], [0, 1, 0, 1, 1], [0, 1], [0, 0, 0], [88, 65, 34], [1], [], [], [], [], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7, 9, 5, 9], [1, 0, 1, 0], [28, 1, 9, 89]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), grad)), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.negative(alpha))", "other_info": {"loss": [2865.0924110311826, 52203.65050748745, 236235.666956974, 656405.0210011888, 1410661.8364813102, 2585318.0939109763], "accuracy": [0.09351472556591034, 0.09681680053472519, 0.09760929644107819, 0.09642054885625839, 0.09774138033390045, 0.10513802617788315], "val_loss": [10682.447265625, 82970.22321428571, 277558.0, 655130.8392857143, 1276374.642857143, 2201973.785714286], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1], [0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], [2, 4, 9, 1, 4, 6, 2, 0, 9, 9, 7, 6, 9], [3, 3, 5, 1, 3, 5, 3, 3, 2], [8, 53], [1], [0, 0, 1, 0], [], [], [98], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1], [6, 2, 1, 5, 7], [1, 0, 0, 3, 2], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 7, 7, 4, 3, 1, 1, 0, 0, 0, 0, 10, 5, 5, 2], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, tf.math.add(beta, tf.math.pow(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.subtract(grad, tf.math.add(beta, grad)))))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.add(alpha, tf.math.subtract(tf.math.square(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), sigma))), beta)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09853387624025345, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 1, 0, 1], [2, 3, 0, 0, 4, 5], [2, 2, 1, 1], [50], [1, 1, 0, 1, 0, 0, 1], [0, 1, 0, 1, 1, 0, 1], [9, 6, 9], [3, 4, 4], [61], [1], [], [], [], [], [0, 1, 1, 0, 1, 1, 0, 1, 1], [2, 5, 8, 5, 7], [1, 2, 2, 3], [56, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 5, 5, 2, 3, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 3, 1, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.multiply(grad, alpha)))), lambda shape,  alpha, beta, grad: tf.constant(9.10782940e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.add(alpha, beta)", "other_info": {"loss": [1.5843644508209377e+28, 2.634238540315357, 2.5188689372637456, 2.48729960453304, 2.507495076349934, 2.5474989343045364, 2.597657433842246, 2.6584327545274347], "accuracy": [0.09945846349000931, 0.10011887550354004, 0.09245806187391281, 0.0952318087220192, 0.09893012791872025, 0.09813763201236725, 0.09998679161071777, 0.10117553919553757], "val_loss": [2.4573953492300853, 2.2302524021693637, 2.0185472624642506, 2.0974132674080983, 2.152022293635777, 2.2121338163103377, 2.276972225734166, 2.365245955330985], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.10199999809265137, 0.10199999809265137, 0.10199999809265137, 0.10000000149011612, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [1, 3, 5, 0, 7, 3], [2, 2, 1, 1], [50], [0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0], [0, 1, 1], [2, 5, 6, 5, 3, 3, 3, 1, 3, 1, 6, 0], [2, 4, 5, 5, 1, 4, 2, 4, 2, 3, 2], [8], [0, 0, 0, 1, 0, 1, 0, 1, 1], [0, 0, 1, 0, 0], [2, 7, 1, 4], [2], [], [0, 0, 1, 0, 0, 1, 0, 1, 1], [2, 3, 0, 5, 2], [1, 2, 1, 3], [28, 33, 9, 89]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 9, 5, 4, 1, 0, 9, 5, 4, 0], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.add(tf.math.add(sigma, beta), sigma)), tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, tf.math.pow(sigma, sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(tf.math.multiply(alpha, tf.math.negative(tf.math.square(beta))), tf.math.add(alpha, sigma))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09708096832036972, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 1, 1], [0, 1, 1], [0], [3, 4], [8], [0], [1], [], [5], [], [0, 0, 1, 0, 1, 1, 0, 1, 1], [6, 3, 0, 5, 7], [0, 0, 3, 3], [28, 57]], "fitness": -0.04171428456902504, "mapping_values": [1, 1, 1, 0, 1, 0, 2, 2, 1, 1, 0, 1, 1, 0, 1, 0, 6, 3, 3, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))), sigma)", "other_info": {"loss": [1.7782332918234552e+18, 2.030861880968381e+18, 2.050845330803425e+18, 2.0888686418062546e+18, 2.0875612178994248e+18, 2.0629979367805294e+18], "accuracy": [0.07172103971242905, 0.07515519857406616, 0.07858935743570328, 0.07555144280195236, 0.07396645098924637, 0.07766477018594742], "val_loss": [1.5811763750915464e+18, 1.5811763750915464e+18, 1.5811763750915464e+18, 1.5811763750915464e+18, 1.5811763750915464e+18, 1.5811763750915464e+18], "val_accuracy": [0.04533333331346512, 0.04533333331346512, 0.04533333331346512, 0.04533333331346512, 0.04533333331346512, 0.04533333331346512]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 3, 5, 0, 4, 5], [2, 2, 1, 1], [50], [1, 0, 1, 0, 0], [0, 1, 0, 1, 1], [2, 1], [0, 0, 0], [88, 49, 34], [1], [], [], [], [], [0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7, 2, 5, 9], [3, 0, 1, 1], [28, 1, 9, 89]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 3, 1, 0, 0, 0, 0, 6, 3, 3, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), tf.math.subtract(tf.math.add(beta, tf.constant(4.74768924e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.constant(4.18339400e-02, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(sigma, tf.math.multiply(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32), tf.math.negative(alpha)))", "other_info": {"loss": [2.3032725054779073, 2.3016939567237906, 2.3029734342011006, 2.3031127524020065, 2.302415043088061, 2.3026039762551114], "accuracy": [0.09100515395402908, 0.0882314071059227, 0.09060890227556229, 0.08915598690509796, 0.0886276587843895, 0.09272222965955734], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 0, 1, 0, 1, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 3, 5, 0, 4, 5], [1, 2, 1, 1], [50], [0, 1, 1], [0, 1, 1], [2, 1], [3, 4], [88, 65, 34], [1], [], [], [], [], [0, 0, 1, 0, 1, 0, 0, 1, 1], [6, 3, 0, 5, 7], [1, 0, 1, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 9, 5, 4, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(grad, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))), tf.math.square(tf.math.add(alpha, sigma)))", "other_info": {"loss": [2.3032725054779073, 2.3016939567237906, 2.3029734342011006, 2.3031127524020065, 2.302415043088061, 2.3026039762551114], "accuracy": [0.09100515395402908, 0.0882314071059227, 0.09060890227556229, 0.08915598690509796, 0.0886276587843895, 0.09272222965955734], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 1, 0], [1, 1, 1], [2], [3, 4], [8], [1], [], [], [], [], [0, 0, 0, 0, 1, 1, 0, 1, 1], [6, 3, 0, 5, 7], [1, 0, 0, 3], [12, 97]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 9, 5, 4, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.negative(tf.math.square(alpha)), tf.constant(5.12469082e-04, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.303272572931691, 2.301694752942963, 2.302974977167039, 2.303114646240988, 2.30241753525659, 2.302606733767049], "accuracy": [0.09100515395402908, 0.0882314071059227, 0.09060890227556229, 0.08915598690509796, 0.0886276587843895, 0.09272222965955734], "val_loss": [1.9712326186043876, 1.9712329592023576, 1.9712333679199219, 1.971233912876674, 1.9712342534746443, 1.9712345940726144], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [1, 2, 1, 1], [50], [1, 1, 1], [0, 1, 1], [2, 5, 6, 5, 3, 3, 3, 1, 3, 1, 6, 0], [2, 4, 5, 5, 1, 4, 2, 4, 2, 3, 2], [8], [1], [], [2, 0, 5, 4], [], [], [0, 0, 1, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7], [1, 2, 0, 3], [7, 33, 9, 89]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 9, 5, 4, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.math.negative(tf.math.square(beta))), tf.math.add(tf.constant(1.86692945e-04, shape=shape, dtype=tf.float32), sigma))", "other_info": {"loss": [2.3032725054779073, 2.3016939567237906, 2.3029734342011006, 2.3031127524020065, 2.302415043088061, 2.3026039762551114], "accuracy": [0.09100515395402908, 0.0882314071059227, 0.09060890227556229, 0.08915598690509796, 0.0886276587843895, 0.09272222965955734], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [1, 3, 5, 0, 7, 3], [0, 1, 1, 2, 0], [50], [0, 1, 0, 1, 0, 0], [0, 1, 1], [4], [0, 1, 0], [8, 21], [1], [], [], [], [], [0, 0, 0, 0, 1, 1, 0, 1, 1, 1], [6, 3, 1, 5, 7], [1, 0, 0, 3, 3], [28, 57, 57, 4]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 1, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 10, 5, 5, 2], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, alpha))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.math.subtract(tf.math.square(alpha), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.add(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), sigma)), sigma)", "other_info": {"loss": [2.3032725054779073, 2.3016939567237906, 2.3029734342011006, 2.3031127524020065, 2.302415043088061, 2.3026039762551114], "accuracy": [0.09100515395402908, 0.0882314071059227, 0.09060890227556229, 0.08915598690509796, 0.0886276587843895, 0.09272222965955734], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]