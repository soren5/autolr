[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 6, 8, 2, 9, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 0, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [38, 70, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8188571333885193, "mapping_values": [1, 7, 7, 5, 2, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.sqrt(tf.math.add(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2746148109436035, 2.11299729347229, 1.973020076751709, 1.3846888542175293, 1.0300477743148804, 0.8215603232383728, 0.7197663187980652, 0.7285906076431274, 0.6492842435836792, 0.6769921183586121, 0.6290178298950195, 0.6115264892578125, 0.5832218527793884, 0.5670146346092224, 0.5676462054252625, 0.5518355965614319, 0.5325911641120911, 0.5313751697540283, 0.5323476195335388, 0.518237829208374, 0.510596752166748, 0.48673322796821594, 0.481609970331192, 0.5012377500534058, 0.469296395778656], "accuracy": [0.2891295850276947, 0.2285034954547882, 0.34605732560157776, 0.5235767960548401, 0.6382247805595398, 0.6886804699897766, 0.7263241410255432, 0.7256637215614319, 0.7548540234565735, 0.7424382567405701, 0.7564390301704407, 0.7724210619926453, 0.783119797706604, 0.7887993454933167, 0.7865539789199829, 0.7903843522071838, 0.8030643463134766, 0.8037247657775879, 0.8064984679222107, 0.8113855719566345, 0.8123101592063904, 0.8169330358505249, 0.8211596608161926, 0.8119139075279236, 0.826310932636261], "val_loss": [1.6175386905670166, 1.4237841367721558, 1.2505594491958618, 1.3095283508300781, 0.8195429444313049, 0.7046701908111572, 0.6109769940376282, 0.5679699182510376, 0.5630331635475159, 0.5579506158828735, 0.5636764168739319, 0.5380982160568237, 0.4828025698661804, 0.5408645272254944, 0.5059319138526917, 0.52144455909729, 0.4623585641384125, 0.575264036655426, 0.482815682888031, 0.43102195858955383, 0.43444257974624634, 0.4480859339237213, 0.45797988772392273, 0.4377678334712982, 0.4439617395401001], "val_accuracy": [0.3503333330154419, 0.4416666626930237, 0.5329999923706055, 0.5866666436195374, 0.687333345413208, 0.7153333425521851, 0.7599999904632568, 0.7749999761581421, 0.7793333530426025, 0.7566666603088379, 0.7933333516120911, 0.7900000214576721, 0.8176666498184204, 0.7826666831970215, 0.7913333177566528, 0.8046666383743286, 0.8316666483879089, 0.765999972820282, 0.8159999847412109, 0.8336666822433472, 0.8330000042915344, 0.8220000267028809, 0.8256666660308838, 0.8246666789054871, 0.8233333230018616]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [1, 6, 3, 8, 8, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 0, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [47, 70, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1], [9, 6, 1, 9, 7], [0, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8122857213020325, "mapping_values": [1, 47, 47, 26, 21, 12, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 4, 2, 2, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.multiply(tf.math.sqrt(tf.math.sqrt(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.math.pow(tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), grad)))))), grad), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(grad, tf.math.multiply(tf.math.pow(tf.math.multiply(tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), tf.math.square(grad)), tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.pow(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))))), grad), grad))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2746143341064453, 2.113389730453491, 1.9945939779281616, 1.3164470195770264, 0.9628180861473083, 0.801176130771637, 0.7224933505058289, 0.6681399345397949, 0.6606576442718506, 0.6619561314582825, 0.6338245272636414, 0.6077996492385864, 0.5822752714157104, 0.5718417167663574, 0.5768659114837646, 0.5413596630096436, 0.5297815799713135, 0.547321081161499, 0.5160695910453796, 0.5086231827735901, 0.5063337087631226, 0.4811514914035797, 0.5028900504112244, 0.49831029772758484, 0.4679350256919861, 0.46787217259407043, 0.45767712593078613, 0.4526712894439697, 0.4543251097202301, 0.436217337846756, 0.4481443762779236, 0.437142550945282], "accuracy": [0.2891295850276947, 0.22823932766914368, 0.3357548415660858, 0.5371813774108887, 0.6524897813796997, 0.7000396251678467, 0.7263241410255432, 0.750759482383728, 0.7539294958114624, 0.7497028112411499, 0.7601373791694641, 0.7687227725982666, 0.7794214487075806, 0.7853652238845825, 0.7847048044204712, 0.7984414100646973, 0.8018755912780762, 0.7973847389221191, 0.8136309385299683, 0.8140271902084351, 0.8112534880638123, 0.8214238286018372, 0.8099326491355896, 0.8189142942428589, 0.8281601071357727, 0.828292191028595, 0.8318583965301514, 0.832650899887085, 0.8354246616363525, 0.8413683772087097, 0.8380662798881531, 0.8359529972076416], "val_loss": [1.6175256967544556, 1.435880422592163, 1.3443881273269653, 1.0709047317504883, 0.7096895575523376, 0.6303953528404236, 0.6097933650016785, 0.6294923424720764, 0.6091843247413635, 0.5660367608070374, 0.5426350831985474, 0.5149912238121033, 0.4823044538497925, 0.5178203582763672, 0.47918686270713806, 0.5160034894943237, 0.4778825342655182, 0.5088638663291931, 0.4835878014564514, 0.43781572580337524, 0.434406578540802, 0.4269266426563263, 0.4915115535259247, 0.4550160765647888, 0.4406105577945709, 0.4067195951938629, 0.3958022892475128, 0.41065719723701477, 0.3972660303115845, 0.49938729405403137, 0.41547641158103943, 0.4735996127128601], "val_accuracy": [0.3503333330154419, 0.4273333251476288, 0.5143333077430725, 0.6506666541099548, 0.7116666436195374, 0.7590000033378601, 0.7689999938011169, 0.7393333315849304, 0.7633333206176758, 0.7516666650772095, 0.8053333163261414, 0.7940000295639038, 0.8136666417121887, 0.8080000281333923, 0.8153333067893982, 0.8046666383743286, 0.8223333358764648, 0.7950000166893005, 0.8173333406448364, 0.8273333311080933, 0.8346666693687439, 0.8316666483879089, 0.812333345413208, 0.8173333406448364, 0.8230000138282776, 0.8476666808128357, 0.8536666631698608, 0.8453333377838135, 0.8503333330154419, 0.7983333468437195, 0.8360000252723694, 0.8226666450500488]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 6, 3, 6, 9, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 0, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [47, 70, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8114285469055176, "mapping_values": [1, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2746129035949707, 2.120037794113159, 1.6451663970947266, 1.165292739868164, 0.987050473690033, 0.8530882000923157, 0.7702158093452454, 0.7129119634628296, 0.6798306703567505, 0.6669797897338867, 0.6424396634101868, 0.6104469895362854, 0.633341908454895, 0.576134204864502, 0.5822727084159851, 0.5416620969772339, 0.5499067902565002, 0.553555965423584, 0.5255192518234253, 0.5056775808334351, 0.5066078305244446, 0.49836617708206177, 0.4812988340854645, 0.4763757288455963, 0.47318899631500244, 0.4549252688884735, 0.4463430643081665, 0.44355353713035583, 0.44619879126548767, 0.4376485049724579, 0.4447438716888428], "accuracy": [0.2891295850276947, 0.22599393129348755, 0.44802534580230713, 0.5675604343414307, 0.6250165104866028, 0.6688680648803711, 0.7084929347038269, 0.7329282760620117, 0.7427024245262146, 0.7405890822410583, 0.76106196641922, 0.774270236492157, 0.7593448758125305, 0.7837802171707153, 0.7815347909927368, 0.7957997918128967, 0.7884030938148499, 0.7960638999938965, 0.8098005652427673, 0.8171972036361694, 0.8117818236351013, 0.8166688680648804, 0.8189142942428589, 0.8265751004219055, 0.8281601071357727, 0.8325188159942627, 0.8378021121025085, 0.8359529972076416, 0.8363492488861084, 0.8359529972076416, 0.8333113193511963], "val_loss": [1.617619276046753, 1.4094884395599365, 1.1666737794876099, 1.090421438217163, 0.7486006021499634, 0.7205541729927063, 0.6410053968429565, 0.6275500655174255, 0.5705806612968445, 0.5828449726104736, 0.5910497307777405, 0.6161669492721558, 0.5025173425674438, 0.5319265723228455, 0.49124544858932495, 0.5263175368309021, 0.5413432121276855, 0.5158272385597229, 0.46338412165641785, 0.44924259185791016, 0.43301013112068176, 0.44520992040634155, 0.4433527886867523, 0.46081453561782837, 0.4286934435367584, 0.4073512852191925, 0.4000512361526489, 0.4323136508464813, 0.39771929383277893, 0.4597553014755249, 0.42891624569892883], "val_accuracy": [0.3503333330154419, 0.4636666774749756, 0.578000009059906, 0.5860000252723694, 0.7023333311080933, 0.7246666550636292, 0.7563333511352539, 0.746999979019165, 0.7723333239555359, 0.7459999918937683, 0.7703333497047424, 0.746666669845581, 0.8006666898727417, 0.8043333292007446, 0.8026666641235352, 0.7900000214576721, 0.7979999780654907, 0.7963333129882812, 0.8246666789054871, 0.8339999914169312, 0.8396666646003723, 0.8270000219345093, 0.8270000219345093, 0.8143333196640015, 0.8333333134651184, 0.8546666502952576, 0.8483333587646484, 0.8339999914169312, 0.8533333539962769, 0.8159999847412109, 0.8376666903495789]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 6, 3, 6, 9, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 0, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [47, 70, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8057143092155457, "mapping_values": [1, 10, 10, 6, 4, 2, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2746100425720215, 2.1026201248168945, 1.8160582780838013, 1.4236643314361572, 0.9803584218025208, 0.8303781747817993, 0.7189293503761292, 0.7033365368843079, 0.6678358912467957, 0.6466933488845825, 0.6314918398857117, 0.6020219922065735, 0.583629310131073, 0.5796550512313843, 0.586504340171814, 0.535900890827179, 0.5394466519355774, 0.5452991724014282, 0.5196518301963806, 0.516180157661438], "accuracy": [0.28926166892051697, 0.2343151569366455, 0.3617751896381378, 0.507330596446991, 0.6325452327728271, 0.694360077381134, 0.7260599732398987, 0.7388719916343689, 0.7494386434555054, 0.7569673657417297, 0.7621186375617981, 0.772288978099823, 0.783119797706604, 0.7843085527420044, 0.7792893648147583, 0.7994980812072754, 0.7928939461708069, 0.7996301651000977, 0.8117818236351013, 0.8084797263145447], "val_loss": [1.6181514263153076, 1.5324287414550781, 1.8095654249191284, 0.9767652750015259, 0.7601608037948608, 0.6533952355384827, 0.7418606877326965, 0.6090932488441467, 0.5537606477737427, 0.5705347657203674, 0.5722787380218506, 0.5183089375495911, 0.47945931553840637, 0.5296684503555298, 0.4749208688735962, 0.5078572630882263, 0.516729474067688, 0.5230696797370911, 0.5119153261184692, 0.45625436305999756], "val_accuracy": [0.3490000069141388, 0.41366666555404663, 0.46966665983200073, 0.6340000033378601, 0.6943333148956299, 0.7490000128746033, 0.6936666369438171, 0.7583333253860474, 0.784333348274231, 0.7540000081062317, 0.7923333048820496, 0.8063333630561829, 0.8103333115577698, 0.8013333082199097, 0.8213333487510681, 0.8086666464805603, 0.8083333373069763, 0.7953333258628845, 0.8019999861717224, 0.8153333067893982]}}, {"genotype": [[0], [0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [8, 6, 3, 4, 9, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 0, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [38, 70, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [2, 6, 1, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [0, 2, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8048571348190308, "mapping_values": [1, 10, 10, 6, 4, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))), grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.274737596511841, 2.137418270111084, 1.7093716859817505, 1.4058979749679565, 0.9689369797706604, 0.8487481474876404, 0.7214671969413757, 0.7049435377120972, 0.6871637105941772, 0.6539267301559448, 0.6552768349647522, 0.6204724311828613, 0.580994725227356, 0.5838443040847778, 0.5744059681892395, 0.5392065048217773, 0.5403473973274231, 0.5549491047859192], "accuracy": [0.28926166892051697, 0.22137102484703064, 0.39043718576431274, 0.4971602261066437, 0.6456214785575867, 0.683529257774353, 0.7290979027748108, 0.7351737022399902, 0.7433628439903259, 0.7485140562057495, 0.7523444890975952, 0.7676661014556885, 0.7848368883132935, 0.7835160493850708, 0.7853652238845825, 0.7988376617431641, 0.7935543656349182, 0.7988376617431641], "val_loss": [1.6210451126098633, 1.4781471490859985, 1.6863481998443604, 1.0257136821746826, 0.7451428174972534, 0.6463557481765747, 0.6699307560920715, 0.6551384925842285, 0.5998485684394836, 0.5712612867355347, 0.5993126034736633, 0.5740299224853516, 0.48394888639450073, 0.5455693006515503, 0.4750855267047882, 0.5358230471611023, 0.5283259749412537, 0.5214729905128479], "val_accuracy": [0.3476666808128357, 0.4416666626930237, 0.44699999690055847, 0.6903333067893982, 0.7023333311080933, 0.746999979019165, 0.7366666793823242, 0.7440000176429749, 0.7649999856948853, 0.7516666650772095, 0.7866666913032532, 0.7926666736602783, 0.8270000219345093, 0.7940000295639038, 0.8143333196640015, 0.7850000262260437, 0.8019999861717224, 0.7990000247955322]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 6, 3, 6, 5, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 0, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [47, 70, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [0, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [0, 2, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8048571348190308, "mapping_values": [1, 47, 47, 26, 21, 12, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 4, 2, 2, 1], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.square(tf.math.add(alpha, tf.math.subtract(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.pow(grad, grad))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(grad, tf.math.multiply(tf.math.pow(tf.math.multiply(tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))), tf.math.square(grad)), tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)), tf.constant(7.52336199e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.pow(alpha, tf.constant(9.95290886e-01, shape=shape, dtype=tf.float32)))))), grad), grad))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.2746741771698, 2.1495611667633057, 1.7628123760223389, 1.2239272594451904, 0.9418874979019165, 0.857078492641449, 0.7127509713172913, 0.6949103474617004, 0.6771093010902405, 0.6409538984298706, 0.6542385220527649, 0.6026044487953186, 0.5767046213150024, 0.5703213214874268, 0.574112594127655, 0.5421944260597229, 0.5346231460571289, 0.5381554961204529], "accuracy": [0.28939375281333923, 0.21423853933811188, 0.3835688829421997, 0.5472196340560913, 0.6553955674171448, 0.6818121671676636, 0.7271166443824768, 0.7445515990257263, 0.7442874312400818, 0.7580240368843079, 0.7531369924545288, 0.7736098170280457, 0.7829877138137817, 0.7907806038856506, 0.7877426743507385, 0.7955356240272522, 0.7965922355651855, 0.802271842956543], "val_loss": [1.6213281154632568, 1.5637528896331787, 1.490754246711731, 0.9371315240859985, 0.8399034142494202, 0.640328049659729, 0.715650200843811, 0.5780344009399414, 0.5792105793952942, 0.5797539353370667, 0.5764874815940857, 0.5675582885742188, 0.48181578516960144, 0.515077531337738, 0.47386258840560913, 0.5064058303833008, 0.5298593640327454, 0.5068519711494446], "val_accuracy": [0.34700000286102295, 0.38233333826065063, 0.47433334589004517, 0.6576666831970215, 0.6756666898727417, 0.7516666650772095, 0.7210000157356262, 0.7749999761581421, 0.7680000066757202, 0.7536666393280029, 0.7916666865348816, 0.7753333449363708, 0.8266666531562805, 0.8100000023841858, 0.8149999976158142, 0.8113333582878113, 0.8016666769981384, 0.8023333549499512]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 6, 3, 6, 2, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 0, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [86, 77, 65, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [0, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8042857050895691, "mapping_values": [1, 33, 33, 18, 15, 9, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 35, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, grad)), grad), tf.constant(9.96148968e-01, shape=shape, dtype=tf.float32))), tf.math.pow(tf.constant(9.58166060e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32), grad)), tf.math.add(alpha, tf.math.add(alpha, tf.math.add(tf.math.multiply(tf.math.pow(tf.math.add(alpha, tf.math.multiply(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, grad))), tf.math.pow(grad, tf.math.square(tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32))))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.274609327316284, 2.103201150894165, 1.8198928833007812, 1.4240750074386597, 0.9277797937393188, 0.8288535475730896, 0.7316790223121643, 0.7015314698219299, 0.6839514374732971, 0.6532363891601562, 0.6333826780319214, 0.6238564848899841, 0.6061581969261169, 0.5729690790176392, 0.5830967426300049, 0.5523965358734131, 0.540615975856781, 0.5358557105064392, 0.5191083550453186, 0.5157158970832825], "accuracy": [0.28926166892051697, 0.23444722592830658, 0.36600184440612793, 0.4983489513397217, 0.6516972780227661, 0.6894729733467102, 0.720380425453186, 0.7391361594200134, 0.7424382567405701, 0.7479857206344604, 0.763967752456665, 0.7668735980987549, 0.7726852297782898, 0.7868181467056274, 0.7824593782424927, 0.7948752045631409, 0.7931581139564514, 0.8021397590637207, 0.8098005652427673, 0.81112140417099], "val_loss": [1.6182411909103394, 1.519940733909607, 1.4336793422698975, 0.8725144863128662, 0.724320650100708, 0.6846256256103516, 0.7096227407455444, 0.6032294631004333, 0.593376100063324, 0.5809584259986877, 0.6464896202087402, 0.5938539505004883, 0.4970952570438385, 0.5340881943702698, 0.4785698354244232, 0.5130311846733093, 0.5223590135574341, 0.5160508155822754, 0.4983242154121399, 0.4897271394729614], "val_accuracy": [0.3490000069141388, 0.41366666555404663, 0.4573333263397217, 0.6803333163261414, 0.7129999995231628, 0.7363333106040955, 0.7170000076293945, 0.7630000114440918, 0.765999972820282, 0.7526666522026062, 0.7266666889190674, 0.7536666393280029, 0.8033333420753479, 0.8113333582878113, 0.8223333358764648, 0.8090000152587891, 0.8053333163261414, 0.7996666431427002, 0.8023333549499512, 0.8026666641235352]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [2, 0, 6, 6, 9, 9, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [1, 0, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [47, 70, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 1, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [2, 6, 1, 9, 7], [0, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [0, 2, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8031428456306458, "mapping_values": [1, 8, 8, 6, 2, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, alpha)))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), beta))", "other_info": {"loss": [2.2746148109436035, 2.1078407764434814, 2.010434150695801, 1.3102971315383911, 0.983336865901947, 0.8092889189720154, 0.698390781879425, 0.6788033843040466, 0.6600639224052429, 0.6436752080917358, 0.6570910215377808, 0.6036885976791382, 0.5790855884552002, 0.5807495713233948, 0.5655994415283203, 0.5361244082450867, 0.5257367491722107, 0.5507127642631531, 0.5196093320846558, 0.5151076912879944, 0.5014455318450928, 0.49635180830955505, 0.4825361967086792, 0.495312362909317, 0.46783941984176636, 0.4664473533630371, 0.4517144560813904, 0.45628517866134644, 0.44937583804130554, 0.4370028078556061, 0.44395866990089417, 0.4455927014350891, 0.4407039284706116, 0.43202126026153564], "accuracy": [0.2891295850276947, 0.23074890673160553, 0.32333904504776, 0.5231805443763733, 0.629111111164093, 0.7018887996673584, 0.7407211661338806, 0.7466648817062378, 0.748778223991394, 0.752212405204773, 0.7510236501693726, 0.7676661014556885, 0.7858935594558716, 0.7858935594558716, 0.7860256433486938, 0.7996301651000977, 0.8049134612083435, 0.7971205711364746, 0.8090080618858337, 0.8108572363853455, 0.8136309385299683, 0.8140271902084351, 0.8203672170639038, 0.8171972036361694, 0.8265751004219055, 0.8314621448516846, 0.8350284099578857, 0.833179235458374, 0.8372738361358643, 0.8405758738517761, 0.8358209133148193, 0.8392550349235535, 0.8387266993522644, 0.8385946154594421], "val_loss": [1.6187217235565186, 1.4711687564849854, 1.4687483310699463, 1.0752575397491455, 0.7248007655143738, 0.6274359226226807, 0.662413477897644, 0.5690693259239197, 0.588556170463562, 0.5980790257453918, 0.5332885980606079, 0.5244866609573364, 0.48880550265312195, 0.5087887048721313, 0.4731133282184601, 0.515421450138092, 0.4971417784690857, 0.49145999550819397, 0.4856598675251007, 0.44898444414138794, 0.4330761730670929, 0.43333837389945984, 0.4597906768321991, 0.4438665807247162, 0.4538253843784332, 0.40436455607414246, 0.4022693634033203, 0.4166971743106842, 0.3935379981994629, 0.4494580030441284, 0.4331875741481781, 0.4612920880317688, 0.41569215059280396, 0.4198128283023834], "val_accuracy": [0.34933334589004517, 0.4230000078678131, 0.500333309173584, 0.597000002861023, 0.734666645526886, 0.7590000033378601, 0.7406666874885559, 0.7726666927337646, 0.7713333368301392, 0.7400000095367432, 0.7950000166893005, 0.8003333210945129, 0.8166666626930237, 0.8069999814033508, 0.8169999718666077, 0.8076666593551636, 0.8176666498184204, 0.8023333549499512, 0.8173333406448364, 0.824999988079071, 0.8333333134651184, 0.8373333215713501, 0.8223333358764648, 0.8216666579246521, 0.8193333148956299, 0.8500000238418579, 0.8500000238418579, 0.8423333168029785, 0.8503333330154419, 0.8263333439826965, 0.8323333263397217, 0.8286666870117188, 0.8496666550636292, 0.8330000042915344]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [8, 2, 3, 4, 9, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 0, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [29, 91, 43, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [0, 0, 0, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.8022857308387756, "mapping_values": [1, 8, 8, 5, 3, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.constant(1.56514861e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.99771521e-01, shape=shape, dtype=tf.float32))), tf.constant(2.11963334e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.2746055126190186, 2.11529278755188, 1.8850140571594238, 1.4464757442474365, 0.9498734474182129, 0.8707410097122192, 0.7392925024032593, 0.6970503926277161, 0.6702622175216675, 0.6571779251098633, 0.6320605874061584, 0.6337589025497437, 0.58598393201828, 0.5780906081199646, 0.5755253434181213, 0.5459558963775635, 0.5473119616508484, 0.5480958223342896], "accuracy": [0.2891295850276947, 0.22797517478466034, 0.3726060092449188, 0.5019152164459229, 0.6456214785575867, 0.6796988248825073, 0.7153612375259399, 0.7372870445251465, 0.7516840696334839, 0.7539294958114624, 0.7618544697761536, 0.761590301990509, 0.7843085527420044, 0.7881389260292053, 0.783119797706604, 0.7947431206703186, 0.7956677079200745, 0.7992339134216309], "val_loss": [1.6174589395523071, 1.4187047481536865, 1.3607051372528076, 0.8962607383728027, 0.7591679692268372, 0.6376498937606812, 0.6801864504814148, 0.5938737988471985, 0.5571748614311218, 0.5810882449150085, 0.6283612251281738, 0.561553955078125, 0.4882921576499939, 0.5289434194564819, 0.4782696068286896, 0.5286998152732849, 0.5356570482254028, 0.5201273560523987], "val_accuracy": [0.3499999940395355, 0.44699999690055847, 0.49799999594688416, 0.6756666898727417, 0.7016666531562805, 0.7570000290870667, 0.731333315372467, 0.7683333158493042, 0.781333327293396, 0.750333309173584, 0.7480000257492065, 0.7799999713897705, 0.8233333230018616, 0.8046666383743286, 0.812333345413208, 0.8013333082199097, 0.7996666431427002, 0.7953333258628845]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [6, 6, 8, 4, 9, 9, 6, 0, 3, 3, 2, 2, 3, 2, 5, 4, 2, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 0, 6, 0, 7, 0], [2, 0, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [47, 50, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [3, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [7, 6, 1, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [35, 57, 40, 62]], "fitness": -0.5537142753601074, "mapping_values": [1, 8, 8, 6, 2, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.pow(grad, tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), tf.constant(5.25231076e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(5.07243606e-02, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1636319160461426, 1.3310856819152832, 0.8946316838264465, 0.8292414546012878, 0.7737225890159607, 0.7476570010185242, 0.6797162294387817, 0.6264174580574036, 0.5893087387084961, 0.5695825219154358, 0.5596145391464233, 0.5285599231719971, 0.515960156917572, 0.5057138204574585, 0.4841047525405884, 0.48156970739364624, 0.4628180265426636, 0.4521573781967163, 0.44782382249832153, 0.4301697611808777, 0.4405190944671631, 0.4500369131565094, 0.41101235151290894, 0.4175299108028412, 0.42069560289382935, 0.4311995506286621, 0.4260488748550415, 0.41765713691711426], "accuracy": [0.26680755615234375, 0.5482763051986694, 0.668339729309082, 0.6868313550949097, 0.6970016956329346, 0.7127195596694946, 0.7413815855979919, 0.7512878179550171, 0.778761088848114, 0.7821952104568481, 0.7828556299209595, 0.7969884872436523, 0.7988376617431641, 0.8100647330284119, 0.8123101592063904, 0.8128384351730347, 0.8251221776008606, 0.8241975903511047, 0.8255184292793274, 0.8286884427070618, 0.8347642421722412, 0.82683926820755, 0.8411042094230652, 0.8400475382804871, 0.8384625315666199, 0.833179235458374, 0.834632158279419, 0.8470479249954224], "val_loss": [1.4884295463562012, 0.7679762244224548, 0.7042089700698853, 0.6954377293586731, 0.6519778966903687, 0.588890016078949, 0.5462494492530823, 0.5131530165672302, 0.48453548550605774, 0.4708077311515808, 0.4621671438217163, 0.4519208073616028, 0.4333549439907074, 0.44600361585617065, 0.4174950420856476, 0.4054841995239258, 0.40906110405921936, 0.40892139077186584, 0.4160568118095398, 0.41980841755867004, 0.4308718144893646, 0.40112796425819397, 0.3992074429988861, 0.42383626103401184, 0.4230573773384094, 0.4458792209625244, 0.4398553967475891, 0.4368705749511719], "val_accuracy": [0.5486666560173035, 0.6970000267028809, 0.7193333506584167, 0.7400000095367432, 0.7549999952316284, 0.7746666669845581, 0.784333348274231, 0.7956666946411133, 0.8056666851043701, 0.8169999718666077, 0.8233333230018616, 0.8216666579246521, 0.8379999995231628, 0.8309999704360962, 0.8416666388511658, 0.8433333039283752, 0.8393333554267883, 0.843666672706604, 0.8453333377838135, 0.8550000190734863, 0.8489999771118164, 0.8546666502952576, 0.8573333621025085, 0.8510000109672546, 0.8500000238418579, 0.8536666631698608, 0.8536666631698608, 0.856333315372467]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 6, 3, 6, 0, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 2, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [47, 70, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.2605714201927185, "mapping_values": [1, 47, 47, 26, 21, 10, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 0], "tree_depth": 32, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.negative(tf.math.add(alpha, tf.math.subtract(grad, tf.math.add(alpha, grad)))), tf.math.add(alpha, tf.math.pow(grad, grad))), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), tf.math.multiply(tf.math.add(alpha, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.math.add(grad, tf.math.multiply(tf.math.pow(tf.math.multiply(tf.math.add(alpha, tf.math.pow(alpha, tf.math.add(alpha, tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32)))), tf.math.square(grad)), tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32)), tf.math.add(alpha, tf.constant(6.23645483e-01, shape=shape, dtype=tf.float32)))))), tf.math.add(alpha, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))))), tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.add(tf.math.subtract(tf.math.add(alpha, tf.math.subtract(tf.math.add(tf.math.add(alpha, tf.constant(5.55606489e-05, shape=shape, dtype=tf.float32)), tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32)), tf.math.divide_no_nan(grad, tf.math.add(alpha, tf.math.pow(alpha, tf.constant(9.99847452e-01, shape=shape, dtype=tf.float32)))))), grad), grad))))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(beta)", "other_info": {"loss": [2.9339470863342285, 2.3129525184631348, 2.304576873779297, 2.303684711456299, 2.300959825515747, 3.9601998329162598, 2.312953472137451, 2.304452657699585, 2.3002238273620605, 2.2913241386413574], "accuracy": [0.20776647329330444, 0.10210011899471283, 0.10315678268671036, 0.10196803510189056, 0.11174217611551285, 0.18874652683734894, 0.09919429570436478, 0.09945846349000931, 0.10751552134752274, 0.11094967275857925], "val_loss": [2.3223867416381836, 2.3046045303344727, 2.3030941486358643, 2.302873373031616, 2.240452766418457, 2.319328546524048, 2.305865526199341, 2.30246901512146, 2.299281358718872, 2.2803688049316406], "val_accuracy": [0.09933333098888397, 0.10166666656732559, 0.10066666454076767, 0.09933333098888397, 0.19966666400432587, 0.09966666996479034, 0.10233332961797714, 0.10199999809265137, 0.11133333295583725, 0.13866665959358215]}}, {"genotype": [[0], [0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 6, 8, 2, 9, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [1, 2, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [47, 70, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [7, 6, 1, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [0, 57, 40, 62]], "fitness": -0.10171428322792053, "mapping_values": [1, 9, 9, 6, 3, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.sqrt(tf.math.add(alpha, tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), tf.math.subtract(tf.math.add(alpha, grad), tf.math.add(alpha, grad)))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302849769592285, 2.300493001937866, 2.301572561264038, 2.303474187850952, 2.302290678024292, 2.3014519214630127, 2.30237078666687, 2.3028345108032227, 2.3005621433258057, 2.3022332191467285, 2.302443265914917, 2.3032281398773193, 2.301448345184326, 2.3020286560058594, 2.2990739345550537, 2.3022758960723877, 2.3005928993225098, 2.2996528148651123, 2.300196647644043, 2.3000168800354004, 2.2996866703033447, 2.300227642059326, 2.300736427307129, 2.300325393676758, 2.3003780841827393, 2.298668146133423, 2.301684617996216, 2.2991161346435547, 2.3005363941192627, 2.299589157104492, 2.299821138381958, 2.299015760421753, 2.2986721992492676, 2.2981483936309814, 2.3002164363861084, 2.2987914085388184, 2.3003578186035156, 2.298492908477783, 2.298741102218628, 2.297658920288086, 2.2995457649230957, 2.298102855682373, 2.2980425357818604, 2.2984049320220947, 2.2994182109832764, 2.299570322036743, 2.298938274383545, 2.297933578491211, 2.297699451446533, 2.2983782291412354, 2.2982373237609863, 2.2989442348480225, 2.2967164516448975, 2.2980315685272217, 2.297128438949585, 2.298259735107422, 2.297776937484741, 2.297619104385376, 2.2961299419403076, 2.2970943450927734, 2.2982473373413086, 2.2969467639923096, 2.2944416999816895, 2.2959465980529785, 2.2962453365325928, 2.2975552082061768, 2.297959089279175, 2.2962446212768555, 2.29807186126709, 2.2951321601867676, 2.296628952026367, 2.2964329719543457, 2.296438455581665, 2.2947847843170166, 2.2952654361724854, 2.295267105102539, 2.294576406478882, 2.295177698135376, 2.2948198318481445, 2.2948837280273438, 2.2944068908691406, 2.296077251434326, 2.294299602508545, 2.295321464538574, 2.295041084289551, 2.294555187225342, 2.2945263385772705, 2.2942452430725098, 2.294081687927246, 2.2933807373046875, 2.294783353805542, 2.2933318614959717, 2.293541669845581, 2.293667793273926, 2.2937893867492676, 2.293393850326538, 2.29179310798645, 2.2923409938812256, 2.294300079345703, 2.2935574054718018], "accuracy": [0.08836349099874496, 0.09047681838274002, 0.09628847241401672, 0.08532558381557465, 0.0878351628780365, 0.09470347315073013, 0.09417514503002167, 0.0948355570435524, 0.09826971590518951, 0.0878351628780365, 0.09087307006120682, 0.09245806187391281, 0.09642054885625839, 0.09206181764602661, 0.10077928751707077, 0.09457138925790787, 0.09734513610601425, 0.10196803510189056, 0.09377889335155487, 0.09879804402589798, 0.09391097724437714, 0.0944393053650856, 0.09668471664190292, 0.09774138033390045, 0.09126931428909302, 0.0944393053650856, 0.09417514503002167, 0.09893012791872025, 0.09589222073554993, 0.09549596905708313, 0.09576013684272766, 0.09747721254825592, 0.09721305221319199, 0.10685510188341141, 0.09311848133802414, 0.09879804402589798, 0.09826971590518951, 0.10130762308835983, 0.09826971590518951, 0.10355303436517715, 0.10315678268671036, 0.10302469879388809, 0.1014397069811821, 0.09826971590518951, 0.09576013684272766, 0.09668471664190292, 0.09959053993225098, 0.09840179979801178, 0.10460969805717468, 0.10210011899471283, 0.10962884873151779, 0.10434553027153015, 0.10698718577623367, 0.09932637959718704, 0.10328886657953262, 0.10619468986988068, 0.10408136248588562, 0.10513802617788315, 0.10711926966905594, 0.10157178342342377, 0.09774138033390045, 0.109232597053051, 0.11174217611551285, 0.10381719470024109, 0.10487385839223862, 0.10817593336105347, 0.10117553919553757, 0.09694888442754745, 0.10421344637870789, 0.10777968913316727, 0.10817593336105347, 0.10355303436517715, 0.09721305221319199, 0.10606260597705841, 0.10606260597705841, 0.10896842926740646, 0.1138555034995079, 0.10659094154834747, 0.10394927859306335, 0.10870426893234253, 0.11068551242351532, 0.10500594228506088, 0.10619468986988068, 0.10830801725387573, 0.10408136248588562, 0.10857218503952026, 0.11081759631633759, 0.11134592443704605, 0.11372341960668564, 0.11055342853069305, 0.11200633645057678, 0.11359133571386337, 0.11319508403539658, 0.11161009222269058, 0.11055342853069305, 0.11161009222269058, 0.109232597053051, 0.109232597053051, 0.10870426893234253, 0.11213842034339905], "val_loss": [2.299849510192871, 2.2997448444366455, 2.299640417098999, 2.2995362281799316, 2.299431562423706, 2.299325942993164, 2.299221992492676, 2.29911732673645, 2.299014091491699, 2.2989094257354736, 2.2988052368164062, 2.298701286315918, 2.2985970973968506, 2.298491954803467, 2.298387289047241, 2.298283815383911, 2.2981793880462646, 2.2980751991271973, 2.297971725463867, 2.2978672981262207, 2.2977640628814697, 2.2976598739624023, 2.2975544929504395, 2.297450304031372, 2.297344923019409, 2.297241449356079, 2.2971372604370117, 2.29703426361084, 2.296931028366089, 2.296827554702759, 2.2967238426208496, 2.2966198921203613, 2.2965171337127686, 2.2964138984680176, 2.2963106632232666, 2.2962071895599365, 2.2961034774780273, 2.2960007190704346, 2.2958977222442627, 2.295795202255249, 2.2956924438476562, 2.2955894470214844, 2.295485258102417, 2.295382261276245, 2.295278549194336, 2.2951743602752686, 2.295072317123413, 2.294968843460083, 2.2948668003082275, 2.2947633266448975, 2.294661045074463, 2.2945568561553955, 2.2944538593292236, 2.2943503856658936, 2.294247627258301, 2.294145345687866, 2.2940425872802734, 2.2939391136169434, 2.293836832046509, 2.293734312057495, 2.293632745742798, 2.293530225753784, 2.293428421020508, 2.293325662612915, 2.293222665786743, 2.293119430541992, 2.293017864227295, 2.292915105819702, 2.2928130626678467, 2.292710542678833, 2.2926080226898193, 2.2925052642822266, 2.2924022674560547, 2.2923007011413574, 2.2921977043151855, 2.2920961380004883, 2.2919938564300537, 2.291891574859619, 2.2917888164520264, 2.2916862964630127, 2.291583776473999, 2.291482448577881, 2.2913801670074463, 2.2912776470184326, 2.2911744117736816, 2.291071891784668, 2.2909693717956543, 2.290868043899536, 2.2907655239105225, 2.290663003921509, 2.2905609607696533, 2.290459394454956, 2.290355920791626, 2.2902541160583496, 2.2901532649993896, 2.290051221847534, 2.2899484634399414, 2.289846897125244, 2.2897448539733887, 2.2896413803100586], "val_accuracy": [0.04466666653752327, 0.04500000178813934, 0.045666664838790894, 0.046666666865348816, 0.046666666865348816, 0.04699999839067459, 0.04833333194255829, 0.04933333396911621, 0.049666665494441986, 0.05000000074505806, 0.049666665494441986, 0.05066666752099991, 0.05133333429694176, 0.05166666582226753, 0.052000001072883606, 0.052000001072883606, 0.052000001072883606, 0.052000001072883606, 0.05233333259820938, 0.0533333346247673, 0.0533333346247673, 0.05400000140070915, 0.054666668176651, 0.054666668176651, 0.054666668176651, 0.055666666477918625, 0.05666666850447655, 0.05766666680574417, 0.058666665107011795, 0.05999999865889549, 0.06066666543483734, 0.061000000685453415, 0.06133333221077919, 0.061666667461395264, 0.06266666948795319, 0.06333333253860474, 0.06366666406393051, 0.06400000303983688, 0.06466666609048843, 0.06533333659172058, 0.0663333311676979, 0.06666667014360428, 0.0663333311676979, 0.06733333319425583, 0.06800000369548798, 0.06866666674613953, 0.06966666877269745, 0.07000000029802322, 0.07000000029802322, 0.070333331823349, 0.07066666334867477, 0.0716666653752327, 0.07233333587646484, 0.07333333045244217, 0.07433333247900009, 0.07500000298023224, 0.07533333450555801, 0.07733333110809326, 0.07766667008399963, 0.07766667008399963, 0.07866666465997696, 0.07866666465997696, 0.07866666465997696, 0.07966666668653488, 0.07999999821186066, 0.08133333176374435, 0.08266666531562805, 0.08266666531562805, 0.0833333358168602, 0.08366666734218597, 0.08433333039283752, 0.08500000089406967, 0.08500000089406967, 0.08633333444595337, 0.08733333647251129, 0.08766666799783707, 0.08833333104848862, 0.08900000154972076, 0.09033333510160446, 0.09066666662693024, 0.09133332967758179, 0.09200000017881393, 0.09200000017881393, 0.09333333373069763, 0.09399999678134918, 0.09433333575725555, 0.09466666728258133, 0.09466666728258133, 0.09466666728258133, 0.09533333033323288, 0.09566666930913925, 0.09666666388511658, 0.0976666659116745, 0.09833333641290665, 0.0989999994635582, 0.10000000149011612, 0.10066666454076767, 0.10066666454076767, 0.10066666454076767, 0.10133333504199982]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 6, 3, 6, 9, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 0, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [44, 70, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [2, 6, 1, 9, 7], [0, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 8, 2, 4, 2, 1, 2, 3], [0, 2, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 10, 10, 6, 4, 3, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 3, 2, 1, 1], "tree_depth": 20, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.constant(2.47663801e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.math.subtract(tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))), grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.sqrt(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [296639520.0, 5439063040.0, 25168158720.0, 71145955328.0, 152496390144.0, 279938105344.0], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.10421344637870789, 0.1018359512090683, 0.09681680053472519, 0.09787346422672272], "val_loss": [1288504576.0, 10303055872.0, 34767171584.0, 82404909056.0, 160938950656.0, 278093496320.0], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 6, 3, 6, 9, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 0, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [47, 70, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 2, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 8, 4, 4, 1], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.math.add(tf.math.pow(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), beta)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 6, 3, 6, 9, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [1, 0, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [39, 70, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [0, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [9, 6, 1, 9, 7], [0, 0, 6], [70, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 12, 12, 8, 4, 3, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(alpha, tf.math.add(alpha, tf.constant(1.07052146e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, tf.math.pow(grad, grad)), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.constant(9.98594080e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3025176525115967, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824, 2.3025851249694824], "accuracy": [0.09866596013307571, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615, 2.3025853633880615], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [2, 0, 6, 6, 9, 9, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 2, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [38, 70, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [1, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [2, 6, 1, 9, 7], [0, 0, 6], [24, 44], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [0, 3, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 6, 2, 3, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, tf.math.negative(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.divide_no_nan(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [68553504.0, 1256311296.0, 5812389888.0, 16429373440.0, 35213795328.0, 64640425984.0], "accuracy": [0.1002509593963623, 0.09998679161071777, 0.10421344637870789, 0.1018359512090683, 0.09681680053472519, 0.09787346422672272], "val_loss": [297679200.0, 2379542016.0, 8028807168.0, 19028754432.0, 37162500096.0, 64213458944.0], "val_accuracy": [0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242, 0.09866666793823242]}}, {"genotype": [[0], [1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 6, 3, 1, 9, 9, 6, 0, 3, 3, 2, 2, 3, 2, 5, 4, 2, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 0, 6, 0, 7, 0], [0, 0, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [47, 70, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 1, 1, 0, 1, 1, 1], [0, 1, 1, 1, 1, 1], [2, 6, 1, 9, 7], [2, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 1, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.10000000149011612, "mapping_values": [1, 8, 8, 6, 2, 4, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 4, 2, 2, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.subtract(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32)))), tf.constant(7.03711536e-03, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, alpha))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07251353561878204, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [9, 6, 0, 6, 9, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 0, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [47, 70, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [0, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [5, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.07085714489221573, "mapping_values": [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.square(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3028314113616943, 2.3004448413848877, 2.301480770111084, 2.303243637084961, 2.302095413208008, 2.301321029663086, 2.3022236824035645, 2.302638292312622, 2.3005475997924805, 2.302030324935913, 2.3021204471588135, 2.3028368949890137, 2.301151990890503, 2.301844358444214, 2.2990763187408447, 2.30208683013916, 2.3005988597869873, 2.2995946407318115, 2.300468921661377, 2.300243377685547, 2.3000433444976807, 2.3006513118743896, 2.301074504852295, 2.3007750511169434, 2.3009185791015625, 2.299435615539551, 2.3019931316375732, 2.3000872135162354, 2.301151752471924, 2.3001468181610107, 2.3006739616394043, 2.300311326980591, 2.299816131591797, 2.299593210220337, 2.30143141746521, 2.3004441261291504, 2.301729202270508, 2.2999963760375977, 2.3006975650787354, 2.2997918128967285, 2.3011627197265625, 2.3004496097564697, 2.3002567291259766, 2.300321340560913, 2.3011786937713623, 2.3013994693756104, 2.300985813140869, 2.300267457962036, 2.3001556396484375, 2.3007476329803467, 2.300889492034912, 2.301030158996582, 2.2993857860565186, 2.3004751205444336, 2.300149917602539, 2.300687789916992, 2.3003246784210205, 2.300088882446289, 2.299131393432617, 2.2999422550201416, 2.3006436824798584, 2.300224781036377, 2.2982864379882812, 2.299574613571167, 2.2996182441711426, 2.301016330718994, 2.30098819732666, 2.2999939918518066, 2.300917387008667, 2.2988600730895996, 2.299900770187378, 2.299718141555786, 2.300184726715088, 2.2995505332946777, 2.299818754196167, 2.2996878623962402, 2.2992565631866455], "accuracy": [0.08875974267721176, 0.09192973375320435, 0.09734513610601425, 0.08585391938686371, 0.08915598690509796, 0.09681680053472519, 0.0948355570435524, 0.09417514503002167, 0.09919429570436478, 0.08889182657003403, 0.08968432247638702, 0.09272222965955734, 0.09787346422672272, 0.09166556596755981, 0.09932637959718704, 0.09232597798109055, 0.09800554811954498, 0.10130762308835983, 0.09245806187391281, 0.09760929644107819, 0.09140139818191528, 0.09272222965955734, 0.0952318087220192, 0.09536388516426086, 0.09021265059709549, 0.09549596905708313, 0.09417514503002167, 0.09298639744520187, 0.09615638852119446, 0.0944393053650856, 0.09457138925790787, 0.09694888442754745, 0.09694888442754745, 0.10355303436517715, 0.09179764986038208, 0.0956280529499054, 0.0952318087220192, 0.1010434553027153, 0.09972262382507324, 0.1002509593963623, 0.09959053993225098, 0.09668471664190292, 0.09945846349000931, 0.0956280529499054, 0.09338264167308807, 0.09087307006120682, 0.09100515395402908, 0.09628847241401672, 0.09760929644107819, 0.10157178342342377, 0.10051512718200684, 0.09932637959718704, 0.1026284471154213, 0.0952318087220192, 0.10038304328918457, 0.1010434553027153, 0.09826971590518951, 0.10051512718200684, 0.10170386731624603, 0.09879804402589798, 0.09430722147226334, 0.09655263274908066, 0.10698718577623367, 0.09774138033390045, 0.10117553919553757, 0.1022322028875351, 0.09509972482919693, 0.0940430611371994, 0.09642054885625839, 0.09681680053472519, 0.10355303436517715, 0.10196803510189056, 0.0936468094587326, 0.09998679161071777, 0.09906221181154251, 0.10091137140989304, 0.10328886657953262], "val_loss": [2.2998206615448, 2.299685478210449, 2.299556255340576, 2.2993929386138916, 2.2992703914642334, 2.2992208003997803, 2.2991409301757812, 2.2990658283233643, 2.299006462097168, 2.298900604248047, 2.29879093170166, 2.298689842224121, 2.2986056804656982, 2.298536777496338, 2.2984812259674072, 2.2984225749969482, 2.2983720302581787, 2.298319101333618, 2.2982919216156006, 2.2982704639434814, 2.29824161529541, 2.2982256412506104, 2.298213243484497, 2.29819917678833, 2.298182249069214, 2.29817795753479, 2.2981581687927246, 2.298163890838623, 2.298152208328247, 2.2981457710266113, 2.298140525817871, 2.2981514930725098, 2.2981574535369873, 2.2981760501861572, 2.2981820106506348, 2.2981913089752197, 2.2981886863708496, 2.2981953620910645, 2.2982051372528076, 2.298229217529297, 2.298220157623291, 2.2982115745544434, 2.2982075214385986, 2.2981832027435303, 2.2981555461883545, 2.2981278896331787, 2.2980995178222656, 2.2980763912200928, 2.298044204711914, 2.2980189323425293, 2.2979893684387207, 2.2979471683502197, 2.297914981842041, 2.2978708744049072, 2.29784893989563, 2.2978124618530273, 2.2977805137634277, 2.297766923904419, 2.297750234603882, 2.2977283000946045, 2.2977116107940674, 2.297703742980957, 2.2977092266082764, 2.297712802886963, 2.297713279724121, 2.2977097034454346, 2.2977030277252197, 2.297714948654175, 2.2977073192596436, 2.297715902328491, 2.297714948654175, 2.297712564468384, 2.297715425491333, 2.297731399536133, 2.2977511882781982, 2.297773838043213, 2.2977917194366455], "val_accuracy": [0.04533333331346512, 0.046666666865348816, 0.04699999839067459, 0.04766666516661644, 0.04899999871850014, 0.04866666719317436, 0.04833333194255829, 0.050333332270383835, 0.050999999046325684, 0.05133333429694176, 0.05166666582226753, 0.05299999937415123, 0.05366666615009308, 0.054666668176651, 0.054999999701976776, 0.05700000002980232, 0.05766666680574417, 0.05766666680574417, 0.058666665107011795, 0.05833333358168602, 0.058666665107011795, 0.05900000035762787, 0.06066666543483734, 0.05999999865889549, 0.061000000685453415, 0.06133333221077919, 0.06199999898672104, 0.06199999898672104, 0.06266666948795319, 0.06300000101327896, 0.06366666406393051, 0.06433333456516266, 0.06433333456516266, 0.06499999761581421, 0.06533333659172058, 0.06599999964237213, 0.06733333319425583, 0.0676666647195816, 0.06833333522081375, 0.0676666647195816, 0.06866666674613953, 0.0689999982714653, 0.07066666334867477, 0.07199999690055847, 0.07333333045244217, 0.07266666740179062, 0.07366666942834854, 0.07366666942834854, 0.07466666400432587, 0.07466666400432587, 0.07500000298023224, 0.07466666400432587, 0.07533333450555801, 0.07633333653211594, 0.07633333653211594, 0.07800000160932541, 0.07999999821186066, 0.08033332973718643, 0.0806666687130928, 0.08100000023841858, 0.08166666328907013, 0.0820000022649765, 0.08299999684095383, 0.08399999886751175, 0.08366666734218597, 0.08399999886751175, 0.08433333039283752, 0.08433333039283752, 0.0846666693687439, 0.08433333039283752, 0.08566666394472122, 0.0860000029206276, 0.08566666394472122, 0.08533333241939545, 0.08500000089406967, 0.08433333039283752, 0.08500000089406967]}}, {"genotype": [[0], [1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [5, 6, 3, 6, 9, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [2, 0, 0, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [47, 70, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.06914285570383072, "mapping_values": [1, 8, 8, 5, 3, 3, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.square(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.divide_no_nan(tf.math.add(alpha, grad), tf.math.add(alpha, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32)))), tf.math.add(alpha, tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3027539253234863, 2.3002076148986816, 2.3011059761047363, 2.302640199661255, 2.3015425205230713, 2.3008618354797363, 2.301711320877075, 2.3020548820495605, 2.300314426422119, 2.3015387058258057, 2.3016061782836914, 2.302273750305176, 2.3008265495300293, 2.3016374111175537, 2.299250602722168, 2.3019192218780518, 2.3006045818328857, 2.2997703552246094, 2.300610065460205, 2.300276279449463, 2.2999985218048096, 2.3004772663116455, 2.30072021484375, 2.3003249168395996, 2.300483226776123, 2.299274206161499, 2.301095724105835, 2.299788236618042, 2.3003616333007812, 2.299793004989624, 2.300279140472412, 2.3000195026397705], "accuracy": [0.08902391046285629, 0.09219389408826828, 0.09787346422672272, 0.08611807972192764, 0.09140139818191528, 0.09576013684272766, 0.09681680053472519, 0.09708096832036972, 0.09998679161071777, 0.09126931428909302, 0.0886276587843895, 0.09206181764602661, 0.09642054885625839, 0.09285431355237961, 0.09840179979801178, 0.09113723784685135, 0.09932637959718704, 0.09959053993225098, 0.09549596905708313, 0.10117553919553757, 0.09126931428909302, 0.09668471664190292, 0.09879804402589798, 0.10196803510189056, 0.09377889335155487, 0.09470347315073013, 0.09760929644107819, 0.09734513610601425, 0.1022322028875351, 0.10051512718200684, 0.10249637067317963, 0.09747721254825592], "val_loss": [2.299656867980957, 2.299363374710083, 2.2991750240325928, 2.298896074295044, 2.2987442016601562, 2.298701763153076, 2.2986152172088623, 2.2985661029815674, 2.2986559867858887, 2.2986154556274414, 2.298581123352051, 2.298571825027466, 2.2985825538635254, 2.298556327819824, 2.2986114025115967, 2.29856014251709, 2.2985260486602783, 2.2984960079193115, 2.2984323501586914, 2.2984073162078857, 2.298346519470215, 2.298280715942383, 2.2982125282287598, 2.298187255859375, 2.2981932163238525, 2.298229932785034, 2.2981910705566406, 2.2982304096221924, 2.298283815383911, 2.2983663082122803, 2.2984392642974854, 2.2985715866088867], "val_accuracy": [0.04699999839067459, 0.04866666719317436, 0.04866666719317436, 0.05166666582226753, 0.05400000140070915, 0.054999999701976776, 0.054999999701976776, 0.05700000002980232, 0.0560000017285347, 0.05700000002980232, 0.057999998331069946, 0.06066666543483734, 0.06366666406393051, 0.06499999761581421, 0.06700000166893005, 0.070333331823349, 0.0729999989271164, 0.07199999690055847, 0.07199999690055847, 0.07333333045244217, 0.07400000095367432, 0.07366666942834854, 0.07533333450555801, 0.07566666603088379, 0.07800000160932541, 0.07800000160932541, 0.07900000363588333, 0.07833333313465118, 0.07733333110809326, 0.07733333110809326, 0.07866666465997696, 0.07666666805744171]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1], [8, 6, 3, 4, 9, 1, 4, 9, 3, 3, 2, 2, 3, 4, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2, 0, 9, 9, 5, 6, 2, 7, 0], [0, 0, 2, 2, 0, 0, 2, 1, 0, 2, 2, 0, 0, 0, 0, 0, 2, 1, 0, 2, 2, 3], [38, 70, 16, 25, 98, 52, 94, 1, 97, 93, 55, 76, 16], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 7, 0, 0, 3, 9, 8, 9, 6, 9, 6, 8, 9], [4, 5, 2, 3, 3, 0, 0, 0, 0, 3, 1, 0, 5, 0], [82, 9, 67, 81, 53, 45], [1, 0, 0, 0, 1, 1, 1], [1, 1, 1, 1, 1, 1], [4, 6, 9, 9, 7], [4, 0, 6], [24, 44], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 2, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [47, 57, 40, 62]], "fitness": -0.06914285570383072, "mapping_values": [1, 8, 8, 5, 3, 3, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.sqrt(tf.math.add(alpha, tf.math.divide_no_nan(tf.math.add(alpha, tf.math.multiply(tf.math.pow(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.math.add(alpha, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))), tf.constant(1.14904229e-03, shape=shape, dtype=tf.float32))), tf.math.add(alpha, grad)))), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3027539253234863, 2.3002076148986816, 2.3011059761047363, 2.302640199661255, 2.3015425205230713, 2.3008623123168945, 2.3017115592956543, 2.3020551204681396, 2.3003134727478027, 2.3015379905700684, 2.301604986190796, 2.302272319793701, 2.3008248805999756, 2.301635503768921, 2.2992477416992188, 2.30191707611084, 2.300602674484253, 2.2997689247131348, 2.3006086349487305, 2.3002753257751465, 2.2999980449676514, 2.300478219985962, 2.300720453262329, 2.3003246784210205, 2.3004841804504395, 2.2992749214172363, 2.3010969161987305, 2.2997896671295166, 2.300363302230835, 2.2997944355010986, 2.3002803325653076, 2.300018787384033], "accuracy": [0.08902391046285629, 0.09219389408826828, 0.09787346422672272, 0.08611807972192764, 0.09140139818191528, 0.09576013684272766, 0.09681680053472519, 0.09708096832036972, 0.09998679161071777, 0.09126931428909302, 0.08849557489156723, 0.09206181764602661, 0.09628847241401672, 0.09285431355237961, 0.09840179979801178, 0.09113723784685135, 0.09932637959718704, 0.09972262382507324, 0.09549596905708313, 0.10130762308835983, 0.09126931428909302, 0.09668471664190292, 0.09879804402589798, 0.10196803510189056, 0.09377889335155487, 0.0948355570435524, 0.09760929644107819, 0.09734513610601425, 0.1022322028875351, 0.10051512718200684, 0.10249637067317963, 0.09760929644107819], "val_loss": [2.299656867980957, 2.299363374710083, 2.2991750240325928, 2.298896551132202, 2.2987444400787354, 2.2987022399902344, 2.2986152172088623, 2.2985658645629883, 2.2986555099487305, 2.298614501953125, 2.298579454421997, 2.298569917678833, 2.298579692840576, 2.298552989959717, 2.2986080646514893, 2.298557996749878, 2.2985243797302246, 2.2984941005706787, 2.2984304428100586, 2.298405885696411, 2.2983458042144775, 2.298280715942383, 2.2982118129730225, 2.298187494277954, 2.2981934547424316, 2.2982301712036133, 2.298192024230957, 2.298231840133667, 2.2982852458953857, 2.2983665466308594, 2.2984390258789062, 2.2985689640045166], "val_accuracy": [0.04699999839067459, 0.04866666719317436, 0.04866666719317436, 0.05166666582226753, 0.05400000140070915, 0.054999999701976776, 0.054999999701976776, 0.05700000002980232, 0.0560000017285347, 0.05700000002980232, 0.057999998331069946, 0.06066666543483734, 0.06366666406393051, 0.06499999761581421, 0.06733333319425583, 0.070333331823349, 0.0729999989271164, 0.07199999690055847, 0.07199999690055847, 0.07333333045244217, 0.07400000095367432, 0.07333333045244217, 0.07533333450555801, 0.07566666603088379, 0.07800000160932541, 0.07766667008399963, 0.07900000363588333, 0.07833333313465118, 0.07733333110809326, 0.07733333110809326, 0.07866666465997696, 0.07666666805744171]}}]