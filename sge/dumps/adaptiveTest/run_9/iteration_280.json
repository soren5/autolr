[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 9, 3, 2, 7, 5, 1, 8, 6, 5, 8, 9], [1, 3, 0, 0, 0, 2, 2, 4, 2, 0], [57, 47, 79, 81, 53, 45], [0, 0, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1], [2, 3, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.8265714049339294, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 9, 6, 4, 6, 5, 4, 1, 1, 4, 2, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.multiply(tf.math.add(alpha, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))), tf.math.divide_no_nan(tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32), tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))))), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.154214602041994, 1.912511055542887, 1.5270745484048915, 1.0778926166293328, 0.9558018051228582, 0.8316578791992083, 0.7780329490523564, 0.732289535037877, 0.6703319280154796, 0.6526793697805862, 0.6419140712507271, 0.6009298406020761, 0.6006379065701297, 0.5836369576723096, 0.5578878345805672, 0.5145148841491732, 0.5469734330596767, 0.5170700193758355, 0.5006505550331742, 0.47987711661448645, 0.47580416439357703, 0.5048445102135897, 0.49408906961964294, 0.45890521989002864, 0.4649288568986705, 0.4352352012417745, 0.42677137204889354, 0.4460377447270698, 0.4124554607256009, 0.41305126039784396, 0.39400751856670496, 0.40970971452136473, 0.395067261052941, 0.40179891422392905, 0.3723023920097938, 0.37684666512507203, 0.38130079865014754, 0.3667424261656577, 0.3723001044975249, 0.3584984434066652, 0.3520675694953496, 0.33779635784128764], "accuracy": [0.2847708463668823, 0.3677189350128174, 0.4714040458202362, 0.5876370072364807, 0.6373002529144287, 0.6782459616661072, 0.7054550051689148, 0.7236824631690979, 0.7465327978134155, 0.7445515990257263, 0.7582882046699524, 0.7681944370269775, 0.7757231593132019, 0.7781006693840027, 0.7897239327430725, 0.802800178527832, 0.789988100528717, 0.8035926818847656, 0.8108572363853455, 0.8272355198860168, 0.8261788487434387, 0.8121780753135681, 0.8158763647079468, 0.8300092220306396, 0.8300092220306396, 0.8401796221733093, 0.837537944316864, 0.834632158279419, 0.8506141901016235, 0.8481045961380005, 0.8560295701026917, 0.8490291833877563, 0.857218325138092, 0.8466516733169556, 0.8643507957458496, 0.8593316674232483, 0.8543124794960022, 0.8618412613868713, 0.8582749962806702, 0.8672566413879395, 0.8676528930664062, 0.8735966086387634], "val_loss": [1.8122586522783553, 1.4449150221688407, 0.8101521389825004, 0.8253898961203439, 0.6422457354409354, 0.6121283599308559, 0.582358581679208, 0.5308844532285418, 0.5802812576293945, 0.5465059961591449, 0.46816866738455637, 0.4760892391204834, 0.5416524069649833, 0.495262827192034, 0.4305275593485151, 0.4473078761781965, 0.4333955645561218, 0.4049031138420105, 0.4194362929889134, 0.42146912642887663, 0.3959934541157314, 0.5291097504752023, 0.3865298458508083, 0.37149723938533236, 0.38075361933026997, 0.3861883282661438, 0.4029520409447806, 0.39638179540634155, 0.37568724155426025, 0.355119560446058, 0.3848531246185303, 0.361072906426021, 0.3597339817455837, 0.34681237595421927, 0.3499047415597098, 0.37070859330041067, 0.35316796813692364, 0.38680120025362286, 0.3581175548689706, 0.33541713442121235, 0.372385459286826, 0.3305960127285549], "val_accuracy": [0.38199999928474426, 0.4596666693687439, 0.656000018119812, 0.6299999952316284, 0.6949999928474426, 0.7076666951179504, 0.7366666793823242, 0.7536666393280029, 0.7333333492279053, 0.749666690826416, 0.7803333401679993, 0.7873333096504211, 0.7473333477973938, 0.7736666798591614, 0.8130000233650208, 0.800000011920929, 0.8096666932106018, 0.8226666450500488, 0.8173333406448364, 0.8076666593551636, 0.8289999961853027, 0.7639999985694885, 0.8306666612625122, 0.8349999785423279, 0.8316666483879089, 0.8299999833106995, 0.8326666951179504, 0.8299999833106995, 0.8356666564941406, 0.8376666903495789, 0.8276666402816772, 0.8413333296775818, 0.8420000076293945, 0.8489999771118164, 0.8479999899864197, 0.840666651725769, 0.8529999852180481, 0.8263333439826965, 0.847000002861023, 0.843666672706604, 0.8383333086967468, 0.8513333201408386]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 6, 3, 4, 7, 5, 6, 8, 6, 5, 8, 9], [1, 3, 0, 5, 2, 3, 2, 4, 2, 0], [57, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1], [2, 3, 8, 9, 7], [4, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.8265714049339294, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 6, 4, 3, 1, 0, 4, 2, 2, 1], "tree_depth": 11, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.multiply(tf.math.add(sigma, grad), tf.math.add(sigma, tf.math.sqrt(sigma)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1543392688842924, 1.9228267179362415, 1.447726289389266, 1.1223915349601077, 0.8952722071798297, 0.8560930055760122, 0.7319236783980694, 0.7168788548552554, 0.65149802300184, 0.6582602763834127, 0.6172746167742204, 0.5998348743372968, 0.5726431907049937, 0.5893955703235778, 0.5519205103571136, 0.514834838914298, 0.521560594287956, 0.5088015834747635, 0.49414067591312083, 0.48928685784890996, 0.47563998221862963, 0.5009744319350823, 0.48848978738349585, 0.4464772406460162, 0.46386552260473435, 0.43489576342981, 0.43126209792506975, 0.4321850721610299], "accuracy": [0.2847708463668823, 0.3607185184955597, 0.490159809589386, 0.5816932916641235, 0.6716417670249939, 0.6671509742736816, 0.7230220437049866, 0.7255316376686096, 0.7489103078842163, 0.7433628439903259, 0.7642319202423096, 0.7614582180976868, 0.7862898111343384, 0.7734777331352234, 0.7901201844215393, 0.8017435073852539, 0.8025360107421875, 0.8055738806724548, 0.8148196935653687, 0.8224804997444153, 0.8224804997444153, 0.8137630224227905, 0.8178576231002808, 0.834632158279419, 0.8289526104927063, 0.8376700282096863, 0.8343679904937744, 0.8374059200286865], "val_loss": [1.8127790178571428, 1.3021364552634103, 0.9596381528036935, 0.7527999707630703, 0.6794797011784145, 0.5683320420128959, 0.5605807815279279, 0.5342391899653843, 0.5399038451058524, 0.5059189966746739, 0.46100761209215435, 0.45622720037187847, 0.47333293301718576, 0.47049416814531597, 0.46082569871629986, 0.4809086663382394, 0.41390253816332134, 0.40345232827322824, 0.4545601095472063, 0.4731206383023943, 0.4098112498010908, 0.5106424944741386, 0.38158345222473145, 0.3781427485602243, 0.38959028891154696, 0.3976775748389108, 0.3974084258079529, 0.40817292247499737], "val_accuracy": [0.3816666603088379, 0.48500001430511475, 0.5820000171661377, 0.6959999799728394, 0.6866666674613953, 0.737333357334137, 0.7570000290870667, 0.7580000162124634, 0.7403333187103271, 0.7710000276565552, 0.7873333096504211, 0.7889999747276306, 0.7900000214576721, 0.7860000133514404, 0.7839999794960022, 0.7820000052452087, 0.8213333487510681, 0.8226666450500488, 0.7979999780654907, 0.7799999713897705, 0.8216666579246521, 0.7689999938011169, 0.8339999914169312, 0.8316666483879089, 0.8270000219345093, 0.8259999752044678, 0.8330000042915344, 0.8273333311080933]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 6, 3, 2, 7, 5, 1, 8, 6, 5, 8, 9], [0, 3, 5, 3, 2, 2, 2, 4, 2, 0], [89, 47, 79, 81, 53, 45], [0, 0, 1, 1, 0, 1], [0, 0, 1, 0, 0, 1], [2, 0, 0, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.8257142901420593, "mapping_values": [1, 1, 1, 0, 1, 0, 18, 18, 10, 8, 1, 4, 2, 2, 0, 0, 4, 2, 2, 1], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.constant(9.99657809e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, grad)))))), tf.math.add(beta, grad)), grad)), beta), tf.math.divide_no_nan(tf.math.add(beta, beta), beta))), tf.math.add(beta, tf.math.square(tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.negative(sigma)), sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.154245748212545, 1.9185627181973077, 1.5439098333685768, 1.1096617985615689, 0.9874059076889269, 0.8096362400158852, 0.8029689275120951, 0.7301476871285535, 0.6631686035920097, 0.6602411905315653, 0.6296774032424234, 0.5988955628272014, 0.6108873090519172, 0.5817925957341661, 0.555294261742671, 0.5297582995354649, 0.5402936532733273, 0.5106894916523528, 0.501164940747886, 0.4932703187696812, 0.4912278506938792, 0.5127643281206431, 0.483305259147545, 0.45516965051431696, 0.4653181460602503, 0.43131186299320257, 0.45555865318626226, 0.4358657086136445, 0.41178780650465857, 0.4107350287121269, 0.40110401939312856, 0.40749441091772776, 0.40540599257340443, 0.40487354152222443, 0.37592786761905383, 0.3786452922405678, 0.37001779474334756, 0.37945220574270133, 0.37073495786864885, 0.3480064898056204, 0.37026922794664385, 0.34049141270814237, 0.3375753291200228, 0.3374231355679333, 0.3560983497335013, 0.32958652426490787, 0.3450321999043049, 0.3209567322604739, 0.32368035471796786, 0.32343386546054836, 0.31006453985063204, 0.30305069068151774, 0.3099351361828898, 0.30038690271788204, 0.290519675826195, 0.2802921873412159], "accuracy": [0.2847708463668823, 0.36520934104919434, 0.4628186523914337, 0.589750349521637, 0.6333377361297607, 0.6901333928108215, 0.6903975605964661, 0.7250033020973206, 0.746268630027771, 0.7433628439903259, 0.7630431652069092, 0.7684586048126221, 0.7700436115264893, 0.7784969210624695, 0.7932901978492737, 0.7944789528846741, 0.7967243194580078, 0.8099326491355896, 0.8131026029586792, 0.8146876096725464, 0.8165367841720581, 0.8098005652427673, 0.8189142942428589, 0.8338396549224854, 0.8322546482086182, 0.8437458872795105, 0.8298771381378174, 0.837537944316864, 0.8500858545303345, 0.8454629778862, 0.8536521196365356, 0.8467837572097778, 0.848368763923645, 0.8441421389579773, 0.8646149635314941, 0.863029956817627, 0.8647470474243164, 0.8555012345314026, 0.8615770936012268, 0.870030403137207, 0.8602562546730042, 0.8716153502464294, 0.8733324408531189, 0.8757099509239197, 0.8659358024597168, 0.876370370388031, 0.8688416481018066, 0.880729079246521, 0.8770307898521423, 0.8767666220664978, 0.8862766027450562, 0.8848236799240112, 0.8835028409957886, 0.8891823887825012, 0.8889182209968567, 0.8947299122810364], "val_loss": [1.812812328338623, 1.3620188576834542, 1.073014259338379, 0.971635069165911, 0.6992392199380058, 0.6419233424322945, 0.587220311164856, 0.5317484821592059, 0.5500338758741107, 0.48511591979435514, 0.4809619869504656, 0.4899301528930664, 0.47630904402051655, 0.4659042017800467, 0.44424242632729666, 0.44958387102399555, 0.42959446566445486, 0.40666736023766653, 0.41436627932957243, 0.4377054827553885, 0.43902978726795744, 0.4840394769396101, 0.38256348030907766, 0.40449037722178866, 0.3782449449811663, 0.4025613410132272, 0.37434455326625277, 0.3940814733505249, 0.3577817848750523, 0.3537324922425406, 0.37334340810775757, 0.36350570406232563, 0.35264383043561665, 0.3496475986071995, 0.3621732677732195, 0.36680666889463154, 0.3428455080304827, 0.3543457644326346, 0.3507636530058725, 0.36082558972494944, 0.3689283217702593, 0.3311923146247864, 0.33317484174455914, 0.36261782475880217, 0.3475595882960728, 0.3501989245414734, 0.3299668686730521, 0.38897677830287386, 0.3713576112474714, 0.34846995558057514, 0.33130602325711933, 0.3442468983786447, 0.3616490534373692, 0.3319137692451477, 0.32707037244524273, 0.3400160585130964], "val_accuracy": [0.3853333294391632, 0.4480000138282776, 0.5239999890327454, 0.6043333411216736, 0.6746666431427002, 0.6986666917800903, 0.7393333315849304, 0.7549999952316284, 0.7356666922569275, 0.7749999761581421, 0.7820000052452087, 0.7689999938011169, 0.7953333258628845, 0.7950000166893005, 0.7996666431427002, 0.7903333306312561, 0.812333345413208, 0.8223333358764648, 0.8169999718666077, 0.7993333339691162, 0.815666675567627, 0.7833333611488342, 0.8343333601951599, 0.8196666836738586, 0.8339999914169312, 0.824999988079071, 0.8379999995231628, 0.8306666612625122, 0.8473333120346069, 0.8460000157356262, 0.8339999914169312, 0.843999981880188, 0.8460000157356262, 0.8510000109672546, 0.8453333377838135, 0.8383333086967468, 0.8539999723434448, 0.8460000157356262, 0.8523333072662354, 0.8393333554267883, 0.8446666598320007, 0.856333315372467, 0.8556666374206543, 0.8373333215713501, 0.8550000190734863, 0.846666693687439, 0.8583333492279053, 0.8360000252723694, 0.8363333344459534, 0.843666672706604, 0.8650000095367432, 0.8529999852180481, 0.8346666693687439, 0.8619999885559082, 0.8619999885559082, 0.8543333411216736]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 8, 3, 2, 7, 5, 1, 8, 6, 5, 8, 9], [1, 3, 2, 0, 0, 2, 2, 4, 2, 0], [80, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1], [4, 0, 8, 9, 7], [3, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57, 26]], "fitness": -0.8220000267028809, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 2, 4, 3, 2, 1, 0, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.sqrt(tf.math.multiply(tf.math.add(beta, alpha), tf.math.add(beta, grad)))), tf.math.add(tf.math.add(beta, tf.math.add(beta, tf.math.add(beta, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.15423559742581, 1.9220933329711076, 1.5139666733063444, 1.2116823650118131, 0.9331071315707942, 0.7741500566018618, 0.7813018168031327, 0.6998653611833268, 0.6523787434610314, 0.6704199968343555, 0.6194084155293441, 0.5915906493689925, 0.585075849515887, 0.5795321527835542, 0.5559907941109059, 0.5213617648761569, 0.5057706739987207, 0.5126224608508556, 0.4979838109948553, 0.49573044211416356, 0.47185584520541, 0.5041764968059728, 0.48098293213308324, 0.4431488260876753, 0.45552672780956716, 0.43909881850196514, 0.4280419421863594, 0.4361089866167015], "accuracy": [0.2847708463668823, 0.3621714413166046, 0.4772156774997711, 0.5587108731269836, 0.6560559868812561, 0.7046625018119812, 0.6947563290596008, 0.7338528633117676, 0.7477215528488159, 0.7425703406333923, 0.7650244235992432, 0.7705719470977783, 0.7812706232070923, 0.7810064554214478, 0.7903843522071838, 0.8001585006713867, 0.8137630224227905, 0.802271842956543, 0.8082155585289001, 0.8222163319587708, 0.8245938420295715, 0.8144234418869019, 0.8150838613510132, 0.8388587832450867, 0.8329150676727295, 0.8356888294219971, 0.8363492488861084, 0.837537944316864], "val_loss": [1.8125878742762975, 1.3196133886064803, 0.9304870196751186, 0.7726454223905291, 0.7186623811721802, 0.5865491288048881, 0.57078070299966, 0.5313628911972046, 0.5564627817698887, 0.5163215228489467, 0.4746520348957607, 0.4534365449632917, 0.5338190964290074, 0.48457792827061247, 0.4195717232567923, 0.46853658131190706, 0.4243257812091282, 0.4196599636759077, 0.4391473276274545, 0.3991846101624625, 0.3975944519042969, 0.46655573163713726, 0.3802302820341928, 0.38203300748552593, 0.4002511331013271, 0.3893183469772339, 0.3917401007243565, 0.4090208666665213], "val_accuracy": [0.38333332538604736, 0.4763333201408386, 0.6460000276565552, 0.6166666746139526, 0.6489999890327454, 0.721666693687439, 0.746666669845581, 0.7523333430290222, 0.7409999966621399, 0.7706666588783264, 0.7773333191871643, 0.7886666655540466, 0.7419999837875366, 0.7860000133514404, 0.8186666369438171, 0.8033333420753479, 0.8119999766349792, 0.8096666932106018, 0.8119999766349792, 0.8236666917800903, 0.8240000009536743, 0.7793333530426025, 0.8339999914169312, 0.8296666741371155, 0.8209999799728394, 0.8333333134651184, 0.8336666822433472, 0.8206666707992554]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 6, 3, 4, 7, 5, 6, 8, 6, 5, 8, 9], [1, 3, 0, 5, 2, 2, 2, 4, 2, 0], [80, 47, 79, 81, 53, 45], [0, 1, 1, 0, 0, 1], [0, 0, 1, 0, 0, 1], [2, 2, 8, 9, 7], [0, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.8197143077850342, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 7, 7, 1, 3, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(beta, grad))))), tf.math.add(beta, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), beta), beta)), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1542173049484874, 1.9220147209396736, 1.4932850310831116, 1.0933016551924954, 0.90266236699473, 0.7969567300447966, 0.7884242804358113, 0.7126137273359796, 0.6534350258704772, 0.6524499947321555, 0.620493772723939, 0.6044573103195924, 0.5832685210040028, 0.5673533794807799, 0.5612458180222356, 0.5253560518024935, 0.5707462221293512, 0.502793678781848, 0.4984974968214517, 0.5149817055148094, 0.47690696700011986, 0.5061704085534826, 0.4767744686617402, 0.4510697598163525, 0.4734809970528206, 0.43451351389483756, 0.4311633255062574, 0.43354914196966315, 0.409551467338589, 0.41777226545744256, 0.4012001822330476, 0.4081331283393364, 0.3995252735957084, 0.40689430541413385, 0.36939682229209836, 0.38323104627978577, 0.3791600174600611, 0.3818358347408366, 0.3684898105712851, 0.34619384108911083], "accuracy": [0.2847708463668823, 0.3615110218524933, 0.4694227874279022, 0.5935807824134827, 0.6553955674171448, 0.6976621150970459, 0.6950204968452454, 0.7308149337768555, 0.7477215528488159, 0.7478536367416382, 0.7647602558135986, 0.763967752456665, 0.78113853931427, 0.7852331399917603, 0.7911768555641174, 0.7979130744934082, 0.7843085527420044, 0.8101968169212341, 0.8156121969223022, 0.8153480291366577, 0.8183859586715698, 0.8096684813499451, 0.8185180425643921, 0.8362171649932861, 0.8253863453865051, 0.8385946154594421, 0.8400475382804871, 0.8411042094230652, 0.8491612672805786, 0.8437458872795105, 0.8527275323867798, 0.8465195894241333, 0.8539162874221802, 0.8455950617790222, 0.8698983192443848, 0.856689989566803, 0.8581429123878479, 0.8593316674232483, 0.8654074668884277, 0.8753136992454529], "val_loss": [1.812201636178153, 1.3154497146606445, 0.7739532845360892, 0.7025419473648071, 0.733808057648795, 0.6271300315856934, 0.5717644350869315, 0.52976507799966, 0.5203657150268555, 0.5494265386036464, 0.47857088702065603, 0.45760442529405865, 0.4728254590715681, 0.5241318259920392, 0.4306721772466387, 0.47666503701891216, 0.41946689571653095, 0.40682991061891827, 0.43601351976394653, 0.4254860707691738, 0.43511570351464407, 0.4607616492680141, 0.381581859929221, 0.40029994930539814, 0.3839892830167498, 0.3955191799572536, 0.4015704223087856, 0.3827417663165501, 0.3835765208516802, 0.3554644669805254, 0.3865281343460083, 0.3592820422989981, 0.36125127758298603, 0.3541505251611982, 0.34435026134763447, 0.3930051326751709, 0.3556250674383981, 0.37689862080982756, 0.35576973642621723, 0.3437850390161787], "val_accuracy": [0.38199999928474426, 0.4883333444595337, 0.6679999828338623, 0.6816666722297668, 0.6623333096504211, 0.6990000009536743, 0.7440000176429749, 0.765333354473114, 0.7493333220481873, 0.746999979019165, 0.778333306312561, 0.7856666445732117, 0.7953333258628845, 0.7566666603088379, 0.8143333196640015, 0.7853333353996277, 0.812333345413208, 0.8186666369438171, 0.8109999895095825, 0.8066666722297668, 0.8116666674613953, 0.7876666784286499, 0.8276666402816772, 0.815666675567627, 0.831333339214325, 0.828000009059906, 0.8303333520889282, 0.8343333601951599, 0.8393333554267883, 0.843999981880188, 0.828000009059906, 0.8473333120346069, 0.8379999995231628, 0.8483333587646484, 0.8573333621025085, 0.8173333406448364, 0.8523333072662354, 0.8396666646003723, 0.8523333072662354, 0.8500000238418579]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 6, 3, 2, 7, 5, 1, 8, 6, 5, 8, 9], [3, 3, 0, 5, 2, 3, 2, 4, 2, 0], [80, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.8142856955528259, "mapping_values": [1, 1, 1, 0, 1, 0, 12, 12, 6, 6, 1, 4, 3, 2, 1, 0, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), grad), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad))), beta)), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.154213694502035, 1.9151623043102626, 1.538573457218196, 1.0852934298750243, 0.9495603655701252, 0.8513060937452436, 0.7612108202532314, 0.7287211344856486, 0.6616558602709324, 0.6767528621102714, 0.6278974623287107, 0.5974018592183238, 0.5783073847965557, 0.6039346007623094, 0.5514581087022614, 0.5201816468458638, 0.5325585580253173, 0.5111779575500002, 0.5168505240472363, 0.49254790719600006, 0.47102023344061333, 0.5356466046823187, 0.479617241571734, 0.45140997990877274, 0.47418849117657325, 0.428865374870556], "accuracy": [0.2847708463668823, 0.3667943477630615, 0.4628186523914337, 0.5893540978431702, 0.6448289752006531, 0.6691322326660156, 0.7074362635612488, 0.722229540348053, 0.7475894689559937, 0.737022876739502, 0.7630431652069092, 0.7675340175628662, 0.7808743715286255, 0.7695152759552002, 0.7921014428138733, 0.8017435073852539, 0.8016114234924316, 0.8042530417442322, 0.8037247657775879, 0.817461371421814, 0.824329674243927, 0.8000264167785645, 0.8216879963874817, 0.8327829837799072, 0.8271034359931946, 0.8432175517082214], "val_loss": [1.8116734368460519, 1.4200881549290247, 0.8793285574231829, 0.7512754712785993, 0.7396694421768188, 0.609758768762861, 0.5659271648951939, 0.5392444133758545, 0.544950144631522, 0.5290987491607666, 0.47379044124058317, 0.46704958166394916, 0.5524840865816388, 0.4698507615498134, 0.4450176102774484, 0.43113191638674053, 0.4357098937034607, 0.41961677585329327, 0.40164592436381746, 0.3977902446474348, 0.3977797372000558, 0.4923865113939558, 0.3840051463672093, 0.4090526444571359, 0.3892498867852347, 0.3991262657301767], "val_accuracy": [0.382666677236557, 0.45133334398269653, 0.6263333559036255, 0.653333306312561, 0.6460000276565552, 0.7179999947547913, 0.7506666779518127, 0.753000020980835, 0.7426666617393494, 0.7603333592414856, 0.781333327293396, 0.7826666831970215, 0.7473333477973938, 0.7953333258628845, 0.7929999828338623, 0.8106666803359985, 0.8046666383743286, 0.8169999718666077, 0.8263333439826965, 0.8309999704360962, 0.8326666951179504, 0.7776666879653931, 0.8303333520889282, 0.8193333148956299, 0.8259999752044678, 0.8230000138282776]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 6, 3, 4, 7, 5, 6, 8, 6, 5, 8, 9], [1, 3, 0, 0, 2, 2, 2, 4, 2, 0], [80, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [3, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.8071428537368774, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 2, 4, 3, 2, 1, 0, 4, 2, 2, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.square(tf.math.divide_no_nan(alpha, grad))), tf.math.add(beta, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)), tf.math.sqrt(beta))), beta)), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.1542151369171183, 1.9143669320261316, 1.4965835871744968, 1.1034674161397833, 0.9298415582303783, 0.8457592519251362, 0.7573206560203286, 0.7208163611263159, 0.6759109985417442, 0.6713651108026913, 0.617220319729786, 0.6076011520728869, 0.5781399497518513, 0.5752317774029708, 0.5589200054744231, 0.526142929405222, 0.5481092487233677, 0.5042576797453168, 0.512410022878313, 0.49076396515419485, 0.4792403406423585, 0.5098479942024629, 0.4823446160121097, 0.44816211551691576, 0.4667626730738504, 0.4427115453185501], "accuracy": [0.2847708463668823, 0.366530179977417, 0.47272488474845886, 0.583410382270813, 0.6568484902381897, 0.6724342703819275, 0.7073041796684265, 0.7255316376686096, 0.7440232634544373, 0.7413815855979919, 0.7631752490997314, 0.7646281719207764, 0.785629391670227, 0.7840443849563599, 0.7940827012062073, 0.8026680946350098, 0.7976489067077637, 0.8067626357078552, 0.8080834746360779, 0.817989706993103, 0.8226125836372375, 0.8098005652427673, 0.8191784620285034, 0.8362171649932861, 0.8296129703521729, 0.8347642421722412], "val_loss": [1.8122242518833704, 1.434215784072876, 0.8597246919359479, 0.7770687001092094, 0.6878526381083897, 0.6217873607363019, 0.5767068011420113, 0.5576384919030326, 0.557460972240993, 0.4858869995389666, 0.47733775206974577, 0.4601879801068987, 0.4661442722593035, 0.4757723297391619, 0.4292903372219631, 0.47904421601976666, 0.4362804378782, 0.4066735931805202, 0.4007487382207598, 0.4069209609712873, 0.40092889751706806, 0.4665640762874058, 0.38129052945545744, 0.3803759813308716, 0.3817910977772304, 0.4013611078262329], "val_accuracy": [0.38199999928474426, 0.45266667008399963, 0.6119999885559082, 0.6276666522026062, 0.6696666479110718, 0.7043333053588867, 0.746666669845581, 0.7360000014305115, 0.7316666841506958, 0.7839999794960022, 0.7786666750907898, 0.7886666655540466, 0.7976666688919067, 0.7906666398048401, 0.8143333196640015, 0.7963333129882812, 0.8040000200271606, 0.8230000138282776, 0.831333339214325, 0.8209999799728394, 0.8326666951179504, 0.7913333177566528, 0.8303333520889282, 0.8309999704360962, 0.8323333263397217, 0.8259999752044678]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 6, 2, 2, 7, 5, 1, 8, 6, 5, 8, 9], [1, 3, 0, 0, 0, 2, 2, 4, 2, 0], [72, 47, 79, 81, 53, 45], [0, 0, 0, 0, 0, 1, 1, 0, 1, 1], [0, 1, 0, 0, 0, 1], [2, 6, 8, 3, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.7991428375244141, "mapping_values": [1, 1, 1, 0, 1, 0, 19, 19, 12, 7, 4, 8, 6, 4, 2, 1, 6, 3, 3, 2], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.add(tf.math.add(alpha, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.subtract(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)))))), tf.math.divide_no_nan(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32), tf.math.square(tf.math.add(beta, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))))), beta)), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))))), tf.math.add(beta, tf.constant(9.98279874e-01, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.math.divide_no_nan(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.math.multiply(sigma, sigma)))), tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3210549954457322, 2.141536736296247, 2.2335858294961004, 2.304353437592498, 2.2972694104609945, 1.9239954710353115, 1.2639485388510043, 0.9540374782957405, 0.8321422265977624, 0.71192260982653, 0.7075252039730746, 0.6823630455368151, 0.6771494806434784, 0.6293224843107966, 0.5898031542691982, 0.6232268811689313, 0.5888634506643031, 0.5750826408425027, 0.58630427169825, 0.5470085036304286], "accuracy": [0.25214633345603943, 0.23774930834770203, 0.1802932173013687, 0.09668471664190292, 0.1266675442457199, 0.3387927711009979, 0.5869766473770142, 0.6629242897033691, 0.6923788189888, 0.7445515990257263, 0.741909921169281, 0.7530049085617065, 0.7555144429206848, 0.7627789974212646, 0.7807422876358032, 0.7672698497772217, 0.7833839654922485, 0.791969358921051, 0.7823272943496704, 0.7989697456359863], "val_loss": [1.788242953164237, 1.8412294387817383, 1.9755543300083704, 1.9732787949698312, 1.9436215673174178, 1.1033015591757638, 0.7618242672511509, 0.6035474027906146, 0.5805800642286029, 0.5364500113895961, 0.5049385343279157, 0.5864791699818203, 0.5025790589196342, 0.5101492915834699, 0.4700326749256679, 0.5009180477687291, 0.5179570743015834, 0.49764188698359896, 0.4822941337312971, 0.4685978719166347], "val_accuracy": [0.3813333213329315, 0.31166666746139526, 0.09833333641290665, 0.09833333641290665, 0.34166666865348816, 0.5709999799728394, 0.6633333563804626, 0.7433333396911621, 0.7613333463668823, 0.7716666460037231, 0.7870000004768372, 0.7559999823570251, 0.7766666412353516, 0.7683333158493042, 0.7896666526794434, 0.7870000004768372, 0.7710000276565552, 0.7846666574478149, 0.7896666526794434, 0.7866666913032532]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 6, 3, 3, 7, 5, 6, 8, 6, 4, 8, 9], [1, 0, 3, 0, 0, 2, 2, 4, 2, 0], [80, 57, 79, 81, 53, 45], [0, 0, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1], [2, 0, 2, 9, 7], [1, 0], [88, 19], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.6497142910957336, "mapping_values": [1, 1, 1, 0, 1, 0, 20, 20, 11, 9, 3, 6, 5, 4, 1, 1, 2, 1, 1, 0], "tree_depth": 28, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.multiply(alpha, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.divide_no_nan(tf.math.add(beta, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.sqrt(grad))))), tf.math.divide_no_nan(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, beta))), beta)), tf.math.add(beta, tf.math.pow(tf.math.add(beta, grad), tf.math.add(beta, tf.math.sqrt(beta))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)), sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.6156578208193757, 2.4015995523381966, 2.2607963821749726, 2.0528857074692706, 2.2668726124452987, 2.0081564459613666, 1.8743938895390413, 1.8552712775681233, 1.8590879956603035, 1.9391211472828596, 1.6021052030697631, 1.7587171636316141, 1.9396716227636612, 1.3940658865194153, 1.7548103061696683, 1.5010576333194723, 1.3422412259184122, 1.3767804238207666, 1.9947951466510356, 1.5243967445912914, 1.4882212009695717, 1.3273844706336695], "accuracy": [0.20591731369495392, 0.11834631860256195, 0.16999074816703796, 0.3249240517616272, 0.1582353711128235, 0.3249240517616272, 0.378549724817276, 0.4500066041946411, 0.36943599581718445, 0.36243560910224915, 0.4785365164279938, 0.4061550796031952, 0.3206973969936371, 0.528992235660553, 0.4554220139980316, 0.48144233226776123, 0.5262184739112854, 0.5242372155189514, 0.31964072585105896, 0.46730947494506836, 0.4865935742855072, 0.5379738211631775], "val_loss": [1.9695660046168737, 1.9422264099121094, 1.81208712714059, 2.024890559060233, 1.3559307030269079, 1.6510844911847795, 1.1932521206992013, 1.420046022960118, 1.6690912246704102, 1.140456301825387, 1.3998034681592668, 1.594654151371547, 1.0041296482086182, 1.533916745867048, 1.3861994743347168, 1.2727299077170235, 0.7905008963176182, 2.1291420800345287, 1.1965432167053223, 1.034179619380406, 1.044909885951451, 1.058901650565011], "val_accuracy": [0.09966666996479034, 0.21166667342185974, 0.3426666557788849, 0.10100000351667404, 0.45766666531562805, 0.40033334493637085, 0.5406666398048401, 0.45366665720939636, 0.33399999141693115, 0.5789999961853027, 0.4246666729450226, 0.4463333189487457, 0.6039999723434448, 0.46166667342185974, 0.4699999988079071, 0.5336666703224182, 0.6639999747276306, 0.10533333569765091, 0.5016666650772095, 0.5756666660308838, 0.6033333539962769, 0.5049999952316284]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 3, 3, 2, 7, 5, 2, 8, 6, 3, 8, 9], [1, 3, 0, 5, 3, 2, 2, 4, 2, 0], [47, 47, 79, 81, 53, 45], [0, 0, 1, 0, 0, 1, 0], [0, 0, 0, 0, 0, 1], [1, 2, 9, 9, 7], [4, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 3, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.1397142857313156, "mapping_values": [1, 1, 1, 0, 1, 0, 20, 20, 12, 8, 2, 5, 4, 4, 0, 2, 4, 2, 2, 0], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.multiply(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.square(tf.math.add(alpha, grad)), tf.math.add(beta, tf.math.sqrt(tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))))), tf.math.divide_no_nan(tf.math.add(beta, grad), grad)), tf.math.add(beta, tf.math.multiply(beta, tf.math.add(beta, tf.math.sqrt(beta)))))), tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))), tf.math.add(sigma, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, sigma))", "other_info": {"loss": [124287203.73280291, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08519349992275238, 0.10751552134752274, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.1554998279593638e+19, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.13566666841506958, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [3, 6, 2, 8, 7, 4, 1, 8, 2, 8, 8, 9], [3, 3, 0, 5, 0, 2, 2, 4, 2, 0], [70, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [3, 0, 8, 9, 7], [0, 0], [71, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [1, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [85, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 8, 4, 4, 2], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.subtract(tf.math.multiply(alpha, tf.constant(9.99232587e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.pow(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32), beta)))", "other_info": {"loss": [2.3022519040337612, 2.302474072360249, 2.3026537070137683, 2.303324939143058, 2.3041392223883173, 2.3041546152661803, 2.311874436192178], "accuracy": [0.10421344637870789, 0.10011887550354004, 0.10579843819141388, 0.09866596013307571, 0.10394927859306335, 0.10276053100824356, 0.09998679161071777], "val_loss": [1.9735986845833915, 1.9736940520150321, 1.974179472242083, 1.975468294961112, 1.9750991548810686, 1.976630619594029, 1.9865201541355677], "val_accuracy": [0.10000000149011612, 0.10366666316986084, 0.09833333641290665, 0.09799999743700027, 0.09799999743700027, 0.10000000149011612, 0.10000000149011612]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 6, 3, 4, 7, 5, 6, 2, 6, 5, 8, 9], [1, 3, 0, 5, 2, 2, 2, 4, 2, 0], [80, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [2, 0, 0, 2, 3, 3, 2], [79, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 20, 20, 12, 8, 2, 4, 3, 2, 1, 0, 4, 2, 2, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(tf.math.add(beta, grad), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))))), tf.math.divide_no_nan(tf.math.square(grad), tf.math.add(beta, beta))), beta), tf.math.add(beta, tf.math.sqrt(tf.math.add(beta, beta))))), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(beta, tf.constant(9.97425690e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09998679161071777, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [2, 9, 3, 2, 7, 5, 1, 8, 6, 5, 8, 9], [1, 3, 0, 0, 0, 2, 2, 4, 2, 0], [57, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [1, 0, 8, 9, 7], [1, 0], [8, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [9, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 2, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, alpha), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302393834950854, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09998679161071777, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 6, 5, 6, 7, 5, 0, 8, 6, 5, 8, 9], [1, 3, 0, 5, 2, 2, 2, 4, 2, 0], [80, 47, 79, 81, 53, 45], [0, 0, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [3, 0], [88, 19], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 6, 5, 1, 5, 5, 4, 1, 1, 7, 4, 3, 2], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))), grad), tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))), grad)), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, sigma))), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.negative(tf.math.pow(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09800554811954498, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 6, 3, 4, 7, 5, 6, 8, 6, 5, 8, 9], [1, 3, 0, 5, 3, 2, 2, 4, 2, 0], [80, 47, 79, 81, 53, 45], [0, 0, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 14, 14, 7, 7, 1, 5, 5, 4, 1, 1, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.pow(tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, alpha))), grad), tf.math.add(beta, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32))), tf.math.add(beta, grad)), tf.math.add(beta, grad))), tf.math.divide_no_nan(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09879804402589798, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 6, 5, 2, 7, 5, 1, 8, 6, 5, 8, 9], [0, 3, 5, 3, 2, 2, 2, 4, 2, 0], [80, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1], [0, 0, 8, 9, 7], [3, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 13, 13, 8, 5, 1, 2, 1, 1, 0, 0, 4, 2, 2, 1], "tree_depth": 26, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(beta, tf.math.square(tf.math.add(tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.subtract(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), grad)))), tf.math.add(beta, grad)), grad))), tf.math.sqrt(beta)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.negative(sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [827453.3614826207, 2.559123905752754, 2.455377404684435, 2.477032588158364, 2.5560771714836426, 2.4521868895262524, 2.4759000852643034, 2.517837973255696, 2.5068151308419195, 2.45820426238668, 2.4784350546674485, 2.5221227532947195], "accuracy": [0.09774138033390045, 0.09972262382507324, 0.09985470771789551, 0.09866596013307571, 0.09972262382507324, 0.10394927859306335, 0.09179764986038208, 0.09787346422672272, 0.09826971590518951, 0.09774138033390045, 0.10051512718200684, 0.09628847241401672], "val_loss": [2.2383289337158203, 2.137012141091483, 2.114513737814767, 2.1549810000828336, 2.049128328050886, 2.168510232652937, 2.139552525111607, 1.9976205144609724, 2.1347667149135043, 2.1491263934544156, 2.060464177812849, 2.1181541170392717], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09833333641290665, 0.09933333098888397, 0.09799999743700027, 0.09833333641290665, 0.10199999809265137, 0.10066666454076767, 0.09933333098888397, 0.09799999743700027, 0.09833333641290665, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1], [3, 3, 2, 2, 7, 4, 1, 8, 6, 8, 8, 9], [1, 3, 0, 5, 2, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [1, 0, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [9, 0, 8, 9, 7], [0, 0], [88, 19], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 1, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, alpha))", "other_info": {"loss": [2.3034989077102366, 2.306109426610773, 2.307634802951694, 2.3106917849369273, 2.312905549215776, 2.318392765315737, 2.3209722188517024, 2.3280278914608674, 2.3326830689492337, 2.3532530423467817, 2.4307068914328553, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09206181764602661, 0.08466517180204391, 0.08149518072605133, 0.08572183549404144, 0.08083476126194, 0.07436270266771317, 0.0754193663597107, 0.07568352669477463, 0.07951393723487854, 0.07792893797159195, 0.08017434924840927, 0.09932637959718704, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.97233213697161, 1.9737883976527624, 1.9755305562700545, 1.9775251661028181, 1.980088574545724, 1.9831971440996443, 1.9866301672799247, 1.9912007195608956, 1.9984769139971053, 2.017451422555106, 3.3623217855181013, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.03166666626930237, 0.02666666731238365, 0.02566666714847088, 0.02500000037252903, 0.03133333474397659, 0.039000000804662704, 0.0560000017285347, 0.07800000160932541, 0.09266666322946548, 0.09933333098888397, 0.09933333098888397, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 6, 3, 2, 2, 3, 1, 8, 6, 5, 8, 9], [1, 3, 0, 5, 2, 1, 2, 4, 2, 0], [80, 47, 79, 81, 53, 45], [0, 0, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [36, 19], [0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [38, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 16, 16, 8, 8, 1, 5, 5, 4, 1, 1, 7, 4, 3, 2], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(tf.math.multiply(tf.math.add(tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), grad)), tf.math.add(beta, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, grad)), tf.math.sqrt(beta)), alpha), tf.math.add(beta, beta))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))), tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(6.13831074e-02, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(alpha), tf.math.pow(tf.constant(8.92170603e-02, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [142.18768943818867, 1.0284453120977948e+27, 2.329138275276731, 2.3392656265138365, 2.3543297217868777, 2.3771134041650277], "accuracy": [0.04371945559978485, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [2256673792.0, 1.993968895503453, 2.0014170237949918, 2.01236629486084, 2.0286965370178223, 2.053910119192941], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [0, 6, 5, 6, 7, 0, 1, 8, 6, 5, 8, 9], [0, 3, 5, 3, 2, 2, 2, 4, 2, 0], [80, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [0, 0, 0, 0, 0, 1], [4, 0, 8, 9, 7], [3, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 19, 26]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 6, 4, 1, 5, 4, 4, 0, 1, 6, 3, 3, 2], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.negative(tf.math.add(beta, tf.math.divide_no_nan(tf.math.square(tf.math.add(beta, tf.math.divide_no_nan(tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32), tf.math.add(tf.math.add(beta, tf.math.negative(grad)), tf.math.add(beta, grad))))), tf.math.add(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.pow(sigma, tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, tf.math.sqrt(tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))))))), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10038304328918457, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [1, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [4, 1, 3, 4, 7, 5, 6, 8, 6, 5, 8, 9], [1, 3, 0, 5, 2, 2, 2, 4, 2, 0], [80, 47, 79, 81, 53, 45], [0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 4, 5, 1, 4, 2, 2, 0, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.pow(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.subtract(grad, tf.math.multiply(tf.math.add(beta, tf.constant(9.97895596e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.pow(grad, beta)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.negative(sigma)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.302982334164171, 2.3037696067667466, 2.303319686533926, 2.304051366448796, 2.3027414985541355, 2.303737042996043], "accuracy": [0.09391097724437714, 0.08915598690509796, 0.09060890227556229, 0.09192973375320435, 0.09351472556591034, 0.08968432247638702], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]