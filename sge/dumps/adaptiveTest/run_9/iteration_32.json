[{"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 0, 1, 0, 0, 0, 1], [0, 1, 1], [2], [5, 4], [8, 0, 19], [1, 1, 0, 1], [1], [], [2], [], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7], [1, 0, 0, 3], [28, 57]], "fitness": -0.7722856998443604, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 6, 3, 3, 2], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), tf.math.negative(tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.289142736496155, 2.2558046687847555, 2.2166844481537606, 2.1579569388752238, 2.0736953713370823, 1.9545409055260652, 1.806746082535163, 1.651405848547956, 1.5083103612775832, 1.3875280105678742, 1.2792586743351397, 1.2173140584958022, 1.158240652339428, 1.0933810344005006, 1.0469446742791289, 1.0248169947955366, 0.9988087693131155, 0.9701775496016404, 0.936764754741703, 0.9364315604080283, 0.90067212995899, 0.887226744972562, 0.8697802445136199, 0.8627420846166675, 0.8464821857263573, 0.8363930247778182, 0.8228528953231542, 0.8088941947265371, 0.807176576747461, 0.8023038578307419, 0.7976050348471436, 0.7846537502277103, 0.7720747086680907, 0.7639998306435775, 0.7695252257976801, 0.7665226949346127, 0.7487822288708554, 0.7438419695779742, 0.7407292934724321, 0.7359961169884898, 0.7378008709749321], "accuracy": [0.12349755316972733, 0.21582353115081787, 0.28463876247406006, 0.3427552580833435, 0.3815876245498657, 0.41751420497894287, 0.4531765878200531, 0.4785365164279938, 0.5131422281265259, 0.537709653377533, 0.5686171054840088, 0.5765420794487, 0.5979394912719727, 0.6152423620223999, 0.6312243938446045, 0.6337339878082275, 0.6448289752006531, 0.661471426486969, 0.6655659675598145, 0.6612072587013245, 0.6715096831321716, 0.6839255094528198, 0.6909258961677551, 0.6951525807380676, 0.6984546184539795, 0.69673752784729, 0.698718786239624, 0.7051908373832703, 0.7096816897392273, 0.7046625018119812, 0.7071720957756042, 0.7113987803459167, 0.7168141603469849, 0.7209087014198303, 0.7168141603469849, 0.7176066637039185, 0.724210798740387, 0.7283053994178772, 0.7279091477394104, 0.7322678565979004, 0.7260599732398987], "val_loss": [1.9411474636622839, 1.9073987688337053, 1.8618918827601842, 1.7942941529410226, 1.6962305818285262, 1.563225541796003, 1.407024724142892, 1.249403953552246, 1.113302196775164, 1.0086335795266288, 0.9272962978907994, 0.8689114706856864, 0.8237877913883754, 0.7838873182024274, 0.7554689986365182, 0.7308431012289864, 0.7117262056895665, 0.6937681606837681, 0.6779346295765468, 0.6682636567524501, 0.6581252643040248, 0.6459637880325317, 0.6374404600688389, 0.6262702430997577, 0.6194421223231724, 0.6126450300216675, 0.6075724363327026, 0.5982142516544887, 0.5965512139456612, 0.5879737479346139, 0.5878598179136004, 0.5807465485164097, 0.5739706414086478, 0.5708026545388358, 0.5668213708060128, 0.5634495190211705, 0.5590560776846749, 0.5588000161307198, 0.5541091646466937, 0.5502839599336896, 0.5473557029451642], "val_accuracy": [0.28166666626930237, 0.38333332538604736, 0.43166667222976685, 0.4946666657924652, 0.5346666574478149, 0.5609999895095825, 0.5763333439826965, 0.5956666469573975, 0.6336666941642761, 0.6556666493415833, 0.6713333129882812, 0.6793333292007446, 0.6823333501815796, 0.6936666369438171, 0.6996666789054871, 0.7043333053588867, 0.7096666693687439, 0.7166666388511658, 0.7203333377838135, 0.7183333039283752, 0.721666693687439, 0.7319999933242798, 0.734000027179718, 0.7323333621025085, 0.731333315372467, 0.737666666507721, 0.7350000143051147, 0.7396666407585144, 0.7493333220481873, 0.7493333220481873, 0.75, 0.7513333559036255, 0.7543333172798157, 0.7573333382606506, 0.7543333172798157, 0.7620000243186951, 0.7593333125114441, 0.7599999904632568, 0.7613333463668823, 0.7613333463668823, 0.7613333463668823]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [6, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 0, 0, 0, 0, 0, 1], [0, 1, 1], [2], [5, 4], [8, 0, 19], [0, 1, 0, 1], [0, 0], [7, 9], [2], [72], [1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7], [1, 0, 1, 3], [24, 57]], "fitness": -0.10571428388357162, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 0, 3, 2, 2, 0, 1, 1, 0, 1, 0], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.divide_no_nan(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.constant(9.89496155e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [1283365744.593943, 24083543531.91494, 114140908386.97134, 312321082759.28674, 664134703125.37, 1214150691817.1423], "accuracy": [0.09602430462837219, 0.09959053993225098, 0.09866596013307571, 0.09747721254825592, 0.09945846349000931, 0.09800554811954498], "val_loss": [4816767122.285714, 38450798592.0, 129682702336.0, 307381834313.1429, 600169831277.7142, 1036871719789.7142], "val_accuracy": [0.10100000351667404, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 0, 0, 0, 0, 0, 1], [0, 1, 1], [2], [5, 4], [8, 0, 19], [0, 1, 0, 1], [1], [], [2], [], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7], [1, 2, 0, 3], [24, 87]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 6, 3, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, beta), tf.math.negative(tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09536388516426086, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 0, 1, 0, 0, 0, 1], [1, 1, 1], [2], [5, 2], [8, 0, 19], [1, 1, 0, 1], [1], [], [2], [], [1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7], [1, 2, 0, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(grad, tf.math.add(alpha, grad)), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08585391938686371, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 0, 1, 0, 0, 0, 1], [0, 1, 1], [2, 8, 1, 4, 0, 0, 5, 1, 4, 4, 1, 3, 6, 8, 3, 7, 4, 3, 5, 2, 0, 2, 1, 5, 6, 2, 2, 6, 4, 1, 7, 4, 6, 6, 8, 8, 6, 9, 0, 3, 7, 8, 2, 3], [5, 2], [8, 0, 19, 28, 4, 10], [1, 1, 0, 1], [1], [], [2], [], [1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 1, 0, 5, 7], [1, 0, 0, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), beta), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08638224750757217, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 0, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1], [2, 1, 8, 5, 4, 2, 6, 3, 9], [5, 4, 3, 0, 2, 0], [8, 0, 19], [0, 1, 0, 1], [1], [], [2], [], [1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 5, 7], [0, 0, 0, 3], [66, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 6, 6, 3, 3, 0, 15, 15, 9, 6, 3, 1, 1, 0, 1, 0, 1, 0, 1, 1], "tree_depth": 29, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, tf.math.subtract(tf.math.add(alpha, grad), tf.math.square(tf.math.add(alpha, alpha)))))), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.subtract(tf.math.sqrt(tf.math.add(beta, tf.math.square(tf.math.pow(grad, tf.math.add(tf.math.divide_no_nan(tf.math.multiply(tf.math.add(beta, grad), tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), beta))))), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.constant(9.65554804e-01, shape=shape, dtype=tf.float32)", "other_info": {"loss": [2.302870262725683, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597, 2.3025851429508597], "accuracy": [0.09840179979801178, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985, 1.973644392830985], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 0, 1, 0, 0, 0, 1], [0, 1, 1], [2], [5, 2], [8, 0, 19], [0, 1, 0, 1], [0], [5], [2], [], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [4, 6, 0, 5, 7], [1, 0, 0, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 2, 1, 1, 0, 0, 1, 0, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.square(sigma)), lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.0754193663597107, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1], [2, 9, 7, 7, 3, 9, 1, 1, 4, 2, 4], [5, 4, 0], [8, 0, 19], [0, 1, 0, 1], [1], [], [2], [], [1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 5, 7], [2, 0, 0, 3], [24, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 6, 3, 3, 1, 1, 0, 1, 0, 1, 0, 1, 0], "tree_depth": 17, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.multiply(tf.math.add(beta, tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), grad)), tf.math.add(beta, grad))), tf.math.add(beta, tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: beta", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09311848133802414, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 1, 0, 0, 0, 0, 1], [0, 1, 0], [2, 9, 7, 7, 3, 9, 1, 1, 4, 2, 4], [5, 4], [8, 0, 19], [0, 1, 0, 1], [1], [], [4], [], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7], [2, 0, 0, 3], [86, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 3, 3, 2, 1, 1, 1, 1, 0, 1, 0, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(grad, tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.add(grad, tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, grad), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(beta, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07779685407876968, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 0, 1, 0, 0, 0, 1], [0, 1, 1], [2], [0, 4], [8, 0, 19], [1, 1, 0, 1], [1], [], [2], [], [0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7], [1, 0, 0, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 1, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09245806187391281, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 0, 1, 0, 0, 0, 1], [1, 1, 0], [2, 9, 7, 7, 3, 9, 1, 1, 4, 2, 4], [1, 4], [8, 0, 19], [1, 1, 0, 1], [1], [], [2], [], [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7], [0, 0, 0, 3], [98, 57, 84]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 3], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, alpha), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(tf.constant(9.99944439e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)), tf.math.negative(tf.math.square(tf.constant(9.99060945e-01, shape=shape, dtype=tf.float32))))", "other_info": {"loss": [695039622.022024, 13200221450.04253, 62832874527.51393, 172238001082.88574, 366628698463.38715, 670730753911.3945], "accuracy": [0.09536388516426086, 0.09959053993225098, 0.09747721254825592, 0.09721305221319199, 0.10038304328918457, 0.09734513610601425], "val_loss": [2658294491.428571, 21258663058.285713, 71739136877.71428, 170038830226.2857, 332093559369.1429, 573846753865.1428], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 1, 0, 0, 0, 0, 1], [0, 1, 1], [4], [5, 4], [8, 0, 19], [0, 1, 0, 1], [1], [], [2], [], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 0, 7, 9, 7], [2, 0, 1, 3, 3], [97, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 8, 5, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.pow(grad, tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(tf.math.add(tf.constant(9.99932002e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))), alpha)", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.09840179979801178, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 0, 1, 0, 0, 0, 1], [1, 1, 1], [2], [5, 4], [8, 0, 19], [1, 1, 0, 1], [1], [], [2], [], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 0, 7, 5, 7], [1, 0, 0, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 4, 2, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.negative(alpha), tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10593052208423615, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1], [0, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 0, 1, 0, 0, 0, 1], [1, 0, 1], [6, 9, 7, 7, 3, 9, 1, 1, 4, 2, 4], [5, 2], [8, 0, 19], [1, 1, 0, 1], [1], [], [2], [], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7], [2, 0, 1, 3], [24, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 3, 1, 2, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.add(tf.math.add(alpha, grad), tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(beta, tf.constant(5.75728612e-03, shape=shape, dtype=tf.float32))", "other_info": {"loss": [8.30569537101954e+25, 8829.456769405875, 26836.795793570862, 54842.37634662693, 92935.67051083081, 140858.3417027143], "accuracy": [0.0936468094587326, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777, 0.09998679161071777], "val_loss": [3371.791085379464, 15266.637276785714, 35745.325892857145, 64811.33482142857, 102452.22544642857, 148689.10714285713], "val_accuracy": [0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397, 0.09933333098888397]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1], [2, 2, 3, 0, 6, 8, 3, 1], [5, 4, 5, 1, 2, 5, 4], [8, 0, 19], [0, 1, 0, 1], [1], [], [2], [], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 5, 7], [0, 0, 0, 3], [28, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 15, 15, 8, 7, 0, 1, 1, 0, 1, 0, 2, 1, 1, 1], "tree_depth": 25, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.negative(tf.math.divide_no_nan(tf.math.add(beta, grad), tf.math.sqrt(tf.math.add(beta, tf.math.multiply(alpha, tf.math.add(beta, beta))))))))))), tf.math.subtract(tf.math.add(beta, grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2905.9390187835997, 52019.97266708493, 244072.0182026813, 665094.2878252543, 1411131.716038172, 2576358.4887399287], "accuracy": [0.09536388516426086, 0.09959053993225098, 0.09747721254825592, 0.09734513610601425, 0.10038304328918457, 0.09734513610601425], "val_loss": [10688.111328125, 82992.62276785714, 277608.3214285714, 655220.25, 1276514.2857142857, 2202174.9285714286], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [0, 0, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 0, 1, 0, 0, 0, 1], [1, 1, 1], [2], [3, 4], [8, 0, 19], [1, 1, 0, 1], [1], [], [2], [], [1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 6, 4, 3, 7], [1, 0, 0, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 6, 6, 3, 3, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(tf.math.subtract(grad, tf.math.add(alpha, grad)), tf.math.square(tf.math.add(alpha, alpha))), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3025150592883565, 2.3021212447635913, 2.303826259410991, 2.3025607367737133, 2.3027161438042194, 2.302614168547022], "accuracy": [0.09087307006120682, 0.09259014576673508, 0.08691058307886124, 0.08625016361474991, 0.08902391046285629, 0.08638224750757217], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [1, 2, 1, 1], [50], [1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1], [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1], [2, 2, 7, 5, 3, 2, 4, 6, 9, 3, 6, 7, 2, 3, 7, 6, 0, 9, 9, 0, 0, 9, 8], [1, 4, 4, 5, 2, 3, 1, 0, 5, 0, 5], [8, 0, 19, 94, 9, 70], [1, 1, 0, 1], [1], [], [2], [], [1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7], [1, 0, 0, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 34, 34, 23, 11, 6, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 44, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, alpha), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(tf.math.add(beta, alpha), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.add(tf.math.pow(tf.math.divide_no_nan(grad, tf.constant(2.28478855e-04, shape=shape, dtype=tf.float32)), tf.math.add(beta, grad)), tf.math.multiply(tf.math.divide_no_nan(beta, tf.math.add(beta, grad)), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.add(alpha, tf.math.multiply(tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.divide_no_nan(tf.math.negative(tf.constant(4.53978687e-05, shape=shape, dtype=tf.float32)), tf.constant(2.10440443e-03, shape=shape, dtype=tf.float32))), grad)), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)))), tf.math.add(beta, tf.math.negative(tf.math.add(beta, tf.math.negative(tf.constant(2.79614739e-04, shape=shape, dtype=tf.float32)))))))))))))), tf.math.add(beta, tf.constant(9.84348514e-01, shape=shape, dtype=tf.float32))))), tf.math.sqrt(grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: alpha", "other_info": {"loss": [2.3025150592883565, 2.3021212447635913, 2.303826259410991, 2.3025607367737133, 2.3027161438042194, 2.302614168547022], "accuracy": [0.09087307006120682, 0.09259014576673508, 0.08691058307886124, 0.08625016361474991, 0.08902391046285629, 0.08638224750757217], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [2, 1, 5, 7, 8], [2, 2, 1, 1], [50], [0, 0, 1, 0, 0, 0, 1], [0, 1, 1], [2], [5, 4], [8, 0, 19], [1, 1, 0, 1], [1], [], [2], [], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7], [1, 3, 0, 3], [4, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, sigma), tf.constant(1.01848815e-04, shape=shape, dtype=tf.float32))", "other_info": {"loss": [2.3025150592883565, 2.3021212447635913, 2.303826259410991, 2.3025607367737133, 2.3027161438042194, 2.302614168547022], "accuracy": [0.09087307006120682, 0.09259014576673508, 0.08691058307886124, 0.08625016361474991, 0.08902391046285629, 0.08638224750757217], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 1, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 0, 0, 0, 0, 0, 1], [0, 1, 1], [2], [5, 4], [8, 0, 19], [1, 1, 0, 1], [1], [], [2], [], [0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 3, 0, 5, 7], [1, 0, 3, 3], [28, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 0, 0, 0, 0, 5, 2, 3, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, grad), tf.math.add(beta, grad)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.divide_no_nan(tf.math.multiply(alpha, tf.constant(1.28252101e-02, shape=shape, dtype=tf.float32)), sigma)", "other_info": {"loss": [2.3025150592883565, 2.3021212447635913, 2.303826259410991, 2.3025607367737133, 2.3027161438042194, 2.302614168547022], "accuracy": [0.09087307006120682, 0.09259014576673508, 0.08691058307886124, 0.08625016361474991, 0.08902391046285629, 0.08638224750757217], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}, {"genotype": [[0], [0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1], [1, 0, 1, 1, 0, 1, 1, 0, 1], [7, 1, 5, 7, 8], [2, 2, 1, 1], [50], [1, 0, 1, 0, 0, 0, 1], [1, 1, 1], [2], [5, 4], [8, 0, 19], [1, 1, 0, 1], [1], [], [2], [], [1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [6, 5, 0, 5, 7], [3, 0, 0, 3], [24, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0], "tree_depth": 4, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: sigma", "other_info": {"loss": [2.3025150592883565, 2.3021212447635913, 2.303826259410991, 2.3025607367737133, 2.3027161438042194, 2.302614168547022], "accuracy": [0.09087307006120682, 0.09259014576673508, 0.08691058307886124, 0.08625016361474991, 0.08902391046285629, 0.08638224750757217], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]