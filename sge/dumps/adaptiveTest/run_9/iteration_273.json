[{"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 6, 3, 2, 7, 5, 1, 8, 6, 5, 8, 9], [1, 3, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.8385714292526245, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 4, 5, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 16, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, alpha), tf.math.divide_no_nan(tf.math.add(beta, tf.math.multiply(grad, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.091814370848767, 2.0705981186871925, 1.676080380511432, 1.0809117537825854, 0.9105961105889963, 0.798430178789273, 0.7402795629258232, 0.6450838201774377, 0.6357446344159204, 0.619468086824882, 0.6041970752674622, 0.5980574113739133, 0.5675277383241514, 0.5206209099319522, 0.5214144199074945, 0.5495437043036893, 0.520017610257879, 0.5269516760749335, 0.49362992600301286, 0.47419886242019155, 0.484482392501428, 0.4525865317532541, 0.44314114653580794, 0.45347216407290036, 0.4446198865367815, 0.4430063948804802, 0.41098818737974635, 0.4299305316054385, 0.4215783784811791, 0.39247601574847507, 0.3926422587514569, 0.3762548001505963, 0.38276698496505146, 0.383367567258567, 0.3870094914863674], "accuracy": [0.3023378551006317, 0.32703739404678345, 0.4031171500682831, 0.6225069165229797, 0.6653017997741699, 0.7049266695976257, 0.7236824631690979, 0.7568352818489075, 0.7588165402412415, 0.759080708026886, 0.7740060687065125, 0.7769119143486023, 0.7839123010635376, 0.8068947196006775, 0.8013472557067871, 0.8021397590637207, 0.8009510040283203, 0.7969884872436523, 0.8131026029586792, 0.8235371708869934, 0.8165367841720581, 0.8343679904937744, 0.8368775844573975, 0.8264430165290833, 0.8318583965301514, 0.8355567455291748, 0.8454629778862, 0.837537944316864, 0.837537944316864, 0.8529917001724243, 0.8533879518508911, 0.8574824929237366, 0.8610487580299377, 0.8564258217811584, 0.8560295701026917], "val_loss": [1.9443914549691337, 1.5088050365447998, 1.2088815484728133, 1.0107033252716064, 0.6059352159500122, 0.665845479284014, 0.51632673399789, 0.5111984014511108, 0.484385541507176, 0.5315042052950177, 0.5427606276103428, 0.4401099852153233, 0.42532351187297274, 0.4490946020398821, 0.5438651187079293, 0.44200967039380756, 0.47070913655417307, 0.432053736277989, 0.4399272884641375, 0.3897786055292402, 0.39409662996019634, 0.37745193924222675, 0.4146794080734253, 0.36763369185583933, 0.3656030467578343, 0.38272513662065777, 0.3600592868668692, 0.38588373150144306, 0.34967218126569477, 0.35475250652858187, 0.3575525624411447, 0.34766545466014315, 0.3411592585699899, 0.3740095240729196, 0.36036252975463867], "val_accuracy": [0.2383333295583725, 0.3019999861717224, 0.5410000085830688, 0.6190000176429749, 0.7246666550636292, 0.6949999928474426, 0.7639999985694885, 0.7736666798591614, 0.7703333497047424, 0.750333309173584, 0.7556666731834412, 0.8026666641235352, 0.8119999766349792, 0.79666668176651, 0.7603333592414856, 0.8009999990463257, 0.7860000133514404, 0.8166666626930237, 0.8029999732971191, 0.8333333134651184, 0.8286666870117188, 0.8353333473205566, 0.8063333630561829, 0.8346666693687439, 0.8389999866485596, 0.8403333425521851, 0.8393333554267883, 0.8236666917800903, 0.8473333120346069, 0.8516666889190674, 0.8460000157356262, 0.8510000109672546, 0.846666693687439, 0.8306666612625122, 0.8396666646003723]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 8, 6, 3, 3, 8, 9, 8, 6, 5, 8, 9], [2, 2, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.8294285535812378, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(tf.math.add(beta, beta), beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0917920568096102, 2.061297102768691, 1.6721261076214857, 1.0783909187655738, 0.8863613730833563, 0.8289399521462024, 0.6967891115302093, 0.6695589776981336, 0.6486766952265995, 0.6446431852161704, 0.5885704477717296, 0.5670377591644784, 0.5844487805549794, 0.5419245331735502, 0.5179403709178083, 0.528254227780899, 0.5084976318993856, 0.5082926104577651, 0.4942786771277112, 0.4712945568704838, 0.48087018741639914, 0.4493303841698077, 0.4277865074062234, 0.44988935642616545, 0.44042980854757835, 0.42589205172020667, 0.4170371971669183, 0.40423456179609135], "accuracy": [0.302469938993454, 0.3292827904224396, 0.41011756658554077, 0.6120724081993103, 0.6707172393798828, 0.6890767216682434, 0.7403249144554138, 0.7437590956687927, 0.7495707273483276, 0.750231146812439, 0.7750627398490906, 0.7848368883132935, 0.7794214487075806, 0.8005547523498535, 0.8038568496704102, 0.8035926818847656, 0.8067626357078552, 0.8038568496704102, 0.816008448600769, 0.8269713521003723, 0.819442629814148, 0.8364813327789307, 0.8430854678153992, 0.8323867321014404, 0.8356888294219971, 0.8388587832450867, 0.8437458872795105, 0.8521991968154907], "val_loss": [1.9444547380719865, 1.4712926319667272, 0.9785403864724296, 0.8945434093475342, 0.5951293706893921, 0.6496624946594238, 0.5413120644433158, 0.5384632008416312, 0.49536544936043875, 0.5357918228421893, 0.506082262311663, 0.5107145650046212, 0.4432410342352731, 0.4774656295776367, 0.43278179849897114, 0.42232537269592285, 0.4234396645001003, 0.425809987953731, 0.4315824168069022, 0.3867091110774449, 0.3916788271495274, 0.38483974763325285, 0.36328706571034025, 0.36770693744931904, 0.3602695209639413, 0.37799064602170673, 0.39024438176836285, 0.358923077583313], "val_accuracy": [0.2383333295583725, 0.3186666667461395, 0.5706666707992554, 0.6019999980926514, 0.7453333139419556, 0.6973333358764648, 0.7549999952316284, 0.750333309173584, 0.768666684627533, 0.7450000047683716, 0.7646666765213013, 0.7566666603088379, 0.8053333163261414, 0.7820000052452087, 0.7993333339691162, 0.815666675567627, 0.8133333325386047, 0.8243333101272583, 0.8063333630561829, 0.8346666693687439, 0.8339999914169312, 0.8276666402816772, 0.8450000286102295, 0.8383333086967468, 0.8450000286102295, 0.8446666598320007, 0.8303333520889282, 0.8386666774749756]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 2, 2, 5, 5, 1, 8, 6, 5, 8, 9], [1, 3, 0, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.8205714225769043, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 4, 5, 1, 3, 2, 1, 1, 0, 4, 2, 2, 1], "tree_depth": 14, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32))))), tf.math.add(beta, tf.math.add(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0917784824126966, 2.065781643802873, 1.6484408777749864, 1.144017698947134, 0.878915202576707, 0.7922403939002383, 0.7434924580968681, 0.6604891661183079, 0.6338307605427742, 0.6325427050902906, 0.5839752966638695, 0.5944974386003968, 0.5641042602895163, 0.5257087069149141, 0.5388234086386863, 0.5206897586343973, 0.5240383883666337, 0.5106291980704675, 0.48578770216020534, 0.4713133001182656, 0.4857790923357923, 0.44629261903774786, 0.4176167680437476, 0.45385870664992967, 0.44866466989071296, 0.43377161178732465, 0.4143588365171375, 0.4207604499643253, 0.3899444477661427, 0.4054259349208356], "accuracy": [0.302469938993454, 0.32743361592292786, 0.4084004759788513, 0.6034870147705078, 0.6660943031311035, 0.7034738063812256, 0.722757875919342, 0.7506273984909058, 0.7568352818489075, 0.7573636174201965, 0.7770439982414246, 0.7758552432060242, 0.7880068421363831, 0.8038568496704102, 0.7997622489929199, 0.8038568496704102, 0.8017435073852539, 0.8067626357078552, 0.817989706993103, 0.8256505131721497, 0.8142913579940796, 0.8363492488861084, 0.8461233377456665, 0.8315942287445068, 0.8289526104927063, 0.8397833704948425, 0.8438779711723328, 0.8457271456718445, 0.8527275323867798, 0.8504821062088013], "val_loss": [1.9442586217607771, 1.4683517047337122, 1.2837522370474679, 0.6616484778267997, 0.5867679119110107, 0.7357900483267648, 0.5196751356124878, 0.5142722129821777, 0.4786757060459682, 0.5177130358559745, 0.5527085406439645, 0.435326167515346, 0.42454990318843294, 0.4584344114576067, 0.4428349222455706, 0.42900785378047396, 0.4134443998336792, 0.4288505145481655, 0.4135910528046744, 0.38866984844207764, 0.3872082999774388, 0.3742341569491795, 0.36487899507795063, 0.36888123410088675, 0.3586078882217407, 0.387051590851375, 0.38882320267813547, 0.3572066000529698, 0.35091314145496916, 0.36486306360789705], "val_accuracy": [0.2396666705608368, 0.3176666796207428, 0.5536666512489319, 0.715666651725769, 0.7396666407585144, 0.6710000038146973, 0.7593333125114441, 0.7693333625793457, 0.781000018119812, 0.7566666603088379, 0.7473333477973938, 0.8059999942779541, 0.8163333535194397, 0.7873333096504211, 0.7976666688919067, 0.8130000233650208, 0.8183333277702332, 0.8159999847412109, 0.8136666417121887, 0.8370000123977661, 0.8326666951179504, 0.8360000252723694, 0.8433333039283752, 0.8443333506584167, 0.8463333249092102, 0.8410000205039978, 0.8333333134651184, 0.8386666774749756, 0.843999981880188, 0.8376666903495789]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 6, 3, 2, 4, 5, 1, 8, 6, 5, 8, 9], [1, 3, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.8128571510314941, "mapping_values": [1, 1, 1, 0, 1, 0, 11, 11, 5, 6, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.pow(grad, grad)), grad)))), tf.math.add(beta, beta)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.0918273957272278, 2.068476652566862, 1.683376314050848, 1.1088703882739905, 0.9774175240945948, 0.8394891126768984, 0.7290704599335021, 0.6774008040178753, 0.6522438127949505, 0.6366297002040856, 0.5891296961729191, 0.5983561242198302, 0.5749782980110321, 0.5376894187854817, 0.5364561605888067, 0.5447137853677608, 0.5240275341490429, 0.49827443418123657, 0.5030346822351308, 0.47105848964777575, 0.4950210510023266, 0.4484823264694327, 0.4377418912877307, 0.4316490053020495, 0.4757683426515695, 0.4180733568640653, 0.41799989437949875, 0.43955070458981405, 0.4121045093486936, 0.3842721990251963, 0.382761207211523, 0.4012271613689572, 0.3735833923027201, 0.3731453951363078, 0.3917255596540796], "accuracy": [0.3023378551006317, 0.32624489068984985, 0.4006075859069824, 0.6026945114135742, 0.6476026773452759, 0.6814159154891968, 0.7277770638465881, 0.7386078238487244, 0.7460044622421265, 0.7593448758125305, 0.7773081660270691, 0.776251494884491, 0.7839123010635376, 0.8010830879211426, 0.7997622489929199, 0.7989697456359863, 0.800818920135498, 0.8121780753135681, 0.8078193068504333, 0.8249900937080383, 0.8123101592063904, 0.8372738361358643, 0.837537944316864, 0.8429533839225769, 0.8173292875289917, 0.845859169960022, 0.8430854678153992, 0.837141752243042, 0.8479725122451782, 0.8605204224586487, 0.8621054291725159, 0.8490291833877563, 0.8651432991027832, 0.8625016212463379, 0.852331280708313], "val_loss": [1.9443584169660295, 1.4988360745566232, 1.0845273222242082, 1.0774064745221819, 0.6131971904209682, 0.6934948478426252, 0.5267820698874337, 0.5619808605739048, 0.48287032331739155, 0.5168675013950893, 0.5202749286379132, 0.4419306516647339, 0.42563765389578684, 0.4985368422099522, 0.44222261224474224, 0.42823533500943867, 0.4147613048553467, 0.4416590077536447, 0.43760997908455984, 0.40158067430768696, 0.40435419763837543, 0.3789246508053371, 0.3834359645843506, 0.3891933134623936, 0.36517538343157085, 0.4015760251453945, 0.3708661198616028, 0.3860680375780378, 0.34842348098754883, 0.3425515038626535, 0.3914920176778521, 0.34631489855902536, 0.3446576254708426, 0.4340430923870632, 0.3654800398009164], "val_accuracy": [0.23800000548362732, 0.2993333339691162, 0.5913333296775818, 0.5876666903495789, 0.7206666469573975, 0.6903333067893982, 0.7556666731834412, 0.737333357334137, 0.7753333449363708, 0.7603333592414856, 0.7633333206176758, 0.8016666769981384, 0.8136666417121887, 0.7726666927337646, 0.7950000166893005, 0.8130000233650208, 0.8169999718666077, 0.8140000104904175, 0.8026666641235352, 0.8333333134651184, 0.8233333230018616, 0.8370000123977661, 0.8333333134651184, 0.8256666660308838, 0.8426666855812073, 0.8240000009536743, 0.8393333554267883, 0.8346666693687439, 0.8489999771118164, 0.856333315372467, 0.8243333101272583, 0.8519999980926514, 0.8460000157356262, 0.8063333630561829, 0.8416666388511658]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [5, 4, 2, 9, 5, 5, 1, 8, 6, 5, 8, 9], [1, 3, 0, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 0, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [1, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.8080000281333923, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 7, 3, 2, 3, 3, 1, 2, 1, 4, 2, 2, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.square(tf.math.add(beta, tf.math.pow(tf.math.add(tf.math.add(beta, tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32)), tf.math.add(beta, tf.math.square(tf.math.square(tf.math.add(beta, tf.math.subtract(tf.math.add(beta, alpha), grad)))))), tf.math.add(beta, tf.constant(3.76354517e-01, shape=shape, dtype=tf.float32)))))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(tf.math.add(sigma, alpha), tf.math.add(sigma, tf.constant(9.99581233e-01, shape=shape, dtype=tf.float32)))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.091823273520066, 2.0662697703689394, 1.7101548947615315, 1.052003254318565, 0.9088829605728329, 0.7549370845563029, 0.7212317519105421, 0.661121610078231, 0.6587299464904968, 0.6448817163363361, 0.5901446175093443, 0.5812882468559014, 0.5648733166624227, 0.5249980522688464, 0.5396244176044094, 0.5186183265273944, 0.506742172123277, 0.5009799629918273, 0.5057142737629454, 0.46996254128409004, 0.48395960676340993, 0.4505937490772184, 0.43557356815406784, 0.46946370587089453, 0.43862781739899387, 0.43889828936188624, 0.4152685390676348, 0.42538278567524884, 0.4197069885330492, 0.387363290215181, 0.39789692472788035, 0.36702556922498425, 0.3906284846043653, 0.3754559037959681, 0.3854570963662676, 0.3779190348879757, 0.36730587660376707], "accuracy": [0.3023378551006317, 0.3280940353870392, 0.39704135060310364, 0.6194690465927124, 0.6536785364151001, 0.7181349992752075, 0.7300224304199219, 0.7512878179550171, 0.7445515990257263, 0.7561748623847961, 0.7765156626701355, 0.7852331399917603, 0.7909126877784729, 0.8079513907432556, 0.7984414100646973, 0.8090080618858337, 0.8115176558494568, 0.8079513907432556, 0.8096684813499451, 0.8290846943855286, 0.819970965385437, 0.8327829837799072, 0.8387266993522644, 0.8248580098152161, 0.8334434032440186, 0.8360850811004639, 0.8432175517082214, 0.8445383906364441, 0.8418967127799988, 0.8556333184242249, 0.8527275323867798, 0.863029956817627, 0.8506141901016235, 0.8631620407104492, 0.8551049828529358, 0.8570862412452698, 0.863558292388916], "val_loss": [1.9443935666765486, 1.5021346977778844, 1.0348324094499861, 0.826818687575204, 0.5962958676474435, 0.5824792385101318, 0.5499983855656215, 0.5322991950171334, 0.47735866478511263, 0.5415250914437431, 0.5536033085414341, 0.43240465436662945, 0.4299867919513157, 0.4367877415248326, 0.44123637676239014, 0.4379179733140128, 0.40890568494796753, 0.41932274614061626, 0.45011004379817415, 0.38607769353049143, 0.39027850117002216, 0.3844329459326608, 0.419040926865169, 0.3631518483161926, 0.3643770217895508, 0.3986352341515677, 0.36255888428006855, 0.3896972026143755, 0.3484471184866769, 0.3513213736670358, 0.35859603541237967, 0.33878942898341585, 0.3564654758998326, 0.41419622727802824, 0.364341744354793, 0.3870235596384321, 0.34945034980773926], "val_accuracy": [0.23866666853427887, 0.3036666810512543, 0.5293333530426025, 0.6043333411216736, 0.7296666502952576, 0.737333357334137, 0.7356666922569275, 0.7566666603088379, 0.7803333401679993, 0.7476666569709778, 0.7493333220481873, 0.809333324432373, 0.8186666369438171, 0.8063333630561829, 0.7983333468437195, 0.8046666383743286, 0.82833331823349, 0.8246666789054871, 0.7983333468437195, 0.8333333134651184, 0.8336666822433472, 0.8286666870117188, 0.8063333630561829, 0.8423333168029785, 0.843999981880188, 0.8346666693687439, 0.8379999995231628, 0.824999988079071, 0.8416666388511658, 0.8516666889190674, 0.8483333587646484, 0.8533333539962769, 0.8379999995231628, 0.8133333325386047, 0.8389999866485596, 0.8303333520889282, 0.8479999899864197]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 6, 3, 2, 5, 5, 1, 8, 6, 5, 8, 9], [1, 3, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 2, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.7171428799629211, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, alpha), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, beta))", "other_info": {"loss": [2.3027307352353996, 2.3019969368560393, 2.3002542640712234, 2.300915774825447, 2.2984357925060324, 2.297616853280673, 2.293923635272428, 2.292267272280601, 2.2907117115366398, 2.2900959998231443, 2.2878995751345776, 2.286167213898199, 2.2856678893112345, 2.2814310813513825, 2.279569568918712, 2.2804662502358353, 2.276785693951507, 2.274306867888197, 2.273415742123903, 2.2673894251499824, 2.265492866004951, 2.2631007604406275, 2.25874770725282, 2.255034181593337, 2.2504431250671337, 2.2477711688069273, 2.239630856549877, 2.230682614866485, 2.2246230595525325, 2.208562861312697, 2.1960757504900164, 2.176107299231803, 2.15974717662319, 2.13236729576918, 2.0866134888177, 2.038879683382712, 1.9587999706050392, 1.8588913783515686, 1.7166781160479068, 1.5777187914722994, 1.429523360145059, 1.3137080827802952, 1.2208599490795657, 1.1658289003775277, 1.1247866775979771, 1.064041804407629, 1.0443257108387805, 1.0846629859182135, 1.0072527524738768, 0.9665880379596832], "accuracy": [0.08942015469074249, 0.08928807079792023, 0.09391097724437714, 0.09351472556591034, 0.10276053100824356, 0.108440101146698, 0.11689341068267822, 0.11438383162021637, 0.11306300014257431, 0.12270505726337433, 0.1286487877368927, 0.1348566859960556, 0.13076211512088776, 0.13657376170158386, 0.1434420794248581, 0.13974376022815704, 0.14212125539779663, 0.1534803807735443, 0.15480121970176697, 0.160084530711174, 0.16642451286315918, 0.16880200803279877, 0.17976489663124084, 0.1784440577030182, 0.18821820616722107, 0.18874652683734894, 0.19178444147109985, 0.2056531459093094, 0.20974771678447723, 0.218465194106102, 0.23035265505313873, 0.23814556002616882, 0.24224013090133667, 0.24805177748203278, 0.2719587981700897, 0.2989037036895752, 0.32333904504776, 0.35345396399497986, 0.3937392830848694, 0.4353454113006592, 0.4802536070346832, 0.5196143388748169, 0.5587108731269836, 0.5765420794487, 0.591731607913971, 0.6108836531639099, 0.6206578016281128, 0.5999207496643066, 0.6264694333076477, 0.6520935297012329], "val_loss": [1.9709221294948034, 1.97015380859375, 1.9690462521144323, 1.967705454145159, 1.9662895202636719, 1.9647719519478934, 1.9631554739815849, 1.9614814349583216, 1.959761619567871, 1.9581176894051688, 1.9563931737627303, 1.954707145690918, 1.9530282701764787, 1.9511867250714983, 1.9492876189095634, 1.947282109941755, 1.9451067788260323, 1.942697320665632, 1.9402143614632743, 1.937194756099156, 1.9338593482971191, 1.9300784383501326, 1.925792625972203, 1.9210995265415736, 1.915555545261928, 1.9094814573015486, 1.901768343789237, 1.8926781245640345, 1.8823898860386439, 1.8683626992361886, 1.8513575281415666, 1.8293141637529646, 1.8002065931047713, 1.7606840814862932, 1.7049803393227714, 1.6286096232278007, 1.518533161708287, 1.3655549117497034, 1.1860847132546561, 1.0225823947361536, 0.9122310706547329, 0.8344136306217739, 0.8093819447926113, 0.7493666921343122, 0.7238409859793526, 0.7384233474731445, 0.7537939718791417, 0.6878039496285575, 0.7278232574462891, 0.8022803238459996], "val_accuracy": [0.04266666620969772, 0.047333333641290665, 0.05299999937415123, 0.06133333221077919, 0.070333331823349, 0.0820000022649765, 0.09333333373069763, 0.10533333569765091, 0.1133333370089531, 0.12466666847467422, 0.13199999928474426, 0.14399999380111694, 0.1550000011920929, 0.16433332860469818, 0.179666668176651, 0.19233334064483643, 0.20133332908153534, 0.2136666625738144, 0.22733333706855774, 0.24066667258739471, 0.2516666650772095, 0.26866665482521057, 0.2786666750907898, 0.2840000092983246, 0.2956666648387909, 0.312666654586792, 0.33000001311302185, 0.35100001096725464, 0.3763333261013031, 0.40033334493637085, 0.4099999964237213, 0.4193333387374878, 0.4336666762828827, 0.44866666197776794, 0.468666672706604, 0.4983333349227905, 0.5363333225250244, 0.5770000219345093, 0.6033333539962769, 0.6296666860580444, 0.6633333563804626, 0.6766666769981384, 0.668666660785675, 0.6983333230018616, 0.7113333344459534, 0.690666675567627, 0.6456666588783264, 0.6993333101272583, 0.6800000071525574, 0.659333348274231]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 6, 3, 2, 5, 5, 1, 8, 6, 5, 8, 9], [1, 3, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 2, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.6811428666114807, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 2, 1, 1, 0], "tree_depth": 5, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.8448847980547134, 2.3078974310149762, 2.2999634042061428, 2.1999769644131986, 2.3065143380072515, 2.303115334981279, 1.9970927288850002, 2.230501249025149, 1.6014975632469903, 1.4454583342458593, 1.0298031723935448, 0.9066913858727221, 0.8468627999125219, 0.7765142166808202, 0.7400875911657853, 0.7169651392034929, 0.692152223496027, 0.646208385033394, 0.6451648145603104, 0.6166666328725939, 0.6194850869418733, 0.589367586049138, 0.563001339878971, 0.5360343893599974, 0.5453186075307311, 0.5414607334823467, 0.5100198514851061, 0.49581261049833564, 0.46259056663689535, 0.47039851607695043, 0.4588584833456273, 0.46272236402433753, 0.4364784758175369, 0.4222010855960682, 0.43555729408636384, 0.39400979419504695, 0.4115185180061198, 0.40670512751455334, 0.39804036948958316, 0.40173873342322697, 0.3845316170701387, 0.37402595412918543, 0.36670059376640907, 0.361733600093767, 0.335764782791833, 0.3396741608311519, 0.3505731593852408, 0.3167293881814178, 0.31731684853324893], "accuracy": [0.23735305666923523, 0.09945846349000931, 0.10698718577623367, 0.18716153502464294, 0.09259014576673508, 0.10130762308835983, 0.320169061422348, 0.177255317568779, 0.49491479992866516, 0.5464271306991577, 0.6556597352027893, 0.6798309087753296, 0.7000396251678467, 0.7182670831680298, 0.7252674698829651, 0.7310791015625, 0.7425703406333923, 0.754589855670929, 0.7569673657417297, 0.7728173136711121, 0.7685906887054443, 0.7783648371696472, 0.7804781198501587, 0.7994980812072754, 0.796328067779541, 0.7923656105995178, 0.8067626357078552, 0.8141592741012573, 0.822348415851593, 0.8240655064582825, 0.8226125836372375, 0.834632158279419, 0.8352925777435303, 0.8385946154594421, 0.8329150676727295, 0.8525954484939575, 0.8389908671379089, 0.8442742228507996, 0.850350022315979, 0.8422929644584656, 0.8541803956031799, 0.8561616539955139, 0.8548408150672913, 0.8625016212463379, 0.8687095642089844, 0.8684453964233398, 0.8609166741371155, 0.8749174475669861, 0.8767666220664978], "val_loss": [1.9847470011029924, 1.9742334910801478, 1.9493420464651925, 1.9770032337733678, 1.9744405065264021, 1.966172763279506, 1.994354179927281, 1.3574231352124895, 1.5213049820491247, 0.7834454945155552, 0.6099603516714913, 0.6204265526362828, 0.6731116771697998, 0.5849239996501377, 0.551202825137547, 0.5268254280090332, 0.5381601878574916, 0.524501987865993, 0.5439326081957135, 0.5043569122041974, 0.4731452465057373, 0.48583844729832243, 0.46724280289241243, 0.5138095276696342, 0.4545511858803885, 0.42645238978522165, 0.45215565817696707, 0.4127853001867022, 0.4162348508834839, 0.4216846397944859, 0.40883930240358624, 0.39242754663739887, 0.39437549454825266, 0.4013621381350926, 0.3574374403272356, 0.3878923739705767, 0.38114265884671894, 0.37283127648489817, 0.3637997167451041, 0.3595633251326425, 0.3689014060156686, 0.39646693638392855, 0.35869630745479036, 0.3484621899468558, 0.37474984782082693, 0.35592959608350483, 0.3710416725703648, 0.3633776477405003, 0.3707925592150007], "val_accuracy": [0.09966666996479034, 0.10499999672174454, 0.10833333432674408, 0.10066666454076767, 0.10000000149011612, 0.15800000727176666, 0.10766666382551193, 0.5009999871253967, 0.45233333110809326, 0.7039999961853027, 0.7329999804496765, 0.7286666631698608, 0.7336666584014893, 0.7486666440963745, 0.7536666393280029, 0.7670000195503235, 0.746666669845581, 0.7570000290870667, 0.7570000290870667, 0.7630000114440918, 0.7956666946411133, 0.7870000004768372, 0.7996666431427002, 0.7570000290870667, 0.7996666431427002, 0.8169999718666077, 0.7919999957084656, 0.8253333568572998, 0.8183333277702332, 0.8090000152587891, 0.8246666789054871, 0.831333339214325, 0.8303333520889282, 0.8190000057220459, 0.8463333249092102, 0.8346666693687439, 0.8393333554267883, 0.8399999737739563, 0.8396666646003723, 0.8510000109672546, 0.8410000205039978, 0.8230000138282776, 0.8506666421890259, 0.8600000143051147, 0.8569999933242798, 0.859000027179718, 0.846666693687439, 0.8500000238418579, 0.8493333458900452]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 2, 2, 5, 5, 1, 8, 6, 5, 8, 9], [1, 3, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 8, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 63]], "fitness": -0.3774285614490509, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 3, 2, 1, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: alpha, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, alpha))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [2.3993218454938634, 2.8734902737871564, 2.4059896611455662, 2.363168584010888, 2.336501177102662, 2.3414894443036323], "accuracy": [0.2587504982948303, 0.17976489663124084, 0.11821424216032028, 0.09853387624025345, 0.09787346422672272, 0.09972262382507324], "val_loss": [1.9624597685677665, 1.9544814654758997, 2.0145907402038574, 1.9897204807826452, 2.012411253792899, 1.9812347548348563], "val_accuracy": [0.18400000035762787, 0.1080000028014183, 0.1003333330154419, 0.09933333098888397, 0.10199999809265137, 0.10199999809265137]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 9, 2, 2, 5, 5, 1, 8, 6, 5, 8, 9], [4, 3, 4, 5, 0, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [1, 0, 8, 9, 7], [5, 0], [88, 19], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.11999999731779099, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 3, 2, 1, 1, 0, 2, 1, 1, 0], "tree_depth": 7, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, grad), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(alpha)", "other_info": {"loss": [2.849064761275046, 2.3080143191952667, 2.300102190712518, 2.288790218361837, 2.3037686661612073, 2.3030457464837126, 2.3031302360007633, 2.3030587351789817], "accuracy": [0.23735305666923523, 0.09879804402589798, 0.10645885765552521, 0.1216483935713768, 0.09179764986038208, 0.0936468094587326, 0.09840179979801178, 0.09668471664190292], "val_loss": [1.9850056512015206, 1.9744680268423898, 1.9461565698896135, 1.974633080618722, 1.9739371708461217, 1.9736358778817313, 1.9737188475472587, 1.9737121718270438], "val_accuracy": [0.09966666996479034, 0.10233332961797714, 0.11299999803304672, 0.10000000149011612, 0.09933333098888397, 0.10066666454076767, 0.0989999994635582, 0.09799999743700027]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 8, 6, 0, 3, 8, 9, 8, 6, 5, 8, 9], [2, 2, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 3, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.1071428582072258, "mapping_values": [1, 1, 1, 0, 1, 0, 6, 6, 3, 3, 0, 3, 2, 1, 1, 0, 4, 2, 2, 0], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.sqrt(beta)), tf.math.add(beta, tf.math.divide_no_nan(beta, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, alpha))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, sigma))", "other_info": {"loss": [2.3024405637956993, 3.1306598406775156e+16, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08902391046285629, 0.109232597053051, 0.09787346422672272, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [1.9690333775111608, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.027000000700354576, 0.10766666382551193, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 4, 6, 3, 3, 8, 9, 8, 6, 5, 8, 9], [2, 2, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [8, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 3, 3, 1, 2, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.add(tf.math.add(beta, beta), tf.math.add(beta, beta))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.sqrt(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [3, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 2, 2, 5, 5, 1, 8, 6, 5, 8, 9], [2, 2, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 1, 0, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 3, 1, 1, 0, 0, 7, 4, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, beta), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, sigma)), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.negative(tf.math.pow(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07066437602043152, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [0, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 2, 2, 5, 5, 1, 8, 6, 5, 8, 9], [1, 3, 0, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [4, 0], [88, 19], [0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 5, 0, 4, 2, 1, 2, 3], [0, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 1, 14, 14, 8, 6, 1, 1, 0, 0, 0, 0, 2, 1, 1, 1], "tree_depth": 22, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.constant(9.99372875e-01, shape=shape, dtype=tf.float32)), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(tf.math.add(tf.math.add(beta, tf.math.add(tf.math.add(beta, alpha), tf.math.square(tf.math.square(grad)))), tf.math.add(beta, tf.math.subtract(tf.constant(9.99875353e-01, shape=shape, dtype=tf.float32), tf.math.add(beta, grad)))), tf.math.sqrt(grad))), beta)), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))", "other_info": {"loss": [96524135.49119264, 1816982909.8866727, 8369368218.7293625, 23790851573.65315, 50145703868.10303, 93459469127.10924], "accuracy": [0.1006472036242485, 0.10355303436517715, 0.09800554811954498, 0.09721305221319199, 0.10553427785634995, 0.09998679161071777], "val_loss": [368101211.4285714, 2942741211.428571, 9929427529.142857, 23533703168.0, 45960715117.71429, 79416751835.42857], "val_accuracy": [0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027, 0.09799999743700027]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 8, 6, 3, 3, 8, 9, 8, 6, 5, 8, 9], [2, 2, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 6, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 4, 2, 2, 1], "tree_depth": 8, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: beta, lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.divide_no_nan(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.14991414546966553, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 2, 2, 5, 5, 1, 8, 6, 5, 8, 9], [4, 3, 3, 5, 0, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [1, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 2, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 3, 2, 1, 1, 0, 4, 2, 2, 1], "tree_depth": 10, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, grad))), grad)), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.add(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [807701.1053641335, 2.3136369548122944, 2.3054133440603937, 2.3034412364256838, 2.3030808759859887, 2.3029170406965327, 2.3030348988320015], "accuracy": [0.10051512718200684, 0.09787346422672272, 0.09787346422672272, 0.09417514503002167, 0.09668471664190292, 0.0936468094587326, 0.09259014576673508], "val_loss": [1.9874541418892997, 1.9767736026218958, 1.974132810320173, 1.9737000465393066, 1.9736548832484655, 1.9735965047563826, 1.9736934389386858], "val_accuracy": [0.09799999743700027, 0.10366666316986084, 0.10000000149011612, 0.09799999743700027, 0.10366666316986084, 0.10366666316986084, 0.09933333098888397]}}, {"genotype": [[0], [1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 2, 2, 5, 5, 1, 8, 6, 5, 8, 9], [1, 3, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 1, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 9, 9, 4, 5, 0, 1, 1, 0, 1, 0, 4, 2, 2, 0], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: grad, lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(beta, tf.math.add(tf.math.add(beta, grad), grad)))), tf.math.add(beta, tf.math.add(grad, grad)))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, alpha), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, alpha))", "other_info": {"loss": [2.310198991904248, NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.08598599582910538, 0.09760929644107819, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [2.0183074133736745, NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.09933333098888397, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [1, 6, 2, 2, 5, 5, 1, 8, 6, 5, 8, 9], [4, 3, 3, 5, 0, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [0, 0, 1, 0, 0, 1], [2, 0, 8, 9, 7], [7, 0], [88, 19], [0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 1, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 5, 5, 2, 3, 0, 4, 3, 2, 1, 0, 13, 7, 6, 1], "tree_depth": 13, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.add(beta, tf.math.subtract(tf.math.add(beta, tf.math.divide_no_nan(grad, tf.math.add(beta, grad))), tf.math.add(beta, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.add(sigma, tf.math.add(sigma, tf.math.negative(tf.math.add(sigma, grad))))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(tf.math.negative(tf.math.pow(tf.math.add(alpha, alpha), tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32))), tf.math.subtract(tf.math.add(beta, sigma), sigma)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 6, 3, 2, 5, 5, 1, 8, 6, 5, 8, 9], [1, 3, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [0, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [1, 0, 8, 9, 7], [4, 0], [88, 19], [0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 2, 2, 1, 1, 0, 10, 10, 5, 5, 0, 3, 2, 1, 1, 0, 4, 2, 2, 1], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, tf.math.sqrt(tf.math.add(alpha, grad))), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(beta, tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), grad)))))), grad), lambda shape,  alpha, beta, sigma, grad: tf.math.add(sigma, tf.math.subtract(sigma, tf.math.add(sigma, grad))), lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32)))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.10091137140989304, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [3, 6, 3, 2, 5, 5, 1, 8, 6, 5, 8, 9], [1, 3, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [1, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [1, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.10000000149011612, "mapping_values": [1, 1, 1, 0, 1, 0, 10, 10, 5, 5, 0, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 19, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: tf.math.multiply(tf.math.add(beta, tf.math.divide_no_nan(alpha, tf.math.add(beta, tf.math.multiply(tf.math.add(beta, grad), tf.math.add(tf.math.add(beta, tf.math.square(tf.math.add(beta, grad))), grad))))), grad), lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(alpha, tf.math.negative(tf.math.pow(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [NaN, NaN, NaN, NaN, NaN, NaN], "accuracy": [0.07066437602043152, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004, 0.10011887550354004], "val_loss": [NaN, NaN, NaN, NaN, NaN, NaN], "val_accuracy": [0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084, 0.10366666316986084]}}, {"genotype": [[0], [0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1], [1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1], [8, 6, 9, 0, 9, 1, 7, 0, 3, 3, 2, 2, 3, 2, 3, 4, 5, 1, 7, 5, 7, 1, 1, 2, 6, 4, 5, 9, 2], [2, 0, 2, 2, 0, 1, 2, 1, 0, 2, 2, 0, 0, 0, 2, 0, 2, 1], [86, 70, 39, 25, 98, 52, 94, 1, 97, 93], [1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1], [1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1], [2, 8, 6, 3, 3, 8, 9, 8, 6, 5, 8, 9], [5, 2, 3, 5, 3, 2, 2, 4, 2, 0], [94, 47, 79, 81, 53, 45], [1, 1, 0, 0, 0, 1], [0, 1, 1, 0, 0, 1], [2, 0, 8, 9, 7], [1, 0], [88, 19], [0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1], [0, 3, 0, 4, 2, 1, 2, 3], [3, 0, 0, 2, 3, 3, 2], [48, 57]], "fitness": -0.03685714304447174, "mapping_values": [1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 7, 4, 3, 2], "tree_depth": 12, "phenotype": "alpha_func, beta_func, sigma_func, grad_func = lambda shape,  alpha, grad: tf.math.add(alpha, grad), lambda shape,  alpha, beta, grad: grad, lambda shape,  alpha, beta, sigma, grad: sigma, lambda shape,  alpha, beta, sigma, grad: tf.math.negative(tf.math.multiply(sigma, tf.math.negative(tf.math.pow(tf.constant(4.24816868e-01, shape=shape, dtype=tf.float32), tf.constant(8.19823407e-01, shape=shape, dtype=tf.float32)))))", "other_info": {"loss": [2.3028241005304104, 2.302660532190406, 2.301907919873777, 2.3038929439633358, 2.302932162594093, 2.303610303288264], "accuracy": [0.08889182657003403, 0.0870426595211029, 0.09034473448991776, 0.08691058307886124, 0.09100515395402908, 0.0940430611371994], "val_loss": [1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294, 1.9712321417672294], "val_accuracy": [0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455, 0.03966666758060455]}}]